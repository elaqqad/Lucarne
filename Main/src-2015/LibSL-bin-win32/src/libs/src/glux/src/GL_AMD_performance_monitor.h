
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:27 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_performance_monitor__
#define __GLUX_GL_AMD_performance_monitor__

GLUX_NEW_PLUGIN(GL_AMD_performance_monitor);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COUNTER_TYPE_AMD
#  define GL_COUNTER_TYPE_AMD 0x8BC0
#endif
#ifndef GL_COUNTER_RANGE_AMD
#  define GL_COUNTER_RANGE_AMD 0x8BC1
#endif
#ifndef GL_UNSIGNED_INT64_AMD
#  define GL_UNSIGNED_INT64_AMD 0x8BC2
#endif
#ifndef GL_PERCENTAGE_AMD
#  define GL_PERCENTAGE_AMD 0x8BC3
#endif
#ifndef GL_PERFMON_RESULT_AVAILABLE_AMD
#  define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
#endif
#ifndef GL_PERFMON_RESULT_SIZE_AMD
#  define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
#endif
#ifndef GL_PERFMON_RESULT_AMD
#  define GL_PERFMON_RESULT_AMD 0x8BC6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXBEGINPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXENDPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
extern PFNGLUXGETPERFMONITORGROUPSAMDPROC glGetPerfMonitorGroupsAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
extern PFNGLUXGETPERFMONITORCOUNTERSAMDPROC glGetPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
extern PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC glGetPerfMonitorGroupStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
extern PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC glGetPerfMonitorCounterStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
extern PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC glGetPerfMonitorCounterInfoAMD;
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
extern PFNGLUXGENPERFMONITORSAMDPROC glGenPerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
extern PFNGLUXDELETEPERFMONITORSAMDPROC glDeletePerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
extern PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC glSelectPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
extern PFNGLUXBEGINPERFMONITORAMDPROC glBeginPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
extern PFNGLUXENDPERFMONITORAMDPROC glEndPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
extern PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC glGetPerfMonitorCounterDataAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:45 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_performance_monitor__
#define __GLUX_GL_AMD_performance_monitor__

GLUX_NEW_PLUGIN(GL_AMD_performance_monitor);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COUNTER_TYPE_AMD
#  define GL_COUNTER_TYPE_AMD 0x8BC0
#endif
#ifndef GL_COUNTER_RANGE_AMD
#  define GL_COUNTER_RANGE_AMD 0x8BC1
#endif
#ifndef GL_UNSIGNED_INT64_AMD
#  define GL_UNSIGNED_INT64_AMD 0x8BC2
#endif
#ifndef GL_PERCENTAGE_AMD
#  define GL_PERCENTAGE_AMD 0x8BC3
#endif
#ifndef GL_PERFMON_RESULT_AVAILABLE_AMD
#  define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
#endif
#ifndef GL_PERFMON_RESULT_SIZE_AMD
#  define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
#endif
#ifndef GL_PERFMON_RESULT_AMD
#  define GL_PERFMON_RESULT_AMD 0x8BC6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXBEGINPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXENDPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
extern PFNGLUXGETPERFMONITORGROUPSAMDPROC glGetPerfMonitorGroupsAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
extern PFNGLUXGETPERFMONITORCOUNTERSAMDPROC glGetPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
extern PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC glGetPerfMonitorGroupStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
extern PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC glGetPerfMonitorCounterStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
extern PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC glGetPerfMonitorCounterInfoAMD;
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
extern PFNGLUXGENPERFMONITORSAMDPROC glGenPerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
extern PFNGLUXDELETEPERFMONITORSAMDPROC glDeletePerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
extern PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC glSelectPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
extern PFNGLUXBEGINPERFMONITORAMDPROC glBeginPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
extern PFNGLUXENDPERFMONITORAMDPROC glEndPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
extern PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC glGetPerfMonitorCounterDataAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:54 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_performance_monitor__
#define __GLUX_GL_AMD_performance_monitor__

GLUX_NEW_PLUGIN(GL_AMD_performance_monitor);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COUNTER_TYPE_AMD
#  define GL_COUNTER_TYPE_AMD 0x8BC0
#endif
#ifndef GL_COUNTER_RANGE_AMD
#  define GL_COUNTER_RANGE_AMD 0x8BC1
#endif
#ifndef GL_UNSIGNED_INT64_AMD
#  define GL_UNSIGNED_INT64_AMD 0x8BC2
#endif
#ifndef GL_PERCENTAGE_AMD
#  define GL_PERCENTAGE_AMD 0x8BC3
#endif
#ifndef GL_PERFMON_RESULT_AVAILABLE_AMD
#  define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
#endif
#ifndef GL_PERFMON_RESULT_SIZE_AMD
#  define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
#endif
#ifndef GL_PERFMON_RESULT_AMD
#  define GL_PERFMON_RESULT_AMD 0x8BC6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXBEGINPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXENDPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
extern PFNGLUXGETPERFMONITORGROUPSAMDPROC glGetPerfMonitorGroupsAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
extern PFNGLUXGETPERFMONITORCOUNTERSAMDPROC glGetPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
extern PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC glGetPerfMonitorGroupStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
extern PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC glGetPerfMonitorCounterStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
extern PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC glGetPerfMonitorCounterInfoAMD;
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
extern PFNGLUXGENPERFMONITORSAMDPROC glGenPerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
extern PFNGLUXDELETEPERFMONITORSAMDPROC glDeletePerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
extern PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC glSelectPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
extern PFNGLUXBEGINPERFMONITORAMDPROC glBeginPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
extern PFNGLUXENDPERFMONITORAMDPROC glEndPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
extern PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC glGetPerfMonitorCounterDataAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:13 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_performance_monitor__
#define __GLUX_GL_AMD_performance_monitor__

GLUX_NEW_PLUGIN(GL_AMD_performance_monitor);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COUNTER_TYPE_AMD
#  define GL_COUNTER_TYPE_AMD 0x8BC0
#endif
#ifndef GL_COUNTER_RANGE_AMD
#  define GL_COUNTER_RANGE_AMD 0x8BC1
#endif
#ifndef GL_UNSIGNED_INT64_AMD
#  define GL_UNSIGNED_INT64_AMD 0x8BC2
#endif
#ifndef GL_PERCENTAGE_AMD
#  define GL_PERCENTAGE_AMD 0x8BC3
#endif
#ifndef GL_PERFMON_RESULT_AVAILABLE_AMD
#  define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
#endif
#ifndef GL_PERFMON_RESULT_SIZE_AMD
#  define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
#endif
#ifndef GL_PERFMON_RESULT_AMD
#  define GL_PERFMON_RESULT_AMD 0x8BC6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXBEGINPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXENDPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
extern PFNGLUXGETPERFMONITORGROUPSAMDPROC glGetPerfMonitorGroupsAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
extern PFNGLUXGETPERFMONITORCOUNTERSAMDPROC glGetPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
extern PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC glGetPerfMonitorGroupStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
extern PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC glGetPerfMonitorCounterStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
extern PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC glGetPerfMonitorCounterInfoAMD;
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
extern PFNGLUXGENPERFMONITORSAMDPROC glGenPerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
extern PFNGLUXDELETEPERFMONITORSAMDPROC glDeletePerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
extern PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC glSelectPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
extern PFNGLUXBEGINPERFMONITORAMDPROC glBeginPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
extern PFNGLUXENDPERFMONITORAMDPROC glEndPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
extern PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC glGetPerfMonitorCounterDataAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:30 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_performance_monitor__
#define __GLUX_GL_AMD_performance_monitor__

GLUX_NEW_PLUGIN(GL_AMD_performance_monitor);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COUNTER_TYPE_AMD
#  define GL_COUNTER_TYPE_AMD 0x8BC0
#endif
#ifndef GL_COUNTER_RANGE_AMD
#  define GL_COUNTER_RANGE_AMD 0x8BC1
#endif
#ifndef GL_UNSIGNED_INT64_AMD
#  define GL_UNSIGNED_INT64_AMD 0x8BC2
#endif
#ifndef GL_PERCENTAGE_AMD
#  define GL_PERCENTAGE_AMD 0x8BC3
#endif
#ifndef GL_PERFMON_RESULT_AVAILABLE_AMD
#  define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
#endif
#ifndef GL_PERFMON_RESULT_SIZE_AMD
#  define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
#endif
#ifndef GL_PERFMON_RESULT_AMD
#  define GL_PERFMON_RESULT_AMD 0x8BC6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXBEGINPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXENDPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
extern PFNGLUXGETPERFMONITORGROUPSAMDPROC glGetPerfMonitorGroupsAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
extern PFNGLUXGETPERFMONITORCOUNTERSAMDPROC glGetPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
extern PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC glGetPerfMonitorGroupStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
extern PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC glGetPerfMonitorCounterStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
extern PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC glGetPerfMonitorCounterInfoAMD;
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
extern PFNGLUXGENPERFMONITORSAMDPROC glGenPerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
extern PFNGLUXDELETEPERFMONITORSAMDPROC glDeletePerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
extern PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC glSelectPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
extern PFNGLUXBEGINPERFMONITORAMDPROC glBeginPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
extern PFNGLUXENDPERFMONITORAMDPROC glEndPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
extern PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC glGetPerfMonitorCounterDataAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:33 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_performance_monitor__
#define __GLUX_GL_AMD_performance_monitor__

GLUX_NEW_PLUGIN(GL_AMD_performance_monitor);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COUNTER_TYPE_AMD
#  define GL_COUNTER_TYPE_AMD 0x8BC0
#endif
#ifndef GL_COUNTER_RANGE_AMD
#  define GL_COUNTER_RANGE_AMD 0x8BC1
#endif
#ifndef GL_UNSIGNED_INT64_AMD
#  define GL_UNSIGNED_INT64_AMD 0x8BC2
#endif
#ifndef GL_PERCENTAGE_AMD
#  define GL_PERCENTAGE_AMD 0x8BC3
#endif
#ifndef GL_PERFMON_RESULT_AVAILABLE_AMD
#  define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
#endif
#ifndef GL_PERFMON_RESULT_SIZE_AMD
#  define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
#endif
#ifndef GL_PERFMON_RESULT_AMD
#  define GL_PERFMON_RESULT_AMD 0x8BC6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXBEGINPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXENDPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
extern PFNGLUXGETPERFMONITORGROUPSAMDPROC glGetPerfMonitorGroupsAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
extern PFNGLUXGETPERFMONITORCOUNTERSAMDPROC glGetPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
extern PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC glGetPerfMonitorGroupStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
extern PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC glGetPerfMonitorCounterStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
extern PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC glGetPerfMonitorCounterInfoAMD;
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
extern PFNGLUXGENPERFMONITORSAMDPROC glGenPerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
extern PFNGLUXDELETEPERFMONITORSAMDPROC glDeletePerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
extern PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC glSelectPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
extern PFNGLUXBEGINPERFMONITORAMDPROC glBeginPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
extern PFNGLUXENDPERFMONITORAMDPROC glEndPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
extern PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC glGetPerfMonitorCounterDataAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:55 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_performance_monitor__
#define __GLUX_GL_AMD_performance_monitor__

GLUX_NEW_PLUGIN(GL_AMD_performance_monitor);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COUNTER_TYPE_AMD
#  define GL_COUNTER_TYPE_AMD 0x8BC0
#endif
#ifndef GL_COUNTER_RANGE_AMD
#  define GL_COUNTER_RANGE_AMD 0x8BC1
#endif
#ifndef GL_UNSIGNED_INT64_AMD
#  define GL_UNSIGNED_INT64_AMD 0x8BC2
#endif
#ifndef GL_PERCENTAGE_AMD
#  define GL_PERCENTAGE_AMD 0x8BC3
#endif
#ifndef GL_PERFMON_RESULT_AVAILABLE_AMD
#  define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
#endif
#ifndef GL_PERFMON_RESULT_SIZE_AMD
#  define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
#endif
#ifndef GL_PERFMON_RESULT_AMD
#  define GL_PERFMON_RESULT_AMD 0x8BC6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXBEGINPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXENDPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
extern PFNGLUXGETPERFMONITORGROUPSAMDPROC glGetPerfMonitorGroupsAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
extern PFNGLUXGETPERFMONITORCOUNTERSAMDPROC glGetPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
extern PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC glGetPerfMonitorGroupStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
extern PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC glGetPerfMonitorCounterStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
extern PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC glGetPerfMonitorCounterInfoAMD;
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
extern PFNGLUXGENPERFMONITORSAMDPROC glGenPerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
extern PFNGLUXDELETEPERFMONITORSAMDPROC glDeletePerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
extern PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC glSelectPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
extern PFNGLUXBEGINPERFMONITORAMDPROC glBeginPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
extern PFNGLUXENDPERFMONITORAMDPROC glEndPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
extern PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC glGetPerfMonitorCounterDataAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:29:06 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_performance_monitor__
#define __GLUX_GL_AMD_performance_monitor__

GLUX_NEW_PLUGIN(GL_AMD_performance_monitor);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COUNTER_TYPE_AMD
#  define GL_COUNTER_TYPE_AMD 0x8BC0
#endif
#ifndef GL_COUNTER_RANGE_AMD
#  define GL_COUNTER_RANGE_AMD 0x8BC1
#endif
#ifndef GL_UNSIGNED_INT64_AMD
#  define GL_UNSIGNED_INT64_AMD 0x8BC2
#endif
#ifndef GL_PERCENTAGE_AMD
#  define GL_PERCENTAGE_AMD 0x8BC3
#endif
#ifndef GL_PERFMON_RESULT_AVAILABLE_AMD
#  define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
#endif
#ifndef GL_PERFMON_RESULT_SIZE_AMD
#  define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
#endif
#ifndef GL_PERFMON_RESULT_AMD
#  define GL_PERFMON_RESULT_AMD 0x8BC6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXBEGINPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXENDPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
extern PFNGLUXGETPERFMONITORGROUPSAMDPROC glGetPerfMonitorGroupsAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
extern PFNGLUXGETPERFMONITORCOUNTERSAMDPROC glGetPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
extern PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC glGetPerfMonitorGroupStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
extern PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC glGetPerfMonitorCounterStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
extern PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC glGetPerfMonitorCounterInfoAMD;
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
extern PFNGLUXGENPERFMONITORSAMDPROC glGenPerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
extern PFNGLUXDELETEPERFMONITORSAMDPROC glDeletePerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
extern PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC glSelectPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
extern PFNGLUXBEGINPERFMONITORAMDPROC glBeginPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
extern PFNGLUXENDPERFMONITORAMDPROC glEndPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
extern PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC glGetPerfMonitorCounterDataAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:17:07 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_performance_monitor__
#define __GLUX_GL_AMD_performance_monitor__

GLUX_NEW_PLUGIN(GL_AMD_performance_monitor);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COUNTER_TYPE_AMD
#  define GL_COUNTER_TYPE_AMD 0x8BC0
#endif
#ifndef GL_COUNTER_RANGE_AMD
#  define GL_COUNTER_RANGE_AMD 0x8BC1
#endif
#ifndef GL_UNSIGNED_INT64_AMD
#  define GL_UNSIGNED_INT64_AMD 0x8BC2
#endif
#ifndef GL_PERCENTAGE_AMD
#  define GL_PERCENTAGE_AMD 0x8BC3
#endif
#ifndef GL_PERFMON_RESULT_AVAILABLE_AMD
#  define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
#endif
#ifndef GL_PERFMON_RESULT_SIZE_AMD
#  define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
#endif
#ifndef GL_PERFMON_RESULT_AMD
#  define GL_PERFMON_RESULT_AMD 0x8BC6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXBEGINPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXENDPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
extern PFNGLUXGETPERFMONITORGROUPSAMDPROC glGetPerfMonitorGroupsAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
extern PFNGLUXGETPERFMONITORCOUNTERSAMDPROC glGetPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
extern PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC glGetPerfMonitorGroupStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
extern PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC glGetPerfMonitorCounterStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
extern PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC glGetPerfMonitorCounterInfoAMD;
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
extern PFNGLUXGENPERFMONITORSAMDPROC glGenPerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
extern PFNGLUXDELETEPERFMONITORSAMDPROC glDeletePerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
extern PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC glSelectPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
extern PFNGLUXBEGINPERFMONITORAMDPROC glBeginPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
extern PFNGLUXENDPERFMONITORAMDPROC glEndPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
extern PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC glGetPerfMonitorCounterDataAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_performance_monitor__
#define __GLUX_GL_AMD_performance_monitor__

GLUX_NEW_PLUGIN(GL_AMD_performance_monitor);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COUNTER_TYPE_AMD
#  define GL_COUNTER_TYPE_AMD 0x8BC0
#endif
#ifndef GL_COUNTER_RANGE_AMD
#  define GL_COUNTER_RANGE_AMD 0x8BC1
#endif
#ifndef GL_UNSIGNED_INT64_AMD
#  define GL_UNSIGNED_INT64_AMD 0x8BC2
#endif
#ifndef GL_PERCENTAGE_AMD
#  define GL_PERCENTAGE_AMD 0x8BC3
#endif
#ifndef GL_PERFMON_RESULT_AVAILABLE_AMD
#  define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
#endif
#ifndef GL_PERFMON_RESULT_SIZE_AMD
#  define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
#endif
#ifndef GL_PERFMON_RESULT_AMD
#  define GL_PERFMON_RESULT_AMD 0x8BC6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXBEGINPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXENDPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
extern PFNGLUXGETPERFMONITORGROUPSAMDPROC glGetPerfMonitorGroupsAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
extern PFNGLUXGETPERFMONITORCOUNTERSAMDPROC glGetPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
extern PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC glGetPerfMonitorGroupStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
extern PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC glGetPerfMonitorCounterStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
extern PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC glGetPerfMonitorCounterInfoAMD;
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
extern PFNGLUXGENPERFMONITORSAMDPROC glGenPerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
extern PFNGLUXDELETEPERFMONITORSAMDPROC glDeletePerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
extern PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC glSelectPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
extern PFNGLUXBEGINPERFMONITORAMDPROC glBeginPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
extern PFNGLUXENDPERFMONITORAMDPROC glEndPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
extern PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC glGetPerfMonitorCounterDataAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:21 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_performance_monitor__
#define __GLUX_GL_AMD_performance_monitor__

GLUX_NEW_PLUGIN(GL_AMD_performance_monitor);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COUNTER_TYPE_AMD
#  define GL_COUNTER_TYPE_AMD 0x8BC0
#endif
#ifndef GL_COUNTER_RANGE_AMD
#  define GL_COUNTER_RANGE_AMD 0x8BC1
#endif
#ifndef GL_UNSIGNED_INT64_AMD
#  define GL_UNSIGNED_INT64_AMD 0x8BC2
#endif
#ifndef GL_PERCENTAGE_AMD
#  define GL_PERCENTAGE_AMD 0x8BC3
#endif
#ifndef GL_PERFMON_RESULT_AVAILABLE_AMD
#  define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
#endif
#ifndef GL_PERFMON_RESULT_SIZE_AMD
#  define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
#endif
#ifndef GL_PERFMON_RESULT_AMD
#  define GL_PERFMON_RESULT_AMD 0x8BC6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXBEGINPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXENDPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
extern PFNGLUXGETPERFMONITORGROUPSAMDPROC glGetPerfMonitorGroupsAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
extern PFNGLUXGETPERFMONITORCOUNTERSAMDPROC glGetPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
extern PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC glGetPerfMonitorGroupStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
extern PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC glGetPerfMonitorCounterStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
extern PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC glGetPerfMonitorCounterInfoAMD;
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
extern PFNGLUXGENPERFMONITORSAMDPROC glGenPerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
extern PFNGLUXDELETEPERFMONITORSAMDPROC glDeletePerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
extern PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC glSelectPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
extern PFNGLUXBEGINPERFMONITORAMDPROC glBeginPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
extern PFNGLUXENDPERFMONITORAMDPROC glEndPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
extern PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC glGetPerfMonitorCounterDataAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_performance_monitor__
#define __GLUX_GL_AMD_performance_monitor__

GLUX_NEW_PLUGIN(GL_AMD_performance_monitor);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COUNTER_TYPE_AMD
#  define GL_COUNTER_TYPE_AMD 0x8BC0
#endif
#ifndef GL_COUNTER_RANGE_AMD
#  define GL_COUNTER_RANGE_AMD 0x8BC1
#endif
#ifndef GL_UNSIGNED_INT64_AMD
#  define GL_UNSIGNED_INT64_AMD 0x8BC2
#endif
#ifndef GL_PERCENTAGE_AMD
#  define GL_PERCENTAGE_AMD 0x8BC3
#endif
#ifndef GL_PERFMON_RESULT_AVAILABLE_AMD
#  define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
#endif
#ifndef GL_PERFMON_RESULT_SIZE_AMD
#  define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
#endif
#ifndef GL_PERFMON_RESULT_AMD
#  define GL_PERFMON_RESULT_AMD 0x8BC6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXBEGINPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXENDPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
extern PFNGLUXGETPERFMONITORGROUPSAMDPROC glGetPerfMonitorGroupsAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
extern PFNGLUXGETPERFMONITORCOUNTERSAMDPROC glGetPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
extern PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC glGetPerfMonitorGroupStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
extern PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC glGetPerfMonitorCounterStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
extern PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC glGetPerfMonitorCounterInfoAMD;
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
extern PFNGLUXGENPERFMONITORSAMDPROC glGenPerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
extern PFNGLUXDELETEPERFMONITORSAMDPROC glDeletePerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
extern PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC glSelectPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
extern PFNGLUXBEGINPERFMONITORAMDPROC glBeginPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
extern PFNGLUXENDPERFMONITORAMDPROC glEndPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
extern PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC glGetPerfMonitorCounterDataAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:09 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_performance_monitor__
#define __GLUX_GL_AMD_performance_monitor__

GLUX_NEW_PLUGIN(GL_AMD_performance_monitor);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COUNTER_TYPE_AMD
#  define GL_COUNTER_TYPE_AMD 0x8BC0
#endif
#ifndef GL_COUNTER_RANGE_AMD
#  define GL_COUNTER_RANGE_AMD 0x8BC1
#endif
#ifndef GL_UNSIGNED_INT64_AMD
#  define GL_UNSIGNED_INT64_AMD 0x8BC2
#endif
#ifndef GL_PERCENTAGE_AMD
#  define GL_PERCENTAGE_AMD 0x8BC3
#endif
#ifndef GL_PERFMON_RESULT_AVAILABLE_AMD
#  define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
#endif
#ifndef GL_PERFMON_RESULT_SIZE_AMD
#  define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
#endif
#ifndef GL_PERFMON_RESULT_AMD
#  define GL_PERFMON_RESULT_AMD 0x8BC6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXBEGINPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXENDPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
extern PFNGLUXGETPERFMONITORGROUPSAMDPROC glGetPerfMonitorGroupsAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
extern PFNGLUXGETPERFMONITORCOUNTERSAMDPROC glGetPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
extern PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC glGetPerfMonitorGroupStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
extern PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC glGetPerfMonitorCounterStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
extern PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC glGetPerfMonitorCounterInfoAMD;
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
extern PFNGLUXGENPERFMONITORSAMDPROC glGenPerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
extern PFNGLUXDELETEPERFMONITORSAMDPROC glDeletePerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
extern PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC glSelectPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
extern PFNGLUXBEGINPERFMONITORAMDPROC glBeginPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
extern PFNGLUXENDPERFMONITORAMDPROC glEndPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
extern PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC glGetPerfMonitorCounterDataAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:23 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_performance_monitor__
#define __GLUX_GL_AMD_performance_monitor__

GLUX_NEW_PLUGIN(GL_AMD_performance_monitor);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COUNTER_TYPE_AMD
#  define GL_COUNTER_TYPE_AMD 0x8BC0
#endif
#ifndef GL_COUNTER_RANGE_AMD
#  define GL_COUNTER_RANGE_AMD 0x8BC1
#endif
#ifndef GL_UNSIGNED_INT64_AMD
#  define GL_UNSIGNED_INT64_AMD 0x8BC2
#endif
#ifndef GL_PERCENTAGE_AMD
#  define GL_PERCENTAGE_AMD 0x8BC3
#endif
#ifndef GL_PERFMON_RESULT_AVAILABLE_AMD
#  define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
#endif
#ifndef GL_PERFMON_RESULT_SIZE_AMD
#  define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
#endif
#ifndef GL_PERFMON_RESULT_AMD
#  define GL_PERFMON_RESULT_AMD 0x8BC6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXBEGINPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXENDPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
extern PFNGLUXGETPERFMONITORGROUPSAMDPROC glGetPerfMonitorGroupsAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
extern PFNGLUXGETPERFMONITORCOUNTERSAMDPROC glGetPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
extern PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC glGetPerfMonitorGroupStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
extern PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC glGetPerfMonitorCounterStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
extern PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC glGetPerfMonitorCounterInfoAMD;
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
extern PFNGLUXGENPERFMONITORSAMDPROC glGenPerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
extern PFNGLUXDELETEPERFMONITORSAMDPROC glDeletePerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
extern PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC glSelectPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
extern PFNGLUXBEGINPERFMONITORAMDPROC glBeginPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
extern PFNGLUXENDPERFMONITORAMDPROC glEndPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
extern PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC glGetPerfMonitorCounterDataAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:52:04 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_performance_monitor__
#define __GLUX_GL_AMD_performance_monitor__

GLUX_NEW_PLUGIN(GL_AMD_performance_monitor);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COUNTER_TYPE_AMD
#  define GL_COUNTER_TYPE_AMD 0x8BC0
#endif
#ifndef GL_COUNTER_RANGE_AMD
#  define GL_COUNTER_RANGE_AMD 0x8BC1
#endif
#ifndef GL_UNSIGNED_INT64_AMD
#  define GL_UNSIGNED_INT64_AMD 0x8BC2
#endif
#ifndef GL_PERCENTAGE_AMD
#  define GL_PERCENTAGE_AMD 0x8BC3
#endif
#ifndef GL_PERFMON_RESULT_AVAILABLE_AMD
#  define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
#endif
#ifndef GL_PERFMON_RESULT_SIZE_AMD
#  define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
#endif
#ifndef GL_PERFMON_RESULT_AMD
#  define GL_PERFMON_RESULT_AMD 0x8BC6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXBEGINPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXENDPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
extern PFNGLUXGETPERFMONITORGROUPSAMDPROC glGetPerfMonitorGroupsAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
extern PFNGLUXGETPERFMONITORCOUNTERSAMDPROC glGetPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
extern PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC glGetPerfMonitorGroupStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
extern PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC glGetPerfMonitorCounterStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
extern PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC glGetPerfMonitorCounterInfoAMD;
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
extern PFNGLUXGENPERFMONITORSAMDPROC glGenPerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
extern PFNGLUXDELETEPERFMONITORSAMDPROC glDeletePerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
extern PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC glSelectPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
extern PFNGLUXBEGINPERFMONITORAMDPROC glBeginPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
extern PFNGLUXENDPERFMONITORAMDPROC glEndPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
extern PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC glGetPerfMonitorCounterDataAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_performance_monitor__
#define __GLUX_GL_AMD_performance_monitor__

GLUX_NEW_PLUGIN(GL_AMD_performance_monitor);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COUNTER_TYPE_AMD
#  define GL_COUNTER_TYPE_AMD 0x8BC0
#endif
#ifndef GL_COUNTER_RANGE_AMD
#  define GL_COUNTER_RANGE_AMD 0x8BC1
#endif
#ifndef GL_UNSIGNED_INT64_AMD
#  define GL_UNSIGNED_INT64_AMD 0x8BC2
#endif
#ifndef GL_PERCENTAGE_AMD
#  define GL_PERCENTAGE_AMD 0x8BC3
#endif
#ifndef GL_PERFMON_RESULT_AVAILABLE_AMD
#  define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
#endif
#ifndef GL_PERFMON_RESULT_SIZE_AMD
#  define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
#endif
#ifndef GL_PERFMON_RESULT_AMD
#  define GL_PERFMON_RESULT_AMD 0x8BC6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXBEGINPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXENDPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
extern PFNGLUXGETPERFMONITORGROUPSAMDPROC glGetPerfMonitorGroupsAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
extern PFNGLUXGETPERFMONITORCOUNTERSAMDPROC glGetPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
extern PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC glGetPerfMonitorGroupStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
extern PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC glGetPerfMonitorCounterStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
extern PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC glGetPerfMonitorCounterInfoAMD;
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
extern PFNGLUXGENPERFMONITORSAMDPROC glGenPerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
extern PFNGLUXDELETEPERFMONITORSAMDPROC glDeletePerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
extern PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC glSelectPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
extern PFNGLUXBEGINPERFMONITORAMDPROC glBeginPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
extern PFNGLUXENDPERFMONITORAMDPROC glEndPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
extern PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC glGetPerfMonitorCounterDataAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:06 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_performance_monitor__
#define __GLUX_GL_AMD_performance_monitor__

GLUX_NEW_PLUGIN(GL_AMD_performance_monitor);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COUNTER_TYPE_AMD
#  define GL_COUNTER_TYPE_AMD 0x8BC0
#endif
#ifndef GL_COUNTER_RANGE_AMD
#  define GL_COUNTER_RANGE_AMD 0x8BC1
#endif
#ifndef GL_UNSIGNED_INT64_AMD
#  define GL_UNSIGNED_INT64_AMD 0x8BC2
#endif
#ifndef GL_PERCENTAGE_AMD
#  define GL_PERCENTAGE_AMD 0x8BC3
#endif
#ifndef GL_PERFMON_RESULT_AVAILABLE_AMD
#  define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
#endif
#ifndef GL_PERFMON_RESULT_SIZE_AMD
#  define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
#endif
#ifndef GL_PERFMON_RESULT_AMD
#  define GL_PERFMON_RESULT_AMD 0x8BC6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXBEGINPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXENDPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
extern PFNGLUXGETPERFMONITORGROUPSAMDPROC glGetPerfMonitorGroupsAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
extern PFNGLUXGETPERFMONITORCOUNTERSAMDPROC glGetPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
extern PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC glGetPerfMonitorGroupStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
extern PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC glGetPerfMonitorCounterStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
extern PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC glGetPerfMonitorCounterInfoAMD;
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
extern PFNGLUXGENPERFMONITORSAMDPROC glGenPerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
extern PFNGLUXDELETEPERFMONITORSAMDPROC glDeletePerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
extern PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC glSelectPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
extern PFNGLUXBEGINPERFMONITORAMDPROC glBeginPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
extern PFNGLUXENDPERFMONITORAMDPROC glEndPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
extern PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC glGetPerfMonitorCounterDataAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:26 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_performance_monitor__
#define __GLUX_GL_AMD_performance_monitor__

GLUX_NEW_PLUGIN(GL_AMD_performance_monitor);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COUNTER_TYPE_AMD
#  define GL_COUNTER_TYPE_AMD 0x8BC0
#endif
#ifndef GL_COUNTER_RANGE_AMD
#  define GL_COUNTER_RANGE_AMD 0x8BC1
#endif
#ifndef GL_UNSIGNED_INT64_AMD
#  define GL_UNSIGNED_INT64_AMD 0x8BC2
#endif
#ifndef GL_PERCENTAGE_AMD
#  define GL_PERCENTAGE_AMD 0x8BC3
#endif
#ifndef GL_PERFMON_RESULT_AVAILABLE_AMD
#  define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
#endif
#ifndef GL_PERFMON_RESULT_SIZE_AMD
#  define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
#endif
#ifndef GL_PERFMON_RESULT_AMD
#  define GL_PERFMON_RESULT_AMD 0x8BC6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXBEGINPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXENDPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
extern PFNGLUXGETPERFMONITORGROUPSAMDPROC glGetPerfMonitorGroupsAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
extern PFNGLUXGETPERFMONITORCOUNTERSAMDPROC glGetPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
extern PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC glGetPerfMonitorGroupStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
extern PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC glGetPerfMonitorCounterStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
extern PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC glGetPerfMonitorCounterInfoAMD;
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
extern PFNGLUXGENPERFMONITORSAMDPROC glGenPerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
extern PFNGLUXDELETEPERFMONITORSAMDPROC glDeletePerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
extern PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC glSelectPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
extern PFNGLUXBEGINPERFMONITORAMDPROC glBeginPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
extern PFNGLUXENDPERFMONITORAMDPROC glEndPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
extern PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC glGetPerfMonitorCounterDataAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_performance_monitor__
#define __GLUX_GL_AMD_performance_monitor__

GLUX_NEW_PLUGIN(GL_AMD_performance_monitor);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COUNTER_TYPE_AMD
#  define GL_COUNTER_TYPE_AMD 0x8BC0
#endif
#ifndef GL_COUNTER_RANGE_AMD
#  define GL_COUNTER_RANGE_AMD 0x8BC1
#endif
#ifndef GL_UNSIGNED_INT64_AMD
#  define GL_UNSIGNED_INT64_AMD 0x8BC2
#endif
#ifndef GL_PERCENTAGE_AMD
#  define GL_PERCENTAGE_AMD 0x8BC3
#endif
#ifndef GL_PERFMON_RESULT_AVAILABLE_AMD
#  define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
#endif
#ifndef GL_PERFMON_RESULT_SIZE_AMD
#  define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
#endif
#ifndef GL_PERFMON_RESULT_AMD
#  define GL_PERFMON_RESULT_AMD 0x8BC6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXBEGINPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXENDPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
extern PFNGLUXGETPERFMONITORGROUPSAMDPROC glGetPerfMonitorGroupsAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
extern PFNGLUXGETPERFMONITORCOUNTERSAMDPROC glGetPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
extern PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC glGetPerfMonitorGroupStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
extern PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC glGetPerfMonitorCounterStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
extern PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC glGetPerfMonitorCounterInfoAMD;
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
extern PFNGLUXGENPERFMONITORSAMDPROC glGenPerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
extern PFNGLUXDELETEPERFMONITORSAMDPROC glDeletePerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
extern PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC glSelectPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
extern PFNGLUXBEGINPERFMONITORAMDPROC glBeginPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
extern PFNGLUXENDPERFMONITORAMDPROC glEndPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
extern PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC glGetPerfMonitorCounterDataAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:42:01 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_performance_monitor__
#define __GLUX_GL_AMD_performance_monitor__

GLUX_NEW_PLUGIN(GL_AMD_performance_monitor);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COUNTER_TYPE_AMD
#  define GL_COUNTER_TYPE_AMD 0x8BC0
#endif
#ifndef GL_COUNTER_RANGE_AMD
#  define GL_COUNTER_RANGE_AMD 0x8BC1
#endif
#ifndef GL_UNSIGNED_INT64_AMD
#  define GL_UNSIGNED_INT64_AMD 0x8BC2
#endif
#ifndef GL_PERCENTAGE_AMD
#  define GL_PERCENTAGE_AMD 0x8BC3
#endif
#ifndef GL_PERFMON_RESULT_AVAILABLE_AMD
#  define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
#endif
#ifndef GL_PERFMON_RESULT_SIZE_AMD
#  define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
#endif
#ifndef GL_PERFMON_RESULT_AMD
#  define GL_PERFMON_RESULT_AMD 0x8BC6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXBEGINPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXENDPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
extern PFNGLUXGETPERFMONITORGROUPSAMDPROC glGetPerfMonitorGroupsAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
extern PFNGLUXGETPERFMONITORCOUNTERSAMDPROC glGetPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
extern PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC glGetPerfMonitorGroupStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
extern PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC glGetPerfMonitorCounterStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
extern PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC glGetPerfMonitorCounterInfoAMD;
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
extern PFNGLUXGENPERFMONITORSAMDPROC glGenPerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
extern PFNGLUXDELETEPERFMONITORSAMDPROC glDeletePerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
extern PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC glSelectPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
extern PFNGLUXBEGINPERFMONITORAMDPROC glBeginPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
extern PFNGLUXENDPERFMONITORAMDPROC glEndPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
extern PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC glGetPerfMonitorCounterDataAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:41 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_performance_monitor__
#define __GLUX_GL_AMD_performance_monitor__

GLUX_NEW_PLUGIN(GL_AMD_performance_monitor);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COUNTER_TYPE_AMD
#  define GL_COUNTER_TYPE_AMD 0x8BC0
#endif
#ifndef GL_COUNTER_RANGE_AMD
#  define GL_COUNTER_RANGE_AMD 0x8BC1
#endif
#ifndef GL_UNSIGNED_INT64_AMD
#  define GL_UNSIGNED_INT64_AMD 0x8BC2
#endif
#ifndef GL_PERCENTAGE_AMD
#  define GL_PERCENTAGE_AMD 0x8BC3
#endif
#ifndef GL_PERFMON_RESULT_AVAILABLE_AMD
#  define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
#endif
#ifndef GL_PERFMON_RESULT_SIZE_AMD
#  define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
#endif
#ifndef GL_PERFMON_RESULT_AMD
#  define GL_PERFMON_RESULT_AMD 0x8BC6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXBEGINPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXENDPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
extern PFNGLUXGETPERFMONITORGROUPSAMDPROC glGetPerfMonitorGroupsAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
extern PFNGLUXGETPERFMONITORCOUNTERSAMDPROC glGetPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
extern PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC glGetPerfMonitorGroupStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
extern PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC glGetPerfMonitorCounterStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
extern PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC glGetPerfMonitorCounterInfoAMD;
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
extern PFNGLUXGENPERFMONITORSAMDPROC glGenPerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
extern PFNGLUXDELETEPERFMONITORSAMDPROC glDeletePerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
extern PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC glSelectPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
extern PFNGLUXBEGINPERFMONITORAMDPROC glBeginPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
extern PFNGLUXENDPERFMONITORAMDPROC glEndPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
extern PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC glGetPerfMonitorCounterDataAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:10:00 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_performance_monitor__
#define __GLUX_GL_AMD_performance_monitor__

GLUX_NEW_PLUGIN(GL_AMD_performance_monitor);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COUNTER_TYPE_AMD
#  define GL_COUNTER_TYPE_AMD 0x8BC0
#endif
#ifndef GL_COUNTER_RANGE_AMD
#  define GL_COUNTER_RANGE_AMD 0x8BC1
#endif
#ifndef GL_UNSIGNED_INT64_AMD
#  define GL_UNSIGNED_INT64_AMD 0x8BC2
#endif
#ifndef GL_PERCENTAGE_AMD
#  define GL_PERCENTAGE_AMD 0x8BC3
#endif
#ifndef GL_PERFMON_RESULT_AVAILABLE_AMD
#  define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
#endif
#ifndef GL_PERFMON_RESULT_SIZE_AMD
#  define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
#endif
#ifndef GL_PERFMON_RESULT_AMD
#  define GL_PERFMON_RESULT_AMD 0x8BC6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXBEGINPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXENDPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
extern PFNGLUXGETPERFMONITORGROUPSAMDPROC glGetPerfMonitorGroupsAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
extern PFNGLUXGETPERFMONITORCOUNTERSAMDPROC glGetPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
extern PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC glGetPerfMonitorGroupStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
extern PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC glGetPerfMonitorCounterStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
extern PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC glGetPerfMonitorCounterInfoAMD;
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
extern PFNGLUXGENPERFMONITORSAMDPROC glGenPerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
extern PFNGLUXDELETEPERFMONITORSAMDPROC glDeletePerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
extern PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC glSelectPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
extern PFNGLUXBEGINPERFMONITORAMDPROC glBeginPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
extern PFNGLUXENDPERFMONITORAMDPROC glEndPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
extern PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC glGetPerfMonitorCounterDataAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:20:01 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_performance_monitor__
#define __GLUX_GL_AMD_performance_monitor__

GLUX_NEW_PLUGIN(GL_AMD_performance_monitor);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COUNTER_TYPE_AMD
#  define GL_COUNTER_TYPE_AMD 0x8BC0
#endif
#ifndef GL_COUNTER_RANGE_AMD
#  define GL_COUNTER_RANGE_AMD 0x8BC1
#endif
#ifndef GL_UNSIGNED_INT64_AMD
#  define GL_UNSIGNED_INT64_AMD 0x8BC2
#endif
#ifndef GL_PERCENTAGE_AMD
#  define GL_PERCENTAGE_AMD 0x8BC3
#endif
#ifndef GL_PERFMON_RESULT_AVAILABLE_AMD
#  define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
#endif
#ifndef GL_PERFMON_RESULT_SIZE_AMD
#  define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
#endif
#ifndef GL_PERFMON_RESULT_AMD
#  define GL_PERFMON_RESULT_AMD 0x8BC6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXBEGINPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXENDPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
extern PFNGLUXGETPERFMONITORGROUPSAMDPROC glGetPerfMonitorGroupsAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
extern PFNGLUXGETPERFMONITORCOUNTERSAMDPROC glGetPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
extern PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC glGetPerfMonitorGroupStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
extern PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC glGetPerfMonitorCounterStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
extern PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC glGetPerfMonitorCounterInfoAMD;
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
extern PFNGLUXGENPERFMONITORSAMDPROC glGenPerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
extern PFNGLUXDELETEPERFMONITORSAMDPROC glDeletePerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
extern PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC glSelectPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
extern PFNGLUXBEGINPERFMONITORAMDPROC glBeginPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
extern PFNGLUXENDPERFMONITORAMDPROC glEndPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
extern PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC glGetPerfMonitorCounterDataAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:43:00 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_performance_monitor__
#define __GLUX_GL_AMD_performance_monitor__

GLUX_NEW_PLUGIN(GL_AMD_performance_monitor)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COUNTER_TYPE_AMD
#  define GL_COUNTER_TYPE_AMD 0x8BC0
#endif
#ifndef GL_COUNTER_RANGE_AMD
#  define GL_COUNTER_RANGE_AMD 0x8BC1
#endif
#ifndef GL_UNSIGNED_INT64_AMD
#  define GL_UNSIGNED_INT64_AMD 0x8BC2
#endif
#ifndef GL_PERCENTAGE_AMD
#  define GL_PERCENTAGE_AMD 0x8BC3
#endif
#ifndef GL_PERFMON_RESULT_AVAILABLE_AMD
#  define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
#endif
#ifndef GL_PERFMON_RESULT_SIZE_AMD
#  define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
#endif
#ifndef GL_PERFMON_RESULT_AMD
#  define GL_PERFMON_RESULT_AMD 0x8BC6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXBEGINPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXENDPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
extern PFNGLUXGETPERFMONITORGROUPSAMDPROC glGetPerfMonitorGroupsAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
extern PFNGLUXGETPERFMONITORCOUNTERSAMDPROC glGetPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
extern PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC glGetPerfMonitorGroupStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
extern PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC glGetPerfMonitorCounterStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
extern PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC glGetPerfMonitorCounterInfoAMD;
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
extern PFNGLUXGENPERFMONITORSAMDPROC glGenPerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
extern PFNGLUXDELETEPERFMONITORSAMDPROC glDeletePerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
extern PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC glSelectPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
extern PFNGLUXBEGINPERFMONITORAMDPROC glBeginPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
extern PFNGLUXENDPERFMONITORAMDPROC glEndPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
extern PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC glGetPerfMonitorCounterDataAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
