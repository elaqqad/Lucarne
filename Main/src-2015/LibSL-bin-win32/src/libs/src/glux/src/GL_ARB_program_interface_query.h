
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:25 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_program_interface_query__
#define __GLUX_GL_ARB_program_interface_query__

GLUX_NEW_PLUGIN(GL_ARB_program_interface_query);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_UNIFORM
#  define GL_UNIFORM 0x92E1
#endif
#ifndef GL_UNIFORM_BLOCK
#  define GL_UNIFORM_BLOCK 0x92E2
#endif
#ifndef GL_PROGRAM_INPUT
#  define GL_PROGRAM_INPUT 0x92E3
#endif
#ifndef GL_PROGRAM_OUTPUT
#  define GL_PROGRAM_OUTPUT 0x92E4
#endif
#ifndef GL_BUFFER_VARIABLE
#  define GL_BUFFER_VARIABLE 0x92E5
#endif
#ifndef GL_SHADER_STORAGE_BLOCK
#  define GL_SHADER_STORAGE_BLOCK 0x92E6
#endif
#ifndef GL_VERTEX_SUBROUTINE
#  define GL_VERTEX_SUBROUTINE 0x92E8
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE
#  define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE
#  define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#endif
#ifndef GL_GEOMETRY_SUBROUTINE
#  define GL_GEOMETRY_SUBROUTINE 0x92EB
#endif
#ifndef GL_FRAGMENT_SUBROUTINE
#  define GL_FRAGMENT_SUBROUTINE 0x92EC
#endif
#ifndef GL_COMPUTE_SUBROUTINE
#  define GL_COMPUTE_SUBROUTINE 0x92ED
#endif
#ifndef GL_VERTEX_SUBROUTINE_UNIFORM
#  define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE_UNIFORM
#  define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE_UNIFORM
#  define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#endif
#ifndef GL_GEOMETRY_SUBROUTINE_UNIFORM
#  define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#endif
#ifndef GL_FRAGMENT_SUBROUTINE_UNIFORM
#  define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#endif
#ifndef GL_COMPUTE_SUBROUTINE_UNIFORM
#  define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYING
#  define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#endif
#ifndef GL_ACTIVE_RESOURCES
#  define GL_ACTIVE_RESOURCES 0x92F5
#endif
#ifndef GL_MAX_NAME_LENGTH
#  define GL_MAX_NAME_LENGTH 0x92F6
#endif
#ifndef GL_MAX_NUM_ACTIVE_VARIABLES
#  define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#endif
#ifndef GL_MAX_NUM_COMPATIBLE_SUBROUTINES
#  define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#endif
#ifndef GL_NAME_LENGTH
#  define GL_NAME_LENGTH 0x92F9
#endif
#ifndef GL_TYPE
#  define GL_TYPE 0x92FA
#endif
#ifndef GL_ARRAY_SIZE
#  define GL_ARRAY_SIZE 0x92FB
#endif
#ifndef GL_OFFSET
#  define GL_OFFSET 0x92FC
#endif
#ifndef GL_BLOCK_INDEX
#  define GL_BLOCK_INDEX 0x92FD
#endif
#ifndef GL_ARRAY_STRIDE
#  define GL_ARRAY_STRIDE 0x92FE
#endif
#ifndef GL_MATRIX_STRIDE
#  define GL_MATRIX_STRIDE 0x92FF
#endif
#ifndef GL_IS_ROW_MAJOR
#  define GL_IS_ROW_MAJOR 0x9300
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_INDEX
#  define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#endif
#ifndef GL_BUFFER_BINDING
#  define GL_BUFFER_BINDING 0x9302
#endif
#ifndef GL_BUFFER_DATA_SIZE
#  define GL_BUFFER_DATA_SIZE 0x9303
#endif
#ifndef GL_NUM_ACTIVE_VARIABLES
#  define GL_NUM_ACTIVE_VARIABLES 0x9304
#endif
#ifndef GL_ACTIVE_VARIABLES
#  define GL_ACTIVE_VARIABLES 0x9305
#endif
#ifndef GL_REFERENCED_BY_VERTEX_SHADER
#  define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#endif
#ifndef GL_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#endif
#ifndef GL_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#endif
#ifndef GL_REFERENCED_BY_GEOMETRY_SHADER
#  define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#endif
#ifndef GL_REFERENCED_BY_FRAGMENT_SHADER
#  define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#endif
#ifndef GL_REFERENCED_BY_COMPUTE_SHADER
#  define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#endif
#ifndef GL_TOP_LEVEL_ARRAY_SIZE
#  define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#endif
#ifndef GL_TOP_LEVEL_ARRAY_STRIDE
#  define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#endif
#ifndef GL_LOCATION
#  define GL_LOCATION 0x930E
#endif
#ifndef GL_LOCATION_INDEX
#  define GL_LOCATION_INDEX 0x930F
#endif
#ifndef GL_IS_PER_PATCH
#  define GL_IS_PER_PATCH 0x92E7
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
typedef GLuint (APIENTRYP PFNGLUXGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
extern PFNGLUXGETPROGRAMINTERFACEIVPROC glGetProgramInterfaceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
extern PFNGLUXGETPROGRAMRESOURCEINDEXPROC glGetProgramResourceIndex;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
extern PFNGLUXGETPROGRAMRESOURCENAMEPROC glGetProgramResourceName;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
extern PFNGLUXGETPROGRAMRESOURCEIVPROC glGetProgramResourceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
extern PFNGLUXGETPROGRAMRESOURCELOCATIONPROC glGetProgramResourceLocation;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
extern PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC glGetProgramResourceLocationIndex;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:43 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_program_interface_query__
#define __GLUX_GL_ARB_program_interface_query__

GLUX_NEW_PLUGIN(GL_ARB_program_interface_query);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_UNIFORM
#  define GL_UNIFORM 0x92E1
#endif
#ifndef GL_UNIFORM_BLOCK
#  define GL_UNIFORM_BLOCK 0x92E2
#endif
#ifndef GL_PROGRAM_INPUT
#  define GL_PROGRAM_INPUT 0x92E3
#endif
#ifndef GL_PROGRAM_OUTPUT
#  define GL_PROGRAM_OUTPUT 0x92E4
#endif
#ifndef GL_BUFFER_VARIABLE
#  define GL_BUFFER_VARIABLE 0x92E5
#endif
#ifndef GL_SHADER_STORAGE_BLOCK
#  define GL_SHADER_STORAGE_BLOCK 0x92E6
#endif
#ifndef GL_VERTEX_SUBROUTINE
#  define GL_VERTEX_SUBROUTINE 0x92E8
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE
#  define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE
#  define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#endif
#ifndef GL_GEOMETRY_SUBROUTINE
#  define GL_GEOMETRY_SUBROUTINE 0x92EB
#endif
#ifndef GL_FRAGMENT_SUBROUTINE
#  define GL_FRAGMENT_SUBROUTINE 0x92EC
#endif
#ifndef GL_COMPUTE_SUBROUTINE
#  define GL_COMPUTE_SUBROUTINE 0x92ED
#endif
#ifndef GL_VERTEX_SUBROUTINE_UNIFORM
#  define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE_UNIFORM
#  define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE_UNIFORM
#  define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#endif
#ifndef GL_GEOMETRY_SUBROUTINE_UNIFORM
#  define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#endif
#ifndef GL_FRAGMENT_SUBROUTINE_UNIFORM
#  define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#endif
#ifndef GL_COMPUTE_SUBROUTINE_UNIFORM
#  define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYING
#  define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#endif
#ifndef GL_ACTIVE_RESOURCES
#  define GL_ACTIVE_RESOURCES 0x92F5
#endif
#ifndef GL_MAX_NAME_LENGTH
#  define GL_MAX_NAME_LENGTH 0x92F6
#endif
#ifndef GL_MAX_NUM_ACTIVE_VARIABLES
#  define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#endif
#ifndef GL_MAX_NUM_COMPATIBLE_SUBROUTINES
#  define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#endif
#ifndef GL_NAME_LENGTH
#  define GL_NAME_LENGTH 0x92F9
#endif
#ifndef GL_TYPE
#  define GL_TYPE 0x92FA
#endif
#ifndef GL_ARRAY_SIZE
#  define GL_ARRAY_SIZE 0x92FB
#endif
#ifndef GL_OFFSET
#  define GL_OFFSET 0x92FC
#endif
#ifndef GL_BLOCK_INDEX
#  define GL_BLOCK_INDEX 0x92FD
#endif
#ifndef GL_ARRAY_STRIDE
#  define GL_ARRAY_STRIDE 0x92FE
#endif
#ifndef GL_MATRIX_STRIDE
#  define GL_MATRIX_STRIDE 0x92FF
#endif
#ifndef GL_IS_ROW_MAJOR
#  define GL_IS_ROW_MAJOR 0x9300
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_INDEX
#  define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#endif
#ifndef GL_BUFFER_BINDING
#  define GL_BUFFER_BINDING 0x9302
#endif
#ifndef GL_BUFFER_DATA_SIZE
#  define GL_BUFFER_DATA_SIZE 0x9303
#endif
#ifndef GL_NUM_ACTIVE_VARIABLES
#  define GL_NUM_ACTIVE_VARIABLES 0x9304
#endif
#ifndef GL_ACTIVE_VARIABLES
#  define GL_ACTIVE_VARIABLES 0x9305
#endif
#ifndef GL_REFERENCED_BY_VERTEX_SHADER
#  define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#endif
#ifndef GL_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#endif
#ifndef GL_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#endif
#ifndef GL_REFERENCED_BY_GEOMETRY_SHADER
#  define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#endif
#ifndef GL_REFERENCED_BY_FRAGMENT_SHADER
#  define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#endif
#ifndef GL_REFERENCED_BY_COMPUTE_SHADER
#  define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#endif
#ifndef GL_TOP_LEVEL_ARRAY_SIZE
#  define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#endif
#ifndef GL_TOP_LEVEL_ARRAY_STRIDE
#  define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#endif
#ifndef GL_LOCATION
#  define GL_LOCATION 0x930E
#endif
#ifndef GL_LOCATION_INDEX
#  define GL_LOCATION_INDEX 0x930F
#endif
#ifndef GL_IS_PER_PATCH
#  define GL_IS_PER_PATCH 0x92E7
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
typedef GLuint (APIENTRYP PFNGLUXGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
extern PFNGLUXGETPROGRAMINTERFACEIVPROC glGetProgramInterfaceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
extern PFNGLUXGETPROGRAMRESOURCEINDEXPROC glGetProgramResourceIndex;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
extern PFNGLUXGETPROGRAMRESOURCENAMEPROC glGetProgramResourceName;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
extern PFNGLUXGETPROGRAMRESOURCEIVPROC glGetProgramResourceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
extern PFNGLUXGETPROGRAMRESOURCELOCATIONPROC glGetProgramResourceLocation;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
extern PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC glGetProgramResourceLocationIndex;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:53 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_program_interface_query__
#define __GLUX_GL_ARB_program_interface_query__

GLUX_NEW_PLUGIN(GL_ARB_program_interface_query);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_UNIFORM
#  define GL_UNIFORM 0x92E1
#endif
#ifndef GL_UNIFORM_BLOCK
#  define GL_UNIFORM_BLOCK 0x92E2
#endif
#ifndef GL_PROGRAM_INPUT
#  define GL_PROGRAM_INPUT 0x92E3
#endif
#ifndef GL_PROGRAM_OUTPUT
#  define GL_PROGRAM_OUTPUT 0x92E4
#endif
#ifndef GL_BUFFER_VARIABLE
#  define GL_BUFFER_VARIABLE 0x92E5
#endif
#ifndef GL_SHADER_STORAGE_BLOCK
#  define GL_SHADER_STORAGE_BLOCK 0x92E6
#endif
#ifndef GL_VERTEX_SUBROUTINE
#  define GL_VERTEX_SUBROUTINE 0x92E8
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE
#  define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE
#  define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#endif
#ifndef GL_GEOMETRY_SUBROUTINE
#  define GL_GEOMETRY_SUBROUTINE 0x92EB
#endif
#ifndef GL_FRAGMENT_SUBROUTINE
#  define GL_FRAGMENT_SUBROUTINE 0x92EC
#endif
#ifndef GL_COMPUTE_SUBROUTINE
#  define GL_COMPUTE_SUBROUTINE 0x92ED
#endif
#ifndef GL_VERTEX_SUBROUTINE_UNIFORM
#  define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE_UNIFORM
#  define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE_UNIFORM
#  define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#endif
#ifndef GL_GEOMETRY_SUBROUTINE_UNIFORM
#  define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#endif
#ifndef GL_FRAGMENT_SUBROUTINE_UNIFORM
#  define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#endif
#ifndef GL_COMPUTE_SUBROUTINE_UNIFORM
#  define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYING
#  define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#endif
#ifndef GL_ACTIVE_RESOURCES
#  define GL_ACTIVE_RESOURCES 0x92F5
#endif
#ifndef GL_MAX_NAME_LENGTH
#  define GL_MAX_NAME_LENGTH 0x92F6
#endif
#ifndef GL_MAX_NUM_ACTIVE_VARIABLES
#  define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#endif
#ifndef GL_MAX_NUM_COMPATIBLE_SUBROUTINES
#  define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#endif
#ifndef GL_NAME_LENGTH
#  define GL_NAME_LENGTH 0x92F9
#endif
#ifndef GL_TYPE
#  define GL_TYPE 0x92FA
#endif
#ifndef GL_ARRAY_SIZE
#  define GL_ARRAY_SIZE 0x92FB
#endif
#ifndef GL_OFFSET
#  define GL_OFFSET 0x92FC
#endif
#ifndef GL_BLOCK_INDEX
#  define GL_BLOCK_INDEX 0x92FD
#endif
#ifndef GL_ARRAY_STRIDE
#  define GL_ARRAY_STRIDE 0x92FE
#endif
#ifndef GL_MATRIX_STRIDE
#  define GL_MATRIX_STRIDE 0x92FF
#endif
#ifndef GL_IS_ROW_MAJOR
#  define GL_IS_ROW_MAJOR 0x9300
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_INDEX
#  define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#endif
#ifndef GL_BUFFER_BINDING
#  define GL_BUFFER_BINDING 0x9302
#endif
#ifndef GL_BUFFER_DATA_SIZE
#  define GL_BUFFER_DATA_SIZE 0x9303
#endif
#ifndef GL_NUM_ACTIVE_VARIABLES
#  define GL_NUM_ACTIVE_VARIABLES 0x9304
#endif
#ifndef GL_ACTIVE_VARIABLES
#  define GL_ACTIVE_VARIABLES 0x9305
#endif
#ifndef GL_REFERENCED_BY_VERTEX_SHADER
#  define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#endif
#ifndef GL_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#endif
#ifndef GL_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#endif
#ifndef GL_REFERENCED_BY_GEOMETRY_SHADER
#  define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#endif
#ifndef GL_REFERENCED_BY_FRAGMENT_SHADER
#  define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#endif
#ifndef GL_REFERENCED_BY_COMPUTE_SHADER
#  define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#endif
#ifndef GL_TOP_LEVEL_ARRAY_SIZE
#  define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#endif
#ifndef GL_TOP_LEVEL_ARRAY_STRIDE
#  define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#endif
#ifndef GL_LOCATION
#  define GL_LOCATION 0x930E
#endif
#ifndef GL_LOCATION_INDEX
#  define GL_LOCATION_INDEX 0x930F
#endif
#ifndef GL_IS_PER_PATCH
#  define GL_IS_PER_PATCH 0x92E7
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
typedef GLuint (APIENTRYP PFNGLUXGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
extern PFNGLUXGETPROGRAMINTERFACEIVPROC glGetProgramInterfaceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
extern PFNGLUXGETPROGRAMRESOURCEINDEXPROC glGetProgramResourceIndex;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
extern PFNGLUXGETPROGRAMRESOURCENAMEPROC glGetProgramResourceName;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
extern PFNGLUXGETPROGRAMRESOURCEIVPROC glGetProgramResourceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
extern PFNGLUXGETPROGRAMRESOURCELOCATIONPROC glGetProgramResourceLocation;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
extern PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC glGetProgramResourceLocationIndex;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:13 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_program_interface_query__
#define __GLUX_GL_ARB_program_interface_query__

GLUX_NEW_PLUGIN(GL_ARB_program_interface_query);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_UNIFORM
#  define GL_UNIFORM 0x92E1
#endif
#ifndef GL_UNIFORM_BLOCK
#  define GL_UNIFORM_BLOCK 0x92E2
#endif
#ifndef GL_PROGRAM_INPUT
#  define GL_PROGRAM_INPUT 0x92E3
#endif
#ifndef GL_PROGRAM_OUTPUT
#  define GL_PROGRAM_OUTPUT 0x92E4
#endif
#ifndef GL_BUFFER_VARIABLE
#  define GL_BUFFER_VARIABLE 0x92E5
#endif
#ifndef GL_SHADER_STORAGE_BLOCK
#  define GL_SHADER_STORAGE_BLOCK 0x92E6
#endif
#ifndef GL_VERTEX_SUBROUTINE
#  define GL_VERTEX_SUBROUTINE 0x92E8
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE
#  define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE
#  define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#endif
#ifndef GL_GEOMETRY_SUBROUTINE
#  define GL_GEOMETRY_SUBROUTINE 0x92EB
#endif
#ifndef GL_FRAGMENT_SUBROUTINE
#  define GL_FRAGMENT_SUBROUTINE 0x92EC
#endif
#ifndef GL_COMPUTE_SUBROUTINE
#  define GL_COMPUTE_SUBROUTINE 0x92ED
#endif
#ifndef GL_VERTEX_SUBROUTINE_UNIFORM
#  define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE_UNIFORM
#  define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE_UNIFORM
#  define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#endif
#ifndef GL_GEOMETRY_SUBROUTINE_UNIFORM
#  define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#endif
#ifndef GL_FRAGMENT_SUBROUTINE_UNIFORM
#  define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#endif
#ifndef GL_COMPUTE_SUBROUTINE_UNIFORM
#  define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYING
#  define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#endif
#ifndef GL_ACTIVE_RESOURCES
#  define GL_ACTIVE_RESOURCES 0x92F5
#endif
#ifndef GL_MAX_NAME_LENGTH
#  define GL_MAX_NAME_LENGTH 0x92F6
#endif
#ifndef GL_MAX_NUM_ACTIVE_VARIABLES
#  define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#endif
#ifndef GL_MAX_NUM_COMPATIBLE_SUBROUTINES
#  define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#endif
#ifndef GL_NAME_LENGTH
#  define GL_NAME_LENGTH 0x92F9
#endif
#ifndef GL_TYPE
#  define GL_TYPE 0x92FA
#endif
#ifndef GL_ARRAY_SIZE
#  define GL_ARRAY_SIZE 0x92FB
#endif
#ifndef GL_OFFSET
#  define GL_OFFSET 0x92FC
#endif
#ifndef GL_BLOCK_INDEX
#  define GL_BLOCK_INDEX 0x92FD
#endif
#ifndef GL_ARRAY_STRIDE
#  define GL_ARRAY_STRIDE 0x92FE
#endif
#ifndef GL_MATRIX_STRIDE
#  define GL_MATRIX_STRIDE 0x92FF
#endif
#ifndef GL_IS_ROW_MAJOR
#  define GL_IS_ROW_MAJOR 0x9300
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_INDEX
#  define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#endif
#ifndef GL_BUFFER_BINDING
#  define GL_BUFFER_BINDING 0x9302
#endif
#ifndef GL_BUFFER_DATA_SIZE
#  define GL_BUFFER_DATA_SIZE 0x9303
#endif
#ifndef GL_NUM_ACTIVE_VARIABLES
#  define GL_NUM_ACTIVE_VARIABLES 0x9304
#endif
#ifndef GL_ACTIVE_VARIABLES
#  define GL_ACTIVE_VARIABLES 0x9305
#endif
#ifndef GL_REFERENCED_BY_VERTEX_SHADER
#  define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#endif
#ifndef GL_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#endif
#ifndef GL_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#endif
#ifndef GL_REFERENCED_BY_GEOMETRY_SHADER
#  define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#endif
#ifndef GL_REFERENCED_BY_FRAGMENT_SHADER
#  define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#endif
#ifndef GL_REFERENCED_BY_COMPUTE_SHADER
#  define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#endif
#ifndef GL_TOP_LEVEL_ARRAY_SIZE
#  define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#endif
#ifndef GL_TOP_LEVEL_ARRAY_STRIDE
#  define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#endif
#ifndef GL_LOCATION
#  define GL_LOCATION 0x930E
#endif
#ifndef GL_LOCATION_INDEX
#  define GL_LOCATION_INDEX 0x930F
#endif
#ifndef GL_IS_PER_PATCH
#  define GL_IS_PER_PATCH 0x92E7
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
typedef GLuint (APIENTRYP PFNGLUXGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
extern PFNGLUXGETPROGRAMINTERFACEIVPROC glGetProgramInterfaceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
extern PFNGLUXGETPROGRAMRESOURCEINDEXPROC glGetProgramResourceIndex;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
extern PFNGLUXGETPROGRAMRESOURCENAMEPROC glGetProgramResourceName;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
extern PFNGLUXGETPROGRAMRESOURCEIVPROC glGetProgramResourceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
extern PFNGLUXGETPROGRAMRESOURCELOCATIONPROC glGetProgramResourceLocation;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
extern PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC glGetProgramResourceLocationIndex;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:29 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_program_interface_query__
#define __GLUX_GL_ARB_program_interface_query__

GLUX_NEW_PLUGIN(GL_ARB_program_interface_query);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_UNIFORM
#  define GL_UNIFORM 0x92E1
#endif
#ifndef GL_UNIFORM_BLOCK
#  define GL_UNIFORM_BLOCK 0x92E2
#endif
#ifndef GL_PROGRAM_INPUT
#  define GL_PROGRAM_INPUT 0x92E3
#endif
#ifndef GL_PROGRAM_OUTPUT
#  define GL_PROGRAM_OUTPUT 0x92E4
#endif
#ifndef GL_BUFFER_VARIABLE
#  define GL_BUFFER_VARIABLE 0x92E5
#endif
#ifndef GL_SHADER_STORAGE_BLOCK
#  define GL_SHADER_STORAGE_BLOCK 0x92E6
#endif
#ifndef GL_VERTEX_SUBROUTINE
#  define GL_VERTEX_SUBROUTINE 0x92E8
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE
#  define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE
#  define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#endif
#ifndef GL_GEOMETRY_SUBROUTINE
#  define GL_GEOMETRY_SUBROUTINE 0x92EB
#endif
#ifndef GL_FRAGMENT_SUBROUTINE
#  define GL_FRAGMENT_SUBROUTINE 0x92EC
#endif
#ifndef GL_COMPUTE_SUBROUTINE
#  define GL_COMPUTE_SUBROUTINE 0x92ED
#endif
#ifndef GL_VERTEX_SUBROUTINE_UNIFORM
#  define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE_UNIFORM
#  define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE_UNIFORM
#  define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#endif
#ifndef GL_GEOMETRY_SUBROUTINE_UNIFORM
#  define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#endif
#ifndef GL_FRAGMENT_SUBROUTINE_UNIFORM
#  define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#endif
#ifndef GL_COMPUTE_SUBROUTINE_UNIFORM
#  define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYING
#  define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#endif
#ifndef GL_ACTIVE_RESOURCES
#  define GL_ACTIVE_RESOURCES 0x92F5
#endif
#ifndef GL_MAX_NAME_LENGTH
#  define GL_MAX_NAME_LENGTH 0x92F6
#endif
#ifndef GL_MAX_NUM_ACTIVE_VARIABLES
#  define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#endif
#ifndef GL_MAX_NUM_COMPATIBLE_SUBROUTINES
#  define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#endif
#ifndef GL_NAME_LENGTH
#  define GL_NAME_LENGTH 0x92F9
#endif
#ifndef GL_TYPE
#  define GL_TYPE 0x92FA
#endif
#ifndef GL_ARRAY_SIZE
#  define GL_ARRAY_SIZE 0x92FB
#endif
#ifndef GL_OFFSET
#  define GL_OFFSET 0x92FC
#endif
#ifndef GL_BLOCK_INDEX
#  define GL_BLOCK_INDEX 0x92FD
#endif
#ifndef GL_ARRAY_STRIDE
#  define GL_ARRAY_STRIDE 0x92FE
#endif
#ifndef GL_MATRIX_STRIDE
#  define GL_MATRIX_STRIDE 0x92FF
#endif
#ifndef GL_IS_ROW_MAJOR
#  define GL_IS_ROW_MAJOR 0x9300
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_INDEX
#  define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#endif
#ifndef GL_BUFFER_BINDING
#  define GL_BUFFER_BINDING 0x9302
#endif
#ifndef GL_BUFFER_DATA_SIZE
#  define GL_BUFFER_DATA_SIZE 0x9303
#endif
#ifndef GL_NUM_ACTIVE_VARIABLES
#  define GL_NUM_ACTIVE_VARIABLES 0x9304
#endif
#ifndef GL_ACTIVE_VARIABLES
#  define GL_ACTIVE_VARIABLES 0x9305
#endif
#ifndef GL_REFERENCED_BY_VERTEX_SHADER
#  define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#endif
#ifndef GL_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#endif
#ifndef GL_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#endif
#ifndef GL_REFERENCED_BY_GEOMETRY_SHADER
#  define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#endif
#ifndef GL_REFERENCED_BY_FRAGMENT_SHADER
#  define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#endif
#ifndef GL_REFERENCED_BY_COMPUTE_SHADER
#  define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#endif
#ifndef GL_TOP_LEVEL_ARRAY_SIZE
#  define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#endif
#ifndef GL_TOP_LEVEL_ARRAY_STRIDE
#  define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#endif
#ifndef GL_LOCATION
#  define GL_LOCATION 0x930E
#endif
#ifndef GL_LOCATION_INDEX
#  define GL_LOCATION_INDEX 0x930F
#endif
#ifndef GL_IS_PER_PATCH
#  define GL_IS_PER_PATCH 0x92E7
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
typedef GLuint (APIENTRYP PFNGLUXGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
extern PFNGLUXGETPROGRAMINTERFACEIVPROC glGetProgramInterfaceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
extern PFNGLUXGETPROGRAMRESOURCEINDEXPROC glGetProgramResourceIndex;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
extern PFNGLUXGETPROGRAMRESOURCENAMEPROC glGetProgramResourceName;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
extern PFNGLUXGETPROGRAMRESOURCEIVPROC glGetProgramResourceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
extern PFNGLUXGETPROGRAMRESOURCELOCATIONPROC glGetProgramResourceLocation;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
extern PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC glGetProgramResourceLocationIndex;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:32 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_program_interface_query__
#define __GLUX_GL_ARB_program_interface_query__

GLUX_NEW_PLUGIN(GL_ARB_program_interface_query);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_UNIFORM
#  define GL_UNIFORM 0x92E1
#endif
#ifndef GL_UNIFORM_BLOCK
#  define GL_UNIFORM_BLOCK 0x92E2
#endif
#ifndef GL_PROGRAM_INPUT
#  define GL_PROGRAM_INPUT 0x92E3
#endif
#ifndef GL_PROGRAM_OUTPUT
#  define GL_PROGRAM_OUTPUT 0x92E4
#endif
#ifndef GL_BUFFER_VARIABLE
#  define GL_BUFFER_VARIABLE 0x92E5
#endif
#ifndef GL_SHADER_STORAGE_BLOCK
#  define GL_SHADER_STORAGE_BLOCK 0x92E6
#endif
#ifndef GL_VERTEX_SUBROUTINE
#  define GL_VERTEX_SUBROUTINE 0x92E8
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE
#  define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE
#  define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#endif
#ifndef GL_GEOMETRY_SUBROUTINE
#  define GL_GEOMETRY_SUBROUTINE 0x92EB
#endif
#ifndef GL_FRAGMENT_SUBROUTINE
#  define GL_FRAGMENT_SUBROUTINE 0x92EC
#endif
#ifndef GL_COMPUTE_SUBROUTINE
#  define GL_COMPUTE_SUBROUTINE 0x92ED
#endif
#ifndef GL_VERTEX_SUBROUTINE_UNIFORM
#  define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE_UNIFORM
#  define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE_UNIFORM
#  define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#endif
#ifndef GL_GEOMETRY_SUBROUTINE_UNIFORM
#  define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#endif
#ifndef GL_FRAGMENT_SUBROUTINE_UNIFORM
#  define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#endif
#ifndef GL_COMPUTE_SUBROUTINE_UNIFORM
#  define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYING
#  define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#endif
#ifndef GL_ACTIVE_RESOURCES
#  define GL_ACTIVE_RESOURCES 0x92F5
#endif
#ifndef GL_MAX_NAME_LENGTH
#  define GL_MAX_NAME_LENGTH 0x92F6
#endif
#ifndef GL_MAX_NUM_ACTIVE_VARIABLES
#  define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#endif
#ifndef GL_MAX_NUM_COMPATIBLE_SUBROUTINES
#  define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#endif
#ifndef GL_NAME_LENGTH
#  define GL_NAME_LENGTH 0x92F9
#endif
#ifndef GL_TYPE
#  define GL_TYPE 0x92FA
#endif
#ifndef GL_ARRAY_SIZE
#  define GL_ARRAY_SIZE 0x92FB
#endif
#ifndef GL_OFFSET
#  define GL_OFFSET 0x92FC
#endif
#ifndef GL_BLOCK_INDEX
#  define GL_BLOCK_INDEX 0x92FD
#endif
#ifndef GL_ARRAY_STRIDE
#  define GL_ARRAY_STRIDE 0x92FE
#endif
#ifndef GL_MATRIX_STRIDE
#  define GL_MATRIX_STRIDE 0x92FF
#endif
#ifndef GL_IS_ROW_MAJOR
#  define GL_IS_ROW_MAJOR 0x9300
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_INDEX
#  define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#endif
#ifndef GL_BUFFER_BINDING
#  define GL_BUFFER_BINDING 0x9302
#endif
#ifndef GL_BUFFER_DATA_SIZE
#  define GL_BUFFER_DATA_SIZE 0x9303
#endif
#ifndef GL_NUM_ACTIVE_VARIABLES
#  define GL_NUM_ACTIVE_VARIABLES 0x9304
#endif
#ifndef GL_ACTIVE_VARIABLES
#  define GL_ACTIVE_VARIABLES 0x9305
#endif
#ifndef GL_REFERENCED_BY_VERTEX_SHADER
#  define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#endif
#ifndef GL_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#endif
#ifndef GL_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#endif
#ifndef GL_REFERENCED_BY_GEOMETRY_SHADER
#  define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#endif
#ifndef GL_REFERENCED_BY_FRAGMENT_SHADER
#  define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#endif
#ifndef GL_REFERENCED_BY_COMPUTE_SHADER
#  define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#endif
#ifndef GL_TOP_LEVEL_ARRAY_SIZE
#  define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#endif
#ifndef GL_TOP_LEVEL_ARRAY_STRIDE
#  define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#endif
#ifndef GL_LOCATION
#  define GL_LOCATION 0x930E
#endif
#ifndef GL_LOCATION_INDEX
#  define GL_LOCATION_INDEX 0x930F
#endif
#ifndef GL_IS_PER_PATCH
#  define GL_IS_PER_PATCH 0x92E7
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
typedef GLuint (APIENTRYP PFNGLUXGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
extern PFNGLUXGETPROGRAMINTERFACEIVPROC glGetProgramInterfaceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
extern PFNGLUXGETPROGRAMRESOURCEINDEXPROC glGetProgramResourceIndex;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
extern PFNGLUXGETPROGRAMRESOURCENAMEPROC glGetProgramResourceName;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
extern PFNGLUXGETPROGRAMRESOURCEIVPROC glGetProgramResourceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
extern PFNGLUXGETPROGRAMRESOURCELOCATIONPROC glGetProgramResourceLocation;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
extern PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC glGetProgramResourceLocationIndex;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:54 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_program_interface_query__
#define __GLUX_GL_ARB_program_interface_query__

GLUX_NEW_PLUGIN(GL_ARB_program_interface_query);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_UNIFORM
#  define GL_UNIFORM 0x92E1
#endif
#ifndef GL_UNIFORM_BLOCK
#  define GL_UNIFORM_BLOCK 0x92E2
#endif
#ifndef GL_PROGRAM_INPUT
#  define GL_PROGRAM_INPUT 0x92E3
#endif
#ifndef GL_PROGRAM_OUTPUT
#  define GL_PROGRAM_OUTPUT 0x92E4
#endif
#ifndef GL_BUFFER_VARIABLE
#  define GL_BUFFER_VARIABLE 0x92E5
#endif
#ifndef GL_SHADER_STORAGE_BLOCK
#  define GL_SHADER_STORAGE_BLOCK 0x92E6
#endif
#ifndef GL_VERTEX_SUBROUTINE
#  define GL_VERTEX_SUBROUTINE 0x92E8
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE
#  define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE
#  define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#endif
#ifndef GL_GEOMETRY_SUBROUTINE
#  define GL_GEOMETRY_SUBROUTINE 0x92EB
#endif
#ifndef GL_FRAGMENT_SUBROUTINE
#  define GL_FRAGMENT_SUBROUTINE 0x92EC
#endif
#ifndef GL_COMPUTE_SUBROUTINE
#  define GL_COMPUTE_SUBROUTINE 0x92ED
#endif
#ifndef GL_VERTEX_SUBROUTINE_UNIFORM
#  define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE_UNIFORM
#  define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE_UNIFORM
#  define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#endif
#ifndef GL_GEOMETRY_SUBROUTINE_UNIFORM
#  define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#endif
#ifndef GL_FRAGMENT_SUBROUTINE_UNIFORM
#  define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#endif
#ifndef GL_COMPUTE_SUBROUTINE_UNIFORM
#  define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYING
#  define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#endif
#ifndef GL_ACTIVE_RESOURCES
#  define GL_ACTIVE_RESOURCES 0x92F5
#endif
#ifndef GL_MAX_NAME_LENGTH
#  define GL_MAX_NAME_LENGTH 0x92F6
#endif
#ifndef GL_MAX_NUM_ACTIVE_VARIABLES
#  define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#endif
#ifndef GL_MAX_NUM_COMPATIBLE_SUBROUTINES
#  define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#endif
#ifndef GL_NAME_LENGTH
#  define GL_NAME_LENGTH 0x92F9
#endif
#ifndef GL_TYPE
#  define GL_TYPE 0x92FA
#endif
#ifndef GL_ARRAY_SIZE
#  define GL_ARRAY_SIZE 0x92FB
#endif
#ifndef GL_OFFSET
#  define GL_OFFSET 0x92FC
#endif
#ifndef GL_BLOCK_INDEX
#  define GL_BLOCK_INDEX 0x92FD
#endif
#ifndef GL_ARRAY_STRIDE
#  define GL_ARRAY_STRIDE 0x92FE
#endif
#ifndef GL_MATRIX_STRIDE
#  define GL_MATRIX_STRIDE 0x92FF
#endif
#ifndef GL_IS_ROW_MAJOR
#  define GL_IS_ROW_MAJOR 0x9300
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_INDEX
#  define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#endif
#ifndef GL_BUFFER_BINDING
#  define GL_BUFFER_BINDING 0x9302
#endif
#ifndef GL_BUFFER_DATA_SIZE
#  define GL_BUFFER_DATA_SIZE 0x9303
#endif
#ifndef GL_NUM_ACTIVE_VARIABLES
#  define GL_NUM_ACTIVE_VARIABLES 0x9304
#endif
#ifndef GL_ACTIVE_VARIABLES
#  define GL_ACTIVE_VARIABLES 0x9305
#endif
#ifndef GL_REFERENCED_BY_VERTEX_SHADER
#  define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#endif
#ifndef GL_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#endif
#ifndef GL_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#endif
#ifndef GL_REFERENCED_BY_GEOMETRY_SHADER
#  define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#endif
#ifndef GL_REFERENCED_BY_FRAGMENT_SHADER
#  define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#endif
#ifndef GL_REFERENCED_BY_COMPUTE_SHADER
#  define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#endif
#ifndef GL_TOP_LEVEL_ARRAY_SIZE
#  define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#endif
#ifndef GL_TOP_LEVEL_ARRAY_STRIDE
#  define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#endif
#ifndef GL_LOCATION
#  define GL_LOCATION 0x930E
#endif
#ifndef GL_LOCATION_INDEX
#  define GL_LOCATION_INDEX 0x930F
#endif
#ifndef GL_IS_PER_PATCH
#  define GL_IS_PER_PATCH 0x92E7
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
typedef GLuint (APIENTRYP PFNGLUXGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
extern PFNGLUXGETPROGRAMINTERFACEIVPROC glGetProgramInterfaceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
extern PFNGLUXGETPROGRAMRESOURCEINDEXPROC glGetProgramResourceIndex;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
extern PFNGLUXGETPROGRAMRESOURCENAMEPROC glGetProgramResourceName;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
extern PFNGLUXGETPROGRAMRESOURCEIVPROC glGetProgramResourceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
extern PFNGLUXGETPROGRAMRESOURCELOCATIONPROC glGetProgramResourceLocation;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
extern PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC glGetProgramResourceLocationIndex;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:28:04 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_program_interface_query__
#define __GLUX_GL_ARB_program_interface_query__

GLUX_NEW_PLUGIN(GL_ARB_program_interface_query);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_UNIFORM
#  define GL_UNIFORM 0x92E1
#endif
#ifndef GL_UNIFORM_BLOCK
#  define GL_UNIFORM_BLOCK 0x92E2
#endif
#ifndef GL_PROGRAM_INPUT
#  define GL_PROGRAM_INPUT 0x92E3
#endif
#ifndef GL_PROGRAM_OUTPUT
#  define GL_PROGRAM_OUTPUT 0x92E4
#endif
#ifndef GL_BUFFER_VARIABLE
#  define GL_BUFFER_VARIABLE 0x92E5
#endif
#ifndef GL_SHADER_STORAGE_BLOCK
#  define GL_SHADER_STORAGE_BLOCK 0x92E6
#endif
#ifndef GL_VERTEX_SUBROUTINE
#  define GL_VERTEX_SUBROUTINE 0x92E8
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE
#  define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE
#  define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#endif
#ifndef GL_GEOMETRY_SUBROUTINE
#  define GL_GEOMETRY_SUBROUTINE 0x92EB
#endif
#ifndef GL_FRAGMENT_SUBROUTINE
#  define GL_FRAGMENT_SUBROUTINE 0x92EC
#endif
#ifndef GL_COMPUTE_SUBROUTINE
#  define GL_COMPUTE_SUBROUTINE 0x92ED
#endif
#ifndef GL_VERTEX_SUBROUTINE_UNIFORM
#  define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE_UNIFORM
#  define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE_UNIFORM
#  define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#endif
#ifndef GL_GEOMETRY_SUBROUTINE_UNIFORM
#  define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#endif
#ifndef GL_FRAGMENT_SUBROUTINE_UNIFORM
#  define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#endif
#ifndef GL_COMPUTE_SUBROUTINE_UNIFORM
#  define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYING
#  define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#endif
#ifndef GL_ACTIVE_RESOURCES
#  define GL_ACTIVE_RESOURCES 0x92F5
#endif
#ifndef GL_MAX_NAME_LENGTH
#  define GL_MAX_NAME_LENGTH 0x92F6
#endif
#ifndef GL_MAX_NUM_ACTIVE_VARIABLES
#  define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#endif
#ifndef GL_MAX_NUM_COMPATIBLE_SUBROUTINES
#  define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#endif
#ifndef GL_NAME_LENGTH
#  define GL_NAME_LENGTH 0x92F9
#endif
#ifndef GL_TYPE
#  define GL_TYPE 0x92FA
#endif
#ifndef GL_ARRAY_SIZE
#  define GL_ARRAY_SIZE 0x92FB
#endif
#ifndef GL_OFFSET
#  define GL_OFFSET 0x92FC
#endif
#ifndef GL_BLOCK_INDEX
#  define GL_BLOCK_INDEX 0x92FD
#endif
#ifndef GL_ARRAY_STRIDE
#  define GL_ARRAY_STRIDE 0x92FE
#endif
#ifndef GL_MATRIX_STRIDE
#  define GL_MATRIX_STRIDE 0x92FF
#endif
#ifndef GL_IS_ROW_MAJOR
#  define GL_IS_ROW_MAJOR 0x9300
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_INDEX
#  define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#endif
#ifndef GL_BUFFER_BINDING
#  define GL_BUFFER_BINDING 0x9302
#endif
#ifndef GL_BUFFER_DATA_SIZE
#  define GL_BUFFER_DATA_SIZE 0x9303
#endif
#ifndef GL_NUM_ACTIVE_VARIABLES
#  define GL_NUM_ACTIVE_VARIABLES 0x9304
#endif
#ifndef GL_ACTIVE_VARIABLES
#  define GL_ACTIVE_VARIABLES 0x9305
#endif
#ifndef GL_REFERENCED_BY_VERTEX_SHADER
#  define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#endif
#ifndef GL_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#endif
#ifndef GL_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#endif
#ifndef GL_REFERENCED_BY_GEOMETRY_SHADER
#  define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#endif
#ifndef GL_REFERENCED_BY_FRAGMENT_SHADER
#  define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#endif
#ifndef GL_REFERENCED_BY_COMPUTE_SHADER
#  define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#endif
#ifndef GL_TOP_LEVEL_ARRAY_SIZE
#  define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#endif
#ifndef GL_TOP_LEVEL_ARRAY_STRIDE
#  define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#endif
#ifndef GL_LOCATION
#  define GL_LOCATION 0x930E
#endif
#ifndef GL_LOCATION_INDEX
#  define GL_LOCATION_INDEX 0x930F
#endif
#ifndef GL_IS_PER_PATCH
#  define GL_IS_PER_PATCH 0x92E7
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
typedef GLuint (APIENTRYP PFNGLUXGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
extern PFNGLUXGETPROGRAMINTERFACEIVPROC glGetProgramInterfaceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
extern PFNGLUXGETPROGRAMRESOURCEINDEXPROC glGetProgramResourceIndex;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
extern PFNGLUXGETPROGRAMRESOURCENAMEPROC glGetProgramResourceName;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
extern PFNGLUXGETPROGRAMRESOURCEIVPROC glGetProgramResourceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
extern PFNGLUXGETPROGRAMRESOURCELOCATIONPROC glGetProgramResourceLocation;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
extern PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC glGetProgramResourceLocationIndex;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:16:58 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_program_interface_query__
#define __GLUX_GL_ARB_program_interface_query__

GLUX_NEW_PLUGIN(GL_ARB_program_interface_query);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_UNIFORM
#  define GL_UNIFORM 0x92E1
#endif
#ifndef GL_UNIFORM_BLOCK
#  define GL_UNIFORM_BLOCK 0x92E2
#endif
#ifndef GL_PROGRAM_INPUT
#  define GL_PROGRAM_INPUT 0x92E3
#endif
#ifndef GL_PROGRAM_OUTPUT
#  define GL_PROGRAM_OUTPUT 0x92E4
#endif
#ifndef GL_BUFFER_VARIABLE
#  define GL_BUFFER_VARIABLE 0x92E5
#endif
#ifndef GL_SHADER_STORAGE_BLOCK
#  define GL_SHADER_STORAGE_BLOCK 0x92E6
#endif
#ifndef GL_VERTEX_SUBROUTINE
#  define GL_VERTEX_SUBROUTINE 0x92E8
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE
#  define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE
#  define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#endif
#ifndef GL_GEOMETRY_SUBROUTINE
#  define GL_GEOMETRY_SUBROUTINE 0x92EB
#endif
#ifndef GL_FRAGMENT_SUBROUTINE
#  define GL_FRAGMENT_SUBROUTINE 0x92EC
#endif
#ifndef GL_COMPUTE_SUBROUTINE
#  define GL_COMPUTE_SUBROUTINE 0x92ED
#endif
#ifndef GL_VERTEX_SUBROUTINE_UNIFORM
#  define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE_UNIFORM
#  define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE_UNIFORM
#  define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#endif
#ifndef GL_GEOMETRY_SUBROUTINE_UNIFORM
#  define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#endif
#ifndef GL_FRAGMENT_SUBROUTINE_UNIFORM
#  define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#endif
#ifndef GL_COMPUTE_SUBROUTINE_UNIFORM
#  define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYING
#  define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#endif
#ifndef GL_ACTIVE_RESOURCES
#  define GL_ACTIVE_RESOURCES 0x92F5
#endif
#ifndef GL_MAX_NAME_LENGTH
#  define GL_MAX_NAME_LENGTH 0x92F6
#endif
#ifndef GL_MAX_NUM_ACTIVE_VARIABLES
#  define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#endif
#ifndef GL_MAX_NUM_COMPATIBLE_SUBROUTINES
#  define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#endif
#ifndef GL_NAME_LENGTH
#  define GL_NAME_LENGTH 0x92F9
#endif
#ifndef GL_TYPE
#  define GL_TYPE 0x92FA
#endif
#ifndef GL_ARRAY_SIZE
#  define GL_ARRAY_SIZE 0x92FB
#endif
#ifndef GL_OFFSET
#  define GL_OFFSET 0x92FC
#endif
#ifndef GL_BLOCK_INDEX
#  define GL_BLOCK_INDEX 0x92FD
#endif
#ifndef GL_ARRAY_STRIDE
#  define GL_ARRAY_STRIDE 0x92FE
#endif
#ifndef GL_MATRIX_STRIDE
#  define GL_MATRIX_STRIDE 0x92FF
#endif
#ifndef GL_IS_ROW_MAJOR
#  define GL_IS_ROW_MAJOR 0x9300
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_INDEX
#  define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#endif
#ifndef GL_BUFFER_BINDING
#  define GL_BUFFER_BINDING 0x9302
#endif
#ifndef GL_BUFFER_DATA_SIZE
#  define GL_BUFFER_DATA_SIZE 0x9303
#endif
#ifndef GL_NUM_ACTIVE_VARIABLES
#  define GL_NUM_ACTIVE_VARIABLES 0x9304
#endif
#ifndef GL_ACTIVE_VARIABLES
#  define GL_ACTIVE_VARIABLES 0x9305
#endif
#ifndef GL_REFERENCED_BY_VERTEX_SHADER
#  define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#endif
#ifndef GL_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#endif
#ifndef GL_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#endif
#ifndef GL_REFERENCED_BY_GEOMETRY_SHADER
#  define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#endif
#ifndef GL_REFERENCED_BY_FRAGMENT_SHADER
#  define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#endif
#ifndef GL_REFERENCED_BY_COMPUTE_SHADER
#  define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#endif
#ifndef GL_TOP_LEVEL_ARRAY_SIZE
#  define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#endif
#ifndef GL_TOP_LEVEL_ARRAY_STRIDE
#  define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#endif
#ifndef GL_LOCATION
#  define GL_LOCATION 0x930E
#endif
#ifndef GL_LOCATION_INDEX
#  define GL_LOCATION_INDEX 0x930F
#endif
#ifndef GL_IS_PER_PATCH
#  define GL_IS_PER_PATCH 0x92E7
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
typedef GLuint (APIENTRYP PFNGLUXGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
extern PFNGLUXGETPROGRAMINTERFACEIVPROC glGetProgramInterfaceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
extern PFNGLUXGETPROGRAMRESOURCEINDEXPROC glGetProgramResourceIndex;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
extern PFNGLUXGETPROGRAMRESOURCENAMEPROC glGetProgramResourceName;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
extern PFNGLUXGETPROGRAMRESOURCEIVPROC glGetProgramResourceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
extern PFNGLUXGETPROGRAMRESOURCELOCATIONPROC glGetProgramResourceLocation;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
extern PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC glGetProgramResourceLocationIndex;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_program_interface_query__
#define __GLUX_GL_ARB_program_interface_query__

GLUX_NEW_PLUGIN(GL_ARB_program_interface_query);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_UNIFORM
#  define GL_UNIFORM 0x92E1
#endif
#ifndef GL_UNIFORM_BLOCK
#  define GL_UNIFORM_BLOCK 0x92E2
#endif
#ifndef GL_PROGRAM_INPUT
#  define GL_PROGRAM_INPUT 0x92E3
#endif
#ifndef GL_PROGRAM_OUTPUT
#  define GL_PROGRAM_OUTPUT 0x92E4
#endif
#ifndef GL_BUFFER_VARIABLE
#  define GL_BUFFER_VARIABLE 0x92E5
#endif
#ifndef GL_SHADER_STORAGE_BLOCK
#  define GL_SHADER_STORAGE_BLOCK 0x92E6
#endif
#ifndef GL_VERTEX_SUBROUTINE
#  define GL_VERTEX_SUBROUTINE 0x92E8
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE
#  define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE
#  define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#endif
#ifndef GL_GEOMETRY_SUBROUTINE
#  define GL_GEOMETRY_SUBROUTINE 0x92EB
#endif
#ifndef GL_FRAGMENT_SUBROUTINE
#  define GL_FRAGMENT_SUBROUTINE 0x92EC
#endif
#ifndef GL_COMPUTE_SUBROUTINE
#  define GL_COMPUTE_SUBROUTINE 0x92ED
#endif
#ifndef GL_VERTEX_SUBROUTINE_UNIFORM
#  define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE_UNIFORM
#  define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE_UNIFORM
#  define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#endif
#ifndef GL_GEOMETRY_SUBROUTINE_UNIFORM
#  define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#endif
#ifndef GL_FRAGMENT_SUBROUTINE_UNIFORM
#  define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#endif
#ifndef GL_COMPUTE_SUBROUTINE_UNIFORM
#  define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYING
#  define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#endif
#ifndef GL_ACTIVE_RESOURCES
#  define GL_ACTIVE_RESOURCES 0x92F5
#endif
#ifndef GL_MAX_NAME_LENGTH
#  define GL_MAX_NAME_LENGTH 0x92F6
#endif
#ifndef GL_MAX_NUM_ACTIVE_VARIABLES
#  define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#endif
#ifndef GL_MAX_NUM_COMPATIBLE_SUBROUTINES
#  define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#endif
#ifndef GL_NAME_LENGTH
#  define GL_NAME_LENGTH 0x92F9
#endif
#ifndef GL_TYPE
#  define GL_TYPE 0x92FA
#endif
#ifndef GL_ARRAY_SIZE
#  define GL_ARRAY_SIZE 0x92FB
#endif
#ifndef GL_OFFSET
#  define GL_OFFSET 0x92FC
#endif
#ifndef GL_BLOCK_INDEX
#  define GL_BLOCK_INDEX 0x92FD
#endif
#ifndef GL_ARRAY_STRIDE
#  define GL_ARRAY_STRIDE 0x92FE
#endif
#ifndef GL_MATRIX_STRIDE
#  define GL_MATRIX_STRIDE 0x92FF
#endif
#ifndef GL_IS_ROW_MAJOR
#  define GL_IS_ROW_MAJOR 0x9300
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_INDEX
#  define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#endif
#ifndef GL_BUFFER_BINDING
#  define GL_BUFFER_BINDING 0x9302
#endif
#ifndef GL_BUFFER_DATA_SIZE
#  define GL_BUFFER_DATA_SIZE 0x9303
#endif
#ifndef GL_NUM_ACTIVE_VARIABLES
#  define GL_NUM_ACTIVE_VARIABLES 0x9304
#endif
#ifndef GL_ACTIVE_VARIABLES
#  define GL_ACTIVE_VARIABLES 0x9305
#endif
#ifndef GL_REFERENCED_BY_VERTEX_SHADER
#  define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#endif
#ifndef GL_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#endif
#ifndef GL_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#endif
#ifndef GL_REFERENCED_BY_GEOMETRY_SHADER
#  define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#endif
#ifndef GL_REFERENCED_BY_FRAGMENT_SHADER
#  define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#endif
#ifndef GL_REFERENCED_BY_COMPUTE_SHADER
#  define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#endif
#ifndef GL_TOP_LEVEL_ARRAY_SIZE
#  define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#endif
#ifndef GL_TOP_LEVEL_ARRAY_STRIDE
#  define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#endif
#ifndef GL_LOCATION
#  define GL_LOCATION 0x930E
#endif
#ifndef GL_LOCATION_INDEX
#  define GL_LOCATION_INDEX 0x930F
#endif
#ifndef GL_IS_PER_PATCH
#  define GL_IS_PER_PATCH 0x92E7
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
typedef GLuint (APIENTRYP PFNGLUXGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
extern PFNGLUXGETPROGRAMINTERFACEIVPROC glGetProgramInterfaceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
extern PFNGLUXGETPROGRAMRESOURCEINDEXPROC glGetProgramResourceIndex;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
extern PFNGLUXGETPROGRAMRESOURCENAMEPROC glGetProgramResourceName;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
extern PFNGLUXGETPROGRAMRESOURCEIVPROC glGetProgramResourceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
extern PFNGLUXGETPROGRAMRESOURCELOCATIONPROC glGetProgramResourceLocation;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
extern PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC glGetProgramResourceLocationIndex;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:20 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_program_interface_query__
#define __GLUX_GL_ARB_program_interface_query__

GLUX_NEW_PLUGIN(GL_ARB_program_interface_query);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_UNIFORM
#  define GL_UNIFORM 0x92E1
#endif
#ifndef GL_UNIFORM_BLOCK
#  define GL_UNIFORM_BLOCK 0x92E2
#endif
#ifndef GL_PROGRAM_INPUT
#  define GL_PROGRAM_INPUT 0x92E3
#endif
#ifndef GL_PROGRAM_OUTPUT
#  define GL_PROGRAM_OUTPUT 0x92E4
#endif
#ifndef GL_BUFFER_VARIABLE
#  define GL_BUFFER_VARIABLE 0x92E5
#endif
#ifndef GL_SHADER_STORAGE_BLOCK
#  define GL_SHADER_STORAGE_BLOCK 0x92E6
#endif
#ifndef GL_VERTEX_SUBROUTINE
#  define GL_VERTEX_SUBROUTINE 0x92E8
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE
#  define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE
#  define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#endif
#ifndef GL_GEOMETRY_SUBROUTINE
#  define GL_GEOMETRY_SUBROUTINE 0x92EB
#endif
#ifndef GL_FRAGMENT_SUBROUTINE
#  define GL_FRAGMENT_SUBROUTINE 0x92EC
#endif
#ifndef GL_COMPUTE_SUBROUTINE
#  define GL_COMPUTE_SUBROUTINE 0x92ED
#endif
#ifndef GL_VERTEX_SUBROUTINE_UNIFORM
#  define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE_UNIFORM
#  define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE_UNIFORM
#  define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#endif
#ifndef GL_GEOMETRY_SUBROUTINE_UNIFORM
#  define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#endif
#ifndef GL_FRAGMENT_SUBROUTINE_UNIFORM
#  define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#endif
#ifndef GL_COMPUTE_SUBROUTINE_UNIFORM
#  define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYING
#  define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#endif
#ifndef GL_ACTIVE_RESOURCES
#  define GL_ACTIVE_RESOURCES 0x92F5
#endif
#ifndef GL_MAX_NAME_LENGTH
#  define GL_MAX_NAME_LENGTH 0x92F6
#endif
#ifndef GL_MAX_NUM_ACTIVE_VARIABLES
#  define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#endif
#ifndef GL_MAX_NUM_COMPATIBLE_SUBROUTINES
#  define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#endif
#ifndef GL_NAME_LENGTH
#  define GL_NAME_LENGTH 0x92F9
#endif
#ifndef GL_TYPE
#  define GL_TYPE 0x92FA
#endif
#ifndef GL_ARRAY_SIZE
#  define GL_ARRAY_SIZE 0x92FB
#endif
#ifndef GL_OFFSET
#  define GL_OFFSET 0x92FC
#endif
#ifndef GL_BLOCK_INDEX
#  define GL_BLOCK_INDEX 0x92FD
#endif
#ifndef GL_ARRAY_STRIDE
#  define GL_ARRAY_STRIDE 0x92FE
#endif
#ifndef GL_MATRIX_STRIDE
#  define GL_MATRIX_STRIDE 0x92FF
#endif
#ifndef GL_IS_ROW_MAJOR
#  define GL_IS_ROW_MAJOR 0x9300
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_INDEX
#  define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#endif
#ifndef GL_BUFFER_BINDING
#  define GL_BUFFER_BINDING 0x9302
#endif
#ifndef GL_BUFFER_DATA_SIZE
#  define GL_BUFFER_DATA_SIZE 0x9303
#endif
#ifndef GL_NUM_ACTIVE_VARIABLES
#  define GL_NUM_ACTIVE_VARIABLES 0x9304
#endif
#ifndef GL_ACTIVE_VARIABLES
#  define GL_ACTIVE_VARIABLES 0x9305
#endif
#ifndef GL_REFERENCED_BY_VERTEX_SHADER
#  define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#endif
#ifndef GL_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#endif
#ifndef GL_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#endif
#ifndef GL_REFERENCED_BY_GEOMETRY_SHADER
#  define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#endif
#ifndef GL_REFERENCED_BY_FRAGMENT_SHADER
#  define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#endif
#ifndef GL_REFERENCED_BY_COMPUTE_SHADER
#  define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#endif
#ifndef GL_TOP_LEVEL_ARRAY_SIZE
#  define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#endif
#ifndef GL_TOP_LEVEL_ARRAY_STRIDE
#  define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#endif
#ifndef GL_LOCATION
#  define GL_LOCATION 0x930E
#endif
#ifndef GL_LOCATION_INDEX
#  define GL_LOCATION_INDEX 0x930F
#endif
#ifndef GL_IS_PER_PATCH
#  define GL_IS_PER_PATCH 0x92E7
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
typedef GLuint (APIENTRYP PFNGLUXGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
extern PFNGLUXGETPROGRAMINTERFACEIVPROC glGetProgramInterfaceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
extern PFNGLUXGETPROGRAMRESOURCEINDEXPROC glGetProgramResourceIndex;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
extern PFNGLUXGETPROGRAMRESOURCENAMEPROC glGetProgramResourceName;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
extern PFNGLUXGETPROGRAMRESOURCEIVPROC glGetProgramResourceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
extern PFNGLUXGETPROGRAMRESOURCELOCATIONPROC glGetProgramResourceLocation;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
extern PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC glGetProgramResourceLocationIndex;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:00 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_program_interface_query__
#define __GLUX_GL_ARB_program_interface_query__

GLUX_NEW_PLUGIN(GL_ARB_program_interface_query);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_UNIFORM
#  define GL_UNIFORM 0x92E1
#endif
#ifndef GL_UNIFORM_BLOCK
#  define GL_UNIFORM_BLOCK 0x92E2
#endif
#ifndef GL_PROGRAM_INPUT
#  define GL_PROGRAM_INPUT 0x92E3
#endif
#ifndef GL_PROGRAM_OUTPUT
#  define GL_PROGRAM_OUTPUT 0x92E4
#endif
#ifndef GL_BUFFER_VARIABLE
#  define GL_BUFFER_VARIABLE 0x92E5
#endif
#ifndef GL_SHADER_STORAGE_BLOCK
#  define GL_SHADER_STORAGE_BLOCK 0x92E6
#endif
#ifndef GL_VERTEX_SUBROUTINE
#  define GL_VERTEX_SUBROUTINE 0x92E8
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE
#  define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE
#  define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#endif
#ifndef GL_GEOMETRY_SUBROUTINE
#  define GL_GEOMETRY_SUBROUTINE 0x92EB
#endif
#ifndef GL_FRAGMENT_SUBROUTINE
#  define GL_FRAGMENT_SUBROUTINE 0x92EC
#endif
#ifndef GL_COMPUTE_SUBROUTINE
#  define GL_COMPUTE_SUBROUTINE 0x92ED
#endif
#ifndef GL_VERTEX_SUBROUTINE_UNIFORM
#  define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE_UNIFORM
#  define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE_UNIFORM
#  define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#endif
#ifndef GL_GEOMETRY_SUBROUTINE_UNIFORM
#  define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#endif
#ifndef GL_FRAGMENT_SUBROUTINE_UNIFORM
#  define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#endif
#ifndef GL_COMPUTE_SUBROUTINE_UNIFORM
#  define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYING
#  define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#endif
#ifndef GL_ACTIVE_RESOURCES
#  define GL_ACTIVE_RESOURCES 0x92F5
#endif
#ifndef GL_MAX_NAME_LENGTH
#  define GL_MAX_NAME_LENGTH 0x92F6
#endif
#ifndef GL_MAX_NUM_ACTIVE_VARIABLES
#  define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#endif
#ifndef GL_MAX_NUM_COMPATIBLE_SUBROUTINES
#  define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#endif
#ifndef GL_NAME_LENGTH
#  define GL_NAME_LENGTH 0x92F9
#endif
#ifndef GL_TYPE
#  define GL_TYPE 0x92FA
#endif
#ifndef GL_ARRAY_SIZE
#  define GL_ARRAY_SIZE 0x92FB
#endif
#ifndef GL_OFFSET
#  define GL_OFFSET 0x92FC
#endif
#ifndef GL_BLOCK_INDEX
#  define GL_BLOCK_INDEX 0x92FD
#endif
#ifndef GL_ARRAY_STRIDE
#  define GL_ARRAY_STRIDE 0x92FE
#endif
#ifndef GL_MATRIX_STRIDE
#  define GL_MATRIX_STRIDE 0x92FF
#endif
#ifndef GL_IS_ROW_MAJOR
#  define GL_IS_ROW_MAJOR 0x9300
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_INDEX
#  define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#endif
#ifndef GL_BUFFER_BINDING
#  define GL_BUFFER_BINDING 0x9302
#endif
#ifndef GL_BUFFER_DATA_SIZE
#  define GL_BUFFER_DATA_SIZE 0x9303
#endif
#ifndef GL_NUM_ACTIVE_VARIABLES
#  define GL_NUM_ACTIVE_VARIABLES 0x9304
#endif
#ifndef GL_ACTIVE_VARIABLES
#  define GL_ACTIVE_VARIABLES 0x9305
#endif
#ifndef GL_REFERENCED_BY_VERTEX_SHADER
#  define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#endif
#ifndef GL_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#endif
#ifndef GL_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#endif
#ifndef GL_REFERENCED_BY_GEOMETRY_SHADER
#  define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#endif
#ifndef GL_REFERENCED_BY_FRAGMENT_SHADER
#  define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#endif
#ifndef GL_REFERENCED_BY_COMPUTE_SHADER
#  define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#endif
#ifndef GL_TOP_LEVEL_ARRAY_SIZE
#  define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#endif
#ifndef GL_TOP_LEVEL_ARRAY_STRIDE
#  define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#endif
#ifndef GL_LOCATION
#  define GL_LOCATION 0x930E
#endif
#ifndef GL_LOCATION_INDEX
#  define GL_LOCATION_INDEX 0x930F
#endif
#ifndef GL_IS_PER_PATCH
#  define GL_IS_PER_PATCH 0x92E7
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
typedef GLuint (APIENTRYP PFNGLUXGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
extern PFNGLUXGETPROGRAMINTERFACEIVPROC glGetProgramInterfaceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
extern PFNGLUXGETPROGRAMRESOURCEINDEXPROC glGetProgramResourceIndex;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
extern PFNGLUXGETPROGRAMRESOURCENAMEPROC glGetProgramResourceName;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
extern PFNGLUXGETPROGRAMRESOURCEIVPROC glGetProgramResourceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
extern PFNGLUXGETPROGRAMRESOURCELOCATIONPROC glGetProgramResourceLocation;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
extern PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC glGetProgramResourceLocationIndex;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:09 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_program_interface_query__
#define __GLUX_GL_ARB_program_interface_query__

GLUX_NEW_PLUGIN(GL_ARB_program_interface_query);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_UNIFORM
#  define GL_UNIFORM 0x92E1
#endif
#ifndef GL_UNIFORM_BLOCK
#  define GL_UNIFORM_BLOCK 0x92E2
#endif
#ifndef GL_PROGRAM_INPUT
#  define GL_PROGRAM_INPUT 0x92E3
#endif
#ifndef GL_PROGRAM_OUTPUT
#  define GL_PROGRAM_OUTPUT 0x92E4
#endif
#ifndef GL_BUFFER_VARIABLE
#  define GL_BUFFER_VARIABLE 0x92E5
#endif
#ifndef GL_SHADER_STORAGE_BLOCK
#  define GL_SHADER_STORAGE_BLOCK 0x92E6
#endif
#ifndef GL_VERTEX_SUBROUTINE
#  define GL_VERTEX_SUBROUTINE 0x92E8
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE
#  define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE
#  define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#endif
#ifndef GL_GEOMETRY_SUBROUTINE
#  define GL_GEOMETRY_SUBROUTINE 0x92EB
#endif
#ifndef GL_FRAGMENT_SUBROUTINE
#  define GL_FRAGMENT_SUBROUTINE 0x92EC
#endif
#ifndef GL_COMPUTE_SUBROUTINE
#  define GL_COMPUTE_SUBROUTINE 0x92ED
#endif
#ifndef GL_VERTEX_SUBROUTINE_UNIFORM
#  define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE_UNIFORM
#  define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE_UNIFORM
#  define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#endif
#ifndef GL_GEOMETRY_SUBROUTINE_UNIFORM
#  define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#endif
#ifndef GL_FRAGMENT_SUBROUTINE_UNIFORM
#  define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#endif
#ifndef GL_COMPUTE_SUBROUTINE_UNIFORM
#  define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYING
#  define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#endif
#ifndef GL_ACTIVE_RESOURCES
#  define GL_ACTIVE_RESOURCES 0x92F5
#endif
#ifndef GL_MAX_NAME_LENGTH
#  define GL_MAX_NAME_LENGTH 0x92F6
#endif
#ifndef GL_MAX_NUM_ACTIVE_VARIABLES
#  define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#endif
#ifndef GL_MAX_NUM_COMPATIBLE_SUBROUTINES
#  define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#endif
#ifndef GL_NAME_LENGTH
#  define GL_NAME_LENGTH 0x92F9
#endif
#ifndef GL_TYPE
#  define GL_TYPE 0x92FA
#endif
#ifndef GL_ARRAY_SIZE
#  define GL_ARRAY_SIZE 0x92FB
#endif
#ifndef GL_OFFSET
#  define GL_OFFSET 0x92FC
#endif
#ifndef GL_BLOCK_INDEX
#  define GL_BLOCK_INDEX 0x92FD
#endif
#ifndef GL_ARRAY_STRIDE
#  define GL_ARRAY_STRIDE 0x92FE
#endif
#ifndef GL_MATRIX_STRIDE
#  define GL_MATRIX_STRIDE 0x92FF
#endif
#ifndef GL_IS_ROW_MAJOR
#  define GL_IS_ROW_MAJOR 0x9300
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_INDEX
#  define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#endif
#ifndef GL_BUFFER_BINDING
#  define GL_BUFFER_BINDING 0x9302
#endif
#ifndef GL_BUFFER_DATA_SIZE
#  define GL_BUFFER_DATA_SIZE 0x9303
#endif
#ifndef GL_NUM_ACTIVE_VARIABLES
#  define GL_NUM_ACTIVE_VARIABLES 0x9304
#endif
#ifndef GL_ACTIVE_VARIABLES
#  define GL_ACTIVE_VARIABLES 0x9305
#endif
#ifndef GL_REFERENCED_BY_VERTEX_SHADER
#  define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#endif
#ifndef GL_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#endif
#ifndef GL_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#endif
#ifndef GL_REFERENCED_BY_GEOMETRY_SHADER
#  define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#endif
#ifndef GL_REFERENCED_BY_FRAGMENT_SHADER
#  define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#endif
#ifndef GL_REFERENCED_BY_COMPUTE_SHADER
#  define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#endif
#ifndef GL_TOP_LEVEL_ARRAY_SIZE
#  define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#endif
#ifndef GL_TOP_LEVEL_ARRAY_STRIDE
#  define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#endif
#ifndef GL_LOCATION
#  define GL_LOCATION 0x930E
#endif
#ifndef GL_LOCATION_INDEX
#  define GL_LOCATION_INDEX 0x930F
#endif
#ifndef GL_IS_PER_PATCH
#  define GL_IS_PER_PATCH 0x92E7
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
typedef GLuint (APIENTRYP PFNGLUXGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
extern PFNGLUXGETPROGRAMINTERFACEIVPROC glGetProgramInterfaceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
extern PFNGLUXGETPROGRAMRESOURCEINDEXPROC glGetProgramResourceIndex;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
extern PFNGLUXGETPROGRAMRESOURCENAMEPROC glGetProgramResourceName;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
extern PFNGLUXGETPROGRAMRESOURCEIVPROC glGetProgramResourceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
extern PFNGLUXGETPROGRAMRESOURCELOCATIONPROC glGetProgramResourceLocation;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
extern PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC glGetProgramResourceLocationIndex;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:22 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_program_interface_query__
#define __GLUX_GL_ARB_program_interface_query__

GLUX_NEW_PLUGIN(GL_ARB_program_interface_query);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_UNIFORM
#  define GL_UNIFORM 0x92E1
#endif
#ifndef GL_UNIFORM_BLOCK
#  define GL_UNIFORM_BLOCK 0x92E2
#endif
#ifndef GL_PROGRAM_INPUT
#  define GL_PROGRAM_INPUT 0x92E3
#endif
#ifndef GL_PROGRAM_OUTPUT
#  define GL_PROGRAM_OUTPUT 0x92E4
#endif
#ifndef GL_BUFFER_VARIABLE
#  define GL_BUFFER_VARIABLE 0x92E5
#endif
#ifndef GL_SHADER_STORAGE_BLOCK
#  define GL_SHADER_STORAGE_BLOCK 0x92E6
#endif
#ifndef GL_VERTEX_SUBROUTINE
#  define GL_VERTEX_SUBROUTINE 0x92E8
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE
#  define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE
#  define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#endif
#ifndef GL_GEOMETRY_SUBROUTINE
#  define GL_GEOMETRY_SUBROUTINE 0x92EB
#endif
#ifndef GL_FRAGMENT_SUBROUTINE
#  define GL_FRAGMENT_SUBROUTINE 0x92EC
#endif
#ifndef GL_COMPUTE_SUBROUTINE
#  define GL_COMPUTE_SUBROUTINE 0x92ED
#endif
#ifndef GL_VERTEX_SUBROUTINE_UNIFORM
#  define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE_UNIFORM
#  define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE_UNIFORM
#  define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#endif
#ifndef GL_GEOMETRY_SUBROUTINE_UNIFORM
#  define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#endif
#ifndef GL_FRAGMENT_SUBROUTINE_UNIFORM
#  define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#endif
#ifndef GL_COMPUTE_SUBROUTINE_UNIFORM
#  define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYING
#  define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#endif
#ifndef GL_ACTIVE_RESOURCES
#  define GL_ACTIVE_RESOURCES 0x92F5
#endif
#ifndef GL_MAX_NAME_LENGTH
#  define GL_MAX_NAME_LENGTH 0x92F6
#endif
#ifndef GL_MAX_NUM_ACTIVE_VARIABLES
#  define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#endif
#ifndef GL_MAX_NUM_COMPATIBLE_SUBROUTINES
#  define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#endif
#ifndef GL_NAME_LENGTH
#  define GL_NAME_LENGTH 0x92F9
#endif
#ifndef GL_TYPE
#  define GL_TYPE 0x92FA
#endif
#ifndef GL_ARRAY_SIZE
#  define GL_ARRAY_SIZE 0x92FB
#endif
#ifndef GL_OFFSET
#  define GL_OFFSET 0x92FC
#endif
#ifndef GL_BLOCK_INDEX
#  define GL_BLOCK_INDEX 0x92FD
#endif
#ifndef GL_ARRAY_STRIDE
#  define GL_ARRAY_STRIDE 0x92FE
#endif
#ifndef GL_MATRIX_STRIDE
#  define GL_MATRIX_STRIDE 0x92FF
#endif
#ifndef GL_IS_ROW_MAJOR
#  define GL_IS_ROW_MAJOR 0x9300
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_INDEX
#  define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#endif
#ifndef GL_BUFFER_BINDING
#  define GL_BUFFER_BINDING 0x9302
#endif
#ifndef GL_BUFFER_DATA_SIZE
#  define GL_BUFFER_DATA_SIZE 0x9303
#endif
#ifndef GL_NUM_ACTIVE_VARIABLES
#  define GL_NUM_ACTIVE_VARIABLES 0x9304
#endif
#ifndef GL_ACTIVE_VARIABLES
#  define GL_ACTIVE_VARIABLES 0x9305
#endif
#ifndef GL_REFERENCED_BY_VERTEX_SHADER
#  define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#endif
#ifndef GL_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#endif
#ifndef GL_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#endif
#ifndef GL_REFERENCED_BY_GEOMETRY_SHADER
#  define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#endif
#ifndef GL_REFERENCED_BY_FRAGMENT_SHADER
#  define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#endif
#ifndef GL_REFERENCED_BY_COMPUTE_SHADER
#  define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#endif
#ifndef GL_TOP_LEVEL_ARRAY_SIZE
#  define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#endif
#ifndef GL_TOP_LEVEL_ARRAY_STRIDE
#  define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#endif
#ifndef GL_LOCATION
#  define GL_LOCATION 0x930E
#endif
#ifndef GL_LOCATION_INDEX
#  define GL_LOCATION_INDEX 0x930F
#endif
#ifndef GL_IS_PER_PATCH
#  define GL_IS_PER_PATCH 0x92E7
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
typedef GLuint (APIENTRYP PFNGLUXGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
extern PFNGLUXGETPROGRAMINTERFACEIVPROC glGetProgramInterfaceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
extern PFNGLUXGETPROGRAMRESOURCEINDEXPROC glGetProgramResourceIndex;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
extern PFNGLUXGETPROGRAMRESOURCENAMEPROC glGetProgramResourceName;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
extern PFNGLUXGETPROGRAMRESOURCEIVPROC glGetProgramResourceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
extern PFNGLUXGETPROGRAMRESOURCELOCATIONPROC glGetProgramResourceLocation;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
extern PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC glGetProgramResourceLocationIndex;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:52:02 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_program_interface_query__
#define __GLUX_GL_ARB_program_interface_query__

GLUX_NEW_PLUGIN(GL_ARB_program_interface_query);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_UNIFORM
#  define GL_UNIFORM 0x92E1
#endif
#ifndef GL_UNIFORM_BLOCK
#  define GL_UNIFORM_BLOCK 0x92E2
#endif
#ifndef GL_PROGRAM_INPUT
#  define GL_PROGRAM_INPUT 0x92E3
#endif
#ifndef GL_PROGRAM_OUTPUT
#  define GL_PROGRAM_OUTPUT 0x92E4
#endif
#ifndef GL_BUFFER_VARIABLE
#  define GL_BUFFER_VARIABLE 0x92E5
#endif
#ifndef GL_SHADER_STORAGE_BLOCK
#  define GL_SHADER_STORAGE_BLOCK 0x92E6
#endif
#ifndef GL_VERTEX_SUBROUTINE
#  define GL_VERTEX_SUBROUTINE 0x92E8
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE
#  define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE
#  define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#endif
#ifndef GL_GEOMETRY_SUBROUTINE
#  define GL_GEOMETRY_SUBROUTINE 0x92EB
#endif
#ifndef GL_FRAGMENT_SUBROUTINE
#  define GL_FRAGMENT_SUBROUTINE 0x92EC
#endif
#ifndef GL_COMPUTE_SUBROUTINE
#  define GL_COMPUTE_SUBROUTINE 0x92ED
#endif
#ifndef GL_VERTEX_SUBROUTINE_UNIFORM
#  define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE_UNIFORM
#  define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE_UNIFORM
#  define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#endif
#ifndef GL_GEOMETRY_SUBROUTINE_UNIFORM
#  define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#endif
#ifndef GL_FRAGMENT_SUBROUTINE_UNIFORM
#  define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#endif
#ifndef GL_COMPUTE_SUBROUTINE_UNIFORM
#  define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYING
#  define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#endif
#ifndef GL_ACTIVE_RESOURCES
#  define GL_ACTIVE_RESOURCES 0x92F5
#endif
#ifndef GL_MAX_NAME_LENGTH
#  define GL_MAX_NAME_LENGTH 0x92F6
#endif
#ifndef GL_MAX_NUM_ACTIVE_VARIABLES
#  define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#endif
#ifndef GL_MAX_NUM_COMPATIBLE_SUBROUTINES
#  define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#endif
#ifndef GL_NAME_LENGTH
#  define GL_NAME_LENGTH 0x92F9
#endif
#ifndef GL_TYPE
#  define GL_TYPE 0x92FA
#endif
#ifndef GL_ARRAY_SIZE
#  define GL_ARRAY_SIZE 0x92FB
#endif
#ifndef GL_OFFSET
#  define GL_OFFSET 0x92FC
#endif
#ifndef GL_BLOCK_INDEX
#  define GL_BLOCK_INDEX 0x92FD
#endif
#ifndef GL_ARRAY_STRIDE
#  define GL_ARRAY_STRIDE 0x92FE
#endif
#ifndef GL_MATRIX_STRIDE
#  define GL_MATRIX_STRIDE 0x92FF
#endif
#ifndef GL_IS_ROW_MAJOR
#  define GL_IS_ROW_MAJOR 0x9300
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_INDEX
#  define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#endif
#ifndef GL_BUFFER_BINDING
#  define GL_BUFFER_BINDING 0x9302
#endif
#ifndef GL_BUFFER_DATA_SIZE
#  define GL_BUFFER_DATA_SIZE 0x9303
#endif
#ifndef GL_NUM_ACTIVE_VARIABLES
#  define GL_NUM_ACTIVE_VARIABLES 0x9304
#endif
#ifndef GL_ACTIVE_VARIABLES
#  define GL_ACTIVE_VARIABLES 0x9305
#endif
#ifndef GL_REFERENCED_BY_VERTEX_SHADER
#  define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#endif
#ifndef GL_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#endif
#ifndef GL_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#endif
#ifndef GL_REFERENCED_BY_GEOMETRY_SHADER
#  define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#endif
#ifndef GL_REFERENCED_BY_FRAGMENT_SHADER
#  define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#endif
#ifndef GL_REFERENCED_BY_COMPUTE_SHADER
#  define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#endif
#ifndef GL_TOP_LEVEL_ARRAY_SIZE
#  define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#endif
#ifndef GL_TOP_LEVEL_ARRAY_STRIDE
#  define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#endif
#ifndef GL_LOCATION
#  define GL_LOCATION 0x930E
#endif
#ifndef GL_LOCATION_INDEX
#  define GL_LOCATION_INDEX 0x930F
#endif
#ifndef GL_IS_PER_PATCH
#  define GL_IS_PER_PATCH 0x92E7
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
typedef GLuint (APIENTRYP PFNGLUXGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
extern PFNGLUXGETPROGRAMINTERFACEIVPROC glGetProgramInterfaceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
extern PFNGLUXGETPROGRAMRESOURCEINDEXPROC glGetProgramResourceIndex;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
extern PFNGLUXGETPROGRAMRESOURCENAMEPROC glGetProgramResourceName;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
extern PFNGLUXGETPROGRAMRESOURCEIVPROC glGetProgramResourceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
extern PFNGLUXGETPROGRAMRESOURCELOCATIONPROC glGetProgramResourceLocation;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
extern PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC glGetProgramResourceLocationIndex;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_program_interface_query__
#define __GLUX_GL_ARB_program_interface_query__

GLUX_NEW_PLUGIN(GL_ARB_program_interface_query);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_UNIFORM
#  define GL_UNIFORM 0x92E1
#endif
#ifndef GL_UNIFORM_BLOCK
#  define GL_UNIFORM_BLOCK 0x92E2
#endif
#ifndef GL_PROGRAM_INPUT
#  define GL_PROGRAM_INPUT 0x92E3
#endif
#ifndef GL_PROGRAM_OUTPUT
#  define GL_PROGRAM_OUTPUT 0x92E4
#endif
#ifndef GL_BUFFER_VARIABLE
#  define GL_BUFFER_VARIABLE 0x92E5
#endif
#ifndef GL_SHADER_STORAGE_BLOCK
#  define GL_SHADER_STORAGE_BLOCK 0x92E6
#endif
#ifndef GL_VERTEX_SUBROUTINE
#  define GL_VERTEX_SUBROUTINE 0x92E8
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE
#  define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE
#  define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#endif
#ifndef GL_GEOMETRY_SUBROUTINE
#  define GL_GEOMETRY_SUBROUTINE 0x92EB
#endif
#ifndef GL_FRAGMENT_SUBROUTINE
#  define GL_FRAGMENT_SUBROUTINE 0x92EC
#endif
#ifndef GL_COMPUTE_SUBROUTINE
#  define GL_COMPUTE_SUBROUTINE 0x92ED
#endif
#ifndef GL_VERTEX_SUBROUTINE_UNIFORM
#  define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE_UNIFORM
#  define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE_UNIFORM
#  define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#endif
#ifndef GL_GEOMETRY_SUBROUTINE_UNIFORM
#  define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#endif
#ifndef GL_FRAGMENT_SUBROUTINE_UNIFORM
#  define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#endif
#ifndef GL_COMPUTE_SUBROUTINE_UNIFORM
#  define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYING
#  define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#endif
#ifndef GL_ACTIVE_RESOURCES
#  define GL_ACTIVE_RESOURCES 0x92F5
#endif
#ifndef GL_MAX_NAME_LENGTH
#  define GL_MAX_NAME_LENGTH 0x92F6
#endif
#ifndef GL_MAX_NUM_ACTIVE_VARIABLES
#  define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#endif
#ifndef GL_MAX_NUM_COMPATIBLE_SUBROUTINES
#  define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#endif
#ifndef GL_NAME_LENGTH
#  define GL_NAME_LENGTH 0x92F9
#endif
#ifndef GL_TYPE
#  define GL_TYPE 0x92FA
#endif
#ifndef GL_ARRAY_SIZE
#  define GL_ARRAY_SIZE 0x92FB
#endif
#ifndef GL_OFFSET
#  define GL_OFFSET 0x92FC
#endif
#ifndef GL_BLOCK_INDEX
#  define GL_BLOCK_INDEX 0x92FD
#endif
#ifndef GL_ARRAY_STRIDE
#  define GL_ARRAY_STRIDE 0x92FE
#endif
#ifndef GL_MATRIX_STRIDE
#  define GL_MATRIX_STRIDE 0x92FF
#endif
#ifndef GL_IS_ROW_MAJOR
#  define GL_IS_ROW_MAJOR 0x9300
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_INDEX
#  define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#endif
#ifndef GL_BUFFER_BINDING
#  define GL_BUFFER_BINDING 0x9302
#endif
#ifndef GL_BUFFER_DATA_SIZE
#  define GL_BUFFER_DATA_SIZE 0x9303
#endif
#ifndef GL_NUM_ACTIVE_VARIABLES
#  define GL_NUM_ACTIVE_VARIABLES 0x9304
#endif
#ifndef GL_ACTIVE_VARIABLES
#  define GL_ACTIVE_VARIABLES 0x9305
#endif
#ifndef GL_REFERENCED_BY_VERTEX_SHADER
#  define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#endif
#ifndef GL_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#endif
#ifndef GL_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#endif
#ifndef GL_REFERENCED_BY_GEOMETRY_SHADER
#  define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#endif
#ifndef GL_REFERENCED_BY_FRAGMENT_SHADER
#  define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#endif
#ifndef GL_REFERENCED_BY_COMPUTE_SHADER
#  define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#endif
#ifndef GL_TOP_LEVEL_ARRAY_SIZE
#  define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#endif
#ifndef GL_TOP_LEVEL_ARRAY_STRIDE
#  define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#endif
#ifndef GL_LOCATION
#  define GL_LOCATION 0x930E
#endif
#ifndef GL_LOCATION_INDEX
#  define GL_LOCATION_INDEX 0x930F
#endif
#ifndef GL_IS_PER_PATCH
#  define GL_IS_PER_PATCH 0x92E7
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
typedef GLuint (APIENTRYP PFNGLUXGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
extern PFNGLUXGETPROGRAMINTERFACEIVPROC glGetProgramInterfaceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
extern PFNGLUXGETPROGRAMRESOURCEINDEXPROC glGetProgramResourceIndex;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
extern PFNGLUXGETPROGRAMRESOURCENAMEPROC glGetProgramResourceName;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
extern PFNGLUXGETPROGRAMRESOURCEIVPROC glGetProgramResourceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
extern PFNGLUXGETPROGRAMRESOURCELOCATIONPROC glGetProgramResourceLocation;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
extern PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC glGetProgramResourceLocationIndex;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:05 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_program_interface_query__
#define __GLUX_GL_ARB_program_interface_query__

GLUX_NEW_PLUGIN(GL_ARB_program_interface_query);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_UNIFORM
#  define GL_UNIFORM 0x92E1
#endif
#ifndef GL_UNIFORM_BLOCK
#  define GL_UNIFORM_BLOCK 0x92E2
#endif
#ifndef GL_PROGRAM_INPUT
#  define GL_PROGRAM_INPUT 0x92E3
#endif
#ifndef GL_PROGRAM_OUTPUT
#  define GL_PROGRAM_OUTPUT 0x92E4
#endif
#ifndef GL_BUFFER_VARIABLE
#  define GL_BUFFER_VARIABLE 0x92E5
#endif
#ifndef GL_SHADER_STORAGE_BLOCK
#  define GL_SHADER_STORAGE_BLOCK 0x92E6
#endif
#ifndef GL_VERTEX_SUBROUTINE
#  define GL_VERTEX_SUBROUTINE 0x92E8
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE
#  define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE
#  define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#endif
#ifndef GL_GEOMETRY_SUBROUTINE
#  define GL_GEOMETRY_SUBROUTINE 0x92EB
#endif
#ifndef GL_FRAGMENT_SUBROUTINE
#  define GL_FRAGMENT_SUBROUTINE 0x92EC
#endif
#ifndef GL_COMPUTE_SUBROUTINE
#  define GL_COMPUTE_SUBROUTINE 0x92ED
#endif
#ifndef GL_VERTEX_SUBROUTINE_UNIFORM
#  define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE_UNIFORM
#  define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE_UNIFORM
#  define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#endif
#ifndef GL_GEOMETRY_SUBROUTINE_UNIFORM
#  define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#endif
#ifndef GL_FRAGMENT_SUBROUTINE_UNIFORM
#  define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#endif
#ifndef GL_COMPUTE_SUBROUTINE_UNIFORM
#  define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYING
#  define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#endif
#ifndef GL_ACTIVE_RESOURCES
#  define GL_ACTIVE_RESOURCES 0x92F5
#endif
#ifndef GL_MAX_NAME_LENGTH
#  define GL_MAX_NAME_LENGTH 0x92F6
#endif
#ifndef GL_MAX_NUM_ACTIVE_VARIABLES
#  define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#endif
#ifndef GL_MAX_NUM_COMPATIBLE_SUBROUTINES
#  define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#endif
#ifndef GL_NAME_LENGTH
#  define GL_NAME_LENGTH 0x92F9
#endif
#ifndef GL_TYPE
#  define GL_TYPE 0x92FA
#endif
#ifndef GL_ARRAY_SIZE
#  define GL_ARRAY_SIZE 0x92FB
#endif
#ifndef GL_OFFSET
#  define GL_OFFSET 0x92FC
#endif
#ifndef GL_BLOCK_INDEX
#  define GL_BLOCK_INDEX 0x92FD
#endif
#ifndef GL_ARRAY_STRIDE
#  define GL_ARRAY_STRIDE 0x92FE
#endif
#ifndef GL_MATRIX_STRIDE
#  define GL_MATRIX_STRIDE 0x92FF
#endif
#ifndef GL_IS_ROW_MAJOR
#  define GL_IS_ROW_MAJOR 0x9300
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_INDEX
#  define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#endif
#ifndef GL_BUFFER_BINDING
#  define GL_BUFFER_BINDING 0x9302
#endif
#ifndef GL_BUFFER_DATA_SIZE
#  define GL_BUFFER_DATA_SIZE 0x9303
#endif
#ifndef GL_NUM_ACTIVE_VARIABLES
#  define GL_NUM_ACTIVE_VARIABLES 0x9304
#endif
#ifndef GL_ACTIVE_VARIABLES
#  define GL_ACTIVE_VARIABLES 0x9305
#endif
#ifndef GL_REFERENCED_BY_VERTEX_SHADER
#  define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#endif
#ifndef GL_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#endif
#ifndef GL_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#endif
#ifndef GL_REFERENCED_BY_GEOMETRY_SHADER
#  define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#endif
#ifndef GL_REFERENCED_BY_FRAGMENT_SHADER
#  define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#endif
#ifndef GL_REFERENCED_BY_COMPUTE_SHADER
#  define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#endif
#ifndef GL_TOP_LEVEL_ARRAY_SIZE
#  define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#endif
#ifndef GL_TOP_LEVEL_ARRAY_STRIDE
#  define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#endif
#ifndef GL_LOCATION
#  define GL_LOCATION 0x930E
#endif
#ifndef GL_LOCATION_INDEX
#  define GL_LOCATION_INDEX 0x930F
#endif
#ifndef GL_IS_PER_PATCH
#  define GL_IS_PER_PATCH 0x92E7
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
typedef GLuint (APIENTRYP PFNGLUXGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
extern PFNGLUXGETPROGRAMINTERFACEIVPROC glGetProgramInterfaceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
extern PFNGLUXGETPROGRAMRESOURCEINDEXPROC glGetProgramResourceIndex;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
extern PFNGLUXGETPROGRAMRESOURCENAMEPROC glGetProgramResourceName;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
extern PFNGLUXGETPROGRAMRESOURCEIVPROC glGetProgramResourceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
extern PFNGLUXGETPROGRAMRESOURCELOCATIONPROC glGetProgramResourceLocation;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
extern PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC glGetProgramResourceLocationIndex;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_program_interface_query__
#define __GLUX_GL_ARB_program_interface_query__

GLUX_NEW_PLUGIN(GL_ARB_program_interface_query);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_UNIFORM
#  define GL_UNIFORM 0x92E1
#endif
#ifndef GL_UNIFORM_BLOCK
#  define GL_UNIFORM_BLOCK 0x92E2
#endif
#ifndef GL_PROGRAM_INPUT
#  define GL_PROGRAM_INPUT 0x92E3
#endif
#ifndef GL_PROGRAM_OUTPUT
#  define GL_PROGRAM_OUTPUT 0x92E4
#endif
#ifndef GL_BUFFER_VARIABLE
#  define GL_BUFFER_VARIABLE 0x92E5
#endif
#ifndef GL_SHADER_STORAGE_BLOCK
#  define GL_SHADER_STORAGE_BLOCK 0x92E6
#endif
#ifndef GL_VERTEX_SUBROUTINE
#  define GL_VERTEX_SUBROUTINE 0x92E8
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE
#  define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE
#  define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#endif
#ifndef GL_GEOMETRY_SUBROUTINE
#  define GL_GEOMETRY_SUBROUTINE 0x92EB
#endif
#ifndef GL_FRAGMENT_SUBROUTINE
#  define GL_FRAGMENT_SUBROUTINE 0x92EC
#endif
#ifndef GL_COMPUTE_SUBROUTINE
#  define GL_COMPUTE_SUBROUTINE 0x92ED
#endif
#ifndef GL_VERTEX_SUBROUTINE_UNIFORM
#  define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE_UNIFORM
#  define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE_UNIFORM
#  define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#endif
#ifndef GL_GEOMETRY_SUBROUTINE_UNIFORM
#  define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#endif
#ifndef GL_FRAGMENT_SUBROUTINE_UNIFORM
#  define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#endif
#ifndef GL_COMPUTE_SUBROUTINE_UNIFORM
#  define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYING
#  define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#endif
#ifndef GL_ACTIVE_RESOURCES
#  define GL_ACTIVE_RESOURCES 0x92F5
#endif
#ifndef GL_MAX_NAME_LENGTH
#  define GL_MAX_NAME_LENGTH 0x92F6
#endif
#ifndef GL_MAX_NUM_ACTIVE_VARIABLES
#  define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#endif
#ifndef GL_MAX_NUM_COMPATIBLE_SUBROUTINES
#  define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#endif
#ifndef GL_NAME_LENGTH
#  define GL_NAME_LENGTH 0x92F9
#endif
#ifndef GL_TYPE
#  define GL_TYPE 0x92FA
#endif
#ifndef GL_ARRAY_SIZE
#  define GL_ARRAY_SIZE 0x92FB
#endif
#ifndef GL_OFFSET
#  define GL_OFFSET 0x92FC
#endif
#ifndef GL_BLOCK_INDEX
#  define GL_BLOCK_INDEX 0x92FD
#endif
#ifndef GL_ARRAY_STRIDE
#  define GL_ARRAY_STRIDE 0x92FE
#endif
#ifndef GL_MATRIX_STRIDE
#  define GL_MATRIX_STRIDE 0x92FF
#endif
#ifndef GL_IS_ROW_MAJOR
#  define GL_IS_ROW_MAJOR 0x9300
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_INDEX
#  define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#endif
#ifndef GL_BUFFER_BINDING
#  define GL_BUFFER_BINDING 0x9302
#endif
#ifndef GL_BUFFER_DATA_SIZE
#  define GL_BUFFER_DATA_SIZE 0x9303
#endif
#ifndef GL_NUM_ACTIVE_VARIABLES
#  define GL_NUM_ACTIVE_VARIABLES 0x9304
#endif
#ifndef GL_ACTIVE_VARIABLES
#  define GL_ACTIVE_VARIABLES 0x9305
#endif
#ifndef GL_REFERENCED_BY_VERTEX_SHADER
#  define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#endif
#ifndef GL_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#endif
#ifndef GL_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#endif
#ifndef GL_REFERENCED_BY_GEOMETRY_SHADER
#  define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#endif
#ifndef GL_REFERENCED_BY_FRAGMENT_SHADER
#  define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#endif
#ifndef GL_REFERENCED_BY_COMPUTE_SHADER
#  define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#endif
#ifndef GL_TOP_LEVEL_ARRAY_SIZE
#  define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#endif
#ifndef GL_TOP_LEVEL_ARRAY_STRIDE
#  define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#endif
#ifndef GL_LOCATION
#  define GL_LOCATION 0x930E
#endif
#ifndef GL_LOCATION_INDEX
#  define GL_LOCATION_INDEX 0x930F
#endif
#ifndef GL_IS_PER_PATCH
#  define GL_IS_PER_PATCH 0x92E7
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
typedef GLuint (APIENTRYP PFNGLUXGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
extern PFNGLUXGETPROGRAMINTERFACEIVPROC glGetProgramInterfaceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
extern PFNGLUXGETPROGRAMRESOURCEINDEXPROC glGetProgramResourceIndex;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
extern PFNGLUXGETPROGRAMRESOURCENAMEPROC glGetProgramResourceName;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
extern PFNGLUXGETPROGRAMRESOURCEIVPROC glGetProgramResourceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
extern PFNGLUXGETPROGRAMRESOURCELOCATIONPROC glGetProgramResourceLocation;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
extern PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC glGetProgramResourceLocationIndex;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_program_interface_query__
#define __GLUX_GL_ARB_program_interface_query__

GLUX_NEW_PLUGIN(GL_ARB_program_interface_query);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_UNIFORM
#  define GL_UNIFORM 0x92E1
#endif
#ifndef GL_UNIFORM_BLOCK
#  define GL_UNIFORM_BLOCK 0x92E2
#endif
#ifndef GL_PROGRAM_INPUT
#  define GL_PROGRAM_INPUT 0x92E3
#endif
#ifndef GL_PROGRAM_OUTPUT
#  define GL_PROGRAM_OUTPUT 0x92E4
#endif
#ifndef GL_BUFFER_VARIABLE
#  define GL_BUFFER_VARIABLE 0x92E5
#endif
#ifndef GL_SHADER_STORAGE_BLOCK
#  define GL_SHADER_STORAGE_BLOCK 0x92E6
#endif
#ifndef GL_VERTEX_SUBROUTINE
#  define GL_VERTEX_SUBROUTINE 0x92E8
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE
#  define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE
#  define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#endif
#ifndef GL_GEOMETRY_SUBROUTINE
#  define GL_GEOMETRY_SUBROUTINE 0x92EB
#endif
#ifndef GL_FRAGMENT_SUBROUTINE
#  define GL_FRAGMENT_SUBROUTINE 0x92EC
#endif
#ifndef GL_COMPUTE_SUBROUTINE
#  define GL_COMPUTE_SUBROUTINE 0x92ED
#endif
#ifndef GL_VERTEX_SUBROUTINE_UNIFORM
#  define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE_UNIFORM
#  define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE_UNIFORM
#  define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#endif
#ifndef GL_GEOMETRY_SUBROUTINE_UNIFORM
#  define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#endif
#ifndef GL_FRAGMENT_SUBROUTINE_UNIFORM
#  define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#endif
#ifndef GL_COMPUTE_SUBROUTINE_UNIFORM
#  define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYING
#  define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#endif
#ifndef GL_ACTIVE_RESOURCES
#  define GL_ACTIVE_RESOURCES 0x92F5
#endif
#ifndef GL_MAX_NAME_LENGTH
#  define GL_MAX_NAME_LENGTH 0x92F6
#endif
#ifndef GL_MAX_NUM_ACTIVE_VARIABLES
#  define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#endif
#ifndef GL_MAX_NUM_COMPATIBLE_SUBROUTINES
#  define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#endif
#ifndef GL_NAME_LENGTH
#  define GL_NAME_LENGTH 0x92F9
#endif
#ifndef GL_TYPE
#  define GL_TYPE 0x92FA
#endif
#ifndef GL_ARRAY_SIZE
#  define GL_ARRAY_SIZE 0x92FB
#endif
#ifndef GL_OFFSET
#  define GL_OFFSET 0x92FC
#endif
#ifndef GL_BLOCK_INDEX
#  define GL_BLOCK_INDEX 0x92FD
#endif
#ifndef GL_ARRAY_STRIDE
#  define GL_ARRAY_STRIDE 0x92FE
#endif
#ifndef GL_MATRIX_STRIDE
#  define GL_MATRIX_STRIDE 0x92FF
#endif
#ifndef GL_IS_ROW_MAJOR
#  define GL_IS_ROW_MAJOR 0x9300
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_INDEX
#  define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#endif
#ifndef GL_BUFFER_BINDING
#  define GL_BUFFER_BINDING 0x9302
#endif
#ifndef GL_BUFFER_DATA_SIZE
#  define GL_BUFFER_DATA_SIZE 0x9303
#endif
#ifndef GL_NUM_ACTIVE_VARIABLES
#  define GL_NUM_ACTIVE_VARIABLES 0x9304
#endif
#ifndef GL_ACTIVE_VARIABLES
#  define GL_ACTIVE_VARIABLES 0x9305
#endif
#ifndef GL_REFERENCED_BY_VERTEX_SHADER
#  define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#endif
#ifndef GL_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#endif
#ifndef GL_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#endif
#ifndef GL_REFERENCED_BY_GEOMETRY_SHADER
#  define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#endif
#ifndef GL_REFERENCED_BY_FRAGMENT_SHADER
#  define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#endif
#ifndef GL_REFERENCED_BY_COMPUTE_SHADER
#  define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#endif
#ifndef GL_TOP_LEVEL_ARRAY_SIZE
#  define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#endif
#ifndef GL_TOP_LEVEL_ARRAY_STRIDE
#  define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#endif
#ifndef GL_LOCATION
#  define GL_LOCATION 0x930E
#endif
#ifndef GL_LOCATION_INDEX
#  define GL_LOCATION_INDEX 0x930F
#endif
#ifndef GL_IS_PER_PATCH
#  define GL_IS_PER_PATCH 0x92E7
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
typedef GLuint (APIENTRYP PFNGLUXGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
extern PFNGLUXGETPROGRAMINTERFACEIVPROC glGetProgramInterfaceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
extern PFNGLUXGETPROGRAMRESOURCEINDEXPROC glGetProgramResourceIndex;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
extern PFNGLUXGETPROGRAMRESOURCENAMEPROC glGetProgramResourceName;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
extern PFNGLUXGETPROGRAMRESOURCEIVPROC glGetProgramResourceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
extern PFNGLUXGETPROGRAMRESOURCELOCATIONPROC glGetProgramResourceLocation;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
extern PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC glGetProgramResourceLocationIndex;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:41:59 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_program_interface_query__
#define __GLUX_GL_ARB_program_interface_query__

GLUX_NEW_PLUGIN(GL_ARB_program_interface_query);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_UNIFORM
#  define GL_UNIFORM 0x92E1
#endif
#ifndef GL_UNIFORM_BLOCK
#  define GL_UNIFORM_BLOCK 0x92E2
#endif
#ifndef GL_PROGRAM_INPUT
#  define GL_PROGRAM_INPUT 0x92E3
#endif
#ifndef GL_PROGRAM_OUTPUT
#  define GL_PROGRAM_OUTPUT 0x92E4
#endif
#ifndef GL_BUFFER_VARIABLE
#  define GL_BUFFER_VARIABLE 0x92E5
#endif
#ifndef GL_SHADER_STORAGE_BLOCK
#  define GL_SHADER_STORAGE_BLOCK 0x92E6
#endif
#ifndef GL_VERTEX_SUBROUTINE
#  define GL_VERTEX_SUBROUTINE 0x92E8
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE
#  define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE
#  define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#endif
#ifndef GL_GEOMETRY_SUBROUTINE
#  define GL_GEOMETRY_SUBROUTINE 0x92EB
#endif
#ifndef GL_FRAGMENT_SUBROUTINE
#  define GL_FRAGMENT_SUBROUTINE 0x92EC
#endif
#ifndef GL_COMPUTE_SUBROUTINE
#  define GL_COMPUTE_SUBROUTINE 0x92ED
#endif
#ifndef GL_VERTEX_SUBROUTINE_UNIFORM
#  define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE_UNIFORM
#  define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE_UNIFORM
#  define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#endif
#ifndef GL_GEOMETRY_SUBROUTINE_UNIFORM
#  define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#endif
#ifndef GL_FRAGMENT_SUBROUTINE_UNIFORM
#  define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#endif
#ifndef GL_COMPUTE_SUBROUTINE_UNIFORM
#  define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYING
#  define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#endif
#ifndef GL_ACTIVE_RESOURCES
#  define GL_ACTIVE_RESOURCES 0x92F5
#endif
#ifndef GL_MAX_NAME_LENGTH
#  define GL_MAX_NAME_LENGTH 0x92F6
#endif
#ifndef GL_MAX_NUM_ACTIVE_VARIABLES
#  define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#endif
#ifndef GL_MAX_NUM_COMPATIBLE_SUBROUTINES
#  define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#endif
#ifndef GL_NAME_LENGTH
#  define GL_NAME_LENGTH 0x92F9
#endif
#ifndef GL_TYPE
#  define GL_TYPE 0x92FA
#endif
#ifndef GL_ARRAY_SIZE
#  define GL_ARRAY_SIZE 0x92FB
#endif
#ifndef GL_OFFSET
#  define GL_OFFSET 0x92FC
#endif
#ifndef GL_BLOCK_INDEX
#  define GL_BLOCK_INDEX 0x92FD
#endif
#ifndef GL_ARRAY_STRIDE
#  define GL_ARRAY_STRIDE 0x92FE
#endif
#ifndef GL_MATRIX_STRIDE
#  define GL_MATRIX_STRIDE 0x92FF
#endif
#ifndef GL_IS_ROW_MAJOR
#  define GL_IS_ROW_MAJOR 0x9300
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_INDEX
#  define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#endif
#ifndef GL_BUFFER_BINDING
#  define GL_BUFFER_BINDING 0x9302
#endif
#ifndef GL_BUFFER_DATA_SIZE
#  define GL_BUFFER_DATA_SIZE 0x9303
#endif
#ifndef GL_NUM_ACTIVE_VARIABLES
#  define GL_NUM_ACTIVE_VARIABLES 0x9304
#endif
#ifndef GL_ACTIVE_VARIABLES
#  define GL_ACTIVE_VARIABLES 0x9305
#endif
#ifndef GL_REFERENCED_BY_VERTEX_SHADER
#  define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#endif
#ifndef GL_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#endif
#ifndef GL_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#endif
#ifndef GL_REFERENCED_BY_GEOMETRY_SHADER
#  define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#endif
#ifndef GL_REFERENCED_BY_FRAGMENT_SHADER
#  define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#endif
#ifndef GL_REFERENCED_BY_COMPUTE_SHADER
#  define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#endif
#ifndef GL_TOP_LEVEL_ARRAY_SIZE
#  define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#endif
#ifndef GL_TOP_LEVEL_ARRAY_STRIDE
#  define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#endif
#ifndef GL_LOCATION
#  define GL_LOCATION 0x930E
#endif
#ifndef GL_LOCATION_INDEX
#  define GL_LOCATION_INDEX 0x930F
#endif
#ifndef GL_IS_PER_PATCH
#  define GL_IS_PER_PATCH 0x92E7
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
typedef GLuint (APIENTRYP PFNGLUXGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
extern PFNGLUXGETPROGRAMINTERFACEIVPROC glGetProgramInterfaceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
extern PFNGLUXGETPROGRAMRESOURCEINDEXPROC glGetProgramResourceIndex;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
extern PFNGLUXGETPROGRAMRESOURCENAMEPROC glGetProgramResourceName;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
extern PFNGLUXGETPROGRAMRESOURCEIVPROC glGetProgramResourceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
extern PFNGLUXGETPROGRAMRESOURCELOCATIONPROC glGetProgramResourceLocation;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
extern PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC glGetProgramResourceLocationIndex;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:39 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_program_interface_query__
#define __GLUX_GL_ARB_program_interface_query__

GLUX_NEW_PLUGIN(GL_ARB_program_interface_query);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_UNIFORM
#  define GL_UNIFORM 0x92E1
#endif
#ifndef GL_UNIFORM_BLOCK
#  define GL_UNIFORM_BLOCK 0x92E2
#endif
#ifndef GL_PROGRAM_INPUT
#  define GL_PROGRAM_INPUT 0x92E3
#endif
#ifndef GL_PROGRAM_OUTPUT
#  define GL_PROGRAM_OUTPUT 0x92E4
#endif
#ifndef GL_BUFFER_VARIABLE
#  define GL_BUFFER_VARIABLE 0x92E5
#endif
#ifndef GL_SHADER_STORAGE_BLOCK
#  define GL_SHADER_STORAGE_BLOCK 0x92E6
#endif
#ifndef GL_VERTEX_SUBROUTINE
#  define GL_VERTEX_SUBROUTINE 0x92E8
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE
#  define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE
#  define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#endif
#ifndef GL_GEOMETRY_SUBROUTINE
#  define GL_GEOMETRY_SUBROUTINE 0x92EB
#endif
#ifndef GL_FRAGMENT_SUBROUTINE
#  define GL_FRAGMENT_SUBROUTINE 0x92EC
#endif
#ifndef GL_COMPUTE_SUBROUTINE
#  define GL_COMPUTE_SUBROUTINE 0x92ED
#endif
#ifndef GL_VERTEX_SUBROUTINE_UNIFORM
#  define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE_UNIFORM
#  define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE_UNIFORM
#  define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#endif
#ifndef GL_GEOMETRY_SUBROUTINE_UNIFORM
#  define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#endif
#ifndef GL_FRAGMENT_SUBROUTINE_UNIFORM
#  define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#endif
#ifndef GL_COMPUTE_SUBROUTINE_UNIFORM
#  define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYING
#  define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#endif
#ifndef GL_ACTIVE_RESOURCES
#  define GL_ACTIVE_RESOURCES 0x92F5
#endif
#ifndef GL_MAX_NAME_LENGTH
#  define GL_MAX_NAME_LENGTH 0x92F6
#endif
#ifndef GL_MAX_NUM_ACTIVE_VARIABLES
#  define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#endif
#ifndef GL_MAX_NUM_COMPATIBLE_SUBROUTINES
#  define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#endif
#ifndef GL_NAME_LENGTH
#  define GL_NAME_LENGTH 0x92F9
#endif
#ifndef GL_TYPE
#  define GL_TYPE 0x92FA
#endif
#ifndef GL_ARRAY_SIZE
#  define GL_ARRAY_SIZE 0x92FB
#endif
#ifndef GL_OFFSET
#  define GL_OFFSET 0x92FC
#endif
#ifndef GL_BLOCK_INDEX
#  define GL_BLOCK_INDEX 0x92FD
#endif
#ifndef GL_ARRAY_STRIDE
#  define GL_ARRAY_STRIDE 0x92FE
#endif
#ifndef GL_MATRIX_STRIDE
#  define GL_MATRIX_STRIDE 0x92FF
#endif
#ifndef GL_IS_ROW_MAJOR
#  define GL_IS_ROW_MAJOR 0x9300
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_INDEX
#  define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#endif
#ifndef GL_BUFFER_BINDING
#  define GL_BUFFER_BINDING 0x9302
#endif
#ifndef GL_BUFFER_DATA_SIZE
#  define GL_BUFFER_DATA_SIZE 0x9303
#endif
#ifndef GL_NUM_ACTIVE_VARIABLES
#  define GL_NUM_ACTIVE_VARIABLES 0x9304
#endif
#ifndef GL_ACTIVE_VARIABLES
#  define GL_ACTIVE_VARIABLES 0x9305
#endif
#ifndef GL_REFERENCED_BY_VERTEX_SHADER
#  define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#endif
#ifndef GL_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#endif
#ifndef GL_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#endif
#ifndef GL_REFERENCED_BY_GEOMETRY_SHADER
#  define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#endif
#ifndef GL_REFERENCED_BY_FRAGMENT_SHADER
#  define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#endif
#ifndef GL_REFERENCED_BY_COMPUTE_SHADER
#  define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#endif
#ifndef GL_TOP_LEVEL_ARRAY_SIZE
#  define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#endif
#ifndef GL_TOP_LEVEL_ARRAY_STRIDE
#  define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#endif
#ifndef GL_LOCATION
#  define GL_LOCATION 0x930E
#endif
#ifndef GL_LOCATION_INDEX
#  define GL_LOCATION_INDEX 0x930F
#endif
#ifndef GL_IS_PER_PATCH
#  define GL_IS_PER_PATCH 0x92E7
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
typedef GLuint (APIENTRYP PFNGLUXGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
extern PFNGLUXGETPROGRAMINTERFACEIVPROC glGetProgramInterfaceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
extern PFNGLUXGETPROGRAMRESOURCEINDEXPROC glGetProgramResourceIndex;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
extern PFNGLUXGETPROGRAMRESOURCENAMEPROC glGetProgramResourceName;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
extern PFNGLUXGETPROGRAMRESOURCEIVPROC glGetProgramResourceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
extern PFNGLUXGETPROGRAMRESOURCELOCATIONPROC glGetProgramResourceLocation;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
extern PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC glGetProgramResourceLocationIndex;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:09:59 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_program_interface_query__
#define __GLUX_GL_ARB_program_interface_query__

GLUX_NEW_PLUGIN(GL_ARB_program_interface_query);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_UNIFORM
#  define GL_UNIFORM 0x92E1
#endif
#ifndef GL_UNIFORM_BLOCK
#  define GL_UNIFORM_BLOCK 0x92E2
#endif
#ifndef GL_PROGRAM_INPUT
#  define GL_PROGRAM_INPUT 0x92E3
#endif
#ifndef GL_PROGRAM_OUTPUT
#  define GL_PROGRAM_OUTPUT 0x92E4
#endif
#ifndef GL_BUFFER_VARIABLE
#  define GL_BUFFER_VARIABLE 0x92E5
#endif
#ifndef GL_SHADER_STORAGE_BLOCK
#  define GL_SHADER_STORAGE_BLOCK 0x92E6
#endif
#ifndef GL_VERTEX_SUBROUTINE
#  define GL_VERTEX_SUBROUTINE 0x92E8
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE
#  define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE
#  define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#endif
#ifndef GL_GEOMETRY_SUBROUTINE
#  define GL_GEOMETRY_SUBROUTINE 0x92EB
#endif
#ifndef GL_FRAGMENT_SUBROUTINE
#  define GL_FRAGMENT_SUBROUTINE 0x92EC
#endif
#ifndef GL_COMPUTE_SUBROUTINE
#  define GL_COMPUTE_SUBROUTINE 0x92ED
#endif
#ifndef GL_VERTEX_SUBROUTINE_UNIFORM
#  define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE_UNIFORM
#  define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE_UNIFORM
#  define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#endif
#ifndef GL_GEOMETRY_SUBROUTINE_UNIFORM
#  define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#endif
#ifndef GL_FRAGMENT_SUBROUTINE_UNIFORM
#  define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#endif
#ifndef GL_COMPUTE_SUBROUTINE_UNIFORM
#  define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYING
#  define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#endif
#ifndef GL_ACTIVE_RESOURCES
#  define GL_ACTIVE_RESOURCES 0x92F5
#endif
#ifndef GL_MAX_NAME_LENGTH
#  define GL_MAX_NAME_LENGTH 0x92F6
#endif
#ifndef GL_MAX_NUM_ACTIVE_VARIABLES
#  define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#endif
#ifndef GL_MAX_NUM_COMPATIBLE_SUBROUTINES
#  define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#endif
#ifndef GL_NAME_LENGTH
#  define GL_NAME_LENGTH 0x92F9
#endif
#ifndef GL_TYPE
#  define GL_TYPE 0x92FA
#endif
#ifndef GL_ARRAY_SIZE
#  define GL_ARRAY_SIZE 0x92FB
#endif
#ifndef GL_OFFSET
#  define GL_OFFSET 0x92FC
#endif
#ifndef GL_BLOCK_INDEX
#  define GL_BLOCK_INDEX 0x92FD
#endif
#ifndef GL_ARRAY_STRIDE
#  define GL_ARRAY_STRIDE 0x92FE
#endif
#ifndef GL_MATRIX_STRIDE
#  define GL_MATRIX_STRIDE 0x92FF
#endif
#ifndef GL_IS_ROW_MAJOR
#  define GL_IS_ROW_MAJOR 0x9300
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_INDEX
#  define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#endif
#ifndef GL_BUFFER_BINDING
#  define GL_BUFFER_BINDING 0x9302
#endif
#ifndef GL_BUFFER_DATA_SIZE
#  define GL_BUFFER_DATA_SIZE 0x9303
#endif
#ifndef GL_NUM_ACTIVE_VARIABLES
#  define GL_NUM_ACTIVE_VARIABLES 0x9304
#endif
#ifndef GL_ACTIVE_VARIABLES
#  define GL_ACTIVE_VARIABLES 0x9305
#endif
#ifndef GL_REFERENCED_BY_VERTEX_SHADER
#  define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#endif
#ifndef GL_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#endif
#ifndef GL_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#endif
#ifndef GL_REFERENCED_BY_GEOMETRY_SHADER
#  define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#endif
#ifndef GL_REFERENCED_BY_FRAGMENT_SHADER
#  define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#endif
#ifndef GL_REFERENCED_BY_COMPUTE_SHADER
#  define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#endif
#ifndef GL_TOP_LEVEL_ARRAY_SIZE
#  define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#endif
#ifndef GL_TOP_LEVEL_ARRAY_STRIDE
#  define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#endif
#ifndef GL_LOCATION
#  define GL_LOCATION 0x930E
#endif
#ifndef GL_LOCATION_INDEX
#  define GL_LOCATION_INDEX 0x930F
#endif
#ifndef GL_IS_PER_PATCH
#  define GL_IS_PER_PATCH 0x92E7
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
typedef GLuint (APIENTRYP PFNGLUXGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
extern PFNGLUXGETPROGRAMINTERFACEIVPROC glGetProgramInterfaceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
extern PFNGLUXGETPROGRAMRESOURCEINDEXPROC glGetProgramResourceIndex;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
extern PFNGLUXGETPROGRAMRESOURCENAMEPROC glGetProgramResourceName;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
extern PFNGLUXGETPROGRAMRESOURCEIVPROC glGetProgramResourceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
extern PFNGLUXGETPROGRAMRESOURCELOCATIONPROC glGetProgramResourceLocation;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
extern PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC glGetProgramResourceLocationIndex;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:19:59 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_program_interface_query__
#define __GLUX_GL_ARB_program_interface_query__

GLUX_NEW_PLUGIN(GL_ARB_program_interface_query);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_UNIFORM
#  define GL_UNIFORM 0x92E1
#endif
#ifndef GL_UNIFORM_BLOCK
#  define GL_UNIFORM_BLOCK 0x92E2
#endif
#ifndef GL_PROGRAM_INPUT
#  define GL_PROGRAM_INPUT 0x92E3
#endif
#ifndef GL_PROGRAM_OUTPUT
#  define GL_PROGRAM_OUTPUT 0x92E4
#endif
#ifndef GL_BUFFER_VARIABLE
#  define GL_BUFFER_VARIABLE 0x92E5
#endif
#ifndef GL_SHADER_STORAGE_BLOCK
#  define GL_SHADER_STORAGE_BLOCK 0x92E6
#endif
#ifndef GL_VERTEX_SUBROUTINE
#  define GL_VERTEX_SUBROUTINE 0x92E8
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE
#  define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE
#  define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#endif
#ifndef GL_GEOMETRY_SUBROUTINE
#  define GL_GEOMETRY_SUBROUTINE 0x92EB
#endif
#ifndef GL_FRAGMENT_SUBROUTINE
#  define GL_FRAGMENT_SUBROUTINE 0x92EC
#endif
#ifndef GL_COMPUTE_SUBROUTINE
#  define GL_COMPUTE_SUBROUTINE 0x92ED
#endif
#ifndef GL_VERTEX_SUBROUTINE_UNIFORM
#  define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE_UNIFORM
#  define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE_UNIFORM
#  define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#endif
#ifndef GL_GEOMETRY_SUBROUTINE_UNIFORM
#  define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#endif
#ifndef GL_FRAGMENT_SUBROUTINE_UNIFORM
#  define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#endif
#ifndef GL_COMPUTE_SUBROUTINE_UNIFORM
#  define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYING
#  define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#endif
#ifndef GL_ACTIVE_RESOURCES
#  define GL_ACTIVE_RESOURCES 0x92F5
#endif
#ifndef GL_MAX_NAME_LENGTH
#  define GL_MAX_NAME_LENGTH 0x92F6
#endif
#ifndef GL_MAX_NUM_ACTIVE_VARIABLES
#  define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#endif
#ifndef GL_MAX_NUM_COMPATIBLE_SUBROUTINES
#  define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#endif
#ifndef GL_NAME_LENGTH
#  define GL_NAME_LENGTH 0x92F9
#endif
#ifndef GL_TYPE
#  define GL_TYPE 0x92FA
#endif
#ifndef GL_ARRAY_SIZE
#  define GL_ARRAY_SIZE 0x92FB
#endif
#ifndef GL_OFFSET
#  define GL_OFFSET 0x92FC
#endif
#ifndef GL_BLOCK_INDEX
#  define GL_BLOCK_INDEX 0x92FD
#endif
#ifndef GL_ARRAY_STRIDE
#  define GL_ARRAY_STRIDE 0x92FE
#endif
#ifndef GL_MATRIX_STRIDE
#  define GL_MATRIX_STRIDE 0x92FF
#endif
#ifndef GL_IS_ROW_MAJOR
#  define GL_IS_ROW_MAJOR 0x9300
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_INDEX
#  define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#endif
#ifndef GL_BUFFER_BINDING
#  define GL_BUFFER_BINDING 0x9302
#endif
#ifndef GL_BUFFER_DATA_SIZE
#  define GL_BUFFER_DATA_SIZE 0x9303
#endif
#ifndef GL_NUM_ACTIVE_VARIABLES
#  define GL_NUM_ACTIVE_VARIABLES 0x9304
#endif
#ifndef GL_ACTIVE_VARIABLES
#  define GL_ACTIVE_VARIABLES 0x9305
#endif
#ifndef GL_REFERENCED_BY_VERTEX_SHADER
#  define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#endif
#ifndef GL_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#endif
#ifndef GL_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#endif
#ifndef GL_REFERENCED_BY_GEOMETRY_SHADER
#  define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#endif
#ifndef GL_REFERENCED_BY_FRAGMENT_SHADER
#  define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#endif
#ifndef GL_REFERENCED_BY_COMPUTE_SHADER
#  define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#endif
#ifndef GL_TOP_LEVEL_ARRAY_SIZE
#  define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#endif
#ifndef GL_TOP_LEVEL_ARRAY_STRIDE
#  define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#endif
#ifndef GL_LOCATION
#  define GL_LOCATION 0x930E
#endif
#ifndef GL_LOCATION_INDEX
#  define GL_LOCATION_INDEX 0x930F
#endif
#ifndef GL_IS_PER_PATCH
#  define GL_IS_PER_PATCH 0x92E7
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
typedef GLuint (APIENTRYP PFNGLUXGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
extern PFNGLUXGETPROGRAMINTERFACEIVPROC glGetProgramInterfaceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
extern PFNGLUXGETPROGRAMRESOURCEINDEXPROC glGetProgramResourceIndex;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
extern PFNGLUXGETPROGRAMRESOURCENAMEPROC glGetProgramResourceName;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
extern PFNGLUXGETPROGRAMRESOURCEIVPROC glGetProgramResourceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
extern PFNGLUXGETPROGRAMRESOURCELOCATIONPROC glGetProgramResourceLocation;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
extern PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC glGetProgramResourceLocationIndex;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:42:58 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_program_interface_query__
#define __GLUX_GL_ARB_program_interface_query__

GLUX_NEW_PLUGIN(GL_ARB_program_interface_query)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_UNIFORM
#  define GL_UNIFORM 0x92E1
#endif
#ifndef GL_UNIFORM_BLOCK
#  define GL_UNIFORM_BLOCK 0x92E2
#endif
#ifndef GL_PROGRAM_INPUT
#  define GL_PROGRAM_INPUT 0x92E3
#endif
#ifndef GL_PROGRAM_OUTPUT
#  define GL_PROGRAM_OUTPUT 0x92E4
#endif
#ifndef GL_BUFFER_VARIABLE
#  define GL_BUFFER_VARIABLE 0x92E5
#endif
#ifndef GL_SHADER_STORAGE_BLOCK
#  define GL_SHADER_STORAGE_BLOCK 0x92E6
#endif
#ifndef GL_VERTEX_SUBROUTINE
#  define GL_VERTEX_SUBROUTINE 0x92E8
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE
#  define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE
#  define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#endif
#ifndef GL_GEOMETRY_SUBROUTINE
#  define GL_GEOMETRY_SUBROUTINE 0x92EB
#endif
#ifndef GL_FRAGMENT_SUBROUTINE
#  define GL_FRAGMENT_SUBROUTINE 0x92EC
#endif
#ifndef GL_COMPUTE_SUBROUTINE
#  define GL_COMPUTE_SUBROUTINE 0x92ED
#endif
#ifndef GL_VERTEX_SUBROUTINE_UNIFORM
#  define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#endif
#ifndef GL_TESS_CONTROL_SUBROUTINE_UNIFORM
#  define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#endif
#ifndef GL_TESS_EVALUATION_SUBROUTINE_UNIFORM
#  define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#endif
#ifndef GL_GEOMETRY_SUBROUTINE_UNIFORM
#  define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#endif
#ifndef GL_FRAGMENT_SUBROUTINE_UNIFORM
#  define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#endif
#ifndef GL_COMPUTE_SUBROUTINE_UNIFORM
#  define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYING
#  define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#endif
#ifndef GL_ACTIVE_RESOURCES
#  define GL_ACTIVE_RESOURCES 0x92F5
#endif
#ifndef GL_MAX_NAME_LENGTH
#  define GL_MAX_NAME_LENGTH 0x92F6
#endif
#ifndef GL_MAX_NUM_ACTIVE_VARIABLES
#  define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#endif
#ifndef GL_MAX_NUM_COMPATIBLE_SUBROUTINES
#  define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#endif
#ifndef GL_NAME_LENGTH
#  define GL_NAME_LENGTH 0x92F9
#endif
#ifndef GL_TYPE
#  define GL_TYPE 0x92FA
#endif
#ifndef GL_ARRAY_SIZE
#  define GL_ARRAY_SIZE 0x92FB
#endif
#ifndef GL_OFFSET
#  define GL_OFFSET 0x92FC
#endif
#ifndef GL_BLOCK_INDEX
#  define GL_BLOCK_INDEX 0x92FD
#endif
#ifndef GL_ARRAY_STRIDE
#  define GL_ARRAY_STRIDE 0x92FE
#endif
#ifndef GL_MATRIX_STRIDE
#  define GL_MATRIX_STRIDE 0x92FF
#endif
#ifndef GL_IS_ROW_MAJOR
#  define GL_IS_ROW_MAJOR 0x9300
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_INDEX
#  define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#endif
#ifndef GL_BUFFER_BINDING
#  define GL_BUFFER_BINDING 0x9302
#endif
#ifndef GL_BUFFER_DATA_SIZE
#  define GL_BUFFER_DATA_SIZE 0x9303
#endif
#ifndef GL_NUM_ACTIVE_VARIABLES
#  define GL_NUM_ACTIVE_VARIABLES 0x9304
#endif
#ifndef GL_ACTIVE_VARIABLES
#  define GL_ACTIVE_VARIABLES 0x9305
#endif
#ifndef GL_REFERENCED_BY_VERTEX_SHADER
#  define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#endif
#ifndef GL_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#endif
#ifndef GL_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#endif
#ifndef GL_REFERENCED_BY_GEOMETRY_SHADER
#  define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#endif
#ifndef GL_REFERENCED_BY_FRAGMENT_SHADER
#  define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#endif
#ifndef GL_REFERENCED_BY_COMPUTE_SHADER
#  define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#endif
#ifndef GL_TOP_LEVEL_ARRAY_SIZE
#  define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#endif
#ifndef GL_TOP_LEVEL_ARRAY_STRIDE
#  define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#endif
#ifndef GL_LOCATION
#  define GL_LOCATION 0x930E
#endif
#ifndef GL_LOCATION_INDEX
#  define GL_LOCATION_INDEX 0x930F
#endif
#ifndef GL_IS_PER_PATCH
#  define GL_IS_PER_PATCH 0x92E7
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
typedef GLuint (APIENTRYP PFNGLUXGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
typedef GLint (APIENTRYP PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetProgramInterfaceiv
extern PFNGLUXGETPROGRAMINTERFACEIVPROC glGetProgramInterfaceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceIndex
extern PFNGLUXGETPROGRAMRESOURCEINDEXPROC glGetProgramResourceIndex;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceName
extern PFNGLUXGETPROGRAMRESOURCENAMEPROC glGetProgramResourceName;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceiv
extern PFNGLUXGETPROGRAMRESOURCEIVPROC glGetProgramResourceiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocation
extern PFNGLUXGETPROGRAMRESOURCELOCATIONPROC glGetProgramResourceLocation;
#endif
#ifndef __GLUX__GLFCT_glGetProgramResourceLocationIndex
extern PFNGLUXGETPROGRAMRESOURCELOCATIONINDEXPROC glGetProgramResourceLocationIndex;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
