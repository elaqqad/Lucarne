
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:29 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__
#define __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__

GLUX_NEW_PLUGIN(GL_ARB_vertex_type_2_10_10_10_rev);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INT_2_10_10_10_REV
#  define GL_INT_2_10_10_10_REV 0x8D9F
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexP2ui
typedef void (APIENTRYP PFNGLUXVERTEXP2UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXP2UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
typedef void (APIENTRYP PFNGLUXVERTEXP3UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXP3UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
typedef void (APIENTRYP PFNGLUXVERTEXP4UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXP4UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
typedef void (APIENTRYP PFNGLUXNORMALP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
typedef void (APIENTRYP PFNGLUXNORMALP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
typedef void (APIENTRYP PFNGLUXCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
typedef void (APIENTRYP PFNGLUXCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
typedef void (APIENTRYP PFNGLUXCOLORP4UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
typedef void (APIENTRYP PFNGLUXCOLORP4UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexP2ui
extern PFNGLUXVERTEXP2UIPROC glVertexP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
extern PFNGLUXVERTEXP2UIVPROC glVertexP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
extern PFNGLUXVERTEXP3UIPROC glVertexP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
extern PFNGLUXVERTEXP3UIVPROC glVertexP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
extern PFNGLUXVERTEXP4UIPROC glVertexP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
extern PFNGLUXVERTEXP4UIVPROC glVertexP4uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
extern PFNGLUXTEXCOORDP1UIPROC glTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
extern PFNGLUXTEXCOORDP1UIVPROC glTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
extern PFNGLUXTEXCOORDP2UIPROC glTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
extern PFNGLUXTEXCOORDP2UIVPROC glTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
extern PFNGLUXTEXCOORDP3UIPROC glTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
extern PFNGLUXTEXCOORDP3UIVPROC glTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
extern PFNGLUXTEXCOORDP4UIPROC glTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
extern PFNGLUXTEXCOORDP4UIVPROC glTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
extern PFNGLUXMULTITEXCOORDP1UIPROC glMultiTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
extern PFNGLUXMULTITEXCOORDP1UIVPROC glMultiTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
extern PFNGLUXMULTITEXCOORDP2UIPROC glMultiTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
extern PFNGLUXMULTITEXCOORDP2UIVPROC glMultiTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
extern PFNGLUXMULTITEXCOORDP3UIPROC glMultiTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
extern PFNGLUXMULTITEXCOORDP3UIVPROC glMultiTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
extern PFNGLUXMULTITEXCOORDP4UIPROC glMultiTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
extern PFNGLUXMULTITEXCOORDP4UIVPROC glMultiTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
extern PFNGLUXNORMALP3UIPROC glNormalP3ui;
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
extern PFNGLUXNORMALP3UIVPROC glNormalP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
extern PFNGLUXCOLORP3UIPROC glColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
extern PFNGLUXCOLORP3UIVPROC glColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
extern PFNGLUXCOLORP4UIPROC glColorP4ui;
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
extern PFNGLUXCOLORP4UIVPROC glColorP4uiv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
extern PFNGLUXSECONDARYCOLORP3UIPROC glSecondaryColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
extern PFNGLUXSECONDARYCOLORP3UIVPROC glSecondaryColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
extern PFNGLUXVERTEXATTRIBP1UIPROC glVertexAttribP1ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
extern PFNGLUXVERTEXATTRIBP1UIVPROC glVertexAttribP1uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
extern PFNGLUXVERTEXATTRIBP2UIPROC glVertexAttribP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
extern PFNGLUXVERTEXATTRIBP2UIVPROC glVertexAttribP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
extern PFNGLUXVERTEXATTRIBP3UIPROC glVertexAttribP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
extern PFNGLUXVERTEXATTRIBP3UIVPROC glVertexAttribP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
extern PFNGLUXVERTEXATTRIBP4UIPROC glVertexAttribP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
extern PFNGLUXVERTEXATTRIBP4UIVPROC glVertexAttribP4uiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:48 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__
#define __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__

GLUX_NEW_PLUGIN(GL_ARB_vertex_type_2_10_10_10_rev);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INT_2_10_10_10_REV
#  define GL_INT_2_10_10_10_REV 0x8D9F
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexP2ui
typedef void (APIENTRYP PFNGLUXVERTEXP2UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXP2UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
typedef void (APIENTRYP PFNGLUXVERTEXP3UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXP3UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
typedef void (APIENTRYP PFNGLUXVERTEXP4UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXP4UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
typedef void (APIENTRYP PFNGLUXNORMALP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
typedef void (APIENTRYP PFNGLUXNORMALP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
typedef void (APIENTRYP PFNGLUXCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
typedef void (APIENTRYP PFNGLUXCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
typedef void (APIENTRYP PFNGLUXCOLORP4UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
typedef void (APIENTRYP PFNGLUXCOLORP4UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexP2ui
extern PFNGLUXVERTEXP2UIPROC glVertexP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
extern PFNGLUXVERTEXP2UIVPROC glVertexP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
extern PFNGLUXVERTEXP3UIPROC glVertexP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
extern PFNGLUXVERTEXP3UIVPROC glVertexP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
extern PFNGLUXVERTEXP4UIPROC glVertexP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
extern PFNGLUXVERTEXP4UIVPROC glVertexP4uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
extern PFNGLUXTEXCOORDP1UIPROC glTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
extern PFNGLUXTEXCOORDP1UIVPROC glTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
extern PFNGLUXTEXCOORDP2UIPROC glTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
extern PFNGLUXTEXCOORDP2UIVPROC glTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
extern PFNGLUXTEXCOORDP3UIPROC glTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
extern PFNGLUXTEXCOORDP3UIVPROC glTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
extern PFNGLUXTEXCOORDP4UIPROC glTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
extern PFNGLUXTEXCOORDP4UIVPROC glTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
extern PFNGLUXMULTITEXCOORDP1UIPROC glMultiTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
extern PFNGLUXMULTITEXCOORDP1UIVPROC glMultiTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
extern PFNGLUXMULTITEXCOORDP2UIPROC glMultiTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
extern PFNGLUXMULTITEXCOORDP2UIVPROC glMultiTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
extern PFNGLUXMULTITEXCOORDP3UIPROC glMultiTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
extern PFNGLUXMULTITEXCOORDP3UIVPROC glMultiTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
extern PFNGLUXMULTITEXCOORDP4UIPROC glMultiTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
extern PFNGLUXMULTITEXCOORDP4UIVPROC glMultiTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
extern PFNGLUXNORMALP3UIPROC glNormalP3ui;
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
extern PFNGLUXNORMALP3UIVPROC glNormalP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
extern PFNGLUXCOLORP3UIPROC glColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
extern PFNGLUXCOLORP3UIVPROC glColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
extern PFNGLUXCOLORP4UIPROC glColorP4ui;
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
extern PFNGLUXCOLORP4UIVPROC glColorP4uiv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
extern PFNGLUXSECONDARYCOLORP3UIPROC glSecondaryColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
extern PFNGLUXSECONDARYCOLORP3UIVPROC glSecondaryColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
extern PFNGLUXVERTEXATTRIBP1UIPROC glVertexAttribP1ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
extern PFNGLUXVERTEXATTRIBP1UIVPROC glVertexAttribP1uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
extern PFNGLUXVERTEXATTRIBP2UIPROC glVertexAttribP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
extern PFNGLUXVERTEXATTRIBP2UIVPROC glVertexAttribP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
extern PFNGLUXVERTEXATTRIBP3UIPROC glVertexAttribP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
extern PFNGLUXVERTEXATTRIBP3UIVPROC glVertexAttribP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
extern PFNGLUXVERTEXATTRIBP4UIPROC glVertexAttribP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
extern PFNGLUXVERTEXATTRIBP4UIVPROC glVertexAttribP4uiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:54 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__
#define __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__

GLUX_NEW_PLUGIN(GL_ARB_vertex_type_2_10_10_10_rev);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INT_2_10_10_10_REV
#  define GL_INT_2_10_10_10_REV 0x8D9F
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexP2ui
typedef void (APIENTRYP PFNGLUXVERTEXP2UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXP2UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
typedef void (APIENTRYP PFNGLUXVERTEXP3UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXP3UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
typedef void (APIENTRYP PFNGLUXVERTEXP4UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXP4UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
typedef void (APIENTRYP PFNGLUXNORMALP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
typedef void (APIENTRYP PFNGLUXNORMALP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
typedef void (APIENTRYP PFNGLUXCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
typedef void (APIENTRYP PFNGLUXCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
typedef void (APIENTRYP PFNGLUXCOLORP4UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
typedef void (APIENTRYP PFNGLUXCOLORP4UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexP2ui
extern PFNGLUXVERTEXP2UIPROC glVertexP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
extern PFNGLUXVERTEXP2UIVPROC glVertexP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
extern PFNGLUXVERTEXP3UIPROC glVertexP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
extern PFNGLUXVERTEXP3UIVPROC glVertexP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
extern PFNGLUXVERTEXP4UIPROC glVertexP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
extern PFNGLUXVERTEXP4UIVPROC glVertexP4uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
extern PFNGLUXTEXCOORDP1UIPROC glTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
extern PFNGLUXTEXCOORDP1UIVPROC glTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
extern PFNGLUXTEXCOORDP2UIPROC glTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
extern PFNGLUXTEXCOORDP2UIVPROC glTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
extern PFNGLUXTEXCOORDP3UIPROC glTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
extern PFNGLUXTEXCOORDP3UIVPROC glTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
extern PFNGLUXTEXCOORDP4UIPROC glTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
extern PFNGLUXTEXCOORDP4UIVPROC glTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
extern PFNGLUXMULTITEXCOORDP1UIPROC glMultiTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
extern PFNGLUXMULTITEXCOORDP1UIVPROC glMultiTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
extern PFNGLUXMULTITEXCOORDP2UIPROC glMultiTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
extern PFNGLUXMULTITEXCOORDP2UIVPROC glMultiTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
extern PFNGLUXMULTITEXCOORDP3UIPROC glMultiTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
extern PFNGLUXMULTITEXCOORDP3UIVPROC glMultiTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
extern PFNGLUXMULTITEXCOORDP4UIPROC glMultiTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
extern PFNGLUXMULTITEXCOORDP4UIVPROC glMultiTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
extern PFNGLUXNORMALP3UIPROC glNormalP3ui;
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
extern PFNGLUXNORMALP3UIVPROC glNormalP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
extern PFNGLUXCOLORP3UIPROC glColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
extern PFNGLUXCOLORP3UIVPROC glColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
extern PFNGLUXCOLORP4UIPROC glColorP4ui;
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
extern PFNGLUXCOLORP4UIVPROC glColorP4uiv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
extern PFNGLUXSECONDARYCOLORP3UIPROC glSecondaryColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
extern PFNGLUXSECONDARYCOLORP3UIVPROC glSecondaryColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
extern PFNGLUXVERTEXATTRIBP1UIPROC glVertexAttribP1ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
extern PFNGLUXVERTEXATTRIBP1UIVPROC glVertexAttribP1uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
extern PFNGLUXVERTEXATTRIBP2UIPROC glVertexAttribP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
extern PFNGLUXVERTEXATTRIBP2UIVPROC glVertexAttribP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
extern PFNGLUXVERTEXATTRIBP3UIPROC glVertexAttribP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
extern PFNGLUXVERTEXATTRIBP3UIVPROC glVertexAttribP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
extern PFNGLUXVERTEXATTRIBP4UIPROC glVertexAttribP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
extern PFNGLUXVERTEXATTRIBP4UIVPROC glVertexAttribP4uiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:14 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__
#define __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__

GLUX_NEW_PLUGIN(GL_ARB_vertex_type_2_10_10_10_rev);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INT_2_10_10_10_REV
#  define GL_INT_2_10_10_10_REV 0x8D9F
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexP2ui
typedef void (APIENTRYP PFNGLUXVERTEXP2UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXP2UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
typedef void (APIENTRYP PFNGLUXVERTEXP3UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXP3UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
typedef void (APIENTRYP PFNGLUXVERTEXP4UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXP4UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
typedef void (APIENTRYP PFNGLUXNORMALP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
typedef void (APIENTRYP PFNGLUXNORMALP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
typedef void (APIENTRYP PFNGLUXCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
typedef void (APIENTRYP PFNGLUXCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
typedef void (APIENTRYP PFNGLUXCOLORP4UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
typedef void (APIENTRYP PFNGLUXCOLORP4UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexP2ui
extern PFNGLUXVERTEXP2UIPROC glVertexP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
extern PFNGLUXVERTEXP2UIVPROC glVertexP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
extern PFNGLUXVERTEXP3UIPROC glVertexP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
extern PFNGLUXVERTEXP3UIVPROC glVertexP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
extern PFNGLUXVERTEXP4UIPROC glVertexP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
extern PFNGLUXVERTEXP4UIVPROC glVertexP4uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
extern PFNGLUXTEXCOORDP1UIPROC glTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
extern PFNGLUXTEXCOORDP1UIVPROC glTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
extern PFNGLUXTEXCOORDP2UIPROC glTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
extern PFNGLUXTEXCOORDP2UIVPROC glTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
extern PFNGLUXTEXCOORDP3UIPROC glTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
extern PFNGLUXTEXCOORDP3UIVPROC glTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
extern PFNGLUXTEXCOORDP4UIPROC glTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
extern PFNGLUXTEXCOORDP4UIVPROC glTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
extern PFNGLUXMULTITEXCOORDP1UIPROC glMultiTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
extern PFNGLUXMULTITEXCOORDP1UIVPROC glMultiTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
extern PFNGLUXMULTITEXCOORDP2UIPROC glMultiTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
extern PFNGLUXMULTITEXCOORDP2UIVPROC glMultiTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
extern PFNGLUXMULTITEXCOORDP3UIPROC glMultiTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
extern PFNGLUXMULTITEXCOORDP3UIVPROC glMultiTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
extern PFNGLUXMULTITEXCOORDP4UIPROC glMultiTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
extern PFNGLUXMULTITEXCOORDP4UIVPROC glMultiTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
extern PFNGLUXNORMALP3UIPROC glNormalP3ui;
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
extern PFNGLUXNORMALP3UIVPROC glNormalP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
extern PFNGLUXCOLORP3UIPROC glColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
extern PFNGLUXCOLORP3UIVPROC glColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
extern PFNGLUXCOLORP4UIPROC glColorP4ui;
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
extern PFNGLUXCOLORP4UIVPROC glColorP4uiv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
extern PFNGLUXSECONDARYCOLORP3UIPROC glSecondaryColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
extern PFNGLUXSECONDARYCOLORP3UIVPROC glSecondaryColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
extern PFNGLUXVERTEXATTRIBP1UIPROC glVertexAttribP1ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
extern PFNGLUXVERTEXATTRIBP1UIVPROC glVertexAttribP1uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
extern PFNGLUXVERTEXATTRIBP2UIPROC glVertexAttribP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
extern PFNGLUXVERTEXATTRIBP2UIVPROC glVertexAttribP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
extern PFNGLUXVERTEXATTRIBP3UIPROC glVertexAttribP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
extern PFNGLUXVERTEXATTRIBP3UIVPROC glVertexAttribP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
extern PFNGLUXVERTEXATTRIBP4UIPROC glVertexAttribP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
extern PFNGLUXVERTEXATTRIBP4UIVPROC glVertexAttribP4uiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:31 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__
#define __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__

GLUX_NEW_PLUGIN(GL_ARB_vertex_type_2_10_10_10_rev);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INT_2_10_10_10_REV
#  define GL_INT_2_10_10_10_REV 0x8D9F
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexP2ui
typedef void (APIENTRYP PFNGLUXVERTEXP2UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXP2UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
typedef void (APIENTRYP PFNGLUXVERTEXP3UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXP3UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
typedef void (APIENTRYP PFNGLUXVERTEXP4UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXP4UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
typedef void (APIENTRYP PFNGLUXNORMALP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
typedef void (APIENTRYP PFNGLUXNORMALP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
typedef void (APIENTRYP PFNGLUXCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
typedef void (APIENTRYP PFNGLUXCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
typedef void (APIENTRYP PFNGLUXCOLORP4UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
typedef void (APIENTRYP PFNGLUXCOLORP4UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexP2ui
extern PFNGLUXVERTEXP2UIPROC glVertexP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
extern PFNGLUXVERTEXP2UIVPROC glVertexP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
extern PFNGLUXVERTEXP3UIPROC glVertexP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
extern PFNGLUXVERTEXP3UIVPROC glVertexP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
extern PFNGLUXVERTEXP4UIPROC glVertexP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
extern PFNGLUXVERTEXP4UIVPROC glVertexP4uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
extern PFNGLUXTEXCOORDP1UIPROC glTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
extern PFNGLUXTEXCOORDP1UIVPROC glTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
extern PFNGLUXTEXCOORDP2UIPROC glTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
extern PFNGLUXTEXCOORDP2UIVPROC glTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
extern PFNGLUXTEXCOORDP3UIPROC glTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
extern PFNGLUXTEXCOORDP3UIVPROC glTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
extern PFNGLUXTEXCOORDP4UIPROC glTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
extern PFNGLUXTEXCOORDP4UIVPROC glTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
extern PFNGLUXMULTITEXCOORDP1UIPROC glMultiTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
extern PFNGLUXMULTITEXCOORDP1UIVPROC glMultiTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
extern PFNGLUXMULTITEXCOORDP2UIPROC glMultiTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
extern PFNGLUXMULTITEXCOORDP2UIVPROC glMultiTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
extern PFNGLUXMULTITEXCOORDP3UIPROC glMultiTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
extern PFNGLUXMULTITEXCOORDP3UIVPROC glMultiTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
extern PFNGLUXMULTITEXCOORDP4UIPROC glMultiTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
extern PFNGLUXMULTITEXCOORDP4UIVPROC glMultiTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
extern PFNGLUXNORMALP3UIPROC glNormalP3ui;
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
extern PFNGLUXNORMALP3UIVPROC glNormalP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
extern PFNGLUXCOLORP3UIPROC glColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
extern PFNGLUXCOLORP3UIVPROC glColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
extern PFNGLUXCOLORP4UIPROC glColorP4ui;
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
extern PFNGLUXCOLORP4UIVPROC glColorP4uiv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
extern PFNGLUXSECONDARYCOLORP3UIPROC glSecondaryColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
extern PFNGLUXSECONDARYCOLORP3UIVPROC glSecondaryColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
extern PFNGLUXVERTEXATTRIBP1UIPROC glVertexAttribP1ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
extern PFNGLUXVERTEXATTRIBP1UIVPROC glVertexAttribP1uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
extern PFNGLUXVERTEXATTRIBP2UIPROC glVertexAttribP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
extern PFNGLUXVERTEXATTRIBP2UIVPROC glVertexAttribP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
extern PFNGLUXVERTEXATTRIBP3UIPROC glVertexAttribP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
extern PFNGLUXVERTEXATTRIBP3UIVPROC glVertexAttribP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
extern PFNGLUXVERTEXATTRIBP4UIPROC glVertexAttribP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
extern PFNGLUXVERTEXATTRIBP4UIVPROC glVertexAttribP4uiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:33 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__
#define __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__

GLUX_NEW_PLUGIN(GL_ARB_vertex_type_2_10_10_10_rev);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INT_2_10_10_10_REV
#  define GL_INT_2_10_10_10_REV 0x8D9F
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexP2ui
typedef void (APIENTRYP PFNGLUXVERTEXP2UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXP2UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
typedef void (APIENTRYP PFNGLUXVERTEXP3UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXP3UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
typedef void (APIENTRYP PFNGLUXVERTEXP4UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXP4UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
typedef void (APIENTRYP PFNGLUXNORMALP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
typedef void (APIENTRYP PFNGLUXNORMALP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
typedef void (APIENTRYP PFNGLUXCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
typedef void (APIENTRYP PFNGLUXCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
typedef void (APIENTRYP PFNGLUXCOLORP4UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
typedef void (APIENTRYP PFNGLUXCOLORP4UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexP2ui
extern PFNGLUXVERTEXP2UIPROC glVertexP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
extern PFNGLUXVERTEXP2UIVPROC glVertexP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
extern PFNGLUXVERTEXP3UIPROC glVertexP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
extern PFNGLUXVERTEXP3UIVPROC glVertexP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
extern PFNGLUXVERTEXP4UIPROC glVertexP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
extern PFNGLUXVERTEXP4UIVPROC glVertexP4uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
extern PFNGLUXTEXCOORDP1UIPROC glTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
extern PFNGLUXTEXCOORDP1UIVPROC glTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
extern PFNGLUXTEXCOORDP2UIPROC glTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
extern PFNGLUXTEXCOORDP2UIVPROC glTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
extern PFNGLUXTEXCOORDP3UIPROC glTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
extern PFNGLUXTEXCOORDP3UIVPROC glTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
extern PFNGLUXTEXCOORDP4UIPROC glTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
extern PFNGLUXTEXCOORDP4UIVPROC glTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
extern PFNGLUXMULTITEXCOORDP1UIPROC glMultiTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
extern PFNGLUXMULTITEXCOORDP1UIVPROC glMultiTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
extern PFNGLUXMULTITEXCOORDP2UIPROC glMultiTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
extern PFNGLUXMULTITEXCOORDP2UIVPROC glMultiTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
extern PFNGLUXMULTITEXCOORDP3UIPROC glMultiTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
extern PFNGLUXMULTITEXCOORDP3UIVPROC glMultiTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
extern PFNGLUXMULTITEXCOORDP4UIPROC glMultiTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
extern PFNGLUXMULTITEXCOORDP4UIVPROC glMultiTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
extern PFNGLUXNORMALP3UIPROC glNormalP3ui;
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
extern PFNGLUXNORMALP3UIVPROC glNormalP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
extern PFNGLUXCOLORP3UIPROC glColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
extern PFNGLUXCOLORP3UIVPROC glColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
extern PFNGLUXCOLORP4UIPROC glColorP4ui;
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
extern PFNGLUXCOLORP4UIVPROC glColorP4uiv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
extern PFNGLUXSECONDARYCOLORP3UIPROC glSecondaryColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
extern PFNGLUXSECONDARYCOLORP3UIVPROC glSecondaryColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
extern PFNGLUXVERTEXATTRIBP1UIPROC glVertexAttribP1ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
extern PFNGLUXVERTEXATTRIBP1UIVPROC glVertexAttribP1uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
extern PFNGLUXVERTEXATTRIBP2UIPROC glVertexAttribP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
extern PFNGLUXVERTEXATTRIBP2UIVPROC glVertexAttribP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
extern PFNGLUXVERTEXATTRIBP3UIPROC glVertexAttribP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
extern PFNGLUXVERTEXATTRIBP3UIVPROC glVertexAttribP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
extern PFNGLUXVERTEXATTRIBP4UIPROC glVertexAttribP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
extern PFNGLUXVERTEXATTRIBP4UIVPROC glVertexAttribP4uiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:56 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__
#define __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__

GLUX_NEW_PLUGIN(GL_ARB_vertex_type_2_10_10_10_rev);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INT_2_10_10_10_REV
#  define GL_INT_2_10_10_10_REV 0x8D9F
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexP2ui
typedef void (APIENTRYP PFNGLUXVERTEXP2UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXP2UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
typedef void (APIENTRYP PFNGLUXVERTEXP3UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXP3UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
typedef void (APIENTRYP PFNGLUXVERTEXP4UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXP4UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
typedef void (APIENTRYP PFNGLUXNORMALP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
typedef void (APIENTRYP PFNGLUXNORMALP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
typedef void (APIENTRYP PFNGLUXCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
typedef void (APIENTRYP PFNGLUXCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
typedef void (APIENTRYP PFNGLUXCOLORP4UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
typedef void (APIENTRYP PFNGLUXCOLORP4UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexP2ui
extern PFNGLUXVERTEXP2UIPROC glVertexP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
extern PFNGLUXVERTEXP2UIVPROC glVertexP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
extern PFNGLUXVERTEXP3UIPROC glVertexP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
extern PFNGLUXVERTEXP3UIVPROC glVertexP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
extern PFNGLUXVERTEXP4UIPROC glVertexP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
extern PFNGLUXVERTEXP4UIVPROC glVertexP4uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
extern PFNGLUXTEXCOORDP1UIPROC glTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
extern PFNGLUXTEXCOORDP1UIVPROC glTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
extern PFNGLUXTEXCOORDP2UIPROC glTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
extern PFNGLUXTEXCOORDP2UIVPROC glTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
extern PFNGLUXTEXCOORDP3UIPROC glTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
extern PFNGLUXTEXCOORDP3UIVPROC glTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
extern PFNGLUXTEXCOORDP4UIPROC glTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
extern PFNGLUXTEXCOORDP4UIVPROC glTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
extern PFNGLUXMULTITEXCOORDP1UIPROC glMultiTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
extern PFNGLUXMULTITEXCOORDP1UIVPROC glMultiTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
extern PFNGLUXMULTITEXCOORDP2UIPROC glMultiTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
extern PFNGLUXMULTITEXCOORDP2UIVPROC glMultiTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
extern PFNGLUXMULTITEXCOORDP3UIPROC glMultiTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
extern PFNGLUXMULTITEXCOORDP3UIVPROC glMultiTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
extern PFNGLUXMULTITEXCOORDP4UIPROC glMultiTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
extern PFNGLUXMULTITEXCOORDP4UIVPROC glMultiTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
extern PFNGLUXNORMALP3UIPROC glNormalP3ui;
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
extern PFNGLUXNORMALP3UIVPROC glNormalP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
extern PFNGLUXCOLORP3UIPROC glColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
extern PFNGLUXCOLORP3UIVPROC glColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
extern PFNGLUXCOLORP4UIPROC glColorP4ui;
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
extern PFNGLUXCOLORP4UIVPROC glColorP4uiv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
extern PFNGLUXSECONDARYCOLORP3UIPROC glSecondaryColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
extern PFNGLUXSECONDARYCOLORP3UIVPROC glSecondaryColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
extern PFNGLUXVERTEXATTRIBP1UIPROC glVertexAttribP1ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
extern PFNGLUXVERTEXATTRIBP1UIVPROC glVertexAttribP1uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
extern PFNGLUXVERTEXATTRIBP2UIPROC glVertexAttribP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
extern PFNGLUXVERTEXATTRIBP2UIVPROC glVertexAttribP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
extern PFNGLUXVERTEXATTRIBP3UIPROC glVertexAttribP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
extern PFNGLUXVERTEXATTRIBP3UIVPROC glVertexAttribP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
extern PFNGLUXVERTEXATTRIBP4UIPROC glVertexAttribP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
extern PFNGLUXVERTEXATTRIBP4UIVPROC glVertexAttribP4uiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:29:07 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__
#define __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__

GLUX_NEW_PLUGIN(GL_ARB_vertex_type_2_10_10_10_rev);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INT_2_10_10_10_REV
#  define GL_INT_2_10_10_10_REV 0x8D9F
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexP2ui
typedef void (APIENTRYP PFNGLUXVERTEXP2UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXP2UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
typedef void (APIENTRYP PFNGLUXVERTEXP3UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXP3UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
typedef void (APIENTRYP PFNGLUXVERTEXP4UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXP4UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
typedef void (APIENTRYP PFNGLUXNORMALP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
typedef void (APIENTRYP PFNGLUXNORMALP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
typedef void (APIENTRYP PFNGLUXCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
typedef void (APIENTRYP PFNGLUXCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
typedef void (APIENTRYP PFNGLUXCOLORP4UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
typedef void (APIENTRYP PFNGLUXCOLORP4UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexP2ui
extern PFNGLUXVERTEXP2UIPROC glVertexP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
extern PFNGLUXVERTEXP2UIVPROC glVertexP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
extern PFNGLUXVERTEXP3UIPROC glVertexP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
extern PFNGLUXVERTEXP3UIVPROC glVertexP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
extern PFNGLUXVERTEXP4UIPROC glVertexP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
extern PFNGLUXVERTEXP4UIVPROC glVertexP4uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
extern PFNGLUXTEXCOORDP1UIPROC glTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
extern PFNGLUXTEXCOORDP1UIVPROC glTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
extern PFNGLUXTEXCOORDP2UIPROC glTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
extern PFNGLUXTEXCOORDP2UIVPROC glTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
extern PFNGLUXTEXCOORDP3UIPROC glTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
extern PFNGLUXTEXCOORDP3UIVPROC glTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
extern PFNGLUXTEXCOORDP4UIPROC glTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
extern PFNGLUXTEXCOORDP4UIVPROC glTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
extern PFNGLUXMULTITEXCOORDP1UIPROC glMultiTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
extern PFNGLUXMULTITEXCOORDP1UIVPROC glMultiTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
extern PFNGLUXMULTITEXCOORDP2UIPROC glMultiTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
extern PFNGLUXMULTITEXCOORDP2UIVPROC glMultiTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
extern PFNGLUXMULTITEXCOORDP3UIPROC glMultiTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
extern PFNGLUXMULTITEXCOORDP3UIVPROC glMultiTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
extern PFNGLUXMULTITEXCOORDP4UIPROC glMultiTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
extern PFNGLUXMULTITEXCOORDP4UIVPROC glMultiTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
extern PFNGLUXNORMALP3UIPROC glNormalP3ui;
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
extern PFNGLUXNORMALP3UIVPROC glNormalP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
extern PFNGLUXCOLORP3UIPROC glColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
extern PFNGLUXCOLORP3UIVPROC glColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
extern PFNGLUXCOLORP4UIPROC glColorP4ui;
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
extern PFNGLUXCOLORP4UIVPROC glColorP4uiv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
extern PFNGLUXSECONDARYCOLORP3UIPROC glSecondaryColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
extern PFNGLUXSECONDARYCOLORP3UIVPROC glSecondaryColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
extern PFNGLUXVERTEXATTRIBP1UIPROC glVertexAttribP1ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
extern PFNGLUXVERTEXATTRIBP1UIVPROC glVertexAttribP1uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
extern PFNGLUXVERTEXATTRIBP2UIPROC glVertexAttribP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
extern PFNGLUXVERTEXATTRIBP2UIVPROC glVertexAttribP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
extern PFNGLUXVERTEXATTRIBP3UIPROC glVertexAttribP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
extern PFNGLUXVERTEXATTRIBP3UIVPROC glVertexAttribP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
extern PFNGLUXVERTEXATTRIBP4UIPROC glVertexAttribP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
extern PFNGLUXVERTEXATTRIBP4UIVPROC glVertexAttribP4uiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:17:08 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__
#define __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__

GLUX_NEW_PLUGIN(GL_ARB_vertex_type_2_10_10_10_rev);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INT_2_10_10_10_REV
#  define GL_INT_2_10_10_10_REV 0x8D9F
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexP2ui
typedef void (APIENTRYP PFNGLUXVERTEXP2UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXP2UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
typedef void (APIENTRYP PFNGLUXVERTEXP3UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXP3UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
typedef void (APIENTRYP PFNGLUXVERTEXP4UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXP4UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
typedef void (APIENTRYP PFNGLUXNORMALP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
typedef void (APIENTRYP PFNGLUXNORMALP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
typedef void (APIENTRYP PFNGLUXCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
typedef void (APIENTRYP PFNGLUXCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
typedef void (APIENTRYP PFNGLUXCOLORP4UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
typedef void (APIENTRYP PFNGLUXCOLORP4UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexP2ui
extern PFNGLUXVERTEXP2UIPROC glVertexP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
extern PFNGLUXVERTEXP2UIVPROC glVertexP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
extern PFNGLUXVERTEXP3UIPROC glVertexP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
extern PFNGLUXVERTEXP3UIVPROC glVertexP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
extern PFNGLUXVERTEXP4UIPROC glVertexP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
extern PFNGLUXVERTEXP4UIVPROC glVertexP4uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
extern PFNGLUXTEXCOORDP1UIPROC glTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
extern PFNGLUXTEXCOORDP1UIVPROC glTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
extern PFNGLUXTEXCOORDP2UIPROC glTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
extern PFNGLUXTEXCOORDP2UIVPROC glTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
extern PFNGLUXTEXCOORDP3UIPROC glTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
extern PFNGLUXTEXCOORDP3UIVPROC glTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
extern PFNGLUXTEXCOORDP4UIPROC glTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
extern PFNGLUXTEXCOORDP4UIVPROC glTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
extern PFNGLUXMULTITEXCOORDP1UIPROC glMultiTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
extern PFNGLUXMULTITEXCOORDP1UIVPROC glMultiTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
extern PFNGLUXMULTITEXCOORDP2UIPROC glMultiTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
extern PFNGLUXMULTITEXCOORDP2UIVPROC glMultiTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
extern PFNGLUXMULTITEXCOORDP3UIPROC glMultiTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
extern PFNGLUXMULTITEXCOORDP3UIVPROC glMultiTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
extern PFNGLUXMULTITEXCOORDP4UIPROC glMultiTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
extern PFNGLUXMULTITEXCOORDP4UIVPROC glMultiTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
extern PFNGLUXNORMALP3UIPROC glNormalP3ui;
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
extern PFNGLUXNORMALP3UIVPROC glNormalP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
extern PFNGLUXCOLORP3UIPROC glColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
extern PFNGLUXCOLORP3UIVPROC glColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
extern PFNGLUXCOLORP4UIPROC glColorP4ui;
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
extern PFNGLUXCOLORP4UIVPROC glColorP4uiv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
extern PFNGLUXSECONDARYCOLORP3UIPROC glSecondaryColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
extern PFNGLUXSECONDARYCOLORP3UIVPROC glSecondaryColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
extern PFNGLUXVERTEXATTRIBP1UIPROC glVertexAttribP1ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
extern PFNGLUXVERTEXATTRIBP1UIVPROC glVertexAttribP1uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
extern PFNGLUXVERTEXATTRIBP2UIPROC glVertexAttribP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
extern PFNGLUXVERTEXATTRIBP2UIVPROC glVertexAttribP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
extern PFNGLUXVERTEXATTRIBP3UIPROC glVertexAttribP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
extern PFNGLUXVERTEXATTRIBP3UIVPROC glVertexAttribP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
extern PFNGLUXVERTEXATTRIBP4UIPROC glVertexAttribP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
extern PFNGLUXVERTEXATTRIBP4UIVPROC glVertexAttribP4uiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__
#define __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__

GLUX_NEW_PLUGIN(GL_ARB_vertex_type_2_10_10_10_rev);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INT_2_10_10_10_REV
#  define GL_INT_2_10_10_10_REV 0x8D9F
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexP2ui
typedef void (APIENTRYP PFNGLUXVERTEXP2UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXP2UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
typedef void (APIENTRYP PFNGLUXVERTEXP3UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXP3UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
typedef void (APIENTRYP PFNGLUXVERTEXP4UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXP4UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
typedef void (APIENTRYP PFNGLUXNORMALP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
typedef void (APIENTRYP PFNGLUXNORMALP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
typedef void (APIENTRYP PFNGLUXCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
typedef void (APIENTRYP PFNGLUXCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
typedef void (APIENTRYP PFNGLUXCOLORP4UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
typedef void (APIENTRYP PFNGLUXCOLORP4UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexP2ui
extern PFNGLUXVERTEXP2UIPROC glVertexP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
extern PFNGLUXVERTEXP2UIVPROC glVertexP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
extern PFNGLUXVERTEXP3UIPROC glVertexP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
extern PFNGLUXVERTEXP3UIVPROC glVertexP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
extern PFNGLUXVERTEXP4UIPROC glVertexP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
extern PFNGLUXVERTEXP4UIVPROC glVertexP4uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
extern PFNGLUXTEXCOORDP1UIPROC glTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
extern PFNGLUXTEXCOORDP1UIVPROC glTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
extern PFNGLUXTEXCOORDP2UIPROC glTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
extern PFNGLUXTEXCOORDP2UIVPROC glTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
extern PFNGLUXTEXCOORDP3UIPROC glTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
extern PFNGLUXTEXCOORDP3UIVPROC glTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
extern PFNGLUXTEXCOORDP4UIPROC glTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
extern PFNGLUXTEXCOORDP4UIVPROC glTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
extern PFNGLUXMULTITEXCOORDP1UIPROC glMultiTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
extern PFNGLUXMULTITEXCOORDP1UIVPROC glMultiTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
extern PFNGLUXMULTITEXCOORDP2UIPROC glMultiTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
extern PFNGLUXMULTITEXCOORDP2UIVPROC glMultiTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
extern PFNGLUXMULTITEXCOORDP3UIPROC glMultiTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
extern PFNGLUXMULTITEXCOORDP3UIVPROC glMultiTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
extern PFNGLUXMULTITEXCOORDP4UIPROC glMultiTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
extern PFNGLUXMULTITEXCOORDP4UIVPROC glMultiTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
extern PFNGLUXNORMALP3UIPROC glNormalP3ui;
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
extern PFNGLUXNORMALP3UIVPROC glNormalP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
extern PFNGLUXCOLORP3UIPROC glColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
extern PFNGLUXCOLORP3UIVPROC glColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
extern PFNGLUXCOLORP4UIPROC glColorP4ui;
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
extern PFNGLUXCOLORP4UIVPROC glColorP4uiv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
extern PFNGLUXSECONDARYCOLORP3UIPROC glSecondaryColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
extern PFNGLUXSECONDARYCOLORP3UIVPROC glSecondaryColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
extern PFNGLUXVERTEXATTRIBP1UIPROC glVertexAttribP1ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
extern PFNGLUXVERTEXATTRIBP1UIVPROC glVertexAttribP1uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
extern PFNGLUXVERTEXATTRIBP2UIPROC glVertexAttribP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
extern PFNGLUXVERTEXATTRIBP2UIVPROC glVertexAttribP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
extern PFNGLUXVERTEXATTRIBP3UIPROC glVertexAttribP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
extern PFNGLUXVERTEXATTRIBP3UIVPROC glVertexAttribP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
extern PFNGLUXVERTEXATTRIBP4UIPROC glVertexAttribP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
extern PFNGLUXVERTEXATTRIBP4UIVPROC glVertexAttribP4uiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:23 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__
#define __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__

GLUX_NEW_PLUGIN(GL_ARB_vertex_type_2_10_10_10_rev);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INT_2_10_10_10_REV
#  define GL_INT_2_10_10_10_REV 0x8D9F
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexP2ui
typedef void (APIENTRYP PFNGLUXVERTEXP2UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXP2UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
typedef void (APIENTRYP PFNGLUXVERTEXP3UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXP3UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
typedef void (APIENTRYP PFNGLUXVERTEXP4UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXP4UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
typedef void (APIENTRYP PFNGLUXNORMALP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
typedef void (APIENTRYP PFNGLUXNORMALP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
typedef void (APIENTRYP PFNGLUXCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
typedef void (APIENTRYP PFNGLUXCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
typedef void (APIENTRYP PFNGLUXCOLORP4UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
typedef void (APIENTRYP PFNGLUXCOLORP4UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexP2ui
extern PFNGLUXVERTEXP2UIPROC glVertexP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
extern PFNGLUXVERTEXP2UIVPROC glVertexP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
extern PFNGLUXVERTEXP3UIPROC glVertexP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
extern PFNGLUXVERTEXP3UIVPROC glVertexP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
extern PFNGLUXVERTEXP4UIPROC glVertexP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
extern PFNGLUXVERTEXP4UIVPROC glVertexP4uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
extern PFNGLUXTEXCOORDP1UIPROC glTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
extern PFNGLUXTEXCOORDP1UIVPROC glTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
extern PFNGLUXTEXCOORDP2UIPROC glTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
extern PFNGLUXTEXCOORDP2UIVPROC glTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
extern PFNGLUXTEXCOORDP3UIPROC glTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
extern PFNGLUXTEXCOORDP3UIVPROC glTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
extern PFNGLUXTEXCOORDP4UIPROC glTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
extern PFNGLUXTEXCOORDP4UIVPROC glTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
extern PFNGLUXMULTITEXCOORDP1UIPROC glMultiTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
extern PFNGLUXMULTITEXCOORDP1UIVPROC glMultiTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
extern PFNGLUXMULTITEXCOORDP2UIPROC glMultiTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
extern PFNGLUXMULTITEXCOORDP2UIVPROC glMultiTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
extern PFNGLUXMULTITEXCOORDP3UIPROC glMultiTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
extern PFNGLUXMULTITEXCOORDP3UIVPROC glMultiTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
extern PFNGLUXMULTITEXCOORDP4UIPROC glMultiTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
extern PFNGLUXMULTITEXCOORDP4UIVPROC glMultiTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
extern PFNGLUXNORMALP3UIPROC glNormalP3ui;
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
extern PFNGLUXNORMALP3UIVPROC glNormalP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
extern PFNGLUXCOLORP3UIPROC glColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
extern PFNGLUXCOLORP3UIVPROC glColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
extern PFNGLUXCOLORP4UIPROC glColorP4ui;
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
extern PFNGLUXCOLORP4UIVPROC glColorP4uiv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
extern PFNGLUXSECONDARYCOLORP3UIPROC glSecondaryColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
extern PFNGLUXSECONDARYCOLORP3UIVPROC glSecondaryColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
extern PFNGLUXVERTEXATTRIBP1UIPROC glVertexAttribP1ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
extern PFNGLUXVERTEXATTRIBP1UIVPROC glVertexAttribP1uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
extern PFNGLUXVERTEXATTRIBP2UIPROC glVertexAttribP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
extern PFNGLUXVERTEXATTRIBP2UIVPROC glVertexAttribP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
extern PFNGLUXVERTEXATTRIBP3UIPROC glVertexAttribP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
extern PFNGLUXVERTEXATTRIBP3UIVPROC glVertexAttribP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
extern PFNGLUXVERTEXATTRIBP4UIPROC glVertexAttribP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
extern PFNGLUXVERTEXATTRIBP4UIVPROC glVertexAttribP4uiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:02 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__
#define __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__

GLUX_NEW_PLUGIN(GL_ARB_vertex_type_2_10_10_10_rev);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INT_2_10_10_10_REV
#  define GL_INT_2_10_10_10_REV 0x8D9F
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexP2ui
typedef void (APIENTRYP PFNGLUXVERTEXP2UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXP2UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
typedef void (APIENTRYP PFNGLUXVERTEXP3UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXP3UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
typedef void (APIENTRYP PFNGLUXVERTEXP4UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXP4UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
typedef void (APIENTRYP PFNGLUXNORMALP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
typedef void (APIENTRYP PFNGLUXNORMALP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
typedef void (APIENTRYP PFNGLUXCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
typedef void (APIENTRYP PFNGLUXCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
typedef void (APIENTRYP PFNGLUXCOLORP4UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
typedef void (APIENTRYP PFNGLUXCOLORP4UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexP2ui
extern PFNGLUXVERTEXP2UIPROC glVertexP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
extern PFNGLUXVERTEXP2UIVPROC glVertexP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
extern PFNGLUXVERTEXP3UIPROC glVertexP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
extern PFNGLUXVERTEXP3UIVPROC glVertexP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
extern PFNGLUXVERTEXP4UIPROC glVertexP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
extern PFNGLUXVERTEXP4UIVPROC glVertexP4uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
extern PFNGLUXTEXCOORDP1UIPROC glTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
extern PFNGLUXTEXCOORDP1UIVPROC glTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
extern PFNGLUXTEXCOORDP2UIPROC glTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
extern PFNGLUXTEXCOORDP2UIVPROC glTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
extern PFNGLUXTEXCOORDP3UIPROC glTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
extern PFNGLUXTEXCOORDP3UIVPROC glTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
extern PFNGLUXTEXCOORDP4UIPROC glTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
extern PFNGLUXTEXCOORDP4UIVPROC glTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
extern PFNGLUXMULTITEXCOORDP1UIPROC glMultiTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
extern PFNGLUXMULTITEXCOORDP1UIVPROC glMultiTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
extern PFNGLUXMULTITEXCOORDP2UIPROC glMultiTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
extern PFNGLUXMULTITEXCOORDP2UIVPROC glMultiTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
extern PFNGLUXMULTITEXCOORDP3UIPROC glMultiTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
extern PFNGLUXMULTITEXCOORDP3UIVPROC glMultiTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
extern PFNGLUXMULTITEXCOORDP4UIPROC glMultiTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
extern PFNGLUXMULTITEXCOORDP4UIVPROC glMultiTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
extern PFNGLUXNORMALP3UIPROC glNormalP3ui;
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
extern PFNGLUXNORMALP3UIVPROC glNormalP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
extern PFNGLUXCOLORP3UIPROC glColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
extern PFNGLUXCOLORP3UIVPROC glColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
extern PFNGLUXCOLORP4UIPROC glColorP4ui;
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
extern PFNGLUXCOLORP4UIVPROC glColorP4uiv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
extern PFNGLUXSECONDARYCOLORP3UIPROC glSecondaryColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
extern PFNGLUXSECONDARYCOLORP3UIVPROC glSecondaryColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
extern PFNGLUXVERTEXATTRIBP1UIPROC glVertexAttribP1ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
extern PFNGLUXVERTEXATTRIBP1UIVPROC glVertexAttribP1uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
extern PFNGLUXVERTEXATTRIBP2UIPROC glVertexAttribP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
extern PFNGLUXVERTEXATTRIBP2UIVPROC glVertexAttribP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
extern PFNGLUXVERTEXATTRIBP3UIPROC glVertexAttribP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
extern PFNGLUXVERTEXATTRIBP3UIVPROC glVertexAttribP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
extern PFNGLUXVERTEXATTRIBP4UIPROC glVertexAttribP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
extern PFNGLUXVERTEXATTRIBP4UIVPROC glVertexAttribP4uiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:09 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__
#define __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__

GLUX_NEW_PLUGIN(GL_ARB_vertex_type_2_10_10_10_rev);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INT_2_10_10_10_REV
#  define GL_INT_2_10_10_10_REV 0x8D9F
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexP2ui
typedef void (APIENTRYP PFNGLUXVERTEXP2UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXP2UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
typedef void (APIENTRYP PFNGLUXVERTEXP3UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXP3UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
typedef void (APIENTRYP PFNGLUXVERTEXP4UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXP4UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
typedef void (APIENTRYP PFNGLUXNORMALP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
typedef void (APIENTRYP PFNGLUXNORMALP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
typedef void (APIENTRYP PFNGLUXCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
typedef void (APIENTRYP PFNGLUXCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
typedef void (APIENTRYP PFNGLUXCOLORP4UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
typedef void (APIENTRYP PFNGLUXCOLORP4UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexP2ui
extern PFNGLUXVERTEXP2UIPROC glVertexP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
extern PFNGLUXVERTEXP2UIVPROC glVertexP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
extern PFNGLUXVERTEXP3UIPROC glVertexP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
extern PFNGLUXVERTEXP3UIVPROC glVertexP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
extern PFNGLUXVERTEXP4UIPROC glVertexP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
extern PFNGLUXVERTEXP4UIVPROC glVertexP4uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
extern PFNGLUXTEXCOORDP1UIPROC glTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
extern PFNGLUXTEXCOORDP1UIVPROC glTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
extern PFNGLUXTEXCOORDP2UIPROC glTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
extern PFNGLUXTEXCOORDP2UIVPROC glTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
extern PFNGLUXTEXCOORDP3UIPROC glTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
extern PFNGLUXTEXCOORDP3UIVPROC glTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
extern PFNGLUXTEXCOORDP4UIPROC glTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
extern PFNGLUXTEXCOORDP4UIVPROC glTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
extern PFNGLUXMULTITEXCOORDP1UIPROC glMultiTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
extern PFNGLUXMULTITEXCOORDP1UIVPROC glMultiTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
extern PFNGLUXMULTITEXCOORDP2UIPROC glMultiTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
extern PFNGLUXMULTITEXCOORDP2UIVPROC glMultiTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
extern PFNGLUXMULTITEXCOORDP3UIPROC glMultiTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
extern PFNGLUXMULTITEXCOORDP3UIVPROC glMultiTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
extern PFNGLUXMULTITEXCOORDP4UIPROC glMultiTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
extern PFNGLUXMULTITEXCOORDP4UIVPROC glMultiTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
extern PFNGLUXNORMALP3UIPROC glNormalP3ui;
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
extern PFNGLUXNORMALP3UIVPROC glNormalP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
extern PFNGLUXCOLORP3UIPROC glColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
extern PFNGLUXCOLORP3UIVPROC glColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
extern PFNGLUXCOLORP4UIPROC glColorP4ui;
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
extern PFNGLUXCOLORP4UIVPROC glColorP4uiv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
extern PFNGLUXSECONDARYCOLORP3UIPROC glSecondaryColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
extern PFNGLUXSECONDARYCOLORP3UIVPROC glSecondaryColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
extern PFNGLUXVERTEXATTRIBP1UIPROC glVertexAttribP1ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
extern PFNGLUXVERTEXATTRIBP1UIVPROC glVertexAttribP1uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
extern PFNGLUXVERTEXATTRIBP2UIPROC glVertexAttribP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
extern PFNGLUXVERTEXATTRIBP2UIVPROC glVertexAttribP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
extern PFNGLUXVERTEXATTRIBP3UIPROC glVertexAttribP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
extern PFNGLUXVERTEXATTRIBP3UIVPROC glVertexAttribP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
extern PFNGLUXVERTEXATTRIBP4UIPROC glVertexAttribP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
extern PFNGLUXVERTEXATTRIBP4UIVPROC glVertexAttribP4uiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:26 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__
#define __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__

GLUX_NEW_PLUGIN(GL_ARB_vertex_type_2_10_10_10_rev);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INT_2_10_10_10_REV
#  define GL_INT_2_10_10_10_REV 0x8D9F
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexP2ui
typedef void (APIENTRYP PFNGLUXVERTEXP2UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXP2UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
typedef void (APIENTRYP PFNGLUXVERTEXP3UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXP3UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
typedef void (APIENTRYP PFNGLUXVERTEXP4UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXP4UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
typedef void (APIENTRYP PFNGLUXNORMALP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
typedef void (APIENTRYP PFNGLUXNORMALP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
typedef void (APIENTRYP PFNGLUXCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
typedef void (APIENTRYP PFNGLUXCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
typedef void (APIENTRYP PFNGLUXCOLORP4UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
typedef void (APIENTRYP PFNGLUXCOLORP4UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexP2ui
extern PFNGLUXVERTEXP2UIPROC glVertexP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
extern PFNGLUXVERTEXP2UIVPROC glVertexP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
extern PFNGLUXVERTEXP3UIPROC glVertexP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
extern PFNGLUXVERTEXP3UIVPROC glVertexP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
extern PFNGLUXVERTEXP4UIPROC glVertexP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
extern PFNGLUXVERTEXP4UIVPROC glVertexP4uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
extern PFNGLUXTEXCOORDP1UIPROC glTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
extern PFNGLUXTEXCOORDP1UIVPROC glTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
extern PFNGLUXTEXCOORDP2UIPROC glTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
extern PFNGLUXTEXCOORDP2UIVPROC glTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
extern PFNGLUXTEXCOORDP3UIPROC glTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
extern PFNGLUXTEXCOORDP3UIVPROC glTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
extern PFNGLUXTEXCOORDP4UIPROC glTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
extern PFNGLUXTEXCOORDP4UIVPROC glTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
extern PFNGLUXMULTITEXCOORDP1UIPROC glMultiTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
extern PFNGLUXMULTITEXCOORDP1UIVPROC glMultiTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
extern PFNGLUXMULTITEXCOORDP2UIPROC glMultiTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
extern PFNGLUXMULTITEXCOORDP2UIVPROC glMultiTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
extern PFNGLUXMULTITEXCOORDP3UIPROC glMultiTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
extern PFNGLUXMULTITEXCOORDP3UIVPROC glMultiTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
extern PFNGLUXMULTITEXCOORDP4UIPROC glMultiTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
extern PFNGLUXMULTITEXCOORDP4UIVPROC glMultiTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
extern PFNGLUXNORMALP3UIPROC glNormalP3ui;
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
extern PFNGLUXNORMALP3UIVPROC glNormalP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
extern PFNGLUXCOLORP3UIPROC glColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
extern PFNGLUXCOLORP3UIVPROC glColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
extern PFNGLUXCOLORP4UIPROC glColorP4ui;
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
extern PFNGLUXCOLORP4UIVPROC glColorP4uiv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
extern PFNGLUXSECONDARYCOLORP3UIPROC glSecondaryColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
extern PFNGLUXSECONDARYCOLORP3UIVPROC glSecondaryColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
extern PFNGLUXVERTEXATTRIBP1UIPROC glVertexAttribP1ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
extern PFNGLUXVERTEXATTRIBP1UIVPROC glVertexAttribP1uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
extern PFNGLUXVERTEXATTRIBP2UIPROC glVertexAttribP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
extern PFNGLUXVERTEXATTRIBP2UIVPROC glVertexAttribP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
extern PFNGLUXVERTEXATTRIBP3UIPROC glVertexAttribP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
extern PFNGLUXVERTEXATTRIBP3UIVPROC glVertexAttribP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
extern PFNGLUXVERTEXATTRIBP4UIPROC glVertexAttribP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
extern PFNGLUXVERTEXATTRIBP4UIVPROC glVertexAttribP4uiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:52:09 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__
#define __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__

GLUX_NEW_PLUGIN(GL_ARB_vertex_type_2_10_10_10_rev);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INT_2_10_10_10_REV
#  define GL_INT_2_10_10_10_REV 0x8D9F
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexP2ui
typedef void (APIENTRYP PFNGLUXVERTEXP2UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXP2UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
typedef void (APIENTRYP PFNGLUXVERTEXP3UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXP3UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
typedef void (APIENTRYP PFNGLUXVERTEXP4UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXP4UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
typedef void (APIENTRYP PFNGLUXNORMALP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
typedef void (APIENTRYP PFNGLUXNORMALP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
typedef void (APIENTRYP PFNGLUXCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
typedef void (APIENTRYP PFNGLUXCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
typedef void (APIENTRYP PFNGLUXCOLORP4UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
typedef void (APIENTRYP PFNGLUXCOLORP4UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexP2ui
extern PFNGLUXVERTEXP2UIPROC glVertexP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
extern PFNGLUXVERTEXP2UIVPROC glVertexP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
extern PFNGLUXVERTEXP3UIPROC glVertexP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
extern PFNGLUXVERTEXP3UIVPROC glVertexP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
extern PFNGLUXVERTEXP4UIPROC glVertexP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
extern PFNGLUXVERTEXP4UIVPROC glVertexP4uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
extern PFNGLUXTEXCOORDP1UIPROC glTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
extern PFNGLUXTEXCOORDP1UIVPROC glTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
extern PFNGLUXTEXCOORDP2UIPROC glTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
extern PFNGLUXTEXCOORDP2UIVPROC glTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
extern PFNGLUXTEXCOORDP3UIPROC glTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
extern PFNGLUXTEXCOORDP3UIVPROC glTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
extern PFNGLUXTEXCOORDP4UIPROC glTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
extern PFNGLUXTEXCOORDP4UIVPROC glTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
extern PFNGLUXMULTITEXCOORDP1UIPROC glMultiTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
extern PFNGLUXMULTITEXCOORDP1UIVPROC glMultiTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
extern PFNGLUXMULTITEXCOORDP2UIPROC glMultiTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
extern PFNGLUXMULTITEXCOORDP2UIVPROC glMultiTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
extern PFNGLUXMULTITEXCOORDP3UIPROC glMultiTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
extern PFNGLUXMULTITEXCOORDP3UIVPROC glMultiTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
extern PFNGLUXMULTITEXCOORDP4UIPROC glMultiTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
extern PFNGLUXMULTITEXCOORDP4UIVPROC glMultiTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
extern PFNGLUXNORMALP3UIPROC glNormalP3ui;
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
extern PFNGLUXNORMALP3UIVPROC glNormalP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
extern PFNGLUXCOLORP3UIPROC glColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
extern PFNGLUXCOLORP3UIVPROC glColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
extern PFNGLUXCOLORP4UIPROC glColorP4ui;
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
extern PFNGLUXCOLORP4UIVPROC glColorP4uiv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
extern PFNGLUXSECONDARYCOLORP3UIPROC glSecondaryColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
extern PFNGLUXSECONDARYCOLORP3UIVPROC glSecondaryColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
extern PFNGLUXVERTEXATTRIBP1UIPROC glVertexAttribP1ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
extern PFNGLUXVERTEXATTRIBP1UIVPROC glVertexAttribP1uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
extern PFNGLUXVERTEXATTRIBP2UIPROC glVertexAttribP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
extern PFNGLUXVERTEXATTRIBP2UIVPROC glVertexAttribP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
extern PFNGLUXVERTEXATTRIBP3UIPROC glVertexAttribP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
extern PFNGLUXVERTEXATTRIBP3UIVPROC glVertexAttribP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
extern PFNGLUXVERTEXATTRIBP4UIPROC glVertexAttribP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
extern PFNGLUXVERTEXATTRIBP4UIVPROC glVertexAttribP4uiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__
#define __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__

GLUX_NEW_PLUGIN(GL_ARB_vertex_type_2_10_10_10_rev);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INT_2_10_10_10_REV
#  define GL_INT_2_10_10_10_REV 0x8D9F
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexP2ui
typedef void (APIENTRYP PFNGLUXVERTEXP2UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXP2UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
typedef void (APIENTRYP PFNGLUXVERTEXP3UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXP3UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
typedef void (APIENTRYP PFNGLUXVERTEXP4UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXP4UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
typedef void (APIENTRYP PFNGLUXNORMALP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
typedef void (APIENTRYP PFNGLUXNORMALP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
typedef void (APIENTRYP PFNGLUXCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
typedef void (APIENTRYP PFNGLUXCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
typedef void (APIENTRYP PFNGLUXCOLORP4UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
typedef void (APIENTRYP PFNGLUXCOLORP4UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexP2ui
extern PFNGLUXVERTEXP2UIPROC glVertexP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
extern PFNGLUXVERTEXP2UIVPROC glVertexP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
extern PFNGLUXVERTEXP3UIPROC glVertexP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
extern PFNGLUXVERTEXP3UIVPROC glVertexP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
extern PFNGLUXVERTEXP4UIPROC glVertexP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
extern PFNGLUXVERTEXP4UIVPROC glVertexP4uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
extern PFNGLUXTEXCOORDP1UIPROC glTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
extern PFNGLUXTEXCOORDP1UIVPROC glTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
extern PFNGLUXTEXCOORDP2UIPROC glTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
extern PFNGLUXTEXCOORDP2UIVPROC glTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
extern PFNGLUXTEXCOORDP3UIPROC glTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
extern PFNGLUXTEXCOORDP3UIVPROC glTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
extern PFNGLUXTEXCOORDP4UIPROC glTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
extern PFNGLUXTEXCOORDP4UIVPROC glTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
extern PFNGLUXMULTITEXCOORDP1UIPROC glMultiTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
extern PFNGLUXMULTITEXCOORDP1UIVPROC glMultiTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
extern PFNGLUXMULTITEXCOORDP2UIPROC glMultiTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
extern PFNGLUXMULTITEXCOORDP2UIVPROC glMultiTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
extern PFNGLUXMULTITEXCOORDP3UIPROC glMultiTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
extern PFNGLUXMULTITEXCOORDP3UIVPROC glMultiTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
extern PFNGLUXMULTITEXCOORDP4UIPROC glMultiTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
extern PFNGLUXMULTITEXCOORDP4UIVPROC glMultiTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
extern PFNGLUXNORMALP3UIPROC glNormalP3ui;
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
extern PFNGLUXNORMALP3UIVPROC glNormalP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
extern PFNGLUXCOLORP3UIPROC glColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
extern PFNGLUXCOLORP3UIVPROC glColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
extern PFNGLUXCOLORP4UIPROC glColorP4ui;
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
extern PFNGLUXCOLORP4UIVPROC glColorP4uiv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
extern PFNGLUXSECONDARYCOLORP3UIPROC glSecondaryColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
extern PFNGLUXSECONDARYCOLORP3UIVPROC glSecondaryColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
extern PFNGLUXVERTEXATTRIBP1UIPROC glVertexAttribP1ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
extern PFNGLUXVERTEXATTRIBP1UIVPROC glVertexAttribP1uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
extern PFNGLUXVERTEXATTRIBP2UIPROC glVertexAttribP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
extern PFNGLUXVERTEXATTRIBP2UIVPROC glVertexAttribP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
extern PFNGLUXVERTEXATTRIBP3UIPROC glVertexAttribP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
extern PFNGLUXVERTEXATTRIBP3UIVPROC glVertexAttribP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
extern PFNGLUXVERTEXATTRIBP4UIPROC glVertexAttribP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
extern PFNGLUXVERTEXATTRIBP4UIVPROC glVertexAttribP4uiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:11 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__
#define __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__

GLUX_NEW_PLUGIN(GL_ARB_vertex_type_2_10_10_10_rev);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INT_2_10_10_10_REV
#  define GL_INT_2_10_10_10_REV 0x8D9F
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexP2ui
typedef void (APIENTRYP PFNGLUXVERTEXP2UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXP2UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
typedef void (APIENTRYP PFNGLUXVERTEXP3UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXP3UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
typedef void (APIENTRYP PFNGLUXVERTEXP4UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXP4UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
typedef void (APIENTRYP PFNGLUXNORMALP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
typedef void (APIENTRYP PFNGLUXNORMALP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
typedef void (APIENTRYP PFNGLUXCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
typedef void (APIENTRYP PFNGLUXCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
typedef void (APIENTRYP PFNGLUXCOLORP4UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
typedef void (APIENTRYP PFNGLUXCOLORP4UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexP2ui
extern PFNGLUXVERTEXP2UIPROC glVertexP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
extern PFNGLUXVERTEXP2UIVPROC glVertexP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
extern PFNGLUXVERTEXP3UIPROC glVertexP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
extern PFNGLUXVERTEXP3UIVPROC glVertexP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
extern PFNGLUXVERTEXP4UIPROC glVertexP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
extern PFNGLUXVERTEXP4UIVPROC glVertexP4uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
extern PFNGLUXTEXCOORDP1UIPROC glTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
extern PFNGLUXTEXCOORDP1UIVPROC glTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
extern PFNGLUXTEXCOORDP2UIPROC glTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
extern PFNGLUXTEXCOORDP2UIVPROC glTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
extern PFNGLUXTEXCOORDP3UIPROC glTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
extern PFNGLUXTEXCOORDP3UIVPROC glTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
extern PFNGLUXTEXCOORDP4UIPROC glTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
extern PFNGLUXTEXCOORDP4UIVPROC glTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
extern PFNGLUXMULTITEXCOORDP1UIPROC glMultiTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
extern PFNGLUXMULTITEXCOORDP1UIVPROC glMultiTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
extern PFNGLUXMULTITEXCOORDP2UIPROC glMultiTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
extern PFNGLUXMULTITEXCOORDP2UIVPROC glMultiTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
extern PFNGLUXMULTITEXCOORDP3UIPROC glMultiTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
extern PFNGLUXMULTITEXCOORDP3UIVPROC glMultiTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
extern PFNGLUXMULTITEXCOORDP4UIPROC glMultiTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
extern PFNGLUXMULTITEXCOORDP4UIVPROC glMultiTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
extern PFNGLUXNORMALP3UIPROC glNormalP3ui;
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
extern PFNGLUXNORMALP3UIVPROC glNormalP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
extern PFNGLUXCOLORP3UIPROC glColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
extern PFNGLUXCOLORP3UIVPROC glColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
extern PFNGLUXCOLORP4UIPROC glColorP4ui;
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
extern PFNGLUXCOLORP4UIVPROC glColorP4uiv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
extern PFNGLUXSECONDARYCOLORP3UIPROC glSecondaryColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
extern PFNGLUXSECONDARYCOLORP3UIVPROC glSecondaryColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
extern PFNGLUXVERTEXATTRIBP1UIPROC glVertexAttribP1ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
extern PFNGLUXVERTEXATTRIBP1UIVPROC glVertexAttribP1uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
extern PFNGLUXVERTEXATTRIBP2UIPROC glVertexAttribP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
extern PFNGLUXVERTEXATTRIBP2UIVPROC glVertexAttribP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
extern PFNGLUXVERTEXATTRIBP3UIPROC glVertexAttribP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
extern PFNGLUXVERTEXATTRIBP3UIVPROC glVertexAttribP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
extern PFNGLUXVERTEXATTRIBP4UIPROC glVertexAttribP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
extern PFNGLUXVERTEXATTRIBP4UIVPROC glVertexAttribP4uiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:30 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__
#define __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__

GLUX_NEW_PLUGIN(GL_ARB_vertex_type_2_10_10_10_rev);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INT_2_10_10_10_REV
#  define GL_INT_2_10_10_10_REV 0x8D9F
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexP2ui
typedef void (APIENTRYP PFNGLUXVERTEXP2UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXP2UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
typedef void (APIENTRYP PFNGLUXVERTEXP3UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXP3UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
typedef void (APIENTRYP PFNGLUXVERTEXP4UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXP4UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
typedef void (APIENTRYP PFNGLUXNORMALP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
typedef void (APIENTRYP PFNGLUXNORMALP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
typedef void (APIENTRYP PFNGLUXCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
typedef void (APIENTRYP PFNGLUXCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
typedef void (APIENTRYP PFNGLUXCOLORP4UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
typedef void (APIENTRYP PFNGLUXCOLORP4UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexP2ui
extern PFNGLUXVERTEXP2UIPROC glVertexP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
extern PFNGLUXVERTEXP2UIVPROC glVertexP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
extern PFNGLUXVERTEXP3UIPROC glVertexP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
extern PFNGLUXVERTEXP3UIVPROC glVertexP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
extern PFNGLUXVERTEXP4UIPROC glVertexP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
extern PFNGLUXVERTEXP4UIVPROC glVertexP4uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
extern PFNGLUXTEXCOORDP1UIPROC glTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
extern PFNGLUXTEXCOORDP1UIVPROC glTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
extern PFNGLUXTEXCOORDP2UIPROC glTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
extern PFNGLUXTEXCOORDP2UIVPROC glTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
extern PFNGLUXTEXCOORDP3UIPROC glTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
extern PFNGLUXTEXCOORDP3UIVPROC glTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
extern PFNGLUXTEXCOORDP4UIPROC glTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
extern PFNGLUXTEXCOORDP4UIVPROC glTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
extern PFNGLUXMULTITEXCOORDP1UIPROC glMultiTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
extern PFNGLUXMULTITEXCOORDP1UIVPROC glMultiTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
extern PFNGLUXMULTITEXCOORDP2UIPROC glMultiTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
extern PFNGLUXMULTITEXCOORDP2UIVPROC glMultiTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
extern PFNGLUXMULTITEXCOORDP3UIPROC glMultiTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
extern PFNGLUXMULTITEXCOORDP3UIVPROC glMultiTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
extern PFNGLUXMULTITEXCOORDP4UIPROC glMultiTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
extern PFNGLUXMULTITEXCOORDP4UIVPROC glMultiTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
extern PFNGLUXNORMALP3UIPROC glNormalP3ui;
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
extern PFNGLUXNORMALP3UIVPROC glNormalP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
extern PFNGLUXCOLORP3UIPROC glColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
extern PFNGLUXCOLORP3UIVPROC glColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
extern PFNGLUXCOLORP4UIPROC glColorP4ui;
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
extern PFNGLUXCOLORP4UIVPROC glColorP4uiv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
extern PFNGLUXSECONDARYCOLORP3UIPROC glSecondaryColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
extern PFNGLUXSECONDARYCOLORP3UIVPROC glSecondaryColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
extern PFNGLUXVERTEXATTRIBP1UIPROC glVertexAttribP1ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
extern PFNGLUXVERTEXATTRIBP1UIVPROC glVertexAttribP1uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
extern PFNGLUXVERTEXATTRIBP2UIPROC glVertexAttribP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
extern PFNGLUXVERTEXATTRIBP2UIVPROC glVertexAttribP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
extern PFNGLUXVERTEXATTRIBP3UIPROC glVertexAttribP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
extern PFNGLUXVERTEXATTRIBP3UIVPROC glVertexAttribP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
extern PFNGLUXVERTEXATTRIBP4UIPROC glVertexAttribP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
extern PFNGLUXVERTEXATTRIBP4UIVPROC glVertexAttribP4uiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:26 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__
#define __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__

GLUX_NEW_PLUGIN(GL_ARB_vertex_type_2_10_10_10_rev);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INT_2_10_10_10_REV
#  define GL_INT_2_10_10_10_REV 0x8D9F
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexP2ui
typedef void (APIENTRYP PFNGLUXVERTEXP2UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXP2UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
typedef void (APIENTRYP PFNGLUXVERTEXP3UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXP3UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
typedef void (APIENTRYP PFNGLUXVERTEXP4UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXP4UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
typedef void (APIENTRYP PFNGLUXNORMALP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
typedef void (APIENTRYP PFNGLUXNORMALP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
typedef void (APIENTRYP PFNGLUXCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
typedef void (APIENTRYP PFNGLUXCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
typedef void (APIENTRYP PFNGLUXCOLORP4UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
typedef void (APIENTRYP PFNGLUXCOLORP4UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexP2ui
extern PFNGLUXVERTEXP2UIPROC glVertexP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
extern PFNGLUXVERTEXP2UIVPROC glVertexP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
extern PFNGLUXVERTEXP3UIPROC glVertexP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
extern PFNGLUXVERTEXP3UIVPROC glVertexP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
extern PFNGLUXVERTEXP4UIPROC glVertexP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
extern PFNGLUXVERTEXP4UIVPROC glVertexP4uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
extern PFNGLUXTEXCOORDP1UIPROC glTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
extern PFNGLUXTEXCOORDP1UIVPROC glTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
extern PFNGLUXTEXCOORDP2UIPROC glTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
extern PFNGLUXTEXCOORDP2UIVPROC glTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
extern PFNGLUXTEXCOORDP3UIPROC glTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
extern PFNGLUXTEXCOORDP3UIVPROC glTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
extern PFNGLUXTEXCOORDP4UIPROC glTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
extern PFNGLUXTEXCOORDP4UIVPROC glTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
extern PFNGLUXMULTITEXCOORDP1UIPROC glMultiTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
extern PFNGLUXMULTITEXCOORDP1UIVPROC glMultiTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
extern PFNGLUXMULTITEXCOORDP2UIPROC glMultiTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
extern PFNGLUXMULTITEXCOORDP2UIVPROC glMultiTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
extern PFNGLUXMULTITEXCOORDP3UIPROC glMultiTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
extern PFNGLUXMULTITEXCOORDP3UIVPROC glMultiTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
extern PFNGLUXMULTITEXCOORDP4UIPROC glMultiTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
extern PFNGLUXMULTITEXCOORDP4UIVPROC glMultiTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
extern PFNGLUXNORMALP3UIPROC glNormalP3ui;
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
extern PFNGLUXNORMALP3UIVPROC glNormalP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
extern PFNGLUXCOLORP3UIPROC glColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
extern PFNGLUXCOLORP3UIVPROC glColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
extern PFNGLUXCOLORP4UIPROC glColorP4ui;
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
extern PFNGLUXCOLORP4UIVPROC glColorP4uiv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
extern PFNGLUXSECONDARYCOLORP3UIPROC glSecondaryColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
extern PFNGLUXSECONDARYCOLORP3UIVPROC glSecondaryColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
extern PFNGLUXVERTEXATTRIBP1UIPROC glVertexAttribP1ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
extern PFNGLUXVERTEXATTRIBP1UIVPROC glVertexAttribP1uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
extern PFNGLUXVERTEXATTRIBP2UIPROC glVertexAttribP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
extern PFNGLUXVERTEXATTRIBP2UIVPROC glVertexAttribP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
extern PFNGLUXVERTEXATTRIBP3UIPROC glVertexAttribP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
extern PFNGLUXVERTEXATTRIBP3UIVPROC glVertexAttribP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
extern PFNGLUXVERTEXATTRIBP4UIPROC glVertexAttribP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
extern PFNGLUXVERTEXATTRIBP4UIVPROC glVertexAttribP4uiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:42:05 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__
#define __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__

GLUX_NEW_PLUGIN(GL_ARB_vertex_type_2_10_10_10_rev);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INT_2_10_10_10_REV
#  define GL_INT_2_10_10_10_REV 0x8D9F
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexP2ui
typedef void (APIENTRYP PFNGLUXVERTEXP2UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXP2UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
typedef void (APIENTRYP PFNGLUXVERTEXP3UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXP3UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
typedef void (APIENTRYP PFNGLUXVERTEXP4UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXP4UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
typedef void (APIENTRYP PFNGLUXNORMALP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
typedef void (APIENTRYP PFNGLUXNORMALP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
typedef void (APIENTRYP PFNGLUXCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
typedef void (APIENTRYP PFNGLUXCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
typedef void (APIENTRYP PFNGLUXCOLORP4UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
typedef void (APIENTRYP PFNGLUXCOLORP4UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexP2ui
extern PFNGLUXVERTEXP2UIPROC glVertexP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
extern PFNGLUXVERTEXP2UIVPROC glVertexP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
extern PFNGLUXVERTEXP3UIPROC glVertexP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
extern PFNGLUXVERTEXP3UIVPROC glVertexP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
extern PFNGLUXVERTEXP4UIPROC glVertexP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
extern PFNGLUXVERTEXP4UIVPROC glVertexP4uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
extern PFNGLUXTEXCOORDP1UIPROC glTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
extern PFNGLUXTEXCOORDP1UIVPROC glTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
extern PFNGLUXTEXCOORDP2UIPROC glTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
extern PFNGLUXTEXCOORDP2UIVPROC glTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
extern PFNGLUXTEXCOORDP3UIPROC glTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
extern PFNGLUXTEXCOORDP3UIVPROC glTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
extern PFNGLUXTEXCOORDP4UIPROC glTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
extern PFNGLUXTEXCOORDP4UIVPROC glTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
extern PFNGLUXMULTITEXCOORDP1UIPROC glMultiTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
extern PFNGLUXMULTITEXCOORDP1UIVPROC glMultiTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
extern PFNGLUXMULTITEXCOORDP2UIPROC glMultiTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
extern PFNGLUXMULTITEXCOORDP2UIVPROC glMultiTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
extern PFNGLUXMULTITEXCOORDP3UIPROC glMultiTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
extern PFNGLUXMULTITEXCOORDP3UIVPROC glMultiTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
extern PFNGLUXMULTITEXCOORDP4UIPROC glMultiTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
extern PFNGLUXMULTITEXCOORDP4UIVPROC glMultiTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
extern PFNGLUXNORMALP3UIPROC glNormalP3ui;
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
extern PFNGLUXNORMALP3UIVPROC glNormalP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
extern PFNGLUXCOLORP3UIPROC glColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
extern PFNGLUXCOLORP3UIVPROC glColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
extern PFNGLUXCOLORP4UIPROC glColorP4ui;
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
extern PFNGLUXCOLORP4UIVPROC glColorP4uiv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
extern PFNGLUXSECONDARYCOLORP3UIPROC glSecondaryColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
extern PFNGLUXSECONDARYCOLORP3UIVPROC glSecondaryColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
extern PFNGLUXVERTEXATTRIBP1UIPROC glVertexAttribP1ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
extern PFNGLUXVERTEXATTRIBP1UIVPROC glVertexAttribP1uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
extern PFNGLUXVERTEXATTRIBP2UIPROC glVertexAttribP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
extern PFNGLUXVERTEXATTRIBP2UIVPROC glVertexAttribP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
extern PFNGLUXVERTEXATTRIBP3UIPROC glVertexAttribP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
extern PFNGLUXVERTEXATTRIBP3UIVPROC glVertexAttribP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
extern PFNGLUXVERTEXATTRIBP4UIPROC glVertexAttribP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
extern PFNGLUXVERTEXATTRIBP4UIVPROC glVertexAttribP4uiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:44 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__
#define __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__

GLUX_NEW_PLUGIN(GL_ARB_vertex_type_2_10_10_10_rev);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INT_2_10_10_10_REV
#  define GL_INT_2_10_10_10_REV 0x8D9F
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexP2ui
typedef void (APIENTRYP PFNGLUXVERTEXP2UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXP2UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
typedef void (APIENTRYP PFNGLUXVERTEXP3UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXP3UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
typedef void (APIENTRYP PFNGLUXVERTEXP4UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXP4UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
typedef void (APIENTRYP PFNGLUXNORMALP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
typedef void (APIENTRYP PFNGLUXNORMALP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
typedef void (APIENTRYP PFNGLUXCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
typedef void (APIENTRYP PFNGLUXCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
typedef void (APIENTRYP PFNGLUXCOLORP4UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
typedef void (APIENTRYP PFNGLUXCOLORP4UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexP2ui
extern PFNGLUXVERTEXP2UIPROC glVertexP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
extern PFNGLUXVERTEXP2UIVPROC glVertexP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
extern PFNGLUXVERTEXP3UIPROC glVertexP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
extern PFNGLUXVERTEXP3UIVPROC glVertexP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
extern PFNGLUXVERTEXP4UIPROC glVertexP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
extern PFNGLUXVERTEXP4UIVPROC glVertexP4uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
extern PFNGLUXTEXCOORDP1UIPROC glTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
extern PFNGLUXTEXCOORDP1UIVPROC glTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
extern PFNGLUXTEXCOORDP2UIPROC glTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
extern PFNGLUXTEXCOORDP2UIVPROC glTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
extern PFNGLUXTEXCOORDP3UIPROC glTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
extern PFNGLUXTEXCOORDP3UIVPROC glTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
extern PFNGLUXTEXCOORDP4UIPROC glTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
extern PFNGLUXTEXCOORDP4UIVPROC glTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
extern PFNGLUXMULTITEXCOORDP1UIPROC glMultiTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
extern PFNGLUXMULTITEXCOORDP1UIVPROC glMultiTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
extern PFNGLUXMULTITEXCOORDP2UIPROC glMultiTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
extern PFNGLUXMULTITEXCOORDP2UIVPROC glMultiTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
extern PFNGLUXMULTITEXCOORDP3UIPROC glMultiTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
extern PFNGLUXMULTITEXCOORDP3UIVPROC glMultiTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
extern PFNGLUXMULTITEXCOORDP4UIPROC glMultiTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
extern PFNGLUXMULTITEXCOORDP4UIVPROC glMultiTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
extern PFNGLUXNORMALP3UIPROC glNormalP3ui;
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
extern PFNGLUXNORMALP3UIVPROC glNormalP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
extern PFNGLUXCOLORP3UIPROC glColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
extern PFNGLUXCOLORP3UIVPROC glColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
extern PFNGLUXCOLORP4UIPROC glColorP4ui;
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
extern PFNGLUXCOLORP4UIVPROC glColorP4uiv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
extern PFNGLUXSECONDARYCOLORP3UIPROC glSecondaryColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
extern PFNGLUXSECONDARYCOLORP3UIVPROC glSecondaryColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
extern PFNGLUXVERTEXATTRIBP1UIPROC glVertexAttribP1ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
extern PFNGLUXVERTEXATTRIBP1UIVPROC glVertexAttribP1uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
extern PFNGLUXVERTEXATTRIBP2UIPROC glVertexAttribP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
extern PFNGLUXVERTEXATTRIBP2UIVPROC glVertexAttribP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
extern PFNGLUXVERTEXATTRIBP3UIPROC glVertexAttribP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
extern PFNGLUXVERTEXATTRIBP3UIVPROC glVertexAttribP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
extern PFNGLUXVERTEXATTRIBP4UIPROC glVertexAttribP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
extern PFNGLUXVERTEXATTRIBP4UIVPROC glVertexAttribP4uiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:10:03 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__
#define __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__

GLUX_NEW_PLUGIN(GL_ARB_vertex_type_2_10_10_10_rev);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INT_2_10_10_10_REV
#  define GL_INT_2_10_10_10_REV 0x8D9F
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexP2ui
typedef void (APIENTRYP PFNGLUXVERTEXP2UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXP2UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
typedef void (APIENTRYP PFNGLUXVERTEXP3UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXP3UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
typedef void (APIENTRYP PFNGLUXVERTEXP4UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXP4UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
typedef void (APIENTRYP PFNGLUXNORMALP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
typedef void (APIENTRYP PFNGLUXNORMALP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
typedef void (APIENTRYP PFNGLUXCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
typedef void (APIENTRYP PFNGLUXCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
typedef void (APIENTRYP PFNGLUXCOLORP4UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
typedef void (APIENTRYP PFNGLUXCOLORP4UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexP2ui
extern PFNGLUXVERTEXP2UIPROC glVertexP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
extern PFNGLUXVERTEXP2UIVPROC glVertexP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
extern PFNGLUXVERTEXP3UIPROC glVertexP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
extern PFNGLUXVERTEXP3UIVPROC glVertexP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
extern PFNGLUXVERTEXP4UIPROC glVertexP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
extern PFNGLUXVERTEXP4UIVPROC glVertexP4uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
extern PFNGLUXTEXCOORDP1UIPROC glTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
extern PFNGLUXTEXCOORDP1UIVPROC glTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
extern PFNGLUXTEXCOORDP2UIPROC glTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
extern PFNGLUXTEXCOORDP2UIVPROC glTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
extern PFNGLUXTEXCOORDP3UIPROC glTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
extern PFNGLUXTEXCOORDP3UIVPROC glTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
extern PFNGLUXTEXCOORDP4UIPROC glTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
extern PFNGLUXTEXCOORDP4UIVPROC glTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
extern PFNGLUXMULTITEXCOORDP1UIPROC glMultiTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
extern PFNGLUXMULTITEXCOORDP1UIVPROC glMultiTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
extern PFNGLUXMULTITEXCOORDP2UIPROC glMultiTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
extern PFNGLUXMULTITEXCOORDP2UIVPROC glMultiTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
extern PFNGLUXMULTITEXCOORDP3UIPROC glMultiTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
extern PFNGLUXMULTITEXCOORDP3UIVPROC glMultiTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
extern PFNGLUXMULTITEXCOORDP4UIPROC glMultiTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
extern PFNGLUXMULTITEXCOORDP4UIVPROC glMultiTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
extern PFNGLUXNORMALP3UIPROC glNormalP3ui;
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
extern PFNGLUXNORMALP3UIVPROC glNormalP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
extern PFNGLUXCOLORP3UIPROC glColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
extern PFNGLUXCOLORP3UIVPROC glColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
extern PFNGLUXCOLORP4UIPROC glColorP4ui;
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
extern PFNGLUXCOLORP4UIVPROC glColorP4uiv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
extern PFNGLUXSECONDARYCOLORP3UIPROC glSecondaryColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
extern PFNGLUXSECONDARYCOLORP3UIVPROC glSecondaryColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
extern PFNGLUXVERTEXATTRIBP1UIPROC glVertexAttribP1ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
extern PFNGLUXVERTEXATTRIBP1UIVPROC glVertexAttribP1uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
extern PFNGLUXVERTEXATTRIBP2UIPROC glVertexAttribP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
extern PFNGLUXVERTEXATTRIBP2UIVPROC glVertexAttribP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
extern PFNGLUXVERTEXATTRIBP3UIPROC glVertexAttribP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
extern PFNGLUXVERTEXATTRIBP3UIVPROC glVertexAttribP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
extern PFNGLUXVERTEXATTRIBP4UIPROC glVertexAttribP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
extern PFNGLUXVERTEXATTRIBP4UIVPROC glVertexAttribP4uiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:20:04 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__
#define __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__

GLUX_NEW_PLUGIN(GL_ARB_vertex_type_2_10_10_10_rev);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INT_2_10_10_10_REV
#  define GL_INT_2_10_10_10_REV 0x8D9F
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexP2ui
typedef void (APIENTRYP PFNGLUXVERTEXP2UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXP2UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
typedef void (APIENTRYP PFNGLUXVERTEXP3UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXP3UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
typedef void (APIENTRYP PFNGLUXVERTEXP4UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXP4UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
typedef void (APIENTRYP PFNGLUXNORMALP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
typedef void (APIENTRYP PFNGLUXNORMALP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
typedef void (APIENTRYP PFNGLUXCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
typedef void (APIENTRYP PFNGLUXCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
typedef void (APIENTRYP PFNGLUXCOLORP4UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
typedef void (APIENTRYP PFNGLUXCOLORP4UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexP2ui
extern PFNGLUXVERTEXP2UIPROC glVertexP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
extern PFNGLUXVERTEXP2UIVPROC glVertexP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
extern PFNGLUXVERTEXP3UIPROC glVertexP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
extern PFNGLUXVERTEXP3UIVPROC glVertexP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
extern PFNGLUXVERTEXP4UIPROC glVertexP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
extern PFNGLUXVERTEXP4UIVPROC glVertexP4uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
extern PFNGLUXTEXCOORDP1UIPROC glTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
extern PFNGLUXTEXCOORDP1UIVPROC glTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
extern PFNGLUXTEXCOORDP2UIPROC glTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
extern PFNGLUXTEXCOORDP2UIVPROC glTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
extern PFNGLUXTEXCOORDP3UIPROC glTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
extern PFNGLUXTEXCOORDP3UIVPROC glTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
extern PFNGLUXTEXCOORDP4UIPROC glTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
extern PFNGLUXTEXCOORDP4UIVPROC glTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
extern PFNGLUXMULTITEXCOORDP1UIPROC glMultiTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
extern PFNGLUXMULTITEXCOORDP1UIVPROC glMultiTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
extern PFNGLUXMULTITEXCOORDP2UIPROC glMultiTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
extern PFNGLUXMULTITEXCOORDP2UIVPROC glMultiTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
extern PFNGLUXMULTITEXCOORDP3UIPROC glMultiTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
extern PFNGLUXMULTITEXCOORDP3UIVPROC glMultiTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
extern PFNGLUXMULTITEXCOORDP4UIPROC glMultiTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
extern PFNGLUXMULTITEXCOORDP4UIVPROC glMultiTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
extern PFNGLUXNORMALP3UIPROC glNormalP3ui;
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
extern PFNGLUXNORMALP3UIVPROC glNormalP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
extern PFNGLUXCOLORP3UIPROC glColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
extern PFNGLUXCOLORP3UIVPROC glColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
extern PFNGLUXCOLORP4UIPROC glColorP4ui;
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
extern PFNGLUXCOLORP4UIVPROC glColorP4uiv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
extern PFNGLUXSECONDARYCOLORP3UIPROC glSecondaryColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
extern PFNGLUXSECONDARYCOLORP3UIVPROC glSecondaryColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
extern PFNGLUXVERTEXATTRIBP1UIPROC glVertexAttribP1ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
extern PFNGLUXVERTEXATTRIBP1UIVPROC glVertexAttribP1uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
extern PFNGLUXVERTEXATTRIBP2UIPROC glVertexAttribP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
extern PFNGLUXVERTEXATTRIBP2UIVPROC glVertexAttribP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
extern PFNGLUXVERTEXATTRIBP3UIPROC glVertexAttribP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
extern PFNGLUXVERTEXATTRIBP3UIVPROC glVertexAttribP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
extern PFNGLUXVERTEXATTRIBP4UIPROC glVertexAttribP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
extern PFNGLUXVERTEXATTRIBP4UIVPROC glVertexAttribP4uiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:43:05 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__
#define __GLUX_GL_ARB_vertex_type_2_10_10_10_rev__

GLUX_NEW_PLUGIN(GL_ARB_vertex_type_2_10_10_10_rev)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INT_2_10_10_10_REV
#  define GL_INT_2_10_10_10_REV 0x8D9F
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexP2ui
typedef void (APIENTRYP PFNGLUXVERTEXP2UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXP2UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
typedef void (APIENTRYP PFNGLUXVERTEXP3UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXP3UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
typedef void (APIENTRYP PFNGLUXVERTEXP4UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXP4UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
typedef void (APIENTRYP PFNGLUXNORMALP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
typedef void (APIENTRYP PFNGLUXNORMALP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
typedef void (APIENTRYP PFNGLUXCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
typedef void (APIENTRYP PFNGLUXCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
typedef void (APIENTRYP PFNGLUXCOLORP4UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
typedef void (APIENTRYP PFNGLUXCOLORP4UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexP2ui
extern PFNGLUXVERTEXP2UIPROC glVertexP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
extern PFNGLUXVERTEXP2UIVPROC glVertexP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
extern PFNGLUXVERTEXP3UIPROC glVertexP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
extern PFNGLUXVERTEXP3UIVPROC glVertexP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
extern PFNGLUXVERTEXP4UIPROC glVertexP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
extern PFNGLUXVERTEXP4UIVPROC glVertexP4uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
extern PFNGLUXTEXCOORDP1UIPROC glTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
extern PFNGLUXTEXCOORDP1UIVPROC glTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
extern PFNGLUXTEXCOORDP2UIPROC glTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
extern PFNGLUXTEXCOORDP2UIVPROC glTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
extern PFNGLUXTEXCOORDP3UIPROC glTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
extern PFNGLUXTEXCOORDP3UIVPROC glTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
extern PFNGLUXTEXCOORDP4UIPROC glTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
extern PFNGLUXTEXCOORDP4UIVPROC glTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
extern PFNGLUXMULTITEXCOORDP1UIPROC glMultiTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
extern PFNGLUXMULTITEXCOORDP1UIVPROC glMultiTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
extern PFNGLUXMULTITEXCOORDP2UIPROC glMultiTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
extern PFNGLUXMULTITEXCOORDP2UIVPROC glMultiTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
extern PFNGLUXMULTITEXCOORDP3UIPROC glMultiTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
extern PFNGLUXMULTITEXCOORDP3UIVPROC glMultiTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
extern PFNGLUXMULTITEXCOORDP4UIPROC glMultiTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
extern PFNGLUXMULTITEXCOORDP4UIVPROC glMultiTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
extern PFNGLUXNORMALP3UIPROC glNormalP3ui;
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
extern PFNGLUXNORMALP3UIVPROC glNormalP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
extern PFNGLUXCOLORP3UIPROC glColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
extern PFNGLUXCOLORP3UIVPROC glColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
extern PFNGLUXCOLORP4UIPROC glColorP4ui;
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
extern PFNGLUXCOLORP4UIVPROC glColorP4uiv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
extern PFNGLUXSECONDARYCOLORP3UIPROC glSecondaryColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
extern PFNGLUXSECONDARYCOLORP3UIVPROC glSecondaryColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
extern PFNGLUXVERTEXATTRIBP1UIPROC glVertexAttribP1ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
extern PFNGLUXVERTEXATTRIBP1UIVPROC glVertexAttribP1uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
extern PFNGLUXVERTEXATTRIBP2UIPROC glVertexAttribP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
extern PFNGLUXVERTEXATTRIBP2UIVPROC glVertexAttribP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
extern PFNGLUXVERTEXATTRIBP3UIPROC glVertexAttribP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
extern PFNGLUXVERTEXATTRIBP3UIVPROC glVertexAttribP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
extern PFNGLUXVERTEXATTRIBP4UIPROC glVertexAttribP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
extern PFNGLUXVERTEXATTRIBP4UIVPROC glVertexAttribP4uiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
