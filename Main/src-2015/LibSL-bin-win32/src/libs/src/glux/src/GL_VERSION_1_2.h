
// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:33 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_VERSION_1_2__
#define __GLUX_GL_VERSION_1_2__

GLUX_NEW_PLUGIN(GL_VERSION_1_2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_UNSIGNED_BYTE_3_3_2
#  define GL_UNSIGNED_BYTE_3_3_2 0x8032
#endif
#ifndef GL_UNSIGNED_SHORT_4_4_4_4
#  define GL_UNSIGNED_SHORT_4_4_4_4 0x8033
#endif
#ifndef GL_UNSIGNED_SHORT_5_5_5_1
#  define GL_UNSIGNED_SHORT_5_5_5_1 0x8034
#endif
#ifndef GL_UNSIGNED_INT_8_8_8_8
#  define GL_UNSIGNED_INT_8_8_8_8 0x8035
#endif
#ifndef GL_UNSIGNED_INT_10_10_10_2
#  define GL_UNSIGNED_INT_10_10_10_2 0x8036
#endif
#ifndef GL_TEXTURE_BINDING_3D
#  define GL_TEXTURE_BINDING_3D 0x806A
#endif
#ifndef GL_PACK_SKIP_IMAGES
#  define GL_PACK_SKIP_IMAGES 0x806B
#endif
#ifndef GL_PACK_IMAGE_HEIGHT
#  define GL_PACK_IMAGE_HEIGHT 0x806C
#endif
#ifndef GL_UNPACK_SKIP_IMAGES
#  define GL_UNPACK_SKIP_IMAGES 0x806D
#endif
#ifndef GL_UNPACK_IMAGE_HEIGHT
#  define GL_UNPACK_IMAGE_HEIGHT 0x806E
#endif
#ifndef GL_TEXTURE_3D
#  define GL_TEXTURE_3D 0x806F
#endif
#ifndef GL_PROXY_TEXTURE_3D
#  define GL_PROXY_TEXTURE_3D 0x8070
#endif
#ifndef GL_TEXTURE_DEPTH
#  define GL_TEXTURE_DEPTH 0x8071
#endif
#ifndef GL_TEXTURE_WRAP_R
#  define GL_TEXTURE_WRAP_R 0x8072
#endif
#ifndef GL_MAX_3D_TEXTURE_SIZE
#  define GL_MAX_3D_TEXTURE_SIZE 0x8073
#endif
#ifndef GL_UNSIGNED_BYTE_2_3_3_REV
#  define GL_UNSIGNED_BYTE_2_3_3_REV 0x8362
#endif
#ifndef GL_UNSIGNED_SHORT_5_6_5
#  define GL_UNSIGNED_SHORT_5_6_5 0x8363
#endif
#ifndef GL_UNSIGNED_SHORT_5_6_5_REV
#  define GL_UNSIGNED_SHORT_5_6_5_REV 0x8364
#endif
#ifndef GL_UNSIGNED_SHORT_4_4_4_4_REV
#  define GL_UNSIGNED_SHORT_4_4_4_4_REV 0x8365
#endif
#ifndef GL_UNSIGNED_SHORT_1_5_5_5_REV
#  define GL_UNSIGNED_SHORT_1_5_5_5_REV 0x8366
#endif
#ifndef GL_UNSIGNED_INT_8_8_8_8_REV
#  define GL_UNSIGNED_INT_8_8_8_8_REV 0x8367
#endif
#ifndef GL_UNSIGNED_INT_2_10_10_10_REV
#  define GL_UNSIGNED_INT_2_10_10_10_REV 0x8368
#endif
#ifndef GL_BGR
#  define GL_BGR 0x80E0
#endif
#ifndef GL_BGRA
#  define GL_BGRA 0x80E1
#endif
#ifndef GL_MAX_ELEMENTS_VERTICES
#  define GL_MAX_ELEMENTS_VERTICES 0x80E8
#endif
#ifndef GL_MAX_ELEMENTS_INDICES
#  define GL_MAX_ELEMENTS_INDICES 0x80E9
#endif
#ifndef GL_CLAMP_TO_EDGE
#  define GL_CLAMP_TO_EDGE 0x812F
#endif
#ifndef GL_TEXTURE_MIN_LOD
#  define GL_TEXTURE_MIN_LOD 0x813A
#endif
#ifndef GL_TEXTURE_MAX_LOD
#  define GL_TEXTURE_MAX_LOD 0x813B
#endif
#ifndef GL_TEXTURE_BASE_LEVEL
#  define GL_TEXTURE_BASE_LEVEL 0x813C
#endif
#ifndef GL_TEXTURE_MAX_LEVEL
#  define GL_TEXTURE_MAX_LEVEL 0x813D
#endif
#ifndef GL_SMOOTH_POINT_SIZE_RANGE
#  define GL_SMOOTH_POINT_SIZE_RANGE 0x0B12
#endif
#ifndef GL_SMOOTH_POINT_SIZE_GRANULARITY
#  define GL_SMOOTH_POINT_SIZE_GRANULARITY 0x0B13
#endif
#ifndef GL_SMOOTH_LINE_WIDTH_RANGE
#  define GL_SMOOTH_LINE_WIDTH_RANGE 0x0B22
#endif
#ifndef GL_SMOOTH_LINE_WIDTH_GRANULARITY
#  define GL_SMOOTH_LINE_WIDTH_GRANULARITY 0x0B23
#endif
#ifndef GL_ALIASED_LINE_WIDTH_RANGE
#  define GL_ALIASED_LINE_WIDTH_RANGE 0x846E
#endif
#ifndef GL_RESCALE_NORMAL
#  define GL_RESCALE_NORMAL 0x803A
#endif
#ifndef GL_LIGHT_MODEL_COLOR_CONTROL
#  define GL_LIGHT_MODEL_COLOR_CONTROL 0x81F8
#endif
#ifndef GL_SINGLE_COLOR
#  define GL_SINGLE_COLOR 0x81F9
#endif
#ifndef GL_SEPARATE_SPECULAR_COLOR
#  define GL_SEPARATE_SPECULAR_COLOR 0x81FA
#endif
#ifndef GL_ALIASED_POINT_SIZE_RANGE
#  define GL_ALIASED_POINT_SIZE_RANGE 0x846D
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBlendColor
typedef void (APIENTRYP PFNGLUXBLENDCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
#endif
#ifndef __GLUX__GLFCT_glBlendEquation
typedef void (APIENTRYP PFNGLUXBLENDEQUATIONPROC) (GLenum mode);
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElements
typedef void (APIENTRYP PFNGLUXDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);
#endif
#ifndef __GLUX__GLFCT_glTexImage3D
typedef void (APIENTRYP PFNGLUXTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
#endif
#ifndef __GLUX__GLFCT_glTexSubImage3D
typedef void (APIENTRYP PFNGLUXTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);
#endif
#ifndef __GLUX__GLFCT_glCopyTexSubImage3D
typedef void (APIENTRYP PFNGLUXCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glColorTable
typedef void (APIENTRYP PFNGLUXCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);
#endif
#ifndef __GLUX__GLFCT_glColorTableParameterfv
typedef void (APIENTRYP PFNGLUXCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glColorTableParameteriv
typedef void (APIENTRYP PFNGLUXCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glCopyColorTable
typedef void (APIENTRYP PFNGLUXCOPYCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
#endif
#ifndef __GLUX__GLFCT_glGetColorTable
typedef void (APIENTRYP PFNGLUXGETCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, GLvoid *table);
#endif
#ifndef __GLUX__GLFCT_glGetColorTableParameterfv
typedef void (APIENTRYP PFNGLUXGETCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetColorTableParameteriv
typedef void (APIENTRYP PFNGLUXGETCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glColorSubTable
typedef void (APIENTRYP PFNGLUXCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCopyColorSubTable
typedef void (APIENTRYP PFNGLUXCOPYCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
#endif
#ifndef __GLUX__GLFCT_glConvolutionFilter1D
typedef void (APIENTRYP PFNGLUXCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glConvolutionFilter2D
typedef void (APIENTRYP PFNGLUXCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameterf
typedef void (APIENTRYP PFNGLUXCONVOLUTIONPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat params);
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameterfv
typedef void (APIENTRYP PFNGLUXCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameteri
typedef void (APIENTRYP PFNGLUXCONVOLUTIONPARAMETERIPROC) (GLenum target, GLenum pname, GLint params);
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameteriv
typedef void (APIENTRYP PFNGLUXCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glCopyConvolutionFilter1D
typedef void (APIENTRYP PFNGLUXCOPYCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
#endif
#ifndef __GLUX__GLFCT_glCopyConvolutionFilter2D
typedef void (APIENTRYP PFNGLUXCOPYCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetConvolutionFilter
typedef void (APIENTRYP PFNGLUXGETCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glGetConvolutionParameterfv
typedef void (APIENTRYP PFNGLUXGETCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetConvolutionParameteriv
typedef void (APIENTRYP PFNGLUXGETCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetSeparableFilter
typedef void (APIENTRYP PFNGLUXGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);
#endif
#ifndef __GLUX__GLFCT_glSeparableFilter2D
typedef void (APIENTRYP PFNGLUXSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);
#endif
#ifndef __GLUX__GLFCT_glGetHistogram
typedef void (APIENTRYP PFNGLUXGETHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetHistogramParameterfv
typedef void (APIENTRYP PFNGLUXGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetHistogramParameteriv
typedef void (APIENTRYP PFNGLUXGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetMinmax
typedef void (APIENTRYP PFNGLUXGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetMinmaxParameterfv
typedef void (APIENTRYP PFNGLUXGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetMinmaxParameteriv
typedef void (APIENTRYP PFNGLUXGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glHistogram
typedef void (APIENTRYP PFNGLUXHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
#endif
#ifndef __GLUX__GLFCT_glMinmax
typedef void (APIENTRYP PFNGLUXMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sink);
#endif
#ifndef __GLUX__GLFCT_glResetHistogram
typedef void (APIENTRYP PFNGLUXRESETHISTOGRAMPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glResetMinmax
typedef void (APIENTRYP PFNGLUXRESETMINMAXPROC) (GLenum target);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBlendColor
extern PFNGLUXBLENDCOLORPROC glBlendColor;
#endif
#ifndef __GLUX__GLFCT_glBlendEquation
extern PFNGLUXBLENDEQUATIONPROC glBlendEquation;
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElements
extern PFNGLUXDRAWRANGEELEMENTSPROC glDrawRangeElements;
#endif
#ifndef __GLUX__GLFCT_glTexImage3D
extern PFNGLUXTEXIMAGE3DPROC glTexImage3D;
#endif
#ifndef __GLUX__GLFCT_glTexSubImage3D
extern PFNGLUXTEXSUBIMAGE3DPROC glTexSubImage3D;
#endif
#ifndef __GLUX__GLFCT_glCopyTexSubImage3D
extern PFNGLUXCOPYTEXSUBIMAGE3DPROC glCopyTexSubImage3D;
#endif
#ifndef __GLUX__GLFCT_glColorTable
extern PFNGLUXCOLORTABLEPROC glColorTable;
#endif
#ifndef __GLUX__GLFCT_glColorTableParameterfv
extern PFNGLUXCOLORTABLEPARAMETERFVPROC glColorTableParameterfv;
#endif
#ifndef __GLUX__GLFCT_glColorTableParameteriv
extern PFNGLUXCOLORTABLEPARAMETERIVPROC glColorTableParameteriv;
#endif
#ifndef __GLUX__GLFCT_glCopyColorTable
extern PFNGLUXCOPYCOLORTABLEPROC glCopyColorTable;
#endif
#ifndef __GLUX__GLFCT_glGetColorTable
extern PFNGLUXGETCOLORTABLEPROC glGetColorTable;
#endif
#ifndef __GLUX__GLFCT_glGetColorTableParameterfv
extern PFNGLUXGETCOLORTABLEPARAMETERFVPROC glGetColorTableParameterfv;
#endif
#ifndef __GLUX__GLFCT_glGetColorTableParameteriv
extern PFNGLUXGETCOLORTABLEPARAMETERIVPROC glGetColorTableParameteriv;
#endif
#ifndef __GLUX__GLFCT_glColorSubTable
extern PFNGLUXCOLORSUBTABLEPROC glColorSubTable;
#endif
#ifndef __GLUX__GLFCT_glCopyColorSubTable
extern PFNGLUXCOPYCOLORSUBTABLEPROC glCopyColorSubTable;
#endif
#ifndef __GLUX__GLFCT_glConvolutionFilter1D
extern PFNGLUXCONVOLUTIONFILTER1DPROC glConvolutionFilter1D;
#endif
#ifndef __GLUX__GLFCT_glConvolutionFilter2D
extern PFNGLUXCONVOLUTIONFILTER2DPROC glConvolutionFilter2D;
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameterf
extern PFNGLUXCONVOLUTIONPARAMETERFPROC glConvolutionParameterf;
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameterfv
extern PFNGLUXCONVOLUTIONPARAMETERFVPROC glConvolutionParameterfv;
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameteri
extern PFNGLUXCONVOLUTIONPARAMETERIPROC glConvolutionParameteri;
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameteriv
extern PFNGLUXCONVOLUTIONPARAMETERIVPROC glConvolutionParameteriv;
#endif
#ifndef __GLUX__GLFCT_glCopyConvolutionFilter1D
extern PFNGLUXCOPYCONVOLUTIONFILTER1DPROC glCopyConvolutionFilter1D;
#endif
#ifndef __GLUX__GLFCT_glCopyConvolutionFilter2D
extern PFNGLUXCOPYCONVOLUTIONFILTER2DPROC glCopyConvolutionFilter2D;
#endif
#ifndef __GLUX__GLFCT_glGetConvolutionFilter
extern PFNGLUXGETCONVOLUTIONFILTERPROC glGetConvolutionFilter;
#endif
#ifndef __GLUX__GLFCT_glGetConvolutionParameterfv
extern PFNGLUXGETCONVOLUTIONPARAMETERFVPROC glGetConvolutionParameterfv;
#endif
#ifndef __GLUX__GLFCT_glGetConvolutionParameteriv
extern PFNGLUXGETCONVOLUTIONPARAMETERIVPROC glGetConvolutionParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGetSeparableFilter
extern PFNGLUXGETSEPARABLEFILTERPROC glGetSeparableFilter;
#endif
#ifndef __GLUX__GLFCT_glSeparableFilter2D
extern PFNGLUXSEPARABLEFILTER2DPROC glSeparableFilter2D;
#endif
#ifndef __GLUX__GLFCT_glGetHistogram
extern PFNGLUXGETHISTOGRAMPROC glGetHistogram;
#endif
#ifndef __GLUX__GLFCT_glGetHistogramParameterfv
extern PFNGLUXGETHISTOGRAMPARAMETERFVPROC glGetHistogramParameterfv;
#endif
#ifndef __GLUX__GLFCT_glGetHistogramParameteriv
extern PFNGLUXGETHISTOGRAMPARAMETERIVPROC glGetHistogramParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGetMinmax
extern PFNGLUXGETMINMAXPROC glGetMinmax;
#endif
#ifndef __GLUX__GLFCT_glGetMinmaxParameterfv
extern PFNGLUXGETMINMAXPARAMETERFVPROC glGetMinmaxParameterfv;
#endif
#ifndef __GLUX__GLFCT_glGetMinmaxParameteriv
extern PFNGLUXGETMINMAXPARAMETERIVPROC glGetMinmaxParameteriv;
#endif
#ifndef __GLUX__GLFCT_glHistogram
extern PFNGLUXHISTOGRAMPROC glHistogram;
#endif
#ifndef __GLUX__GLFCT_glMinmax
extern PFNGLUXMINMAXPROC glMinmax;
#endif
#ifndef __GLUX__GLFCT_glResetHistogram
extern PFNGLUXRESETHISTOGRAMPROC glResetHistogram;
#endif
#ifndef __GLUX__GLFCT_glResetMinmax
extern PFNGLUXRESETMINMAXPROC glResetMinmax;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:09:55 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_VERSION_1_2__
#define __GLUX_GL_VERSION_1_2__

GLUX_NEW_PLUGIN(GL_VERSION_1_2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_UNSIGNED_BYTE_3_3_2
#  define GL_UNSIGNED_BYTE_3_3_2 0x8032
#endif
#ifndef GL_UNSIGNED_SHORT_4_4_4_4
#  define GL_UNSIGNED_SHORT_4_4_4_4 0x8033
#endif
#ifndef GL_UNSIGNED_SHORT_5_5_5_1
#  define GL_UNSIGNED_SHORT_5_5_5_1 0x8034
#endif
#ifndef GL_UNSIGNED_INT_8_8_8_8
#  define GL_UNSIGNED_INT_8_8_8_8 0x8035
#endif
#ifndef GL_UNSIGNED_INT_10_10_10_2
#  define GL_UNSIGNED_INT_10_10_10_2 0x8036
#endif
#ifndef GL_TEXTURE_BINDING_3D
#  define GL_TEXTURE_BINDING_3D 0x806A
#endif
#ifndef GL_PACK_SKIP_IMAGES
#  define GL_PACK_SKIP_IMAGES 0x806B
#endif
#ifndef GL_PACK_IMAGE_HEIGHT
#  define GL_PACK_IMAGE_HEIGHT 0x806C
#endif
#ifndef GL_UNPACK_SKIP_IMAGES
#  define GL_UNPACK_SKIP_IMAGES 0x806D
#endif
#ifndef GL_UNPACK_IMAGE_HEIGHT
#  define GL_UNPACK_IMAGE_HEIGHT 0x806E
#endif
#ifndef GL_TEXTURE_3D
#  define GL_TEXTURE_3D 0x806F
#endif
#ifndef GL_PROXY_TEXTURE_3D
#  define GL_PROXY_TEXTURE_3D 0x8070
#endif
#ifndef GL_TEXTURE_DEPTH
#  define GL_TEXTURE_DEPTH 0x8071
#endif
#ifndef GL_TEXTURE_WRAP_R
#  define GL_TEXTURE_WRAP_R 0x8072
#endif
#ifndef GL_MAX_3D_TEXTURE_SIZE
#  define GL_MAX_3D_TEXTURE_SIZE 0x8073
#endif
#ifndef GL_UNSIGNED_BYTE_2_3_3_REV
#  define GL_UNSIGNED_BYTE_2_3_3_REV 0x8362
#endif
#ifndef GL_UNSIGNED_SHORT_5_6_5
#  define GL_UNSIGNED_SHORT_5_6_5 0x8363
#endif
#ifndef GL_UNSIGNED_SHORT_5_6_5_REV
#  define GL_UNSIGNED_SHORT_5_6_5_REV 0x8364
#endif
#ifndef GL_UNSIGNED_SHORT_4_4_4_4_REV
#  define GL_UNSIGNED_SHORT_4_4_4_4_REV 0x8365
#endif
#ifndef GL_UNSIGNED_SHORT_1_5_5_5_REV
#  define GL_UNSIGNED_SHORT_1_5_5_5_REV 0x8366
#endif
#ifndef GL_UNSIGNED_INT_8_8_8_8_REV
#  define GL_UNSIGNED_INT_8_8_8_8_REV 0x8367
#endif
#ifndef GL_UNSIGNED_INT_2_10_10_10_REV
#  define GL_UNSIGNED_INT_2_10_10_10_REV 0x8368
#endif
#ifndef GL_BGR
#  define GL_BGR 0x80E0
#endif
#ifndef GL_BGRA
#  define GL_BGRA 0x80E1
#endif
#ifndef GL_MAX_ELEMENTS_VERTICES
#  define GL_MAX_ELEMENTS_VERTICES 0x80E8
#endif
#ifndef GL_MAX_ELEMENTS_INDICES
#  define GL_MAX_ELEMENTS_INDICES 0x80E9
#endif
#ifndef GL_CLAMP_TO_EDGE
#  define GL_CLAMP_TO_EDGE 0x812F
#endif
#ifndef GL_TEXTURE_MIN_LOD
#  define GL_TEXTURE_MIN_LOD 0x813A
#endif
#ifndef GL_TEXTURE_MAX_LOD
#  define GL_TEXTURE_MAX_LOD 0x813B
#endif
#ifndef GL_TEXTURE_BASE_LEVEL
#  define GL_TEXTURE_BASE_LEVEL 0x813C
#endif
#ifndef GL_TEXTURE_MAX_LEVEL
#  define GL_TEXTURE_MAX_LEVEL 0x813D
#endif
#ifndef GL_SMOOTH_POINT_SIZE_RANGE
#  define GL_SMOOTH_POINT_SIZE_RANGE 0x0B12
#endif
#ifndef GL_SMOOTH_POINT_SIZE_GRANULARITY
#  define GL_SMOOTH_POINT_SIZE_GRANULARITY 0x0B13
#endif
#ifndef GL_SMOOTH_LINE_WIDTH_RANGE
#  define GL_SMOOTH_LINE_WIDTH_RANGE 0x0B22
#endif
#ifndef GL_SMOOTH_LINE_WIDTH_GRANULARITY
#  define GL_SMOOTH_LINE_WIDTH_GRANULARITY 0x0B23
#endif
#ifndef GL_ALIASED_LINE_WIDTH_RANGE
#  define GL_ALIASED_LINE_WIDTH_RANGE 0x846E
#endif
#ifndef GL_RESCALE_NORMAL
#  define GL_RESCALE_NORMAL 0x803A
#endif
#ifndef GL_LIGHT_MODEL_COLOR_CONTROL
#  define GL_LIGHT_MODEL_COLOR_CONTROL 0x81F8
#endif
#ifndef GL_SINGLE_COLOR
#  define GL_SINGLE_COLOR 0x81F9
#endif
#ifndef GL_SEPARATE_SPECULAR_COLOR
#  define GL_SEPARATE_SPECULAR_COLOR 0x81FA
#endif
#ifndef GL_ALIASED_POINT_SIZE_RANGE
#  define GL_ALIASED_POINT_SIZE_RANGE 0x846D
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBlendColor
typedef void (APIENTRYP PFNGLUXBLENDCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
#endif
#ifndef __GLUX__GLFCT_glBlendEquation
typedef void (APIENTRYP PFNGLUXBLENDEQUATIONPROC) (GLenum mode);
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElements
typedef void (APIENTRYP PFNGLUXDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);
#endif
#ifndef __GLUX__GLFCT_glTexImage3D
typedef void (APIENTRYP PFNGLUXTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
#endif
#ifndef __GLUX__GLFCT_glTexSubImage3D
typedef void (APIENTRYP PFNGLUXTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);
#endif
#ifndef __GLUX__GLFCT_glCopyTexSubImage3D
typedef void (APIENTRYP PFNGLUXCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glColorTable
typedef void (APIENTRYP PFNGLUXCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);
#endif
#ifndef __GLUX__GLFCT_glColorTableParameterfv
typedef void (APIENTRYP PFNGLUXCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glColorTableParameteriv
typedef void (APIENTRYP PFNGLUXCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glCopyColorTable
typedef void (APIENTRYP PFNGLUXCOPYCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
#endif
#ifndef __GLUX__GLFCT_glGetColorTable
typedef void (APIENTRYP PFNGLUXGETCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, GLvoid *table);
#endif
#ifndef __GLUX__GLFCT_glGetColorTableParameterfv
typedef void (APIENTRYP PFNGLUXGETCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetColorTableParameteriv
typedef void (APIENTRYP PFNGLUXGETCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glColorSubTable
typedef void (APIENTRYP PFNGLUXCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCopyColorSubTable
typedef void (APIENTRYP PFNGLUXCOPYCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
#endif
#ifndef __GLUX__GLFCT_glConvolutionFilter1D
typedef void (APIENTRYP PFNGLUXCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glConvolutionFilter2D
typedef void (APIENTRYP PFNGLUXCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameterf
typedef void (APIENTRYP PFNGLUXCONVOLUTIONPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat params);
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameterfv
typedef void (APIENTRYP PFNGLUXCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameteri
typedef void (APIENTRYP PFNGLUXCONVOLUTIONPARAMETERIPROC) (GLenum target, GLenum pname, GLint params);
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameteriv
typedef void (APIENTRYP PFNGLUXCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glCopyConvolutionFilter1D
typedef void (APIENTRYP PFNGLUXCOPYCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
#endif
#ifndef __GLUX__GLFCT_glCopyConvolutionFilter2D
typedef void (APIENTRYP PFNGLUXCOPYCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetConvolutionFilter
typedef void (APIENTRYP PFNGLUXGETCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glGetConvolutionParameterfv
typedef void (APIENTRYP PFNGLUXGETCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetConvolutionParameteriv
typedef void (APIENTRYP PFNGLUXGETCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetSeparableFilter
typedef void (APIENTRYP PFNGLUXGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);
#endif
#ifndef __GLUX__GLFCT_glSeparableFilter2D
typedef void (APIENTRYP PFNGLUXSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);
#endif
#ifndef __GLUX__GLFCT_glGetHistogram
typedef void (APIENTRYP PFNGLUXGETHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetHistogramParameterfv
typedef void (APIENTRYP PFNGLUXGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetHistogramParameteriv
typedef void (APIENTRYP PFNGLUXGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetMinmax
typedef void (APIENTRYP PFNGLUXGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetMinmaxParameterfv
typedef void (APIENTRYP PFNGLUXGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetMinmaxParameteriv
typedef void (APIENTRYP PFNGLUXGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glHistogram
typedef void (APIENTRYP PFNGLUXHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
#endif
#ifndef __GLUX__GLFCT_glMinmax
typedef void (APIENTRYP PFNGLUXMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sink);
#endif
#ifndef __GLUX__GLFCT_glResetHistogram
typedef void (APIENTRYP PFNGLUXRESETHISTOGRAMPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glResetMinmax
typedef void (APIENTRYP PFNGLUXRESETMINMAXPROC) (GLenum target);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBlendColor
extern PFNGLUXBLENDCOLORPROC glBlendColor;
#endif
#ifndef __GLUX__GLFCT_glBlendEquation
extern PFNGLUXBLENDEQUATIONPROC glBlendEquation;
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElements
extern PFNGLUXDRAWRANGEELEMENTSPROC glDrawRangeElements;
#endif
#ifndef __GLUX__GLFCT_glTexImage3D
extern PFNGLUXTEXIMAGE3DPROC glTexImage3D;
#endif
#ifndef __GLUX__GLFCT_glTexSubImage3D
extern PFNGLUXTEXSUBIMAGE3DPROC glTexSubImage3D;
#endif
#ifndef __GLUX__GLFCT_glCopyTexSubImage3D
extern PFNGLUXCOPYTEXSUBIMAGE3DPROC glCopyTexSubImage3D;
#endif
#ifndef __GLUX__GLFCT_glColorTable
extern PFNGLUXCOLORTABLEPROC glColorTable;
#endif
#ifndef __GLUX__GLFCT_glColorTableParameterfv
extern PFNGLUXCOLORTABLEPARAMETERFVPROC glColorTableParameterfv;
#endif
#ifndef __GLUX__GLFCT_glColorTableParameteriv
extern PFNGLUXCOLORTABLEPARAMETERIVPROC glColorTableParameteriv;
#endif
#ifndef __GLUX__GLFCT_glCopyColorTable
extern PFNGLUXCOPYCOLORTABLEPROC glCopyColorTable;
#endif
#ifndef __GLUX__GLFCT_glGetColorTable
extern PFNGLUXGETCOLORTABLEPROC glGetColorTable;
#endif
#ifndef __GLUX__GLFCT_glGetColorTableParameterfv
extern PFNGLUXGETCOLORTABLEPARAMETERFVPROC glGetColorTableParameterfv;
#endif
#ifndef __GLUX__GLFCT_glGetColorTableParameteriv
extern PFNGLUXGETCOLORTABLEPARAMETERIVPROC glGetColorTableParameteriv;
#endif
#ifndef __GLUX__GLFCT_glColorSubTable
extern PFNGLUXCOLORSUBTABLEPROC glColorSubTable;
#endif
#ifndef __GLUX__GLFCT_glCopyColorSubTable
extern PFNGLUXCOPYCOLORSUBTABLEPROC glCopyColorSubTable;
#endif
#ifndef __GLUX__GLFCT_glConvolutionFilter1D
extern PFNGLUXCONVOLUTIONFILTER1DPROC glConvolutionFilter1D;
#endif
#ifndef __GLUX__GLFCT_glConvolutionFilter2D
extern PFNGLUXCONVOLUTIONFILTER2DPROC glConvolutionFilter2D;
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameterf
extern PFNGLUXCONVOLUTIONPARAMETERFPROC glConvolutionParameterf;
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameterfv
extern PFNGLUXCONVOLUTIONPARAMETERFVPROC glConvolutionParameterfv;
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameteri
extern PFNGLUXCONVOLUTIONPARAMETERIPROC glConvolutionParameteri;
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameteriv
extern PFNGLUXCONVOLUTIONPARAMETERIVPROC glConvolutionParameteriv;
#endif
#ifndef __GLUX__GLFCT_glCopyConvolutionFilter1D
extern PFNGLUXCOPYCONVOLUTIONFILTER1DPROC glCopyConvolutionFilter1D;
#endif
#ifndef __GLUX__GLFCT_glCopyConvolutionFilter2D
extern PFNGLUXCOPYCONVOLUTIONFILTER2DPROC glCopyConvolutionFilter2D;
#endif
#ifndef __GLUX__GLFCT_glGetConvolutionFilter
extern PFNGLUXGETCONVOLUTIONFILTERPROC glGetConvolutionFilter;
#endif
#ifndef __GLUX__GLFCT_glGetConvolutionParameterfv
extern PFNGLUXGETCONVOLUTIONPARAMETERFVPROC glGetConvolutionParameterfv;
#endif
#ifndef __GLUX__GLFCT_glGetConvolutionParameteriv
extern PFNGLUXGETCONVOLUTIONPARAMETERIVPROC glGetConvolutionParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGetSeparableFilter
extern PFNGLUXGETSEPARABLEFILTERPROC glGetSeparableFilter;
#endif
#ifndef __GLUX__GLFCT_glSeparableFilter2D
extern PFNGLUXSEPARABLEFILTER2DPROC glSeparableFilter2D;
#endif
#ifndef __GLUX__GLFCT_glGetHistogram
extern PFNGLUXGETHISTOGRAMPROC glGetHistogram;
#endif
#ifndef __GLUX__GLFCT_glGetHistogramParameterfv
extern PFNGLUXGETHISTOGRAMPARAMETERFVPROC glGetHistogramParameterfv;
#endif
#ifndef __GLUX__GLFCT_glGetHistogramParameteriv
extern PFNGLUXGETHISTOGRAMPARAMETERIVPROC glGetHistogramParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGetMinmax
extern PFNGLUXGETMINMAXPROC glGetMinmax;
#endif
#ifndef __GLUX__GLFCT_glGetMinmaxParameterfv
extern PFNGLUXGETMINMAXPARAMETERFVPROC glGetMinmaxParameterfv;
#endif
#ifndef __GLUX__GLFCT_glGetMinmaxParameteriv
extern PFNGLUXGETMINMAXPARAMETERIVPROC glGetMinmaxParameteriv;
#endif
#ifndef __GLUX__GLFCT_glHistogram
extern PFNGLUXHISTOGRAMPROC glHistogram;
#endif
#ifndef __GLUX__GLFCT_glMinmax
extern PFNGLUXMINMAXPROC glMinmax;
#endif
#ifndef __GLUX__GLFCT_glResetHistogram
extern PFNGLUXRESETHISTOGRAMPROC glResetHistogram;
#endif
#ifndef __GLUX__GLFCT_glResetMinmax
extern PFNGLUXRESETMINMAXPROC glResetMinmax;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:19:55 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_VERSION_1_2__
#define __GLUX_GL_VERSION_1_2__

GLUX_NEW_PLUGIN(GL_VERSION_1_2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_UNSIGNED_BYTE_3_3_2
#  define GL_UNSIGNED_BYTE_3_3_2 0x8032
#endif
#ifndef GL_UNSIGNED_SHORT_4_4_4_4
#  define GL_UNSIGNED_SHORT_4_4_4_4 0x8033
#endif
#ifndef GL_UNSIGNED_SHORT_5_5_5_1
#  define GL_UNSIGNED_SHORT_5_5_5_1 0x8034
#endif
#ifndef GL_UNSIGNED_INT_8_8_8_8
#  define GL_UNSIGNED_INT_8_8_8_8 0x8035
#endif
#ifndef GL_UNSIGNED_INT_10_10_10_2
#  define GL_UNSIGNED_INT_10_10_10_2 0x8036
#endif
#ifndef GL_TEXTURE_BINDING_3D
#  define GL_TEXTURE_BINDING_3D 0x806A
#endif
#ifndef GL_PACK_SKIP_IMAGES
#  define GL_PACK_SKIP_IMAGES 0x806B
#endif
#ifndef GL_PACK_IMAGE_HEIGHT
#  define GL_PACK_IMAGE_HEIGHT 0x806C
#endif
#ifndef GL_UNPACK_SKIP_IMAGES
#  define GL_UNPACK_SKIP_IMAGES 0x806D
#endif
#ifndef GL_UNPACK_IMAGE_HEIGHT
#  define GL_UNPACK_IMAGE_HEIGHT 0x806E
#endif
#ifndef GL_TEXTURE_3D
#  define GL_TEXTURE_3D 0x806F
#endif
#ifndef GL_PROXY_TEXTURE_3D
#  define GL_PROXY_TEXTURE_3D 0x8070
#endif
#ifndef GL_TEXTURE_DEPTH
#  define GL_TEXTURE_DEPTH 0x8071
#endif
#ifndef GL_TEXTURE_WRAP_R
#  define GL_TEXTURE_WRAP_R 0x8072
#endif
#ifndef GL_MAX_3D_TEXTURE_SIZE
#  define GL_MAX_3D_TEXTURE_SIZE 0x8073
#endif
#ifndef GL_UNSIGNED_BYTE_2_3_3_REV
#  define GL_UNSIGNED_BYTE_2_3_3_REV 0x8362
#endif
#ifndef GL_UNSIGNED_SHORT_5_6_5
#  define GL_UNSIGNED_SHORT_5_6_5 0x8363
#endif
#ifndef GL_UNSIGNED_SHORT_5_6_5_REV
#  define GL_UNSIGNED_SHORT_5_6_5_REV 0x8364
#endif
#ifndef GL_UNSIGNED_SHORT_4_4_4_4_REV
#  define GL_UNSIGNED_SHORT_4_4_4_4_REV 0x8365
#endif
#ifndef GL_UNSIGNED_SHORT_1_5_5_5_REV
#  define GL_UNSIGNED_SHORT_1_5_5_5_REV 0x8366
#endif
#ifndef GL_UNSIGNED_INT_8_8_8_8_REV
#  define GL_UNSIGNED_INT_8_8_8_8_REV 0x8367
#endif
#ifndef GL_UNSIGNED_INT_2_10_10_10_REV
#  define GL_UNSIGNED_INT_2_10_10_10_REV 0x8368
#endif
#ifndef GL_BGR
#  define GL_BGR 0x80E0
#endif
#ifndef GL_BGRA
#  define GL_BGRA 0x80E1
#endif
#ifndef GL_MAX_ELEMENTS_VERTICES
#  define GL_MAX_ELEMENTS_VERTICES 0x80E8
#endif
#ifndef GL_MAX_ELEMENTS_INDICES
#  define GL_MAX_ELEMENTS_INDICES 0x80E9
#endif
#ifndef GL_CLAMP_TO_EDGE
#  define GL_CLAMP_TO_EDGE 0x812F
#endif
#ifndef GL_TEXTURE_MIN_LOD
#  define GL_TEXTURE_MIN_LOD 0x813A
#endif
#ifndef GL_TEXTURE_MAX_LOD
#  define GL_TEXTURE_MAX_LOD 0x813B
#endif
#ifndef GL_TEXTURE_BASE_LEVEL
#  define GL_TEXTURE_BASE_LEVEL 0x813C
#endif
#ifndef GL_TEXTURE_MAX_LEVEL
#  define GL_TEXTURE_MAX_LEVEL 0x813D
#endif
#ifndef GL_SMOOTH_POINT_SIZE_RANGE
#  define GL_SMOOTH_POINT_SIZE_RANGE 0x0B12
#endif
#ifndef GL_SMOOTH_POINT_SIZE_GRANULARITY
#  define GL_SMOOTH_POINT_SIZE_GRANULARITY 0x0B13
#endif
#ifndef GL_SMOOTH_LINE_WIDTH_RANGE
#  define GL_SMOOTH_LINE_WIDTH_RANGE 0x0B22
#endif
#ifndef GL_SMOOTH_LINE_WIDTH_GRANULARITY
#  define GL_SMOOTH_LINE_WIDTH_GRANULARITY 0x0B23
#endif
#ifndef GL_ALIASED_LINE_WIDTH_RANGE
#  define GL_ALIASED_LINE_WIDTH_RANGE 0x846E
#endif
#ifndef GL_RESCALE_NORMAL
#  define GL_RESCALE_NORMAL 0x803A
#endif
#ifndef GL_LIGHT_MODEL_COLOR_CONTROL
#  define GL_LIGHT_MODEL_COLOR_CONTROL 0x81F8
#endif
#ifndef GL_SINGLE_COLOR
#  define GL_SINGLE_COLOR 0x81F9
#endif
#ifndef GL_SEPARATE_SPECULAR_COLOR
#  define GL_SEPARATE_SPECULAR_COLOR 0x81FA
#endif
#ifndef GL_ALIASED_POINT_SIZE_RANGE
#  define GL_ALIASED_POINT_SIZE_RANGE 0x846D
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBlendColor
typedef void (APIENTRYP PFNGLUXBLENDCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
#endif
#ifndef __GLUX__GLFCT_glBlendEquation
typedef void (APIENTRYP PFNGLUXBLENDEQUATIONPROC) (GLenum mode);
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElements
typedef void (APIENTRYP PFNGLUXDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);
#endif
#ifndef __GLUX__GLFCT_glTexImage3D
typedef void (APIENTRYP PFNGLUXTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
#endif
#ifndef __GLUX__GLFCT_glTexSubImage3D
typedef void (APIENTRYP PFNGLUXTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);
#endif
#ifndef __GLUX__GLFCT_glCopyTexSubImage3D
typedef void (APIENTRYP PFNGLUXCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glColorTable
typedef void (APIENTRYP PFNGLUXCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);
#endif
#ifndef __GLUX__GLFCT_glColorTableParameterfv
typedef void (APIENTRYP PFNGLUXCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glColorTableParameteriv
typedef void (APIENTRYP PFNGLUXCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glCopyColorTable
typedef void (APIENTRYP PFNGLUXCOPYCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
#endif
#ifndef __GLUX__GLFCT_glGetColorTable
typedef void (APIENTRYP PFNGLUXGETCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, GLvoid *table);
#endif
#ifndef __GLUX__GLFCT_glGetColorTableParameterfv
typedef void (APIENTRYP PFNGLUXGETCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetColorTableParameteriv
typedef void (APIENTRYP PFNGLUXGETCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glColorSubTable
typedef void (APIENTRYP PFNGLUXCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCopyColorSubTable
typedef void (APIENTRYP PFNGLUXCOPYCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
#endif
#ifndef __GLUX__GLFCT_glConvolutionFilter1D
typedef void (APIENTRYP PFNGLUXCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glConvolutionFilter2D
typedef void (APIENTRYP PFNGLUXCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameterf
typedef void (APIENTRYP PFNGLUXCONVOLUTIONPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat params);
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameterfv
typedef void (APIENTRYP PFNGLUXCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameteri
typedef void (APIENTRYP PFNGLUXCONVOLUTIONPARAMETERIPROC) (GLenum target, GLenum pname, GLint params);
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameteriv
typedef void (APIENTRYP PFNGLUXCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glCopyConvolutionFilter1D
typedef void (APIENTRYP PFNGLUXCOPYCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
#endif
#ifndef __GLUX__GLFCT_glCopyConvolutionFilter2D
typedef void (APIENTRYP PFNGLUXCOPYCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetConvolutionFilter
typedef void (APIENTRYP PFNGLUXGETCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glGetConvolutionParameterfv
typedef void (APIENTRYP PFNGLUXGETCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetConvolutionParameteriv
typedef void (APIENTRYP PFNGLUXGETCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetSeparableFilter
typedef void (APIENTRYP PFNGLUXGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);
#endif
#ifndef __GLUX__GLFCT_glSeparableFilter2D
typedef void (APIENTRYP PFNGLUXSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);
#endif
#ifndef __GLUX__GLFCT_glGetHistogram
typedef void (APIENTRYP PFNGLUXGETHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetHistogramParameterfv
typedef void (APIENTRYP PFNGLUXGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetHistogramParameteriv
typedef void (APIENTRYP PFNGLUXGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetMinmax
typedef void (APIENTRYP PFNGLUXGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetMinmaxParameterfv
typedef void (APIENTRYP PFNGLUXGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetMinmaxParameteriv
typedef void (APIENTRYP PFNGLUXGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glHistogram
typedef void (APIENTRYP PFNGLUXHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
#endif
#ifndef __GLUX__GLFCT_glMinmax
typedef void (APIENTRYP PFNGLUXMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sink);
#endif
#ifndef __GLUX__GLFCT_glResetHistogram
typedef void (APIENTRYP PFNGLUXRESETHISTOGRAMPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glResetMinmax
typedef void (APIENTRYP PFNGLUXRESETMINMAXPROC) (GLenum target);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBlendColor
extern PFNGLUXBLENDCOLORPROC glBlendColor;
#endif
#ifndef __GLUX__GLFCT_glBlendEquation
extern PFNGLUXBLENDEQUATIONPROC glBlendEquation;
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElements
extern PFNGLUXDRAWRANGEELEMENTSPROC glDrawRangeElements;
#endif
#ifndef __GLUX__GLFCT_glTexImage3D
extern PFNGLUXTEXIMAGE3DPROC glTexImage3D;
#endif
#ifndef __GLUX__GLFCT_glTexSubImage3D
extern PFNGLUXTEXSUBIMAGE3DPROC glTexSubImage3D;
#endif
#ifndef __GLUX__GLFCT_glCopyTexSubImage3D
extern PFNGLUXCOPYTEXSUBIMAGE3DPROC glCopyTexSubImage3D;
#endif
#ifndef __GLUX__GLFCT_glColorTable
extern PFNGLUXCOLORTABLEPROC glColorTable;
#endif
#ifndef __GLUX__GLFCT_glColorTableParameterfv
extern PFNGLUXCOLORTABLEPARAMETERFVPROC glColorTableParameterfv;
#endif
#ifndef __GLUX__GLFCT_glColorTableParameteriv
extern PFNGLUXCOLORTABLEPARAMETERIVPROC glColorTableParameteriv;
#endif
#ifndef __GLUX__GLFCT_glCopyColorTable
extern PFNGLUXCOPYCOLORTABLEPROC glCopyColorTable;
#endif
#ifndef __GLUX__GLFCT_glGetColorTable
extern PFNGLUXGETCOLORTABLEPROC glGetColorTable;
#endif
#ifndef __GLUX__GLFCT_glGetColorTableParameterfv
extern PFNGLUXGETCOLORTABLEPARAMETERFVPROC glGetColorTableParameterfv;
#endif
#ifndef __GLUX__GLFCT_glGetColorTableParameteriv
extern PFNGLUXGETCOLORTABLEPARAMETERIVPROC glGetColorTableParameteriv;
#endif
#ifndef __GLUX__GLFCT_glColorSubTable
extern PFNGLUXCOLORSUBTABLEPROC glColorSubTable;
#endif
#ifndef __GLUX__GLFCT_glCopyColorSubTable
extern PFNGLUXCOPYCOLORSUBTABLEPROC glCopyColorSubTable;
#endif
#ifndef __GLUX__GLFCT_glConvolutionFilter1D
extern PFNGLUXCONVOLUTIONFILTER1DPROC glConvolutionFilter1D;
#endif
#ifndef __GLUX__GLFCT_glConvolutionFilter2D
extern PFNGLUXCONVOLUTIONFILTER2DPROC glConvolutionFilter2D;
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameterf
extern PFNGLUXCONVOLUTIONPARAMETERFPROC glConvolutionParameterf;
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameterfv
extern PFNGLUXCONVOLUTIONPARAMETERFVPROC glConvolutionParameterfv;
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameteri
extern PFNGLUXCONVOLUTIONPARAMETERIPROC glConvolutionParameteri;
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameteriv
extern PFNGLUXCONVOLUTIONPARAMETERIVPROC glConvolutionParameteriv;
#endif
#ifndef __GLUX__GLFCT_glCopyConvolutionFilter1D
extern PFNGLUXCOPYCONVOLUTIONFILTER1DPROC glCopyConvolutionFilter1D;
#endif
#ifndef __GLUX__GLFCT_glCopyConvolutionFilter2D
extern PFNGLUXCOPYCONVOLUTIONFILTER2DPROC glCopyConvolutionFilter2D;
#endif
#ifndef __GLUX__GLFCT_glGetConvolutionFilter
extern PFNGLUXGETCONVOLUTIONFILTERPROC glGetConvolutionFilter;
#endif
#ifndef __GLUX__GLFCT_glGetConvolutionParameterfv
extern PFNGLUXGETCONVOLUTIONPARAMETERFVPROC glGetConvolutionParameterfv;
#endif
#ifndef __GLUX__GLFCT_glGetConvolutionParameteriv
extern PFNGLUXGETCONVOLUTIONPARAMETERIVPROC glGetConvolutionParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGetSeparableFilter
extern PFNGLUXGETSEPARABLEFILTERPROC glGetSeparableFilter;
#endif
#ifndef __GLUX__GLFCT_glSeparableFilter2D
extern PFNGLUXSEPARABLEFILTER2DPROC glSeparableFilter2D;
#endif
#ifndef __GLUX__GLFCT_glGetHistogram
extern PFNGLUXGETHISTOGRAMPROC glGetHistogram;
#endif
#ifndef __GLUX__GLFCT_glGetHistogramParameterfv
extern PFNGLUXGETHISTOGRAMPARAMETERFVPROC glGetHistogramParameterfv;
#endif
#ifndef __GLUX__GLFCT_glGetHistogramParameteriv
extern PFNGLUXGETHISTOGRAMPARAMETERIVPROC glGetHistogramParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGetMinmax
extern PFNGLUXGETMINMAXPROC glGetMinmax;
#endif
#ifndef __GLUX__GLFCT_glGetMinmaxParameterfv
extern PFNGLUXGETMINMAXPARAMETERFVPROC glGetMinmaxParameterfv;
#endif
#ifndef __GLUX__GLFCT_glGetMinmaxParameteriv
extern PFNGLUXGETMINMAXPARAMETERIVPROC glGetMinmaxParameteriv;
#endif
#ifndef __GLUX__GLFCT_glHistogram
extern PFNGLUXHISTOGRAMPROC glHistogram;
#endif
#ifndef __GLUX__GLFCT_glMinmax
extern PFNGLUXMINMAXPROC glMinmax;
#endif
#ifndef __GLUX__GLFCT_glResetHistogram
extern PFNGLUXRESETHISTOGRAMPROC glResetHistogram;
#endif
#ifndef __GLUX__GLFCT_glResetMinmax
extern PFNGLUXRESETMINMAXPROC glResetMinmax;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:42:53 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_VERSION_1_2__
#define __GLUX_GL_VERSION_1_2__

GLUX_NEW_PLUGIN(GL_VERSION_1_2)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_UNSIGNED_BYTE_3_3_2
#  define GL_UNSIGNED_BYTE_3_3_2 0x8032
#endif
#ifndef GL_UNSIGNED_SHORT_4_4_4_4
#  define GL_UNSIGNED_SHORT_4_4_4_4 0x8033
#endif
#ifndef GL_UNSIGNED_SHORT_5_5_5_1
#  define GL_UNSIGNED_SHORT_5_5_5_1 0x8034
#endif
#ifndef GL_UNSIGNED_INT_8_8_8_8
#  define GL_UNSIGNED_INT_8_8_8_8 0x8035
#endif
#ifndef GL_UNSIGNED_INT_10_10_10_2
#  define GL_UNSIGNED_INT_10_10_10_2 0x8036
#endif
#ifndef GL_TEXTURE_BINDING_3D
#  define GL_TEXTURE_BINDING_3D 0x806A
#endif
#ifndef GL_PACK_SKIP_IMAGES
#  define GL_PACK_SKIP_IMAGES 0x806B
#endif
#ifndef GL_PACK_IMAGE_HEIGHT
#  define GL_PACK_IMAGE_HEIGHT 0x806C
#endif
#ifndef GL_UNPACK_SKIP_IMAGES
#  define GL_UNPACK_SKIP_IMAGES 0x806D
#endif
#ifndef GL_UNPACK_IMAGE_HEIGHT
#  define GL_UNPACK_IMAGE_HEIGHT 0x806E
#endif
#ifndef GL_TEXTURE_3D
#  define GL_TEXTURE_3D 0x806F
#endif
#ifndef GL_PROXY_TEXTURE_3D
#  define GL_PROXY_TEXTURE_3D 0x8070
#endif
#ifndef GL_TEXTURE_DEPTH
#  define GL_TEXTURE_DEPTH 0x8071
#endif
#ifndef GL_TEXTURE_WRAP_R
#  define GL_TEXTURE_WRAP_R 0x8072
#endif
#ifndef GL_MAX_3D_TEXTURE_SIZE
#  define GL_MAX_3D_TEXTURE_SIZE 0x8073
#endif
#ifndef GL_UNSIGNED_BYTE_2_3_3_REV
#  define GL_UNSIGNED_BYTE_2_3_3_REV 0x8362
#endif
#ifndef GL_UNSIGNED_SHORT_5_6_5
#  define GL_UNSIGNED_SHORT_5_6_5 0x8363
#endif
#ifndef GL_UNSIGNED_SHORT_5_6_5_REV
#  define GL_UNSIGNED_SHORT_5_6_5_REV 0x8364
#endif
#ifndef GL_UNSIGNED_SHORT_4_4_4_4_REV
#  define GL_UNSIGNED_SHORT_4_4_4_4_REV 0x8365
#endif
#ifndef GL_UNSIGNED_SHORT_1_5_5_5_REV
#  define GL_UNSIGNED_SHORT_1_5_5_5_REV 0x8366
#endif
#ifndef GL_UNSIGNED_INT_8_8_8_8_REV
#  define GL_UNSIGNED_INT_8_8_8_8_REV 0x8367
#endif
#ifndef GL_UNSIGNED_INT_2_10_10_10_REV
#  define GL_UNSIGNED_INT_2_10_10_10_REV 0x8368
#endif
#ifndef GL_BGR
#  define GL_BGR 0x80E0
#endif
#ifndef GL_BGRA
#  define GL_BGRA 0x80E1
#endif
#ifndef GL_MAX_ELEMENTS_VERTICES
#  define GL_MAX_ELEMENTS_VERTICES 0x80E8
#endif
#ifndef GL_MAX_ELEMENTS_INDICES
#  define GL_MAX_ELEMENTS_INDICES 0x80E9
#endif
#ifndef GL_CLAMP_TO_EDGE
#  define GL_CLAMP_TO_EDGE 0x812F
#endif
#ifndef GL_TEXTURE_MIN_LOD
#  define GL_TEXTURE_MIN_LOD 0x813A
#endif
#ifndef GL_TEXTURE_MAX_LOD
#  define GL_TEXTURE_MAX_LOD 0x813B
#endif
#ifndef GL_TEXTURE_BASE_LEVEL
#  define GL_TEXTURE_BASE_LEVEL 0x813C
#endif
#ifndef GL_TEXTURE_MAX_LEVEL
#  define GL_TEXTURE_MAX_LEVEL 0x813D
#endif
#ifndef GL_SMOOTH_POINT_SIZE_RANGE
#  define GL_SMOOTH_POINT_SIZE_RANGE 0x0B12
#endif
#ifndef GL_SMOOTH_POINT_SIZE_GRANULARITY
#  define GL_SMOOTH_POINT_SIZE_GRANULARITY 0x0B13
#endif
#ifndef GL_SMOOTH_LINE_WIDTH_RANGE
#  define GL_SMOOTH_LINE_WIDTH_RANGE 0x0B22
#endif
#ifndef GL_SMOOTH_LINE_WIDTH_GRANULARITY
#  define GL_SMOOTH_LINE_WIDTH_GRANULARITY 0x0B23
#endif
#ifndef GL_ALIASED_LINE_WIDTH_RANGE
#  define GL_ALIASED_LINE_WIDTH_RANGE 0x846E
#endif
#ifndef GL_RESCALE_NORMAL
#  define GL_RESCALE_NORMAL 0x803A
#endif
#ifndef GL_LIGHT_MODEL_COLOR_CONTROL
#  define GL_LIGHT_MODEL_COLOR_CONTROL 0x81F8
#endif
#ifndef GL_SINGLE_COLOR
#  define GL_SINGLE_COLOR 0x81F9
#endif
#ifndef GL_SEPARATE_SPECULAR_COLOR
#  define GL_SEPARATE_SPECULAR_COLOR 0x81FA
#endif
#ifndef GL_ALIASED_POINT_SIZE_RANGE
#  define GL_ALIASED_POINT_SIZE_RANGE 0x846D
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBlendColor
typedef void (APIENTRYP PFNGLUXBLENDCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
#endif
#ifndef __GLUX__GLFCT_glBlendEquation
typedef void (APIENTRYP PFNGLUXBLENDEQUATIONPROC) (GLenum mode);
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElements
typedef void (APIENTRYP PFNGLUXDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);
#endif
#ifndef __GLUX__GLFCT_glTexImage3D
typedef void (APIENTRYP PFNGLUXTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
#endif
#ifndef __GLUX__GLFCT_glTexSubImage3D
typedef void (APIENTRYP PFNGLUXTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);
#endif
#ifndef __GLUX__GLFCT_glCopyTexSubImage3D
typedef void (APIENTRYP PFNGLUXCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glColorTable
typedef void (APIENTRYP PFNGLUXCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);
#endif
#ifndef __GLUX__GLFCT_glColorTableParameterfv
typedef void (APIENTRYP PFNGLUXCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glColorTableParameteriv
typedef void (APIENTRYP PFNGLUXCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glCopyColorTable
typedef void (APIENTRYP PFNGLUXCOPYCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
#endif
#ifndef __GLUX__GLFCT_glGetColorTable
typedef void (APIENTRYP PFNGLUXGETCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, GLvoid *table);
#endif
#ifndef __GLUX__GLFCT_glGetColorTableParameterfv
typedef void (APIENTRYP PFNGLUXGETCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetColorTableParameteriv
typedef void (APIENTRYP PFNGLUXGETCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glColorSubTable
typedef void (APIENTRYP PFNGLUXCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCopyColorSubTable
typedef void (APIENTRYP PFNGLUXCOPYCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
#endif
#ifndef __GLUX__GLFCT_glConvolutionFilter1D
typedef void (APIENTRYP PFNGLUXCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glConvolutionFilter2D
typedef void (APIENTRYP PFNGLUXCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameterf
typedef void (APIENTRYP PFNGLUXCONVOLUTIONPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat params);
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameterfv
typedef void (APIENTRYP PFNGLUXCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameteri
typedef void (APIENTRYP PFNGLUXCONVOLUTIONPARAMETERIPROC) (GLenum target, GLenum pname, GLint params);
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameteriv
typedef void (APIENTRYP PFNGLUXCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glCopyConvolutionFilter1D
typedef void (APIENTRYP PFNGLUXCOPYCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
#endif
#ifndef __GLUX__GLFCT_glCopyConvolutionFilter2D
typedef void (APIENTRYP PFNGLUXCOPYCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetConvolutionFilter
typedef void (APIENTRYP PFNGLUXGETCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glGetConvolutionParameterfv
typedef void (APIENTRYP PFNGLUXGETCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetConvolutionParameteriv
typedef void (APIENTRYP PFNGLUXGETCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetSeparableFilter
typedef void (APIENTRYP PFNGLUXGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);
#endif
#ifndef __GLUX__GLFCT_glSeparableFilter2D
typedef void (APIENTRYP PFNGLUXSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);
#endif
#ifndef __GLUX__GLFCT_glGetHistogram
typedef void (APIENTRYP PFNGLUXGETHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetHistogramParameterfv
typedef void (APIENTRYP PFNGLUXGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetHistogramParameteriv
typedef void (APIENTRYP PFNGLUXGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetMinmax
typedef void (APIENTRYP PFNGLUXGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetMinmaxParameterfv
typedef void (APIENTRYP PFNGLUXGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetMinmaxParameteriv
typedef void (APIENTRYP PFNGLUXGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glHistogram
typedef void (APIENTRYP PFNGLUXHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
#endif
#ifndef __GLUX__GLFCT_glMinmax
typedef void (APIENTRYP PFNGLUXMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sink);
#endif
#ifndef __GLUX__GLFCT_glResetHistogram
typedef void (APIENTRYP PFNGLUXRESETHISTOGRAMPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glResetMinmax
typedef void (APIENTRYP PFNGLUXRESETMINMAXPROC) (GLenum target);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBlendColor
extern PFNGLUXBLENDCOLORPROC glBlendColor;
#endif
#ifndef __GLUX__GLFCT_glBlendEquation
extern PFNGLUXBLENDEQUATIONPROC glBlendEquation;
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElements
extern PFNGLUXDRAWRANGEELEMENTSPROC glDrawRangeElements;
#endif
#ifndef __GLUX__GLFCT_glTexImage3D
extern PFNGLUXTEXIMAGE3DPROC glTexImage3D;
#endif
#ifndef __GLUX__GLFCT_glTexSubImage3D
extern PFNGLUXTEXSUBIMAGE3DPROC glTexSubImage3D;
#endif
#ifndef __GLUX__GLFCT_glCopyTexSubImage3D
extern PFNGLUXCOPYTEXSUBIMAGE3DPROC glCopyTexSubImage3D;
#endif
#ifndef __GLUX__GLFCT_glColorTable
extern PFNGLUXCOLORTABLEPROC glColorTable;
#endif
#ifndef __GLUX__GLFCT_glColorTableParameterfv
extern PFNGLUXCOLORTABLEPARAMETERFVPROC glColorTableParameterfv;
#endif
#ifndef __GLUX__GLFCT_glColorTableParameteriv
extern PFNGLUXCOLORTABLEPARAMETERIVPROC glColorTableParameteriv;
#endif
#ifndef __GLUX__GLFCT_glCopyColorTable
extern PFNGLUXCOPYCOLORTABLEPROC glCopyColorTable;
#endif
#ifndef __GLUX__GLFCT_glGetColorTable
extern PFNGLUXGETCOLORTABLEPROC glGetColorTable;
#endif
#ifndef __GLUX__GLFCT_glGetColorTableParameterfv
extern PFNGLUXGETCOLORTABLEPARAMETERFVPROC glGetColorTableParameterfv;
#endif
#ifndef __GLUX__GLFCT_glGetColorTableParameteriv
extern PFNGLUXGETCOLORTABLEPARAMETERIVPROC glGetColorTableParameteriv;
#endif
#ifndef __GLUX__GLFCT_glColorSubTable
extern PFNGLUXCOLORSUBTABLEPROC glColorSubTable;
#endif
#ifndef __GLUX__GLFCT_glCopyColorSubTable
extern PFNGLUXCOPYCOLORSUBTABLEPROC glCopyColorSubTable;
#endif
#ifndef __GLUX__GLFCT_glConvolutionFilter1D
extern PFNGLUXCONVOLUTIONFILTER1DPROC glConvolutionFilter1D;
#endif
#ifndef __GLUX__GLFCT_glConvolutionFilter2D
extern PFNGLUXCONVOLUTIONFILTER2DPROC glConvolutionFilter2D;
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameterf
extern PFNGLUXCONVOLUTIONPARAMETERFPROC glConvolutionParameterf;
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameterfv
extern PFNGLUXCONVOLUTIONPARAMETERFVPROC glConvolutionParameterfv;
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameteri
extern PFNGLUXCONVOLUTIONPARAMETERIPROC glConvolutionParameteri;
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameteriv
extern PFNGLUXCONVOLUTIONPARAMETERIVPROC glConvolutionParameteriv;
#endif
#ifndef __GLUX__GLFCT_glCopyConvolutionFilter1D
extern PFNGLUXCOPYCONVOLUTIONFILTER1DPROC glCopyConvolutionFilter1D;
#endif
#ifndef __GLUX__GLFCT_glCopyConvolutionFilter2D
extern PFNGLUXCOPYCONVOLUTIONFILTER2DPROC glCopyConvolutionFilter2D;
#endif
#ifndef __GLUX__GLFCT_glGetConvolutionFilter
extern PFNGLUXGETCONVOLUTIONFILTERPROC glGetConvolutionFilter;
#endif
#ifndef __GLUX__GLFCT_glGetConvolutionParameterfv
extern PFNGLUXGETCONVOLUTIONPARAMETERFVPROC glGetConvolutionParameterfv;
#endif
#ifndef __GLUX__GLFCT_glGetConvolutionParameteriv
extern PFNGLUXGETCONVOLUTIONPARAMETERIVPROC glGetConvolutionParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGetSeparableFilter
extern PFNGLUXGETSEPARABLEFILTERPROC glGetSeparableFilter;
#endif
#ifndef __GLUX__GLFCT_glSeparableFilter2D
extern PFNGLUXSEPARABLEFILTER2DPROC glSeparableFilter2D;
#endif
#ifndef __GLUX__GLFCT_glGetHistogram
extern PFNGLUXGETHISTOGRAMPROC glGetHistogram;
#endif
#ifndef __GLUX__GLFCT_glGetHistogramParameterfv
extern PFNGLUXGETHISTOGRAMPARAMETERFVPROC glGetHistogramParameterfv;
#endif
#ifndef __GLUX__GLFCT_glGetHistogramParameteriv
extern PFNGLUXGETHISTOGRAMPARAMETERIVPROC glGetHistogramParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGetMinmax
extern PFNGLUXGETMINMAXPROC glGetMinmax;
#endif
#ifndef __GLUX__GLFCT_glGetMinmaxParameterfv
extern PFNGLUXGETMINMAXPARAMETERFVPROC glGetMinmaxParameterfv;
#endif
#ifndef __GLUX__GLFCT_glGetMinmaxParameteriv
extern PFNGLUXGETMINMAXPARAMETERIVPROC glGetMinmaxParameteriv;
#endif
#ifndef __GLUX__GLFCT_glHistogram
extern PFNGLUXHISTOGRAMPROC glHistogram;
#endif
#ifndef __GLUX__GLFCT_glMinmax
extern PFNGLUXMINMAXPROC glMinmax;
#endif
#ifndef __GLUX__GLFCT_glResetHistogram
extern PFNGLUXRESETHISTOGRAMPROC glResetHistogram;
#endif
#ifndef __GLUX__GLFCT_glResetMinmax
extern PFNGLUXRESETMINMAXPROC glResetMinmax;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
