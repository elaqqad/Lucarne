
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:26 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_robustness__
#define __GLUX_GL_ARB_robustness__

GLUX_NEW_PLUGIN(GL_ARB_robustness);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB
#  define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#endif
#ifndef GL_LOSE_CONTEXT_ON_RESET_ARB
#  define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
#endif
#ifndef GL_GUILTY_CONTEXT_RESET_ARB
#  define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
#endif
#ifndef GL_INNOCENT_CONTEXT_RESET_ARB
#  define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
#endif
#ifndef GL_UNKNOWN_CONTEXT_RESET_ARB
#  define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
#endif
#ifndef GL_RESET_NOTIFICATION_STRATEGY_ARB
#  define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#endif
#ifndef GL_NO_RESET_NOTIFICATION_ARB
#  define GL_NO_RESET_NOTIFICATION_ARB 0x8261
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
typedef GLenum (APIENTRYP PFNGLUXGETGRAPHICSRESETSTATUSARBPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
typedef void (APIENTRYP PFNGLUXGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
typedef void (APIENTRYP PFNGLUXGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
typedef void (APIENTRYP PFNGLUXGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
typedef void (APIENTRYP PFNGLUXGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
typedef void (APIENTRYP PFNGLUXGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
typedef void (APIENTRYP PFNGLUXGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
typedef void (APIENTRYP PFNGLUXGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
typedef void (APIENTRYP PFNGLUXGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
typedef void (APIENTRYP PFNGLUXGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
typedef void (APIENTRYP PFNGLUXGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
typedef void (APIENTRYP PFNGLUXREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
extern PFNGLUXGETGRAPHICSRESETSTATUSARBPROC glGetGraphicsResetStatusARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
extern PFNGLUXGETNMAPDVARBPROC glGetnMapdvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
extern PFNGLUXGETNMAPFVARBPROC glGetnMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
extern PFNGLUXGETNMAPIVARBPROC glGetnMapivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
extern PFNGLUXGETNPIXELMAPFVARBPROC glGetnPixelMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
extern PFNGLUXGETNPIXELMAPUIVARBPROC glGetnPixelMapuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
extern PFNGLUXGETNPIXELMAPUSVARBPROC glGetnPixelMapusvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
extern PFNGLUXGETNPOLYGONSTIPPLEARBPROC glGetnPolygonStippleARB;
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
extern PFNGLUXGETNCOLORTABLEARBPROC glGetnColorTableARB;
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
extern PFNGLUXGETNCONVOLUTIONFILTERARBPROC glGetnConvolutionFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
extern PFNGLUXGETNSEPARABLEFILTERARBPROC glGetnSeparableFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
extern PFNGLUXGETNHISTOGRAMARBPROC glGetnHistogramARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
extern PFNGLUXGETNMINMAXARBPROC glGetnMinmaxARB;
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
extern PFNGLUXGETNTEXIMAGEARBPROC glGetnTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
extern PFNGLUXREADNPIXELSARBPROC glReadnPixelsARB;
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
extern PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC glGetnCompressedTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
extern PFNGLUXGETNUNIFORMFVARBPROC glGetnUniformfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
extern PFNGLUXGETNUNIFORMIVARBPROC glGetnUniformivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
extern PFNGLUXGETNUNIFORMUIVARBPROC glGetnUniformuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
extern PFNGLUXGETNUNIFORMDVARBPROC glGetnUniformdvARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:43 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_robustness__
#define __GLUX_GL_ARB_robustness__

GLUX_NEW_PLUGIN(GL_ARB_robustness);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB
#  define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#endif
#ifndef GL_LOSE_CONTEXT_ON_RESET_ARB
#  define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
#endif
#ifndef GL_GUILTY_CONTEXT_RESET_ARB
#  define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
#endif
#ifndef GL_INNOCENT_CONTEXT_RESET_ARB
#  define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
#endif
#ifndef GL_UNKNOWN_CONTEXT_RESET_ARB
#  define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
#endif
#ifndef GL_RESET_NOTIFICATION_STRATEGY_ARB
#  define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#endif
#ifndef GL_NO_RESET_NOTIFICATION_ARB
#  define GL_NO_RESET_NOTIFICATION_ARB 0x8261
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
typedef GLenum (APIENTRYP PFNGLUXGETGRAPHICSRESETSTATUSARBPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
typedef void (APIENTRYP PFNGLUXGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
typedef void (APIENTRYP PFNGLUXGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
typedef void (APIENTRYP PFNGLUXGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
typedef void (APIENTRYP PFNGLUXGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
typedef void (APIENTRYP PFNGLUXGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
typedef void (APIENTRYP PFNGLUXGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
typedef void (APIENTRYP PFNGLUXGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
typedef void (APIENTRYP PFNGLUXGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
typedef void (APIENTRYP PFNGLUXGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
typedef void (APIENTRYP PFNGLUXGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
typedef void (APIENTRYP PFNGLUXREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
extern PFNGLUXGETGRAPHICSRESETSTATUSARBPROC glGetGraphicsResetStatusARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
extern PFNGLUXGETNMAPDVARBPROC glGetnMapdvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
extern PFNGLUXGETNMAPFVARBPROC glGetnMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
extern PFNGLUXGETNMAPIVARBPROC glGetnMapivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
extern PFNGLUXGETNPIXELMAPFVARBPROC glGetnPixelMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
extern PFNGLUXGETNPIXELMAPUIVARBPROC glGetnPixelMapuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
extern PFNGLUXGETNPIXELMAPUSVARBPROC glGetnPixelMapusvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
extern PFNGLUXGETNPOLYGONSTIPPLEARBPROC glGetnPolygonStippleARB;
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
extern PFNGLUXGETNCOLORTABLEARBPROC glGetnColorTableARB;
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
extern PFNGLUXGETNCONVOLUTIONFILTERARBPROC glGetnConvolutionFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
extern PFNGLUXGETNSEPARABLEFILTERARBPROC glGetnSeparableFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
extern PFNGLUXGETNHISTOGRAMARBPROC glGetnHistogramARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
extern PFNGLUXGETNMINMAXARBPROC glGetnMinmaxARB;
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
extern PFNGLUXGETNTEXIMAGEARBPROC glGetnTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
extern PFNGLUXREADNPIXELSARBPROC glReadnPixelsARB;
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
extern PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC glGetnCompressedTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
extern PFNGLUXGETNUNIFORMFVARBPROC glGetnUniformfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
extern PFNGLUXGETNUNIFORMIVARBPROC glGetnUniformivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
extern PFNGLUXGETNUNIFORMUIVARBPROC glGetnUniformuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
extern PFNGLUXGETNUNIFORMDVARBPROC glGetnUniformdvARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:53 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_robustness__
#define __GLUX_GL_ARB_robustness__

GLUX_NEW_PLUGIN(GL_ARB_robustness);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB
#  define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#endif
#ifndef GL_LOSE_CONTEXT_ON_RESET_ARB
#  define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
#endif
#ifndef GL_GUILTY_CONTEXT_RESET_ARB
#  define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
#endif
#ifndef GL_INNOCENT_CONTEXT_RESET_ARB
#  define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
#endif
#ifndef GL_UNKNOWN_CONTEXT_RESET_ARB
#  define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
#endif
#ifndef GL_RESET_NOTIFICATION_STRATEGY_ARB
#  define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#endif
#ifndef GL_NO_RESET_NOTIFICATION_ARB
#  define GL_NO_RESET_NOTIFICATION_ARB 0x8261
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
typedef GLenum (APIENTRYP PFNGLUXGETGRAPHICSRESETSTATUSARBPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
typedef void (APIENTRYP PFNGLUXGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
typedef void (APIENTRYP PFNGLUXGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
typedef void (APIENTRYP PFNGLUXGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
typedef void (APIENTRYP PFNGLUXGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
typedef void (APIENTRYP PFNGLUXGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
typedef void (APIENTRYP PFNGLUXGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
typedef void (APIENTRYP PFNGLUXGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
typedef void (APIENTRYP PFNGLUXGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
typedef void (APIENTRYP PFNGLUXGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
typedef void (APIENTRYP PFNGLUXGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
typedef void (APIENTRYP PFNGLUXREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
extern PFNGLUXGETGRAPHICSRESETSTATUSARBPROC glGetGraphicsResetStatusARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
extern PFNGLUXGETNMAPDVARBPROC glGetnMapdvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
extern PFNGLUXGETNMAPFVARBPROC glGetnMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
extern PFNGLUXGETNMAPIVARBPROC glGetnMapivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
extern PFNGLUXGETNPIXELMAPFVARBPROC glGetnPixelMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
extern PFNGLUXGETNPIXELMAPUIVARBPROC glGetnPixelMapuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
extern PFNGLUXGETNPIXELMAPUSVARBPROC glGetnPixelMapusvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
extern PFNGLUXGETNPOLYGONSTIPPLEARBPROC glGetnPolygonStippleARB;
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
extern PFNGLUXGETNCOLORTABLEARBPROC glGetnColorTableARB;
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
extern PFNGLUXGETNCONVOLUTIONFILTERARBPROC glGetnConvolutionFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
extern PFNGLUXGETNSEPARABLEFILTERARBPROC glGetnSeparableFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
extern PFNGLUXGETNHISTOGRAMARBPROC glGetnHistogramARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
extern PFNGLUXGETNMINMAXARBPROC glGetnMinmaxARB;
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
extern PFNGLUXGETNTEXIMAGEARBPROC glGetnTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
extern PFNGLUXREADNPIXELSARBPROC glReadnPixelsARB;
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
extern PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC glGetnCompressedTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
extern PFNGLUXGETNUNIFORMFVARBPROC glGetnUniformfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
extern PFNGLUXGETNUNIFORMIVARBPROC glGetnUniformivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
extern PFNGLUXGETNUNIFORMUIVARBPROC glGetnUniformuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
extern PFNGLUXGETNUNIFORMDVARBPROC glGetnUniformdvARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:13 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_robustness__
#define __GLUX_GL_ARB_robustness__

GLUX_NEW_PLUGIN(GL_ARB_robustness);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB
#  define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#endif
#ifndef GL_LOSE_CONTEXT_ON_RESET_ARB
#  define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
#endif
#ifndef GL_GUILTY_CONTEXT_RESET_ARB
#  define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
#endif
#ifndef GL_INNOCENT_CONTEXT_RESET_ARB
#  define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
#endif
#ifndef GL_UNKNOWN_CONTEXT_RESET_ARB
#  define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
#endif
#ifndef GL_RESET_NOTIFICATION_STRATEGY_ARB
#  define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#endif
#ifndef GL_NO_RESET_NOTIFICATION_ARB
#  define GL_NO_RESET_NOTIFICATION_ARB 0x8261
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
typedef GLenum (APIENTRYP PFNGLUXGETGRAPHICSRESETSTATUSARBPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
typedef void (APIENTRYP PFNGLUXGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
typedef void (APIENTRYP PFNGLUXGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
typedef void (APIENTRYP PFNGLUXGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
typedef void (APIENTRYP PFNGLUXGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
typedef void (APIENTRYP PFNGLUXGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
typedef void (APIENTRYP PFNGLUXGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
typedef void (APIENTRYP PFNGLUXGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
typedef void (APIENTRYP PFNGLUXGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
typedef void (APIENTRYP PFNGLUXGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
typedef void (APIENTRYP PFNGLUXGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
typedef void (APIENTRYP PFNGLUXREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
extern PFNGLUXGETGRAPHICSRESETSTATUSARBPROC glGetGraphicsResetStatusARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
extern PFNGLUXGETNMAPDVARBPROC glGetnMapdvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
extern PFNGLUXGETNMAPFVARBPROC glGetnMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
extern PFNGLUXGETNMAPIVARBPROC glGetnMapivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
extern PFNGLUXGETNPIXELMAPFVARBPROC glGetnPixelMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
extern PFNGLUXGETNPIXELMAPUIVARBPROC glGetnPixelMapuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
extern PFNGLUXGETNPIXELMAPUSVARBPROC glGetnPixelMapusvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
extern PFNGLUXGETNPOLYGONSTIPPLEARBPROC glGetnPolygonStippleARB;
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
extern PFNGLUXGETNCOLORTABLEARBPROC glGetnColorTableARB;
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
extern PFNGLUXGETNCONVOLUTIONFILTERARBPROC glGetnConvolutionFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
extern PFNGLUXGETNSEPARABLEFILTERARBPROC glGetnSeparableFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
extern PFNGLUXGETNHISTOGRAMARBPROC glGetnHistogramARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
extern PFNGLUXGETNMINMAXARBPROC glGetnMinmaxARB;
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
extern PFNGLUXGETNTEXIMAGEARBPROC glGetnTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
extern PFNGLUXREADNPIXELSARBPROC glReadnPixelsARB;
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
extern PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC glGetnCompressedTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
extern PFNGLUXGETNUNIFORMFVARBPROC glGetnUniformfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
extern PFNGLUXGETNUNIFORMIVARBPROC glGetnUniformivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
extern PFNGLUXGETNUNIFORMUIVARBPROC glGetnUniformuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
extern PFNGLUXGETNUNIFORMDVARBPROC glGetnUniformdvARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:30 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_robustness__
#define __GLUX_GL_ARB_robustness__

GLUX_NEW_PLUGIN(GL_ARB_robustness);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB
#  define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#endif
#ifndef GL_LOSE_CONTEXT_ON_RESET_ARB
#  define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
#endif
#ifndef GL_GUILTY_CONTEXT_RESET_ARB
#  define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
#endif
#ifndef GL_INNOCENT_CONTEXT_RESET_ARB
#  define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
#endif
#ifndef GL_UNKNOWN_CONTEXT_RESET_ARB
#  define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
#endif
#ifndef GL_RESET_NOTIFICATION_STRATEGY_ARB
#  define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#endif
#ifndef GL_NO_RESET_NOTIFICATION_ARB
#  define GL_NO_RESET_NOTIFICATION_ARB 0x8261
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
typedef GLenum (APIENTRYP PFNGLUXGETGRAPHICSRESETSTATUSARBPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
typedef void (APIENTRYP PFNGLUXGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
typedef void (APIENTRYP PFNGLUXGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
typedef void (APIENTRYP PFNGLUXGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
typedef void (APIENTRYP PFNGLUXGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
typedef void (APIENTRYP PFNGLUXGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
typedef void (APIENTRYP PFNGLUXGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
typedef void (APIENTRYP PFNGLUXGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
typedef void (APIENTRYP PFNGLUXGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
typedef void (APIENTRYP PFNGLUXGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
typedef void (APIENTRYP PFNGLUXGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
typedef void (APIENTRYP PFNGLUXREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
extern PFNGLUXGETGRAPHICSRESETSTATUSARBPROC glGetGraphicsResetStatusARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
extern PFNGLUXGETNMAPDVARBPROC glGetnMapdvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
extern PFNGLUXGETNMAPFVARBPROC glGetnMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
extern PFNGLUXGETNMAPIVARBPROC glGetnMapivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
extern PFNGLUXGETNPIXELMAPFVARBPROC glGetnPixelMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
extern PFNGLUXGETNPIXELMAPUIVARBPROC glGetnPixelMapuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
extern PFNGLUXGETNPIXELMAPUSVARBPROC glGetnPixelMapusvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
extern PFNGLUXGETNPOLYGONSTIPPLEARBPROC glGetnPolygonStippleARB;
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
extern PFNGLUXGETNCOLORTABLEARBPROC glGetnColorTableARB;
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
extern PFNGLUXGETNCONVOLUTIONFILTERARBPROC glGetnConvolutionFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
extern PFNGLUXGETNSEPARABLEFILTERARBPROC glGetnSeparableFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
extern PFNGLUXGETNHISTOGRAMARBPROC glGetnHistogramARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
extern PFNGLUXGETNMINMAXARBPROC glGetnMinmaxARB;
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
extern PFNGLUXGETNTEXIMAGEARBPROC glGetnTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
extern PFNGLUXREADNPIXELSARBPROC glReadnPixelsARB;
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
extern PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC glGetnCompressedTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
extern PFNGLUXGETNUNIFORMFVARBPROC glGetnUniformfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
extern PFNGLUXGETNUNIFORMIVARBPROC glGetnUniformivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
extern PFNGLUXGETNUNIFORMUIVARBPROC glGetnUniformuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
extern PFNGLUXGETNUNIFORMDVARBPROC glGetnUniformdvARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:32 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_robustness__
#define __GLUX_GL_ARB_robustness__

GLUX_NEW_PLUGIN(GL_ARB_robustness);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB
#  define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#endif
#ifndef GL_LOSE_CONTEXT_ON_RESET_ARB
#  define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
#endif
#ifndef GL_GUILTY_CONTEXT_RESET_ARB
#  define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
#endif
#ifndef GL_INNOCENT_CONTEXT_RESET_ARB
#  define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
#endif
#ifndef GL_UNKNOWN_CONTEXT_RESET_ARB
#  define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
#endif
#ifndef GL_RESET_NOTIFICATION_STRATEGY_ARB
#  define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#endif
#ifndef GL_NO_RESET_NOTIFICATION_ARB
#  define GL_NO_RESET_NOTIFICATION_ARB 0x8261
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
typedef GLenum (APIENTRYP PFNGLUXGETGRAPHICSRESETSTATUSARBPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
typedef void (APIENTRYP PFNGLUXGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
typedef void (APIENTRYP PFNGLUXGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
typedef void (APIENTRYP PFNGLUXGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
typedef void (APIENTRYP PFNGLUXGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
typedef void (APIENTRYP PFNGLUXGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
typedef void (APIENTRYP PFNGLUXGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
typedef void (APIENTRYP PFNGLUXGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
typedef void (APIENTRYP PFNGLUXGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
typedef void (APIENTRYP PFNGLUXGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
typedef void (APIENTRYP PFNGLUXGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
typedef void (APIENTRYP PFNGLUXREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
extern PFNGLUXGETGRAPHICSRESETSTATUSARBPROC glGetGraphicsResetStatusARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
extern PFNGLUXGETNMAPDVARBPROC glGetnMapdvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
extern PFNGLUXGETNMAPFVARBPROC glGetnMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
extern PFNGLUXGETNMAPIVARBPROC glGetnMapivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
extern PFNGLUXGETNPIXELMAPFVARBPROC glGetnPixelMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
extern PFNGLUXGETNPIXELMAPUIVARBPROC glGetnPixelMapuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
extern PFNGLUXGETNPIXELMAPUSVARBPROC glGetnPixelMapusvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
extern PFNGLUXGETNPOLYGONSTIPPLEARBPROC glGetnPolygonStippleARB;
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
extern PFNGLUXGETNCOLORTABLEARBPROC glGetnColorTableARB;
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
extern PFNGLUXGETNCONVOLUTIONFILTERARBPROC glGetnConvolutionFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
extern PFNGLUXGETNSEPARABLEFILTERARBPROC glGetnSeparableFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
extern PFNGLUXGETNHISTOGRAMARBPROC glGetnHistogramARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
extern PFNGLUXGETNMINMAXARBPROC glGetnMinmaxARB;
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
extern PFNGLUXGETNTEXIMAGEARBPROC glGetnTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
extern PFNGLUXREADNPIXELSARBPROC glReadnPixelsARB;
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
extern PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC glGetnCompressedTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
extern PFNGLUXGETNUNIFORMFVARBPROC glGetnUniformfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
extern PFNGLUXGETNUNIFORMIVARBPROC glGetnUniformivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
extern PFNGLUXGETNUNIFORMUIVARBPROC glGetnUniformuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
extern PFNGLUXGETNUNIFORMDVARBPROC glGetnUniformdvARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:54 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_robustness__
#define __GLUX_GL_ARB_robustness__

GLUX_NEW_PLUGIN(GL_ARB_robustness);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB
#  define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#endif
#ifndef GL_LOSE_CONTEXT_ON_RESET_ARB
#  define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
#endif
#ifndef GL_GUILTY_CONTEXT_RESET_ARB
#  define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
#endif
#ifndef GL_INNOCENT_CONTEXT_RESET_ARB
#  define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
#endif
#ifndef GL_UNKNOWN_CONTEXT_RESET_ARB
#  define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
#endif
#ifndef GL_RESET_NOTIFICATION_STRATEGY_ARB
#  define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#endif
#ifndef GL_NO_RESET_NOTIFICATION_ARB
#  define GL_NO_RESET_NOTIFICATION_ARB 0x8261
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
typedef GLenum (APIENTRYP PFNGLUXGETGRAPHICSRESETSTATUSARBPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
typedef void (APIENTRYP PFNGLUXGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
typedef void (APIENTRYP PFNGLUXGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
typedef void (APIENTRYP PFNGLUXGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
typedef void (APIENTRYP PFNGLUXGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
typedef void (APIENTRYP PFNGLUXGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
typedef void (APIENTRYP PFNGLUXGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
typedef void (APIENTRYP PFNGLUXGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
typedef void (APIENTRYP PFNGLUXGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
typedef void (APIENTRYP PFNGLUXGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
typedef void (APIENTRYP PFNGLUXGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
typedef void (APIENTRYP PFNGLUXREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
extern PFNGLUXGETGRAPHICSRESETSTATUSARBPROC glGetGraphicsResetStatusARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
extern PFNGLUXGETNMAPDVARBPROC glGetnMapdvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
extern PFNGLUXGETNMAPFVARBPROC glGetnMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
extern PFNGLUXGETNMAPIVARBPROC glGetnMapivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
extern PFNGLUXGETNPIXELMAPFVARBPROC glGetnPixelMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
extern PFNGLUXGETNPIXELMAPUIVARBPROC glGetnPixelMapuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
extern PFNGLUXGETNPIXELMAPUSVARBPROC glGetnPixelMapusvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
extern PFNGLUXGETNPOLYGONSTIPPLEARBPROC glGetnPolygonStippleARB;
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
extern PFNGLUXGETNCOLORTABLEARBPROC glGetnColorTableARB;
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
extern PFNGLUXGETNCONVOLUTIONFILTERARBPROC glGetnConvolutionFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
extern PFNGLUXGETNSEPARABLEFILTERARBPROC glGetnSeparableFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
extern PFNGLUXGETNHISTOGRAMARBPROC glGetnHistogramARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
extern PFNGLUXGETNMINMAXARBPROC glGetnMinmaxARB;
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
extern PFNGLUXGETNTEXIMAGEARBPROC glGetnTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
extern PFNGLUXREADNPIXELSARBPROC glReadnPixelsARB;
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
extern PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC glGetnCompressedTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
extern PFNGLUXGETNUNIFORMFVARBPROC glGetnUniformfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
extern PFNGLUXGETNUNIFORMIVARBPROC glGetnUniformivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
extern PFNGLUXGETNUNIFORMUIVARBPROC glGetnUniformuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
extern PFNGLUXGETNUNIFORMDVARBPROC glGetnUniformdvARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:28:04 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_robustness__
#define __GLUX_GL_ARB_robustness__

GLUX_NEW_PLUGIN(GL_ARB_robustness);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB
#  define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#endif
#ifndef GL_LOSE_CONTEXT_ON_RESET_ARB
#  define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
#endif
#ifndef GL_GUILTY_CONTEXT_RESET_ARB
#  define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
#endif
#ifndef GL_INNOCENT_CONTEXT_RESET_ARB
#  define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
#endif
#ifndef GL_UNKNOWN_CONTEXT_RESET_ARB
#  define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
#endif
#ifndef GL_RESET_NOTIFICATION_STRATEGY_ARB
#  define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#endif
#ifndef GL_NO_RESET_NOTIFICATION_ARB
#  define GL_NO_RESET_NOTIFICATION_ARB 0x8261
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
typedef GLenum (APIENTRYP PFNGLUXGETGRAPHICSRESETSTATUSARBPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
typedef void (APIENTRYP PFNGLUXGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
typedef void (APIENTRYP PFNGLUXGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
typedef void (APIENTRYP PFNGLUXGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
typedef void (APIENTRYP PFNGLUXGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
typedef void (APIENTRYP PFNGLUXGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
typedef void (APIENTRYP PFNGLUXGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
typedef void (APIENTRYP PFNGLUXGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
typedef void (APIENTRYP PFNGLUXGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
typedef void (APIENTRYP PFNGLUXGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
typedef void (APIENTRYP PFNGLUXGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
typedef void (APIENTRYP PFNGLUXREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
extern PFNGLUXGETGRAPHICSRESETSTATUSARBPROC glGetGraphicsResetStatusARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
extern PFNGLUXGETNMAPDVARBPROC glGetnMapdvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
extern PFNGLUXGETNMAPFVARBPROC glGetnMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
extern PFNGLUXGETNMAPIVARBPROC glGetnMapivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
extern PFNGLUXGETNPIXELMAPFVARBPROC glGetnPixelMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
extern PFNGLUXGETNPIXELMAPUIVARBPROC glGetnPixelMapuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
extern PFNGLUXGETNPIXELMAPUSVARBPROC glGetnPixelMapusvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
extern PFNGLUXGETNPOLYGONSTIPPLEARBPROC glGetnPolygonStippleARB;
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
extern PFNGLUXGETNCOLORTABLEARBPROC glGetnColorTableARB;
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
extern PFNGLUXGETNCONVOLUTIONFILTERARBPROC glGetnConvolutionFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
extern PFNGLUXGETNSEPARABLEFILTERARBPROC glGetnSeparableFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
extern PFNGLUXGETNHISTOGRAMARBPROC glGetnHistogramARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
extern PFNGLUXGETNMINMAXARBPROC glGetnMinmaxARB;
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
extern PFNGLUXGETNTEXIMAGEARBPROC glGetnTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
extern PFNGLUXREADNPIXELSARBPROC glReadnPixelsARB;
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
extern PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC glGetnCompressedTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
extern PFNGLUXGETNUNIFORMFVARBPROC glGetnUniformfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
extern PFNGLUXGETNUNIFORMIVARBPROC glGetnUniformivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
extern PFNGLUXGETNUNIFORMUIVARBPROC glGetnUniformuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
extern PFNGLUXGETNUNIFORMDVARBPROC glGetnUniformdvARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:16:59 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_robustness__
#define __GLUX_GL_ARB_robustness__

GLUX_NEW_PLUGIN(GL_ARB_robustness);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB
#  define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#endif
#ifndef GL_LOSE_CONTEXT_ON_RESET_ARB
#  define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
#endif
#ifndef GL_GUILTY_CONTEXT_RESET_ARB
#  define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
#endif
#ifndef GL_INNOCENT_CONTEXT_RESET_ARB
#  define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
#endif
#ifndef GL_UNKNOWN_CONTEXT_RESET_ARB
#  define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
#endif
#ifndef GL_RESET_NOTIFICATION_STRATEGY_ARB
#  define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#endif
#ifndef GL_NO_RESET_NOTIFICATION_ARB
#  define GL_NO_RESET_NOTIFICATION_ARB 0x8261
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
typedef GLenum (APIENTRYP PFNGLUXGETGRAPHICSRESETSTATUSARBPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
typedef void (APIENTRYP PFNGLUXGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
typedef void (APIENTRYP PFNGLUXGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
typedef void (APIENTRYP PFNGLUXGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
typedef void (APIENTRYP PFNGLUXGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
typedef void (APIENTRYP PFNGLUXGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
typedef void (APIENTRYP PFNGLUXGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
typedef void (APIENTRYP PFNGLUXGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
typedef void (APIENTRYP PFNGLUXGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
typedef void (APIENTRYP PFNGLUXGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
typedef void (APIENTRYP PFNGLUXGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
typedef void (APIENTRYP PFNGLUXREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
extern PFNGLUXGETGRAPHICSRESETSTATUSARBPROC glGetGraphicsResetStatusARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
extern PFNGLUXGETNMAPDVARBPROC glGetnMapdvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
extern PFNGLUXGETNMAPFVARBPROC glGetnMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
extern PFNGLUXGETNMAPIVARBPROC glGetnMapivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
extern PFNGLUXGETNPIXELMAPFVARBPROC glGetnPixelMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
extern PFNGLUXGETNPIXELMAPUIVARBPROC glGetnPixelMapuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
extern PFNGLUXGETNPIXELMAPUSVARBPROC glGetnPixelMapusvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
extern PFNGLUXGETNPOLYGONSTIPPLEARBPROC glGetnPolygonStippleARB;
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
extern PFNGLUXGETNCOLORTABLEARBPROC glGetnColorTableARB;
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
extern PFNGLUXGETNCONVOLUTIONFILTERARBPROC glGetnConvolutionFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
extern PFNGLUXGETNSEPARABLEFILTERARBPROC glGetnSeparableFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
extern PFNGLUXGETNHISTOGRAMARBPROC glGetnHistogramARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
extern PFNGLUXGETNMINMAXARBPROC glGetnMinmaxARB;
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
extern PFNGLUXGETNTEXIMAGEARBPROC glGetnTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
extern PFNGLUXREADNPIXELSARBPROC glReadnPixelsARB;
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
extern PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC glGetnCompressedTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
extern PFNGLUXGETNUNIFORMFVARBPROC glGetnUniformfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
extern PFNGLUXGETNUNIFORMIVARBPROC glGetnUniformivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
extern PFNGLUXGETNUNIFORMUIVARBPROC glGetnUniformuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
extern PFNGLUXGETNUNIFORMDVARBPROC glGetnUniformdvARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_robustness__
#define __GLUX_GL_ARB_robustness__

GLUX_NEW_PLUGIN(GL_ARB_robustness);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB
#  define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#endif
#ifndef GL_LOSE_CONTEXT_ON_RESET_ARB
#  define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
#endif
#ifndef GL_GUILTY_CONTEXT_RESET_ARB
#  define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
#endif
#ifndef GL_INNOCENT_CONTEXT_RESET_ARB
#  define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
#endif
#ifndef GL_UNKNOWN_CONTEXT_RESET_ARB
#  define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
#endif
#ifndef GL_RESET_NOTIFICATION_STRATEGY_ARB
#  define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#endif
#ifndef GL_NO_RESET_NOTIFICATION_ARB
#  define GL_NO_RESET_NOTIFICATION_ARB 0x8261
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
typedef GLenum (APIENTRYP PFNGLUXGETGRAPHICSRESETSTATUSARBPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
typedef void (APIENTRYP PFNGLUXGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
typedef void (APIENTRYP PFNGLUXGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
typedef void (APIENTRYP PFNGLUXGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
typedef void (APIENTRYP PFNGLUXGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
typedef void (APIENTRYP PFNGLUXGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
typedef void (APIENTRYP PFNGLUXGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
typedef void (APIENTRYP PFNGLUXGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
typedef void (APIENTRYP PFNGLUXGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
typedef void (APIENTRYP PFNGLUXGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
typedef void (APIENTRYP PFNGLUXGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
typedef void (APIENTRYP PFNGLUXREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
extern PFNGLUXGETGRAPHICSRESETSTATUSARBPROC glGetGraphicsResetStatusARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
extern PFNGLUXGETNMAPDVARBPROC glGetnMapdvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
extern PFNGLUXGETNMAPFVARBPROC glGetnMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
extern PFNGLUXGETNMAPIVARBPROC glGetnMapivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
extern PFNGLUXGETNPIXELMAPFVARBPROC glGetnPixelMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
extern PFNGLUXGETNPIXELMAPUIVARBPROC glGetnPixelMapuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
extern PFNGLUXGETNPIXELMAPUSVARBPROC glGetnPixelMapusvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
extern PFNGLUXGETNPOLYGONSTIPPLEARBPROC glGetnPolygonStippleARB;
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
extern PFNGLUXGETNCOLORTABLEARBPROC glGetnColorTableARB;
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
extern PFNGLUXGETNCONVOLUTIONFILTERARBPROC glGetnConvolutionFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
extern PFNGLUXGETNSEPARABLEFILTERARBPROC glGetnSeparableFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
extern PFNGLUXGETNHISTOGRAMARBPROC glGetnHistogramARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
extern PFNGLUXGETNMINMAXARBPROC glGetnMinmaxARB;
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
extern PFNGLUXGETNTEXIMAGEARBPROC glGetnTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
extern PFNGLUXREADNPIXELSARBPROC glReadnPixelsARB;
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
extern PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC glGetnCompressedTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
extern PFNGLUXGETNUNIFORMFVARBPROC glGetnUniformfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
extern PFNGLUXGETNUNIFORMIVARBPROC glGetnUniformivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
extern PFNGLUXGETNUNIFORMUIVARBPROC glGetnUniformuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
extern PFNGLUXGETNUNIFORMDVARBPROC glGetnUniformdvARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:20 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_robustness__
#define __GLUX_GL_ARB_robustness__

GLUX_NEW_PLUGIN(GL_ARB_robustness);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB
#  define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#endif
#ifndef GL_LOSE_CONTEXT_ON_RESET_ARB
#  define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
#endif
#ifndef GL_GUILTY_CONTEXT_RESET_ARB
#  define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
#endif
#ifndef GL_INNOCENT_CONTEXT_RESET_ARB
#  define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
#endif
#ifndef GL_UNKNOWN_CONTEXT_RESET_ARB
#  define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
#endif
#ifndef GL_RESET_NOTIFICATION_STRATEGY_ARB
#  define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#endif
#ifndef GL_NO_RESET_NOTIFICATION_ARB
#  define GL_NO_RESET_NOTIFICATION_ARB 0x8261
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
typedef GLenum (APIENTRYP PFNGLUXGETGRAPHICSRESETSTATUSARBPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
typedef void (APIENTRYP PFNGLUXGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
typedef void (APIENTRYP PFNGLUXGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
typedef void (APIENTRYP PFNGLUXGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
typedef void (APIENTRYP PFNGLUXGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
typedef void (APIENTRYP PFNGLUXGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
typedef void (APIENTRYP PFNGLUXGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
typedef void (APIENTRYP PFNGLUXGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
typedef void (APIENTRYP PFNGLUXGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
typedef void (APIENTRYP PFNGLUXGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
typedef void (APIENTRYP PFNGLUXGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
typedef void (APIENTRYP PFNGLUXREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
extern PFNGLUXGETGRAPHICSRESETSTATUSARBPROC glGetGraphicsResetStatusARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
extern PFNGLUXGETNMAPDVARBPROC glGetnMapdvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
extern PFNGLUXGETNMAPFVARBPROC glGetnMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
extern PFNGLUXGETNMAPIVARBPROC glGetnMapivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
extern PFNGLUXGETNPIXELMAPFVARBPROC glGetnPixelMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
extern PFNGLUXGETNPIXELMAPUIVARBPROC glGetnPixelMapuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
extern PFNGLUXGETNPIXELMAPUSVARBPROC glGetnPixelMapusvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
extern PFNGLUXGETNPOLYGONSTIPPLEARBPROC glGetnPolygonStippleARB;
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
extern PFNGLUXGETNCOLORTABLEARBPROC glGetnColorTableARB;
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
extern PFNGLUXGETNCONVOLUTIONFILTERARBPROC glGetnConvolutionFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
extern PFNGLUXGETNSEPARABLEFILTERARBPROC glGetnSeparableFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
extern PFNGLUXGETNHISTOGRAMARBPROC glGetnHistogramARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
extern PFNGLUXGETNMINMAXARBPROC glGetnMinmaxARB;
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
extern PFNGLUXGETNTEXIMAGEARBPROC glGetnTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
extern PFNGLUXREADNPIXELSARBPROC glReadnPixelsARB;
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
extern PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC glGetnCompressedTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
extern PFNGLUXGETNUNIFORMFVARBPROC glGetnUniformfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
extern PFNGLUXGETNUNIFORMIVARBPROC glGetnUniformivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
extern PFNGLUXGETNUNIFORMUIVARBPROC glGetnUniformuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
extern PFNGLUXGETNUNIFORMDVARBPROC glGetnUniformdvARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_robustness__
#define __GLUX_GL_ARB_robustness__

GLUX_NEW_PLUGIN(GL_ARB_robustness);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB
#  define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#endif
#ifndef GL_LOSE_CONTEXT_ON_RESET_ARB
#  define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
#endif
#ifndef GL_GUILTY_CONTEXT_RESET_ARB
#  define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
#endif
#ifndef GL_INNOCENT_CONTEXT_RESET_ARB
#  define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
#endif
#ifndef GL_UNKNOWN_CONTEXT_RESET_ARB
#  define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
#endif
#ifndef GL_RESET_NOTIFICATION_STRATEGY_ARB
#  define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#endif
#ifndef GL_NO_RESET_NOTIFICATION_ARB
#  define GL_NO_RESET_NOTIFICATION_ARB 0x8261
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
typedef GLenum (APIENTRYP PFNGLUXGETGRAPHICSRESETSTATUSARBPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
typedef void (APIENTRYP PFNGLUXGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
typedef void (APIENTRYP PFNGLUXGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
typedef void (APIENTRYP PFNGLUXGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
typedef void (APIENTRYP PFNGLUXGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
typedef void (APIENTRYP PFNGLUXGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
typedef void (APIENTRYP PFNGLUXGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
typedef void (APIENTRYP PFNGLUXGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
typedef void (APIENTRYP PFNGLUXGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
typedef void (APIENTRYP PFNGLUXGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
typedef void (APIENTRYP PFNGLUXGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
typedef void (APIENTRYP PFNGLUXREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
extern PFNGLUXGETGRAPHICSRESETSTATUSARBPROC glGetGraphicsResetStatusARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
extern PFNGLUXGETNMAPDVARBPROC glGetnMapdvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
extern PFNGLUXGETNMAPFVARBPROC glGetnMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
extern PFNGLUXGETNMAPIVARBPROC glGetnMapivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
extern PFNGLUXGETNPIXELMAPFVARBPROC glGetnPixelMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
extern PFNGLUXGETNPIXELMAPUIVARBPROC glGetnPixelMapuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
extern PFNGLUXGETNPIXELMAPUSVARBPROC glGetnPixelMapusvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
extern PFNGLUXGETNPOLYGONSTIPPLEARBPROC glGetnPolygonStippleARB;
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
extern PFNGLUXGETNCOLORTABLEARBPROC glGetnColorTableARB;
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
extern PFNGLUXGETNCONVOLUTIONFILTERARBPROC glGetnConvolutionFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
extern PFNGLUXGETNSEPARABLEFILTERARBPROC glGetnSeparableFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
extern PFNGLUXGETNHISTOGRAMARBPROC glGetnHistogramARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
extern PFNGLUXGETNMINMAXARBPROC glGetnMinmaxARB;
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
extern PFNGLUXGETNTEXIMAGEARBPROC glGetnTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
extern PFNGLUXREADNPIXELSARBPROC glReadnPixelsARB;
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
extern PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC glGetnCompressedTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
extern PFNGLUXGETNUNIFORMFVARBPROC glGetnUniformfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
extern PFNGLUXGETNUNIFORMIVARBPROC glGetnUniformivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
extern PFNGLUXGETNUNIFORMUIVARBPROC glGetnUniformuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
extern PFNGLUXGETNUNIFORMDVARBPROC glGetnUniformdvARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:09 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_robustness__
#define __GLUX_GL_ARB_robustness__

GLUX_NEW_PLUGIN(GL_ARB_robustness);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB
#  define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#endif
#ifndef GL_LOSE_CONTEXT_ON_RESET_ARB
#  define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
#endif
#ifndef GL_GUILTY_CONTEXT_RESET_ARB
#  define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
#endif
#ifndef GL_INNOCENT_CONTEXT_RESET_ARB
#  define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
#endif
#ifndef GL_UNKNOWN_CONTEXT_RESET_ARB
#  define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
#endif
#ifndef GL_RESET_NOTIFICATION_STRATEGY_ARB
#  define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#endif
#ifndef GL_NO_RESET_NOTIFICATION_ARB
#  define GL_NO_RESET_NOTIFICATION_ARB 0x8261
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
typedef GLenum (APIENTRYP PFNGLUXGETGRAPHICSRESETSTATUSARBPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
typedef void (APIENTRYP PFNGLUXGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
typedef void (APIENTRYP PFNGLUXGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
typedef void (APIENTRYP PFNGLUXGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
typedef void (APIENTRYP PFNGLUXGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
typedef void (APIENTRYP PFNGLUXGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
typedef void (APIENTRYP PFNGLUXGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
typedef void (APIENTRYP PFNGLUXGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
typedef void (APIENTRYP PFNGLUXGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
typedef void (APIENTRYP PFNGLUXGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
typedef void (APIENTRYP PFNGLUXGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
typedef void (APIENTRYP PFNGLUXREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
extern PFNGLUXGETGRAPHICSRESETSTATUSARBPROC glGetGraphicsResetStatusARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
extern PFNGLUXGETNMAPDVARBPROC glGetnMapdvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
extern PFNGLUXGETNMAPFVARBPROC glGetnMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
extern PFNGLUXGETNMAPIVARBPROC glGetnMapivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
extern PFNGLUXGETNPIXELMAPFVARBPROC glGetnPixelMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
extern PFNGLUXGETNPIXELMAPUIVARBPROC glGetnPixelMapuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
extern PFNGLUXGETNPIXELMAPUSVARBPROC glGetnPixelMapusvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
extern PFNGLUXGETNPOLYGONSTIPPLEARBPROC glGetnPolygonStippleARB;
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
extern PFNGLUXGETNCOLORTABLEARBPROC glGetnColorTableARB;
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
extern PFNGLUXGETNCONVOLUTIONFILTERARBPROC glGetnConvolutionFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
extern PFNGLUXGETNSEPARABLEFILTERARBPROC glGetnSeparableFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
extern PFNGLUXGETNHISTOGRAMARBPROC glGetnHistogramARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
extern PFNGLUXGETNMINMAXARBPROC glGetnMinmaxARB;
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
extern PFNGLUXGETNTEXIMAGEARBPROC glGetnTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
extern PFNGLUXREADNPIXELSARBPROC glReadnPixelsARB;
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
extern PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC glGetnCompressedTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
extern PFNGLUXGETNUNIFORMFVARBPROC glGetnUniformfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
extern PFNGLUXGETNUNIFORMIVARBPROC glGetnUniformivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
extern PFNGLUXGETNUNIFORMUIVARBPROC glGetnUniformuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
extern PFNGLUXGETNUNIFORMDVARBPROC glGetnUniformdvARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:22 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_robustness__
#define __GLUX_GL_ARB_robustness__

GLUX_NEW_PLUGIN(GL_ARB_robustness);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB
#  define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#endif
#ifndef GL_LOSE_CONTEXT_ON_RESET_ARB
#  define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
#endif
#ifndef GL_GUILTY_CONTEXT_RESET_ARB
#  define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
#endif
#ifndef GL_INNOCENT_CONTEXT_RESET_ARB
#  define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
#endif
#ifndef GL_UNKNOWN_CONTEXT_RESET_ARB
#  define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
#endif
#ifndef GL_RESET_NOTIFICATION_STRATEGY_ARB
#  define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#endif
#ifndef GL_NO_RESET_NOTIFICATION_ARB
#  define GL_NO_RESET_NOTIFICATION_ARB 0x8261
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
typedef GLenum (APIENTRYP PFNGLUXGETGRAPHICSRESETSTATUSARBPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
typedef void (APIENTRYP PFNGLUXGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
typedef void (APIENTRYP PFNGLUXGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
typedef void (APIENTRYP PFNGLUXGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
typedef void (APIENTRYP PFNGLUXGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
typedef void (APIENTRYP PFNGLUXGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
typedef void (APIENTRYP PFNGLUXGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
typedef void (APIENTRYP PFNGLUXGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
typedef void (APIENTRYP PFNGLUXGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
typedef void (APIENTRYP PFNGLUXGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
typedef void (APIENTRYP PFNGLUXGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
typedef void (APIENTRYP PFNGLUXREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
extern PFNGLUXGETGRAPHICSRESETSTATUSARBPROC glGetGraphicsResetStatusARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
extern PFNGLUXGETNMAPDVARBPROC glGetnMapdvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
extern PFNGLUXGETNMAPFVARBPROC glGetnMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
extern PFNGLUXGETNMAPIVARBPROC glGetnMapivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
extern PFNGLUXGETNPIXELMAPFVARBPROC glGetnPixelMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
extern PFNGLUXGETNPIXELMAPUIVARBPROC glGetnPixelMapuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
extern PFNGLUXGETNPIXELMAPUSVARBPROC glGetnPixelMapusvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
extern PFNGLUXGETNPOLYGONSTIPPLEARBPROC glGetnPolygonStippleARB;
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
extern PFNGLUXGETNCOLORTABLEARBPROC glGetnColorTableARB;
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
extern PFNGLUXGETNCONVOLUTIONFILTERARBPROC glGetnConvolutionFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
extern PFNGLUXGETNSEPARABLEFILTERARBPROC glGetnSeparableFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
extern PFNGLUXGETNHISTOGRAMARBPROC glGetnHistogramARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
extern PFNGLUXGETNMINMAXARBPROC glGetnMinmaxARB;
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
extern PFNGLUXGETNTEXIMAGEARBPROC glGetnTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
extern PFNGLUXREADNPIXELSARBPROC glReadnPixelsARB;
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
extern PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC glGetnCompressedTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
extern PFNGLUXGETNUNIFORMFVARBPROC glGetnUniformfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
extern PFNGLUXGETNUNIFORMIVARBPROC glGetnUniformivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
extern PFNGLUXGETNUNIFORMUIVARBPROC glGetnUniformuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
extern PFNGLUXGETNUNIFORMDVARBPROC glGetnUniformdvARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:52:02 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_robustness__
#define __GLUX_GL_ARB_robustness__

GLUX_NEW_PLUGIN(GL_ARB_robustness);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB
#  define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#endif
#ifndef GL_LOSE_CONTEXT_ON_RESET_ARB
#  define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
#endif
#ifndef GL_GUILTY_CONTEXT_RESET_ARB
#  define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
#endif
#ifndef GL_INNOCENT_CONTEXT_RESET_ARB
#  define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
#endif
#ifndef GL_UNKNOWN_CONTEXT_RESET_ARB
#  define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
#endif
#ifndef GL_RESET_NOTIFICATION_STRATEGY_ARB
#  define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#endif
#ifndef GL_NO_RESET_NOTIFICATION_ARB
#  define GL_NO_RESET_NOTIFICATION_ARB 0x8261
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
typedef GLenum (APIENTRYP PFNGLUXGETGRAPHICSRESETSTATUSARBPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
typedef void (APIENTRYP PFNGLUXGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
typedef void (APIENTRYP PFNGLUXGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
typedef void (APIENTRYP PFNGLUXGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
typedef void (APIENTRYP PFNGLUXGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
typedef void (APIENTRYP PFNGLUXGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
typedef void (APIENTRYP PFNGLUXGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
typedef void (APIENTRYP PFNGLUXGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
typedef void (APIENTRYP PFNGLUXGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
typedef void (APIENTRYP PFNGLUXGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
typedef void (APIENTRYP PFNGLUXGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
typedef void (APIENTRYP PFNGLUXREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
extern PFNGLUXGETGRAPHICSRESETSTATUSARBPROC glGetGraphicsResetStatusARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
extern PFNGLUXGETNMAPDVARBPROC glGetnMapdvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
extern PFNGLUXGETNMAPFVARBPROC glGetnMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
extern PFNGLUXGETNMAPIVARBPROC glGetnMapivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
extern PFNGLUXGETNPIXELMAPFVARBPROC glGetnPixelMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
extern PFNGLUXGETNPIXELMAPUIVARBPROC glGetnPixelMapuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
extern PFNGLUXGETNPIXELMAPUSVARBPROC glGetnPixelMapusvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
extern PFNGLUXGETNPOLYGONSTIPPLEARBPROC glGetnPolygonStippleARB;
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
extern PFNGLUXGETNCOLORTABLEARBPROC glGetnColorTableARB;
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
extern PFNGLUXGETNCONVOLUTIONFILTERARBPROC glGetnConvolutionFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
extern PFNGLUXGETNSEPARABLEFILTERARBPROC glGetnSeparableFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
extern PFNGLUXGETNHISTOGRAMARBPROC glGetnHistogramARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
extern PFNGLUXGETNMINMAXARBPROC glGetnMinmaxARB;
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
extern PFNGLUXGETNTEXIMAGEARBPROC glGetnTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
extern PFNGLUXREADNPIXELSARBPROC glReadnPixelsARB;
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
extern PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC glGetnCompressedTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
extern PFNGLUXGETNUNIFORMFVARBPROC glGetnUniformfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
extern PFNGLUXGETNUNIFORMIVARBPROC glGetnUniformivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
extern PFNGLUXGETNUNIFORMUIVARBPROC glGetnUniformuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
extern PFNGLUXGETNUNIFORMDVARBPROC glGetnUniformdvARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_robustness__
#define __GLUX_GL_ARB_robustness__

GLUX_NEW_PLUGIN(GL_ARB_robustness);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB
#  define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#endif
#ifndef GL_LOSE_CONTEXT_ON_RESET_ARB
#  define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
#endif
#ifndef GL_GUILTY_CONTEXT_RESET_ARB
#  define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
#endif
#ifndef GL_INNOCENT_CONTEXT_RESET_ARB
#  define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
#endif
#ifndef GL_UNKNOWN_CONTEXT_RESET_ARB
#  define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
#endif
#ifndef GL_RESET_NOTIFICATION_STRATEGY_ARB
#  define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#endif
#ifndef GL_NO_RESET_NOTIFICATION_ARB
#  define GL_NO_RESET_NOTIFICATION_ARB 0x8261
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
typedef GLenum (APIENTRYP PFNGLUXGETGRAPHICSRESETSTATUSARBPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
typedef void (APIENTRYP PFNGLUXGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
typedef void (APIENTRYP PFNGLUXGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
typedef void (APIENTRYP PFNGLUXGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
typedef void (APIENTRYP PFNGLUXGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
typedef void (APIENTRYP PFNGLUXGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
typedef void (APIENTRYP PFNGLUXGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
typedef void (APIENTRYP PFNGLUXGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
typedef void (APIENTRYP PFNGLUXGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
typedef void (APIENTRYP PFNGLUXGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
typedef void (APIENTRYP PFNGLUXGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
typedef void (APIENTRYP PFNGLUXREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
extern PFNGLUXGETGRAPHICSRESETSTATUSARBPROC glGetGraphicsResetStatusARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
extern PFNGLUXGETNMAPDVARBPROC glGetnMapdvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
extern PFNGLUXGETNMAPFVARBPROC glGetnMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
extern PFNGLUXGETNMAPIVARBPROC glGetnMapivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
extern PFNGLUXGETNPIXELMAPFVARBPROC glGetnPixelMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
extern PFNGLUXGETNPIXELMAPUIVARBPROC glGetnPixelMapuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
extern PFNGLUXGETNPIXELMAPUSVARBPROC glGetnPixelMapusvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
extern PFNGLUXGETNPOLYGONSTIPPLEARBPROC glGetnPolygonStippleARB;
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
extern PFNGLUXGETNCOLORTABLEARBPROC glGetnColorTableARB;
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
extern PFNGLUXGETNCONVOLUTIONFILTERARBPROC glGetnConvolutionFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
extern PFNGLUXGETNSEPARABLEFILTERARBPROC glGetnSeparableFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
extern PFNGLUXGETNHISTOGRAMARBPROC glGetnHistogramARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
extern PFNGLUXGETNMINMAXARBPROC glGetnMinmaxARB;
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
extern PFNGLUXGETNTEXIMAGEARBPROC glGetnTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
extern PFNGLUXREADNPIXELSARBPROC glReadnPixelsARB;
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
extern PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC glGetnCompressedTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
extern PFNGLUXGETNUNIFORMFVARBPROC glGetnUniformfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
extern PFNGLUXGETNUNIFORMIVARBPROC glGetnUniformivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
extern PFNGLUXGETNUNIFORMUIVARBPROC glGetnUniformuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
extern PFNGLUXGETNUNIFORMDVARBPROC glGetnUniformdvARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:05 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_robustness__
#define __GLUX_GL_ARB_robustness__

GLUX_NEW_PLUGIN(GL_ARB_robustness);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB
#  define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#endif
#ifndef GL_LOSE_CONTEXT_ON_RESET_ARB
#  define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
#endif
#ifndef GL_GUILTY_CONTEXT_RESET_ARB
#  define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
#endif
#ifndef GL_INNOCENT_CONTEXT_RESET_ARB
#  define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
#endif
#ifndef GL_UNKNOWN_CONTEXT_RESET_ARB
#  define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
#endif
#ifndef GL_RESET_NOTIFICATION_STRATEGY_ARB
#  define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#endif
#ifndef GL_NO_RESET_NOTIFICATION_ARB
#  define GL_NO_RESET_NOTIFICATION_ARB 0x8261
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
typedef GLenum (APIENTRYP PFNGLUXGETGRAPHICSRESETSTATUSARBPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
typedef void (APIENTRYP PFNGLUXGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
typedef void (APIENTRYP PFNGLUXGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
typedef void (APIENTRYP PFNGLUXGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
typedef void (APIENTRYP PFNGLUXGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
typedef void (APIENTRYP PFNGLUXGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
typedef void (APIENTRYP PFNGLUXGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
typedef void (APIENTRYP PFNGLUXGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
typedef void (APIENTRYP PFNGLUXGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
typedef void (APIENTRYP PFNGLUXGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
typedef void (APIENTRYP PFNGLUXGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
typedef void (APIENTRYP PFNGLUXREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
extern PFNGLUXGETGRAPHICSRESETSTATUSARBPROC glGetGraphicsResetStatusARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
extern PFNGLUXGETNMAPDVARBPROC glGetnMapdvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
extern PFNGLUXGETNMAPFVARBPROC glGetnMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
extern PFNGLUXGETNMAPIVARBPROC glGetnMapivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
extern PFNGLUXGETNPIXELMAPFVARBPROC glGetnPixelMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
extern PFNGLUXGETNPIXELMAPUIVARBPROC glGetnPixelMapuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
extern PFNGLUXGETNPIXELMAPUSVARBPROC glGetnPixelMapusvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
extern PFNGLUXGETNPOLYGONSTIPPLEARBPROC glGetnPolygonStippleARB;
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
extern PFNGLUXGETNCOLORTABLEARBPROC glGetnColorTableARB;
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
extern PFNGLUXGETNCONVOLUTIONFILTERARBPROC glGetnConvolutionFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
extern PFNGLUXGETNSEPARABLEFILTERARBPROC glGetnSeparableFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
extern PFNGLUXGETNHISTOGRAMARBPROC glGetnHistogramARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
extern PFNGLUXGETNMINMAXARBPROC glGetnMinmaxARB;
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
extern PFNGLUXGETNTEXIMAGEARBPROC glGetnTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
extern PFNGLUXREADNPIXELSARBPROC glReadnPixelsARB;
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
extern PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC glGetnCompressedTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
extern PFNGLUXGETNUNIFORMFVARBPROC glGetnUniformfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
extern PFNGLUXGETNUNIFORMIVARBPROC glGetnUniformivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
extern PFNGLUXGETNUNIFORMUIVARBPROC glGetnUniformuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
extern PFNGLUXGETNUNIFORMDVARBPROC glGetnUniformdvARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_robustness__
#define __GLUX_GL_ARB_robustness__

GLUX_NEW_PLUGIN(GL_ARB_robustness);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB
#  define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#endif
#ifndef GL_LOSE_CONTEXT_ON_RESET_ARB
#  define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
#endif
#ifndef GL_GUILTY_CONTEXT_RESET_ARB
#  define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
#endif
#ifndef GL_INNOCENT_CONTEXT_RESET_ARB
#  define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
#endif
#ifndef GL_UNKNOWN_CONTEXT_RESET_ARB
#  define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
#endif
#ifndef GL_RESET_NOTIFICATION_STRATEGY_ARB
#  define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#endif
#ifndef GL_NO_RESET_NOTIFICATION_ARB
#  define GL_NO_RESET_NOTIFICATION_ARB 0x8261
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
typedef GLenum (APIENTRYP PFNGLUXGETGRAPHICSRESETSTATUSARBPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
typedef void (APIENTRYP PFNGLUXGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
typedef void (APIENTRYP PFNGLUXGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
typedef void (APIENTRYP PFNGLUXGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
typedef void (APIENTRYP PFNGLUXGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
typedef void (APIENTRYP PFNGLUXGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
typedef void (APIENTRYP PFNGLUXGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
typedef void (APIENTRYP PFNGLUXGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
typedef void (APIENTRYP PFNGLUXGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
typedef void (APIENTRYP PFNGLUXGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
typedef void (APIENTRYP PFNGLUXGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
typedef void (APIENTRYP PFNGLUXREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
extern PFNGLUXGETGRAPHICSRESETSTATUSARBPROC glGetGraphicsResetStatusARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
extern PFNGLUXGETNMAPDVARBPROC glGetnMapdvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
extern PFNGLUXGETNMAPFVARBPROC glGetnMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
extern PFNGLUXGETNMAPIVARBPROC glGetnMapivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
extern PFNGLUXGETNPIXELMAPFVARBPROC glGetnPixelMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
extern PFNGLUXGETNPIXELMAPUIVARBPROC glGetnPixelMapuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
extern PFNGLUXGETNPIXELMAPUSVARBPROC glGetnPixelMapusvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
extern PFNGLUXGETNPOLYGONSTIPPLEARBPROC glGetnPolygonStippleARB;
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
extern PFNGLUXGETNCOLORTABLEARBPROC glGetnColorTableARB;
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
extern PFNGLUXGETNCONVOLUTIONFILTERARBPROC glGetnConvolutionFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
extern PFNGLUXGETNSEPARABLEFILTERARBPROC glGetnSeparableFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
extern PFNGLUXGETNHISTOGRAMARBPROC glGetnHistogramARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
extern PFNGLUXGETNMINMAXARBPROC glGetnMinmaxARB;
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
extern PFNGLUXGETNTEXIMAGEARBPROC glGetnTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
extern PFNGLUXREADNPIXELSARBPROC glReadnPixelsARB;
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
extern PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC glGetnCompressedTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
extern PFNGLUXGETNUNIFORMFVARBPROC glGetnUniformfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
extern PFNGLUXGETNUNIFORMIVARBPROC glGetnUniformivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
extern PFNGLUXGETNUNIFORMUIVARBPROC glGetnUniformuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
extern PFNGLUXGETNUNIFORMDVARBPROC glGetnUniformdvARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_robustness__
#define __GLUX_GL_ARB_robustness__

GLUX_NEW_PLUGIN(GL_ARB_robustness);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB
#  define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#endif
#ifndef GL_LOSE_CONTEXT_ON_RESET_ARB
#  define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
#endif
#ifndef GL_GUILTY_CONTEXT_RESET_ARB
#  define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
#endif
#ifndef GL_INNOCENT_CONTEXT_RESET_ARB
#  define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
#endif
#ifndef GL_UNKNOWN_CONTEXT_RESET_ARB
#  define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
#endif
#ifndef GL_RESET_NOTIFICATION_STRATEGY_ARB
#  define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#endif
#ifndef GL_NO_RESET_NOTIFICATION_ARB
#  define GL_NO_RESET_NOTIFICATION_ARB 0x8261
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
typedef GLenum (APIENTRYP PFNGLUXGETGRAPHICSRESETSTATUSARBPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
typedef void (APIENTRYP PFNGLUXGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
typedef void (APIENTRYP PFNGLUXGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
typedef void (APIENTRYP PFNGLUXGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
typedef void (APIENTRYP PFNGLUXGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
typedef void (APIENTRYP PFNGLUXGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
typedef void (APIENTRYP PFNGLUXGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
typedef void (APIENTRYP PFNGLUXGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
typedef void (APIENTRYP PFNGLUXGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
typedef void (APIENTRYP PFNGLUXGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
typedef void (APIENTRYP PFNGLUXGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
typedef void (APIENTRYP PFNGLUXREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
extern PFNGLUXGETGRAPHICSRESETSTATUSARBPROC glGetGraphicsResetStatusARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
extern PFNGLUXGETNMAPDVARBPROC glGetnMapdvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
extern PFNGLUXGETNMAPFVARBPROC glGetnMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
extern PFNGLUXGETNMAPIVARBPROC glGetnMapivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
extern PFNGLUXGETNPIXELMAPFVARBPROC glGetnPixelMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
extern PFNGLUXGETNPIXELMAPUIVARBPROC glGetnPixelMapuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
extern PFNGLUXGETNPIXELMAPUSVARBPROC glGetnPixelMapusvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
extern PFNGLUXGETNPOLYGONSTIPPLEARBPROC glGetnPolygonStippleARB;
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
extern PFNGLUXGETNCOLORTABLEARBPROC glGetnColorTableARB;
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
extern PFNGLUXGETNCONVOLUTIONFILTERARBPROC glGetnConvolutionFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
extern PFNGLUXGETNSEPARABLEFILTERARBPROC glGetnSeparableFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
extern PFNGLUXGETNHISTOGRAMARBPROC glGetnHistogramARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
extern PFNGLUXGETNMINMAXARBPROC glGetnMinmaxARB;
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
extern PFNGLUXGETNTEXIMAGEARBPROC glGetnTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
extern PFNGLUXREADNPIXELSARBPROC glReadnPixelsARB;
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
extern PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC glGetnCompressedTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
extern PFNGLUXGETNUNIFORMFVARBPROC glGetnUniformfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
extern PFNGLUXGETNUNIFORMIVARBPROC glGetnUniformivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
extern PFNGLUXGETNUNIFORMUIVARBPROC glGetnUniformuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
extern PFNGLUXGETNUNIFORMDVARBPROC glGetnUniformdvARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:41:59 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_robustness__
#define __GLUX_GL_ARB_robustness__

GLUX_NEW_PLUGIN(GL_ARB_robustness);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB
#  define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#endif
#ifndef GL_LOSE_CONTEXT_ON_RESET_ARB
#  define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
#endif
#ifndef GL_GUILTY_CONTEXT_RESET_ARB
#  define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
#endif
#ifndef GL_INNOCENT_CONTEXT_RESET_ARB
#  define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
#endif
#ifndef GL_UNKNOWN_CONTEXT_RESET_ARB
#  define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
#endif
#ifndef GL_RESET_NOTIFICATION_STRATEGY_ARB
#  define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#endif
#ifndef GL_NO_RESET_NOTIFICATION_ARB
#  define GL_NO_RESET_NOTIFICATION_ARB 0x8261
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
typedef GLenum (APIENTRYP PFNGLUXGETGRAPHICSRESETSTATUSARBPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
typedef void (APIENTRYP PFNGLUXGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
typedef void (APIENTRYP PFNGLUXGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
typedef void (APIENTRYP PFNGLUXGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
typedef void (APIENTRYP PFNGLUXGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
typedef void (APIENTRYP PFNGLUXGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
typedef void (APIENTRYP PFNGLUXGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
typedef void (APIENTRYP PFNGLUXGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
typedef void (APIENTRYP PFNGLUXGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
typedef void (APIENTRYP PFNGLUXGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
typedef void (APIENTRYP PFNGLUXGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
typedef void (APIENTRYP PFNGLUXREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
extern PFNGLUXGETGRAPHICSRESETSTATUSARBPROC glGetGraphicsResetStatusARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
extern PFNGLUXGETNMAPDVARBPROC glGetnMapdvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
extern PFNGLUXGETNMAPFVARBPROC glGetnMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
extern PFNGLUXGETNMAPIVARBPROC glGetnMapivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
extern PFNGLUXGETNPIXELMAPFVARBPROC glGetnPixelMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
extern PFNGLUXGETNPIXELMAPUIVARBPROC glGetnPixelMapuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
extern PFNGLUXGETNPIXELMAPUSVARBPROC glGetnPixelMapusvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
extern PFNGLUXGETNPOLYGONSTIPPLEARBPROC glGetnPolygonStippleARB;
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
extern PFNGLUXGETNCOLORTABLEARBPROC glGetnColorTableARB;
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
extern PFNGLUXGETNCONVOLUTIONFILTERARBPROC glGetnConvolutionFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
extern PFNGLUXGETNSEPARABLEFILTERARBPROC glGetnSeparableFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
extern PFNGLUXGETNHISTOGRAMARBPROC glGetnHistogramARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
extern PFNGLUXGETNMINMAXARBPROC glGetnMinmaxARB;
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
extern PFNGLUXGETNTEXIMAGEARBPROC glGetnTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
extern PFNGLUXREADNPIXELSARBPROC glReadnPixelsARB;
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
extern PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC glGetnCompressedTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
extern PFNGLUXGETNUNIFORMFVARBPROC glGetnUniformfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
extern PFNGLUXGETNUNIFORMIVARBPROC glGetnUniformivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
extern PFNGLUXGETNUNIFORMUIVARBPROC glGetnUniformuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
extern PFNGLUXGETNUNIFORMDVARBPROC glGetnUniformdvARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:40 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_robustness__
#define __GLUX_GL_ARB_robustness__

GLUX_NEW_PLUGIN(GL_ARB_robustness);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB
#  define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#endif
#ifndef GL_LOSE_CONTEXT_ON_RESET_ARB
#  define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
#endif
#ifndef GL_GUILTY_CONTEXT_RESET_ARB
#  define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
#endif
#ifndef GL_INNOCENT_CONTEXT_RESET_ARB
#  define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
#endif
#ifndef GL_UNKNOWN_CONTEXT_RESET_ARB
#  define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
#endif
#ifndef GL_RESET_NOTIFICATION_STRATEGY_ARB
#  define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#endif
#ifndef GL_NO_RESET_NOTIFICATION_ARB
#  define GL_NO_RESET_NOTIFICATION_ARB 0x8261
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
typedef GLenum (APIENTRYP PFNGLUXGETGRAPHICSRESETSTATUSARBPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
typedef void (APIENTRYP PFNGLUXGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
typedef void (APIENTRYP PFNGLUXGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
typedef void (APIENTRYP PFNGLUXGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
typedef void (APIENTRYP PFNGLUXGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
typedef void (APIENTRYP PFNGLUXGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
typedef void (APIENTRYP PFNGLUXGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
typedef void (APIENTRYP PFNGLUXGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
typedef void (APIENTRYP PFNGLUXGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
typedef void (APIENTRYP PFNGLUXGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
typedef void (APIENTRYP PFNGLUXGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
typedef void (APIENTRYP PFNGLUXREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
extern PFNGLUXGETGRAPHICSRESETSTATUSARBPROC glGetGraphicsResetStatusARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
extern PFNGLUXGETNMAPDVARBPROC glGetnMapdvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
extern PFNGLUXGETNMAPFVARBPROC glGetnMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
extern PFNGLUXGETNMAPIVARBPROC glGetnMapivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
extern PFNGLUXGETNPIXELMAPFVARBPROC glGetnPixelMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
extern PFNGLUXGETNPIXELMAPUIVARBPROC glGetnPixelMapuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
extern PFNGLUXGETNPIXELMAPUSVARBPROC glGetnPixelMapusvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
extern PFNGLUXGETNPOLYGONSTIPPLEARBPROC glGetnPolygonStippleARB;
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
extern PFNGLUXGETNCOLORTABLEARBPROC glGetnColorTableARB;
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
extern PFNGLUXGETNCONVOLUTIONFILTERARBPROC glGetnConvolutionFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
extern PFNGLUXGETNSEPARABLEFILTERARBPROC glGetnSeparableFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
extern PFNGLUXGETNHISTOGRAMARBPROC glGetnHistogramARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
extern PFNGLUXGETNMINMAXARBPROC glGetnMinmaxARB;
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
extern PFNGLUXGETNTEXIMAGEARBPROC glGetnTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
extern PFNGLUXREADNPIXELSARBPROC glReadnPixelsARB;
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
extern PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC glGetnCompressedTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
extern PFNGLUXGETNUNIFORMFVARBPROC glGetnUniformfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
extern PFNGLUXGETNUNIFORMIVARBPROC glGetnUniformivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
extern PFNGLUXGETNUNIFORMUIVARBPROC glGetnUniformuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
extern PFNGLUXGETNUNIFORMDVARBPROC glGetnUniformdvARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:09:59 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_robustness__
#define __GLUX_GL_ARB_robustness__

GLUX_NEW_PLUGIN(GL_ARB_robustness);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB
#  define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#endif
#ifndef GL_LOSE_CONTEXT_ON_RESET_ARB
#  define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
#endif
#ifndef GL_GUILTY_CONTEXT_RESET_ARB
#  define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
#endif
#ifndef GL_INNOCENT_CONTEXT_RESET_ARB
#  define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
#endif
#ifndef GL_UNKNOWN_CONTEXT_RESET_ARB
#  define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
#endif
#ifndef GL_RESET_NOTIFICATION_STRATEGY_ARB
#  define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#endif
#ifndef GL_NO_RESET_NOTIFICATION_ARB
#  define GL_NO_RESET_NOTIFICATION_ARB 0x8261
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
typedef GLenum (APIENTRYP PFNGLUXGETGRAPHICSRESETSTATUSARBPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
typedef void (APIENTRYP PFNGLUXGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
typedef void (APIENTRYP PFNGLUXGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
typedef void (APIENTRYP PFNGLUXGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
typedef void (APIENTRYP PFNGLUXGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
typedef void (APIENTRYP PFNGLUXGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
typedef void (APIENTRYP PFNGLUXGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
typedef void (APIENTRYP PFNGLUXGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
typedef void (APIENTRYP PFNGLUXGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
typedef void (APIENTRYP PFNGLUXGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
typedef void (APIENTRYP PFNGLUXGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
typedef void (APIENTRYP PFNGLUXREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
extern PFNGLUXGETGRAPHICSRESETSTATUSARBPROC glGetGraphicsResetStatusARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
extern PFNGLUXGETNMAPDVARBPROC glGetnMapdvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
extern PFNGLUXGETNMAPFVARBPROC glGetnMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
extern PFNGLUXGETNMAPIVARBPROC glGetnMapivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
extern PFNGLUXGETNPIXELMAPFVARBPROC glGetnPixelMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
extern PFNGLUXGETNPIXELMAPUIVARBPROC glGetnPixelMapuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
extern PFNGLUXGETNPIXELMAPUSVARBPROC glGetnPixelMapusvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
extern PFNGLUXGETNPOLYGONSTIPPLEARBPROC glGetnPolygonStippleARB;
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
extern PFNGLUXGETNCOLORTABLEARBPROC glGetnColorTableARB;
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
extern PFNGLUXGETNCONVOLUTIONFILTERARBPROC glGetnConvolutionFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
extern PFNGLUXGETNSEPARABLEFILTERARBPROC glGetnSeparableFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
extern PFNGLUXGETNHISTOGRAMARBPROC glGetnHistogramARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
extern PFNGLUXGETNMINMAXARBPROC glGetnMinmaxARB;
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
extern PFNGLUXGETNTEXIMAGEARBPROC glGetnTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
extern PFNGLUXREADNPIXELSARBPROC glReadnPixelsARB;
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
extern PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC glGetnCompressedTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
extern PFNGLUXGETNUNIFORMFVARBPROC glGetnUniformfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
extern PFNGLUXGETNUNIFORMIVARBPROC glGetnUniformivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
extern PFNGLUXGETNUNIFORMUIVARBPROC glGetnUniformuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
extern PFNGLUXGETNUNIFORMDVARBPROC glGetnUniformdvARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:20:00 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_robustness__
#define __GLUX_GL_ARB_robustness__

GLUX_NEW_PLUGIN(GL_ARB_robustness);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB
#  define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#endif
#ifndef GL_LOSE_CONTEXT_ON_RESET_ARB
#  define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
#endif
#ifndef GL_GUILTY_CONTEXT_RESET_ARB
#  define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
#endif
#ifndef GL_INNOCENT_CONTEXT_RESET_ARB
#  define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
#endif
#ifndef GL_UNKNOWN_CONTEXT_RESET_ARB
#  define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
#endif
#ifndef GL_RESET_NOTIFICATION_STRATEGY_ARB
#  define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#endif
#ifndef GL_NO_RESET_NOTIFICATION_ARB
#  define GL_NO_RESET_NOTIFICATION_ARB 0x8261
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
typedef GLenum (APIENTRYP PFNGLUXGETGRAPHICSRESETSTATUSARBPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
typedef void (APIENTRYP PFNGLUXGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
typedef void (APIENTRYP PFNGLUXGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
typedef void (APIENTRYP PFNGLUXGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
typedef void (APIENTRYP PFNGLUXGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
typedef void (APIENTRYP PFNGLUXGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
typedef void (APIENTRYP PFNGLUXGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
typedef void (APIENTRYP PFNGLUXGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
typedef void (APIENTRYP PFNGLUXGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
typedef void (APIENTRYP PFNGLUXGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
typedef void (APIENTRYP PFNGLUXGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
typedef void (APIENTRYP PFNGLUXREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
extern PFNGLUXGETGRAPHICSRESETSTATUSARBPROC glGetGraphicsResetStatusARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
extern PFNGLUXGETNMAPDVARBPROC glGetnMapdvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
extern PFNGLUXGETNMAPFVARBPROC glGetnMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
extern PFNGLUXGETNMAPIVARBPROC glGetnMapivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
extern PFNGLUXGETNPIXELMAPFVARBPROC glGetnPixelMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
extern PFNGLUXGETNPIXELMAPUIVARBPROC glGetnPixelMapuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
extern PFNGLUXGETNPIXELMAPUSVARBPROC glGetnPixelMapusvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
extern PFNGLUXGETNPOLYGONSTIPPLEARBPROC glGetnPolygonStippleARB;
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
extern PFNGLUXGETNCOLORTABLEARBPROC glGetnColorTableARB;
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
extern PFNGLUXGETNCONVOLUTIONFILTERARBPROC glGetnConvolutionFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
extern PFNGLUXGETNSEPARABLEFILTERARBPROC glGetnSeparableFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
extern PFNGLUXGETNHISTOGRAMARBPROC glGetnHistogramARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
extern PFNGLUXGETNMINMAXARBPROC glGetnMinmaxARB;
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
extern PFNGLUXGETNTEXIMAGEARBPROC glGetnTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
extern PFNGLUXREADNPIXELSARBPROC glReadnPixelsARB;
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
extern PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC glGetnCompressedTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
extern PFNGLUXGETNUNIFORMFVARBPROC glGetnUniformfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
extern PFNGLUXGETNUNIFORMIVARBPROC glGetnUniformivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
extern PFNGLUXGETNUNIFORMUIVARBPROC glGetnUniformuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
extern PFNGLUXGETNUNIFORMDVARBPROC glGetnUniformdvARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:42:58 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_robustness__
#define __GLUX_GL_ARB_robustness__

GLUX_NEW_PLUGIN(GL_ARB_robustness)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB
#  define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#endif
#ifndef GL_LOSE_CONTEXT_ON_RESET_ARB
#  define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
#endif
#ifndef GL_GUILTY_CONTEXT_RESET_ARB
#  define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
#endif
#ifndef GL_INNOCENT_CONTEXT_RESET_ARB
#  define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
#endif
#ifndef GL_UNKNOWN_CONTEXT_RESET_ARB
#  define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
#endif
#ifndef GL_RESET_NOTIFICATION_STRATEGY_ARB
#  define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#endif
#ifndef GL_NO_RESET_NOTIFICATION_ARB
#  define GL_NO_RESET_NOTIFICATION_ARB 0x8261
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
typedef GLenum (APIENTRYP PFNGLUXGETGRAPHICSRESETSTATUSARBPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
typedef void (APIENTRYP PFNGLUXGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
typedef void (APIENTRYP PFNGLUXGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
typedef void (APIENTRYP PFNGLUXGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
typedef void (APIENTRYP PFNGLUXGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
typedef void (APIENTRYP PFNGLUXGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
typedef void (APIENTRYP PFNGLUXGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
typedef void (APIENTRYP PFNGLUXGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
typedef void (APIENTRYP PFNGLUXGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
typedef void (APIENTRYP PFNGLUXGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
typedef void (APIENTRYP PFNGLUXGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
typedef void (APIENTRYP PFNGLUXREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
typedef void (APIENTRYP PFNGLUXGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatusARB
extern PFNGLUXGETGRAPHICSRESETSTATUSARBPROC glGetGraphicsResetStatusARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapdvARB
extern PFNGLUXGETNMAPDVARBPROC glGetnMapdvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapfvARB
extern PFNGLUXGETNMAPFVARBPROC glGetnMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMapivARB
extern PFNGLUXGETNMAPIVARBPROC glGetnMapivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfvARB
extern PFNGLUXGETNPIXELMAPFVARBPROC glGetnPixelMapfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuivARB
extern PFNGLUXGETNPIXELMAPUIVARBPROC glGetnPixelMapuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusvARB
extern PFNGLUXGETNPIXELMAPUSVARBPROC glGetnPixelMapusvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStippleARB
extern PFNGLUXGETNPOLYGONSTIPPLEARBPROC glGetnPolygonStippleARB;
#endif
#ifndef __GLUX__GLFCT_glGetnColorTableARB
extern PFNGLUXGETNCOLORTABLEARBPROC glGetnColorTableARB;
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilterARB
extern PFNGLUXGETNCONVOLUTIONFILTERARBPROC glGetnConvolutionFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilterARB
extern PFNGLUXGETNSEPARABLEFILTERARBPROC glGetnSeparableFilterARB;
#endif
#ifndef __GLUX__GLFCT_glGetnHistogramARB
extern PFNGLUXGETNHISTOGRAMARBPROC glGetnHistogramARB;
#endif
#ifndef __GLUX__GLFCT_glGetnMinmaxARB
extern PFNGLUXGETNMINMAXARBPROC glGetnMinmaxARB;
#endif
#ifndef __GLUX__GLFCT_glGetnTexImageARB
extern PFNGLUXGETNTEXIMAGEARBPROC glGetnTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glReadnPixelsARB
extern PFNGLUXREADNPIXELSARBPROC glReadnPixelsARB;
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImageARB
extern PFNGLUXGETNCOMPRESSEDTEXIMAGEARBPROC glGetnCompressedTexImageARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfvARB
extern PFNGLUXGETNUNIFORMFVARBPROC glGetnUniformfvARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformivARB
extern PFNGLUXGETNUNIFORMIVARBPROC glGetnUniformivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuivARB
extern PFNGLUXGETNUNIFORMUIVARBPROC glGetnUniformuivARB;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdvARB
extern PFNGLUXGETNUNIFORMDVARBPROC glGetnUniformdvARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
