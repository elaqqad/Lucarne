
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:26 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_framebuffer_object__
#define __GLUX_GL_ARB_framebuffer_object__

GLUX_NEW_PLUGIN(GL_ARB_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION
#  define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
#  define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#endif
#ifndef GL_FRAMEBUFFER_DEFAULT
#  define GL_FRAMEBUFFER_DEFAULT 0x8218
#endif
#ifndef GL_FRAMEBUFFER_UNDEFINED
#  define GL_FRAMEBUFFER_UNDEFINED 0x8219
#endif
#ifndef GL_DEPTH_STENCIL_ATTACHMENT
#  define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE
#  define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#endif
#ifndef GL_DEPTH_STENCIL
#  define GL_DEPTH_STENCIL 0x84F9
#endif
#ifndef GL_UNSIGNED_INT_24_8
#  define GL_UNSIGNED_INT_24_8 0x84FA
#endif
#ifndef GL_DEPTH24_STENCIL8
#  define GL_DEPTH24_STENCIL8 0x88F0
#endif
#ifndef GL_TEXTURE_STENCIL_SIZE
#  define GL_TEXTURE_STENCIL_SIZE 0x88F1
#endif
#ifndef GL_TEXTURE_RED_TYPE
#  define GL_TEXTURE_RED_TYPE 0x8C10
#endif
#ifndef GL_TEXTURE_GREEN_TYPE
#  define GL_TEXTURE_GREEN_TYPE 0x8C11
#endif
#ifndef GL_TEXTURE_BLUE_TYPE
#  define GL_TEXTURE_BLUE_TYPE 0x8C12
#endif
#ifndef GL_TEXTURE_ALPHA_TYPE
#  define GL_TEXTURE_ALPHA_TYPE 0x8C13
#endif
#ifndef GL_TEXTURE_DEPTH_TYPE
#  define GL_TEXTURE_DEPTH_TYPE 0x8C16
#endif
#ifndef GL_UNSIGNED_NORMALIZED
#  define GL_UNSIGNED_NORMALIZED 0x8C17
#endif
#ifndef GL_FRAMEBUFFER_BINDING
#  define GL_FRAMEBUFFER_BINDING 0x8CA6
#endif
#ifndef GL_DRAW_FRAMEBUFFER_BINDING
#  define GL_DRAW_FRAMEBUFFER_BINDING GL_FRAMEBUFFER_BINDING
#endif
#ifndef GL_RENDERBUFFER_BINDING
#  define GL_RENDERBUFFER_BINDING 0x8CA7
#endif
#ifndef GL_READ_FRAMEBUFFER
#  define GL_READ_FRAMEBUFFER 0x8CA8
#endif
#ifndef GL_DRAW_FRAMEBUFFER
#  define GL_DRAW_FRAMEBUFFER 0x8CA9
#endif
#ifndef GL_READ_FRAMEBUFFER_BINDING
#  define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#endif
#ifndef GL_RENDERBUFFER_SAMPLES
#  define GL_RENDERBUFFER_SAMPLES 0x8CAB
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE
#  define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED
#  define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS
#  define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0
#  define GL_COLOR_ATTACHMENT0 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1
#  define GL_COLOR_ATTACHMENT1 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2
#  define GL_COLOR_ATTACHMENT2 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3
#  define GL_COLOR_ATTACHMENT3 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4
#  define GL_COLOR_ATTACHMENT4 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5
#  define GL_COLOR_ATTACHMENT5 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6
#  define GL_COLOR_ATTACHMENT6 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7
#  define GL_COLOR_ATTACHMENT7 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8
#  define GL_COLOR_ATTACHMENT8 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9
#  define GL_COLOR_ATTACHMENT9 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10
#  define GL_COLOR_ATTACHMENT10 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11
#  define GL_COLOR_ATTACHMENT11 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12
#  define GL_COLOR_ATTACHMENT12 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13
#  define GL_COLOR_ATTACHMENT13 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14
#  define GL_COLOR_ATTACHMENT14 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15
#  define GL_COLOR_ATTACHMENT15 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT
#  define GL_DEPTH_ATTACHMENT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT
#  define GL_STENCIL_ATTACHMENT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER
#  define GL_FRAMEBUFFER 0x8D40
#endif
#ifndef GL_RENDERBUFFER
#  define GL_RENDERBUFFER 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH
#  define GL_RENDERBUFFER_WIDTH 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT
#  define GL_RENDERBUFFER_HEIGHT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1
#  define GL_STENCIL_INDEX1 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4
#  define GL_STENCIL_INDEX4 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8
#  define GL_STENCIL_INDEX8 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16
#  define GL_STENCIL_INDEX16 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE
#  define GL_RENDERBUFFER_RED_SIZE 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE
#  define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE
#  define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE
#  define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE
#  define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE
#  define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
#  define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#endif
#ifndef GL_MAX_SAMPLES
#  define GL_MAX_SAMPLES 0x8D57
#endif
#ifndef GL_INDEX
#  define GL_INDEX 0x8222
#endif
#ifndef GL_TEXTURE_LUMINANCE_TYPE
#  define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#endif
#ifndef GL_TEXTURE_INTENSITY_TYPE
#  define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbuffer
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFERPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFERPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
typedef void (APIENTRYP PFNGLUXBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbuffer
extern PFNGLUXISRENDERBUFFERPROC glIsRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
extern PFNGLUXBINDRENDERBUFFERPROC glBindRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
extern PFNGLUXDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
extern PFNGLUXGENRENDERBUFFERSPROC glGenRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
extern PFNGLUXRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
extern PFNGLUXGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
extern PFNGLUXISFRAMEBUFFERPROC glIsFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
extern PFNGLUXBINDFRAMEBUFFERPROC glBindFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
extern PFNGLUXDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
extern PFNGLUXGENFRAMEBUFFERSPROC glGenFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
extern PFNGLUXCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
extern PFNGLUXFRAMEBUFFERTEXTURE1DPROC glFramebufferTexture1D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
extern PFNGLUXFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
extern PFNGLUXFRAMEBUFFERTEXTURE3DPROC glFramebufferTexture3D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
extern PFNGLUXFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetFramebufferAttachmentParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
extern PFNGLUXGENERATEMIPMAPPROC glGenerateMipmap;
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
extern PFNGLUXBLITFRAMEBUFFERPROC glBlitFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
extern PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC glRenderbufferStorageMultisample;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
extern PFNGLUXFRAMEBUFFERTEXTURELAYERPROC glFramebufferTextureLayer;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:43 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_framebuffer_object__
#define __GLUX_GL_ARB_framebuffer_object__

GLUX_NEW_PLUGIN(GL_ARB_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION
#  define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
#  define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#endif
#ifndef GL_FRAMEBUFFER_DEFAULT
#  define GL_FRAMEBUFFER_DEFAULT 0x8218
#endif
#ifndef GL_FRAMEBUFFER_UNDEFINED
#  define GL_FRAMEBUFFER_UNDEFINED 0x8219
#endif
#ifndef GL_DEPTH_STENCIL_ATTACHMENT
#  define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE
#  define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#endif
#ifndef GL_DEPTH_STENCIL
#  define GL_DEPTH_STENCIL 0x84F9
#endif
#ifndef GL_UNSIGNED_INT_24_8
#  define GL_UNSIGNED_INT_24_8 0x84FA
#endif
#ifndef GL_DEPTH24_STENCIL8
#  define GL_DEPTH24_STENCIL8 0x88F0
#endif
#ifndef GL_TEXTURE_STENCIL_SIZE
#  define GL_TEXTURE_STENCIL_SIZE 0x88F1
#endif
#ifndef GL_TEXTURE_RED_TYPE
#  define GL_TEXTURE_RED_TYPE 0x8C10
#endif
#ifndef GL_TEXTURE_GREEN_TYPE
#  define GL_TEXTURE_GREEN_TYPE 0x8C11
#endif
#ifndef GL_TEXTURE_BLUE_TYPE
#  define GL_TEXTURE_BLUE_TYPE 0x8C12
#endif
#ifndef GL_TEXTURE_ALPHA_TYPE
#  define GL_TEXTURE_ALPHA_TYPE 0x8C13
#endif
#ifndef GL_TEXTURE_DEPTH_TYPE
#  define GL_TEXTURE_DEPTH_TYPE 0x8C16
#endif
#ifndef GL_UNSIGNED_NORMALIZED
#  define GL_UNSIGNED_NORMALIZED 0x8C17
#endif
#ifndef GL_FRAMEBUFFER_BINDING
#  define GL_FRAMEBUFFER_BINDING 0x8CA6
#endif
#ifndef GL_DRAW_FRAMEBUFFER_BINDING
#  define GL_DRAW_FRAMEBUFFER_BINDING GL_FRAMEBUFFER_BINDING
#endif
#ifndef GL_RENDERBUFFER_BINDING
#  define GL_RENDERBUFFER_BINDING 0x8CA7
#endif
#ifndef GL_READ_FRAMEBUFFER
#  define GL_READ_FRAMEBUFFER 0x8CA8
#endif
#ifndef GL_DRAW_FRAMEBUFFER
#  define GL_DRAW_FRAMEBUFFER 0x8CA9
#endif
#ifndef GL_READ_FRAMEBUFFER_BINDING
#  define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#endif
#ifndef GL_RENDERBUFFER_SAMPLES
#  define GL_RENDERBUFFER_SAMPLES 0x8CAB
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE
#  define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED
#  define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS
#  define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0
#  define GL_COLOR_ATTACHMENT0 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1
#  define GL_COLOR_ATTACHMENT1 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2
#  define GL_COLOR_ATTACHMENT2 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3
#  define GL_COLOR_ATTACHMENT3 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4
#  define GL_COLOR_ATTACHMENT4 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5
#  define GL_COLOR_ATTACHMENT5 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6
#  define GL_COLOR_ATTACHMENT6 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7
#  define GL_COLOR_ATTACHMENT7 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8
#  define GL_COLOR_ATTACHMENT8 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9
#  define GL_COLOR_ATTACHMENT9 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10
#  define GL_COLOR_ATTACHMENT10 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11
#  define GL_COLOR_ATTACHMENT11 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12
#  define GL_COLOR_ATTACHMENT12 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13
#  define GL_COLOR_ATTACHMENT13 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14
#  define GL_COLOR_ATTACHMENT14 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15
#  define GL_COLOR_ATTACHMENT15 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT
#  define GL_DEPTH_ATTACHMENT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT
#  define GL_STENCIL_ATTACHMENT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER
#  define GL_FRAMEBUFFER 0x8D40
#endif
#ifndef GL_RENDERBUFFER
#  define GL_RENDERBUFFER 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH
#  define GL_RENDERBUFFER_WIDTH 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT
#  define GL_RENDERBUFFER_HEIGHT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1
#  define GL_STENCIL_INDEX1 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4
#  define GL_STENCIL_INDEX4 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8
#  define GL_STENCIL_INDEX8 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16
#  define GL_STENCIL_INDEX16 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE
#  define GL_RENDERBUFFER_RED_SIZE 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE
#  define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE
#  define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE
#  define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE
#  define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE
#  define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
#  define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#endif
#ifndef GL_MAX_SAMPLES
#  define GL_MAX_SAMPLES 0x8D57
#endif
#ifndef GL_INDEX
#  define GL_INDEX 0x8222
#endif
#ifndef GL_TEXTURE_LUMINANCE_TYPE
#  define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#endif
#ifndef GL_TEXTURE_INTENSITY_TYPE
#  define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbuffer
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFERPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFERPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
typedef void (APIENTRYP PFNGLUXBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbuffer
extern PFNGLUXISRENDERBUFFERPROC glIsRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
extern PFNGLUXBINDRENDERBUFFERPROC glBindRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
extern PFNGLUXDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
extern PFNGLUXGENRENDERBUFFERSPROC glGenRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
extern PFNGLUXRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
extern PFNGLUXGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
extern PFNGLUXISFRAMEBUFFERPROC glIsFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
extern PFNGLUXBINDFRAMEBUFFERPROC glBindFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
extern PFNGLUXDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
extern PFNGLUXGENFRAMEBUFFERSPROC glGenFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
extern PFNGLUXCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
extern PFNGLUXFRAMEBUFFERTEXTURE1DPROC glFramebufferTexture1D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
extern PFNGLUXFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
extern PFNGLUXFRAMEBUFFERTEXTURE3DPROC glFramebufferTexture3D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
extern PFNGLUXFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetFramebufferAttachmentParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
extern PFNGLUXGENERATEMIPMAPPROC glGenerateMipmap;
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
extern PFNGLUXBLITFRAMEBUFFERPROC glBlitFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
extern PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC glRenderbufferStorageMultisample;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
extern PFNGLUXFRAMEBUFFERTEXTURELAYERPROC glFramebufferTextureLayer;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:53 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_framebuffer_object__
#define __GLUX_GL_ARB_framebuffer_object__

GLUX_NEW_PLUGIN(GL_ARB_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION
#  define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
#  define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#endif
#ifndef GL_FRAMEBUFFER_DEFAULT
#  define GL_FRAMEBUFFER_DEFAULT 0x8218
#endif
#ifndef GL_FRAMEBUFFER_UNDEFINED
#  define GL_FRAMEBUFFER_UNDEFINED 0x8219
#endif
#ifndef GL_DEPTH_STENCIL_ATTACHMENT
#  define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE
#  define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#endif
#ifndef GL_DEPTH_STENCIL
#  define GL_DEPTH_STENCIL 0x84F9
#endif
#ifndef GL_UNSIGNED_INT_24_8
#  define GL_UNSIGNED_INT_24_8 0x84FA
#endif
#ifndef GL_DEPTH24_STENCIL8
#  define GL_DEPTH24_STENCIL8 0x88F0
#endif
#ifndef GL_TEXTURE_STENCIL_SIZE
#  define GL_TEXTURE_STENCIL_SIZE 0x88F1
#endif
#ifndef GL_TEXTURE_RED_TYPE
#  define GL_TEXTURE_RED_TYPE 0x8C10
#endif
#ifndef GL_TEXTURE_GREEN_TYPE
#  define GL_TEXTURE_GREEN_TYPE 0x8C11
#endif
#ifndef GL_TEXTURE_BLUE_TYPE
#  define GL_TEXTURE_BLUE_TYPE 0x8C12
#endif
#ifndef GL_TEXTURE_ALPHA_TYPE
#  define GL_TEXTURE_ALPHA_TYPE 0x8C13
#endif
#ifndef GL_TEXTURE_DEPTH_TYPE
#  define GL_TEXTURE_DEPTH_TYPE 0x8C16
#endif
#ifndef GL_UNSIGNED_NORMALIZED
#  define GL_UNSIGNED_NORMALIZED 0x8C17
#endif
#ifndef GL_FRAMEBUFFER_BINDING
#  define GL_FRAMEBUFFER_BINDING 0x8CA6
#endif
#ifndef GL_DRAW_FRAMEBUFFER_BINDING
#  define GL_DRAW_FRAMEBUFFER_BINDING GL_FRAMEBUFFER_BINDING
#endif
#ifndef GL_RENDERBUFFER_BINDING
#  define GL_RENDERBUFFER_BINDING 0x8CA7
#endif
#ifndef GL_READ_FRAMEBUFFER
#  define GL_READ_FRAMEBUFFER 0x8CA8
#endif
#ifndef GL_DRAW_FRAMEBUFFER
#  define GL_DRAW_FRAMEBUFFER 0x8CA9
#endif
#ifndef GL_READ_FRAMEBUFFER_BINDING
#  define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#endif
#ifndef GL_RENDERBUFFER_SAMPLES
#  define GL_RENDERBUFFER_SAMPLES 0x8CAB
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE
#  define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED
#  define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS
#  define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0
#  define GL_COLOR_ATTACHMENT0 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1
#  define GL_COLOR_ATTACHMENT1 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2
#  define GL_COLOR_ATTACHMENT2 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3
#  define GL_COLOR_ATTACHMENT3 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4
#  define GL_COLOR_ATTACHMENT4 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5
#  define GL_COLOR_ATTACHMENT5 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6
#  define GL_COLOR_ATTACHMENT6 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7
#  define GL_COLOR_ATTACHMENT7 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8
#  define GL_COLOR_ATTACHMENT8 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9
#  define GL_COLOR_ATTACHMENT9 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10
#  define GL_COLOR_ATTACHMENT10 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11
#  define GL_COLOR_ATTACHMENT11 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12
#  define GL_COLOR_ATTACHMENT12 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13
#  define GL_COLOR_ATTACHMENT13 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14
#  define GL_COLOR_ATTACHMENT14 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15
#  define GL_COLOR_ATTACHMENT15 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT
#  define GL_DEPTH_ATTACHMENT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT
#  define GL_STENCIL_ATTACHMENT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER
#  define GL_FRAMEBUFFER 0x8D40
#endif
#ifndef GL_RENDERBUFFER
#  define GL_RENDERBUFFER 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH
#  define GL_RENDERBUFFER_WIDTH 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT
#  define GL_RENDERBUFFER_HEIGHT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1
#  define GL_STENCIL_INDEX1 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4
#  define GL_STENCIL_INDEX4 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8
#  define GL_STENCIL_INDEX8 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16
#  define GL_STENCIL_INDEX16 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE
#  define GL_RENDERBUFFER_RED_SIZE 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE
#  define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE
#  define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE
#  define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE
#  define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE
#  define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
#  define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#endif
#ifndef GL_MAX_SAMPLES
#  define GL_MAX_SAMPLES 0x8D57
#endif
#ifndef GL_INDEX
#  define GL_INDEX 0x8222
#endif
#ifndef GL_TEXTURE_LUMINANCE_TYPE
#  define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#endif
#ifndef GL_TEXTURE_INTENSITY_TYPE
#  define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbuffer
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFERPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFERPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
typedef void (APIENTRYP PFNGLUXBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbuffer
extern PFNGLUXISRENDERBUFFERPROC glIsRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
extern PFNGLUXBINDRENDERBUFFERPROC glBindRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
extern PFNGLUXDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
extern PFNGLUXGENRENDERBUFFERSPROC glGenRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
extern PFNGLUXRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
extern PFNGLUXGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
extern PFNGLUXISFRAMEBUFFERPROC glIsFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
extern PFNGLUXBINDFRAMEBUFFERPROC glBindFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
extern PFNGLUXDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
extern PFNGLUXGENFRAMEBUFFERSPROC glGenFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
extern PFNGLUXCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
extern PFNGLUXFRAMEBUFFERTEXTURE1DPROC glFramebufferTexture1D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
extern PFNGLUXFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
extern PFNGLUXFRAMEBUFFERTEXTURE3DPROC glFramebufferTexture3D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
extern PFNGLUXFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetFramebufferAttachmentParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
extern PFNGLUXGENERATEMIPMAPPROC glGenerateMipmap;
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
extern PFNGLUXBLITFRAMEBUFFERPROC glBlitFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
extern PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC glRenderbufferStorageMultisample;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
extern PFNGLUXFRAMEBUFFERTEXTURELAYERPROC glFramebufferTextureLayer;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:13 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_framebuffer_object__
#define __GLUX_GL_ARB_framebuffer_object__

GLUX_NEW_PLUGIN(GL_ARB_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION
#  define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
#  define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#endif
#ifndef GL_FRAMEBUFFER_DEFAULT
#  define GL_FRAMEBUFFER_DEFAULT 0x8218
#endif
#ifndef GL_FRAMEBUFFER_UNDEFINED
#  define GL_FRAMEBUFFER_UNDEFINED 0x8219
#endif
#ifndef GL_DEPTH_STENCIL_ATTACHMENT
#  define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE
#  define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#endif
#ifndef GL_DEPTH_STENCIL
#  define GL_DEPTH_STENCIL 0x84F9
#endif
#ifndef GL_UNSIGNED_INT_24_8
#  define GL_UNSIGNED_INT_24_8 0x84FA
#endif
#ifndef GL_DEPTH24_STENCIL8
#  define GL_DEPTH24_STENCIL8 0x88F0
#endif
#ifndef GL_TEXTURE_STENCIL_SIZE
#  define GL_TEXTURE_STENCIL_SIZE 0x88F1
#endif
#ifndef GL_TEXTURE_RED_TYPE
#  define GL_TEXTURE_RED_TYPE 0x8C10
#endif
#ifndef GL_TEXTURE_GREEN_TYPE
#  define GL_TEXTURE_GREEN_TYPE 0x8C11
#endif
#ifndef GL_TEXTURE_BLUE_TYPE
#  define GL_TEXTURE_BLUE_TYPE 0x8C12
#endif
#ifndef GL_TEXTURE_ALPHA_TYPE
#  define GL_TEXTURE_ALPHA_TYPE 0x8C13
#endif
#ifndef GL_TEXTURE_DEPTH_TYPE
#  define GL_TEXTURE_DEPTH_TYPE 0x8C16
#endif
#ifndef GL_UNSIGNED_NORMALIZED
#  define GL_UNSIGNED_NORMALIZED 0x8C17
#endif
#ifndef GL_FRAMEBUFFER_BINDING
#  define GL_FRAMEBUFFER_BINDING 0x8CA6
#endif
#ifndef GL_DRAW_FRAMEBUFFER_BINDING
#  define GL_DRAW_FRAMEBUFFER_BINDING GL_FRAMEBUFFER_BINDING
#endif
#ifndef GL_RENDERBUFFER_BINDING
#  define GL_RENDERBUFFER_BINDING 0x8CA7
#endif
#ifndef GL_READ_FRAMEBUFFER
#  define GL_READ_FRAMEBUFFER 0x8CA8
#endif
#ifndef GL_DRAW_FRAMEBUFFER
#  define GL_DRAW_FRAMEBUFFER 0x8CA9
#endif
#ifndef GL_READ_FRAMEBUFFER_BINDING
#  define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#endif
#ifndef GL_RENDERBUFFER_SAMPLES
#  define GL_RENDERBUFFER_SAMPLES 0x8CAB
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE
#  define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED
#  define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS
#  define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0
#  define GL_COLOR_ATTACHMENT0 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1
#  define GL_COLOR_ATTACHMENT1 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2
#  define GL_COLOR_ATTACHMENT2 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3
#  define GL_COLOR_ATTACHMENT3 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4
#  define GL_COLOR_ATTACHMENT4 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5
#  define GL_COLOR_ATTACHMENT5 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6
#  define GL_COLOR_ATTACHMENT6 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7
#  define GL_COLOR_ATTACHMENT7 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8
#  define GL_COLOR_ATTACHMENT8 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9
#  define GL_COLOR_ATTACHMENT9 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10
#  define GL_COLOR_ATTACHMENT10 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11
#  define GL_COLOR_ATTACHMENT11 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12
#  define GL_COLOR_ATTACHMENT12 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13
#  define GL_COLOR_ATTACHMENT13 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14
#  define GL_COLOR_ATTACHMENT14 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15
#  define GL_COLOR_ATTACHMENT15 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT
#  define GL_DEPTH_ATTACHMENT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT
#  define GL_STENCIL_ATTACHMENT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER
#  define GL_FRAMEBUFFER 0x8D40
#endif
#ifndef GL_RENDERBUFFER
#  define GL_RENDERBUFFER 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH
#  define GL_RENDERBUFFER_WIDTH 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT
#  define GL_RENDERBUFFER_HEIGHT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1
#  define GL_STENCIL_INDEX1 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4
#  define GL_STENCIL_INDEX4 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8
#  define GL_STENCIL_INDEX8 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16
#  define GL_STENCIL_INDEX16 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE
#  define GL_RENDERBUFFER_RED_SIZE 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE
#  define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE
#  define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE
#  define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE
#  define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE
#  define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
#  define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#endif
#ifndef GL_MAX_SAMPLES
#  define GL_MAX_SAMPLES 0x8D57
#endif
#ifndef GL_INDEX
#  define GL_INDEX 0x8222
#endif
#ifndef GL_TEXTURE_LUMINANCE_TYPE
#  define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#endif
#ifndef GL_TEXTURE_INTENSITY_TYPE
#  define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbuffer
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFERPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFERPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
typedef void (APIENTRYP PFNGLUXBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbuffer
extern PFNGLUXISRENDERBUFFERPROC glIsRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
extern PFNGLUXBINDRENDERBUFFERPROC glBindRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
extern PFNGLUXDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
extern PFNGLUXGENRENDERBUFFERSPROC glGenRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
extern PFNGLUXRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
extern PFNGLUXGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
extern PFNGLUXISFRAMEBUFFERPROC glIsFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
extern PFNGLUXBINDFRAMEBUFFERPROC glBindFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
extern PFNGLUXDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
extern PFNGLUXGENFRAMEBUFFERSPROC glGenFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
extern PFNGLUXCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
extern PFNGLUXFRAMEBUFFERTEXTURE1DPROC glFramebufferTexture1D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
extern PFNGLUXFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
extern PFNGLUXFRAMEBUFFERTEXTURE3DPROC glFramebufferTexture3D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
extern PFNGLUXFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetFramebufferAttachmentParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
extern PFNGLUXGENERATEMIPMAPPROC glGenerateMipmap;
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
extern PFNGLUXBLITFRAMEBUFFERPROC glBlitFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
extern PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC glRenderbufferStorageMultisample;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
extern PFNGLUXFRAMEBUFFERTEXTURELAYERPROC glFramebufferTextureLayer;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:30 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_framebuffer_object__
#define __GLUX_GL_ARB_framebuffer_object__

GLUX_NEW_PLUGIN(GL_ARB_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION
#  define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
#  define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#endif
#ifndef GL_FRAMEBUFFER_DEFAULT
#  define GL_FRAMEBUFFER_DEFAULT 0x8218
#endif
#ifndef GL_FRAMEBUFFER_UNDEFINED
#  define GL_FRAMEBUFFER_UNDEFINED 0x8219
#endif
#ifndef GL_DEPTH_STENCIL_ATTACHMENT
#  define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE
#  define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#endif
#ifndef GL_DEPTH_STENCIL
#  define GL_DEPTH_STENCIL 0x84F9
#endif
#ifndef GL_UNSIGNED_INT_24_8
#  define GL_UNSIGNED_INT_24_8 0x84FA
#endif
#ifndef GL_DEPTH24_STENCIL8
#  define GL_DEPTH24_STENCIL8 0x88F0
#endif
#ifndef GL_TEXTURE_STENCIL_SIZE
#  define GL_TEXTURE_STENCIL_SIZE 0x88F1
#endif
#ifndef GL_TEXTURE_RED_TYPE
#  define GL_TEXTURE_RED_TYPE 0x8C10
#endif
#ifndef GL_TEXTURE_GREEN_TYPE
#  define GL_TEXTURE_GREEN_TYPE 0x8C11
#endif
#ifndef GL_TEXTURE_BLUE_TYPE
#  define GL_TEXTURE_BLUE_TYPE 0x8C12
#endif
#ifndef GL_TEXTURE_ALPHA_TYPE
#  define GL_TEXTURE_ALPHA_TYPE 0x8C13
#endif
#ifndef GL_TEXTURE_DEPTH_TYPE
#  define GL_TEXTURE_DEPTH_TYPE 0x8C16
#endif
#ifndef GL_UNSIGNED_NORMALIZED
#  define GL_UNSIGNED_NORMALIZED 0x8C17
#endif
#ifndef GL_FRAMEBUFFER_BINDING
#  define GL_FRAMEBUFFER_BINDING 0x8CA6
#endif
#ifndef GL_DRAW_FRAMEBUFFER_BINDING
#  define GL_DRAW_FRAMEBUFFER_BINDING GL_FRAMEBUFFER_BINDING
#endif
#ifndef GL_RENDERBUFFER_BINDING
#  define GL_RENDERBUFFER_BINDING 0x8CA7
#endif
#ifndef GL_READ_FRAMEBUFFER
#  define GL_READ_FRAMEBUFFER 0x8CA8
#endif
#ifndef GL_DRAW_FRAMEBUFFER
#  define GL_DRAW_FRAMEBUFFER 0x8CA9
#endif
#ifndef GL_READ_FRAMEBUFFER_BINDING
#  define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#endif
#ifndef GL_RENDERBUFFER_SAMPLES
#  define GL_RENDERBUFFER_SAMPLES 0x8CAB
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE
#  define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED
#  define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS
#  define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0
#  define GL_COLOR_ATTACHMENT0 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1
#  define GL_COLOR_ATTACHMENT1 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2
#  define GL_COLOR_ATTACHMENT2 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3
#  define GL_COLOR_ATTACHMENT3 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4
#  define GL_COLOR_ATTACHMENT4 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5
#  define GL_COLOR_ATTACHMENT5 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6
#  define GL_COLOR_ATTACHMENT6 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7
#  define GL_COLOR_ATTACHMENT7 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8
#  define GL_COLOR_ATTACHMENT8 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9
#  define GL_COLOR_ATTACHMENT9 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10
#  define GL_COLOR_ATTACHMENT10 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11
#  define GL_COLOR_ATTACHMENT11 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12
#  define GL_COLOR_ATTACHMENT12 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13
#  define GL_COLOR_ATTACHMENT13 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14
#  define GL_COLOR_ATTACHMENT14 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15
#  define GL_COLOR_ATTACHMENT15 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT
#  define GL_DEPTH_ATTACHMENT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT
#  define GL_STENCIL_ATTACHMENT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER
#  define GL_FRAMEBUFFER 0x8D40
#endif
#ifndef GL_RENDERBUFFER
#  define GL_RENDERBUFFER 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH
#  define GL_RENDERBUFFER_WIDTH 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT
#  define GL_RENDERBUFFER_HEIGHT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1
#  define GL_STENCIL_INDEX1 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4
#  define GL_STENCIL_INDEX4 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8
#  define GL_STENCIL_INDEX8 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16
#  define GL_STENCIL_INDEX16 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE
#  define GL_RENDERBUFFER_RED_SIZE 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE
#  define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE
#  define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE
#  define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE
#  define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE
#  define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
#  define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#endif
#ifndef GL_MAX_SAMPLES
#  define GL_MAX_SAMPLES 0x8D57
#endif
#ifndef GL_INDEX
#  define GL_INDEX 0x8222
#endif
#ifndef GL_TEXTURE_LUMINANCE_TYPE
#  define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#endif
#ifndef GL_TEXTURE_INTENSITY_TYPE
#  define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbuffer
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFERPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFERPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
typedef void (APIENTRYP PFNGLUXBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbuffer
extern PFNGLUXISRENDERBUFFERPROC glIsRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
extern PFNGLUXBINDRENDERBUFFERPROC glBindRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
extern PFNGLUXDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
extern PFNGLUXGENRENDERBUFFERSPROC glGenRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
extern PFNGLUXRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
extern PFNGLUXGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
extern PFNGLUXISFRAMEBUFFERPROC glIsFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
extern PFNGLUXBINDFRAMEBUFFERPROC glBindFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
extern PFNGLUXDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
extern PFNGLUXGENFRAMEBUFFERSPROC glGenFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
extern PFNGLUXCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
extern PFNGLUXFRAMEBUFFERTEXTURE1DPROC glFramebufferTexture1D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
extern PFNGLUXFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
extern PFNGLUXFRAMEBUFFERTEXTURE3DPROC glFramebufferTexture3D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
extern PFNGLUXFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetFramebufferAttachmentParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
extern PFNGLUXGENERATEMIPMAPPROC glGenerateMipmap;
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
extern PFNGLUXBLITFRAMEBUFFERPROC glBlitFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
extern PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC glRenderbufferStorageMultisample;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
extern PFNGLUXFRAMEBUFFERTEXTURELAYERPROC glFramebufferTextureLayer;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:32 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_framebuffer_object__
#define __GLUX_GL_ARB_framebuffer_object__

GLUX_NEW_PLUGIN(GL_ARB_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION
#  define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
#  define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#endif
#ifndef GL_FRAMEBUFFER_DEFAULT
#  define GL_FRAMEBUFFER_DEFAULT 0x8218
#endif
#ifndef GL_FRAMEBUFFER_UNDEFINED
#  define GL_FRAMEBUFFER_UNDEFINED 0x8219
#endif
#ifndef GL_DEPTH_STENCIL_ATTACHMENT
#  define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE
#  define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#endif
#ifndef GL_DEPTH_STENCIL
#  define GL_DEPTH_STENCIL 0x84F9
#endif
#ifndef GL_UNSIGNED_INT_24_8
#  define GL_UNSIGNED_INT_24_8 0x84FA
#endif
#ifndef GL_DEPTH24_STENCIL8
#  define GL_DEPTH24_STENCIL8 0x88F0
#endif
#ifndef GL_TEXTURE_STENCIL_SIZE
#  define GL_TEXTURE_STENCIL_SIZE 0x88F1
#endif
#ifndef GL_TEXTURE_RED_TYPE
#  define GL_TEXTURE_RED_TYPE 0x8C10
#endif
#ifndef GL_TEXTURE_GREEN_TYPE
#  define GL_TEXTURE_GREEN_TYPE 0x8C11
#endif
#ifndef GL_TEXTURE_BLUE_TYPE
#  define GL_TEXTURE_BLUE_TYPE 0x8C12
#endif
#ifndef GL_TEXTURE_ALPHA_TYPE
#  define GL_TEXTURE_ALPHA_TYPE 0x8C13
#endif
#ifndef GL_TEXTURE_DEPTH_TYPE
#  define GL_TEXTURE_DEPTH_TYPE 0x8C16
#endif
#ifndef GL_UNSIGNED_NORMALIZED
#  define GL_UNSIGNED_NORMALIZED 0x8C17
#endif
#ifndef GL_FRAMEBUFFER_BINDING
#  define GL_FRAMEBUFFER_BINDING 0x8CA6
#endif
#ifndef GL_DRAW_FRAMEBUFFER_BINDING
#  define GL_DRAW_FRAMEBUFFER_BINDING GL_FRAMEBUFFER_BINDING
#endif
#ifndef GL_RENDERBUFFER_BINDING
#  define GL_RENDERBUFFER_BINDING 0x8CA7
#endif
#ifndef GL_READ_FRAMEBUFFER
#  define GL_READ_FRAMEBUFFER 0x8CA8
#endif
#ifndef GL_DRAW_FRAMEBUFFER
#  define GL_DRAW_FRAMEBUFFER 0x8CA9
#endif
#ifndef GL_READ_FRAMEBUFFER_BINDING
#  define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#endif
#ifndef GL_RENDERBUFFER_SAMPLES
#  define GL_RENDERBUFFER_SAMPLES 0x8CAB
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE
#  define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED
#  define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS
#  define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0
#  define GL_COLOR_ATTACHMENT0 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1
#  define GL_COLOR_ATTACHMENT1 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2
#  define GL_COLOR_ATTACHMENT2 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3
#  define GL_COLOR_ATTACHMENT3 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4
#  define GL_COLOR_ATTACHMENT4 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5
#  define GL_COLOR_ATTACHMENT5 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6
#  define GL_COLOR_ATTACHMENT6 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7
#  define GL_COLOR_ATTACHMENT7 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8
#  define GL_COLOR_ATTACHMENT8 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9
#  define GL_COLOR_ATTACHMENT9 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10
#  define GL_COLOR_ATTACHMENT10 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11
#  define GL_COLOR_ATTACHMENT11 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12
#  define GL_COLOR_ATTACHMENT12 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13
#  define GL_COLOR_ATTACHMENT13 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14
#  define GL_COLOR_ATTACHMENT14 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15
#  define GL_COLOR_ATTACHMENT15 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT
#  define GL_DEPTH_ATTACHMENT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT
#  define GL_STENCIL_ATTACHMENT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER
#  define GL_FRAMEBUFFER 0x8D40
#endif
#ifndef GL_RENDERBUFFER
#  define GL_RENDERBUFFER 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH
#  define GL_RENDERBUFFER_WIDTH 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT
#  define GL_RENDERBUFFER_HEIGHT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1
#  define GL_STENCIL_INDEX1 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4
#  define GL_STENCIL_INDEX4 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8
#  define GL_STENCIL_INDEX8 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16
#  define GL_STENCIL_INDEX16 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE
#  define GL_RENDERBUFFER_RED_SIZE 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE
#  define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE
#  define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE
#  define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE
#  define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE
#  define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
#  define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#endif
#ifndef GL_MAX_SAMPLES
#  define GL_MAX_SAMPLES 0x8D57
#endif
#ifndef GL_INDEX
#  define GL_INDEX 0x8222
#endif
#ifndef GL_TEXTURE_LUMINANCE_TYPE
#  define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#endif
#ifndef GL_TEXTURE_INTENSITY_TYPE
#  define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbuffer
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFERPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFERPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
typedef void (APIENTRYP PFNGLUXBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbuffer
extern PFNGLUXISRENDERBUFFERPROC glIsRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
extern PFNGLUXBINDRENDERBUFFERPROC glBindRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
extern PFNGLUXDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
extern PFNGLUXGENRENDERBUFFERSPROC glGenRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
extern PFNGLUXRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
extern PFNGLUXGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
extern PFNGLUXISFRAMEBUFFERPROC glIsFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
extern PFNGLUXBINDFRAMEBUFFERPROC glBindFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
extern PFNGLUXDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
extern PFNGLUXGENFRAMEBUFFERSPROC glGenFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
extern PFNGLUXCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
extern PFNGLUXFRAMEBUFFERTEXTURE1DPROC glFramebufferTexture1D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
extern PFNGLUXFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
extern PFNGLUXFRAMEBUFFERTEXTURE3DPROC glFramebufferTexture3D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
extern PFNGLUXFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetFramebufferAttachmentParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
extern PFNGLUXGENERATEMIPMAPPROC glGenerateMipmap;
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
extern PFNGLUXBLITFRAMEBUFFERPROC glBlitFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
extern PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC glRenderbufferStorageMultisample;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
extern PFNGLUXFRAMEBUFFERTEXTURELAYERPROC glFramebufferTextureLayer;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:54 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_framebuffer_object__
#define __GLUX_GL_ARB_framebuffer_object__

GLUX_NEW_PLUGIN(GL_ARB_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION
#  define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
#  define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#endif
#ifndef GL_FRAMEBUFFER_DEFAULT
#  define GL_FRAMEBUFFER_DEFAULT 0x8218
#endif
#ifndef GL_FRAMEBUFFER_UNDEFINED
#  define GL_FRAMEBUFFER_UNDEFINED 0x8219
#endif
#ifndef GL_DEPTH_STENCIL_ATTACHMENT
#  define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE
#  define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#endif
#ifndef GL_DEPTH_STENCIL
#  define GL_DEPTH_STENCIL 0x84F9
#endif
#ifndef GL_UNSIGNED_INT_24_8
#  define GL_UNSIGNED_INT_24_8 0x84FA
#endif
#ifndef GL_DEPTH24_STENCIL8
#  define GL_DEPTH24_STENCIL8 0x88F0
#endif
#ifndef GL_TEXTURE_STENCIL_SIZE
#  define GL_TEXTURE_STENCIL_SIZE 0x88F1
#endif
#ifndef GL_TEXTURE_RED_TYPE
#  define GL_TEXTURE_RED_TYPE 0x8C10
#endif
#ifndef GL_TEXTURE_GREEN_TYPE
#  define GL_TEXTURE_GREEN_TYPE 0x8C11
#endif
#ifndef GL_TEXTURE_BLUE_TYPE
#  define GL_TEXTURE_BLUE_TYPE 0x8C12
#endif
#ifndef GL_TEXTURE_ALPHA_TYPE
#  define GL_TEXTURE_ALPHA_TYPE 0x8C13
#endif
#ifndef GL_TEXTURE_DEPTH_TYPE
#  define GL_TEXTURE_DEPTH_TYPE 0x8C16
#endif
#ifndef GL_UNSIGNED_NORMALIZED
#  define GL_UNSIGNED_NORMALIZED 0x8C17
#endif
#ifndef GL_FRAMEBUFFER_BINDING
#  define GL_FRAMEBUFFER_BINDING 0x8CA6
#endif
#ifndef GL_DRAW_FRAMEBUFFER_BINDING
#  define GL_DRAW_FRAMEBUFFER_BINDING GL_FRAMEBUFFER_BINDING
#endif
#ifndef GL_RENDERBUFFER_BINDING
#  define GL_RENDERBUFFER_BINDING 0x8CA7
#endif
#ifndef GL_READ_FRAMEBUFFER
#  define GL_READ_FRAMEBUFFER 0x8CA8
#endif
#ifndef GL_DRAW_FRAMEBUFFER
#  define GL_DRAW_FRAMEBUFFER 0x8CA9
#endif
#ifndef GL_READ_FRAMEBUFFER_BINDING
#  define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#endif
#ifndef GL_RENDERBUFFER_SAMPLES
#  define GL_RENDERBUFFER_SAMPLES 0x8CAB
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE
#  define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED
#  define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS
#  define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0
#  define GL_COLOR_ATTACHMENT0 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1
#  define GL_COLOR_ATTACHMENT1 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2
#  define GL_COLOR_ATTACHMENT2 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3
#  define GL_COLOR_ATTACHMENT3 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4
#  define GL_COLOR_ATTACHMENT4 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5
#  define GL_COLOR_ATTACHMENT5 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6
#  define GL_COLOR_ATTACHMENT6 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7
#  define GL_COLOR_ATTACHMENT7 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8
#  define GL_COLOR_ATTACHMENT8 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9
#  define GL_COLOR_ATTACHMENT9 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10
#  define GL_COLOR_ATTACHMENT10 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11
#  define GL_COLOR_ATTACHMENT11 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12
#  define GL_COLOR_ATTACHMENT12 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13
#  define GL_COLOR_ATTACHMENT13 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14
#  define GL_COLOR_ATTACHMENT14 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15
#  define GL_COLOR_ATTACHMENT15 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT
#  define GL_DEPTH_ATTACHMENT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT
#  define GL_STENCIL_ATTACHMENT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER
#  define GL_FRAMEBUFFER 0x8D40
#endif
#ifndef GL_RENDERBUFFER
#  define GL_RENDERBUFFER 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH
#  define GL_RENDERBUFFER_WIDTH 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT
#  define GL_RENDERBUFFER_HEIGHT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1
#  define GL_STENCIL_INDEX1 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4
#  define GL_STENCIL_INDEX4 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8
#  define GL_STENCIL_INDEX8 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16
#  define GL_STENCIL_INDEX16 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE
#  define GL_RENDERBUFFER_RED_SIZE 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE
#  define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE
#  define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE
#  define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE
#  define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE
#  define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
#  define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#endif
#ifndef GL_MAX_SAMPLES
#  define GL_MAX_SAMPLES 0x8D57
#endif
#ifndef GL_INDEX
#  define GL_INDEX 0x8222
#endif
#ifndef GL_TEXTURE_LUMINANCE_TYPE
#  define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#endif
#ifndef GL_TEXTURE_INTENSITY_TYPE
#  define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbuffer
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFERPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFERPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
typedef void (APIENTRYP PFNGLUXBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbuffer
extern PFNGLUXISRENDERBUFFERPROC glIsRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
extern PFNGLUXBINDRENDERBUFFERPROC glBindRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
extern PFNGLUXDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
extern PFNGLUXGENRENDERBUFFERSPROC glGenRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
extern PFNGLUXRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
extern PFNGLUXGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
extern PFNGLUXISFRAMEBUFFERPROC glIsFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
extern PFNGLUXBINDFRAMEBUFFERPROC glBindFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
extern PFNGLUXDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
extern PFNGLUXGENFRAMEBUFFERSPROC glGenFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
extern PFNGLUXCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
extern PFNGLUXFRAMEBUFFERTEXTURE1DPROC glFramebufferTexture1D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
extern PFNGLUXFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
extern PFNGLUXFRAMEBUFFERTEXTURE3DPROC glFramebufferTexture3D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
extern PFNGLUXFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetFramebufferAttachmentParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
extern PFNGLUXGENERATEMIPMAPPROC glGenerateMipmap;
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
extern PFNGLUXBLITFRAMEBUFFERPROC glBlitFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
extern PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC glRenderbufferStorageMultisample;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
extern PFNGLUXFRAMEBUFFERTEXTURELAYERPROC glFramebufferTextureLayer;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:28:04 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_framebuffer_object__
#define __GLUX_GL_ARB_framebuffer_object__

GLUX_NEW_PLUGIN(GL_ARB_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION
#  define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
#  define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#endif
#ifndef GL_FRAMEBUFFER_DEFAULT
#  define GL_FRAMEBUFFER_DEFAULT 0x8218
#endif
#ifndef GL_FRAMEBUFFER_UNDEFINED
#  define GL_FRAMEBUFFER_UNDEFINED 0x8219
#endif
#ifndef GL_DEPTH_STENCIL_ATTACHMENT
#  define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE
#  define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#endif
#ifndef GL_DEPTH_STENCIL
#  define GL_DEPTH_STENCIL 0x84F9
#endif
#ifndef GL_UNSIGNED_INT_24_8
#  define GL_UNSIGNED_INT_24_8 0x84FA
#endif
#ifndef GL_DEPTH24_STENCIL8
#  define GL_DEPTH24_STENCIL8 0x88F0
#endif
#ifndef GL_TEXTURE_STENCIL_SIZE
#  define GL_TEXTURE_STENCIL_SIZE 0x88F1
#endif
#ifndef GL_TEXTURE_RED_TYPE
#  define GL_TEXTURE_RED_TYPE 0x8C10
#endif
#ifndef GL_TEXTURE_GREEN_TYPE
#  define GL_TEXTURE_GREEN_TYPE 0x8C11
#endif
#ifndef GL_TEXTURE_BLUE_TYPE
#  define GL_TEXTURE_BLUE_TYPE 0x8C12
#endif
#ifndef GL_TEXTURE_ALPHA_TYPE
#  define GL_TEXTURE_ALPHA_TYPE 0x8C13
#endif
#ifndef GL_TEXTURE_DEPTH_TYPE
#  define GL_TEXTURE_DEPTH_TYPE 0x8C16
#endif
#ifndef GL_UNSIGNED_NORMALIZED
#  define GL_UNSIGNED_NORMALIZED 0x8C17
#endif
#ifndef GL_FRAMEBUFFER_BINDING
#  define GL_FRAMEBUFFER_BINDING 0x8CA6
#endif
#ifndef GL_DRAW_FRAMEBUFFER_BINDING
#  define GL_DRAW_FRAMEBUFFER_BINDING GL_FRAMEBUFFER_BINDING
#endif
#ifndef GL_RENDERBUFFER_BINDING
#  define GL_RENDERBUFFER_BINDING 0x8CA7
#endif
#ifndef GL_READ_FRAMEBUFFER
#  define GL_READ_FRAMEBUFFER 0x8CA8
#endif
#ifndef GL_DRAW_FRAMEBUFFER
#  define GL_DRAW_FRAMEBUFFER 0x8CA9
#endif
#ifndef GL_READ_FRAMEBUFFER_BINDING
#  define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#endif
#ifndef GL_RENDERBUFFER_SAMPLES
#  define GL_RENDERBUFFER_SAMPLES 0x8CAB
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE
#  define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED
#  define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS
#  define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0
#  define GL_COLOR_ATTACHMENT0 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1
#  define GL_COLOR_ATTACHMENT1 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2
#  define GL_COLOR_ATTACHMENT2 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3
#  define GL_COLOR_ATTACHMENT3 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4
#  define GL_COLOR_ATTACHMENT4 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5
#  define GL_COLOR_ATTACHMENT5 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6
#  define GL_COLOR_ATTACHMENT6 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7
#  define GL_COLOR_ATTACHMENT7 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8
#  define GL_COLOR_ATTACHMENT8 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9
#  define GL_COLOR_ATTACHMENT9 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10
#  define GL_COLOR_ATTACHMENT10 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11
#  define GL_COLOR_ATTACHMENT11 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12
#  define GL_COLOR_ATTACHMENT12 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13
#  define GL_COLOR_ATTACHMENT13 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14
#  define GL_COLOR_ATTACHMENT14 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15
#  define GL_COLOR_ATTACHMENT15 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT
#  define GL_DEPTH_ATTACHMENT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT
#  define GL_STENCIL_ATTACHMENT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER
#  define GL_FRAMEBUFFER 0x8D40
#endif
#ifndef GL_RENDERBUFFER
#  define GL_RENDERBUFFER 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH
#  define GL_RENDERBUFFER_WIDTH 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT
#  define GL_RENDERBUFFER_HEIGHT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1
#  define GL_STENCIL_INDEX1 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4
#  define GL_STENCIL_INDEX4 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8
#  define GL_STENCIL_INDEX8 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16
#  define GL_STENCIL_INDEX16 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE
#  define GL_RENDERBUFFER_RED_SIZE 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE
#  define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE
#  define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE
#  define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE
#  define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE
#  define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
#  define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#endif
#ifndef GL_MAX_SAMPLES
#  define GL_MAX_SAMPLES 0x8D57
#endif
#ifndef GL_INDEX
#  define GL_INDEX 0x8222
#endif
#ifndef GL_TEXTURE_LUMINANCE_TYPE
#  define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#endif
#ifndef GL_TEXTURE_INTENSITY_TYPE
#  define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbuffer
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFERPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFERPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
typedef void (APIENTRYP PFNGLUXBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbuffer
extern PFNGLUXISRENDERBUFFERPROC glIsRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
extern PFNGLUXBINDRENDERBUFFERPROC glBindRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
extern PFNGLUXDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
extern PFNGLUXGENRENDERBUFFERSPROC glGenRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
extern PFNGLUXRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
extern PFNGLUXGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
extern PFNGLUXISFRAMEBUFFERPROC glIsFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
extern PFNGLUXBINDFRAMEBUFFERPROC glBindFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
extern PFNGLUXDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
extern PFNGLUXGENFRAMEBUFFERSPROC glGenFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
extern PFNGLUXCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
extern PFNGLUXFRAMEBUFFERTEXTURE1DPROC glFramebufferTexture1D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
extern PFNGLUXFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
extern PFNGLUXFRAMEBUFFERTEXTURE3DPROC glFramebufferTexture3D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
extern PFNGLUXFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetFramebufferAttachmentParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
extern PFNGLUXGENERATEMIPMAPPROC glGenerateMipmap;
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
extern PFNGLUXBLITFRAMEBUFFERPROC glBlitFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
extern PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC glRenderbufferStorageMultisample;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
extern PFNGLUXFRAMEBUFFERTEXTURELAYERPROC glFramebufferTextureLayer;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:16:59 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_framebuffer_object__
#define __GLUX_GL_ARB_framebuffer_object__

GLUX_NEW_PLUGIN(GL_ARB_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION
#  define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
#  define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#endif
#ifndef GL_FRAMEBUFFER_DEFAULT
#  define GL_FRAMEBUFFER_DEFAULT 0x8218
#endif
#ifndef GL_FRAMEBUFFER_UNDEFINED
#  define GL_FRAMEBUFFER_UNDEFINED 0x8219
#endif
#ifndef GL_DEPTH_STENCIL_ATTACHMENT
#  define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE
#  define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#endif
#ifndef GL_DEPTH_STENCIL
#  define GL_DEPTH_STENCIL 0x84F9
#endif
#ifndef GL_UNSIGNED_INT_24_8
#  define GL_UNSIGNED_INT_24_8 0x84FA
#endif
#ifndef GL_DEPTH24_STENCIL8
#  define GL_DEPTH24_STENCIL8 0x88F0
#endif
#ifndef GL_TEXTURE_STENCIL_SIZE
#  define GL_TEXTURE_STENCIL_SIZE 0x88F1
#endif
#ifndef GL_TEXTURE_RED_TYPE
#  define GL_TEXTURE_RED_TYPE 0x8C10
#endif
#ifndef GL_TEXTURE_GREEN_TYPE
#  define GL_TEXTURE_GREEN_TYPE 0x8C11
#endif
#ifndef GL_TEXTURE_BLUE_TYPE
#  define GL_TEXTURE_BLUE_TYPE 0x8C12
#endif
#ifndef GL_TEXTURE_ALPHA_TYPE
#  define GL_TEXTURE_ALPHA_TYPE 0x8C13
#endif
#ifndef GL_TEXTURE_DEPTH_TYPE
#  define GL_TEXTURE_DEPTH_TYPE 0x8C16
#endif
#ifndef GL_UNSIGNED_NORMALIZED
#  define GL_UNSIGNED_NORMALIZED 0x8C17
#endif
#ifndef GL_FRAMEBUFFER_BINDING
#  define GL_FRAMEBUFFER_BINDING 0x8CA6
#endif
#ifndef GL_DRAW_FRAMEBUFFER_BINDING
#  define GL_DRAW_FRAMEBUFFER_BINDING GL_FRAMEBUFFER_BINDING
#endif
#ifndef GL_RENDERBUFFER_BINDING
#  define GL_RENDERBUFFER_BINDING 0x8CA7
#endif
#ifndef GL_READ_FRAMEBUFFER
#  define GL_READ_FRAMEBUFFER 0x8CA8
#endif
#ifndef GL_DRAW_FRAMEBUFFER
#  define GL_DRAW_FRAMEBUFFER 0x8CA9
#endif
#ifndef GL_READ_FRAMEBUFFER_BINDING
#  define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#endif
#ifndef GL_RENDERBUFFER_SAMPLES
#  define GL_RENDERBUFFER_SAMPLES 0x8CAB
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE
#  define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED
#  define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS
#  define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0
#  define GL_COLOR_ATTACHMENT0 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1
#  define GL_COLOR_ATTACHMENT1 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2
#  define GL_COLOR_ATTACHMENT2 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3
#  define GL_COLOR_ATTACHMENT3 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4
#  define GL_COLOR_ATTACHMENT4 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5
#  define GL_COLOR_ATTACHMENT5 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6
#  define GL_COLOR_ATTACHMENT6 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7
#  define GL_COLOR_ATTACHMENT7 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8
#  define GL_COLOR_ATTACHMENT8 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9
#  define GL_COLOR_ATTACHMENT9 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10
#  define GL_COLOR_ATTACHMENT10 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11
#  define GL_COLOR_ATTACHMENT11 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12
#  define GL_COLOR_ATTACHMENT12 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13
#  define GL_COLOR_ATTACHMENT13 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14
#  define GL_COLOR_ATTACHMENT14 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15
#  define GL_COLOR_ATTACHMENT15 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT
#  define GL_DEPTH_ATTACHMENT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT
#  define GL_STENCIL_ATTACHMENT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER
#  define GL_FRAMEBUFFER 0x8D40
#endif
#ifndef GL_RENDERBUFFER
#  define GL_RENDERBUFFER 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH
#  define GL_RENDERBUFFER_WIDTH 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT
#  define GL_RENDERBUFFER_HEIGHT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1
#  define GL_STENCIL_INDEX1 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4
#  define GL_STENCIL_INDEX4 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8
#  define GL_STENCIL_INDEX8 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16
#  define GL_STENCIL_INDEX16 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE
#  define GL_RENDERBUFFER_RED_SIZE 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE
#  define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE
#  define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE
#  define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE
#  define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE
#  define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
#  define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#endif
#ifndef GL_MAX_SAMPLES
#  define GL_MAX_SAMPLES 0x8D57
#endif
#ifndef GL_INDEX
#  define GL_INDEX 0x8222
#endif
#ifndef GL_TEXTURE_LUMINANCE_TYPE
#  define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#endif
#ifndef GL_TEXTURE_INTENSITY_TYPE
#  define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbuffer
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFERPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFERPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
typedef void (APIENTRYP PFNGLUXBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbuffer
extern PFNGLUXISRENDERBUFFERPROC glIsRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
extern PFNGLUXBINDRENDERBUFFERPROC glBindRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
extern PFNGLUXDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
extern PFNGLUXGENRENDERBUFFERSPROC glGenRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
extern PFNGLUXRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
extern PFNGLUXGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
extern PFNGLUXISFRAMEBUFFERPROC glIsFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
extern PFNGLUXBINDFRAMEBUFFERPROC glBindFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
extern PFNGLUXDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
extern PFNGLUXGENFRAMEBUFFERSPROC glGenFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
extern PFNGLUXCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
extern PFNGLUXFRAMEBUFFERTEXTURE1DPROC glFramebufferTexture1D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
extern PFNGLUXFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
extern PFNGLUXFRAMEBUFFERTEXTURE3DPROC glFramebufferTexture3D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
extern PFNGLUXFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetFramebufferAttachmentParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
extern PFNGLUXGENERATEMIPMAPPROC glGenerateMipmap;
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
extern PFNGLUXBLITFRAMEBUFFERPROC glBlitFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
extern PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC glRenderbufferStorageMultisample;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
extern PFNGLUXFRAMEBUFFERTEXTURELAYERPROC glFramebufferTextureLayer;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_framebuffer_object__
#define __GLUX_GL_ARB_framebuffer_object__

GLUX_NEW_PLUGIN(GL_ARB_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION
#  define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
#  define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#endif
#ifndef GL_FRAMEBUFFER_DEFAULT
#  define GL_FRAMEBUFFER_DEFAULT 0x8218
#endif
#ifndef GL_FRAMEBUFFER_UNDEFINED
#  define GL_FRAMEBUFFER_UNDEFINED 0x8219
#endif
#ifndef GL_DEPTH_STENCIL_ATTACHMENT
#  define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE
#  define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#endif
#ifndef GL_DEPTH_STENCIL
#  define GL_DEPTH_STENCIL 0x84F9
#endif
#ifndef GL_UNSIGNED_INT_24_8
#  define GL_UNSIGNED_INT_24_8 0x84FA
#endif
#ifndef GL_DEPTH24_STENCIL8
#  define GL_DEPTH24_STENCIL8 0x88F0
#endif
#ifndef GL_TEXTURE_STENCIL_SIZE
#  define GL_TEXTURE_STENCIL_SIZE 0x88F1
#endif
#ifndef GL_TEXTURE_RED_TYPE
#  define GL_TEXTURE_RED_TYPE 0x8C10
#endif
#ifndef GL_TEXTURE_GREEN_TYPE
#  define GL_TEXTURE_GREEN_TYPE 0x8C11
#endif
#ifndef GL_TEXTURE_BLUE_TYPE
#  define GL_TEXTURE_BLUE_TYPE 0x8C12
#endif
#ifndef GL_TEXTURE_ALPHA_TYPE
#  define GL_TEXTURE_ALPHA_TYPE 0x8C13
#endif
#ifndef GL_TEXTURE_DEPTH_TYPE
#  define GL_TEXTURE_DEPTH_TYPE 0x8C16
#endif
#ifndef GL_UNSIGNED_NORMALIZED
#  define GL_UNSIGNED_NORMALIZED 0x8C17
#endif
#ifndef GL_FRAMEBUFFER_BINDING
#  define GL_FRAMEBUFFER_BINDING 0x8CA6
#endif
#ifndef GL_DRAW_FRAMEBUFFER_BINDING
#  define GL_DRAW_FRAMEBUFFER_BINDING GL_FRAMEBUFFER_BINDING
#endif
#ifndef GL_RENDERBUFFER_BINDING
#  define GL_RENDERBUFFER_BINDING 0x8CA7
#endif
#ifndef GL_READ_FRAMEBUFFER
#  define GL_READ_FRAMEBUFFER 0x8CA8
#endif
#ifndef GL_DRAW_FRAMEBUFFER
#  define GL_DRAW_FRAMEBUFFER 0x8CA9
#endif
#ifndef GL_READ_FRAMEBUFFER_BINDING
#  define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#endif
#ifndef GL_RENDERBUFFER_SAMPLES
#  define GL_RENDERBUFFER_SAMPLES 0x8CAB
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE
#  define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED
#  define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS
#  define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0
#  define GL_COLOR_ATTACHMENT0 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1
#  define GL_COLOR_ATTACHMENT1 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2
#  define GL_COLOR_ATTACHMENT2 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3
#  define GL_COLOR_ATTACHMENT3 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4
#  define GL_COLOR_ATTACHMENT4 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5
#  define GL_COLOR_ATTACHMENT5 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6
#  define GL_COLOR_ATTACHMENT6 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7
#  define GL_COLOR_ATTACHMENT7 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8
#  define GL_COLOR_ATTACHMENT8 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9
#  define GL_COLOR_ATTACHMENT9 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10
#  define GL_COLOR_ATTACHMENT10 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11
#  define GL_COLOR_ATTACHMENT11 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12
#  define GL_COLOR_ATTACHMENT12 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13
#  define GL_COLOR_ATTACHMENT13 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14
#  define GL_COLOR_ATTACHMENT14 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15
#  define GL_COLOR_ATTACHMENT15 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT
#  define GL_DEPTH_ATTACHMENT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT
#  define GL_STENCIL_ATTACHMENT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER
#  define GL_FRAMEBUFFER 0x8D40
#endif
#ifndef GL_RENDERBUFFER
#  define GL_RENDERBUFFER 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH
#  define GL_RENDERBUFFER_WIDTH 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT
#  define GL_RENDERBUFFER_HEIGHT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1
#  define GL_STENCIL_INDEX1 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4
#  define GL_STENCIL_INDEX4 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8
#  define GL_STENCIL_INDEX8 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16
#  define GL_STENCIL_INDEX16 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE
#  define GL_RENDERBUFFER_RED_SIZE 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE
#  define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE
#  define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE
#  define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE
#  define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE
#  define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
#  define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#endif
#ifndef GL_MAX_SAMPLES
#  define GL_MAX_SAMPLES 0x8D57
#endif
#ifndef GL_INDEX
#  define GL_INDEX 0x8222
#endif
#ifndef GL_TEXTURE_LUMINANCE_TYPE
#  define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#endif
#ifndef GL_TEXTURE_INTENSITY_TYPE
#  define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbuffer
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFERPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFERPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
typedef void (APIENTRYP PFNGLUXBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbuffer
extern PFNGLUXISRENDERBUFFERPROC glIsRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
extern PFNGLUXBINDRENDERBUFFERPROC glBindRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
extern PFNGLUXDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
extern PFNGLUXGENRENDERBUFFERSPROC glGenRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
extern PFNGLUXRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
extern PFNGLUXGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
extern PFNGLUXISFRAMEBUFFERPROC glIsFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
extern PFNGLUXBINDFRAMEBUFFERPROC glBindFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
extern PFNGLUXDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
extern PFNGLUXGENFRAMEBUFFERSPROC glGenFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
extern PFNGLUXCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
extern PFNGLUXFRAMEBUFFERTEXTURE1DPROC glFramebufferTexture1D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
extern PFNGLUXFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
extern PFNGLUXFRAMEBUFFERTEXTURE3DPROC glFramebufferTexture3D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
extern PFNGLUXFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetFramebufferAttachmentParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
extern PFNGLUXGENERATEMIPMAPPROC glGenerateMipmap;
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
extern PFNGLUXBLITFRAMEBUFFERPROC glBlitFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
extern PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC glRenderbufferStorageMultisample;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
extern PFNGLUXFRAMEBUFFERTEXTURELAYERPROC glFramebufferTextureLayer;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:20 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_framebuffer_object__
#define __GLUX_GL_ARB_framebuffer_object__

GLUX_NEW_PLUGIN(GL_ARB_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION
#  define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
#  define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#endif
#ifndef GL_FRAMEBUFFER_DEFAULT
#  define GL_FRAMEBUFFER_DEFAULT 0x8218
#endif
#ifndef GL_FRAMEBUFFER_UNDEFINED
#  define GL_FRAMEBUFFER_UNDEFINED 0x8219
#endif
#ifndef GL_DEPTH_STENCIL_ATTACHMENT
#  define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE
#  define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#endif
#ifndef GL_DEPTH_STENCIL
#  define GL_DEPTH_STENCIL 0x84F9
#endif
#ifndef GL_UNSIGNED_INT_24_8
#  define GL_UNSIGNED_INT_24_8 0x84FA
#endif
#ifndef GL_DEPTH24_STENCIL8
#  define GL_DEPTH24_STENCIL8 0x88F0
#endif
#ifndef GL_TEXTURE_STENCIL_SIZE
#  define GL_TEXTURE_STENCIL_SIZE 0x88F1
#endif
#ifndef GL_TEXTURE_RED_TYPE
#  define GL_TEXTURE_RED_TYPE 0x8C10
#endif
#ifndef GL_TEXTURE_GREEN_TYPE
#  define GL_TEXTURE_GREEN_TYPE 0x8C11
#endif
#ifndef GL_TEXTURE_BLUE_TYPE
#  define GL_TEXTURE_BLUE_TYPE 0x8C12
#endif
#ifndef GL_TEXTURE_ALPHA_TYPE
#  define GL_TEXTURE_ALPHA_TYPE 0x8C13
#endif
#ifndef GL_TEXTURE_DEPTH_TYPE
#  define GL_TEXTURE_DEPTH_TYPE 0x8C16
#endif
#ifndef GL_UNSIGNED_NORMALIZED
#  define GL_UNSIGNED_NORMALIZED 0x8C17
#endif
#ifndef GL_FRAMEBUFFER_BINDING
#  define GL_FRAMEBUFFER_BINDING 0x8CA6
#endif
#ifndef GL_DRAW_FRAMEBUFFER_BINDING
#  define GL_DRAW_FRAMEBUFFER_BINDING GL_FRAMEBUFFER_BINDING
#endif
#ifndef GL_RENDERBUFFER_BINDING
#  define GL_RENDERBUFFER_BINDING 0x8CA7
#endif
#ifndef GL_READ_FRAMEBUFFER
#  define GL_READ_FRAMEBUFFER 0x8CA8
#endif
#ifndef GL_DRAW_FRAMEBUFFER
#  define GL_DRAW_FRAMEBUFFER 0x8CA9
#endif
#ifndef GL_READ_FRAMEBUFFER_BINDING
#  define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#endif
#ifndef GL_RENDERBUFFER_SAMPLES
#  define GL_RENDERBUFFER_SAMPLES 0x8CAB
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE
#  define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED
#  define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS
#  define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0
#  define GL_COLOR_ATTACHMENT0 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1
#  define GL_COLOR_ATTACHMENT1 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2
#  define GL_COLOR_ATTACHMENT2 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3
#  define GL_COLOR_ATTACHMENT3 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4
#  define GL_COLOR_ATTACHMENT4 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5
#  define GL_COLOR_ATTACHMENT5 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6
#  define GL_COLOR_ATTACHMENT6 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7
#  define GL_COLOR_ATTACHMENT7 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8
#  define GL_COLOR_ATTACHMENT8 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9
#  define GL_COLOR_ATTACHMENT9 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10
#  define GL_COLOR_ATTACHMENT10 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11
#  define GL_COLOR_ATTACHMENT11 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12
#  define GL_COLOR_ATTACHMENT12 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13
#  define GL_COLOR_ATTACHMENT13 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14
#  define GL_COLOR_ATTACHMENT14 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15
#  define GL_COLOR_ATTACHMENT15 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT
#  define GL_DEPTH_ATTACHMENT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT
#  define GL_STENCIL_ATTACHMENT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER
#  define GL_FRAMEBUFFER 0x8D40
#endif
#ifndef GL_RENDERBUFFER
#  define GL_RENDERBUFFER 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH
#  define GL_RENDERBUFFER_WIDTH 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT
#  define GL_RENDERBUFFER_HEIGHT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1
#  define GL_STENCIL_INDEX1 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4
#  define GL_STENCIL_INDEX4 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8
#  define GL_STENCIL_INDEX8 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16
#  define GL_STENCIL_INDEX16 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE
#  define GL_RENDERBUFFER_RED_SIZE 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE
#  define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE
#  define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE
#  define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE
#  define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE
#  define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
#  define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#endif
#ifndef GL_MAX_SAMPLES
#  define GL_MAX_SAMPLES 0x8D57
#endif
#ifndef GL_INDEX
#  define GL_INDEX 0x8222
#endif
#ifndef GL_TEXTURE_LUMINANCE_TYPE
#  define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#endif
#ifndef GL_TEXTURE_INTENSITY_TYPE
#  define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbuffer
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFERPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFERPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
typedef void (APIENTRYP PFNGLUXBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbuffer
extern PFNGLUXISRENDERBUFFERPROC glIsRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
extern PFNGLUXBINDRENDERBUFFERPROC glBindRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
extern PFNGLUXDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
extern PFNGLUXGENRENDERBUFFERSPROC glGenRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
extern PFNGLUXRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
extern PFNGLUXGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
extern PFNGLUXISFRAMEBUFFERPROC glIsFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
extern PFNGLUXBINDFRAMEBUFFERPROC glBindFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
extern PFNGLUXDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
extern PFNGLUXGENFRAMEBUFFERSPROC glGenFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
extern PFNGLUXCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
extern PFNGLUXFRAMEBUFFERTEXTURE1DPROC glFramebufferTexture1D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
extern PFNGLUXFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
extern PFNGLUXFRAMEBUFFERTEXTURE3DPROC glFramebufferTexture3D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
extern PFNGLUXFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetFramebufferAttachmentParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
extern PFNGLUXGENERATEMIPMAPPROC glGenerateMipmap;
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
extern PFNGLUXBLITFRAMEBUFFERPROC glBlitFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
extern PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC glRenderbufferStorageMultisample;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
extern PFNGLUXFRAMEBUFFERTEXTURELAYERPROC glFramebufferTextureLayer;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_framebuffer_object__
#define __GLUX_GL_ARB_framebuffer_object__

GLUX_NEW_PLUGIN(GL_ARB_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION
#  define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
#  define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#endif
#ifndef GL_FRAMEBUFFER_DEFAULT
#  define GL_FRAMEBUFFER_DEFAULT 0x8218
#endif
#ifndef GL_FRAMEBUFFER_UNDEFINED
#  define GL_FRAMEBUFFER_UNDEFINED 0x8219
#endif
#ifndef GL_DEPTH_STENCIL_ATTACHMENT
#  define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE
#  define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#endif
#ifndef GL_DEPTH_STENCIL
#  define GL_DEPTH_STENCIL 0x84F9
#endif
#ifndef GL_UNSIGNED_INT_24_8
#  define GL_UNSIGNED_INT_24_8 0x84FA
#endif
#ifndef GL_DEPTH24_STENCIL8
#  define GL_DEPTH24_STENCIL8 0x88F0
#endif
#ifndef GL_TEXTURE_STENCIL_SIZE
#  define GL_TEXTURE_STENCIL_SIZE 0x88F1
#endif
#ifndef GL_TEXTURE_RED_TYPE
#  define GL_TEXTURE_RED_TYPE 0x8C10
#endif
#ifndef GL_TEXTURE_GREEN_TYPE
#  define GL_TEXTURE_GREEN_TYPE 0x8C11
#endif
#ifndef GL_TEXTURE_BLUE_TYPE
#  define GL_TEXTURE_BLUE_TYPE 0x8C12
#endif
#ifndef GL_TEXTURE_ALPHA_TYPE
#  define GL_TEXTURE_ALPHA_TYPE 0x8C13
#endif
#ifndef GL_TEXTURE_DEPTH_TYPE
#  define GL_TEXTURE_DEPTH_TYPE 0x8C16
#endif
#ifndef GL_UNSIGNED_NORMALIZED
#  define GL_UNSIGNED_NORMALIZED 0x8C17
#endif
#ifndef GL_FRAMEBUFFER_BINDING
#  define GL_FRAMEBUFFER_BINDING 0x8CA6
#endif
#ifndef GL_DRAW_FRAMEBUFFER_BINDING
#  define GL_DRAW_FRAMEBUFFER_BINDING GL_FRAMEBUFFER_BINDING
#endif
#ifndef GL_RENDERBUFFER_BINDING
#  define GL_RENDERBUFFER_BINDING 0x8CA7
#endif
#ifndef GL_READ_FRAMEBUFFER
#  define GL_READ_FRAMEBUFFER 0x8CA8
#endif
#ifndef GL_DRAW_FRAMEBUFFER
#  define GL_DRAW_FRAMEBUFFER 0x8CA9
#endif
#ifndef GL_READ_FRAMEBUFFER_BINDING
#  define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#endif
#ifndef GL_RENDERBUFFER_SAMPLES
#  define GL_RENDERBUFFER_SAMPLES 0x8CAB
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE
#  define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED
#  define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS
#  define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0
#  define GL_COLOR_ATTACHMENT0 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1
#  define GL_COLOR_ATTACHMENT1 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2
#  define GL_COLOR_ATTACHMENT2 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3
#  define GL_COLOR_ATTACHMENT3 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4
#  define GL_COLOR_ATTACHMENT4 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5
#  define GL_COLOR_ATTACHMENT5 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6
#  define GL_COLOR_ATTACHMENT6 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7
#  define GL_COLOR_ATTACHMENT7 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8
#  define GL_COLOR_ATTACHMENT8 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9
#  define GL_COLOR_ATTACHMENT9 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10
#  define GL_COLOR_ATTACHMENT10 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11
#  define GL_COLOR_ATTACHMENT11 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12
#  define GL_COLOR_ATTACHMENT12 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13
#  define GL_COLOR_ATTACHMENT13 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14
#  define GL_COLOR_ATTACHMENT14 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15
#  define GL_COLOR_ATTACHMENT15 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT
#  define GL_DEPTH_ATTACHMENT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT
#  define GL_STENCIL_ATTACHMENT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER
#  define GL_FRAMEBUFFER 0x8D40
#endif
#ifndef GL_RENDERBUFFER
#  define GL_RENDERBUFFER 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH
#  define GL_RENDERBUFFER_WIDTH 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT
#  define GL_RENDERBUFFER_HEIGHT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1
#  define GL_STENCIL_INDEX1 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4
#  define GL_STENCIL_INDEX4 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8
#  define GL_STENCIL_INDEX8 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16
#  define GL_STENCIL_INDEX16 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE
#  define GL_RENDERBUFFER_RED_SIZE 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE
#  define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE
#  define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE
#  define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE
#  define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE
#  define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
#  define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#endif
#ifndef GL_MAX_SAMPLES
#  define GL_MAX_SAMPLES 0x8D57
#endif
#ifndef GL_INDEX
#  define GL_INDEX 0x8222
#endif
#ifndef GL_TEXTURE_LUMINANCE_TYPE
#  define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#endif
#ifndef GL_TEXTURE_INTENSITY_TYPE
#  define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbuffer
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFERPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFERPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
typedef void (APIENTRYP PFNGLUXBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbuffer
extern PFNGLUXISRENDERBUFFERPROC glIsRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
extern PFNGLUXBINDRENDERBUFFERPROC glBindRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
extern PFNGLUXDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
extern PFNGLUXGENRENDERBUFFERSPROC glGenRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
extern PFNGLUXRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
extern PFNGLUXGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
extern PFNGLUXISFRAMEBUFFERPROC glIsFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
extern PFNGLUXBINDFRAMEBUFFERPROC glBindFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
extern PFNGLUXDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
extern PFNGLUXGENFRAMEBUFFERSPROC glGenFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
extern PFNGLUXCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
extern PFNGLUXFRAMEBUFFERTEXTURE1DPROC glFramebufferTexture1D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
extern PFNGLUXFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
extern PFNGLUXFRAMEBUFFERTEXTURE3DPROC glFramebufferTexture3D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
extern PFNGLUXFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetFramebufferAttachmentParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
extern PFNGLUXGENERATEMIPMAPPROC glGenerateMipmap;
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
extern PFNGLUXBLITFRAMEBUFFERPROC glBlitFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
extern PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC glRenderbufferStorageMultisample;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
extern PFNGLUXFRAMEBUFFERTEXTURELAYERPROC glFramebufferTextureLayer;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:09 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_framebuffer_object__
#define __GLUX_GL_ARB_framebuffer_object__

GLUX_NEW_PLUGIN(GL_ARB_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION
#  define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
#  define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#endif
#ifndef GL_FRAMEBUFFER_DEFAULT
#  define GL_FRAMEBUFFER_DEFAULT 0x8218
#endif
#ifndef GL_FRAMEBUFFER_UNDEFINED
#  define GL_FRAMEBUFFER_UNDEFINED 0x8219
#endif
#ifndef GL_DEPTH_STENCIL_ATTACHMENT
#  define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE
#  define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#endif
#ifndef GL_DEPTH_STENCIL
#  define GL_DEPTH_STENCIL 0x84F9
#endif
#ifndef GL_UNSIGNED_INT_24_8
#  define GL_UNSIGNED_INT_24_8 0x84FA
#endif
#ifndef GL_DEPTH24_STENCIL8
#  define GL_DEPTH24_STENCIL8 0x88F0
#endif
#ifndef GL_TEXTURE_STENCIL_SIZE
#  define GL_TEXTURE_STENCIL_SIZE 0x88F1
#endif
#ifndef GL_TEXTURE_RED_TYPE
#  define GL_TEXTURE_RED_TYPE 0x8C10
#endif
#ifndef GL_TEXTURE_GREEN_TYPE
#  define GL_TEXTURE_GREEN_TYPE 0x8C11
#endif
#ifndef GL_TEXTURE_BLUE_TYPE
#  define GL_TEXTURE_BLUE_TYPE 0x8C12
#endif
#ifndef GL_TEXTURE_ALPHA_TYPE
#  define GL_TEXTURE_ALPHA_TYPE 0x8C13
#endif
#ifndef GL_TEXTURE_DEPTH_TYPE
#  define GL_TEXTURE_DEPTH_TYPE 0x8C16
#endif
#ifndef GL_UNSIGNED_NORMALIZED
#  define GL_UNSIGNED_NORMALIZED 0x8C17
#endif
#ifndef GL_FRAMEBUFFER_BINDING
#  define GL_FRAMEBUFFER_BINDING 0x8CA6
#endif
#ifndef GL_DRAW_FRAMEBUFFER_BINDING
#  define GL_DRAW_FRAMEBUFFER_BINDING GL_FRAMEBUFFER_BINDING
#endif
#ifndef GL_RENDERBUFFER_BINDING
#  define GL_RENDERBUFFER_BINDING 0x8CA7
#endif
#ifndef GL_READ_FRAMEBUFFER
#  define GL_READ_FRAMEBUFFER 0x8CA8
#endif
#ifndef GL_DRAW_FRAMEBUFFER
#  define GL_DRAW_FRAMEBUFFER 0x8CA9
#endif
#ifndef GL_READ_FRAMEBUFFER_BINDING
#  define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#endif
#ifndef GL_RENDERBUFFER_SAMPLES
#  define GL_RENDERBUFFER_SAMPLES 0x8CAB
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE
#  define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED
#  define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS
#  define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0
#  define GL_COLOR_ATTACHMENT0 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1
#  define GL_COLOR_ATTACHMENT1 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2
#  define GL_COLOR_ATTACHMENT2 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3
#  define GL_COLOR_ATTACHMENT3 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4
#  define GL_COLOR_ATTACHMENT4 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5
#  define GL_COLOR_ATTACHMENT5 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6
#  define GL_COLOR_ATTACHMENT6 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7
#  define GL_COLOR_ATTACHMENT7 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8
#  define GL_COLOR_ATTACHMENT8 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9
#  define GL_COLOR_ATTACHMENT9 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10
#  define GL_COLOR_ATTACHMENT10 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11
#  define GL_COLOR_ATTACHMENT11 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12
#  define GL_COLOR_ATTACHMENT12 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13
#  define GL_COLOR_ATTACHMENT13 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14
#  define GL_COLOR_ATTACHMENT14 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15
#  define GL_COLOR_ATTACHMENT15 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT
#  define GL_DEPTH_ATTACHMENT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT
#  define GL_STENCIL_ATTACHMENT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER
#  define GL_FRAMEBUFFER 0x8D40
#endif
#ifndef GL_RENDERBUFFER
#  define GL_RENDERBUFFER 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH
#  define GL_RENDERBUFFER_WIDTH 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT
#  define GL_RENDERBUFFER_HEIGHT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1
#  define GL_STENCIL_INDEX1 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4
#  define GL_STENCIL_INDEX4 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8
#  define GL_STENCIL_INDEX8 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16
#  define GL_STENCIL_INDEX16 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE
#  define GL_RENDERBUFFER_RED_SIZE 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE
#  define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE
#  define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE
#  define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE
#  define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE
#  define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
#  define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#endif
#ifndef GL_MAX_SAMPLES
#  define GL_MAX_SAMPLES 0x8D57
#endif
#ifndef GL_INDEX
#  define GL_INDEX 0x8222
#endif
#ifndef GL_TEXTURE_LUMINANCE_TYPE
#  define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#endif
#ifndef GL_TEXTURE_INTENSITY_TYPE
#  define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbuffer
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFERPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFERPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
typedef void (APIENTRYP PFNGLUXBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbuffer
extern PFNGLUXISRENDERBUFFERPROC glIsRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
extern PFNGLUXBINDRENDERBUFFERPROC glBindRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
extern PFNGLUXDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
extern PFNGLUXGENRENDERBUFFERSPROC glGenRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
extern PFNGLUXRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
extern PFNGLUXGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
extern PFNGLUXISFRAMEBUFFERPROC glIsFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
extern PFNGLUXBINDFRAMEBUFFERPROC glBindFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
extern PFNGLUXDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
extern PFNGLUXGENFRAMEBUFFERSPROC glGenFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
extern PFNGLUXCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
extern PFNGLUXFRAMEBUFFERTEXTURE1DPROC glFramebufferTexture1D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
extern PFNGLUXFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
extern PFNGLUXFRAMEBUFFERTEXTURE3DPROC glFramebufferTexture3D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
extern PFNGLUXFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetFramebufferAttachmentParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
extern PFNGLUXGENERATEMIPMAPPROC glGenerateMipmap;
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
extern PFNGLUXBLITFRAMEBUFFERPROC glBlitFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
extern PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC glRenderbufferStorageMultisample;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
extern PFNGLUXFRAMEBUFFERTEXTURELAYERPROC glFramebufferTextureLayer;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:22 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_framebuffer_object__
#define __GLUX_GL_ARB_framebuffer_object__

GLUX_NEW_PLUGIN(GL_ARB_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION
#  define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
#  define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#endif
#ifndef GL_FRAMEBUFFER_DEFAULT
#  define GL_FRAMEBUFFER_DEFAULT 0x8218
#endif
#ifndef GL_FRAMEBUFFER_UNDEFINED
#  define GL_FRAMEBUFFER_UNDEFINED 0x8219
#endif
#ifndef GL_DEPTH_STENCIL_ATTACHMENT
#  define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE
#  define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#endif
#ifndef GL_DEPTH_STENCIL
#  define GL_DEPTH_STENCIL 0x84F9
#endif
#ifndef GL_UNSIGNED_INT_24_8
#  define GL_UNSIGNED_INT_24_8 0x84FA
#endif
#ifndef GL_DEPTH24_STENCIL8
#  define GL_DEPTH24_STENCIL8 0x88F0
#endif
#ifndef GL_TEXTURE_STENCIL_SIZE
#  define GL_TEXTURE_STENCIL_SIZE 0x88F1
#endif
#ifndef GL_TEXTURE_RED_TYPE
#  define GL_TEXTURE_RED_TYPE 0x8C10
#endif
#ifndef GL_TEXTURE_GREEN_TYPE
#  define GL_TEXTURE_GREEN_TYPE 0x8C11
#endif
#ifndef GL_TEXTURE_BLUE_TYPE
#  define GL_TEXTURE_BLUE_TYPE 0x8C12
#endif
#ifndef GL_TEXTURE_ALPHA_TYPE
#  define GL_TEXTURE_ALPHA_TYPE 0x8C13
#endif
#ifndef GL_TEXTURE_DEPTH_TYPE
#  define GL_TEXTURE_DEPTH_TYPE 0x8C16
#endif
#ifndef GL_UNSIGNED_NORMALIZED
#  define GL_UNSIGNED_NORMALIZED 0x8C17
#endif
#ifndef GL_FRAMEBUFFER_BINDING
#  define GL_FRAMEBUFFER_BINDING 0x8CA6
#endif
#ifndef GL_DRAW_FRAMEBUFFER_BINDING
#  define GL_DRAW_FRAMEBUFFER_BINDING GL_FRAMEBUFFER_BINDING
#endif
#ifndef GL_RENDERBUFFER_BINDING
#  define GL_RENDERBUFFER_BINDING 0x8CA7
#endif
#ifndef GL_READ_FRAMEBUFFER
#  define GL_READ_FRAMEBUFFER 0x8CA8
#endif
#ifndef GL_DRAW_FRAMEBUFFER
#  define GL_DRAW_FRAMEBUFFER 0x8CA9
#endif
#ifndef GL_READ_FRAMEBUFFER_BINDING
#  define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#endif
#ifndef GL_RENDERBUFFER_SAMPLES
#  define GL_RENDERBUFFER_SAMPLES 0x8CAB
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE
#  define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED
#  define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS
#  define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0
#  define GL_COLOR_ATTACHMENT0 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1
#  define GL_COLOR_ATTACHMENT1 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2
#  define GL_COLOR_ATTACHMENT2 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3
#  define GL_COLOR_ATTACHMENT3 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4
#  define GL_COLOR_ATTACHMENT4 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5
#  define GL_COLOR_ATTACHMENT5 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6
#  define GL_COLOR_ATTACHMENT6 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7
#  define GL_COLOR_ATTACHMENT7 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8
#  define GL_COLOR_ATTACHMENT8 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9
#  define GL_COLOR_ATTACHMENT9 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10
#  define GL_COLOR_ATTACHMENT10 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11
#  define GL_COLOR_ATTACHMENT11 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12
#  define GL_COLOR_ATTACHMENT12 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13
#  define GL_COLOR_ATTACHMENT13 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14
#  define GL_COLOR_ATTACHMENT14 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15
#  define GL_COLOR_ATTACHMENT15 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT
#  define GL_DEPTH_ATTACHMENT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT
#  define GL_STENCIL_ATTACHMENT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER
#  define GL_FRAMEBUFFER 0x8D40
#endif
#ifndef GL_RENDERBUFFER
#  define GL_RENDERBUFFER 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH
#  define GL_RENDERBUFFER_WIDTH 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT
#  define GL_RENDERBUFFER_HEIGHT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1
#  define GL_STENCIL_INDEX1 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4
#  define GL_STENCIL_INDEX4 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8
#  define GL_STENCIL_INDEX8 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16
#  define GL_STENCIL_INDEX16 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE
#  define GL_RENDERBUFFER_RED_SIZE 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE
#  define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE
#  define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE
#  define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE
#  define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE
#  define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
#  define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#endif
#ifndef GL_MAX_SAMPLES
#  define GL_MAX_SAMPLES 0x8D57
#endif
#ifndef GL_INDEX
#  define GL_INDEX 0x8222
#endif
#ifndef GL_TEXTURE_LUMINANCE_TYPE
#  define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#endif
#ifndef GL_TEXTURE_INTENSITY_TYPE
#  define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbuffer
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFERPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFERPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
typedef void (APIENTRYP PFNGLUXBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbuffer
extern PFNGLUXISRENDERBUFFERPROC glIsRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
extern PFNGLUXBINDRENDERBUFFERPROC glBindRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
extern PFNGLUXDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
extern PFNGLUXGENRENDERBUFFERSPROC glGenRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
extern PFNGLUXRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
extern PFNGLUXGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
extern PFNGLUXISFRAMEBUFFERPROC glIsFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
extern PFNGLUXBINDFRAMEBUFFERPROC glBindFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
extern PFNGLUXDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
extern PFNGLUXGENFRAMEBUFFERSPROC glGenFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
extern PFNGLUXCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
extern PFNGLUXFRAMEBUFFERTEXTURE1DPROC glFramebufferTexture1D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
extern PFNGLUXFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
extern PFNGLUXFRAMEBUFFERTEXTURE3DPROC glFramebufferTexture3D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
extern PFNGLUXFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetFramebufferAttachmentParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
extern PFNGLUXGENERATEMIPMAPPROC glGenerateMipmap;
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
extern PFNGLUXBLITFRAMEBUFFERPROC glBlitFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
extern PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC glRenderbufferStorageMultisample;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
extern PFNGLUXFRAMEBUFFERTEXTURELAYERPROC glFramebufferTextureLayer;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:52:03 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_framebuffer_object__
#define __GLUX_GL_ARB_framebuffer_object__

GLUX_NEW_PLUGIN(GL_ARB_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION
#  define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
#  define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#endif
#ifndef GL_FRAMEBUFFER_DEFAULT
#  define GL_FRAMEBUFFER_DEFAULT 0x8218
#endif
#ifndef GL_FRAMEBUFFER_UNDEFINED
#  define GL_FRAMEBUFFER_UNDEFINED 0x8219
#endif
#ifndef GL_DEPTH_STENCIL_ATTACHMENT
#  define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE
#  define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#endif
#ifndef GL_DEPTH_STENCIL
#  define GL_DEPTH_STENCIL 0x84F9
#endif
#ifndef GL_UNSIGNED_INT_24_8
#  define GL_UNSIGNED_INT_24_8 0x84FA
#endif
#ifndef GL_DEPTH24_STENCIL8
#  define GL_DEPTH24_STENCIL8 0x88F0
#endif
#ifndef GL_TEXTURE_STENCIL_SIZE
#  define GL_TEXTURE_STENCIL_SIZE 0x88F1
#endif
#ifndef GL_TEXTURE_RED_TYPE
#  define GL_TEXTURE_RED_TYPE 0x8C10
#endif
#ifndef GL_TEXTURE_GREEN_TYPE
#  define GL_TEXTURE_GREEN_TYPE 0x8C11
#endif
#ifndef GL_TEXTURE_BLUE_TYPE
#  define GL_TEXTURE_BLUE_TYPE 0x8C12
#endif
#ifndef GL_TEXTURE_ALPHA_TYPE
#  define GL_TEXTURE_ALPHA_TYPE 0x8C13
#endif
#ifndef GL_TEXTURE_DEPTH_TYPE
#  define GL_TEXTURE_DEPTH_TYPE 0x8C16
#endif
#ifndef GL_UNSIGNED_NORMALIZED
#  define GL_UNSIGNED_NORMALIZED 0x8C17
#endif
#ifndef GL_FRAMEBUFFER_BINDING
#  define GL_FRAMEBUFFER_BINDING 0x8CA6
#endif
#ifndef GL_DRAW_FRAMEBUFFER_BINDING
#  define GL_DRAW_FRAMEBUFFER_BINDING GL_FRAMEBUFFER_BINDING
#endif
#ifndef GL_RENDERBUFFER_BINDING
#  define GL_RENDERBUFFER_BINDING 0x8CA7
#endif
#ifndef GL_READ_FRAMEBUFFER
#  define GL_READ_FRAMEBUFFER 0x8CA8
#endif
#ifndef GL_DRAW_FRAMEBUFFER
#  define GL_DRAW_FRAMEBUFFER 0x8CA9
#endif
#ifndef GL_READ_FRAMEBUFFER_BINDING
#  define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#endif
#ifndef GL_RENDERBUFFER_SAMPLES
#  define GL_RENDERBUFFER_SAMPLES 0x8CAB
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE
#  define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED
#  define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS
#  define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0
#  define GL_COLOR_ATTACHMENT0 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1
#  define GL_COLOR_ATTACHMENT1 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2
#  define GL_COLOR_ATTACHMENT2 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3
#  define GL_COLOR_ATTACHMENT3 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4
#  define GL_COLOR_ATTACHMENT4 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5
#  define GL_COLOR_ATTACHMENT5 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6
#  define GL_COLOR_ATTACHMENT6 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7
#  define GL_COLOR_ATTACHMENT7 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8
#  define GL_COLOR_ATTACHMENT8 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9
#  define GL_COLOR_ATTACHMENT9 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10
#  define GL_COLOR_ATTACHMENT10 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11
#  define GL_COLOR_ATTACHMENT11 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12
#  define GL_COLOR_ATTACHMENT12 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13
#  define GL_COLOR_ATTACHMENT13 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14
#  define GL_COLOR_ATTACHMENT14 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15
#  define GL_COLOR_ATTACHMENT15 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT
#  define GL_DEPTH_ATTACHMENT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT
#  define GL_STENCIL_ATTACHMENT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER
#  define GL_FRAMEBUFFER 0x8D40
#endif
#ifndef GL_RENDERBUFFER
#  define GL_RENDERBUFFER 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH
#  define GL_RENDERBUFFER_WIDTH 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT
#  define GL_RENDERBUFFER_HEIGHT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1
#  define GL_STENCIL_INDEX1 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4
#  define GL_STENCIL_INDEX4 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8
#  define GL_STENCIL_INDEX8 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16
#  define GL_STENCIL_INDEX16 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE
#  define GL_RENDERBUFFER_RED_SIZE 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE
#  define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE
#  define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE
#  define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE
#  define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE
#  define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
#  define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#endif
#ifndef GL_MAX_SAMPLES
#  define GL_MAX_SAMPLES 0x8D57
#endif
#ifndef GL_INDEX
#  define GL_INDEX 0x8222
#endif
#ifndef GL_TEXTURE_LUMINANCE_TYPE
#  define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#endif
#ifndef GL_TEXTURE_INTENSITY_TYPE
#  define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbuffer
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFERPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFERPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
typedef void (APIENTRYP PFNGLUXBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbuffer
extern PFNGLUXISRENDERBUFFERPROC glIsRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
extern PFNGLUXBINDRENDERBUFFERPROC glBindRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
extern PFNGLUXDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
extern PFNGLUXGENRENDERBUFFERSPROC glGenRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
extern PFNGLUXRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
extern PFNGLUXGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
extern PFNGLUXISFRAMEBUFFERPROC glIsFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
extern PFNGLUXBINDFRAMEBUFFERPROC glBindFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
extern PFNGLUXDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
extern PFNGLUXGENFRAMEBUFFERSPROC glGenFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
extern PFNGLUXCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
extern PFNGLUXFRAMEBUFFERTEXTURE1DPROC glFramebufferTexture1D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
extern PFNGLUXFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
extern PFNGLUXFRAMEBUFFERTEXTURE3DPROC glFramebufferTexture3D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
extern PFNGLUXFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetFramebufferAttachmentParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
extern PFNGLUXGENERATEMIPMAPPROC glGenerateMipmap;
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
extern PFNGLUXBLITFRAMEBUFFERPROC glBlitFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
extern PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC glRenderbufferStorageMultisample;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
extern PFNGLUXFRAMEBUFFERTEXTURELAYERPROC glFramebufferTextureLayer;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_framebuffer_object__
#define __GLUX_GL_ARB_framebuffer_object__

GLUX_NEW_PLUGIN(GL_ARB_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION
#  define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
#  define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#endif
#ifndef GL_FRAMEBUFFER_DEFAULT
#  define GL_FRAMEBUFFER_DEFAULT 0x8218
#endif
#ifndef GL_FRAMEBUFFER_UNDEFINED
#  define GL_FRAMEBUFFER_UNDEFINED 0x8219
#endif
#ifndef GL_DEPTH_STENCIL_ATTACHMENT
#  define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE
#  define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#endif
#ifndef GL_DEPTH_STENCIL
#  define GL_DEPTH_STENCIL 0x84F9
#endif
#ifndef GL_UNSIGNED_INT_24_8
#  define GL_UNSIGNED_INT_24_8 0x84FA
#endif
#ifndef GL_DEPTH24_STENCIL8
#  define GL_DEPTH24_STENCIL8 0x88F0
#endif
#ifndef GL_TEXTURE_STENCIL_SIZE
#  define GL_TEXTURE_STENCIL_SIZE 0x88F1
#endif
#ifndef GL_TEXTURE_RED_TYPE
#  define GL_TEXTURE_RED_TYPE 0x8C10
#endif
#ifndef GL_TEXTURE_GREEN_TYPE
#  define GL_TEXTURE_GREEN_TYPE 0x8C11
#endif
#ifndef GL_TEXTURE_BLUE_TYPE
#  define GL_TEXTURE_BLUE_TYPE 0x8C12
#endif
#ifndef GL_TEXTURE_ALPHA_TYPE
#  define GL_TEXTURE_ALPHA_TYPE 0x8C13
#endif
#ifndef GL_TEXTURE_DEPTH_TYPE
#  define GL_TEXTURE_DEPTH_TYPE 0x8C16
#endif
#ifndef GL_UNSIGNED_NORMALIZED
#  define GL_UNSIGNED_NORMALIZED 0x8C17
#endif
#ifndef GL_FRAMEBUFFER_BINDING
#  define GL_FRAMEBUFFER_BINDING 0x8CA6
#endif
#ifndef GL_DRAW_FRAMEBUFFER_BINDING
#  define GL_DRAW_FRAMEBUFFER_BINDING GL_FRAMEBUFFER_BINDING
#endif
#ifndef GL_RENDERBUFFER_BINDING
#  define GL_RENDERBUFFER_BINDING 0x8CA7
#endif
#ifndef GL_READ_FRAMEBUFFER
#  define GL_READ_FRAMEBUFFER 0x8CA8
#endif
#ifndef GL_DRAW_FRAMEBUFFER
#  define GL_DRAW_FRAMEBUFFER 0x8CA9
#endif
#ifndef GL_READ_FRAMEBUFFER_BINDING
#  define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#endif
#ifndef GL_RENDERBUFFER_SAMPLES
#  define GL_RENDERBUFFER_SAMPLES 0x8CAB
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE
#  define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED
#  define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS
#  define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0
#  define GL_COLOR_ATTACHMENT0 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1
#  define GL_COLOR_ATTACHMENT1 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2
#  define GL_COLOR_ATTACHMENT2 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3
#  define GL_COLOR_ATTACHMENT3 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4
#  define GL_COLOR_ATTACHMENT4 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5
#  define GL_COLOR_ATTACHMENT5 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6
#  define GL_COLOR_ATTACHMENT6 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7
#  define GL_COLOR_ATTACHMENT7 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8
#  define GL_COLOR_ATTACHMENT8 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9
#  define GL_COLOR_ATTACHMENT9 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10
#  define GL_COLOR_ATTACHMENT10 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11
#  define GL_COLOR_ATTACHMENT11 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12
#  define GL_COLOR_ATTACHMENT12 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13
#  define GL_COLOR_ATTACHMENT13 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14
#  define GL_COLOR_ATTACHMENT14 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15
#  define GL_COLOR_ATTACHMENT15 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT
#  define GL_DEPTH_ATTACHMENT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT
#  define GL_STENCIL_ATTACHMENT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER
#  define GL_FRAMEBUFFER 0x8D40
#endif
#ifndef GL_RENDERBUFFER
#  define GL_RENDERBUFFER 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH
#  define GL_RENDERBUFFER_WIDTH 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT
#  define GL_RENDERBUFFER_HEIGHT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1
#  define GL_STENCIL_INDEX1 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4
#  define GL_STENCIL_INDEX4 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8
#  define GL_STENCIL_INDEX8 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16
#  define GL_STENCIL_INDEX16 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE
#  define GL_RENDERBUFFER_RED_SIZE 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE
#  define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE
#  define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE
#  define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE
#  define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE
#  define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
#  define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#endif
#ifndef GL_MAX_SAMPLES
#  define GL_MAX_SAMPLES 0x8D57
#endif
#ifndef GL_INDEX
#  define GL_INDEX 0x8222
#endif
#ifndef GL_TEXTURE_LUMINANCE_TYPE
#  define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#endif
#ifndef GL_TEXTURE_INTENSITY_TYPE
#  define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbuffer
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFERPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFERPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
typedef void (APIENTRYP PFNGLUXBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbuffer
extern PFNGLUXISRENDERBUFFERPROC glIsRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
extern PFNGLUXBINDRENDERBUFFERPROC glBindRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
extern PFNGLUXDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
extern PFNGLUXGENRENDERBUFFERSPROC glGenRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
extern PFNGLUXRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
extern PFNGLUXGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
extern PFNGLUXISFRAMEBUFFERPROC glIsFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
extern PFNGLUXBINDFRAMEBUFFERPROC glBindFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
extern PFNGLUXDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
extern PFNGLUXGENFRAMEBUFFERSPROC glGenFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
extern PFNGLUXCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
extern PFNGLUXFRAMEBUFFERTEXTURE1DPROC glFramebufferTexture1D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
extern PFNGLUXFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
extern PFNGLUXFRAMEBUFFERTEXTURE3DPROC glFramebufferTexture3D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
extern PFNGLUXFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetFramebufferAttachmentParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
extern PFNGLUXGENERATEMIPMAPPROC glGenerateMipmap;
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
extern PFNGLUXBLITFRAMEBUFFERPROC glBlitFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
extern PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC glRenderbufferStorageMultisample;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
extern PFNGLUXFRAMEBUFFERTEXTURELAYERPROC glFramebufferTextureLayer;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:05 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_framebuffer_object__
#define __GLUX_GL_ARB_framebuffer_object__

GLUX_NEW_PLUGIN(GL_ARB_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION
#  define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
#  define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#endif
#ifndef GL_FRAMEBUFFER_DEFAULT
#  define GL_FRAMEBUFFER_DEFAULT 0x8218
#endif
#ifndef GL_FRAMEBUFFER_UNDEFINED
#  define GL_FRAMEBUFFER_UNDEFINED 0x8219
#endif
#ifndef GL_DEPTH_STENCIL_ATTACHMENT
#  define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE
#  define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#endif
#ifndef GL_DEPTH_STENCIL
#  define GL_DEPTH_STENCIL 0x84F9
#endif
#ifndef GL_UNSIGNED_INT_24_8
#  define GL_UNSIGNED_INT_24_8 0x84FA
#endif
#ifndef GL_DEPTH24_STENCIL8
#  define GL_DEPTH24_STENCIL8 0x88F0
#endif
#ifndef GL_TEXTURE_STENCIL_SIZE
#  define GL_TEXTURE_STENCIL_SIZE 0x88F1
#endif
#ifndef GL_TEXTURE_RED_TYPE
#  define GL_TEXTURE_RED_TYPE 0x8C10
#endif
#ifndef GL_TEXTURE_GREEN_TYPE
#  define GL_TEXTURE_GREEN_TYPE 0x8C11
#endif
#ifndef GL_TEXTURE_BLUE_TYPE
#  define GL_TEXTURE_BLUE_TYPE 0x8C12
#endif
#ifndef GL_TEXTURE_ALPHA_TYPE
#  define GL_TEXTURE_ALPHA_TYPE 0x8C13
#endif
#ifndef GL_TEXTURE_DEPTH_TYPE
#  define GL_TEXTURE_DEPTH_TYPE 0x8C16
#endif
#ifndef GL_UNSIGNED_NORMALIZED
#  define GL_UNSIGNED_NORMALIZED 0x8C17
#endif
#ifndef GL_FRAMEBUFFER_BINDING
#  define GL_FRAMEBUFFER_BINDING 0x8CA6
#endif
#ifndef GL_DRAW_FRAMEBUFFER_BINDING
#  define GL_DRAW_FRAMEBUFFER_BINDING GL_FRAMEBUFFER_BINDING
#endif
#ifndef GL_RENDERBUFFER_BINDING
#  define GL_RENDERBUFFER_BINDING 0x8CA7
#endif
#ifndef GL_READ_FRAMEBUFFER
#  define GL_READ_FRAMEBUFFER 0x8CA8
#endif
#ifndef GL_DRAW_FRAMEBUFFER
#  define GL_DRAW_FRAMEBUFFER 0x8CA9
#endif
#ifndef GL_READ_FRAMEBUFFER_BINDING
#  define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#endif
#ifndef GL_RENDERBUFFER_SAMPLES
#  define GL_RENDERBUFFER_SAMPLES 0x8CAB
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE
#  define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED
#  define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS
#  define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0
#  define GL_COLOR_ATTACHMENT0 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1
#  define GL_COLOR_ATTACHMENT1 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2
#  define GL_COLOR_ATTACHMENT2 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3
#  define GL_COLOR_ATTACHMENT3 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4
#  define GL_COLOR_ATTACHMENT4 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5
#  define GL_COLOR_ATTACHMENT5 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6
#  define GL_COLOR_ATTACHMENT6 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7
#  define GL_COLOR_ATTACHMENT7 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8
#  define GL_COLOR_ATTACHMENT8 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9
#  define GL_COLOR_ATTACHMENT9 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10
#  define GL_COLOR_ATTACHMENT10 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11
#  define GL_COLOR_ATTACHMENT11 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12
#  define GL_COLOR_ATTACHMENT12 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13
#  define GL_COLOR_ATTACHMENT13 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14
#  define GL_COLOR_ATTACHMENT14 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15
#  define GL_COLOR_ATTACHMENT15 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT
#  define GL_DEPTH_ATTACHMENT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT
#  define GL_STENCIL_ATTACHMENT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER
#  define GL_FRAMEBUFFER 0x8D40
#endif
#ifndef GL_RENDERBUFFER
#  define GL_RENDERBUFFER 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH
#  define GL_RENDERBUFFER_WIDTH 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT
#  define GL_RENDERBUFFER_HEIGHT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1
#  define GL_STENCIL_INDEX1 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4
#  define GL_STENCIL_INDEX4 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8
#  define GL_STENCIL_INDEX8 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16
#  define GL_STENCIL_INDEX16 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE
#  define GL_RENDERBUFFER_RED_SIZE 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE
#  define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE
#  define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE
#  define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE
#  define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE
#  define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
#  define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#endif
#ifndef GL_MAX_SAMPLES
#  define GL_MAX_SAMPLES 0x8D57
#endif
#ifndef GL_INDEX
#  define GL_INDEX 0x8222
#endif
#ifndef GL_TEXTURE_LUMINANCE_TYPE
#  define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#endif
#ifndef GL_TEXTURE_INTENSITY_TYPE
#  define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbuffer
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFERPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFERPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
typedef void (APIENTRYP PFNGLUXBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbuffer
extern PFNGLUXISRENDERBUFFERPROC glIsRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
extern PFNGLUXBINDRENDERBUFFERPROC glBindRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
extern PFNGLUXDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
extern PFNGLUXGENRENDERBUFFERSPROC glGenRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
extern PFNGLUXRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
extern PFNGLUXGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
extern PFNGLUXISFRAMEBUFFERPROC glIsFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
extern PFNGLUXBINDFRAMEBUFFERPROC glBindFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
extern PFNGLUXDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
extern PFNGLUXGENFRAMEBUFFERSPROC glGenFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
extern PFNGLUXCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
extern PFNGLUXFRAMEBUFFERTEXTURE1DPROC glFramebufferTexture1D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
extern PFNGLUXFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
extern PFNGLUXFRAMEBUFFERTEXTURE3DPROC glFramebufferTexture3D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
extern PFNGLUXFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetFramebufferAttachmentParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
extern PFNGLUXGENERATEMIPMAPPROC glGenerateMipmap;
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
extern PFNGLUXBLITFRAMEBUFFERPROC glBlitFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
extern PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC glRenderbufferStorageMultisample;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
extern PFNGLUXFRAMEBUFFERTEXTURELAYERPROC glFramebufferTextureLayer;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_framebuffer_object__
#define __GLUX_GL_ARB_framebuffer_object__

GLUX_NEW_PLUGIN(GL_ARB_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION
#  define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
#  define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#endif
#ifndef GL_FRAMEBUFFER_DEFAULT
#  define GL_FRAMEBUFFER_DEFAULT 0x8218
#endif
#ifndef GL_FRAMEBUFFER_UNDEFINED
#  define GL_FRAMEBUFFER_UNDEFINED 0x8219
#endif
#ifndef GL_DEPTH_STENCIL_ATTACHMENT
#  define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE
#  define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#endif
#ifndef GL_DEPTH_STENCIL
#  define GL_DEPTH_STENCIL 0x84F9
#endif
#ifndef GL_UNSIGNED_INT_24_8
#  define GL_UNSIGNED_INT_24_8 0x84FA
#endif
#ifndef GL_DEPTH24_STENCIL8
#  define GL_DEPTH24_STENCIL8 0x88F0
#endif
#ifndef GL_TEXTURE_STENCIL_SIZE
#  define GL_TEXTURE_STENCIL_SIZE 0x88F1
#endif
#ifndef GL_TEXTURE_RED_TYPE
#  define GL_TEXTURE_RED_TYPE 0x8C10
#endif
#ifndef GL_TEXTURE_GREEN_TYPE
#  define GL_TEXTURE_GREEN_TYPE 0x8C11
#endif
#ifndef GL_TEXTURE_BLUE_TYPE
#  define GL_TEXTURE_BLUE_TYPE 0x8C12
#endif
#ifndef GL_TEXTURE_ALPHA_TYPE
#  define GL_TEXTURE_ALPHA_TYPE 0x8C13
#endif
#ifndef GL_TEXTURE_DEPTH_TYPE
#  define GL_TEXTURE_DEPTH_TYPE 0x8C16
#endif
#ifndef GL_UNSIGNED_NORMALIZED
#  define GL_UNSIGNED_NORMALIZED 0x8C17
#endif
#ifndef GL_FRAMEBUFFER_BINDING
#  define GL_FRAMEBUFFER_BINDING 0x8CA6
#endif
#ifndef GL_DRAW_FRAMEBUFFER_BINDING
#  define GL_DRAW_FRAMEBUFFER_BINDING GL_FRAMEBUFFER_BINDING
#endif
#ifndef GL_RENDERBUFFER_BINDING
#  define GL_RENDERBUFFER_BINDING 0x8CA7
#endif
#ifndef GL_READ_FRAMEBUFFER
#  define GL_READ_FRAMEBUFFER 0x8CA8
#endif
#ifndef GL_DRAW_FRAMEBUFFER
#  define GL_DRAW_FRAMEBUFFER 0x8CA9
#endif
#ifndef GL_READ_FRAMEBUFFER_BINDING
#  define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#endif
#ifndef GL_RENDERBUFFER_SAMPLES
#  define GL_RENDERBUFFER_SAMPLES 0x8CAB
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE
#  define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED
#  define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS
#  define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0
#  define GL_COLOR_ATTACHMENT0 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1
#  define GL_COLOR_ATTACHMENT1 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2
#  define GL_COLOR_ATTACHMENT2 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3
#  define GL_COLOR_ATTACHMENT3 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4
#  define GL_COLOR_ATTACHMENT4 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5
#  define GL_COLOR_ATTACHMENT5 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6
#  define GL_COLOR_ATTACHMENT6 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7
#  define GL_COLOR_ATTACHMENT7 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8
#  define GL_COLOR_ATTACHMENT8 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9
#  define GL_COLOR_ATTACHMENT9 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10
#  define GL_COLOR_ATTACHMENT10 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11
#  define GL_COLOR_ATTACHMENT11 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12
#  define GL_COLOR_ATTACHMENT12 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13
#  define GL_COLOR_ATTACHMENT13 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14
#  define GL_COLOR_ATTACHMENT14 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15
#  define GL_COLOR_ATTACHMENT15 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT
#  define GL_DEPTH_ATTACHMENT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT
#  define GL_STENCIL_ATTACHMENT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER
#  define GL_FRAMEBUFFER 0x8D40
#endif
#ifndef GL_RENDERBUFFER
#  define GL_RENDERBUFFER 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH
#  define GL_RENDERBUFFER_WIDTH 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT
#  define GL_RENDERBUFFER_HEIGHT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1
#  define GL_STENCIL_INDEX1 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4
#  define GL_STENCIL_INDEX4 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8
#  define GL_STENCIL_INDEX8 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16
#  define GL_STENCIL_INDEX16 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE
#  define GL_RENDERBUFFER_RED_SIZE 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE
#  define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE
#  define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE
#  define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE
#  define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE
#  define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
#  define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#endif
#ifndef GL_MAX_SAMPLES
#  define GL_MAX_SAMPLES 0x8D57
#endif
#ifndef GL_INDEX
#  define GL_INDEX 0x8222
#endif
#ifndef GL_TEXTURE_LUMINANCE_TYPE
#  define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#endif
#ifndef GL_TEXTURE_INTENSITY_TYPE
#  define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbuffer
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFERPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFERPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
typedef void (APIENTRYP PFNGLUXBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbuffer
extern PFNGLUXISRENDERBUFFERPROC glIsRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
extern PFNGLUXBINDRENDERBUFFERPROC glBindRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
extern PFNGLUXDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
extern PFNGLUXGENRENDERBUFFERSPROC glGenRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
extern PFNGLUXRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
extern PFNGLUXGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
extern PFNGLUXISFRAMEBUFFERPROC glIsFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
extern PFNGLUXBINDFRAMEBUFFERPROC glBindFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
extern PFNGLUXDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
extern PFNGLUXGENFRAMEBUFFERSPROC glGenFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
extern PFNGLUXCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
extern PFNGLUXFRAMEBUFFERTEXTURE1DPROC glFramebufferTexture1D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
extern PFNGLUXFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
extern PFNGLUXFRAMEBUFFERTEXTURE3DPROC glFramebufferTexture3D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
extern PFNGLUXFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetFramebufferAttachmentParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
extern PFNGLUXGENERATEMIPMAPPROC glGenerateMipmap;
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
extern PFNGLUXBLITFRAMEBUFFERPROC glBlitFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
extern PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC glRenderbufferStorageMultisample;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
extern PFNGLUXFRAMEBUFFERTEXTURELAYERPROC glFramebufferTextureLayer;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_framebuffer_object__
#define __GLUX_GL_ARB_framebuffer_object__

GLUX_NEW_PLUGIN(GL_ARB_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION
#  define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
#  define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#endif
#ifndef GL_FRAMEBUFFER_DEFAULT
#  define GL_FRAMEBUFFER_DEFAULT 0x8218
#endif
#ifndef GL_FRAMEBUFFER_UNDEFINED
#  define GL_FRAMEBUFFER_UNDEFINED 0x8219
#endif
#ifndef GL_DEPTH_STENCIL_ATTACHMENT
#  define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE
#  define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#endif
#ifndef GL_DEPTH_STENCIL
#  define GL_DEPTH_STENCIL 0x84F9
#endif
#ifndef GL_UNSIGNED_INT_24_8
#  define GL_UNSIGNED_INT_24_8 0x84FA
#endif
#ifndef GL_DEPTH24_STENCIL8
#  define GL_DEPTH24_STENCIL8 0x88F0
#endif
#ifndef GL_TEXTURE_STENCIL_SIZE
#  define GL_TEXTURE_STENCIL_SIZE 0x88F1
#endif
#ifndef GL_TEXTURE_RED_TYPE
#  define GL_TEXTURE_RED_TYPE 0x8C10
#endif
#ifndef GL_TEXTURE_GREEN_TYPE
#  define GL_TEXTURE_GREEN_TYPE 0x8C11
#endif
#ifndef GL_TEXTURE_BLUE_TYPE
#  define GL_TEXTURE_BLUE_TYPE 0x8C12
#endif
#ifndef GL_TEXTURE_ALPHA_TYPE
#  define GL_TEXTURE_ALPHA_TYPE 0x8C13
#endif
#ifndef GL_TEXTURE_DEPTH_TYPE
#  define GL_TEXTURE_DEPTH_TYPE 0x8C16
#endif
#ifndef GL_UNSIGNED_NORMALIZED
#  define GL_UNSIGNED_NORMALIZED 0x8C17
#endif
#ifndef GL_FRAMEBUFFER_BINDING
#  define GL_FRAMEBUFFER_BINDING 0x8CA6
#endif
#ifndef GL_DRAW_FRAMEBUFFER_BINDING
#  define GL_DRAW_FRAMEBUFFER_BINDING GL_FRAMEBUFFER_BINDING
#endif
#ifndef GL_RENDERBUFFER_BINDING
#  define GL_RENDERBUFFER_BINDING 0x8CA7
#endif
#ifndef GL_READ_FRAMEBUFFER
#  define GL_READ_FRAMEBUFFER 0x8CA8
#endif
#ifndef GL_DRAW_FRAMEBUFFER
#  define GL_DRAW_FRAMEBUFFER 0x8CA9
#endif
#ifndef GL_READ_FRAMEBUFFER_BINDING
#  define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#endif
#ifndef GL_RENDERBUFFER_SAMPLES
#  define GL_RENDERBUFFER_SAMPLES 0x8CAB
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE
#  define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED
#  define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS
#  define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0
#  define GL_COLOR_ATTACHMENT0 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1
#  define GL_COLOR_ATTACHMENT1 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2
#  define GL_COLOR_ATTACHMENT2 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3
#  define GL_COLOR_ATTACHMENT3 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4
#  define GL_COLOR_ATTACHMENT4 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5
#  define GL_COLOR_ATTACHMENT5 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6
#  define GL_COLOR_ATTACHMENT6 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7
#  define GL_COLOR_ATTACHMENT7 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8
#  define GL_COLOR_ATTACHMENT8 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9
#  define GL_COLOR_ATTACHMENT9 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10
#  define GL_COLOR_ATTACHMENT10 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11
#  define GL_COLOR_ATTACHMENT11 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12
#  define GL_COLOR_ATTACHMENT12 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13
#  define GL_COLOR_ATTACHMENT13 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14
#  define GL_COLOR_ATTACHMENT14 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15
#  define GL_COLOR_ATTACHMENT15 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT
#  define GL_DEPTH_ATTACHMENT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT
#  define GL_STENCIL_ATTACHMENT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER
#  define GL_FRAMEBUFFER 0x8D40
#endif
#ifndef GL_RENDERBUFFER
#  define GL_RENDERBUFFER 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH
#  define GL_RENDERBUFFER_WIDTH 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT
#  define GL_RENDERBUFFER_HEIGHT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1
#  define GL_STENCIL_INDEX1 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4
#  define GL_STENCIL_INDEX4 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8
#  define GL_STENCIL_INDEX8 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16
#  define GL_STENCIL_INDEX16 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE
#  define GL_RENDERBUFFER_RED_SIZE 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE
#  define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE
#  define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE
#  define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE
#  define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE
#  define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
#  define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#endif
#ifndef GL_MAX_SAMPLES
#  define GL_MAX_SAMPLES 0x8D57
#endif
#ifndef GL_INDEX
#  define GL_INDEX 0x8222
#endif
#ifndef GL_TEXTURE_LUMINANCE_TYPE
#  define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#endif
#ifndef GL_TEXTURE_INTENSITY_TYPE
#  define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbuffer
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFERPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFERPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
typedef void (APIENTRYP PFNGLUXBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbuffer
extern PFNGLUXISRENDERBUFFERPROC glIsRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
extern PFNGLUXBINDRENDERBUFFERPROC glBindRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
extern PFNGLUXDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
extern PFNGLUXGENRENDERBUFFERSPROC glGenRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
extern PFNGLUXRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
extern PFNGLUXGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
extern PFNGLUXISFRAMEBUFFERPROC glIsFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
extern PFNGLUXBINDFRAMEBUFFERPROC glBindFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
extern PFNGLUXDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
extern PFNGLUXGENFRAMEBUFFERSPROC glGenFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
extern PFNGLUXCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
extern PFNGLUXFRAMEBUFFERTEXTURE1DPROC glFramebufferTexture1D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
extern PFNGLUXFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
extern PFNGLUXFRAMEBUFFERTEXTURE3DPROC glFramebufferTexture3D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
extern PFNGLUXFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetFramebufferAttachmentParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
extern PFNGLUXGENERATEMIPMAPPROC glGenerateMipmap;
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
extern PFNGLUXBLITFRAMEBUFFERPROC glBlitFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
extern PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC glRenderbufferStorageMultisample;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
extern PFNGLUXFRAMEBUFFERTEXTURELAYERPROC glFramebufferTextureLayer;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:41:59 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_framebuffer_object__
#define __GLUX_GL_ARB_framebuffer_object__

GLUX_NEW_PLUGIN(GL_ARB_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION
#  define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
#  define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#endif
#ifndef GL_FRAMEBUFFER_DEFAULT
#  define GL_FRAMEBUFFER_DEFAULT 0x8218
#endif
#ifndef GL_FRAMEBUFFER_UNDEFINED
#  define GL_FRAMEBUFFER_UNDEFINED 0x8219
#endif
#ifndef GL_DEPTH_STENCIL_ATTACHMENT
#  define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE
#  define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#endif
#ifndef GL_DEPTH_STENCIL
#  define GL_DEPTH_STENCIL 0x84F9
#endif
#ifndef GL_UNSIGNED_INT_24_8
#  define GL_UNSIGNED_INT_24_8 0x84FA
#endif
#ifndef GL_DEPTH24_STENCIL8
#  define GL_DEPTH24_STENCIL8 0x88F0
#endif
#ifndef GL_TEXTURE_STENCIL_SIZE
#  define GL_TEXTURE_STENCIL_SIZE 0x88F1
#endif
#ifndef GL_TEXTURE_RED_TYPE
#  define GL_TEXTURE_RED_TYPE 0x8C10
#endif
#ifndef GL_TEXTURE_GREEN_TYPE
#  define GL_TEXTURE_GREEN_TYPE 0x8C11
#endif
#ifndef GL_TEXTURE_BLUE_TYPE
#  define GL_TEXTURE_BLUE_TYPE 0x8C12
#endif
#ifndef GL_TEXTURE_ALPHA_TYPE
#  define GL_TEXTURE_ALPHA_TYPE 0x8C13
#endif
#ifndef GL_TEXTURE_DEPTH_TYPE
#  define GL_TEXTURE_DEPTH_TYPE 0x8C16
#endif
#ifndef GL_UNSIGNED_NORMALIZED
#  define GL_UNSIGNED_NORMALIZED 0x8C17
#endif
#ifndef GL_FRAMEBUFFER_BINDING
#  define GL_FRAMEBUFFER_BINDING 0x8CA6
#endif
#ifndef GL_DRAW_FRAMEBUFFER_BINDING
#  define GL_DRAW_FRAMEBUFFER_BINDING GL_FRAMEBUFFER_BINDING
#endif
#ifndef GL_RENDERBUFFER_BINDING
#  define GL_RENDERBUFFER_BINDING 0x8CA7
#endif
#ifndef GL_READ_FRAMEBUFFER
#  define GL_READ_FRAMEBUFFER 0x8CA8
#endif
#ifndef GL_DRAW_FRAMEBUFFER
#  define GL_DRAW_FRAMEBUFFER 0x8CA9
#endif
#ifndef GL_READ_FRAMEBUFFER_BINDING
#  define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#endif
#ifndef GL_RENDERBUFFER_SAMPLES
#  define GL_RENDERBUFFER_SAMPLES 0x8CAB
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE
#  define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED
#  define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS
#  define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0
#  define GL_COLOR_ATTACHMENT0 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1
#  define GL_COLOR_ATTACHMENT1 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2
#  define GL_COLOR_ATTACHMENT2 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3
#  define GL_COLOR_ATTACHMENT3 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4
#  define GL_COLOR_ATTACHMENT4 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5
#  define GL_COLOR_ATTACHMENT5 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6
#  define GL_COLOR_ATTACHMENT6 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7
#  define GL_COLOR_ATTACHMENT7 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8
#  define GL_COLOR_ATTACHMENT8 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9
#  define GL_COLOR_ATTACHMENT9 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10
#  define GL_COLOR_ATTACHMENT10 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11
#  define GL_COLOR_ATTACHMENT11 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12
#  define GL_COLOR_ATTACHMENT12 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13
#  define GL_COLOR_ATTACHMENT13 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14
#  define GL_COLOR_ATTACHMENT14 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15
#  define GL_COLOR_ATTACHMENT15 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT
#  define GL_DEPTH_ATTACHMENT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT
#  define GL_STENCIL_ATTACHMENT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER
#  define GL_FRAMEBUFFER 0x8D40
#endif
#ifndef GL_RENDERBUFFER
#  define GL_RENDERBUFFER 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH
#  define GL_RENDERBUFFER_WIDTH 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT
#  define GL_RENDERBUFFER_HEIGHT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1
#  define GL_STENCIL_INDEX1 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4
#  define GL_STENCIL_INDEX4 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8
#  define GL_STENCIL_INDEX8 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16
#  define GL_STENCIL_INDEX16 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE
#  define GL_RENDERBUFFER_RED_SIZE 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE
#  define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE
#  define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE
#  define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE
#  define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE
#  define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
#  define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#endif
#ifndef GL_MAX_SAMPLES
#  define GL_MAX_SAMPLES 0x8D57
#endif
#ifndef GL_INDEX
#  define GL_INDEX 0x8222
#endif
#ifndef GL_TEXTURE_LUMINANCE_TYPE
#  define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#endif
#ifndef GL_TEXTURE_INTENSITY_TYPE
#  define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbuffer
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFERPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFERPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
typedef void (APIENTRYP PFNGLUXBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbuffer
extern PFNGLUXISRENDERBUFFERPROC glIsRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
extern PFNGLUXBINDRENDERBUFFERPROC glBindRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
extern PFNGLUXDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
extern PFNGLUXGENRENDERBUFFERSPROC glGenRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
extern PFNGLUXRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
extern PFNGLUXGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
extern PFNGLUXISFRAMEBUFFERPROC glIsFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
extern PFNGLUXBINDFRAMEBUFFERPROC glBindFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
extern PFNGLUXDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
extern PFNGLUXGENFRAMEBUFFERSPROC glGenFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
extern PFNGLUXCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
extern PFNGLUXFRAMEBUFFERTEXTURE1DPROC glFramebufferTexture1D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
extern PFNGLUXFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
extern PFNGLUXFRAMEBUFFERTEXTURE3DPROC glFramebufferTexture3D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
extern PFNGLUXFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetFramebufferAttachmentParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
extern PFNGLUXGENERATEMIPMAPPROC glGenerateMipmap;
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
extern PFNGLUXBLITFRAMEBUFFERPROC glBlitFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
extern PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC glRenderbufferStorageMultisample;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
extern PFNGLUXFRAMEBUFFERTEXTURELAYERPROC glFramebufferTextureLayer;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:40 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_framebuffer_object__
#define __GLUX_GL_ARB_framebuffer_object__

GLUX_NEW_PLUGIN(GL_ARB_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION
#  define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
#  define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#endif
#ifndef GL_FRAMEBUFFER_DEFAULT
#  define GL_FRAMEBUFFER_DEFAULT 0x8218
#endif
#ifndef GL_FRAMEBUFFER_UNDEFINED
#  define GL_FRAMEBUFFER_UNDEFINED 0x8219
#endif
#ifndef GL_DEPTH_STENCIL_ATTACHMENT
#  define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE
#  define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#endif
#ifndef GL_DEPTH_STENCIL
#  define GL_DEPTH_STENCIL 0x84F9
#endif
#ifndef GL_UNSIGNED_INT_24_8
#  define GL_UNSIGNED_INT_24_8 0x84FA
#endif
#ifndef GL_DEPTH24_STENCIL8
#  define GL_DEPTH24_STENCIL8 0x88F0
#endif
#ifndef GL_TEXTURE_STENCIL_SIZE
#  define GL_TEXTURE_STENCIL_SIZE 0x88F1
#endif
#ifndef GL_TEXTURE_RED_TYPE
#  define GL_TEXTURE_RED_TYPE 0x8C10
#endif
#ifndef GL_TEXTURE_GREEN_TYPE
#  define GL_TEXTURE_GREEN_TYPE 0x8C11
#endif
#ifndef GL_TEXTURE_BLUE_TYPE
#  define GL_TEXTURE_BLUE_TYPE 0x8C12
#endif
#ifndef GL_TEXTURE_ALPHA_TYPE
#  define GL_TEXTURE_ALPHA_TYPE 0x8C13
#endif
#ifndef GL_TEXTURE_DEPTH_TYPE
#  define GL_TEXTURE_DEPTH_TYPE 0x8C16
#endif
#ifndef GL_UNSIGNED_NORMALIZED
#  define GL_UNSIGNED_NORMALIZED 0x8C17
#endif
#ifndef GL_FRAMEBUFFER_BINDING
#  define GL_FRAMEBUFFER_BINDING 0x8CA6
#endif
#ifndef GL_DRAW_FRAMEBUFFER_BINDING
#  define GL_DRAW_FRAMEBUFFER_BINDING GL_FRAMEBUFFER_BINDING
#endif
#ifndef GL_RENDERBUFFER_BINDING
#  define GL_RENDERBUFFER_BINDING 0x8CA7
#endif
#ifndef GL_READ_FRAMEBUFFER
#  define GL_READ_FRAMEBUFFER 0x8CA8
#endif
#ifndef GL_DRAW_FRAMEBUFFER
#  define GL_DRAW_FRAMEBUFFER 0x8CA9
#endif
#ifndef GL_READ_FRAMEBUFFER_BINDING
#  define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#endif
#ifndef GL_RENDERBUFFER_SAMPLES
#  define GL_RENDERBUFFER_SAMPLES 0x8CAB
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE
#  define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED
#  define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS
#  define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0
#  define GL_COLOR_ATTACHMENT0 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1
#  define GL_COLOR_ATTACHMENT1 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2
#  define GL_COLOR_ATTACHMENT2 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3
#  define GL_COLOR_ATTACHMENT3 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4
#  define GL_COLOR_ATTACHMENT4 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5
#  define GL_COLOR_ATTACHMENT5 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6
#  define GL_COLOR_ATTACHMENT6 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7
#  define GL_COLOR_ATTACHMENT7 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8
#  define GL_COLOR_ATTACHMENT8 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9
#  define GL_COLOR_ATTACHMENT9 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10
#  define GL_COLOR_ATTACHMENT10 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11
#  define GL_COLOR_ATTACHMENT11 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12
#  define GL_COLOR_ATTACHMENT12 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13
#  define GL_COLOR_ATTACHMENT13 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14
#  define GL_COLOR_ATTACHMENT14 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15
#  define GL_COLOR_ATTACHMENT15 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT
#  define GL_DEPTH_ATTACHMENT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT
#  define GL_STENCIL_ATTACHMENT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER
#  define GL_FRAMEBUFFER 0x8D40
#endif
#ifndef GL_RENDERBUFFER
#  define GL_RENDERBUFFER 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH
#  define GL_RENDERBUFFER_WIDTH 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT
#  define GL_RENDERBUFFER_HEIGHT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1
#  define GL_STENCIL_INDEX1 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4
#  define GL_STENCIL_INDEX4 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8
#  define GL_STENCIL_INDEX8 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16
#  define GL_STENCIL_INDEX16 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE
#  define GL_RENDERBUFFER_RED_SIZE 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE
#  define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE
#  define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE
#  define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE
#  define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE
#  define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
#  define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#endif
#ifndef GL_MAX_SAMPLES
#  define GL_MAX_SAMPLES 0x8D57
#endif
#ifndef GL_INDEX
#  define GL_INDEX 0x8222
#endif
#ifndef GL_TEXTURE_LUMINANCE_TYPE
#  define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#endif
#ifndef GL_TEXTURE_INTENSITY_TYPE
#  define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbuffer
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFERPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFERPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
typedef void (APIENTRYP PFNGLUXBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbuffer
extern PFNGLUXISRENDERBUFFERPROC glIsRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
extern PFNGLUXBINDRENDERBUFFERPROC glBindRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
extern PFNGLUXDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
extern PFNGLUXGENRENDERBUFFERSPROC glGenRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
extern PFNGLUXRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
extern PFNGLUXGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
extern PFNGLUXISFRAMEBUFFERPROC glIsFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
extern PFNGLUXBINDFRAMEBUFFERPROC glBindFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
extern PFNGLUXDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
extern PFNGLUXGENFRAMEBUFFERSPROC glGenFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
extern PFNGLUXCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
extern PFNGLUXFRAMEBUFFERTEXTURE1DPROC glFramebufferTexture1D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
extern PFNGLUXFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
extern PFNGLUXFRAMEBUFFERTEXTURE3DPROC glFramebufferTexture3D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
extern PFNGLUXFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetFramebufferAttachmentParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
extern PFNGLUXGENERATEMIPMAPPROC glGenerateMipmap;
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
extern PFNGLUXBLITFRAMEBUFFERPROC glBlitFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
extern PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC glRenderbufferStorageMultisample;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
extern PFNGLUXFRAMEBUFFERTEXTURELAYERPROC glFramebufferTextureLayer;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:09:59 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_framebuffer_object__
#define __GLUX_GL_ARB_framebuffer_object__

GLUX_NEW_PLUGIN(GL_ARB_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION
#  define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
#  define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#endif
#ifndef GL_FRAMEBUFFER_DEFAULT
#  define GL_FRAMEBUFFER_DEFAULT 0x8218
#endif
#ifndef GL_FRAMEBUFFER_UNDEFINED
#  define GL_FRAMEBUFFER_UNDEFINED 0x8219
#endif
#ifndef GL_DEPTH_STENCIL_ATTACHMENT
#  define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE
#  define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#endif
#ifndef GL_DEPTH_STENCIL
#  define GL_DEPTH_STENCIL 0x84F9
#endif
#ifndef GL_UNSIGNED_INT_24_8
#  define GL_UNSIGNED_INT_24_8 0x84FA
#endif
#ifndef GL_DEPTH24_STENCIL8
#  define GL_DEPTH24_STENCIL8 0x88F0
#endif
#ifndef GL_TEXTURE_STENCIL_SIZE
#  define GL_TEXTURE_STENCIL_SIZE 0x88F1
#endif
#ifndef GL_TEXTURE_RED_TYPE
#  define GL_TEXTURE_RED_TYPE 0x8C10
#endif
#ifndef GL_TEXTURE_GREEN_TYPE
#  define GL_TEXTURE_GREEN_TYPE 0x8C11
#endif
#ifndef GL_TEXTURE_BLUE_TYPE
#  define GL_TEXTURE_BLUE_TYPE 0x8C12
#endif
#ifndef GL_TEXTURE_ALPHA_TYPE
#  define GL_TEXTURE_ALPHA_TYPE 0x8C13
#endif
#ifndef GL_TEXTURE_DEPTH_TYPE
#  define GL_TEXTURE_DEPTH_TYPE 0x8C16
#endif
#ifndef GL_UNSIGNED_NORMALIZED
#  define GL_UNSIGNED_NORMALIZED 0x8C17
#endif
#ifndef GL_FRAMEBUFFER_BINDING
#  define GL_FRAMEBUFFER_BINDING 0x8CA6
#endif
#ifndef GL_DRAW_FRAMEBUFFER_BINDING
#  define GL_DRAW_FRAMEBUFFER_BINDING GL_FRAMEBUFFER_BINDING
#endif
#ifndef GL_RENDERBUFFER_BINDING
#  define GL_RENDERBUFFER_BINDING 0x8CA7
#endif
#ifndef GL_READ_FRAMEBUFFER
#  define GL_READ_FRAMEBUFFER 0x8CA8
#endif
#ifndef GL_DRAW_FRAMEBUFFER
#  define GL_DRAW_FRAMEBUFFER 0x8CA9
#endif
#ifndef GL_READ_FRAMEBUFFER_BINDING
#  define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#endif
#ifndef GL_RENDERBUFFER_SAMPLES
#  define GL_RENDERBUFFER_SAMPLES 0x8CAB
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE
#  define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED
#  define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS
#  define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0
#  define GL_COLOR_ATTACHMENT0 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1
#  define GL_COLOR_ATTACHMENT1 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2
#  define GL_COLOR_ATTACHMENT2 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3
#  define GL_COLOR_ATTACHMENT3 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4
#  define GL_COLOR_ATTACHMENT4 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5
#  define GL_COLOR_ATTACHMENT5 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6
#  define GL_COLOR_ATTACHMENT6 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7
#  define GL_COLOR_ATTACHMENT7 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8
#  define GL_COLOR_ATTACHMENT8 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9
#  define GL_COLOR_ATTACHMENT9 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10
#  define GL_COLOR_ATTACHMENT10 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11
#  define GL_COLOR_ATTACHMENT11 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12
#  define GL_COLOR_ATTACHMENT12 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13
#  define GL_COLOR_ATTACHMENT13 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14
#  define GL_COLOR_ATTACHMENT14 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15
#  define GL_COLOR_ATTACHMENT15 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT
#  define GL_DEPTH_ATTACHMENT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT
#  define GL_STENCIL_ATTACHMENT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER
#  define GL_FRAMEBUFFER 0x8D40
#endif
#ifndef GL_RENDERBUFFER
#  define GL_RENDERBUFFER 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH
#  define GL_RENDERBUFFER_WIDTH 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT
#  define GL_RENDERBUFFER_HEIGHT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1
#  define GL_STENCIL_INDEX1 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4
#  define GL_STENCIL_INDEX4 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8
#  define GL_STENCIL_INDEX8 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16
#  define GL_STENCIL_INDEX16 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE
#  define GL_RENDERBUFFER_RED_SIZE 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE
#  define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE
#  define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE
#  define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE
#  define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE
#  define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
#  define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#endif
#ifndef GL_MAX_SAMPLES
#  define GL_MAX_SAMPLES 0x8D57
#endif
#ifndef GL_INDEX
#  define GL_INDEX 0x8222
#endif
#ifndef GL_TEXTURE_LUMINANCE_TYPE
#  define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#endif
#ifndef GL_TEXTURE_INTENSITY_TYPE
#  define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbuffer
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFERPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFERPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
typedef void (APIENTRYP PFNGLUXBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbuffer
extern PFNGLUXISRENDERBUFFERPROC glIsRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
extern PFNGLUXBINDRENDERBUFFERPROC glBindRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
extern PFNGLUXDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
extern PFNGLUXGENRENDERBUFFERSPROC glGenRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
extern PFNGLUXRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
extern PFNGLUXGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
extern PFNGLUXISFRAMEBUFFERPROC glIsFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
extern PFNGLUXBINDFRAMEBUFFERPROC glBindFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
extern PFNGLUXDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
extern PFNGLUXGENFRAMEBUFFERSPROC glGenFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
extern PFNGLUXCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
extern PFNGLUXFRAMEBUFFERTEXTURE1DPROC glFramebufferTexture1D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
extern PFNGLUXFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
extern PFNGLUXFRAMEBUFFERTEXTURE3DPROC glFramebufferTexture3D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
extern PFNGLUXFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetFramebufferAttachmentParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
extern PFNGLUXGENERATEMIPMAPPROC glGenerateMipmap;
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
extern PFNGLUXBLITFRAMEBUFFERPROC glBlitFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
extern PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC glRenderbufferStorageMultisample;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
extern PFNGLUXFRAMEBUFFERTEXTURELAYERPROC glFramebufferTextureLayer;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:20:00 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_framebuffer_object__
#define __GLUX_GL_ARB_framebuffer_object__

GLUX_NEW_PLUGIN(GL_ARB_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION
#  define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
#  define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#endif
#ifndef GL_FRAMEBUFFER_DEFAULT
#  define GL_FRAMEBUFFER_DEFAULT 0x8218
#endif
#ifndef GL_FRAMEBUFFER_UNDEFINED
#  define GL_FRAMEBUFFER_UNDEFINED 0x8219
#endif
#ifndef GL_DEPTH_STENCIL_ATTACHMENT
#  define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE
#  define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#endif
#ifndef GL_DEPTH_STENCIL
#  define GL_DEPTH_STENCIL 0x84F9
#endif
#ifndef GL_UNSIGNED_INT_24_8
#  define GL_UNSIGNED_INT_24_8 0x84FA
#endif
#ifndef GL_DEPTH24_STENCIL8
#  define GL_DEPTH24_STENCIL8 0x88F0
#endif
#ifndef GL_TEXTURE_STENCIL_SIZE
#  define GL_TEXTURE_STENCIL_SIZE 0x88F1
#endif
#ifndef GL_TEXTURE_RED_TYPE
#  define GL_TEXTURE_RED_TYPE 0x8C10
#endif
#ifndef GL_TEXTURE_GREEN_TYPE
#  define GL_TEXTURE_GREEN_TYPE 0x8C11
#endif
#ifndef GL_TEXTURE_BLUE_TYPE
#  define GL_TEXTURE_BLUE_TYPE 0x8C12
#endif
#ifndef GL_TEXTURE_ALPHA_TYPE
#  define GL_TEXTURE_ALPHA_TYPE 0x8C13
#endif
#ifndef GL_TEXTURE_DEPTH_TYPE
#  define GL_TEXTURE_DEPTH_TYPE 0x8C16
#endif
#ifndef GL_UNSIGNED_NORMALIZED
#  define GL_UNSIGNED_NORMALIZED 0x8C17
#endif
#ifndef GL_FRAMEBUFFER_BINDING
#  define GL_FRAMEBUFFER_BINDING 0x8CA6
#endif
#ifndef GL_DRAW_FRAMEBUFFER_BINDING
#  define GL_DRAW_FRAMEBUFFER_BINDING GL_FRAMEBUFFER_BINDING
#endif
#ifndef GL_RENDERBUFFER_BINDING
#  define GL_RENDERBUFFER_BINDING 0x8CA7
#endif
#ifndef GL_READ_FRAMEBUFFER
#  define GL_READ_FRAMEBUFFER 0x8CA8
#endif
#ifndef GL_DRAW_FRAMEBUFFER
#  define GL_DRAW_FRAMEBUFFER 0x8CA9
#endif
#ifndef GL_READ_FRAMEBUFFER_BINDING
#  define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#endif
#ifndef GL_RENDERBUFFER_SAMPLES
#  define GL_RENDERBUFFER_SAMPLES 0x8CAB
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE
#  define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED
#  define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS
#  define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0
#  define GL_COLOR_ATTACHMENT0 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1
#  define GL_COLOR_ATTACHMENT1 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2
#  define GL_COLOR_ATTACHMENT2 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3
#  define GL_COLOR_ATTACHMENT3 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4
#  define GL_COLOR_ATTACHMENT4 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5
#  define GL_COLOR_ATTACHMENT5 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6
#  define GL_COLOR_ATTACHMENT6 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7
#  define GL_COLOR_ATTACHMENT7 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8
#  define GL_COLOR_ATTACHMENT8 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9
#  define GL_COLOR_ATTACHMENT9 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10
#  define GL_COLOR_ATTACHMENT10 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11
#  define GL_COLOR_ATTACHMENT11 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12
#  define GL_COLOR_ATTACHMENT12 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13
#  define GL_COLOR_ATTACHMENT13 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14
#  define GL_COLOR_ATTACHMENT14 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15
#  define GL_COLOR_ATTACHMENT15 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT
#  define GL_DEPTH_ATTACHMENT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT
#  define GL_STENCIL_ATTACHMENT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER
#  define GL_FRAMEBUFFER 0x8D40
#endif
#ifndef GL_RENDERBUFFER
#  define GL_RENDERBUFFER 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH
#  define GL_RENDERBUFFER_WIDTH 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT
#  define GL_RENDERBUFFER_HEIGHT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1
#  define GL_STENCIL_INDEX1 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4
#  define GL_STENCIL_INDEX4 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8
#  define GL_STENCIL_INDEX8 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16
#  define GL_STENCIL_INDEX16 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE
#  define GL_RENDERBUFFER_RED_SIZE 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE
#  define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE
#  define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE
#  define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE
#  define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE
#  define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
#  define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#endif
#ifndef GL_MAX_SAMPLES
#  define GL_MAX_SAMPLES 0x8D57
#endif
#ifndef GL_INDEX
#  define GL_INDEX 0x8222
#endif
#ifndef GL_TEXTURE_LUMINANCE_TYPE
#  define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#endif
#ifndef GL_TEXTURE_INTENSITY_TYPE
#  define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbuffer
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFERPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFERPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
typedef void (APIENTRYP PFNGLUXBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbuffer
extern PFNGLUXISRENDERBUFFERPROC glIsRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
extern PFNGLUXBINDRENDERBUFFERPROC glBindRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
extern PFNGLUXDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
extern PFNGLUXGENRENDERBUFFERSPROC glGenRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
extern PFNGLUXRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
extern PFNGLUXGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
extern PFNGLUXISFRAMEBUFFERPROC glIsFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
extern PFNGLUXBINDFRAMEBUFFERPROC glBindFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
extern PFNGLUXDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
extern PFNGLUXGENFRAMEBUFFERSPROC glGenFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
extern PFNGLUXCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
extern PFNGLUXFRAMEBUFFERTEXTURE1DPROC glFramebufferTexture1D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
extern PFNGLUXFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
extern PFNGLUXFRAMEBUFFERTEXTURE3DPROC glFramebufferTexture3D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
extern PFNGLUXFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetFramebufferAttachmentParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
extern PFNGLUXGENERATEMIPMAPPROC glGenerateMipmap;
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
extern PFNGLUXBLITFRAMEBUFFERPROC glBlitFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
extern PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC glRenderbufferStorageMultisample;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
extern PFNGLUXFRAMEBUFFERTEXTURELAYERPROC glFramebufferTextureLayer;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:42:59 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_framebuffer_object__
#define __GLUX_GL_ARB_framebuffer_object__

GLUX_NEW_PLUGIN(GL_ARB_framebuffer_object)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION
#  define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
#  define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
#  define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#endif
#ifndef GL_FRAMEBUFFER_DEFAULT
#  define GL_FRAMEBUFFER_DEFAULT 0x8218
#endif
#ifndef GL_FRAMEBUFFER_UNDEFINED
#  define GL_FRAMEBUFFER_UNDEFINED 0x8219
#endif
#ifndef GL_DEPTH_STENCIL_ATTACHMENT
#  define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE
#  define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#endif
#ifndef GL_DEPTH_STENCIL
#  define GL_DEPTH_STENCIL 0x84F9
#endif
#ifndef GL_UNSIGNED_INT_24_8
#  define GL_UNSIGNED_INT_24_8 0x84FA
#endif
#ifndef GL_DEPTH24_STENCIL8
#  define GL_DEPTH24_STENCIL8 0x88F0
#endif
#ifndef GL_TEXTURE_STENCIL_SIZE
#  define GL_TEXTURE_STENCIL_SIZE 0x88F1
#endif
#ifndef GL_TEXTURE_RED_TYPE
#  define GL_TEXTURE_RED_TYPE 0x8C10
#endif
#ifndef GL_TEXTURE_GREEN_TYPE
#  define GL_TEXTURE_GREEN_TYPE 0x8C11
#endif
#ifndef GL_TEXTURE_BLUE_TYPE
#  define GL_TEXTURE_BLUE_TYPE 0x8C12
#endif
#ifndef GL_TEXTURE_ALPHA_TYPE
#  define GL_TEXTURE_ALPHA_TYPE 0x8C13
#endif
#ifndef GL_TEXTURE_DEPTH_TYPE
#  define GL_TEXTURE_DEPTH_TYPE 0x8C16
#endif
#ifndef GL_UNSIGNED_NORMALIZED
#  define GL_UNSIGNED_NORMALIZED 0x8C17
#endif
#ifndef GL_FRAMEBUFFER_BINDING
#  define GL_FRAMEBUFFER_BINDING 0x8CA6
#endif
#ifndef GL_DRAW_FRAMEBUFFER_BINDING
#  define GL_DRAW_FRAMEBUFFER_BINDING GL_FRAMEBUFFER_BINDING
#endif
#ifndef GL_RENDERBUFFER_BINDING
#  define GL_RENDERBUFFER_BINDING 0x8CA7
#endif
#ifndef GL_READ_FRAMEBUFFER
#  define GL_READ_FRAMEBUFFER 0x8CA8
#endif
#ifndef GL_DRAW_FRAMEBUFFER
#  define GL_DRAW_FRAMEBUFFER 0x8CA9
#endif
#ifndef GL_READ_FRAMEBUFFER_BINDING
#  define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#endif
#ifndef GL_RENDERBUFFER_SAMPLES
#  define GL_RENDERBUFFER_SAMPLES 0x8CAB
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE
#  define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED
#  define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS
#  define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0
#  define GL_COLOR_ATTACHMENT0 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1
#  define GL_COLOR_ATTACHMENT1 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2
#  define GL_COLOR_ATTACHMENT2 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3
#  define GL_COLOR_ATTACHMENT3 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4
#  define GL_COLOR_ATTACHMENT4 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5
#  define GL_COLOR_ATTACHMENT5 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6
#  define GL_COLOR_ATTACHMENT6 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7
#  define GL_COLOR_ATTACHMENT7 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8
#  define GL_COLOR_ATTACHMENT8 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9
#  define GL_COLOR_ATTACHMENT9 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10
#  define GL_COLOR_ATTACHMENT10 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11
#  define GL_COLOR_ATTACHMENT11 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12
#  define GL_COLOR_ATTACHMENT12 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13
#  define GL_COLOR_ATTACHMENT13 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14
#  define GL_COLOR_ATTACHMENT14 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15
#  define GL_COLOR_ATTACHMENT15 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT
#  define GL_DEPTH_ATTACHMENT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT
#  define GL_STENCIL_ATTACHMENT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER
#  define GL_FRAMEBUFFER 0x8D40
#endif
#ifndef GL_RENDERBUFFER
#  define GL_RENDERBUFFER 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH
#  define GL_RENDERBUFFER_WIDTH 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT
#  define GL_RENDERBUFFER_HEIGHT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1
#  define GL_STENCIL_INDEX1 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4
#  define GL_STENCIL_INDEX4 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8
#  define GL_STENCIL_INDEX8 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16
#  define GL_STENCIL_INDEX16 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE
#  define GL_RENDERBUFFER_RED_SIZE 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE
#  define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE
#  define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE
#  define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE
#  define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE
#  define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
#  define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#endif
#ifndef GL_MAX_SAMPLES
#  define GL_MAX_SAMPLES 0x8D57
#endif
#ifndef GL_INDEX
#  define GL_INDEX 0x8222
#endif
#ifndef GL_TEXTURE_LUMINANCE_TYPE
#  define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#endif
#ifndef GL_TEXTURE_INTENSITY_TYPE
#  define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbuffer
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFERPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFERPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
typedef void (APIENTRYP PFNGLUXBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbuffer
extern PFNGLUXISRENDERBUFFERPROC glIsRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbuffer
extern PFNGLUXBINDRENDERBUFFERPROC glBindRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffers
extern PFNGLUXDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffers
extern PFNGLUXGENRENDERBUFFERSPROC glGenRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorage
extern PFNGLUXRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameteriv
extern PFNGLUXGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;
#endif
#ifndef __GLUX__GLFCT_glIsFramebuffer
extern PFNGLUXISFRAMEBUFFERPROC glIsFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glBindFramebuffer
extern PFNGLUXBINDFRAMEBUFFERPROC glBindFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffers
extern PFNGLUXDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffers
extern PFNGLUXGENFRAMEBUFFERSPROC glGenFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatus
extern PFNGLUXCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1D
extern PFNGLUXFRAMEBUFFERTEXTURE1DPROC glFramebufferTexture1D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2D
extern PFNGLUXFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3D
extern PFNGLUXFRAMEBUFFERTEXTURE3DPROC glFramebufferTexture3D;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbuffer
extern PFNGLUXFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameteriv
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetFramebufferAttachmentParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmap
extern PFNGLUXGENERATEMIPMAPPROC glGenerateMipmap;
#endif
#ifndef __GLUX__GLFCT_glBlitFramebuffer
extern PFNGLUXBLITFRAMEBUFFERPROC glBlitFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageMultisample
extern PFNGLUXRENDERBUFFERSTORAGEMULTISAMPLEPROC glRenderbufferStorageMultisample;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayer
extern PFNGLUXFRAMEBUFFERTEXTURELAYERPROC glFramebufferTextureLayer;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
