
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:25 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_ES2_compatibility__
#define __GLUX_GL_ARB_ES2_compatibility__

GLUX_NEW_PLUGIN(GL_ARB_ES2_compatibility);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_FIXED
#  define GL_FIXED 0x140C
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE
#  define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT
#  define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#endif
#ifndef GL_LOW_FLOAT
#  define GL_LOW_FLOAT 0x8DF0
#endif
#ifndef GL_MEDIUM_FLOAT
#  define GL_MEDIUM_FLOAT 0x8DF1
#endif
#ifndef GL_HIGH_FLOAT
#  define GL_HIGH_FLOAT 0x8DF2
#endif
#ifndef GL_LOW_INT
#  define GL_LOW_INT 0x8DF3
#endif
#ifndef GL_MEDIUM_INT
#  define GL_MEDIUM_INT 0x8DF4
#endif
#ifndef GL_HIGH_INT
#  define GL_HIGH_INT 0x8DF5
#endif
#ifndef GL_SHADER_COMPILER
#  define GL_SHADER_COMPILER 0x8DFA
#endif
#ifndef GL_SHADER_BINARY_FORMATS
#  define GL_SHADER_BINARY_FORMATS 0x8DF8
#endif
#ifndef GL_NUM_SHADER_BINARY_FORMATS
#  define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#endif
#ifndef GL_MAX_VERTEX_UNIFORM_VECTORS
#  define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#endif
#ifndef GL_MAX_VARYING_VECTORS
#  define GL_MAX_VARYING_VECTORS 0x8DFC
#endif
#ifndef GL_MAX_FRAGMENT_UNIFORM_VECTORS
#  define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#endif
#ifndef GL_RGB565
#  define GL_RGB565 0x8D62
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
typedef void (APIENTRYP PFNGLUXRELEASESHADERCOMPILERPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
typedef void (APIENTRYP PFNGLUXSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
typedef void (APIENTRYP PFNGLUXGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
typedef void (APIENTRYP PFNGLUXDEPTHRANGEFPROC) (GLfloat n, GLfloat f);
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
typedef void (APIENTRYP PFNGLUXCLEARDEPTHFPROC) (GLfloat d);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
extern PFNGLUXRELEASESHADERCOMPILERPROC glReleaseShaderCompiler;
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
extern PFNGLUXSHADERBINARYPROC glShaderBinary;
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
extern PFNGLUXGETSHADERPRECISIONFORMATPROC glGetShaderPrecisionFormat;
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
extern PFNGLUXDEPTHRANGEFPROC glDepthRangef;
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
extern PFNGLUXCLEARDEPTHFPROC glClearDepthf;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:38 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_ES2_compatibility__
#define __GLUX_GL_ARB_ES2_compatibility__

GLUX_NEW_PLUGIN(GL_ARB_ES2_compatibility);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_FIXED
#  define GL_FIXED 0x140C
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE
#  define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT
#  define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#endif
#ifndef GL_LOW_FLOAT
#  define GL_LOW_FLOAT 0x8DF0
#endif
#ifndef GL_MEDIUM_FLOAT
#  define GL_MEDIUM_FLOAT 0x8DF1
#endif
#ifndef GL_HIGH_FLOAT
#  define GL_HIGH_FLOAT 0x8DF2
#endif
#ifndef GL_LOW_INT
#  define GL_LOW_INT 0x8DF3
#endif
#ifndef GL_MEDIUM_INT
#  define GL_MEDIUM_INT 0x8DF4
#endif
#ifndef GL_HIGH_INT
#  define GL_HIGH_INT 0x8DF5
#endif
#ifndef GL_SHADER_COMPILER
#  define GL_SHADER_COMPILER 0x8DFA
#endif
#ifndef GL_SHADER_BINARY_FORMATS
#  define GL_SHADER_BINARY_FORMATS 0x8DF8
#endif
#ifndef GL_NUM_SHADER_BINARY_FORMATS
#  define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#endif
#ifndef GL_MAX_VERTEX_UNIFORM_VECTORS
#  define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#endif
#ifndef GL_MAX_VARYING_VECTORS
#  define GL_MAX_VARYING_VECTORS 0x8DFC
#endif
#ifndef GL_MAX_FRAGMENT_UNIFORM_VECTORS
#  define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#endif
#ifndef GL_RGB565
#  define GL_RGB565 0x8D62
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
typedef void (APIENTRYP PFNGLUXRELEASESHADERCOMPILERPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
typedef void (APIENTRYP PFNGLUXSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
typedef void (APIENTRYP PFNGLUXGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
typedef void (APIENTRYP PFNGLUXDEPTHRANGEFPROC) (GLfloat n, GLfloat f);
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
typedef void (APIENTRYP PFNGLUXCLEARDEPTHFPROC) (GLfloat d);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
extern PFNGLUXRELEASESHADERCOMPILERPROC glReleaseShaderCompiler;
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
extern PFNGLUXSHADERBINARYPROC glShaderBinary;
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
extern PFNGLUXGETSHADERPRECISIONFORMATPROC glGetShaderPrecisionFormat;
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
extern PFNGLUXDEPTHRANGEFPROC glDepthRangef;
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
extern PFNGLUXCLEARDEPTHFPROC glClearDepthf;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:53 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_ES2_compatibility__
#define __GLUX_GL_ARB_ES2_compatibility__

GLUX_NEW_PLUGIN(GL_ARB_ES2_compatibility);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_FIXED
#  define GL_FIXED 0x140C
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE
#  define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT
#  define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#endif
#ifndef GL_LOW_FLOAT
#  define GL_LOW_FLOAT 0x8DF0
#endif
#ifndef GL_MEDIUM_FLOAT
#  define GL_MEDIUM_FLOAT 0x8DF1
#endif
#ifndef GL_HIGH_FLOAT
#  define GL_HIGH_FLOAT 0x8DF2
#endif
#ifndef GL_LOW_INT
#  define GL_LOW_INT 0x8DF3
#endif
#ifndef GL_MEDIUM_INT
#  define GL_MEDIUM_INT 0x8DF4
#endif
#ifndef GL_HIGH_INT
#  define GL_HIGH_INT 0x8DF5
#endif
#ifndef GL_SHADER_COMPILER
#  define GL_SHADER_COMPILER 0x8DFA
#endif
#ifndef GL_SHADER_BINARY_FORMATS
#  define GL_SHADER_BINARY_FORMATS 0x8DF8
#endif
#ifndef GL_NUM_SHADER_BINARY_FORMATS
#  define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#endif
#ifndef GL_MAX_VERTEX_UNIFORM_VECTORS
#  define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#endif
#ifndef GL_MAX_VARYING_VECTORS
#  define GL_MAX_VARYING_VECTORS 0x8DFC
#endif
#ifndef GL_MAX_FRAGMENT_UNIFORM_VECTORS
#  define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#endif
#ifndef GL_RGB565
#  define GL_RGB565 0x8D62
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
typedef void (APIENTRYP PFNGLUXRELEASESHADERCOMPILERPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
typedef void (APIENTRYP PFNGLUXSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
typedef void (APIENTRYP PFNGLUXGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
typedef void (APIENTRYP PFNGLUXDEPTHRANGEFPROC) (GLfloat n, GLfloat f);
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
typedef void (APIENTRYP PFNGLUXCLEARDEPTHFPROC) (GLfloat d);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
extern PFNGLUXRELEASESHADERCOMPILERPROC glReleaseShaderCompiler;
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
extern PFNGLUXSHADERBINARYPROC glShaderBinary;
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
extern PFNGLUXGETSHADERPRECISIONFORMATPROC glGetShaderPrecisionFormat;
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
extern PFNGLUXDEPTHRANGEFPROC glDepthRangef;
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
extern PFNGLUXCLEARDEPTHFPROC glClearDepthf;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:13 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_ES2_compatibility__
#define __GLUX_GL_ARB_ES2_compatibility__

GLUX_NEW_PLUGIN(GL_ARB_ES2_compatibility);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_FIXED
#  define GL_FIXED 0x140C
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE
#  define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT
#  define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#endif
#ifndef GL_LOW_FLOAT
#  define GL_LOW_FLOAT 0x8DF0
#endif
#ifndef GL_MEDIUM_FLOAT
#  define GL_MEDIUM_FLOAT 0x8DF1
#endif
#ifndef GL_HIGH_FLOAT
#  define GL_HIGH_FLOAT 0x8DF2
#endif
#ifndef GL_LOW_INT
#  define GL_LOW_INT 0x8DF3
#endif
#ifndef GL_MEDIUM_INT
#  define GL_MEDIUM_INT 0x8DF4
#endif
#ifndef GL_HIGH_INT
#  define GL_HIGH_INT 0x8DF5
#endif
#ifndef GL_SHADER_COMPILER
#  define GL_SHADER_COMPILER 0x8DFA
#endif
#ifndef GL_SHADER_BINARY_FORMATS
#  define GL_SHADER_BINARY_FORMATS 0x8DF8
#endif
#ifndef GL_NUM_SHADER_BINARY_FORMATS
#  define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#endif
#ifndef GL_MAX_VERTEX_UNIFORM_VECTORS
#  define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#endif
#ifndef GL_MAX_VARYING_VECTORS
#  define GL_MAX_VARYING_VECTORS 0x8DFC
#endif
#ifndef GL_MAX_FRAGMENT_UNIFORM_VECTORS
#  define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#endif
#ifndef GL_RGB565
#  define GL_RGB565 0x8D62
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
typedef void (APIENTRYP PFNGLUXRELEASESHADERCOMPILERPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
typedef void (APIENTRYP PFNGLUXSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
typedef void (APIENTRYP PFNGLUXGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
typedef void (APIENTRYP PFNGLUXDEPTHRANGEFPROC) (GLfloat n, GLfloat f);
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
typedef void (APIENTRYP PFNGLUXCLEARDEPTHFPROC) (GLfloat d);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
extern PFNGLUXRELEASESHADERCOMPILERPROC glReleaseShaderCompiler;
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
extern PFNGLUXSHADERBINARYPROC glShaderBinary;
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
extern PFNGLUXGETSHADERPRECISIONFORMATPROC glGetShaderPrecisionFormat;
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
extern PFNGLUXDEPTHRANGEFPROC glDepthRangef;
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
extern PFNGLUXCLEARDEPTHFPROC glClearDepthf;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:28 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_ES2_compatibility__
#define __GLUX_GL_ARB_ES2_compatibility__

GLUX_NEW_PLUGIN(GL_ARB_ES2_compatibility);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_FIXED
#  define GL_FIXED 0x140C
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE
#  define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT
#  define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#endif
#ifndef GL_LOW_FLOAT
#  define GL_LOW_FLOAT 0x8DF0
#endif
#ifndef GL_MEDIUM_FLOAT
#  define GL_MEDIUM_FLOAT 0x8DF1
#endif
#ifndef GL_HIGH_FLOAT
#  define GL_HIGH_FLOAT 0x8DF2
#endif
#ifndef GL_LOW_INT
#  define GL_LOW_INT 0x8DF3
#endif
#ifndef GL_MEDIUM_INT
#  define GL_MEDIUM_INT 0x8DF4
#endif
#ifndef GL_HIGH_INT
#  define GL_HIGH_INT 0x8DF5
#endif
#ifndef GL_SHADER_COMPILER
#  define GL_SHADER_COMPILER 0x8DFA
#endif
#ifndef GL_SHADER_BINARY_FORMATS
#  define GL_SHADER_BINARY_FORMATS 0x8DF8
#endif
#ifndef GL_NUM_SHADER_BINARY_FORMATS
#  define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#endif
#ifndef GL_MAX_VERTEX_UNIFORM_VECTORS
#  define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#endif
#ifndef GL_MAX_VARYING_VECTORS
#  define GL_MAX_VARYING_VECTORS 0x8DFC
#endif
#ifndef GL_MAX_FRAGMENT_UNIFORM_VECTORS
#  define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#endif
#ifndef GL_RGB565
#  define GL_RGB565 0x8D62
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
typedef void (APIENTRYP PFNGLUXRELEASESHADERCOMPILERPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
typedef void (APIENTRYP PFNGLUXSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
typedef void (APIENTRYP PFNGLUXGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
typedef void (APIENTRYP PFNGLUXDEPTHRANGEFPROC) (GLfloat n, GLfloat f);
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
typedef void (APIENTRYP PFNGLUXCLEARDEPTHFPROC) (GLfloat d);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
extern PFNGLUXRELEASESHADERCOMPILERPROC glReleaseShaderCompiler;
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
extern PFNGLUXSHADERBINARYPROC glShaderBinary;
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
extern PFNGLUXGETSHADERPRECISIONFORMATPROC glGetShaderPrecisionFormat;
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
extern PFNGLUXDEPTHRANGEFPROC glDepthRangef;
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
extern PFNGLUXCLEARDEPTHFPROC glClearDepthf;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:32 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_ES2_compatibility__
#define __GLUX_GL_ARB_ES2_compatibility__

GLUX_NEW_PLUGIN(GL_ARB_ES2_compatibility);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_FIXED
#  define GL_FIXED 0x140C
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE
#  define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT
#  define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#endif
#ifndef GL_LOW_FLOAT
#  define GL_LOW_FLOAT 0x8DF0
#endif
#ifndef GL_MEDIUM_FLOAT
#  define GL_MEDIUM_FLOAT 0x8DF1
#endif
#ifndef GL_HIGH_FLOAT
#  define GL_HIGH_FLOAT 0x8DF2
#endif
#ifndef GL_LOW_INT
#  define GL_LOW_INT 0x8DF3
#endif
#ifndef GL_MEDIUM_INT
#  define GL_MEDIUM_INT 0x8DF4
#endif
#ifndef GL_HIGH_INT
#  define GL_HIGH_INT 0x8DF5
#endif
#ifndef GL_SHADER_COMPILER
#  define GL_SHADER_COMPILER 0x8DFA
#endif
#ifndef GL_SHADER_BINARY_FORMATS
#  define GL_SHADER_BINARY_FORMATS 0x8DF8
#endif
#ifndef GL_NUM_SHADER_BINARY_FORMATS
#  define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#endif
#ifndef GL_MAX_VERTEX_UNIFORM_VECTORS
#  define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#endif
#ifndef GL_MAX_VARYING_VECTORS
#  define GL_MAX_VARYING_VECTORS 0x8DFC
#endif
#ifndef GL_MAX_FRAGMENT_UNIFORM_VECTORS
#  define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#endif
#ifndef GL_RGB565
#  define GL_RGB565 0x8D62
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
typedef void (APIENTRYP PFNGLUXRELEASESHADERCOMPILERPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
typedef void (APIENTRYP PFNGLUXSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
typedef void (APIENTRYP PFNGLUXGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
typedef void (APIENTRYP PFNGLUXDEPTHRANGEFPROC) (GLfloat n, GLfloat f);
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
typedef void (APIENTRYP PFNGLUXCLEARDEPTHFPROC) (GLfloat d);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
extern PFNGLUXRELEASESHADERCOMPILERPROC glReleaseShaderCompiler;
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
extern PFNGLUXSHADERBINARYPROC glShaderBinary;
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
extern PFNGLUXGETSHADERPRECISIONFORMATPROC glGetShaderPrecisionFormat;
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
extern PFNGLUXDEPTHRANGEFPROC glDepthRangef;
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
extern PFNGLUXCLEARDEPTHFPROC glClearDepthf;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:51 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_ES2_compatibility__
#define __GLUX_GL_ARB_ES2_compatibility__

GLUX_NEW_PLUGIN(GL_ARB_ES2_compatibility);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_FIXED
#  define GL_FIXED 0x140C
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE
#  define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT
#  define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#endif
#ifndef GL_LOW_FLOAT
#  define GL_LOW_FLOAT 0x8DF0
#endif
#ifndef GL_MEDIUM_FLOAT
#  define GL_MEDIUM_FLOAT 0x8DF1
#endif
#ifndef GL_HIGH_FLOAT
#  define GL_HIGH_FLOAT 0x8DF2
#endif
#ifndef GL_LOW_INT
#  define GL_LOW_INT 0x8DF3
#endif
#ifndef GL_MEDIUM_INT
#  define GL_MEDIUM_INT 0x8DF4
#endif
#ifndef GL_HIGH_INT
#  define GL_HIGH_INT 0x8DF5
#endif
#ifndef GL_SHADER_COMPILER
#  define GL_SHADER_COMPILER 0x8DFA
#endif
#ifndef GL_SHADER_BINARY_FORMATS
#  define GL_SHADER_BINARY_FORMATS 0x8DF8
#endif
#ifndef GL_NUM_SHADER_BINARY_FORMATS
#  define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#endif
#ifndef GL_MAX_VERTEX_UNIFORM_VECTORS
#  define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#endif
#ifndef GL_MAX_VARYING_VECTORS
#  define GL_MAX_VARYING_VECTORS 0x8DFC
#endif
#ifndef GL_MAX_FRAGMENT_UNIFORM_VECTORS
#  define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#endif
#ifndef GL_RGB565
#  define GL_RGB565 0x8D62
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
typedef void (APIENTRYP PFNGLUXRELEASESHADERCOMPILERPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
typedef void (APIENTRYP PFNGLUXSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
typedef void (APIENTRYP PFNGLUXGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
typedef void (APIENTRYP PFNGLUXDEPTHRANGEFPROC) (GLfloat n, GLfloat f);
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
typedef void (APIENTRYP PFNGLUXCLEARDEPTHFPROC) (GLfloat d);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
extern PFNGLUXRELEASESHADERCOMPILERPROC glReleaseShaderCompiler;
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
extern PFNGLUXSHADERBINARYPROC glShaderBinary;
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
extern PFNGLUXGETSHADERPRECISIONFORMATPROC glGetShaderPrecisionFormat;
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
extern PFNGLUXDEPTHRANGEFPROC glDepthRangef;
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
extern PFNGLUXCLEARDEPTHFPROC glClearDepthf;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:25:11 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_ES2_compatibility__
#define __GLUX_GL_ARB_ES2_compatibility__

GLUX_NEW_PLUGIN(GL_ARB_ES2_compatibility);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_FIXED
#  define GL_FIXED 0x140C
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE
#  define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT
#  define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#endif
#ifndef GL_LOW_FLOAT
#  define GL_LOW_FLOAT 0x8DF0
#endif
#ifndef GL_MEDIUM_FLOAT
#  define GL_MEDIUM_FLOAT 0x8DF1
#endif
#ifndef GL_HIGH_FLOAT
#  define GL_HIGH_FLOAT 0x8DF2
#endif
#ifndef GL_LOW_INT
#  define GL_LOW_INT 0x8DF3
#endif
#ifndef GL_MEDIUM_INT
#  define GL_MEDIUM_INT 0x8DF4
#endif
#ifndef GL_HIGH_INT
#  define GL_HIGH_INT 0x8DF5
#endif
#ifndef GL_SHADER_COMPILER
#  define GL_SHADER_COMPILER 0x8DFA
#endif
#ifndef GL_SHADER_BINARY_FORMATS
#  define GL_SHADER_BINARY_FORMATS 0x8DF8
#endif
#ifndef GL_NUM_SHADER_BINARY_FORMATS
#  define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#endif
#ifndef GL_MAX_VERTEX_UNIFORM_VECTORS
#  define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#endif
#ifndef GL_MAX_VARYING_VECTORS
#  define GL_MAX_VARYING_VECTORS 0x8DFC
#endif
#ifndef GL_MAX_FRAGMENT_UNIFORM_VECTORS
#  define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#endif
#ifndef GL_RGB565
#  define GL_RGB565 0x8D62
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
typedef void (APIENTRYP PFNGLUXRELEASESHADERCOMPILERPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
typedef void (APIENTRYP PFNGLUXSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
typedef void (APIENTRYP PFNGLUXGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
typedef void (APIENTRYP PFNGLUXDEPTHRANGEFPROC) (GLfloat n, GLfloat f);
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
typedef void (APIENTRYP PFNGLUXCLEARDEPTHFPROC) (GLfloat d);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
extern PFNGLUXRELEASESHADERCOMPILERPROC glReleaseShaderCompiler;
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
extern PFNGLUXSHADERBINARYPROC glShaderBinary;
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
extern PFNGLUXGETSHADERPRECISIONFORMATPROC glGetShaderPrecisionFormat;
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
extern PFNGLUXDEPTHRANGEFPROC glDepthRangef;
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
extern PFNGLUXCLEARDEPTHFPROC glClearDepthf;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:27:54 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_ES2_compatibility__
#define __GLUX_GL_ARB_ES2_compatibility__

GLUX_NEW_PLUGIN(GL_ARB_ES2_compatibility);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_FIXED
#  define GL_FIXED 0x140C
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE
#  define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT
#  define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#endif
#ifndef GL_LOW_FLOAT
#  define GL_LOW_FLOAT 0x8DF0
#endif
#ifndef GL_MEDIUM_FLOAT
#  define GL_MEDIUM_FLOAT 0x8DF1
#endif
#ifndef GL_HIGH_FLOAT
#  define GL_HIGH_FLOAT 0x8DF2
#endif
#ifndef GL_LOW_INT
#  define GL_LOW_INT 0x8DF3
#endif
#ifndef GL_MEDIUM_INT
#  define GL_MEDIUM_INT 0x8DF4
#endif
#ifndef GL_HIGH_INT
#  define GL_HIGH_INT 0x8DF5
#endif
#ifndef GL_SHADER_COMPILER
#  define GL_SHADER_COMPILER 0x8DFA
#endif
#ifndef GL_SHADER_BINARY_FORMATS
#  define GL_SHADER_BINARY_FORMATS 0x8DF8
#endif
#ifndef GL_NUM_SHADER_BINARY_FORMATS
#  define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#endif
#ifndef GL_MAX_VERTEX_UNIFORM_VECTORS
#  define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#endif
#ifndef GL_MAX_VARYING_VECTORS
#  define GL_MAX_VARYING_VECTORS 0x8DFC
#endif
#ifndef GL_MAX_FRAGMENT_UNIFORM_VECTORS
#  define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#endif
#ifndef GL_RGB565
#  define GL_RGB565 0x8D62
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
typedef void (APIENTRYP PFNGLUXRELEASESHADERCOMPILERPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
typedef void (APIENTRYP PFNGLUXSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
typedef void (APIENTRYP PFNGLUXGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
typedef void (APIENTRYP PFNGLUXDEPTHRANGEFPROC) (GLfloat n, GLfloat f);
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
typedef void (APIENTRYP PFNGLUXCLEARDEPTHFPROC) (GLfloat d);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
extern PFNGLUXRELEASESHADERCOMPILERPROC glReleaseShaderCompiler;
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
extern PFNGLUXSHADERBINARYPROC glShaderBinary;
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
extern PFNGLUXGETSHADERPRECISIONFORMATPROC glGetShaderPrecisionFormat;
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
extern PFNGLUXDEPTHRANGEFPROC glDepthRangef;
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
extern PFNGLUXCLEARDEPTHFPROC glClearDepthf;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:16:55 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_ES2_compatibility__
#define __GLUX_GL_ARB_ES2_compatibility__

GLUX_NEW_PLUGIN(GL_ARB_ES2_compatibility);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_FIXED
#  define GL_FIXED 0x140C
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE
#  define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT
#  define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#endif
#ifndef GL_LOW_FLOAT
#  define GL_LOW_FLOAT 0x8DF0
#endif
#ifndef GL_MEDIUM_FLOAT
#  define GL_MEDIUM_FLOAT 0x8DF1
#endif
#ifndef GL_HIGH_FLOAT
#  define GL_HIGH_FLOAT 0x8DF2
#endif
#ifndef GL_LOW_INT
#  define GL_LOW_INT 0x8DF3
#endif
#ifndef GL_MEDIUM_INT
#  define GL_MEDIUM_INT 0x8DF4
#endif
#ifndef GL_HIGH_INT
#  define GL_HIGH_INT 0x8DF5
#endif
#ifndef GL_SHADER_COMPILER
#  define GL_SHADER_COMPILER 0x8DFA
#endif
#ifndef GL_SHADER_BINARY_FORMATS
#  define GL_SHADER_BINARY_FORMATS 0x8DF8
#endif
#ifndef GL_NUM_SHADER_BINARY_FORMATS
#  define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#endif
#ifndef GL_MAX_VERTEX_UNIFORM_VECTORS
#  define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#endif
#ifndef GL_MAX_VARYING_VECTORS
#  define GL_MAX_VARYING_VECTORS 0x8DFC
#endif
#ifndef GL_MAX_FRAGMENT_UNIFORM_VECTORS
#  define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#endif
#ifndef GL_RGB565
#  define GL_RGB565 0x8D62
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
typedef void (APIENTRYP PFNGLUXRELEASESHADERCOMPILERPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
typedef void (APIENTRYP PFNGLUXSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
typedef void (APIENTRYP PFNGLUXGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
typedef void (APIENTRYP PFNGLUXDEPTHRANGEFPROC) (GLfloat n, GLfloat f);
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
typedef void (APIENTRYP PFNGLUXCLEARDEPTHFPROC) (GLfloat d);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
extern PFNGLUXRELEASESHADERCOMPILERPROC glReleaseShaderCompiler;
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
extern PFNGLUXSHADERBINARYPROC glShaderBinary;
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
extern PFNGLUXGETSHADERPRECISIONFORMATPROC glGetShaderPrecisionFormat;
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
extern PFNGLUXDEPTHRANGEFPROC glDepthRangef;
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
extern PFNGLUXCLEARDEPTHFPROC glClearDepthf;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_ES2_compatibility__
#define __GLUX_GL_ARB_ES2_compatibility__

GLUX_NEW_PLUGIN(GL_ARB_ES2_compatibility);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_FIXED
#  define GL_FIXED 0x140C
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE
#  define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT
#  define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#endif
#ifndef GL_LOW_FLOAT
#  define GL_LOW_FLOAT 0x8DF0
#endif
#ifndef GL_MEDIUM_FLOAT
#  define GL_MEDIUM_FLOAT 0x8DF1
#endif
#ifndef GL_HIGH_FLOAT
#  define GL_HIGH_FLOAT 0x8DF2
#endif
#ifndef GL_LOW_INT
#  define GL_LOW_INT 0x8DF3
#endif
#ifndef GL_MEDIUM_INT
#  define GL_MEDIUM_INT 0x8DF4
#endif
#ifndef GL_HIGH_INT
#  define GL_HIGH_INT 0x8DF5
#endif
#ifndef GL_SHADER_COMPILER
#  define GL_SHADER_COMPILER 0x8DFA
#endif
#ifndef GL_SHADER_BINARY_FORMATS
#  define GL_SHADER_BINARY_FORMATS 0x8DF8
#endif
#ifndef GL_NUM_SHADER_BINARY_FORMATS
#  define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#endif
#ifndef GL_MAX_VERTEX_UNIFORM_VECTORS
#  define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#endif
#ifndef GL_MAX_VARYING_VECTORS
#  define GL_MAX_VARYING_VECTORS 0x8DFC
#endif
#ifndef GL_MAX_FRAGMENT_UNIFORM_VECTORS
#  define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#endif
#ifndef GL_RGB565
#  define GL_RGB565 0x8D62
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
typedef void (APIENTRYP PFNGLUXRELEASESHADERCOMPILERPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
typedef void (APIENTRYP PFNGLUXSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
typedef void (APIENTRYP PFNGLUXGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
typedef void (APIENTRYP PFNGLUXDEPTHRANGEFPROC) (GLfloat n, GLfloat f);
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
typedef void (APIENTRYP PFNGLUXCLEARDEPTHFPROC) (GLfloat d);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
extern PFNGLUXRELEASESHADERCOMPILERPROC glReleaseShaderCompiler;
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
extern PFNGLUXSHADERBINARYPROC glShaderBinary;
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
extern PFNGLUXGETSHADERPRECISIONFORMATPROC glGetShaderPrecisionFormat;
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
extern PFNGLUXDEPTHRANGEFPROC glDepthRangef;
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
extern PFNGLUXCLEARDEPTHFPROC glClearDepthf;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:19 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_ES2_compatibility__
#define __GLUX_GL_ARB_ES2_compatibility__

GLUX_NEW_PLUGIN(GL_ARB_ES2_compatibility);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_FIXED
#  define GL_FIXED 0x140C
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE
#  define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT
#  define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#endif
#ifndef GL_LOW_FLOAT
#  define GL_LOW_FLOAT 0x8DF0
#endif
#ifndef GL_MEDIUM_FLOAT
#  define GL_MEDIUM_FLOAT 0x8DF1
#endif
#ifndef GL_HIGH_FLOAT
#  define GL_HIGH_FLOAT 0x8DF2
#endif
#ifndef GL_LOW_INT
#  define GL_LOW_INT 0x8DF3
#endif
#ifndef GL_MEDIUM_INT
#  define GL_MEDIUM_INT 0x8DF4
#endif
#ifndef GL_HIGH_INT
#  define GL_HIGH_INT 0x8DF5
#endif
#ifndef GL_SHADER_COMPILER
#  define GL_SHADER_COMPILER 0x8DFA
#endif
#ifndef GL_SHADER_BINARY_FORMATS
#  define GL_SHADER_BINARY_FORMATS 0x8DF8
#endif
#ifndef GL_NUM_SHADER_BINARY_FORMATS
#  define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#endif
#ifndef GL_MAX_VERTEX_UNIFORM_VECTORS
#  define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#endif
#ifndef GL_MAX_VARYING_VECTORS
#  define GL_MAX_VARYING_VECTORS 0x8DFC
#endif
#ifndef GL_MAX_FRAGMENT_UNIFORM_VECTORS
#  define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#endif
#ifndef GL_RGB565
#  define GL_RGB565 0x8D62
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
typedef void (APIENTRYP PFNGLUXRELEASESHADERCOMPILERPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
typedef void (APIENTRYP PFNGLUXSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
typedef void (APIENTRYP PFNGLUXGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
typedef void (APIENTRYP PFNGLUXDEPTHRANGEFPROC) (GLfloat n, GLfloat f);
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
typedef void (APIENTRYP PFNGLUXCLEARDEPTHFPROC) (GLfloat d);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
extern PFNGLUXRELEASESHADERCOMPILERPROC glReleaseShaderCompiler;
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
extern PFNGLUXSHADERBINARYPROC glShaderBinary;
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
extern PFNGLUXGETSHADERPRECISIONFORMATPROC glGetShaderPrecisionFormat;
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
extern PFNGLUXDEPTHRANGEFPROC glDepthRangef;
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
extern PFNGLUXCLEARDEPTHFPROC glClearDepthf;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:36:59 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_ES2_compatibility__
#define __GLUX_GL_ARB_ES2_compatibility__

GLUX_NEW_PLUGIN(GL_ARB_ES2_compatibility);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_FIXED
#  define GL_FIXED 0x140C
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE
#  define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT
#  define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#endif
#ifndef GL_LOW_FLOAT
#  define GL_LOW_FLOAT 0x8DF0
#endif
#ifndef GL_MEDIUM_FLOAT
#  define GL_MEDIUM_FLOAT 0x8DF1
#endif
#ifndef GL_HIGH_FLOAT
#  define GL_HIGH_FLOAT 0x8DF2
#endif
#ifndef GL_LOW_INT
#  define GL_LOW_INT 0x8DF3
#endif
#ifndef GL_MEDIUM_INT
#  define GL_MEDIUM_INT 0x8DF4
#endif
#ifndef GL_HIGH_INT
#  define GL_HIGH_INT 0x8DF5
#endif
#ifndef GL_SHADER_COMPILER
#  define GL_SHADER_COMPILER 0x8DFA
#endif
#ifndef GL_SHADER_BINARY_FORMATS
#  define GL_SHADER_BINARY_FORMATS 0x8DF8
#endif
#ifndef GL_NUM_SHADER_BINARY_FORMATS
#  define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#endif
#ifndef GL_MAX_VERTEX_UNIFORM_VECTORS
#  define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#endif
#ifndef GL_MAX_VARYING_VECTORS
#  define GL_MAX_VARYING_VECTORS 0x8DFC
#endif
#ifndef GL_MAX_FRAGMENT_UNIFORM_VECTORS
#  define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#endif
#ifndef GL_RGB565
#  define GL_RGB565 0x8D62
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
typedef void (APIENTRYP PFNGLUXRELEASESHADERCOMPILERPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
typedef void (APIENTRYP PFNGLUXSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
typedef void (APIENTRYP PFNGLUXGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
typedef void (APIENTRYP PFNGLUXDEPTHRANGEFPROC) (GLfloat n, GLfloat f);
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
typedef void (APIENTRYP PFNGLUXCLEARDEPTHFPROC) (GLfloat d);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
extern PFNGLUXRELEASESHADERCOMPILERPROC glReleaseShaderCompiler;
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
extern PFNGLUXSHADERBINARYPROC glShaderBinary;
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
extern PFNGLUXGETSHADERPRECISIONFORMATPROC glGetShaderPrecisionFormat;
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
extern PFNGLUXDEPTHRANGEFPROC glDepthRangef;
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
extern PFNGLUXCLEARDEPTHFPROC glClearDepthf;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:08 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_ES2_compatibility__
#define __GLUX_GL_ARB_ES2_compatibility__

GLUX_NEW_PLUGIN(GL_ARB_ES2_compatibility);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_FIXED
#  define GL_FIXED 0x140C
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE
#  define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT
#  define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#endif
#ifndef GL_LOW_FLOAT
#  define GL_LOW_FLOAT 0x8DF0
#endif
#ifndef GL_MEDIUM_FLOAT
#  define GL_MEDIUM_FLOAT 0x8DF1
#endif
#ifndef GL_HIGH_FLOAT
#  define GL_HIGH_FLOAT 0x8DF2
#endif
#ifndef GL_LOW_INT
#  define GL_LOW_INT 0x8DF3
#endif
#ifndef GL_MEDIUM_INT
#  define GL_MEDIUM_INT 0x8DF4
#endif
#ifndef GL_HIGH_INT
#  define GL_HIGH_INT 0x8DF5
#endif
#ifndef GL_SHADER_COMPILER
#  define GL_SHADER_COMPILER 0x8DFA
#endif
#ifndef GL_SHADER_BINARY_FORMATS
#  define GL_SHADER_BINARY_FORMATS 0x8DF8
#endif
#ifndef GL_NUM_SHADER_BINARY_FORMATS
#  define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#endif
#ifndef GL_MAX_VERTEX_UNIFORM_VECTORS
#  define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#endif
#ifndef GL_MAX_VARYING_VECTORS
#  define GL_MAX_VARYING_VECTORS 0x8DFC
#endif
#ifndef GL_MAX_FRAGMENT_UNIFORM_VECTORS
#  define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#endif
#ifndef GL_RGB565
#  define GL_RGB565 0x8D62
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
typedef void (APIENTRYP PFNGLUXRELEASESHADERCOMPILERPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
typedef void (APIENTRYP PFNGLUXSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
typedef void (APIENTRYP PFNGLUXGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
typedef void (APIENTRYP PFNGLUXDEPTHRANGEFPROC) (GLfloat n, GLfloat f);
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
typedef void (APIENTRYP PFNGLUXCLEARDEPTHFPROC) (GLfloat d);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
extern PFNGLUXRELEASESHADERCOMPILERPROC glReleaseShaderCompiler;
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
extern PFNGLUXSHADERBINARYPROC glShaderBinary;
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
extern PFNGLUXGETSHADERPRECISIONFORMATPROC glGetShaderPrecisionFormat;
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
extern PFNGLUXDEPTHRANGEFPROC glDepthRangef;
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
extern PFNGLUXCLEARDEPTHFPROC glClearDepthf;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:19 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_ES2_compatibility__
#define __GLUX_GL_ARB_ES2_compatibility__

GLUX_NEW_PLUGIN(GL_ARB_ES2_compatibility);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_FIXED
#  define GL_FIXED 0x140C
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE
#  define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT
#  define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#endif
#ifndef GL_LOW_FLOAT
#  define GL_LOW_FLOAT 0x8DF0
#endif
#ifndef GL_MEDIUM_FLOAT
#  define GL_MEDIUM_FLOAT 0x8DF1
#endif
#ifndef GL_HIGH_FLOAT
#  define GL_HIGH_FLOAT 0x8DF2
#endif
#ifndef GL_LOW_INT
#  define GL_LOW_INT 0x8DF3
#endif
#ifndef GL_MEDIUM_INT
#  define GL_MEDIUM_INT 0x8DF4
#endif
#ifndef GL_HIGH_INT
#  define GL_HIGH_INT 0x8DF5
#endif
#ifndef GL_SHADER_COMPILER
#  define GL_SHADER_COMPILER 0x8DFA
#endif
#ifndef GL_SHADER_BINARY_FORMATS
#  define GL_SHADER_BINARY_FORMATS 0x8DF8
#endif
#ifndef GL_NUM_SHADER_BINARY_FORMATS
#  define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#endif
#ifndef GL_MAX_VERTEX_UNIFORM_VECTORS
#  define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#endif
#ifndef GL_MAX_VARYING_VECTORS
#  define GL_MAX_VARYING_VECTORS 0x8DFC
#endif
#ifndef GL_MAX_FRAGMENT_UNIFORM_VECTORS
#  define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#endif
#ifndef GL_RGB565
#  define GL_RGB565 0x8D62
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
typedef void (APIENTRYP PFNGLUXRELEASESHADERCOMPILERPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
typedef void (APIENTRYP PFNGLUXSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
typedef void (APIENTRYP PFNGLUXGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
typedef void (APIENTRYP PFNGLUXDEPTHRANGEFPROC) (GLfloat n, GLfloat f);
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
typedef void (APIENTRYP PFNGLUXCLEARDEPTHFPROC) (GLfloat d);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
extern PFNGLUXRELEASESHADERCOMPILERPROC glReleaseShaderCompiler;
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
extern PFNGLUXSHADERBINARYPROC glShaderBinary;
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
extern PFNGLUXGETSHADERPRECISIONFORMATPROC glGetShaderPrecisionFormat;
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
extern PFNGLUXDEPTHRANGEFPROC glDepthRangef;
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
extern PFNGLUXCLEARDEPTHFPROC glClearDepthf;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:51:58 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_ES2_compatibility__
#define __GLUX_GL_ARB_ES2_compatibility__

GLUX_NEW_PLUGIN(GL_ARB_ES2_compatibility);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_FIXED
#  define GL_FIXED 0x140C
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE
#  define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT
#  define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#endif
#ifndef GL_LOW_FLOAT
#  define GL_LOW_FLOAT 0x8DF0
#endif
#ifndef GL_MEDIUM_FLOAT
#  define GL_MEDIUM_FLOAT 0x8DF1
#endif
#ifndef GL_HIGH_FLOAT
#  define GL_HIGH_FLOAT 0x8DF2
#endif
#ifndef GL_LOW_INT
#  define GL_LOW_INT 0x8DF3
#endif
#ifndef GL_MEDIUM_INT
#  define GL_MEDIUM_INT 0x8DF4
#endif
#ifndef GL_HIGH_INT
#  define GL_HIGH_INT 0x8DF5
#endif
#ifndef GL_SHADER_COMPILER
#  define GL_SHADER_COMPILER 0x8DFA
#endif
#ifndef GL_SHADER_BINARY_FORMATS
#  define GL_SHADER_BINARY_FORMATS 0x8DF8
#endif
#ifndef GL_NUM_SHADER_BINARY_FORMATS
#  define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#endif
#ifndef GL_MAX_VERTEX_UNIFORM_VECTORS
#  define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#endif
#ifndef GL_MAX_VARYING_VECTORS
#  define GL_MAX_VARYING_VECTORS 0x8DFC
#endif
#ifndef GL_MAX_FRAGMENT_UNIFORM_VECTORS
#  define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#endif
#ifndef GL_RGB565
#  define GL_RGB565 0x8D62
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
typedef void (APIENTRYP PFNGLUXRELEASESHADERCOMPILERPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
typedef void (APIENTRYP PFNGLUXSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
typedef void (APIENTRYP PFNGLUXGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
typedef void (APIENTRYP PFNGLUXDEPTHRANGEFPROC) (GLfloat n, GLfloat f);
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
typedef void (APIENTRYP PFNGLUXCLEARDEPTHFPROC) (GLfloat d);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
extern PFNGLUXRELEASESHADERCOMPILERPROC glReleaseShaderCompiler;
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
extern PFNGLUXSHADERBINARYPROC glShaderBinary;
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
extern PFNGLUXGETSHADERPRECISIONFORMATPROC glGetShaderPrecisionFormat;
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
extern PFNGLUXDEPTHRANGEFPROC glDepthRangef;
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
extern PFNGLUXCLEARDEPTHFPROC glClearDepthf;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_ES2_compatibility__
#define __GLUX_GL_ARB_ES2_compatibility__

GLUX_NEW_PLUGIN(GL_ARB_ES2_compatibility);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_FIXED
#  define GL_FIXED 0x140C
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE
#  define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT
#  define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#endif
#ifndef GL_LOW_FLOAT
#  define GL_LOW_FLOAT 0x8DF0
#endif
#ifndef GL_MEDIUM_FLOAT
#  define GL_MEDIUM_FLOAT 0x8DF1
#endif
#ifndef GL_HIGH_FLOAT
#  define GL_HIGH_FLOAT 0x8DF2
#endif
#ifndef GL_LOW_INT
#  define GL_LOW_INT 0x8DF3
#endif
#ifndef GL_MEDIUM_INT
#  define GL_MEDIUM_INT 0x8DF4
#endif
#ifndef GL_HIGH_INT
#  define GL_HIGH_INT 0x8DF5
#endif
#ifndef GL_SHADER_COMPILER
#  define GL_SHADER_COMPILER 0x8DFA
#endif
#ifndef GL_SHADER_BINARY_FORMATS
#  define GL_SHADER_BINARY_FORMATS 0x8DF8
#endif
#ifndef GL_NUM_SHADER_BINARY_FORMATS
#  define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#endif
#ifndef GL_MAX_VERTEX_UNIFORM_VECTORS
#  define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#endif
#ifndef GL_MAX_VARYING_VECTORS
#  define GL_MAX_VARYING_VECTORS 0x8DFC
#endif
#ifndef GL_MAX_FRAGMENT_UNIFORM_VECTORS
#  define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#endif
#ifndef GL_RGB565
#  define GL_RGB565 0x8D62
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
typedef void (APIENTRYP PFNGLUXRELEASESHADERCOMPILERPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
typedef void (APIENTRYP PFNGLUXSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
typedef void (APIENTRYP PFNGLUXGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
typedef void (APIENTRYP PFNGLUXDEPTHRANGEFPROC) (GLfloat n, GLfloat f);
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
typedef void (APIENTRYP PFNGLUXCLEARDEPTHFPROC) (GLfloat d);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
extern PFNGLUXRELEASESHADERCOMPILERPROC glReleaseShaderCompiler;
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
extern PFNGLUXSHADERBINARYPROC glShaderBinary;
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
extern PFNGLUXGETSHADERPRECISIONFORMATPROC glGetShaderPrecisionFormat;
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
extern PFNGLUXDEPTHRANGEFPROC glDepthRangef;
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
extern PFNGLUXCLEARDEPTHFPROC glClearDepthf;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:02 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_ES2_compatibility__
#define __GLUX_GL_ARB_ES2_compatibility__

GLUX_NEW_PLUGIN(GL_ARB_ES2_compatibility);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_FIXED
#  define GL_FIXED 0x140C
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE
#  define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT
#  define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#endif
#ifndef GL_LOW_FLOAT
#  define GL_LOW_FLOAT 0x8DF0
#endif
#ifndef GL_MEDIUM_FLOAT
#  define GL_MEDIUM_FLOAT 0x8DF1
#endif
#ifndef GL_HIGH_FLOAT
#  define GL_HIGH_FLOAT 0x8DF2
#endif
#ifndef GL_LOW_INT
#  define GL_LOW_INT 0x8DF3
#endif
#ifndef GL_MEDIUM_INT
#  define GL_MEDIUM_INT 0x8DF4
#endif
#ifndef GL_HIGH_INT
#  define GL_HIGH_INT 0x8DF5
#endif
#ifndef GL_SHADER_COMPILER
#  define GL_SHADER_COMPILER 0x8DFA
#endif
#ifndef GL_SHADER_BINARY_FORMATS
#  define GL_SHADER_BINARY_FORMATS 0x8DF8
#endif
#ifndef GL_NUM_SHADER_BINARY_FORMATS
#  define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#endif
#ifndef GL_MAX_VERTEX_UNIFORM_VECTORS
#  define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#endif
#ifndef GL_MAX_VARYING_VECTORS
#  define GL_MAX_VARYING_VECTORS 0x8DFC
#endif
#ifndef GL_MAX_FRAGMENT_UNIFORM_VECTORS
#  define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#endif
#ifndef GL_RGB565
#  define GL_RGB565 0x8D62
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
typedef void (APIENTRYP PFNGLUXRELEASESHADERCOMPILERPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
typedef void (APIENTRYP PFNGLUXSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
typedef void (APIENTRYP PFNGLUXGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
typedef void (APIENTRYP PFNGLUXDEPTHRANGEFPROC) (GLfloat n, GLfloat f);
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
typedef void (APIENTRYP PFNGLUXCLEARDEPTHFPROC) (GLfloat d);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
extern PFNGLUXRELEASESHADERCOMPILERPROC glReleaseShaderCompiler;
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
extern PFNGLUXSHADERBINARYPROC glShaderBinary;
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
extern PFNGLUXGETSHADERPRECISIONFORMATPROC glGetShaderPrecisionFormat;
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
extern PFNGLUXDEPTHRANGEFPROC glDepthRangef;
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
extern PFNGLUXCLEARDEPTHFPROC glClearDepthf;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:22 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_ES2_compatibility__
#define __GLUX_GL_ARB_ES2_compatibility__

GLUX_NEW_PLUGIN(GL_ARB_ES2_compatibility);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_FIXED
#  define GL_FIXED 0x140C
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE
#  define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT
#  define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#endif
#ifndef GL_LOW_FLOAT
#  define GL_LOW_FLOAT 0x8DF0
#endif
#ifndef GL_MEDIUM_FLOAT
#  define GL_MEDIUM_FLOAT 0x8DF1
#endif
#ifndef GL_HIGH_FLOAT
#  define GL_HIGH_FLOAT 0x8DF2
#endif
#ifndef GL_LOW_INT
#  define GL_LOW_INT 0x8DF3
#endif
#ifndef GL_MEDIUM_INT
#  define GL_MEDIUM_INT 0x8DF4
#endif
#ifndef GL_HIGH_INT
#  define GL_HIGH_INT 0x8DF5
#endif
#ifndef GL_SHADER_COMPILER
#  define GL_SHADER_COMPILER 0x8DFA
#endif
#ifndef GL_SHADER_BINARY_FORMATS
#  define GL_SHADER_BINARY_FORMATS 0x8DF8
#endif
#ifndef GL_NUM_SHADER_BINARY_FORMATS
#  define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#endif
#ifndef GL_MAX_VERTEX_UNIFORM_VECTORS
#  define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#endif
#ifndef GL_MAX_VARYING_VECTORS
#  define GL_MAX_VARYING_VECTORS 0x8DFC
#endif
#ifndef GL_MAX_FRAGMENT_UNIFORM_VECTORS
#  define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#endif
#ifndef GL_RGB565
#  define GL_RGB565 0x8D62
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
typedef void (APIENTRYP PFNGLUXRELEASESHADERCOMPILERPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
typedef void (APIENTRYP PFNGLUXSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
typedef void (APIENTRYP PFNGLUXGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
typedef void (APIENTRYP PFNGLUXDEPTHRANGEFPROC) (GLfloat n, GLfloat f);
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
typedef void (APIENTRYP PFNGLUXCLEARDEPTHFPROC) (GLfloat d);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
extern PFNGLUXRELEASESHADERCOMPILERPROC glReleaseShaderCompiler;
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
extern PFNGLUXSHADERBINARYPROC glShaderBinary;
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
extern PFNGLUXGETSHADERPRECISIONFORMATPROC glGetShaderPrecisionFormat;
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
extern PFNGLUXDEPTHRANGEFPROC glDepthRangef;
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
extern PFNGLUXCLEARDEPTHFPROC glClearDepthf;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_ES2_compatibility__
#define __GLUX_GL_ARB_ES2_compatibility__

GLUX_NEW_PLUGIN(GL_ARB_ES2_compatibility);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_FIXED
#  define GL_FIXED 0x140C
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE
#  define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT
#  define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#endif
#ifndef GL_LOW_FLOAT
#  define GL_LOW_FLOAT 0x8DF0
#endif
#ifndef GL_MEDIUM_FLOAT
#  define GL_MEDIUM_FLOAT 0x8DF1
#endif
#ifndef GL_HIGH_FLOAT
#  define GL_HIGH_FLOAT 0x8DF2
#endif
#ifndef GL_LOW_INT
#  define GL_LOW_INT 0x8DF3
#endif
#ifndef GL_MEDIUM_INT
#  define GL_MEDIUM_INT 0x8DF4
#endif
#ifndef GL_HIGH_INT
#  define GL_HIGH_INT 0x8DF5
#endif
#ifndef GL_SHADER_COMPILER
#  define GL_SHADER_COMPILER 0x8DFA
#endif
#ifndef GL_SHADER_BINARY_FORMATS
#  define GL_SHADER_BINARY_FORMATS 0x8DF8
#endif
#ifndef GL_NUM_SHADER_BINARY_FORMATS
#  define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#endif
#ifndef GL_MAX_VERTEX_UNIFORM_VECTORS
#  define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#endif
#ifndef GL_MAX_VARYING_VECTORS
#  define GL_MAX_VARYING_VECTORS 0x8DFC
#endif
#ifndef GL_MAX_FRAGMENT_UNIFORM_VECTORS
#  define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#endif
#ifndef GL_RGB565
#  define GL_RGB565 0x8D62
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
typedef void (APIENTRYP PFNGLUXRELEASESHADERCOMPILERPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
typedef void (APIENTRYP PFNGLUXSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
typedef void (APIENTRYP PFNGLUXGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
typedef void (APIENTRYP PFNGLUXDEPTHRANGEFPROC) (GLfloat n, GLfloat f);
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
typedef void (APIENTRYP PFNGLUXCLEARDEPTHFPROC) (GLfloat d);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
extern PFNGLUXRELEASESHADERCOMPILERPROC glReleaseShaderCompiler;
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
extern PFNGLUXSHADERBINARYPROC glShaderBinary;
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
extern PFNGLUXGETSHADERPRECISIONFORMATPROC glGetShaderPrecisionFormat;
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
extern PFNGLUXDEPTHRANGEFPROC glDepthRangef;
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
extern PFNGLUXCLEARDEPTHFPROC glClearDepthf;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:41:56 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_ES2_compatibility__
#define __GLUX_GL_ARB_ES2_compatibility__

GLUX_NEW_PLUGIN(GL_ARB_ES2_compatibility);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_FIXED
#  define GL_FIXED 0x140C
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE
#  define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT
#  define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#endif
#ifndef GL_LOW_FLOAT
#  define GL_LOW_FLOAT 0x8DF0
#endif
#ifndef GL_MEDIUM_FLOAT
#  define GL_MEDIUM_FLOAT 0x8DF1
#endif
#ifndef GL_HIGH_FLOAT
#  define GL_HIGH_FLOAT 0x8DF2
#endif
#ifndef GL_LOW_INT
#  define GL_LOW_INT 0x8DF3
#endif
#ifndef GL_MEDIUM_INT
#  define GL_MEDIUM_INT 0x8DF4
#endif
#ifndef GL_HIGH_INT
#  define GL_HIGH_INT 0x8DF5
#endif
#ifndef GL_SHADER_COMPILER
#  define GL_SHADER_COMPILER 0x8DFA
#endif
#ifndef GL_SHADER_BINARY_FORMATS
#  define GL_SHADER_BINARY_FORMATS 0x8DF8
#endif
#ifndef GL_NUM_SHADER_BINARY_FORMATS
#  define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#endif
#ifndef GL_MAX_VERTEX_UNIFORM_VECTORS
#  define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#endif
#ifndef GL_MAX_VARYING_VECTORS
#  define GL_MAX_VARYING_VECTORS 0x8DFC
#endif
#ifndef GL_MAX_FRAGMENT_UNIFORM_VECTORS
#  define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#endif
#ifndef GL_RGB565
#  define GL_RGB565 0x8D62
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
typedef void (APIENTRYP PFNGLUXRELEASESHADERCOMPILERPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
typedef void (APIENTRYP PFNGLUXSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
typedef void (APIENTRYP PFNGLUXGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
typedef void (APIENTRYP PFNGLUXDEPTHRANGEFPROC) (GLfloat n, GLfloat f);
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
typedef void (APIENTRYP PFNGLUXCLEARDEPTHFPROC) (GLfloat d);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
extern PFNGLUXRELEASESHADERCOMPILERPROC glReleaseShaderCompiler;
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
extern PFNGLUXSHADERBINARYPROC glShaderBinary;
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
extern PFNGLUXGETSHADERPRECISIONFORMATPROC glGetShaderPrecisionFormat;
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
extern PFNGLUXDEPTHRANGEFPROC glDepthRangef;
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
extern PFNGLUXCLEARDEPTHFPROC glClearDepthf;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:35 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_ES2_compatibility__
#define __GLUX_GL_ARB_ES2_compatibility__

GLUX_NEW_PLUGIN(GL_ARB_ES2_compatibility);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_FIXED
#  define GL_FIXED 0x140C
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE
#  define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT
#  define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#endif
#ifndef GL_LOW_FLOAT
#  define GL_LOW_FLOAT 0x8DF0
#endif
#ifndef GL_MEDIUM_FLOAT
#  define GL_MEDIUM_FLOAT 0x8DF1
#endif
#ifndef GL_HIGH_FLOAT
#  define GL_HIGH_FLOAT 0x8DF2
#endif
#ifndef GL_LOW_INT
#  define GL_LOW_INT 0x8DF3
#endif
#ifndef GL_MEDIUM_INT
#  define GL_MEDIUM_INT 0x8DF4
#endif
#ifndef GL_HIGH_INT
#  define GL_HIGH_INT 0x8DF5
#endif
#ifndef GL_SHADER_COMPILER
#  define GL_SHADER_COMPILER 0x8DFA
#endif
#ifndef GL_SHADER_BINARY_FORMATS
#  define GL_SHADER_BINARY_FORMATS 0x8DF8
#endif
#ifndef GL_NUM_SHADER_BINARY_FORMATS
#  define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#endif
#ifndef GL_MAX_VERTEX_UNIFORM_VECTORS
#  define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#endif
#ifndef GL_MAX_VARYING_VECTORS
#  define GL_MAX_VARYING_VECTORS 0x8DFC
#endif
#ifndef GL_MAX_FRAGMENT_UNIFORM_VECTORS
#  define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#endif
#ifndef GL_RGB565
#  define GL_RGB565 0x8D62
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
typedef void (APIENTRYP PFNGLUXRELEASESHADERCOMPILERPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
typedef void (APIENTRYP PFNGLUXSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
typedef void (APIENTRYP PFNGLUXGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
typedef void (APIENTRYP PFNGLUXDEPTHRANGEFPROC) (GLfloat n, GLfloat f);
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
typedef void (APIENTRYP PFNGLUXCLEARDEPTHFPROC) (GLfloat d);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
extern PFNGLUXRELEASESHADERCOMPILERPROC glReleaseShaderCompiler;
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
extern PFNGLUXSHADERBINARYPROC glShaderBinary;
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
extern PFNGLUXGETSHADERPRECISIONFORMATPROC glGetShaderPrecisionFormat;
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
extern PFNGLUXDEPTHRANGEFPROC glDepthRangef;
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
extern PFNGLUXCLEARDEPTHFPROC glClearDepthf;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:09:56 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_ES2_compatibility__
#define __GLUX_GL_ARB_ES2_compatibility__

GLUX_NEW_PLUGIN(GL_ARB_ES2_compatibility);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_FIXED
#  define GL_FIXED 0x140C
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE
#  define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT
#  define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#endif
#ifndef GL_LOW_FLOAT
#  define GL_LOW_FLOAT 0x8DF0
#endif
#ifndef GL_MEDIUM_FLOAT
#  define GL_MEDIUM_FLOAT 0x8DF1
#endif
#ifndef GL_HIGH_FLOAT
#  define GL_HIGH_FLOAT 0x8DF2
#endif
#ifndef GL_LOW_INT
#  define GL_LOW_INT 0x8DF3
#endif
#ifndef GL_MEDIUM_INT
#  define GL_MEDIUM_INT 0x8DF4
#endif
#ifndef GL_HIGH_INT
#  define GL_HIGH_INT 0x8DF5
#endif
#ifndef GL_SHADER_COMPILER
#  define GL_SHADER_COMPILER 0x8DFA
#endif
#ifndef GL_SHADER_BINARY_FORMATS
#  define GL_SHADER_BINARY_FORMATS 0x8DF8
#endif
#ifndef GL_NUM_SHADER_BINARY_FORMATS
#  define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#endif
#ifndef GL_MAX_VERTEX_UNIFORM_VECTORS
#  define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#endif
#ifndef GL_MAX_VARYING_VECTORS
#  define GL_MAX_VARYING_VECTORS 0x8DFC
#endif
#ifndef GL_MAX_FRAGMENT_UNIFORM_VECTORS
#  define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#endif
#ifndef GL_RGB565
#  define GL_RGB565 0x8D62
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
typedef void (APIENTRYP PFNGLUXRELEASESHADERCOMPILERPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
typedef void (APIENTRYP PFNGLUXSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
typedef void (APIENTRYP PFNGLUXGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
typedef void (APIENTRYP PFNGLUXDEPTHRANGEFPROC) (GLfloat n, GLfloat f);
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
typedef void (APIENTRYP PFNGLUXCLEARDEPTHFPROC) (GLfloat d);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
extern PFNGLUXRELEASESHADERCOMPILERPROC glReleaseShaderCompiler;
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
extern PFNGLUXSHADERBINARYPROC glShaderBinary;
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
extern PFNGLUXGETSHADERPRECISIONFORMATPROC glGetShaderPrecisionFormat;
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
extern PFNGLUXDEPTHRANGEFPROC glDepthRangef;
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
extern PFNGLUXCLEARDEPTHFPROC glClearDepthf;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:19:57 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_ES2_compatibility__
#define __GLUX_GL_ARB_ES2_compatibility__

GLUX_NEW_PLUGIN(GL_ARB_ES2_compatibility);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_FIXED
#  define GL_FIXED 0x140C
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE
#  define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT
#  define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#endif
#ifndef GL_LOW_FLOAT
#  define GL_LOW_FLOAT 0x8DF0
#endif
#ifndef GL_MEDIUM_FLOAT
#  define GL_MEDIUM_FLOAT 0x8DF1
#endif
#ifndef GL_HIGH_FLOAT
#  define GL_HIGH_FLOAT 0x8DF2
#endif
#ifndef GL_LOW_INT
#  define GL_LOW_INT 0x8DF3
#endif
#ifndef GL_MEDIUM_INT
#  define GL_MEDIUM_INT 0x8DF4
#endif
#ifndef GL_HIGH_INT
#  define GL_HIGH_INT 0x8DF5
#endif
#ifndef GL_SHADER_COMPILER
#  define GL_SHADER_COMPILER 0x8DFA
#endif
#ifndef GL_SHADER_BINARY_FORMATS
#  define GL_SHADER_BINARY_FORMATS 0x8DF8
#endif
#ifndef GL_NUM_SHADER_BINARY_FORMATS
#  define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#endif
#ifndef GL_MAX_VERTEX_UNIFORM_VECTORS
#  define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#endif
#ifndef GL_MAX_VARYING_VECTORS
#  define GL_MAX_VARYING_VECTORS 0x8DFC
#endif
#ifndef GL_MAX_FRAGMENT_UNIFORM_VECTORS
#  define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#endif
#ifndef GL_RGB565
#  define GL_RGB565 0x8D62
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
typedef void (APIENTRYP PFNGLUXRELEASESHADERCOMPILERPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
typedef void (APIENTRYP PFNGLUXSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
typedef void (APIENTRYP PFNGLUXGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
typedef void (APIENTRYP PFNGLUXDEPTHRANGEFPROC) (GLfloat n, GLfloat f);
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
typedef void (APIENTRYP PFNGLUXCLEARDEPTHFPROC) (GLfloat d);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
extern PFNGLUXRELEASESHADERCOMPILERPROC glReleaseShaderCompiler;
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
extern PFNGLUXSHADERBINARYPROC glShaderBinary;
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
extern PFNGLUXGETSHADERPRECISIONFORMATPROC glGetShaderPrecisionFormat;
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
extern PFNGLUXDEPTHRANGEFPROC glDepthRangef;
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
extern PFNGLUXCLEARDEPTHFPROC glClearDepthf;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:42:55 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_ES2_compatibility__
#define __GLUX_GL_ARB_ES2_compatibility__

GLUX_NEW_PLUGIN(GL_ARB_ES2_compatibility)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_FIXED
#  define GL_FIXED 0x140C
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE
#  define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#endif
#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT
#  define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#endif
#ifndef GL_LOW_FLOAT
#  define GL_LOW_FLOAT 0x8DF0
#endif
#ifndef GL_MEDIUM_FLOAT
#  define GL_MEDIUM_FLOAT 0x8DF1
#endif
#ifndef GL_HIGH_FLOAT
#  define GL_HIGH_FLOAT 0x8DF2
#endif
#ifndef GL_LOW_INT
#  define GL_LOW_INT 0x8DF3
#endif
#ifndef GL_MEDIUM_INT
#  define GL_MEDIUM_INT 0x8DF4
#endif
#ifndef GL_HIGH_INT
#  define GL_HIGH_INT 0x8DF5
#endif
#ifndef GL_SHADER_COMPILER
#  define GL_SHADER_COMPILER 0x8DFA
#endif
#ifndef GL_SHADER_BINARY_FORMATS
#  define GL_SHADER_BINARY_FORMATS 0x8DF8
#endif
#ifndef GL_NUM_SHADER_BINARY_FORMATS
#  define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#endif
#ifndef GL_MAX_VERTEX_UNIFORM_VECTORS
#  define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#endif
#ifndef GL_MAX_VARYING_VECTORS
#  define GL_MAX_VARYING_VECTORS 0x8DFC
#endif
#ifndef GL_MAX_FRAGMENT_UNIFORM_VECTORS
#  define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#endif
#ifndef GL_RGB565
#  define GL_RGB565 0x8D62
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
typedef void (APIENTRYP PFNGLUXRELEASESHADERCOMPILERPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
typedef void (APIENTRYP PFNGLUXSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
typedef void (APIENTRYP PFNGLUXGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
typedef void (APIENTRYP PFNGLUXDEPTHRANGEFPROC) (GLfloat n, GLfloat f);
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
typedef void (APIENTRYP PFNGLUXCLEARDEPTHFPROC) (GLfloat d);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
extern PFNGLUXRELEASESHADERCOMPILERPROC glReleaseShaderCompiler;
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
extern PFNGLUXSHADERBINARYPROC glShaderBinary;
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
extern PFNGLUXGETSHADERPRECISIONFORMATPROC glGetShaderPrecisionFormat;
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
extern PFNGLUXDEPTHRANGEFPROC glDepthRangef;
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
extern PFNGLUXCLEARDEPTHFPROC glClearDepthf;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
