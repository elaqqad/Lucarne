
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:28 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_geometry_shader4__
#define __GLUX_GL_ARB_geometry_shader4__

GLUX_NEW_PLUGIN(GL_ARB_geometry_shader4);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_LINES_ADJACENCY_ARB
#  define GL_LINES_ADJACENCY_ARB 0x000A
#endif
#ifndef GL_LINE_STRIP_ADJACENCY_ARB
#  define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#endif
#ifndef GL_TRIANGLES_ADJACENCY_ARB
#  define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#endif
#ifndef GL_TRIANGLE_STRIP_ADJACENCY_ARB
#  define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#endif
#ifndef GL_PROGRAM_POINT_SIZE_ARB
#  define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#endif
#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
#  define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
#  define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#endif
#ifndef GL_GEOMETRY_SHADER_ARB
#  define GL_GEOMETRY_SHADER_ARB 0x8DD9
#endif
#ifndef GL_GEOMETRY_VERTICES_OUT_ARB
#  define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#endif
#ifndef GL_GEOMETRY_INPUT_TYPE_ARB
#  define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#endif
#ifndef GL_GEOMETRY_OUTPUT_TYPE_ARB
#  define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#endif
#ifndef GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#endif
#ifndef GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
#  define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#endif
#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#endif
#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
#  define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#endif
#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glProgramParameteriARB
typedef void (APIENTRYP PFNGLUXPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glProgramParameteriARB
extern PFNGLUXPROGRAMPARAMETERIARBPROC glProgramParameteriARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
extern PFNGLUXFRAMEBUFFERTEXTUREARBPROC glFramebufferTextureARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
extern PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC glFramebufferTextureLayerARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
extern PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC glFramebufferTextureFaceARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:47 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_geometry_shader4__
#define __GLUX_GL_ARB_geometry_shader4__

GLUX_NEW_PLUGIN(GL_ARB_geometry_shader4);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_LINES_ADJACENCY_ARB
#  define GL_LINES_ADJACENCY_ARB 0x000A
#endif
#ifndef GL_LINE_STRIP_ADJACENCY_ARB
#  define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#endif
#ifndef GL_TRIANGLES_ADJACENCY_ARB
#  define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#endif
#ifndef GL_TRIANGLE_STRIP_ADJACENCY_ARB
#  define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#endif
#ifndef GL_PROGRAM_POINT_SIZE_ARB
#  define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#endif
#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
#  define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
#  define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#endif
#ifndef GL_GEOMETRY_SHADER_ARB
#  define GL_GEOMETRY_SHADER_ARB 0x8DD9
#endif
#ifndef GL_GEOMETRY_VERTICES_OUT_ARB
#  define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#endif
#ifndef GL_GEOMETRY_INPUT_TYPE_ARB
#  define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#endif
#ifndef GL_GEOMETRY_OUTPUT_TYPE_ARB
#  define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#endif
#ifndef GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#endif
#ifndef GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
#  define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#endif
#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#endif
#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
#  define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#endif
#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glProgramParameteriARB
typedef void (APIENTRYP PFNGLUXPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glProgramParameteriARB
extern PFNGLUXPROGRAMPARAMETERIARBPROC glProgramParameteriARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
extern PFNGLUXFRAMEBUFFERTEXTUREARBPROC glFramebufferTextureARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
extern PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC glFramebufferTextureLayerARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
extern PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC glFramebufferTextureFaceARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:54 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_geometry_shader4__
#define __GLUX_GL_ARB_geometry_shader4__

GLUX_NEW_PLUGIN(GL_ARB_geometry_shader4);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_LINES_ADJACENCY_ARB
#  define GL_LINES_ADJACENCY_ARB 0x000A
#endif
#ifndef GL_LINE_STRIP_ADJACENCY_ARB
#  define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#endif
#ifndef GL_TRIANGLES_ADJACENCY_ARB
#  define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#endif
#ifndef GL_TRIANGLE_STRIP_ADJACENCY_ARB
#  define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#endif
#ifndef GL_PROGRAM_POINT_SIZE_ARB
#  define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#endif
#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
#  define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
#  define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#endif
#ifndef GL_GEOMETRY_SHADER_ARB
#  define GL_GEOMETRY_SHADER_ARB 0x8DD9
#endif
#ifndef GL_GEOMETRY_VERTICES_OUT_ARB
#  define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#endif
#ifndef GL_GEOMETRY_INPUT_TYPE_ARB
#  define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#endif
#ifndef GL_GEOMETRY_OUTPUT_TYPE_ARB
#  define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#endif
#ifndef GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#endif
#ifndef GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
#  define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#endif
#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#endif
#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
#  define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#endif
#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glProgramParameteriARB
typedef void (APIENTRYP PFNGLUXPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glProgramParameteriARB
extern PFNGLUXPROGRAMPARAMETERIARBPROC glProgramParameteriARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
extern PFNGLUXFRAMEBUFFERTEXTUREARBPROC glFramebufferTextureARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
extern PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC glFramebufferTextureLayerARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
extern PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC glFramebufferTextureFaceARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:14 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_geometry_shader4__
#define __GLUX_GL_ARB_geometry_shader4__

GLUX_NEW_PLUGIN(GL_ARB_geometry_shader4);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_LINES_ADJACENCY_ARB
#  define GL_LINES_ADJACENCY_ARB 0x000A
#endif
#ifndef GL_LINE_STRIP_ADJACENCY_ARB
#  define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#endif
#ifndef GL_TRIANGLES_ADJACENCY_ARB
#  define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#endif
#ifndef GL_TRIANGLE_STRIP_ADJACENCY_ARB
#  define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#endif
#ifndef GL_PROGRAM_POINT_SIZE_ARB
#  define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#endif
#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
#  define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
#  define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#endif
#ifndef GL_GEOMETRY_SHADER_ARB
#  define GL_GEOMETRY_SHADER_ARB 0x8DD9
#endif
#ifndef GL_GEOMETRY_VERTICES_OUT_ARB
#  define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#endif
#ifndef GL_GEOMETRY_INPUT_TYPE_ARB
#  define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#endif
#ifndef GL_GEOMETRY_OUTPUT_TYPE_ARB
#  define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#endif
#ifndef GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#endif
#ifndef GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
#  define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#endif
#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#endif
#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
#  define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#endif
#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glProgramParameteriARB
typedef void (APIENTRYP PFNGLUXPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glProgramParameteriARB
extern PFNGLUXPROGRAMPARAMETERIARBPROC glProgramParameteriARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
extern PFNGLUXFRAMEBUFFERTEXTUREARBPROC glFramebufferTextureARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
extern PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC glFramebufferTextureLayerARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
extern PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC glFramebufferTextureFaceARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:31 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_geometry_shader4__
#define __GLUX_GL_ARB_geometry_shader4__

GLUX_NEW_PLUGIN(GL_ARB_geometry_shader4);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_LINES_ADJACENCY_ARB
#  define GL_LINES_ADJACENCY_ARB 0x000A
#endif
#ifndef GL_LINE_STRIP_ADJACENCY_ARB
#  define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#endif
#ifndef GL_TRIANGLES_ADJACENCY_ARB
#  define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#endif
#ifndef GL_TRIANGLE_STRIP_ADJACENCY_ARB
#  define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#endif
#ifndef GL_PROGRAM_POINT_SIZE_ARB
#  define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#endif
#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
#  define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
#  define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#endif
#ifndef GL_GEOMETRY_SHADER_ARB
#  define GL_GEOMETRY_SHADER_ARB 0x8DD9
#endif
#ifndef GL_GEOMETRY_VERTICES_OUT_ARB
#  define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#endif
#ifndef GL_GEOMETRY_INPUT_TYPE_ARB
#  define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#endif
#ifndef GL_GEOMETRY_OUTPUT_TYPE_ARB
#  define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#endif
#ifndef GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#endif
#ifndef GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
#  define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#endif
#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#endif
#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
#  define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#endif
#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glProgramParameteriARB
typedef void (APIENTRYP PFNGLUXPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glProgramParameteriARB
extern PFNGLUXPROGRAMPARAMETERIARBPROC glProgramParameteriARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
extern PFNGLUXFRAMEBUFFERTEXTUREARBPROC glFramebufferTextureARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
extern PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC glFramebufferTextureLayerARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
extern PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC glFramebufferTextureFaceARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:33 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_geometry_shader4__
#define __GLUX_GL_ARB_geometry_shader4__

GLUX_NEW_PLUGIN(GL_ARB_geometry_shader4);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_LINES_ADJACENCY_ARB
#  define GL_LINES_ADJACENCY_ARB 0x000A
#endif
#ifndef GL_LINE_STRIP_ADJACENCY_ARB
#  define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#endif
#ifndef GL_TRIANGLES_ADJACENCY_ARB
#  define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#endif
#ifndef GL_TRIANGLE_STRIP_ADJACENCY_ARB
#  define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#endif
#ifndef GL_PROGRAM_POINT_SIZE_ARB
#  define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#endif
#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
#  define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
#  define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#endif
#ifndef GL_GEOMETRY_SHADER_ARB
#  define GL_GEOMETRY_SHADER_ARB 0x8DD9
#endif
#ifndef GL_GEOMETRY_VERTICES_OUT_ARB
#  define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#endif
#ifndef GL_GEOMETRY_INPUT_TYPE_ARB
#  define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#endif
#ifndef GL_GEOMETRY_OUTPUT_TYPE_ARB
#  define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#endif
#ifndef GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#endif
#ifndef GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
#  define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#endif
#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#endif
#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
#  define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#endif
#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glProgramParameteriARB
typedef void (APIENTRYP PFNGLUXPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glProgramParameteriARB
extern PFNGLUXPROGRAMPARAMETERIARBPROC glProgramParameteriARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
extern PFNGLUXFRAMEBUFFERTEXTUREARBPROC glFramebufferTextureARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
extern PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC glFramebufferTextureLayerARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
extern PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC glFramebufferTextureFaceARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:55 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_geometry_shader4__
#define __GLUX_GL_ARB_geometry_shader4__

GLUX_NEW_PLUGIN(GL_ARB_geometry_shader4);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_LINES_ADJACENCY_ARB
#  define GL_LINES_ADJACENCY_ARB 0x000A
#endif
#ifndef GL_LINE_STRIP_ADJACENCY_ARB
#  define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#endif
#ifndef GL_TRIANGLES_ADJACENCY_ARB
#  define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#endif
#ifndef GL_TRIANGLE_STRIP_ADJACENCY_ARB
#  define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#endif
#ifndef GL_PROGRAM_POINT_SIZE_ARB
#  define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#endif
#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
#  define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
#  define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#endif
#ifndef GL_GEOMETRY_SHADER_ARB
#  define GL_GEOMETRY_SHADER_ARB 0x8DD9
#endif
#ifndef GL_GEOMETRY_VERTICES_OUT_ARB
#  define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#endif
#ifndef GL_GEOMETRY_INPUT_TYPE_ARB
#  define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#endif
#ifndef GL_GEOMETRY_OUTPUT_TYPE_ARB
#  define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#endif
#ifndef GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#endif
#ifndef GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
#  define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#endif
#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#endif
#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
#  define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#endif
#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glProgramParameteriARB
typedef void (APIENTRYP PFNGLUXPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glProgramParameteriARB
extern PFNGLUXPROGRAMPARAMETERIARBPROC glProgramParameteriARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
extern PFNGLUXFRAMEBUFFERTEXTUREARBPROC glFramebufferTextureARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
extern PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC glFramebufferTextureLayerARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
extern PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC glFramebufferTextureFaceARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:29:07 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_geometry_shader4__
#define __GLUX_GL_ARB_geometry_shader4__

GLUX_NEW_PLUGIN(GL_ARB_geometry_shader4);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_LINES_ADJACENCY_ARB
#  define GL_LINES_ADJACENCY_ARB 0x000A
#endif
#ifndef GL_LINE_STRIP_ADJACENCY_ARB
#  define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#endif
#ifndef GL_TRIANGLES_ADJACENCY_ARB
#  define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#endif
#ifndef GL_TRIANGLE_STRIP_ADJACENCY_ARB
#  define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#endif
#ifndef GL_PROGRAM_POINT_SIZE_ARB
#  define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#endif
#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
#  define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
#  define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#endif
#ifndef GL_GEOMETRY_SHADER_ARB
#  define GL_GEOMETRY_SHADER_ARB 0x8DD9
#endif
#ifndef GL_GEOMETRY_VERTICES_OUT_ARB
#  define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#endif
#ifndef GL_GEOMETRY_INPUT_TYPE_ARB
#  define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#endif
#ifndef GL_GEOMETRY_OUTPUT_TYPE_ARB
#  define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#endif
#ifndef GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#endif
#ifndef GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
#  define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#endif
#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#endif
#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
#  define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#endif
#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glProgramParameteriARB
typedef void (APIENTRYP PFNGLUXPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glProgramParameteriARB
extern PFNGLUXPROGRAMPARAMETERIARBPROC glProgramParameteriARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
extern PFNGLUXFRAMEBUFFERTEXTUREARBPROC glFramebufferTextureARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
extern PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC glFramebufferTextureLayerARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
extern PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC glFramebufferTextureFaceARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:17:07 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_geometry_shader4__
#define __GLUX_GL_ARB_geometry_shader4__

GLUX_NEW_PLUGIN(GL_ARB_geometry_shader4);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_LINES_ADJACENCY_ARB
#  define GL_LINES_ADJACENCY_ARB 0x000A
#endif
#ifndef GL_LINE_STRIP_ADJACENCY_ARB
#  define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#endif
#ifndef GL_TRIANGLES_ADJACENCY_ARB
#  define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#endif
#ifndef GL_TRIANGLE_STRIP_ADJACENCY_ARB
#  define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#endif
#ifndef GL_PROGRAM_POINT_SIZE_ARB
#  define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#endif
#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
#  define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
#  define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#endif
#ifndef GL_GEOMETRY_SHADER_ARB
#  define GL_GEOMETRY_SHADER_ARB 0x8DD9
#endif
#ifndef GL_GEOMETRY_VERTICES_OUT_ARB
#  define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#endif
#ifndef GL_GEOMETRY_INPUT_TYPE_ARB
#  define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#endif
#ifndef GL_GEOMETRY_OUTPUT_TYPE_ARB
#  define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#endif
#ifndef GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#endif
#ifndef GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
#  define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#endif
#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#endif
#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
#  define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#endif
#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glProgramParameteriARB
typedef void (APIENTRYP PFNGLUXPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glProgramParameteriARB
extern PFNGLUXPROGRAMPARAMETERIARBPROC glProgramParameteriARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
extern PFNGLUXFRAMEBUFFERTEXTUREARBPROC glFramebufferTextureARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
extern PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC glFramebufferTextureLayerARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
extern PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC glFramebufferTextureFaceARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_geometry_shader4__
#define __GLUX_GL_ARB_geometry_shader4__

GLUX_NEW_PLUGIN(GL_ARB_geometry_shader4);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_LINES_ADJACENCY_ARB
#  define GL_LINES_ADJACENCY_ARB 0x000A
#endif
#ifndef GL_LINE_STRIP_ADJACENCY_ARB
#  define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#endif
#ifndef GL_TRIANGLES_ADJACENCY_ARB
#  define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#endif
#ifndef GL_TRIANGLE_STRIP_ADJACENCY_ARB
#  define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#endif
#ifndef GL_PROGRAM_POINT_SIZE_ARB
#  define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#endif
#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
#  define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
#  define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#endif
#ifndef GL_GEOMETRY_SHADER_ARB
#  define GL_GEOMETRY_SHADER_ARB 0x8DD9
#endif
#ifndef GL_GEOMETRY_VERTICES_OUT_ARB
#  define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#endif
#ifndef GL_GEOMETRY_INPUT_TYPE_ARB
#  define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#endif
#ifndef GL_GEOMETRY_OUTPUT_TYPE_ARB
#  define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#endif
#ifndef GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#endif
#ifndef GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
#  define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#endif
#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#endif
#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
#  define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#endif
#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glProgramParameteriARB
typedef void (APIENTRYP PFNGLUXPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glProgramParameteriARB
extern PFNGLUXPROGRAMPARAMETERIARBPROC glProgramParameteriARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
extern PFNGLUXFRAMEBUFFERTEXTUREARBPROC glFramebufferTextureARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
extern PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC glFramebufferTextureLayerARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
extern PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC glFramebufferTextureFaceARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:22 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_geometry_shader4__
#define __GLUX_GL_ARB_geometry_shader4__

GLUX_NEW_PLUGIN(GL_ARB_geometry_shader4);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_LINES_ADJACENCY_ARB
#  define GL_LINES_ADJACENCY_ARB 0x000A
#endif
#ifndef GL_LINE_STRIP_ADJACENCY_ARB
#  define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#endif
#ifndef GL_TRIANGLES_ADJACENCY_ARB
#  define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#endif
#ifndef GL_TRIANGLE_STRIP_ADJACENCY_ARB
#  define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#endif
#ifndef GL_PROGRAM_POINT_SIZE_ARB
#  define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#endif
#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
#  define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
#  define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#endif
#ifndef GL_GEOMETRY_SHADER_ARB
#  define GL_GEOMETRY_SHADER_ARB 0x8DD9
#endif
#ifndef GL_GEOMETRY_VERTICES_OUT_ARB
#  define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#endif
#ifndef GL_GEOMETRY_INPUT_TYPE_ARB
#  define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#endif
#ifndef GL_GEOMETRY_OUTPUT_TYPE_ARB
#  define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#endif
#ifndef GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#endif
#ifndef GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
#  define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#endif
#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#endif
#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
#  define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#endif
#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glProgramParameteriARB
typedef void (APIENTRYP PFNGLUXPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glProgramParameteriARB
extern PFNGLUXPROGRAMPARAMETERIARBPROC glProgramParameteriARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
extern PFNGLUXFRAMEBUFFERTEXTUREARBPROC glFramebufferTextureARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
extern PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC glFramebufferTextureLayerARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
extern PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC glFramebufferTextureFaceARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:02 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_geometry_shader4__
#define __GLUX_GL_ARB_geometry_shader4__

GLUX_NEW_PLUGIN(GL_ARB_geometry_shader4);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_LINES_ADJACENCY_ARB
#  define GL_LINES_ADJACENCY_ARB 0x000A
#endif
#ifndef GL_LINE_STRIP_ADJACENCY_ARB
#  define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#endif
#ifndef GL_TRIANGLES_ADJACENCY_ARB
#  define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#endif
#ifndef GL_TRIANGLE_STRIP_ADJACENCY_ARB
#  define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#endif
#ifndef GL_PROGRAM_POINT_SIZE_ARB
#  define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#endif
#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
#  define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
#  define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#endif
#ifndef GL_GEOMETRY_SHADER_ARB
#  define GL_GEOMETRY_SHADER_ARB 0x8DD9
#endif
#ifndef GL_GEOMETRY_VERTICES_OUT_ARB
#  define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#endif
#ifndef GL_GEOMETRY_INPUT_TYPE_ARB
#  define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#endif
#ifndef GL_GEOMETRY_OUTPUT_TYPE_ARB
#  define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#endif
#ifndef GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#endif
#ifndef GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
#  define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#endif
#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#endif
#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
#  define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#endif
#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glProgramParameteriARB
typedef void (APIENTRYP PFNGLUXPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glProgramParameteriARB
extern PFNGLUXPROGRAMPARAMETERIARBPROC glProgramParameteriARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
extern PFNGLUXFRAMEBUFFERTEXTUREARBPROC glFramebufferTextureARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
extern PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC glFramebufferTextureLayerARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
extern PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC glFramebufferTextureFaceARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:09 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_geometry_shader4__
#define __GLUX_GL_ARB_geometry_shader4__

GLUX_NEW_PLUGIN(GL_ARB_geometry_shader4);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_LINES_ADJACENCY_ARB
#  define GL_LINES_ADJACENCY_ARB 0x000A
#endif
#ifndef GL_LINE_STRIP_ADJACENCY_ARB
#  define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#endif
#ifndef GL_TRIANGLES_ADJACENCY_ARB
#  define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#endif
#ifndef GL_TRIANGLE_STRIP_ADJACENCY_ARB
#  define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#endif
#ifndef GL_PROGRAM_POINT_SIZE_ARB
#  define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#endif
#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
#  define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
#  define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#endif
#ifndef GL_GEOMETRY_SHADER_ARB
#  define GL_GEOMETRY_SHADER_ARB 0x8DD9
#endif
#ifndef GL_GEOMETRY_VERTICES_OUT_ARB
#  define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#endif
#ifndef GL_GEOMETRY_INPUT_TYPE_ARB
#  define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#endif
#ifndef GL_GEOMETRY_OUTPUT_TYPE_ARB
#  define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#endif
#ifndef GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#endif
#ifndef GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
#  define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#endif
#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#endif
#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
#  define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#endif
#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glProgramParameteriARB
typedef void (APIENTRYP PFNGLUXPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glProgramParameteriARB
extern PFNGLUXPROGRAMPARAMETERIARBPROC glProgramParameteriARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
extern PFNGLUXFRAMEBUFFERTEXTUREARBPROC glFramebufferTextureARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
extern PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC glFramebufferTextureLayerARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
extern PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC glFramebufferTextureFaceARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_geometry_shader4__
#define __GLUX_GL_ARB_geometry_shader4__

GLUX_NEW_PLUGIN(GL_ARB_geometry_shader4);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_LINES_ADJACENCY_ARB
#  define GL_LINES_ADJACENCY_ARB 0x000A
#endif
#ifndef GL_LINE_STRIP_ADJACENCY_ARB
#  define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#endif
#ifndef GL_TRIANGLES_ADJACENCY_ARB
#  define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#endif
#ifndef GL_TRIANGLE_STRIP_ADJACENCY_ARB
#  define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#endif
#ifndef GL_PROGRAM_POINT_SIZE_ARB
#  define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#endif
#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
#  define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
#  define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#endif
#ifndef GL_GEOMETRY_SHADER_ARB
#  define GL_GEOMETRY_SHADER_ARB 0x8DD9
#endif
#ifndef GL_GEOMETRY_VERTICES_OUT_ARB
#  define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#endif
#ifndef GL_GEOMETRY_INPUT_TYPE_ARB
#  define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#endif
#ifndef GL_GEOMETRY_OUTPUT_TYPE_ARB
#  define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#endif
#ifndef GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#endif
#ifndef GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
#  define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#endif
#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#endif
#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
#  define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#endif
#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glProgramParameteriARB
typedef void (APIENTRYP PFNGLUXPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glProgramParameteriARB
extern PFNGLUXPROGRAMPARAMETERIARBPROC glProgramParameteriARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
extern PFNGLUXFRAMEBUFFERTEXTUREARBPROC glFramebufferTextureARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
extern PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC glFramebufferTextureLayerARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
extern PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC glFramebufferTextureFaceARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:52:07 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_geometry_shader4__
#define __GLUX_GL_ARB_geometry_shader4__

GLUX_NEW_PLUGIN(GL_ARB_geometry_shader4);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_LINES_ADJACENCY_ARB
#  define GL_LINES_ADJACENCY_ARB 0x000A
#endif
#ifndef GL_LINE_STRIP_ADJACENCY_ARB
#  define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#endif
#ifndef GL_TRIANGLES_ADJACENCY_ARB
#  define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#endif
#ifndef GL_TRIANGLE_STRIP_ADJACENCY_ARB
#  define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#endif
#ifndef GL_PROGRAM_POINT_SIZE_ARB
#  define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#endif
#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
#  define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
#  define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#endif
#ifndef GL_GEOMETRY_SHADER_ARB
#  define GL_GEOMETRY_SHADER_ARB 0x8DD9
#endif
#ifndef GL_GEOMETRY_VERTICES_OUT_ARB
#  define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#endif
#ifndef GL_GEOMETRY_INPUT_TYPE_ARB
#  define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#endif
#ifndef GL_GEOMETRY_OUTPUT_TYPE_ARB
#  define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#endif
#ifndef GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#endif
#ifndef GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
#  define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#endif
#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#endif
#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
#  define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#endif
#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glProgramParameteriARB
typedef void (APIENTRYP PFNGLUXPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glProgramParameteriARB
extern PFNGLUXPROGRAMPARAMETERIARBPROC glProgramParameteriARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
extern PFNGLUXFRAMEBUFFERTEXTUREARBPROC glFramebufferTextureARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
extern PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC glFramebufferTextureLayerARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
extern PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC glFramebufferTextureFaceARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_geometry_shader4__
#define __GLUX_GL_ARB_geometry_shader4__

GLUX_NEW_PLUGIN(GL_ARB_geometry_shader4);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_LINES_ADJACENCY_ARB
#  define GL_LINES_ADJACENCY_ARB 0x000A
#endif
#ifndef GL_LINE_STRIP_ADJACENCY_ARB
#  define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#endif
#ifndef GL_TRIANGLES_ADJACENCY_ARB
#  define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#endif
#ifndef GL_TRIANGLE_STRIP_ADJACENCY_ARB
#  define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#endif
#ifndef GL_PROGRAM_POINT_SIZE_ARB
#  define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#endif
#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
#  define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
#  define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#endif
#ifndef GL_GEOMETRY_SHADER_ARB
#  define GL_GEOMETRY_SHADER_ARB 0x8DD9
#endif
#ifndef GL_GEOMETRY_VERTICES_OUT_ARB
#  define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#endif
#ifndef GL_GEOMETRY_INPUT_TYPE_ARB
#  define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#endif
#ifndef GL_GEOMETRY_OUTPUT_TYPE_ARB
#  define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#endif
#ifndef GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#endif
#ifndef GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
#  define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#endif
#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#endif
#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
#  define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#endif
#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glProgramParameteriARB
typedef void (APIENTRYP PFNGLUXPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glProgramParameteriARB
extern PFNGLUXPROGRAMPARAMETERIARBPROC glProgramParameteriARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
extern PFNGLUXFRAMEBUFFERTEXTUREARBPROC glFramebufferTextureARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
extern PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC glFramebufferTextureLayerARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
extern PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC glFramebufferTextureFaceARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:08 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_geometry_shader4__
#define __GLUX_GL_ARB_geometry_shader4__

GLUX_NEW_PLUGIN(GL_ARB_geometry_shader4);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_LINES_ADJACENCY_ARB
#  define GL_LINES_ADJACENCY_ARB 0x000A
#endif
#ifndef GL_LINE_STRIP_ADJACENCY_ARB
#  define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#endif
#ifndef GL_TRIANGLES_ADJACENCY_ARB
#  define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#endif
#ifndef GL_TRIANGLE_STRIP_ADJACENCY_ARB
#  define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#endif
#ifndef GL_PROGRAM_POINT_SIZE_ARB
#  define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#endif
#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
#  define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
#  define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#endif
#ifndef GL_GEOMETRY_SHADER_ARB
#  define GL_GEOMETRY_SHADER_ARB 0x8DD9
#endif
#ifndef GL_GEOMETRY_VERTICES_OUT_ARB
#  define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#endif
#ifndef GL_GEOMETRY_INPUT_TYPE_ARB
#  define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#endif
#ifndef GL_GEOMETRY_OUTPUT_TYPE_ARB
#  define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#endif
#ifndef GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#endif
#ifndef GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
#  define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#endif
#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#endif
#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
#  define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#endif
#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glProgramParameteriARB
typedef void (APIENTRYP PFNGLUXPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glProgramParameteriARB
extern PFNGLUXPROGRAMPARAMETERIARBPROC glProgramParameteriARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
extern PFNGLUXFRAMEBUFFERTEXTUREARBPROC glFramebufferTextureARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
extern PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC glFramebufferTextureLayerARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
extern PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC glFramebufferTextureFaceARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:28 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_geometry_shader4__
#define __GLUX_GL_ARB_geometry_shader4__

GLUX_NEW_PLUGIN(GL_ARB_geometry_shader4);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_LINES_ADJACENCY_ARB
#  define GL_LINES_ADJACENCY_ARB 0x000A
#endif
#ifndef GL_LINE_STRIP_ADJACENCY_ARB
#  define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#endif
#ifndef GL_TRIANGLES_ADJACENCY_ARB
#  define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#endif
#ifndef GL_TRIANGLE_STRIP_ADJACENCY_ARB
#  define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#endif
#ifndef GL_PROGRAM_POINT_SIZE_ARB
#  define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#endif
#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
#  define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
#  define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#endif
#ifndef GL_GEOMETRY_SHADER_ARB
#  define GL_GEOMETRY_SHADER_ARB 0x8DD9
#endif
#ifndef GL_GEOMETRY_VERTICES_OUT_ARB
#  define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#endif
#ifndef GL_GEOMETRY_INPUT_TYPE_ARB
#  define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#endif
#ifndef GL_GEOMETRY_OUTPUT_TYPE_ARB
#  define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#endif
#ifndef GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#endif
#ifndef GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
#  define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#endif
#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#endif
#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
#  define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#endif
#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glProgramParameteriARB
typedef void (APIENTRYP PFNGLUXPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glProgramParameteriARB
extern PFNGLUXPROGRAMPARAMETERIARBPROC glProgramParameteriARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
extern PFNGLUXFRAMEBUFFERTEXTUREARBPROC glFramebufferTextureARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
extern PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC glFramebufferTextureLayerARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
extern PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC glFramebufferTextureFaceARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:26 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_geometry_shader4__
#define __GLUX_GL_ARB_geometry_shader4__

GLUX_NEW_PLUGIN(GL_ARB_geometry_shader4);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_LINES_ADJACENCY_ARB
#  define GL_LINES_ADJACENCY_ARB 0x000A
#endif
#ifndef GL_LINE_STRIP_ADJACENCY_ARB
#  define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#endif
#ifndef GL_TRIANGLES_ADJACENCY_ARB
#  define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#endif
#ifndef GL_TRIANGLE_STRIP_ADJACENCY_ARB
#  define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#endif
#ifndef GL_PROGRAM_POINT_SIZE_ARB
#  define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#endif
#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
#  define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
#  define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#endif
#ifndef GL_GEOMETRY_SHADER_ARB
#  define GL_GEOMETRY_SHADER_ARB 0x8DD9
#endif
#ifndef GL_GEOMETRY_VERTICES_OUT_ARB
#  define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#endif
#ifndef GL_GEOMETRY_INPUT_TYPE_ARB
#  define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#endif
#ifndef GL_GEOMETRY_OUTPUT_TYPE_ARB
#  define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#endif
#ifndef GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#endif
#ifndef GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
#  define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#endif
#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#endif
#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
#  define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#endif
#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glProgramParameteriARB
typedef void (APIENTRYP PFNGLUXPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glProgramParameteriARB
extern PFNGLUXPROGRAMPARAMETERIARBPROC glProgramParameteriARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
extern PFNGLUXFRAMEBUFFERTEXTUREARBPROC glFramebufferTextureARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
extern PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC glFramebufferTextureLayerARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
extern PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC glFramebufferTextureFaceARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:42:03 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_geometry_shader4__
#define __GLUX_GL_ARB_geometry_shader4__

GLUX_NEW_PLUGIN(GL_ARB_geometry_shader4);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_LINES_ADJACENCY_ARB
#  define GL_LINES_ADJACENCY_ARB 0x000A
#endif
#ifndef GL_LINE_STRIP_ADJACENCY_ARB
#  define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#endif
#ifndef GL_TRIANGLES_ADJACENCY_ARB
#  define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#endif
#ifndef GL_TRIANGLE_STRIP_ADJACENCY_ARB
#  define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#endif
#ifndef GL_PROGRAM_POINT_SIZE_ARB
#  define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#endif
#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
#  define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
#  define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#endif
#ifndef GL_GEOMETRY_SHADER_ARB
#  define GL_GEOMETRY_SHADER_ARB 0x8DD9
#endif
#ifndef GL_GEOMETRY_VERTICES_OUT_ARB
#  define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#endif
#ifndef GL_GEOMETRY_INPUT_TYPE_ARB
#  define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#endif
#ifndef GL_GEOMETRY_OUTPUT_TYPE_ARB
#  define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#endif
#ifndef GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#endif
#ifndef GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
#  define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#endif
#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#endif
#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
#  define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#endif
#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glProgramParameteriARB
typedef void (APIENTRYP PFNGLUXPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glProgramParameteriARB
extern PFNGLUXPROGRAMPARAMETERIARBPROC glProgramParameteriARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
extern PFNGLUXFRAMEBUFFERTEXTUREARBPROC glFramebufferTextureARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
extern PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC glFramebufferTextureLayerARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
extern PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC glFramebufferTextureFaceARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:43 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_geometry_shader4__
#define __GLUX_GL_ARB_geometry_shader4__

GLUX_NEW_PLUGIN(GL_ARB_geometry_shader4);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_LINES_ADJACENCY_ARB
#  define GL_LINES_ADJACENCY_ARB 0x000A
#endif
#ifndef GL_LINE_STRIP_ADJACENCY_ARB
#  define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#endif
#ifndef GL_TRIANGLES_ADJACENCY_ARB
#  define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#endif
#ifndef GL_TRIANGLE_STRIP_ADJACENCY_ARB
#  define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#endif
#ifndef GL_PROGRAM_POINT_SIZE_ARB
#  define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#endif
#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
#  define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
#  define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#endif
#ifndef GL_GEOMETRY_SHADER_ARB
#  define GL_GEOMETRY_SHADER_ARB 0x8DD9
#endif
#ifndef GL_GEOMETRY_VERTICES_OUT_ARB
#  define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#endif
#ifndef GL_GEOMETRY_INPUT_TYPE_ARB
#  define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#endif
#ifndef GL_GEOMETRY_OUTPUT_TYPE_ARB
#  define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#endif
#ifndef GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#endif
#ifndef GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
#  define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#endif
#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#endif
#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
#  define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#endif
#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glProgramParameteriARB
typedef void (APIENTRYP PFNGLUXPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glProgramParameteriARB
extern PFNGLUXPROGRAMPARAMETERIARBPROC glProgramParameteriARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
extern PFNGLUXFRAMEBUFFERTEXTUREARBPROC glFramebufferTextureARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
extern PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC glFramebufferTextureLayerARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
extern PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC glFramebufferTextureFaceARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:10:02 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_geometry_shader4__
#define __GLUX_GL_ARB_geometry_shader4__

GLUX_NEW_PLUGIN(GL_ARB_geometry_shader4);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_LINES_ADJACENCY_ARB
#  define GL_LINES_ADJACENCY_ARB 0x000A
#endif
#ifndef GL_LINE_STRIP_ADJACENCY_ARB
#  define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#endif
#ifndef GL_TRIANGLES_ADJACENCY_ARB
#  define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#endif
#ifndef GL_TRIANGLE_STRIP_ADJACENCY_ARB
#  define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#endif
#ifndef GL_PROGRAM_POINT_SIZE_ARB
#  define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#endif
#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
#  define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
#  define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#endif
#ifndef GL_GEOMETRY_SHADER_ARB
#  define GL_GEOMETRY_SHADER_ARB 0x8DD9
#endif
#ifndef GL_GEOMETRY_VERTICES_OUT_ARB
#  define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#endif
#ifndef GL_GEOMETRY_INPUT_TYPE_ARB
#  define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#endif
#ifndef GL_GEOMETRY_OUTPUT_TYPE_ARB
#  define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#endif
#ifndef GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#endif
#ifndef GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
#  define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#endif
#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#endif
#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
#  define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#endif
#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glProgramParameteriARB
typedef void (APIENTRYP PFNGLUXPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glProgramParameteriARB
extern PFNGLUXPROGRAMPARAMETERIARBPROC glProgramParameteriARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
extern PFNGLUXFRAMEBUFFERTEXTUREARBPROC glFramebufferTextureARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
extern PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC glFramebufferTextureLayerARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
extern PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC glFramebufferTextureFaceARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:20:03 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_geometry_shader4__
#define __GLUX_GL_ARB_geometry_shader4__

GLUX_NEW_PLUGIN(GL_ARB_geometry_shader4);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_LINES_ADJACENCY_ARB
#  define GL_LINES_ADJACENCY_ARB 0x000A
#endif
#ifndef GL_LINE_STRIP_ADJACENCY_ARB
#  define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#endif
#ifndef GL_TRIANGLES_ADJACENCY_ARB
#  define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#endif
#ifndef GL_TRIANGLE_STRIP_ADJACENCY_ARB
#  define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#endif
#ifndef GL_PROGRAM_POINT_SIZE_ARB
#  define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#endif
#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
#  define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
#  define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#endif
#ifndef GL_GEOMETRY_SHADER_ARB
#  define GL_GEOMETRY_SHADER_ARB 0x8DD9
#endif
#ifndef GL_GEOMETRY_VERTICES_OUT_ARB
#  define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#endif
#ifndef GL_GEOMETRY_INPUT_TYPE_ARB
#  define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#endif
#ifndef GL_GEOMETRY_OUTPUT_TYPE_ARB
#  define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#endif
#ifndef GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#endif
#ifndef GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
#  define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#endif
#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#endif
#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
#  define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#endif
#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glProgramParameteriARB
typedef void (APIENTRYP PFNGLUXPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glProgramParameteriARB
extern PFNGLUXPROGRAMPARAMETERIARBPROC glProgramParameteriARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
extern PFNGLUXFRAMEBUFFERTEXTUREARBPROC glFramebufferTextureARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
extern PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC glFramebufferTextureLayerARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
extern PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC glFramebufferTextureFaceARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:43:04 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_geometry_shader4__
#define __GLUX_GL_ARB_geometry_shader4__

GLUX_NEW_PLUGIN(GL_ARB_geometry_shader4)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_LINES_ADJACENCY_ARB
#  define GL_LINES_ADJACENCY_ARB 0x000A
#endif
#ifndef GL_LINE_STRIP_ADJACENCY_ARB
#  define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#endif
#ifndef GL_TRIANGLES_ADJACENCY_ARB
#  define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#endif
#ifndef GL_TRIANGLE_STRIP_ADJACENCY_ARB
#  define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#endif
#ifndef GL_PROGRAM_POINT_SIZE_ARB
#  define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#endif
#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
#  define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
#  define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
#  define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#endif
#ifndef GL_GEOMETRY_SHADER_ARB
#  define GL_GEOMETRY_SHADER_ARB 0x8DD9
#endif
#ifndef GL_GEOMETRY_VERTICES_OUT_ARB
#  define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#endif
#ifndef GL_GEOMETRY_INPUT_TYPE_ARB
#  define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#endif
#ifndef GL_GEOMETRY_OUTPUT_TYPE_ARB
#  define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#endif
#ifndef GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#endif
#ifndef GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
#  define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#endif
#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#endif
#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
#  define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#endif
#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
#  define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glProgramParameteriARB
typedef void (APIENTRYP PFNGLUXPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glProgramParameteriARB
extern PFNGLUXPROGRAMPARAMETERIARBPROC glProgramParameteriARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureARB
extern PFNGLUXFRAMEBUFFERTEXTUREARBPROC glFramebufferTextureARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureLayerARB
extern PFNGLUXFRAMEBUFFERTEXTURELAYERARBPROC glFramebufferTextureLayerARB;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTextureFaceARB
extern PFNGLUXFRAMEBUFFERTEXTUREFACEARBPROC glFramebufferTextureFaceARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
