
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:27 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_matrix_palette__
#define __GLUX_GL_ARB_matrix_palette__

GLUX_NEW_PLUGIN(GL_ARB_matrix_palette);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MATRIX_PALETTE_ARB
#  define GL_MATRIX_PALETTE_ARB 0x8840
#endif
#ifndef GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
#  define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
#endif
#ifndef GL_MAX_PALETTE_MATRICES_ARB
#  define GL_MAX_PALETTE_MATRICES_ARB 0x8842
#endif
#ifndef GL_CURRENT_PALETTE_MATRIX_ARB
#  define GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_ARB
#  define GL_MATRIX_INDEX_ARRAY_ARB 0x8844
#endif
#ifndef GL_CURRENT_MATRIX_INDEX_ARB
#  define GL_CURRENT_MATRIX_INDEX_ARB 0x8845
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_SIZE_ARB
#  define GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_TYPE_ARB
#  define GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
#  define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_POINTER_ARB
#  define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
typedef void (APIENTRYP PFNGLUXCURRENTPALETTEMATRIXARBPROC) (GLint index);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
extern PFNGLUXCURRENTPALETTEMATRIXARBPROC glCurrentPaletteMatrixARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
extern PFNGLUXMATRIXINDEXUBVARBPROC glMatrixIndexubvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
extern PFNGLUXMATRIXINDEXUSVARBPROC glMatrixIndexusvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
extern PFNGLUXMATRIXINDEXUIVARBPROC glMatrixIndexuivARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
extern PFNGLUXMATRIXINDEXPOINTERARBPROC glMatrixIndexPointerARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:45 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_matrix_palette__
#define __GLUX_GL_ARB_matrix_palette__

GLUX_NEW_PLUGIN(GL_ARB_matrix_palette);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MATRIX_PALETTE_ARB
#  define GL_MATRIX_PALETTE_ARB 0x8840
#endif
#ifndef GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
#  define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
#endif
#ifndef GL_MAX_PALETTE_MATRICES_ARB
#  define GL_MAX_PALETTE_MATRICES_ARB 0x8842
#endif
#ifndef GL_CURRENT_PALETTE_MATRIX_ARB
#  define GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_ARB
#  define GL_MATRIX_INDEX_ARRAY_ARB 0x8844
#endif
#ifndef GL_CURRENT_MATRIX_INDEX_ARB
#  define GL_CURRENT_MATRIX_INDEX_ARB 0x8845
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_SIZE_ARB
#  define GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_TYPE_ARB
#  define GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
#  define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_POINTER_ARB
#  define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
typedef void (APIENTRYP PFNGLUXCURRENTPALETTEMATRIXARBPROC) (GLint index);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
extern PFNGLUXCURRENTPALETTEMATRIXARBPROC glCurrentPaletteMatrixARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
extern PFNGLUXMATRIXINDEXUBVARBPROC glMatrixIndexubvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
extern PFNGLUXMATRIXINDEXUSVARBPROC glMatrixIndexusvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
extern PFNGLUXMATRIXINDEXUIVARBPROC glMatrixIndexuivARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
extern PFNGLUXMATRIXINDEXPOINTERARBPROC glMatrixIndexPointerARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:53 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_matrix_palette__
#define __GLUX_GL_ARB_matrix_palette__

GLUX_NEW_PLUGIN(GL_ARB_matrix_palette);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MATRIX_PALETTE_ARB
#  define GL_MATRIX_PALETTE_ARB 0x8840
#endif
#ifndef GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
#  define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
#endif
#ifndef GL_MAX_PALETTE_MATRICES_ARB
#  define GL_MAX_PALETTE_MATRICES_ARB 0x8842
#endif
#ifndef GL_CURRENT_PALETTE_MATRIX_ARB
#  define GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_ARB
#  define GL_MATRIX_INDEX_ARRAY_ARB 0x8844
#endif
#ifndef GL_CURRENT_MATRIX_INDEX_ARB
#  define GL_CURRENT_MATRIX_INDEX_ARB 0x8845
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_SIZE_ARB
#  define GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_TYPE_ARB
#  define GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
#  define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_POINTER_ARB
#  define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
typedef void (APIENTRYP PFNGLUXCURRENTPALETTEMATRIXARBPROC) (GLint index);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
extern PFNGLUXCURRENTPALETTEMATRIXARBPROC glCurrentPaletteMatrixARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
extern PFNGLUXMATRIXINDEXUBVARBPROC glMatrixIndexubvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
extern PFNGLUXMATRIXINDEXUSVARBPROC glMatrixIndexusvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
extern PFNGLUXMATRIXINDEXUIVARBPROC glMatrixIndexuivARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
extern PFNGLUXMATRIXINDEXPOINTERARBPROC glMatrixIndexPointerARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:13 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_matrix_palette__
#define __GLUX_GL_ARB_matrix_palette__

GLUX_NEW_PLUGIN(GL_ARB_matrix_palette);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MATRIX_PALETTE_ARB
#  define GL_MATRIX_PALETTE_ARB 0x8840
#endif
#ifndef GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
#  define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
#endif
#ifndef GL_MAX_PALETTE_MATRICES_ARB
#  define GL_MAX_PALETTE_MATRICES_ARB 0x8842
#endif
#ifndef GL_CURRENT_PALETTE_MATRIX_ARB
#  define GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_ARB
#  define GL_MATRIX_INDEX_ARRAY_ARB 0x8844
#endif
#ifndef GL_CURRENT_MATRIX_INDEX_ARB
#  define GL_CURRENT_MATRIX_INDEX_ARB 0x8845
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_SIZE_ARB
#  define GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_TYPE_ARB
#  define GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
#  define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_POINTER_ARB
#  define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
typedef void (APIENTRYP PFNGLUXCURRENTPALETTEMATRIXARBPROC) (GLint index);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
extern PFNGLUXCURRENTPALETTEMATRIXARBPROC glCurrentPaletteMatrixARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
extern PFNGLUXMATRIXINDEXUBVARBPROC glMatrixIndexubvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
extern PFNGLUXMATRIXINDEXUSVARBPROC glMatrixIndexusvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
extern PFNGLUXMATRIXINDEXUIVARBPROC glMatrixIndexuivARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
extern PFNGLUXMATRIXINDEXPOINTERARBPROC glMatrixIndexPointerARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:30 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_matrix_palette__
#define __GLUX_GL_ARB_matrix_palette__

GLUX_NEW_PLUGIN(GL_ARB_matrix_palette);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MATRIX_PALETTE_ARB
#  define GL_MATRIX_PALETTE_ARB 0x8840
#endif
#ifndef GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
#  define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
#endif
#ifndef GL_MAX_PALETTE_MATRICES_ARB
#  define GL_MAX_PALETTE_MATRICES_ARB 0x8842
#endif
#ifndef GL_CURRENT_PALETTE_MATRIX_ARB
#  define GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_ARB
#  define GL_MATRIX_INDEX_ARRAY_ARB 0x8844
#endif
#ifndef GL_CURRENT_MATRIX_INDEX_ARB
#  define GL_CURRENT_MATRIX_INDEX_ARB 0x8845
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_SIZE_ARB
#  define GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_TYPE_ARB
#  define GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
#  define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_POINTER_ARB
#  define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
typedef void (APIENTRYP PFNGLUXCURRENTPALETTEMATRIXARBPROC) (GLint index);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
extern PFNGLUXCURRENTPALETTEMATRIXARBPROC glCurrentPaletteMatrixARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
extern PFNGLUXMATRIXINDEXUBVARBPROC glMatrixIndexubvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
extern PFNGLUXMATRIXINDEXUSVARBPROC glMatrixIndexusvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
extern PFNGLUXMATRIXINDEXUIVARBPROC glMatrixIndexuivARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
extern PFNGLUXMATRIXINDEXPOINTERARBPROC glMatrixIndexPointerARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:32 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_matrix_palette__
#define __GLUX_GL_ARB_matrix_palette__

GLUX_NEW_PLUGIN(GL_ARB_matrix_palette);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MATRIX_PALETTE_ARB
#  define GL_MATRIX_PALETTE_ARB 0x8840
#endif
#ifndef GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
#  define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
#endif
#ifndef GL_MAX_PALETTE_MATRICES_ARB
#  define GL_MAX_PALETTE_MATRICES_ARB 0x8842
#endif
#ifndef GL_CURRENT_PALETTE_MATRIX_ARB
#  define GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_ARB
#  define GL_MATRIX_INDEX_ARRAY_ARB 0x8844
#endif
#ifndef GL_CURRENT_MATRIX_INDEX_ARB
#  define GL_CURRENT_MATRIX_INDEX_ARB 0x8845
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_SIZE_ARB
#  define GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_TYPE_ARB
#  define GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
#  define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_POINTER_ARB
#  define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
typedef void (APIENTRYP PFNGLUXCURRENTPALETTEMATRIXARBPROC) (GLint index);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
extern PFNGLUXCURRENTPALETTEMATRIXARBPROC glCurrentPaletteMatrixARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
extern PFNGLUXMATRIXINDEXUBVARBPROC glMatrixIndexubvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
extern PFNGLUXMATRIXINDEXUSVARBPROC glMatrixIndexusvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
extern PFNGLUXMATRIXINDEXUIVARBPROC glMatrixIndexuivARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
extern PFNGLUXMATRIXINDEXPOINTERARBPROC glMatrixIndexPointerARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:54 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_matrix_palette__
#define __GLUX_GL_ARB_matrix_palette__

GLUX_NEW_PLUGIN(GL_ARB_matrix_palette);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MATRIX_PALETTE_ARB
#  define GL_MATRIX_PALETTE_ARB 0x8840
#endif
#ifndef GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
#  define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
#endif
#ifndef GL_MAX_PALETTE_MATRICES_ARB
#  define GL_MAX_PALETTE_MATRICES_ARB 0x8842
#endif
#ifndef GL_CURRENT_PALETTE_MATRIX_ARB
#  define GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_ARB
#  define GL_MATRIX_INDEX_ARRAY_ARB 0x8844
#endif
#ifndef GL_CURRENT_MATRIX_INDEX_ARB
#  define GL_CURRENT_MATRIX_INDEX_ARB 0x8845
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_SIZE_ARB
#  define GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_TYPE_ARB
#  define GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
#  define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_POINTER_ARB
#  define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
typedef void (APIENTRYP PFNGLUXCURRENTPALETTEMATRIXARBPROC) (GLint index);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
extern PFNGLUXCURRENTPALETTEMATRIXARBPROC glCurrentPaletteMatrixARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
extern PFNGLUXMATRIXINDEXUBVARBPROC glMatrixIndexubvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
extern PFNGLUXMATRIXINDEXUSVARBPROC glMatrixIndexusvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
extern PFNGLUXMATRIXINDEXUIVARBPROC glMatrixIndexuivARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
extern PFNGLUXMATRIXINDEXPOINTERARBPROC glMatrixIndexPointerARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:28:04 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_matrix_palette__
#define __GLUX_GL_ARB_matrix_palette__

GLUX_NEW_PLUGIN(GL_ARB_matrix_palette);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MATRIX_PALETTE_ARB
#  define GL_MATRIX_PALETTE_ARB 0x8840
#endif
#ifndef GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
#  define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
#endif
#ifndef GL_MAX_PALETTE_MATRICES_ARB
#  define GL_MAX_PALETTE_MATRICES_ARB 0x8842
#endif
#ifndef GL_CURRENT_PALETTE_MATRIX_ARB
#  define GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_ARB
#  define GL_MATRIX_INDEX_ARRAY_ARB 0x8844
#endif
#ifndef GL_CURRENT_MATRIX_INDEX_ARB
#  define GL_CURRENT_MATRIX_INDEX_ARB 0x8845
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_SIZE_ARB
#  define GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_TYPE_ARB
#  define GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
#  define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_POINTER_ARB
#  define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
typedef void (APIENTRYP PFNGLUXCURRENTPALETTEMATRIXARBPROC) (GLint index);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
extern PFNGLUXCURRENTPALETTEMATRIXARBPROC glCurrentPaletteMatrixARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
extern PFNGLUXMATRIXINDEXUBVARBPROC glMatrixIndexubvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
extern PFNGLUXMATRIXINDEXUSVARBPROC glMatrixIndexusvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
extern PFNGLUXMATRIXINDEXUIVARBPROC glMatrixIndexuivARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
extern PFNGLUXMATRIXINDEXPOINTERARBPROC glMatrixIndexPointerARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:16:59 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_matrix_palette__
#define __GLUX_GL_ARB_matrix_palette__

GLUX_NEW_PLUGIN(GL_ARB_matrix_palette);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MATRIX_PALETTE_ARB
#  define GL_MATRIX_PALETTE_ARB 0x8840
#endif
#ifndef GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
#  define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
#endif
#ifndef GL_MAX_PALETTE_MATRICES_ARB
#  define GL_MAX_PALETTE_MATRICES_ARB 0x8842
#endif
#ifndef GL_CURRENT_PALETTE_MATRIX_ARB
#  define GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_ARB
#  define GL_MATRIX_INDEX_ARRAY_ARB 0x8844
#endif
#ifndef GL_CURRENT_MATRIX_INDEX_ARB
#  define GL_CURRENT_MATRIX_INDEX_ARB 0x8845
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_SIZE_ARB
#  define GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_TYPE_ARB
#  define GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
#  define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_POINTER_ARB
#  define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
typedef void (APIENTRYP PFNGLUXCURRENTPALETTEMATRIXARBPROC) (GLint index);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
extern PFNGLUXCURRENTPALETTEMATRIXARBPROC glCurrentPaletteMatrixARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
extern PFNGLUXMATRIXINDEXUBVARBPROC glMatrixIndexubvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
extern PFNGLUXMATRIXINDEXUSVARBPROC glMatrixIndexusvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
extern PFNGLUXMATRIXINDEXUIVARBPROC glMatrixIndexuivARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
extern PFNGLUXMATRIXINDEXPOINTERARBPROC glMatrixIndexPointerARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_matrix_palette__
#define __GLUX_GL_ARB_matrix_palette__

GLUX_NEW_PLUGIN(GL_ARB_matrix_palette);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MATRIX_PALETTE_ARB
#  define GL_MATRIX_PALETTE_ARB 0x8840
#endif
#ifndef GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
#  define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
#endif
#ifndef GL_MAX_PALETTE_MATRICES_ARB
#  define GL_MAX_PALETTE_MATRICES_ARB 0x8842
#endif
#ifndef GL_CURRENT_PALETTE_MATRIX_ARB
#  define GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_ARB
#  define GL_MATRIX_INDEX_ARRAY_ARB 0x8844
#endif
#ifndef GL_CURRENT_MATRIX_INDEX_ARB
#  define GL_CURRENT_MATRIX_INDEX_ARB 0x8845
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_SIZE_ARB
#  define GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_TYPE_ARB
#  define GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
#  define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_POINTER_ARB
#  define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
typedef void (APIENTRYP PFNGLUXCURRENTPALETTEMATRIXARBPROC) (GLint index);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
extern PFNGLUXCURRENTPALETTEMATRIXARBPROC glCurrentPaletteMatrixARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
extern PFNGLUXMATRIXINDEXUBVARBPROC glMatrixIndexubvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
extern PFNGLUXMATRIXINDEXUSVARBPROC glMatrixIndexusvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
extern PFNGLUXMATRIXINDEXUIVARBPROC glMatrixIndexuivARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
extern PFNGLUXMATRIXINDEXPOINTERARBPROC glMatrixIndexPointerARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:21 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_matrix_palette__
#define __GLUX_GL_ARB_matrix_palette__

GLUX_NEW_PLUGIN(GL_ARB_matrix_palette);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MATRIX_PALETTE_ARB
#  define GL_MATRIX_PALETTE_ARB 0x8840
#endif
#ifndef GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
#  define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
#endif
#ifndef GL_MAX_PALETTE_MATRICES_ARB
#  define GL_MAX_PALETTE_MATRICES_ARB 0x8842
#endif
#ifndef GL_CURRENT_PALETTE_MATRIX_ARB
#  define GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_ARB
#  define GL_MATRIX_INDEX_ARRAY_ARB 0x8844
#endif
#ifndef GL_CURRENT_MATRIX_INDEX_ARB
#  define GL_CURRENT_MATRIX_INDEX_ARB 0x8845
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_SIZE_ARB
#  define GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_TYPE_ARB
#  define GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
#  define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_POINTER_ARB
#  define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
typedef void (APIENTRYP PFNGLUXCURRENTPALETTEMATRIXARBPROC) (GLint index);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
extern PFNGLUXCURRENTPALETTEMATRIXARBPROC glCurrentPaletteMatrixARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
extern PFNGLUXMATRIXINDEXUBVARBPROC glMatrixIndexubvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
extern PFNGLUXMATRIXINDEXUSVARBPROC glMatrixIndexusvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
extern PFNGLUXMATRIXINDEXUIVARBPROC glMatrixIndexuivARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
extern PFNGLUXMATRIXINDEXPOINTERARBPROC glMatrixIndexPointerARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_matrix_palette__
#define __GLUX_GL_ARB_matrix_palette__

GLUX_NEW_PLUGIN(GL_ARB_matrix_palette);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MATRIX_PALETTE_ARB
#  define GL_MATRIX_PALETTE_ARB 0x8840
#endif
#ifndef GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
#  define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
#endif
#ifndef GL_MAX_PALETTE_MATRICES_ARB
#  define GL_MAX_PALETTE_MATRICES_ARB 0x8842
#endif
#ifndef GL_CURRENT_PALETTE_MATRIX_ARB
#  define GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_ARB
#  define GL_MATRIX_INDEX_ARRAY_ARB 0x8844
#endif
#ifndef GL_CURRENT_MATRIX_INDEX_ARB
#  define GL_CURRENT_MATRIX_INDEX_ARB 0x8845
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_SIZE_ARB
#  define GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_TYPE_ARB
#  define GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
#  define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_POINTER_ARB
#  define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
typedef void (APIENTRYP PFNGLUXCURRENTPALETTEMATRIXARBPROC) (GLint index);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
extern PFNGLUXCURRENTPALETTEMATRIXARBPROC glCurrentPaletteMatrixARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
extern PFNGLUXMATRIXINDEXUBVARBPROC glMatrixIndexubvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
extern PFNGLUXMATRIXINDEXUSVARBPROC glMatrixIndexusvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
extern PFNGLUXMATRIXINDEXUIVARBPROC glMatrixIndexuivARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
extern PFNGLUXMATRIXINDEXPOINTERARBPROC glMatrixIndexPointerARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:09 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_matrix_palette__
#define __GLUX_GL_ARB_matrix_palette__

GLUX_NEW_PLUGIN(GL_ARB_matrix_palette);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MATRIX_PALETTE_ARB
#  define GL_MATRIX_PALETTE_ARB 0x8840
#endif
#ifndef GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
#  define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
#endif
#ifndef GL_MAX_PALETTE_MATRICES_ARB
#  define GL_MAX_PALETTE_MATRICES_ARB 0x8842
#endif
#ifndef GL_CURRENT_PALETTE_MATRIX_ARB
#  define GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_ARB
#  define GL_MATRIX_INDEX_ARRAY_ARB 0x8844
#endif
#ifndef GL_CURRENT_MATRIX_INDEX_ARB
#  define GL_CURRENT_MATRIX_INDEX_ARB 0x8845
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_SIZE_ARB
#  define GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_TYPE_ARB
#  define GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
#  define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_POINTER_ARB
#  define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
typedef void (APIENTRYP PFNGLUXCURRENTPALETTEMATRIXARBPROC) (GLint index);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
extern PFNGLUXCURRENTPALETTEMATRIXARBPROC glCurrentPaletteMatrixARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
extern PFNGLUXMATRIXINDEXUBVARBPROC glMatrixIndexubvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
extern PFNGLUXMATRIXINDEXUSVARBPROC glMatrixIndexusvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
extern PFNGLUXMATRIXINDEXUIVARBPROC glMatrixIndexuivARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
extern PFNGLUXMATRIXINDEXPOINTERARBPROC glMatrixIndexPointerARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:23 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_matrix_palette__
#define __GLUX_GL_ARB_matrix_palette__

GLUX_NEW_PLUGIN(GL_ARB_matrix_palette);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MATRIX_PALETTE_ARB
#  define GL_MATRIX_PALETTE_ARB 0x8840
#endif
#ifndef GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
#  define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
#endif
#ifndef GL_MAX_PALETTE_MATRICES_ARB
#  define GL_MAX_PALETTE_MATRICES_ARB 0x8842
#endif
#ifndef GL_CURRENT_PALETTE_MATRIX_ARB
#  define GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_ARB
#  define GL_MATRIX_INDEX_ARRAY_ARB 0x8844
#endif
#ifndef GL_CURRENT_MATRIX_INDEX_ARB
#  define GL_CURRENT_MATRIX_INDEX_ARB 0x8845
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_SIZE_ARB
#  define GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_TYPE_ARB
#  define GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
#  define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_POINTER_ARB
#  define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
typedef void (APIENTRYP PFNGLUXCURRENTPALETTEMATRIXARBPROC) (GLint index);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
extern PFNGLUXCURRENTPALETTEMATRIXARBPROC glCurrentPaletteMatrixARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
extern PFNGLUXMATRIXINDEXUBVARBPROC glMatrixIndexubvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
extern PFNGLUXMATRIXINDEXUSVARBPROC glMatrixIndexusvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
extern PFNGLUXMATRIXINDEXUIVARBPROC glMatrixIndexuivARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
extern PFNGLUXMATRIXINDEXPOINTERARBPROC glMatrixIndexPointerARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:52:03 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_matrix_palette__
#define __GLUX_GL_ARB_matrix_palette__

GLUX_NEW_PLUGIN(GL_ARB_matrix_palette);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MATRIX_PALETTE_ARB
#  define GL_MATRIX_PALETTE_ARB 0x8840
#endif
#ifndef GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
#  define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
#endif
#ifndef GL_MAX_PALETTE_MATRICES_ARB
#  define GL_MAX_PALETTE_MATRICES_ARB 0x8842
#endif
#ifndef GL_CURRENT_PALETTE_MATRIX_ARB
#  define GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_ARB
#  define GL_MATRIX_INDEX_ARRAY_ARB 0x8844
#endif
#ifndef GL_CURRENT_MATRIX_INDEX_ARB
#  define GL_CURRENT_MATRIX_INDEX_ARB 0x8845
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_SIZE_ARB
#  define GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_TYPE_ARB
#  define GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
#  define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_POINTER_ARB
#  define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
typedef void (APIENTRYP PFNGLUXCURRENTPALETTEMATRIXARBPROC) (GLint index);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
extern PFNGLUXCURRENTPALETTEMATRIXARBPROC glCurrentPaletteMatrixARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
extern PFNGLUXMATRIXINDEXUBVARBPROC glMatrixIndexubvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
extern PFNGLUXMATRIXINDEXUSVARBPROC glMatrixIndexusvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
extern PFNGLUXMATRIXINDEXUIVARBPROC glMatrixIndexuivARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
extern PFNGLUXMATRIXINDEXPOINTERARBPROC glMatrixIndexPointerARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_matrix_palette__
#define __GLUX_GL_ARB_matrix_palette__

GLUX_NEW_PLUGIN(GL_ARB_matrix_palette);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MATRIX_PALETTE_ARB
#  define GL_MATRIX_PALETTE_ARB 0x8840
#endif
#ifndef GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
#  define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
#endif
#ifndef GL_MAX_PALETTE_MATRICES_ARB
#  define GL_MAX_PALETTE_MATRICES_ARB 0x8842
#endif
#ifndef GL_CURRENT_PALETTE_MATRIX_ARB
#  define GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_ARB
#  define GL_MATRIX_INDEX_ARRAY_ARB 0x8844
#endif
#ifndef GL_CURRENT_MATRIX_INDEX_ARB
#  define GL_CURRENT_MATRIX_INDEX_ARB 0x8845
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_SIZE_ARB
#  define GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_TYPE_ARB
#  define GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
#  define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_POINTER_ARB
#  define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
typedef void (APIENTRYP PFNGLUXCURRENTPALETTEMATRIXARBPROC) (GLint index);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
extern PFNGLUXCURRENTPALETTEMATRIXARBPROC glCurrentPaletteMatrixARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
extern PFNGLUXMATRIXINDEXUBVARBPROC glMatrixIndexubvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
extern PFNGLUXMATRIXINDEXUSVARBPROC glMatrixIndexusvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
extern PFNGLUXMATRIXINDEXUIVARBPROC glMatrixIndexuivARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
extern PFNGLUXMATRIXINDEXPOINTERARBPROC glMatrixIndexPointerARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:05 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_matrix_palette__
#define __GLUX_GL_ARB_matrix_palette__

GLUX_NEW_PLUGIN(GL_ARB_matrix_palette);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MATRIX_PALETTE_ARB
#  define GL_MATRIX_PALETTE_ARB 0x8840
#endif
#ifndef GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
#  define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
#endif
#ifndef GL_MAX_PALETTE_MATRICES_ARB
#  define GL_MAX_PALETTE_MATRICES_ARB 0x8842
#endif
#ifndef GL_CURRENT_PALETTE_MATRIX_ARB
#  define GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_ARB
#  define GL_MATRIX_INDEX_ARRAY_ARB 0x8844
#endif
#ifndef GL_CURRENT_MATRIX_INDEX_ARB
#  define GL_CURRENT_MATRIX_INDEX_ARB 0x8845
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_SIZE_ARB
#  define GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_TYPE_ARB
#  define GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
#  define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_POINTER_ARB
#  define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
typedef void (APIENTRYP PFNGLUXCURRENTPALETTEMATRIXARBPROC) (GLint index);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
extern PFNGLUXCURRENTPALETTEMATRIXARBPROC glCurrentPaletteMatrixARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
extern PFNGLUXMATRIXINDEXUBVARBPROC glMatrixIndexubvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
extern PFNGLUXMATRIXINDEXUSVARBPROC glMatrixIndexusvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
extern PFNGLUXMATRIXINDEXUIVARBPROC glMatrixIndexuivARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
extern PFNGLUXMATRIXINDEXPOINTERARBPROC glMatrixIndexPointerARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_matrix_palette__
#define __GLUX_GL_ARB_matrix_palette__

GLUX_NEW_PLUGIN(GL_ARB_matrix_palette);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MATRIX_PALETTE_ARB
#  define GL_MATRIX_PALETTE_ARB 0x8840
#endif
#ifndef GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
#  define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
#endif
#ifndef GL_MAX_PALETTE_MATRICES_ARB
#  define GL_MAX_PALETTE_MATRICES_ARB 0x8842
#endif
#ifndef GL_CURRENT_PALETTE_MATRIX_ARB
#  define GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_ARB
#  define GL_MATRIX_INDEX_ARRAY_ARB 0x8844
#endif
#ifndef GL_CURRENT_MATRIX_INDEX_ARB
#  define GL_CURRENT_MATRIX_INDEX_ARB 0x8845
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_SIZE_ARB
#  define GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_TYPE_ARB
#  define GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
#  define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_POINTER_ARB
#  define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
typedef void (APIENTRYP PFNGLUXCURRENTPALETTEMATRIXARBPROC) (GLint index);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
extern PFNGLUXCURRENTPALETTEMATRIXARBPROC glCurrentPaletteMatrixARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
extern PFNGLUXMATRIXINDEXUBVARBPROC glMatrixIndexubvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
extern PFNGLUXMATRIXINDEXUSVARBPROC glMatrixIndexusvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
extern PFNGLUXMATRIXINDEXUIVARBPROC glMatrixIndexuivARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
extern PFNGLUXMATRIXINDEXPOINTERARBPROC glMatrixIndexPointerARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_matrix_palette__
#define __GLUX_GL_ARB_matrix_palette__

GLUX_NEW_PLUGIN(GL_ARB_matrix_palette);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MATRIX_PALETTE_ARB
#  define GL_MATRIX_PALETTE_ARB 0x8840
#endif
#ifndef GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
#  define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
#endif
#ifndef GL_MAX_PALETTE_MATRICES_ARB
#  define GL_MAX_PALETTE_MATRICES_ARB 0x8842
#endif
#ifndef GL_CURRENT_PALETTE_MATRIX_ARB
#  define GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_ARB
#  define GL_MATRIX_INDEX_ARRAY_ARB 0x8844
#endif
#ifndef GL_CURRENT_MATRIX_INDEX_ARB
#  define GL_CURRENT_MATRIX_INDEX_ARB 0x8845
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_SIZE_ARB
#  define GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_TYPE_ARB
#  define GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
#  define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_POINTER_ARB
#  define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
typedef void (APIENTRYP PFNGLUXCURRENTPALETTEMATRIXARBPROC) (GLint index);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
extern PFNGLUXCURRENTPALETTEMATRIXARBPROC glCurrentPaletteMatrixARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
extern PFNGLUXMATRIXINDEXUBVARBPROC glMatrixIndexubvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
extern PFNGLUXMATRIXINDEXUSVARBPROC glMatrixIndexusvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
extern PFNGLUXMATRIXINDEXUIVARBPROC glMatrixIndexuivARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
extern PFNGLUXMATRIXINDEXPOINTERARBPROC glMatrixIndexPointerARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:41:59 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_matrix_palette__
#define __GLUX_GL_ARB_matrix_palette__

GLUX_NEW_PLUGIN(GL_ARB_matrix_palette);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MATRIX_PALETTE_ARB
#  define GL_MATRIX_PALETTE_ARB 0x8840
#endif
#ifndef GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
#  define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
#endif
#ifndef GL_MAX_PALETTE_MATRICES_ARB
#  define GL_MAX_PALETTE_MATRICES_ARB 0x8842
#endif
#ifndef GL_CURRENT_PALETTE_MATRIX_ARB
#  define GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_ARB
#  define GL_MATRIX_INDEX_ARRAY_ARB 0x8844
#endif
#ifndef GL_CURRENT_MATRIX_INDEX_ARB
#  define GL_CURRENT_MATRIX_INDEX_ARB 0x8845
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_SIZE_ARB
#  define GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_TYPE_ARB
#  define GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
#  define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_POINTER_ARB
#  define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
typedef void (APIENTRYP PFNGLUXCURRENTPALETTEMATRIXARBPROC) (GLint index);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
extern PFNGLUXCURRENTPALETTEMATRIXARBPROC glCurrentPaletteMatrixARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
extern PFNGLUXMATRIXINDEXUBVARBPROC glMatrixIndexubvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
extern PFNGLUXMATRIXINDEXUSVARBPROC glMatrixIndexusvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
extern PFNGLUXMATRIXINDEXUIVARBPROC glMatrixIndexuivARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
extern PFNGLUXMATRIXINDEXPOINTERARBPROC glMatrixIndexPointerARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:40 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_matrix_palette__
#define __GLUX_GL_ARB_matrix_palette__

GLUX_NEW_PLUGIN(GL_ARB_matrix_palette);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MATRIX_PALETTE_ARB
#  define GL_MATRIX_PALETTE_ARB 0x8840
#endif
#ifndef GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
#  define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
#endif
#ifndef GL_MAX_PALETTE_MATRICES_ARB
#  define GL_MAX_PALETTE_MATRICES_ARB 0x8842
#endif
#ifndef GL_CURRENT_PALETTE_MATRIX_ARB
#  define GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_ARB
#  define GL_MATRIX_INDEX_ARRAY_ARB 0x8844
#endif
#ifndef GL_CURRENT_MATRIX_INDEX_ARB
#  define GL_CURRENT_MATRIX_INDEX_ARB 0x8845
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_SIZE_ARB
#  define GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_TYPE_ARB
#  define GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
#  define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_POINTER_ARB
#  define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
typedef void (APIENTRYP PFNGLUXCURRENTPALETTEMATRIXARBPROC) (GLint index);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
extern PFNGLUXCURRENTPALETTEMATRIXARBPROC glCurrentPaletteMatrixARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
extern PFNGLUXMATRIXINDEXUBVARBPROC glMatrixIndexubvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
extern PFNGLUXMATRIXINDEXUSVARBPROC glMatrixIndexusvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
extern PFNGLUXMATRIXINDEXUIVARBPROC glMatrixIndexuivARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
extern PFNGLUXMATRIXINDEXPOINTERARBPROC glMatrixIndexPointerARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:09:59 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_matrix_palette__
#define __GLUX_GL_ARB_matrix_palette__

GLUX_NEW_PLUGIN(GL_ARB_matrix_palette);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MATRIX_PALETTE_ARB
#  define GL_MATRIX_PALETTE_ARB 0x8840
#endif
#ifndef GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
#  define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
#endif
#ifndef GL_MAX_PALETTE_MATRICES_ARB
#  define GL_MAX_PALETTE_MATRICES_ARB 0x8842
#endif
#ifndef GL_CURRENT_PALETTE_MATRIX_ARB
#  define GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_ARB
#  define GL_MATRIX_INDEX_ARRAY_ARB 0x8844
#endif
#ifndef GL_CURRENT_MATRIX_INDEX_ARB
#  define GL_CURRENT_MATRIX_INDEX_ARB 0x8845
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_SIZE_ARB
#  define GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_TYPE_ARB
#  define GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
#  define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_POINTER_ARB
#  define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
typedef void (APIENTRYP PFNGLUXCURRENTPALETTEMATRIXARBPROC) (GLint index);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
extern PFNGLUXCURRENTPALETTEMATRIXARBPROC glCurrentPaletteMatrixARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
extern PFNGLUXMATRIXINDEXUBVARBPROC glMatrixIndexubvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
extern PFNGLUXMATRIXINDEXUSVARBPROC glMatrixIndexusvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
extern PFNGLUXMATRIXINDEXUIVARBPROC glMatrixIndexuivARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
extern PFNGLUXMATRIXINDEXPOINTERARBPROC glMatrixIndexPointerARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:20:00 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_matrix_palette__
#define __GLUX_GL_ARB_matrix_palette__

GLUX_NEW_PLUGIN(GL_ARB_matrix_palette);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MATRIX_PALETTE_ARB
#  define GL_MATRIX_PALETTE_ARB 0x8840
#endif
#ifndef GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
#  define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
#endif
#ifndef GL_MAX_PALETTE_MATRICES_ARB
#  define GL_MAX_PALETTE_MATRICES_ARB 0x8842
#endif
#ifndef GL_CURRENT_PALETTE_MATRIX_ARB
#  define GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_ARB
#  define GL_MATRIX_INDEX_ARRAY_ARB 0x8844
#endif
#ifndef GL_CURRENT_MATRIX_INDEX_ARB
#  define GL_CURRENT_MATRIX_INDEX_ARB 0x8845
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_SIZE_ARB
#  define GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_TYPE_ARB
#  define GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
#  define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_POINTER_ARB
#  define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
typedef void (APIENTRYP PFNGLUXCURRENTPALETTEMATRIXARBPROC) (GLint index);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
extern PFNGLUXCURRENTPALETTEMATRIXARBPROC glCurrentPaletteMatrixARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
extern PFNGLUXMATRIXINDEXUBVARBPROC glMatrixIndexubvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
extern PFNGLUXMATRIXINDEXUSVARBPROC glMatrixIndexusvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
extern PFNGLUXMATRIXINDEXUIVARBPROC glMatrixIndexuivARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
extern PFNGLUXMATRIXINDEXPOINTERARBPROC glMatrixIndexPointerARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:42:59 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_matrix_palette__
#define __GLUX_GL_ARB_matrix_palette__

GLUX_NEW_PLUGIN(GL_ARB_matrix_palette)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MATRIX_PALETTE_ARB
#  define GL_MATRIX_PALETTE_ARB 0x8840
#endif
#ifndef GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
#  define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
#endif
#ifndef GL_MAX_PALETTE_MATRICES_ARB
#  define GL_MAX_PALETTE_MATRICES_ARB 0x8842
#endif
#ifndef GL_CURRENT_PALETTE_MATRIX_ARB
#  define GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_ARB
#  define GL_MATRIX_INDEX_ARRAY_ARB 0x8844
#endif
#ifndef GL_CURRENT_MATRIX_INDEX_ARB
#  define GL_CURRENT_MATRIX_INDEX_ARB 0x8845
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_SIZE_ARB
#  define GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_TYPE_ARB
#  define GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
#  define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
#endif
#ifndef GL_MATRIX_INDEX_ARRAY_POINTER_ARB
#  define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
typedef void (APIENTRYP PFNGLUXCURRENTPALETTEMATRIXARBPROC) (GLint index);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
typedef void (APIENTRYP PFNGLUXMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCurrentPaletteMatrixARB
extern PFNGLUXCURRENTPALETTEMATRIXARBPROC glCurrentPaletteMatrixARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexubvARB
extern PFNGLUXMATRIXINDEXUBVARBPROC glMatrixIndexubvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexusvARB
extern PFNGLUXMATRIXINDEXUSVARBPROC glMatrixIndexusvARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexuivARB
extern PFNGLUXMATRIXINDEXUIVARBPROC glMatrixIndexuivARB;
#endif
#ifndef __GLUX__GLFCT_glMatrixIndexPointerARB
extern PFNGLUXMATRIXINDEXPOINTERARBPROC glMatrixIndexPointerARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
