
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:25 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_shader_buffer_load__
#define __GLUX_GL_NV_shader_buffer_load__

GLUX_NEW_PLUGIN(GL_NV_shader_buffer_load);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BUFFER_GPU_ADDRESS_NV
#  define GL_BUFFER_GPU_ADDRESS_NV 0x8F1D
#endif
#ifndef GL_GPU_ADDRESS_NV
#  define GL_GPU_ADDRESS_NV 0x8F34
#endif
#ifndef GL_MAX_SHADER_BUFFER_ADDRESS_NV
#  define GL_MAX_SHADER_BUFFER_ADDRESS_NV 0x8F35
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISBUFFERRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
typedef void (APIENTRYP PFNGLUXGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
extern PFNGLUXMAKEBUFFERRESIDENTNVPROC glMakeBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
extern PFNGLUXMAKEBUFFERNONRESIDENTNVPROC glMakeBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
extern PFNGLUXISBUFFERRESIDENTNVPROC glIsBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
extern PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC glMakeNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
extern PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC glMakeNamedBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
extern PFNGLUXISNAMEDBUFFERRESIDENTNVPROC glIsNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
extern PFNGLUXGETBUFFERPARAMETERUI64VNVPROC glGetBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
extern PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC glGetNamedBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
extern PFNGLUXGETINTEGERUI64VNVPROC glGetIntegerui64vNV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
extern PFNGLUXUNIFORMUI64NVPROC glUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
extern PFNGLUXUNIFORMUI64VNVPROC glUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
extern PFNGLUXGETUNIFORMUI64VNVPROC glGetUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
extern PFNGLUXPROGRAMUNIFORMUI64NVPROC glProgramUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
extern PFNGLUXPROGRAMUNIFORMUI64VNVPROC glProgramUniformui64vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:43 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_shader_buffer_load__
#define __GLUX_GL_NV_shader_buffer_load__

GLUX_NEW_PLUGIN(GL_NV_shader_buffer_load);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BUFFER_GPU_ADDRESS_NV
#  define GL_BUFFER_GPU_ADDRESS_NV 0x8F1D
#endif
#ifndef GL_GPU_ADDRESS_NV
#  define GL_GPU_ADDRESS_NV 0x8F34
#endif
#ifndef GL_MAX_SHADER_BUFFER_ADDRESS_NV
#  define GL_MAX_SHADER_BUFFER_ADDRESS_NV 0x8F35
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISBUFFERRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
typedef void (APIENTRYP PFNGLUXGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
extern PFNGLUXMAKEBUFFERRESIDENTNVPROC glMakeBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
extern PFNGLUXMAKEBUFFERNONRESIDENTNVPROC glMakeBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
extern PFNGLUXISBUFFERRESIDENTNVPROC glIsBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
extern PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC glMakeNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
extern PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC glMakeNamedBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
extern PFNGLUXISNAMEDBUFFERRESIDENTNVPROC glIsNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
extern PFNGLUXGETBUFFERPARAMETERUI64VNVPROC glGetBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
extern PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC glGetNamedBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
extern PFNGLUXGETINTEGERUI64VNVPROC glGetIntegerui64vNV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
extern PFNGLUXUNIFORMUI64NVPROC glUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
extern PFNGLUXUNIFORMUI64VNVPROC glUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
extern PFNGLUXGETUNIFORMUI64VNVPROC glGetUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
extern PFNGLUXPROGRAMUNIFORMUI64NVPROC glProgramUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
extern PFNGLUXPROGRAMUNIFORMUI64VNVPROC glProgramUniformui64vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:53 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_shader_buffer_load__
#define __GLUX_GL_NV_shader_buffer_load__

GLUX_NEW_PLUGIN(GL_NV_shader_buffer_load);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BUFFER_GPU_ADDRESS_NV
#  define GL_BUFFER_GPU_ADDRESS_NV 0x8F1D
#endif
#ifndef GL_GPU_ADDRESS_NV
#  define GL_GPU_ADDRESS_NV 0x8F34
#endif
#ifndef GL_MAX_SHADER_BUFFER_ADDRESS_NV
#  define GL_MAX_SHADER_BUFFER_ADDRESS_NV 0x8F35
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISBUFFERRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
typedef void (APIENTRYP PFNGLUXGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
extern PFNGLUXMAKEBUFFERRESIDENTNVPROC glMakeBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
extern PFNGLUXMAKEBUFFERNONRESIDENTNVPROC glMakeBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
extern PFNGLUXISBUFFERRESIDENTNVPROC glIsBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
extern PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC glMakeNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
extern PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC glMakeNamedBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
extern PFNGLUXISNAMEDBUFFERRESIDENTNVPROC glIsNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
extern PFNGLUXGETBUFFERPARAMETERUI64VNVPROC glGetBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
extern PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC glGetNamedBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
extern PFNGLUXGETINTEGERUI64VNVPROC glGetIntegerui64vNV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
extern PFNGLUXUNIFORMUI64NVPROC glUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
extern PFNGLUXUNIFORMUI64VNVPROC glUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
extern PFNGLUXGETUNIFORMUI64VNVPROC glGetUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
extern PFNGLUXPROGRAMUNIFORMUI64NVPROC glProgramUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
extern PFNGLUXPROGRAMUNIFORMUI64VNVPROC glProgramUniformui64vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:13 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_shader_buffer_load__
#define __GLUX_GL_NV_shader_buffer_load__

GLUX_NEW_PLUGIN(GL_NV_shader_buffer_load);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BUFFER_GPU_ADDRESS_NV
#  define GL_BUFFER_GPU_ADDRESS_NV 0x8F1D
#endif
#ifndef GL_GPU_ADDRESS_NV
#  define GL_GPU_ADDRESS_NV 0x8F34
#endif
#ifndef GL_MAX_SHADER_BUFFER_ADDRESS_NV
#  define GL_MAX_SHADER_BUFFER_ADDRESS_NV 0x8F35
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISBUFFERRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
typedef void (APIENTRYP PFNGLUXGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
extern PFNGLUXMAKEBUFFERRESIDENTNVPROC glMakeBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
extern PFNGLUXMAKEBUFFERNONRESIDENTNVPROC glMakeBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
extern PFNGLUXISBUFFERRESIDENTNVPROC glIsBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
extern PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC glMakeNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
extern PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC glMakeNamedBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
extern PFNGLUXISNAMEDBUFFERRESIDENTNVPROC glIsNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
extern PFNGLUXGETBUFFERPARAMETERUI64VNVPROC glGetBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
extern PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC glGetNamedBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
extern PFNGLUXGETINTEGERUI64VNVPROC glGetIntegerui64vNV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
extern PFNGLUXUNIFORMUI64NVPROC glUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
extern PFNGLUXUNIFORMUI64VNVPROC glUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
extern PFNGLUXGETUNIFORMUI64VNVPROC glGetUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
extern PFNGLUXPROGRAMUNIFORMUI64NVPROC glProgramUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
extern PFNGLUXPROGRAMUNIFORMUI64VNVPROC glProgramUniformui64vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:29 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_shader_buffer_load__
#define __GLUX_GL_NV_shader_buffer_load__

GLUX_NEW_PLUGIN(GL_NV_shader_buffer_load);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BUFFER_GPU_ADDRESS_NV
#  define GL_BUFFER_GPU_ADDRESS_NV 0x8F1D
#endif
#ifndef GL_GPU_ADDRESS_NV
#  define GL_GPU_ADDRESS_NV 0x8F34
#endif
#ifndef GL_MAX_SHADER_BUFFER_ADDRESS_NV
#  define GL_MAX_SHADER_BUFFER_ADDRESS_NV 0x8F35
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISBUFFERRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
typedef void (APIENTRYP PFNGLUXGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
extern PFNGLUXMAKEBUFFERRESIDENTNVPROC glMakeBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
extern PFNGLUXMAKEBUFFERNONRESIDENTNVPROC glMakeBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
extern PFNGLUXISBUFFERRESIDENTNVPROC glIsBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
extern PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC glMakeNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
extern PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC glMakeNamedBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
extern PFNGLUXISNAMEDBUFFERRESIDENTNVPROC glIsNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
extern PFNGLUXGETBUFFERPARAMETERUI64VNVPROC glGetBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
extern PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC glGetNamedBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
extern PFNGLUXGETINTEGERUI64VNVPROC glGetIntegerui64vNV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
extern PFNGLUXUNIFORMUI64NVPROC glUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
extern PFNGLUXUNIFORMUI64VNVPROC glUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
extern PFNGLUXGETUNIFORMUI64VNVPROC glGetUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
extern PFNGLUXPROGRAMUNIFORMUI64NVPROC glProgramUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
extern PFNGLUXPROGRAMUNIFORMUI64VNVPROC glProgramUniformui64vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:32 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_shader_buffer_load__
#define __GLUX_GL_NV_shader_buffer_load__

GLUX_NEW_PLUGIN(GL_NV_shader_buffer_load);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BUFFER_GPU_ADDRESS_NV
#  define GL_BUFFER_GPU_ADDRESS_NV 0x8F1D
#endif
#ifndef GL_GPU_ADDRESS_NV
#  define GL_GPU_ADDRESS_NV 0x8F34
#endif
#ifndef GL_MAX_SHADER_BUFFER_ADDRESS_NV
#  define GL_MAX_SHADER_BUFFER_ADDRESS_NV 0x8F35
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISBUFFERRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
typedef void (APIENTRYP PFNGLUXGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
extern PFNGLUXMAKEBUFFERRESIDENTNVPROC glMakeBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
extern PFNGLUXMAKEBUFFERNONRESIDENTNVPROC glMakeBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
extern PFNGLUXISBUFFERRESIDENTNVPROC glIsBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
extern PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC glMakeNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
extern PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC glMakeNamedBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
extern PFNGLUXISNAMEDBUFFERRESIDENTNVPROC glIsNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
extern PFNGLUXGETBUFFERPARAMETERUI64VNVPROC glGetBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
extern PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC glGetNamedBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
extern PFNGLUXGETINTEGERUI64VNVPROC glGetIntegerui64vNV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
extern PFNGLUXUNIFORMUI64NVPROC glUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
extern PFNGLUXUNIFORMUI64VNVPROC glUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
extern PFNGLUXGETUNIFORMUI64VNVPROC glGetUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
extern PFNGLUXPROGRAMUNIFORMUI64NVPROC glProgramUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
extern PFNGLUXPROGRAMUNIFORMUI64VNVPROC glProgramUniformui64vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:53 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_shader_buffer_load__
#define __GLUX_GL_NV_shader_buffer_load__

GLUX_NEW_PLUGIN(GL_NV_shader_buffer_load);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BUFFER_GPU_ADDRESS_NV
#  define GL_BUFFER_GPU_ADDRESS_NV 0x8F1D
#endif
#ifndef GL_GPU_ADDRESS_NV
#  define GL_GPU_ADDRESS_NV 0x8F34
#endif
#ifndef GL_MAX_SHADER_BUFFER_ADDRESS_NV
#  define GL_MAX_SHADER_BUFFER_ADDRESS_NV 0x8F35
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISBUFFERRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
typedef void (APIENTRYP PFNGLUXGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
extern PFNGLUXMAKEBUFFERRESIDENTNVPROC glMakeBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
extern PFNGLUXMAKEBUFFERNONRESIDENTNVPROC glMakeBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
extern PFNGLUXISBUFFERRESIDENTNVPROC glIsBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
extern PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC glMakeNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
extern PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC glMakeNamedBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
extern PFNGLUXISNAMEDBUFFERRESIDENTNVPROC glIsNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
extern PFNGLUXGETBUFFERPARAMETERUI64VNVPROC glGetBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
extern PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC glGetNamedBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
extern PFNGLUXGETINTEGERUI64VNVPROC glGetIntegerui64vNV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
extern PFNGLUXUNIFORMUI64NVPROC glUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
extern PFNGLUXUNIFORMUI64VNVPROC glUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
extern PFNGLUXGETUNIFORMUI64VNVPROC glGetUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
extern PFNGLUXPROGRAMUNIFORMUI64NVPROC glProgramUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
extern PFNGLUXPROGRAMUNIFORMUI64VNVPROC glProgramUniformui64vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:28:03 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_shader_buffer_load__
#define __GLUX_GL_NV_shader_buffer_load__

GLUX_NEW_PLUGIN(GL_NV_shader_buffer_load);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BUFFER_GPU_ADDRESS_NV
#  define GL_BUFFER_GPU_ADDRESS_NV 0x8F1D
#endif
#ifndef GL_GPU_ADDRESS_NV
#  define GL_GPU_ADDRESS_NV 0x8F34
#endif
#ifndef GL_MAX_SHADER_BUFFER_ADDRESS_NV
#  define GL_MAX_SHADER_BUFFER_ADDRESS_NV 0x8F35
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISBUFFERRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
typedef void (APIENTRYP PFNGLUXGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
extern PFNGLUXMAKEBUFFERRESIDENTNVPROC glMakeBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
extern PFNGLUXMAKEBUFFERNONRESIDENTNVPROC glMakeBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
extern PFNGLUXISBUFFERRESIDENTNVPROC glIsBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
extern PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC glMakeNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
extern PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC glMakeNamedBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
extern PFNGLUXISNAMEDBUFFERRESIDENTNVPROC glIsNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
extern PFNGLUXGETBUFFERPARAMETERUI64VNVPROC glGetBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
extern PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC glGetNamedBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
extern PFNGLUXGETINTEGERUI64VNVPROC glGetIntegerui64vNV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
extern PFNGLUXUNIFORMUI64NVPROC glUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
extern PFNGLUXUNIFORMUI64VNVPROC glUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
extern PFNGLUXGETUNIFORMUI64VNVPROC glGetUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
extern PFNGLUXPROGRAMUNIFORMUI64NVPROC glProgramUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
extern PFNGLUXPROGRAMUNIFORMUI64VNVPROC glProgramUniformui64vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:16:57 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_shader_buffer_load__
#define __GLUX_GL_NV_shader_buffer_load__

GLUX_NEW_PLUGIN(GL_NV_shader_buffer_load);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BUFFER_GPU_ADDRESS_NV
#  define GL_BUFFER_GPU_ADDRESS_NV 0x8F1D
#endif
#ifndef GL_GPU_ADDRESS_NV
#  define GL_GPU_ADDRESS_NV 0x8F34
#endif
#ifndef GL_MAX_SHADER_BUFFER_ADDRESS_NV
#  define GL_MAX_SHADER_BUFFER_ADDRESS_NV 0x8F35
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISBUFFERRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
typedef void (APIENTRYP PFNGLUXGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
extern PFNGLUXMAKEBUFFERRESIDENTNVPROC glMakeBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
extern PFNGLUXMAKEBUFFERNONRESIDENTNVPROC glMakeBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
extern PFNGLUXISBUFFERRESIDENTNVPROC glIsBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
extern PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC glMakeNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
extern PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC glMakeNamedBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
extern PFNGLUXISNAMEDBUFFERRESIDENTNVPROC glIsNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
extern PFNGLUXGETBUFFERPARAMETERUI64VNVPROC glGetBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
extern PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC glGetNamedBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
extern PFNGLUXGETINTEGERUI64VNVPROC glGetIntegerui64vNV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
extern PFNGLUXUNIFORMUI64NVPROC glUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
extern PFNGLUXUNIFORMUI64VNVPROC glUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
extern PFNGLUXGETUNIFORMUI64VNVPROC glGetUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
extern PFNGLUXPROGRAMUNIFORMUI64NVPROC glProgramUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
extern PFNGLUXPROGRAMUNIFORMUI64VNVPROC glProgramUniformui64vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_shader_buffer_load__
#define __GLUX_GL_NV_shader_buffer_load__

GLUX_NEW_PLUGIN(GL_NV_shader_buffer_load);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BUFFER_GPU_ADDRESS_NV
#  define GL_BUFFER_GPU_ADDRESS_NV 0x8F1D
#endif
#ifndef GL_GPU_ADDRESS_NV
#  define GL_GPU_ADDRESS_NV 0x8F34
#endif
#ifndef GL_MAX_SHADER_BUFFER_ADDRESS_NV
#  define GL_MAX_SHADER_BUFFER_ADDRESS_NV 0x8F35
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISBUFFERRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
typedef void (APIENTRYP PFNGLUXGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
extern PFNGLUXMAKEBUFFERRESIDENTNVPROC glMakeBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
extern PFNGLUXMAKEBUFFERNONRESIDENTNVPROC glMakeBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
extern PFNGLUXISBUFFERRESIDENTNVPROC glIsBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
extern PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC glMakeNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
extern PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC glMakeNamedBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
extern PFNGLUXISNAMEDBUFFERRESIDENTNVPROC glIsNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
extern PFNGLUXGETBUFFERPARAMETERUI64VNVPROC glGetBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
extern PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC glGetNamedBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
extern PFNGLUXGETINTEGERUI64VNVPROC glGetIntegerui64vNV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
extern PFNGLUXUNIFORMUI64NVPROC glUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
extern PFNGLUXUNIFORMUI64VNVPROC glUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
extern PFNGLUXGETUNIFORMUI64VNVPROC glGetUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
extern PFNGLUXPROGRAMUNIFORMUI64NVPROC glProgramUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
extern PFNGLUXPROGRAMUNIFORMUI64VNVPROC glProgramUniformui64vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:19 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_shader_buffer_load__
#define __GLUX_GL_NV_shader_buffer_load__

GLUX_NEW_PLUGIN(GL_NV_shader_buffer_load);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BUFFER_GPU_ADDRESS_NV
#  define GL_BUFFER_GPU_ADDRESS_NV 0x8F1D
#endif
#ifndef GL_GPU_ADDRESS_NV
#  define GL_GPU_ADDRESS_NV 0x8F34
#endif
#ifndef GL_MAX_SHADER_BUFFER_ADDRESS_NV
#  define GL_MAX_SHADER_BUFFER_ADDRESS_NV 0x8F35
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISBUFFERRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
typedef void (APIENTRYP PFNGLUXGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
extern PFNGLUXMAKEBUFFERRESIDENTNVPROC glMakeBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
extern PFNGLUXMAKEBUFFERNONRESIDENTNVPROC glMakeBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
extern PFNGLUXISBUFFERRESIDENTNVPROC glIsBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
extern PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC glMakeNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
extern PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC glMakeNamedBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
extern PFNGLUXISNAMEDBUFFERRESIDENTNVPROC glIsNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
extern PFNGLUXGETBUFFERPARAMETERUI64VNVPROC glGetBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
extern PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC glGetNamedBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
extern PFNGLUXGETINTEGERUI64VNVPROC glGetIntegerui64vNV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
extern PFNGLUXUNIFORMUI64NVPROC glUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
extern PFNGLUXUNIFORMUI64VNVPROC glUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
extern PFNGLUXGETUNIFORMUI64VNVPROC glGetUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
extern PFNGLUXPROGRAMUNIFORMUI64NVPROC glProgramUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
extern PFNGLUXPROGRAMUNIFORMUI64VNVPROC glProgramUniformui64vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:00 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_shader_buffer_load__
#define __GLUX_GL_NV_shader_buffer_load__

GLUX_NEW_PLUGIN(GL_NV_shader_buffer_load);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BUFFER_GPU_ADDRESS_NV
#  define GL_BUFFER_GPU_ADDRESS_NV 0x8F1D
#endif
#ifndef GL_GPU_ADDRESS_NV
#  define GL_GPU_ADDRESS_NV 0x8F34
#endif
#ifndef GL_MAX_SHADER_BUFFER_ADDRESS_NV
#  define GL_MAX_SHADER_BUFFER_ADDRESS_NV 0x8F35
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISBUFFERRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
typedef void (APIENTRYP PFNGLUXGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
extern PFNGLUXMAKEBUFFERRESIDENTNVPROC glMakeBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
extern PFNGLUXMAKEBUFFERNONRESIDENTNVPROC glMakeBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
extern PFNGLUXISBUFFERRESIDENTNVPROC glIsBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
extern PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC glMakeNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
extern PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC glMakeNamedBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
extern PFNGLUXISNAMEDBUFFERRESIDENTNVPROC glIsNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
extern PFNGLUXGETBUFFERPARAMETERUI64VNVPROC glGetBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
extern PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC glGetNamedBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
extern PFNGLUXGETINTEGERUI64VNVPROC glGetIntegerui64vNV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
extern PFNGLUXUNIFORMUI64NVPROC glUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
extern PFNGLUXUNIFORMUI64VNVPROC glUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
extern PFNGLUXGETUNIFORMUI64VNVPROC glGetUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
extern PFNGLUXPROGRAMUNIFORMUI64NVPROC glProgramUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
extern PFNGLUXPROGRAMUNIFORMUI64VNVPROC glProgramUniformui64vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:09 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_shader_buffer_load__
#define __GLUX_GL_NV_shader_buffer_load__

GLUX_NEW_PLUGIN(GL_NV_shader_buffer_load);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BUFFER_GPU_ADDRESS_NV
#  define GL_BUFFER_GPU_ADDRESS_NV 0x8F1D
#endif
#ifndef GL_GPU_ADDRESS_NV
#  define GL_GPU_ADDRESS_NV 0x8F34
#endif
#ifndef GL_MAX_SHADER_BUFFER_ADDRESS_NV
#  define GL_MAX_SHADER_BUFFER_ADDRESS_NV 0x8F35
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISBUFFERRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
typedef void (APIENTRYP PFNGLUXGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
extern PFNGLUXMAKEBUFFERRESIDENTNVPROC glMakeBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
extern PFNGLUXMAKEBUFFERNONRESIDENTNVPROC glMakeBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
extern PFNGLUXISBUFFERRESIDENTNVPROC glIsBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
extern PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC glMakeNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
extern PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC glMakeNamedBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
extern PFNGLUXISNAMEDBUFFERRESIDENTNVPROC glIsNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
extern PFNGLUXGETBUFFERPARAMETERUI64VNVPROC glGetBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
extern PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC glGetNamedBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
extern PFNGLUXGETINTEGERUI64VNVPROC glGetIntegerui64vNV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
extern PFNGLUXUNIFORMUI64NVPROC glUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
extern PFNGLUXUNIFORMUI64VNVPROC glUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
extern PFNGLUXGETUNIFORMUI64VNVPROC glGetUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
extern PFNGLUXPROGRAMUNIFORMUI64NVPROC glProgramUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
extern PFNGLUXPROGRAMUNIFORMUI64VNVPROC glProgramUniformui64vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:21 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_shader_buffer_load__
#define __GLUX_GL_NV_shader_buffer_load__

GLUX_NEW_PLUGIN(GL_NV_shader_buffer_load);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BUFFER_GPU_ADDRESS_NV
#  define GL_BUFFER_GPU_ADDRESS_NV 0x8F1D
#endif
#ifndef GL_GPU_ADDRESS_NV
#  define GL_GPU_ADDRESS_NV 0x8F34
#endif
#ifndef GL_MAX_SHADER_BUFFER_ADDRESS_NV
#  define GL_MAX_SHADER_BUFFER_ADDRESS_NV 0x8F35
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISBUFFERRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
typedef void (APIENTRYP PFNGLUXGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
extern PFNGLUXMAKEBUFFERRESIDENTNVPROC glMakeBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
extern PFNGLUXMAKEBUFFERNONRESIDENTNVPROC glMakeBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
extern PFNGLUXISBUFFERRESIDENTNVPROC glIsBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
extern PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC glMakeNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
extern PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC glMakeNamedBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
extern PFNGLUXISNAMEDBUFFERRESIDENTNVPROC glIsNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
extern PFNGLUXGETBUFFERPARAMETERUI64VNVPROC glGetBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
extern PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC glGetNamedBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
extern PFNGLUXGETINTEGERUI64VNVPROC glGetIntegerui64vNV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
extern PFNGLUXUNIFORMUI64NVPROC glUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
extern PFNGLUXUNIFORMUI64VNVPROC glUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
extern PFNGLUXGETUNIFORMUI64VNVPROC glGetUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
extern PFNGLUXPROGRAMUNIFORMUI64NVPROC glProgramUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
extern PFNGLUXPROGRAMUNIFORMUI64VNVPROC glProgramUniformui64vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:52:00 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_shader_buffer_load__
#define __GLUX_GL_NV_shader_buffer_load__

GLUX_NEW_PLUGIN(GL_NV_shader_buffer_load);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BUFFER_GPU_ADDRESS_NV
#  define GL_BUFFER_GPU_ADDRESS_NV 0x8F1D
#endif
#ifndef GL_GPU_ADDRESS_NV
#  define GL_GPU_ADDRESS_NV 0x8F34
#endif
#ifndef GL_MAX_SHADER_BUFFER_ADDRESS_NV
#  define GL_MAX_SHADER_BUFFER_ADDRESS_NV 0x8F35
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISBUFFERRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
typedef void (APIENTRYP PFNGLUXGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
extern PFNGLUXMAKEBUFFERRESIDENTNVPROC glMakeBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
extern PFNGLUXMAKEBUFFERNONRESIDENTNVPROC glMakeBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
extern PFNGLUXISBUFFERRESIDENTNVPROC glIsBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
extern PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC glMakeNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
extern PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC glMakeNamedBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
extern PFNGLUXISNAMEDBUFFERRESIDENTNVPROC glIsNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
extern PFNGLUXGETBUFFERPARAMETERUI64VNVPROC glGetBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
extern PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC glGetNamedBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
extern PFNGLUXGETINTEGERUI64VNVPROC glGetIntegerui64vNV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
extern PFNGLUXUNIFORMUI64NVPROC glUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
extern PFNGLUXUNIFORMUI64VNVPROC glUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
extern PFNGLUXGETUNIFORMUI64VNVPROC glGetUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
extern PFNGLUXPROGRAMUNIFORMUI64NVPROC glProgramUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
extern PFNGLUXPROGRAMUNIFORMUI64VNVPROC glProgramUniformui64vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_shader_buffer_load__
#define __GLUX_GL_NV_shader_buffer_load__

GLUX_NEW_PLUGIN(GL_NV_shader_buffer_load);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BUFFER_GPU_ADDRESS_NV
#  define GL_BUFFER_GPU_ADDRESS_NV 0x8F1D
#endif
#ifndef GL_GPU_ADDRESS_NV
#  define GL_GPU_ADDRESS_NV 0x8F34
#endif
#ifndef GL_MAX_SHADER_BUFFER_ADDRESS_NV
#  define GL_MAX_SHADER_BUFFER_ADDRESS_NV 0x8F35
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISBUFFERRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
typedef void (APIENTRYP PFNGLUXGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
extern PFNGLUXMAKEBUFFERRESIDENTNVPROC glMakeBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
extern PFNGLUXMAKEBUFFERNONRESIDENTNVPROC glMakeBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
extern PFNGLUXISBUFFERRESIDENTNVPROC glIsBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
extern PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC glMakeNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
extern PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC glMakeNamedBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
extern PFNGLUXISNAMEDBUFFERRESIDENTNVPROC glIsNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
extern PFNGLUXGETBUFFERPARAMETERUI64VNVPROC glGetBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
extern PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC glGetNamedBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
extern PFNGLUXGETINTEGERUI64VNVPROC glGetIntegerui64vNV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
extern PFNGLUXUNIFORMUI64NVPROC glUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
extern PFNGLUXUNIFORMUI64VNVPROC glUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
extern PFNGLUXGETUNIFORMUI64VNVPROC glGetUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
extern PFNGLUXPROGRAMUNIFORMUI64NVPROC glProgramUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
extern PFNGLUXPROGRAMUNIFORMUI64VNVPROC glProgramUniformui64vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:04 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_shader_buffer_load__
#define __GLUX_GL_NV_shader_buffer_load__

GLUX_NEW_PLUGIN(GL_NV_shader_buffer_load);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BUFFER_GPU_ADDRESS_NV
#  define GL_BUFFER_GPU_ADDRESS_NV 0x8F1D
#endif
#ifndef GL_GPU_ADDRESS_NV
#  define GL_GPU_ADDRESS_NV 0x8F34
#endif
#ifndef GL_MAX_SHADER_BUFFER_ADDRESS_NV
#  define GL_MAX_SHADER_BUFFER_ADDRESS_NV 0x8F35
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISBUFFERRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
typedef void (APIENTRYP PFNGLUXGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
extern PFNGLUXMAKEBUFFERRESIDENTNVPROC glMakeBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
extern PFNGLUXMAKEBUFFERNONRESIDENTNVPROC glMakeBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
extern PFNGLUXISBUFFERRESIDENTNVPROC glIsBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
extern PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC glMakeNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
extern PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC glMakeNamedBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
extern PFNGLUXISNAMEDBUFFERRESIDENTNVPROC glIsNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
extern PFNGLUXGETBUFFERPARAMETERUI64VNVPROC glGetBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
extern PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC glGetNamedBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
extern PFNGLUXGETINTEGERUI64VNVPROC glGetIntegerui64vNV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
extern PFNGLUXUNIFORMUI64NVPROC glUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
extern PFNGLUXUNIFORMUI64VNVPROC glUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
extern PFNGLUXGETUNIFORMUI64VNVPROC glGetUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
extern PFNGLUXPROGRAMUNIFORMUI64NVPROC glProgramUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
extern PFNGLUXPROGRAMUNIFORMUI64VNVPROC glProgramUniformui64vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:24 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_shader_buffer_load__
#define __GLUX_GL_NV_shader_buffer_load__

GLUX_NEW_PLUGIN(GL_NV_shader_buffer_load);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BUFFER_GPU_ADDRESS_NV
#  define GL_BUFFER_GPU_ADDRESS_NV 0x8F1D
#endif
#ifndef GL_GPU_ADDRESS_NV
#  define GL_GPU_ADDRESS_NV 0x8F34
#endif
#ifndef GL_MAX_SHADER_BUFFER_ADDRESS_NV
#  define GL_MAX_SHADER_BUFFER_ADDRESS_NV 0x8F35
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISBUFFERRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
typedef void (APIENTRYP PFNGLUXGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
extern PFNGLUXMAKEBUFFERRESIDENTNVPROC glMakeBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
extern PFNGLUXMAKEBUFFERNONRESIDENTNVPROC glMakeBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
extern PFNGLUXISBUFFERRESIDENTNVPROC glIsBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
extern PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC glMakeNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
extern PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC glMakeNamedBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
extern PFNGLUXISNAMEDBUFFERRESIDENTNVPROC glIsNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
extern PFNGLUXGETBUFFERPARAMETERUI64VNVPROC glGetBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
extern PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC glGetNamedBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
extern PFNGLUXGETINTEGERUI64VNVPROC glGetIntegerui64vNV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
extern PFNGLUXUNIFORMUI64NVPROC glUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
extern PFNGLUXUNIFORMUI64VNVPROC glUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
extern PFNGLUXGETUNIFORMUI64VNVPROC glGetUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
extern PFNGLUXPROGRAMUNIFORMUI64NVPROC glProgramUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
extern PFNGLUXPROGRAMUNIFORMUI64VNVPROC glProgramUniformui64vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_shader_buffer_load__
#define __GLUX_GL_NV_shader_buffer_load__

GLUX_NEW_PLUGIN(GL_NV_shader_buffer_load);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BUFFER_GPU_ADDRESS_NV
#  define GL_BUFFER_GPU_ADDRESS_NV 0x8F1D
#endif
#ifndef GL_GPU_ADDRESS_NV
#  define GL_GPU_ADDRESS_NV 0x8F34
#endif
#ifndef GL_MAX_SHADER_BUFFER_ADDRESS_NV
#  define GL_MAX_SHADER_BUFFER_ADDRESS_NV 0x8F35
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISBUFFERRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
typedef void (APIENTRYP PFNGLUXGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
extern PFNGLUXMAKEBUFFERRESIDENTNVPROC glMakeBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
extern PFNGLUXMAKEBUFFERNONRESIDENTNVPROC glMakeBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
extern PFNGLUXISBUFFERRESIDENTNVPROC glIsBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
extern PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC glMakeNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
extern PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC glMakeNamedBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
extern PFNGLUXISNAMEDBUFFERRESIDENTNVPROC glIsNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
extern PFNGLUXGETBUFFERPARAMETERUI64VNVPROC glGetBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
extern PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC glGetNamedBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
extern PFNGLUXGETINTEGERUI64VNVPROC glGetIntegerui64vNV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
extern PFNGLUXUNIFORMUI64NVPROC glUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
extern PFNGLUXUNIFORMUI64VNVPROC glUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
extern PFNGLUXGETUNIFORMUI64VNVPROC glGetUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
extern PFNGLUXPROGRAMUNIFORMUI64NVPROC glProgramUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
extern PFNGLUXPROGRAMUNIFORMUI64VNVPROC glProgramUniformui64vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:41:57 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_shader_buffer_load__
#define __GLUX_GL_NV_shader_buffer_load__

GLUX_NEW_PLUGIN(GL_NV_shader_buffer_load);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BUFFER_GPU_ADDRESS_NV
#  define GL_BUFFER_GPU_ADDRESS_NV 0x8F1D
#endif
#ifndef GL_GPU_ADDRESS_NV
#  define GL_GPU_ADDRESS_NV 0x8F34
#endif
#ifndef GL_MAX_SHADER_BUFFER_ADDRESS_NV
#  define GL_MAX_SHADER_BUFFER_ADDRESS_NV 0x8F35
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISBUFFERRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
typedef void (APIENTRYP PFNGLUXGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
extern PFNGLUXMAKEBUFFERRESIDENTNVPROC glMakeBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
extern PFNGLUXMAKEBUFFERNONRESIDENTNVPROC glMakeBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
extern PFNGLUXISBUFFERRESIDENTNVPROC glIsBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
extern PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC glMakeNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
extern PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC glMakeNamedBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
extern PFNGLUXISNAMEDBUFFERRESIDENTNVPROC glIsNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
extern PFNGLUXGETBUFFERPARAMETERUI64VNVPROC glGetBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
extern PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC glGetNamedBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
extern PFNGLUXGETINTEGERUI64VNVPROC glGetIntegerui64vNV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
extern PFNGLUXUNIFORMUI64NVPROC glUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
extern PFNGLUXUNIFORMUI64VNVPROC glUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
extern PFNGLUXGETUNIFORMUI64VNVPROC glGetUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
extern PFNGLUXPROGRAMUNIFORMUI64NVPROC glProgramUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
extern PFNGLUXPROGRAMUNIFORMUI64VNVPROC glProgramUniformui64vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:39 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_shader_buffer_load__
#define __GLUX_GL_NV_shader_buffer_load__

GLUX_NEW_PLUGIN(GL_NV_shader_buffer_load);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BUFFER_GPU_ADDRESS_NV
#  define GL_BUFFER_GPU_ADDRESS_NV 0x8F1D
#endif
#ifndef GL_GPU_ADDRESS_NV
#  define GL_GPU_ADDRESS_NV 0x8F34
#endif
#ifndef GL_MAX_SHADER_BUFFER_ADDRESS_NV
#  define GL_MAX_SHADER_BUFFER_ADDRESS_NV 0x8F35
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISBUFFERRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
typedef void (APIENTRYP PFNGLUXGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
extern PFNGLUXMAKEBUFFERRESIDENTNVPROC glMakeBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
extern PFNGLUXMAKEBUFFERNONRESIDENTNVPROC glMakeBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
extern PFNGLUXISBUFFERRESIDENTNVPROC glIsBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
extern PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC glMakeNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
extern PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC glMakeNamedBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
extern PFNGLUXISNAMEDBUFFERRESIDENTNVPROC glIsNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
extern PFNGLUXGETBUFFERPARAMETERUI64VNVPROC glGetBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
extern PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC glGetNamedBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
extern PFNGLUXGETINTEGERUI64VNVPROC glGetIntegerui64vNV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
extern PFNGLUXUNIFORMUI64NVPROC glUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
extern PFNGLUXUNIFORMUI64VNVPROC glUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
extern PFNGLUXGETUNIFORMUI64VNVPROC glGetUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
extern PFNGLUXPROGRAMUNIFORMUI64NVPROC glProgramUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
extern PFNGLUXPROGRAMUNIFORMUI64VNVPROC glProgramUniformui64vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:09:58 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_shader_buffer_load__
#define __GLUX_GL_NV_shader_buffer_load__

GLUX_NEW_PLUGIN(GL_NV_shader_buffer_load);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BUFFER_GPU_ADDRESS_NV
#  define GL_BUFFER_GPU_ADDRESS_NV 0x8F1D
#endif
#ifndef GL_GPU_ADDRESS_NV
#  define GL_GPU_ADDRESS_NV 0x8F34
#endif
#ifndef GL_MAX_SHADER_BUFFER_ADDRESS_NV
#  define GL_MAX_SHADER_BUFFER_ADDRESS_NV 0x8F35
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISBUFFERRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
typedef void (APIENTRYP PFNGLUXGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
extern PFNGLUXMAKEBUFFERRESIDENTNVPROC glMakeBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
extern PFNGLUXMAKEBUFFERNONRESIDENTNVPROC glMakeBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
extern PFNGLUXISBUFFERRESIDENTNVPROC glIsBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
extern PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC glMakeNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
extern PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC glMakeNamedBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
extern PFNGLUXISNAMEDBUFFERRESIDENTNVPROC glIsNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
extern PFNGLUXGETBUFFERPARAMETERUI64VNVPROC glGetBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
extern PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC glGetNamedBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
extern PFNGLUXGETINTEGERUI64VNVPROC glGetIntegerui64vNV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
extern PFNGLUXUNIFORMUI64NVPROC glUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
extern PFNGLUXUNIFORMUI64VNVPROC glUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
extern PFNGLUXGETUNIFORMUI64VNVPROC glGetUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
extern PFNGLUXPROGRAMUNIFORMUI64NVPROC glProgramUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
extern PFNGLUXPROGRAMUNIFORMUI64VNVPROC glProgramUniformui64vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:19:58 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_shader_buffer_load__
#define __GLUX_GL_NV_shader_buffer_load__

GLUX_NEW_PLUGIN(GL_NV_shader_buffer_load);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BUFFER_GPU_ADDRESS_NV
#  define GL_BUFFER_GPU_ADDRESS_NV 0x8F1D
#endif
#ifndef GL_GPU_ADDRESS_NV
#  define GL_GPU_ADDRESS_NV 0x8F34
#endif
#ifndef GL_MAX_SHADER_BUFFER_ADDRESS_NV
#  define GL_MAX_SHADER_BUFFER_ADDRESS_NV 0x8F35
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISBUFFERRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
typedef void (APIENTRYP PFNGLUXGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
extern PFNGLUXMAKEBUFFERRESIDENTNVPROC glMakeBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
extern PFNGLUXMAKEBUFFERNONRESIDENTNVPROC glMakeBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
extern PFNGLUXISBUFFERRESIDENTNVPROC glIsBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
extern PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC glMakeNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
extern PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC glMakeNamedBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
extern PFNGLUXISNAMEDBUFFERRESIDENTNVPROC glIsNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
extern PFNGLUXGETBUFFERPARAMETERUI64VNVPROC glGetBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
extern PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC glGetNamedBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
extern PFNGLUXGETINTEGERUI64VNVPROC glGetIntegerui64vNV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
extern PFNGLUXUNIFORMUI64NVPROC glUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
extern PFNGLUXUNIFORMUI64VNVPROC glUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
extern PFNGLUXGETUNIFORMUI64VNVPROC glGetUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
extern PFNGLUXPROGRAMUNIFORMUI64NVPROC glProgramUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
extern PFNGLUXPROGRAMUNIFORMUI64VNVPROC glProgramUniformui64vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:42:56 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_shader_buffer_load__
#define __GLUX_GL_NV_shader_buffer_load__

GLUX_NEW_PLUGIN(GL_NV_shader_buffer_load)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BUFFER_GPU_ADDRESS_NV
#  define GL_BUFFER_GPU_ADDRESS_NV 0x8F1D
#endif
#ifndef GL_GPU_ADDRESS_NV
#  define GL_GPU_ADDRESS_NV 0x8F34
#endif
#ifndef GL_MAX_SHADER_BUFFER_ADDRESS_NV
#  define GL_MAX_SHADER_BUFFER_ADDRESS_NV 0x8F35
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISBUFFERRESIDENTNVPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
typedef void (APIENTRYP PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
typedef void (APIENTRYP PFNGLUXUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
typedef void (APIENTRYP PFNGLUXGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glMakeBufferResidentNV
extern PFNGLUXMAKEBUFFERRESIDENTNVPROC glMakeBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeBufferNonResidentNV
extern PFNGLUXMAKEBUFFERNONRESIDENTNVPROC glMakeBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsBufferResidentNV
extern PFNGLUXISBUFFERRESIDENTNVPROC glIsBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferResidentNV
extern PFNGLUXMAKENAMEDBUFFERRESIDENTNVPROC glMakeNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeNamedBufferNonResidentNV
extern PFNGLUXMAKENAMEDBUFFERNONRESIDENTNVPROC glMakeNamedBufferNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsNamedBufferResidentNV
extern PFNGLUXISNAMEDBUFFERRESIDENTNVPROC glIsNamedBufferResidentNV;
#endif
#ifndef __GLUX__GLFCT_glGetBufferParameterui64vNV
extern PFNGLUXGETBUFFERPARAMETERUI64VNVPROC glGetBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameterui64vNV
extern PFNGLUXGETNAMEDBUFFERPARAMETERUI64VNVPROC glGetNamedBufferParameterui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64vNV
extern PFNGLUXGETINTEGERUI64VNVPROC glGetIntegerui64vNV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64NV
extern PFNGLUXUNIFORMUI64NVPROC glUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glUniformui64vNV
extern PFNGLUXUNIFORMUI64VNVPROC glUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glGetUniformui64vNV
extern PFNGLUXGETUNIFORMUI64VNVPROC glGetUniformui64vNV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64NV
extern PFNGLUXPROGRAMUNIFORMUI64NVPROC glProgramUniformui64NV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformui64vNV
extern PFNGLUXPROGRAMUNIFORMUI64VNVPROC glProgramUniformui64vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
