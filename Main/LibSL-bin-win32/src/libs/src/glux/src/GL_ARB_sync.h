
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:25 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_sync__
#define __GLUX_GL_ARB_sync__

GLUX_NEW_PLUGIN(GL_ARB_sync);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_SERVER_WAIT_TIMEOUT
#  define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#endif
#ifndef GL_OBJECT_TYPE
#  define GL_OBJECT_TYPE 0x9112
#endif
#ifndef GL_SYNC_CONDITION
#  define GL_SYNC_CONDITION 0x9113
#endif
#ifndef GL_SYNC_STATUS
#  define GL_SYNC_STATUS 0x9114
#endif
#ifndef GL_SYNC_FLAGS
#  define GL_SYNC_FLAGS 0x9115
#endif
#ifndef GL_SYNC_FENCE
#  define GL_SYNC_FENCE 0x9116
#endif
#ifndef GL_SYNC_GPU_COMMANDS_COMPLETE
#  define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#endif
#ifndef GL_UNSIGNALED
#  define GL_UNSIGNALED 0x9118
#endif
#ifndef GL_SIGNALED
#  define GL_SIGNALED 0x9119
#endif
#ifndef GL_ALREADY_SIGNALED
#  define GL_ALREADY_SIGNALED 0x911A
#endif
#ifndef GL_TIMEOUT_EXPIRED
#  define GL_TIMEOUT_EXPIRED 0x911B
#endif
#ifndef GL_CONDITION_SATISFIED
#  define GL_CONDITION_SATISFIED 0x911C
#endif
#ifndef GL_WAIT_FAILED
#  define GL_WAIT_FAILED 0x911D
#endif
#ifndef GL_SYNC_FLUSH_COMMANDS_BIT
#  define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#endif
#ifndef GL_TIMEOUT_IGNORED
#  define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFFull
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glFenceSync
typedef GLsync (APIENTRYP PFNGLUXFENCESYNCPROC) (GLenum condition, GLbitfield flags);
#endif
#ifndef __GLUX__GLFCT_glIsSync
typedef GLboolean (APIENTRYP PFNGLUXISSYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
typedef void (APIENTRYP PFNGLUXDELETESYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
typedef GLenum (APIENTRYP PFNGLUXCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glWaitSync
typedef void (APIENTRYP PFNGLUXWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
typedef void (APIENTRYP PFNGLUXGETINTEGER64VPROC) (GLenum pname, GLint64 *params);
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
typedef void (APIENTRYP PFNGLUXGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glFenceSync
extern PFNGLUXFENCESYNCPROC glFenceSync;
#endif
#ifndef __GLUX__GLFCT_glIsSync
extern PFNGLUXISSYNCPROC glIsSync;
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
extern PFNGLUXDELETESYNCPROC glDeleteSync;
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
extern PFNGLUXCLIENTWAITSYNCPROC glClientWaitSync;
#endif
#ifndef __GLUX__GLFCT_glWaitSync
extern PFNGLUXWAITSYNCPROC glWaitSync;
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
extern PFNGLUXGETINTEGER64VPROC glGetInteger64v;
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
extern PFNGLUXGETSYNCIVPROC glGetSynciv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:43 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_sync__
#define __GLUX_GL_ARB_sync__

GLUX_NEW_PLUGIN(GL_ARB_sync);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_SERVER_WAIT_TIMEOUT
#  define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#endif
#ifndef GL_OBJECT_TYPE
#  define GL_OBJECT_TYPE 0x9112
#endif
#ifndef GL_SYNC_CONDITION
#  define GL_SYNC_CONDITION 0x9113
#endif
#ifndef GL_SYNC_STATUS
#  define GL_SYNC_STATUS 0x9114
#endif
#ifndef GL_SYNC_FLAGS
#  define GL_SYNC_FLAGS 0x9115
#endif
#ifndef GL_SYNC_FENCE
#  define GL_SYNC_FENCE 0x9116
#endif
#ifndef GL_SYNC_GPU_COMMANDS_COMPLETE
#  define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#endif
#ifndef GL_UNSIGNALED
#  define GL_UNSIGNALED 0x9118
#endif
#ifndef GL_SIGNALED
#  define GL_SIGNALED 0x9119
#endif
#ifndef GL_ALREADY_SIGNALED
#  define GL_ALREADY_SIGNALED 0x911A
#endif
#ifndef GL_TIMEOUT_EXPIRED
#  define GL_TIMEOUT_EXPIRED 0x911B
#endif
#ifndef GL_CONDITION_SATISFIED
#  define GL_CONDITION_SATISFIED 0x911C
#endif
#ifndef GL_WAIT_FAILED
#  define GL_WAIT_FAILED 0x911D
#endif
#ifndef GL_SYNC_FLUSH_COMMANDS_BIT
#  define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#endif
#ifndef GL_TIMEOUT_IGNORED
#  define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFFull
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glFenceSync
typedef GLsync (APIENTRYP PFNGLUXFENCESYNCPROC) (GLenum condition, GLbitfield flags);
#endif
#ifndef __GLUX__GLFCT_glIsSync
typedef GLboolean (APIENTRYP PFNGLUXISSYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
typedef void (APIENTRYP PFNGLUXDELETESYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
typedef GLenum (APIENTRYP PFNGLUXCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glWaitSync
typedef void (APIENTRYP PFNGLUXWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
typedef void (APIENTRYP PFNGLUXGETINTEGER64VPROC) (GLenum pname, GLint64 *params);
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
typedef void (APIENTRYP PFNGLUXGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glFenceSync
extern PFNGLUXFENCESYNCPROC glFenceSync;
#endif
#ifndef __GLUX__GLFCT_glIsSync
extern PFNGLUXISSYNCPROC glIsSync;
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
extern PFNGLUXDELETESYNCPROC glDeleteSync;
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
extern PFNGLUXCLIENTWAITSYNCPROC glClientWaitSync;
#endif
#ifndef __GLUX__GLFCT_glWaitSync
extern PFNGLUXWAITSYNCPROC glWaitSync;
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
extern PFNGLUXGETINTEGER64VPROC glGetInteger64v;
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
extern PFNGLUXGETSYNCIVPROC glGetSynciv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:53 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_sync__
#define __GLUX_GL_ARB_sync__

GLUX_NEW_PLUGIN(GL_ARB_sync);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_SERVER_WAIT_TIMEOUT
#  define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#endif
#ifndef GL_OBJECT_TYPE
#  define GL_OBJECT_TYPE 0x9112
#endif
#ifndef GL_SYNC_CONDITION
#  define GL_SYNC_CONDITION 0x9113
#endif
#ifndef GL_SYNC_STATUS
#  define GL_SYNC_STATUS 0x9114
#endif
#ifndef GL_SYNC_FLAGS
#  define GL_SYNC_FLAGS 0x9115
#endif
#ifndef GL_SYNC_FENCE
#  define GL_SYNC_FENCE 0x9116
#endif
#ifndef GL_SYNC_GPU_COMMANDS_COMPLETE
#  define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#endif
#ifndef GL_UNSIGNALED
#  define GL_UNSIGNALED 0x9118
#endif
#ifndef GL_SIGNALED
#  define GL_SIGNALED 0x9119
#endif
#ifndef GL_ALREADY_SIGNALED
#  define GL_ALREADY_SIGNALED 0x911A
#endif
#ifndef GL_TIMEOUT_EXPIRED
#  define GL_TIMEOUT_EXPIRED 0x911B
#endif
#ifndef GL_CONDITION_SATISFIED
#  define GL_CONDITION_SATISFIED 0x911C
#endif
#ifndef GL_WAIT_FAILED
#  define GL_WAIT_FAILED 0x911D
#endif
#ifndef GL_SYNC_FLUSH_COMMANDS_BIT
#  define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#endif
#ifndef GL_TIMEOUT_IGNORED
#  define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFFull
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glFenceSync
typedef GLsync (APIENTRYP PFNGLUXFENCESYNCPROC) (GLenum condition, GLbitfield flags);
#endif
#ifndef __GLUX__GLFCT_glIsSync
typedef GLboolean (APIENTRYP PFNGLUXISSYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
typedef void (APIENTRYP PFNGLUXDELETESYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
typedef GLenum (APIENTRYP PFNGLUXCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glWaitSync
typedef void (APIENTRYP PFNGLUXWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
typedef void (APIENTRYP PFNGLUXGETINTEGER64VPROC) (GLenum pname, GLint64 *params);
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
typedef void (APIENTRYP PFNGLUXGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glFenceSync
extern PFNGLUXFENCESYNCPROC glFenceSync;
#endif
#ifndef __GLUX__GLFCT_glIsSync
extern PFNGLUXISSYNCPROC glIsSync;
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
extern PFNGLUXDELETESYNCPROC glDeleteSync;
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
extern PFNGLUXCLIENTWAITSYNCPROC glClientWaitSync;
#endif
#ifndef __GLUX__GLFCT_glWaitSync
extern PFNGLUXWAITSYNCPROC glWaitSync;
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
extern PFNGLUXGETINTEGER64VPROC glGetInteger64v;
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
extern PFNGLUXGETSYNCIVPROC glGetSynciv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:13 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_sync__
#define __GLUX_GL_ARB_sync__

GLUX_NEW_PLUGIN(GL_ARB_sync);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_SERVER_WAIT_TIMEOUT
#  define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#endif
#ifndef GL_OBJECT_TYPE
#  define GL_OBJECT_TYPE 0x9112
#endif
#ifndef GL_SYNC_CONDITION
#  define GL_SYNC_CONDITION 0x9113
#endif
#ifndef GL_SYNC_STATUS
#  define GL_SYNC_STATUS 0x9114
#endif
#ifndef GL_SYNC_FLAGS
#  define GL_SYNC_FLAGS 0x9115
#endif
#ifndef GL_SYNC_FENCE
#  define GL_SYNC_FENCE 0x9116
#endif
#ifndef GL_SYNC_GPU_COMMANDS_COMPLETE
#  define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#endif
#ifndef GL_UNSIGNALED
#  define GL_UNSIGNALED 0x9118
#endif
#ifndef GL_SIGNALED
#  define GL_SIGNALED 0x9119
#endif
#ifndef GL_ALREADY_SIGNALED
#  define GL_ALREADY_SIGNALED 0x911A
#endif
#ifndef GL_TIMEOUT_EXPIRED
#  define GL_TIMEOUT_EXPIRED 0x911B
#endif
#ifndef GL_CONDITION_SATISFIED
#  define GL_CONDITION_SATISFIED 0x911C
#endif
#ifndef GL_WAIT_FAILED
#  define GL_WAIT_FAILED 0x911D
#endif
#ifndef GL_SYNC_FLUSH_COMMANDS_BIT
#  define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#endif
#ifndef GL_TIMEOUT_IGNORED
#  define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFFull
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glFenceSync
typedef GLsync (APIENTRYP PFNGLUXFENCESYNCPROC) (GLenum condition, GLbitfield flags);
#endif
#ifndef __GLUX__GLFCT_glIsSync
typedef GLboolean (APIENTRYP PFNGLUXISSYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
typedef void (APIENTRYP PFNGLUXDELETESYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
typedef GLenum (APIENTRYP PFNGLUXCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glWaitSync
typedef void (APIENTRYP PFNGLUXWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
typedef void (APIENTRYP PFNGLUXGETINTEGER64VPROC) (GLenum pname, GLint64 *params);
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
typedef void (APIENTRYP PFNGLUXGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glFenceSync
extern PFNGLUXFENCESYNCPROC glFenceSync;
#endif
#ifndef __GLUX__GLFCT_glIsSync
extern PFNGLUXISSYNCPROC glIsSync;
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
extern PFNGLUXDELETESYNCPROC glDeleteSync;
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
extern PFNGLUXCLIENTWAITSYNCPROC glClientWaitSync;
#endif
#ifndef __GLUX__GLFCT_glWaitSync
extern PFNGLUXWAITSYNCPROC glWaitSync;
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
extern PFNGLUXGETINTEGER64VPROC glGetInteger64v;
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
extern PFNGLUXGETSYNCIVPROC glGetSynciv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:29 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_sync__
#define __GLUX_GL_ARB_sync__

GLUX_NEW_PLUGIN(GL_ARB_sync);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_SERVER_WAIT_TIMEOUT
#  define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#endif
#ifndef GL_OBJECT_TYPE
#  define GL_OBJECT_TYPE 0x9112
#endif
#ifndef GL_SYNC_CONDITION
#  define GL_SYNC_CONDITION 0x9113
#endif
#ifndef GL_SYNC_STATUS
#  define GL_SYNC_STATUS 0x9114
#endif
#ifndef GL_SYNC_FLAGS
#  define GL_SYNC_FLAGS 0x9115
#endif
#ifndef GL_SYNC_FENCE
#  define GL_SYNC_FENCE 0x9116
#endif
#ifndef GL_SYNC_GPU_COMMANDS_COMPLETE
#  define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#endif
#ifndef GL_UNSIGNALED
#  define GL_UNSIGNALED 0x9118
#endif
#ifndef GL_SIGNALED
#  define GL_SIGNALED 0x9119
#endif
#ifndef GL_ALREADY_SIGNALED
#  define GL_ALREADY_SIGNALED 0x911A
#endif
#ifndef GL_TIMEOUT_EXPIRED
#  define GL_TIMEOUT_EXPIRED 0x911B
#endif
#ifndef GL_CONDITION_SATISFIED
#  define GL_CONDITION_SATISFIED 0x911C
#endif
#ifndef GL_WAIT_FAILED
#  define GL_WAIT_FAILED 0x911D
#endif
#ifndef GL_SYNC_FLUSH_COMMANDS_BIT
#  define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#endif
#ifndef GL_TIMEOUT_IGNORED
#  define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFFull
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glFenceSync
typedef GLsync (APIENTRYP PFNGLUXFENCESYNCPROC) (GLenum condition, GLbitfield flags);
#endif
#ifndef __GLUX__GLFCT_glIsSync
typedef GLboolean (APIENTRYP PFNGLUXISSYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
typedef void (APIENTRYP PFNGLUXDELETESYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
typedef GLenum (APIENTRYP PFNGLUXCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glWaitSync
typedef void (APIENTRYP PFNGLUXWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
typedef void (APIENTRYP PFNGLUXGETINTEGER64VPROC) (GLenum pname, GLint64 *params);
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
typedef void (APIENTRYP PFNGLUXGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glFenceSync
extern PFNGLUXFENCESYNCPROC glFenceSync;
#endif
#ifndef __GLUX__GLFCT_glIsSync
extern PFNGLUXISSYNCPROC glIsSync;
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
extern PFNGLUXDELETESYNCPROC glDeleteSync;
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
extern PFNGLUXCLIENTWAITSYNCPROC glClientWaitSync;
#endif
#ifndef __GLUX__GLFCT_glWaitSync
extern PFNGLUXWAITSYNCPROC glWaitSync;
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
extern PFNGLUXGETINTEGER64VPROC glGetInteger64v;
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
extern PFNGLUXGETSYNCIVPROC glGetSynciv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:32 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_sync__
#define __GLUX_GL_ARB_sync__

GLUX_NEW_PLUGIN(GL_ARB_sync);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_SERVER_WAIT_TIMEOUT
#  define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#endif
#ifndef GL_OBJECT_TYPE
#  define GL_OBJECT_TYPE 0x9112
#endif
#ifndef GL_SYNC_CONDITION
#  define GL_SYNC_CONDITION 0x9113
#endif
#ifndef GL_SYNC_STATUS
#  define GL_SYNC_STATUS 0x9114
#endif
#ifndef GL_SYNC_FLAGS
#  define GL_SYNC_FLAGS 0x9115
#endif
#ifndef GL_SYNC_FENCE
#  define GL_SYNC_FENCE 0x9116
#endif
#ifndef GL_SYNC_GPU_COMMANDS_COMPLETE
#  define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#endif
#ifndef GL_UNSIGNALED
#  define GL_UNSIGNALED 0x9118
#endif
#ifndef GL_SIGNALED
#  define GL_SIGNALED 0x9119
#endif
#ifndef GL_ALREADY_SIGNALED
#  define GL_ALREADY_SIGNALED 0x911A
#endif
#ifndef GL_TIMEOUT_EXPIRED
#  define GL_TIMEOUT_EXPIRED 0x911B
#endif
#ifndef GL_CONDITION_SATISFIED
#  define GL_CONDITION_SATISFIED 0x911C
#endif
#ifndef GL_WAIT_FAILED
#  define GL_WAIT_FAILED 0x911D
#endif
#ifndef GL_SYNC_FLUSH_COMMANDS_BIT
#  define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#endif
#ifndef GL_TIMEOUT_IGNORED
#  define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFFull
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glFenceSync
typedef GLsync (APIENTRYP PFNGLUXFENCESYNCPROC) (GLenum condition, GLbitfield flags);
#endif
#ifndef __GLUX__GLFCT_glIsSync
typedef GLboolean (APIENTRYP PFNGLUXISSYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
typedef void (APIENTRYP PFNGLUXDELETESYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
typedef GLenum (APIENTRYP PFNGLUXCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glWaitSync
typedef void (APIENTRYP PFNGLUXWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
typedef void (APIENTRYP PFNGLUXGETINTEGER64VPROC) (GLenum pname, GLint64 *params);
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
typedef void (APIENTRYP PFNGLUXGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glFenceSync
extern PFNGLUXFENCESYNCPROC glFenceSync;
#endif
#ifndef __GLUX__GLFCT_glIsSync
extern PFNGLUXISSYNCPROC glIsSync;
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
extern PFNGLUXDELETESYNCPROC glDeleteSync;
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
extern PFNGLUXCLIENTWAITSYNCPROC glClientWaitSync;
#endif
#ifndef __GLUX__GLFCT_glWaitSync
extern PFNGLUXWAITSYNCPROC glWaitSync;
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
extern PFNGLUXGETINTEGER64VPROC glGetInteger64v;
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
extern PFNGLUXGETSYNCIVPROC glGetSynciv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:54 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_sync__
#define __GLUX_GL_ARB_sync__

GLUX_NEW_PLUGIN(GL_ARB_sync);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_SERVER_WAIT_TIMEOUT
#  define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#endif
#ifndef GL_OBJECT_TYPE
#  define GL_OBJECT_TYPE 0x9112
#endif
#ifndef GL_SYNC_CONDITION
#  define GL_SYNC_CONDITION 0x9113
#endif
#ifndef GL_SYNC_STATUS
#  define GL_SYNC_STATUS 0x9114
#endif
#ifndef GL_SYNC_FLAGS
#  define GL_SYNC_FLAGS 0x9115
#endif
#ifndef GL_SYNC_FENCE
#  define GL_SYNC_FENCE 0x9116
#endif
#ifndef GL_SYNC_GPU_COMMANDS_COMPLETE
#  define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#endif
#ifndef GL_UNSIGNALED
#  define GL_UNSIGNALED 0x9118
#endif
#ifndef GL_SIGNALED
#  define GL_SIGNALED 0x9119
#endif
#ifndef GL_ALREADY_SIGNALED
#  define GL_ALREADY_SIGNALED 0x911A
#endif
#ifndef GL_TIMEOUT_EXPIRED
#  define GL_TIMEOUT_EXPIRED 0x911B
#endif
#ifndef GL_CONDITION_SATISFIED
#  define GL_CONDITION_SATISFIED 0x911C
#endif
#ifndef GL_WAIT_FAILED
#  define GL_WAIT_FAILED 0x911D
#endif
#ifndef GL_SYNC_FLUSH_COMMANDS_BIT
#  define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#endif
#ifndef GL_TIMEOUT_IGNORED
#  define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFFull
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glFenceSync
typedef GLsync (APIENTRYP PFNGLUXFENCESYNCPROC) (GLenum condition, GLbitfield flags);
#endif
#ifndef __GLUX__GLFCT_glIsSync
typedef GLboolean (APIENTRYP PFNGLUXISSYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
typedef void (APIENTRYP PFNGLUXDELETESYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
typedef GLenum (APIENTRYP PFNGLUXCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glWaitSync
typedef void (APIENTRYP PFNGLUXWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
typedef void (APIENTRYP PFNGLUXGETINTEGER64VPROC) (GLenum pname, GLint64 *params);
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
typedef void (APIENTRYP PFNGLUXGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glFenceSync
extern PFNGLUXFENCESYNCPROC glFenceSync;
#endif
#ifndef __GLUX__GLFCT_glIsSync
extern PFNGLUXISSYNCPROC glIsSync;
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
extern PFNGLUXDELETESYNCPROC glDeleteSync;
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
extern PFNGLUXCLIENTWAITSYNCPROC glClientWaitSync;
#endif
#ifndef __GLUX__GLFCT_glWaitSync
extern PFNGLUXWAITSYNCPROC glWaitSync;
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
extern PFNGLUXGETINTEGER64VPROC glGetInteger64v;
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
extern PFNGLUXGETSYNCIVPROC glGetSynciv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:28:03 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_sync__
#define __GLUX_GL_ARB_sync__

GLUX_NEW_PLUGIN(GL_ARB_sync);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_SERVER_WAIT_TIMEOUT
#  define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#endif
#ifndef GL_OBJECT_TYPE
#  define GL_OBJECT_TYPE 0x9112
#endif
#ifndef GL_SYNC_CONDITION
#  define GL_SYNC_CONDITION 0x9113
#endif
#ifndef GL_SYNC_STATUS
#  define GL_SYNC_STATUS 0x9114
#endif
#ifndef GL_SYNC_FLAGS
#  define GL_SYNC_FLAGS 0x9115
#endif
#ifndef GL_SYNC_FENCE
#  define GL_SYNC_FENCE 0x9116
#endif
#ifndef GL_SYNC_GPU_COMMANDS_COMPLETE
#  define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#endif
#ifndef GL_UNSIGNALED
#  define GL_UNSIGNALED 0x9118
#endif
#ifndef GL_SIGNALED
#  define GL_SIGNALED 0x9119
#endif
#ifndef GL_ALREADY_SIGNALED
#  define GL_ALREADY_SIGNALED 0x911A
#endif
#ifndef GL_TIMEOUT_EXPIRED
#  define GL_TIMEOUT_EXPIRED 0x911B
#endif
#ifndef GL_CONDITION_SATISFIED
#  define GL_CONDITION_SATISFIED 0x911C
#endif
#ifndef GL_WAIT_FAILED
#  define GL_WAIT_FAILED 0x911D
#endif
#ifndef GL_SYNC_FLUSH_COMMANDS_BIT
#  define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#endif
#ifndef GL_TIMEOUT_IGNORED
#  define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFFull
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glFenceSync
typedef GLsync (APIENTRYP PFNGLUXFENCESYNCPROC) (GLenum condition, GLbitfield flags);
#endif
#ifndef __GLUX__GLFCT_glIsSync
typedef GLboolean (APIENTRYP PFNGLUXISSYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
typedef void (APIENTRYP PFNGLUXDELETESYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
typedef GLenum (APIENTRYP PFNGLUXCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glWaitSync
typedef void (APIENTRYP PFNGLUXWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
typedef void (APIENTRYP PFNGLUXGETINTEGER64VPROC) (GLenum pname, GLint64 *params);
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
typedef void (APIENTRYP PFNGLUXGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glFenceSync
extern PFNGLUXFENCESYNCPROC glFenceSync;
#endif
#ifndef __GLUX__GLFCT_glIsSync
extern PFNGLUXISSYNCPROC glIsSync;
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
extern PFNGLUXDELETESYNCPROC glDeleteSync;
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
extern PFNGLUXCLIENTWAITSYNCPROC glClientWaitSync;
#endif
#ifndef __GLUX__GLFCT_glWaitSync
extern PFNGLUXWAITSYNCPROC glWaitSync;
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
extern PFNGLUXGETINTEGER64VPROC glGetInteger64v;
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
extern PFNGLUXGETSYNCIVPROC glGetSynciv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:16:57 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_sync__
#define __GLUX_GL_ARB_sync__

GLUX_NEW_PLUGIN(GL_ARB_sync);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_SERVER_WAIT_TIMEOUT
#  define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#endif
#ifndef GL_OBJECT_TYPE
#  define GL_OBJECT_TYPE 0x9112
#endif
#ifndef GL_SYNC_CONDITION
#  define GL_SYNC_CONDITION 0x9113
#endif
#ifndef GL_SYNC_STATUS
#  define GL_SYNC_STATUS 0x9114
#endif
#ifndef GL_SYNC_FLAGS
#  define GL_SYNC_FLAGS 0x9115
#endif
#ifndef GL_SYNC_FENCE
#  define GL_SYNC_FENCE 0x9116
#endif
#ifndef GL_SYNC_GPU_COMMANDS_COMPLETE
#  define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#endif
#ifndef GL_UNSIGNALED
#  define GL_UNSIGNALED 0x9118
#endif
#ifndef GL_SIGNALED
#  define GL_SIGNALED 0x9119
#endif
#ifndef GL_ALREADY_SIGNALED
#  define GL_ALREADY_SIGNALED 0x911A
#endif
#ifndef GL_TIMEOUT_EXPIRED
#  define GL_TIMEOUT_EXPIRED 0x911B
#endif
#ifndef GL_CONDITION_SATISFIED
#  define GL_CONDITION_SATISFIED 0x911C
#endif
#ifndef GL_WAIT_FAILED
#  define GL_WAIT_FAILED 0x911D
#endif
#ifndef GL_SYNC_FLUSH_COMMANDS_BIT
#  define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#endif
#ifndef GL_TIMEOUT_IGNORED
#  define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFFull
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glFenceSync
typedef GLsync (APIENTRYP PFNGLUXFENCESYNCPROC) (GLenum condition, GLbitfield flags);
#endif
#ifndef __GLUX__GLFCT_glIsSync
typedef GLboolean (APIENTRYP PFNGLUXISSYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
typedef void (APIENTRYP PFNGLUXDELETESYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
typedef GLenum (APIENTRYP PFNGLUXCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glWaitSync
typedef void (APIENTRYP PFNGLUXWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
typedef void (APIENTRYP PFNGLUXGETINTEGER64VPROC) (GLenum pname, GLint64 *params);
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
typedef void (APIENTRYP PFNGLUXGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glFenceSync
extern PFNGLUXFENCESYNCPROC glFenceSync;
#endif
#ifndef __GLUX__GLFCT_glIsSync
extern PFNGLUXISSYNCPROC glIsSync;
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
extern PFNGLUXDELETESYNCPROC glDeleteSync;
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
extern PFNGLUXCLIENTWAITSYNCPROC glClientWaitSync;
#endif
#ifndef __GLUX__GLFCT_glWaitSync
extern PFNGLUXWAITSYNCPROC glWaitSync;
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
extern PFNGLUXGETINTEGER64VPROC glGetInteger64v;
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
extern PFNGLUXGETSYNCIVPROC glGetSynciv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_sync__
#define __GLUX_GL_ARB_sync__

GLUX_NEW_PLUGIN(GL_ARB_sync);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_SERVER_WAIT_TIMEOUT
#  define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#endif
#ifndef GL_OBJECT_TYPE
#  define GL_OBJECT_TYPE 0x9112
#endif
#ifndef GL_SYNC_CONDITION
#  define GL_SYNC_CONDITION 0x9113
#endif
#ifndef GL_SYNC_STATUS
#  define GL_SYNC_STATUS 0x9114
#endif
#ifndef GL_SYNC_FLAGS
#  define GL_SYNC_FLAGS 0x9115
#endif
#ifndef GL_SYNC_FENCE
#  define GL_SYNC_FENCE 0x9116
#endif
#ifndef GL_SYNC_GPU_COMMANDS_COMPLETE
#  define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#endif
#ifndef GL_UNSIGNALED
#  define GL_UNSIGNALED 0x9118
#endif
#ifndef GL_SIGNALED
#  define GL_SIGNALED 0x9119
#endif
#ifndef GL_ALREADY_SIGNALED
#  define GL_ALREADY_SIGNALED 0x911A
#endif
#ifndef GL_TIMEOUT_EXPIRED
#  define GL_TIMEOUT_EXPIRED 0x911B
#endif
#ifndef GL_CONDITION_SATISFIED
#  define GL_CONDITION_SATISFIED 0x911C
#endif
#ifndef GL_WAIT_FAILED
#  define GL_WAIT_FAILED 0x911D
#endif
#ifndef GL_SYNC_FLUSH_COMMANDS_BIT
#  define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#endif
#ifndef GL_TIMEOUT_IGNORED
#  define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFFull
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glFenceSync
typedef GLsync (APIENTRYP PFNGLUXFENCESYNCPROC) (GLenum condition, GLbitfield flags);
#endif
#ifndef __GLUX__GLFCT_glIsSync
typedef GLboolean (APIENTRYP PFNGLUXISSYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
typedef void (APIENTRYP PFNGLUXDELETESYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
typedef GLenum (APIENTRYP PFNGLUXCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glWaitSync
typedef void (APIENTRYP PFNGLUXWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
typedef void (APIENTRYP PFNGLUXGETINTEGER64VPROC) (GLenum pname, GLint64 *params);
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
typedef void (APIENTRYP PFNGLUXGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glFenceSync
extern PFNGLUXFENCESYNCPROC glFenceSync;
#endif
#ifndef __GLUX__GLFCT_glIsSync
extern PFNGLUXISSYNCPROC glIsSync;
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
extern PFNGLUXDELETESYNCPROC glDeleteSync;
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
extern PFNGLUXCLIENTWAITSYNCPROC glClientWaitSync;
#endif
#ifndef __GLUX__GLFCT_glWaitSync
extern PFNGLUXWAITSYNCPROC glWaitSync;
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
extern PFNGLUXGETINTEGER64VPROC glGetInteger64v;
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
extern PFNGLUXGETSYNCIVPROC glGetSynciv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:20 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_sync__
#define __GLUX_GL_ARB_sync__

GLUX_NEW_PLUGIN(GL_ARB_sync);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_SERVER_WAIT_TIMEOUT
#  define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#endif
#ifndef GL_OBJECT_TYPE
#  define GL_OBJECT_TYPE 0x9112
#endif
#ifndef GL_SYNC_CONDITION
#  define GL_SYNC_CONDITION 0x9113
#endif
#ifndef GL_SYNC_STATUS
#  define GL_SYNC_STATUS 0x9114
#endif
#ifndef GL_SYNC_FLAGS
#  define GL_SYNC_FLAGS 0x9115
#endif
#ifndef GL_SYNC_FENCE
#  define GL_SYNC_FENCE 0x9116
#endif
#ifndef GL_SYNC_GPU_COMMANDS_COMPLETE
#  define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#endif
#ifndef GL_UNSIGNALED
#  define GL_UNSIGNALED 0x9118
#endif
#ifndef GL_SIGNALED
#  define GL_SIGNALED 0x9119
#endif
#ifndef GL_ALREADY_SIGNALED
#  define GL_ALREADY_SIGNALED 0x911A
#endif
#ifndef GL_TIMEOUT_EXPIRED
#  define GL_TIMEOUT_EXPIRED 0x911B
#endif
#ifndef GL_CONDITION_SATISFIED
#  define GL_CONDITION_SATISFIED 0x911C
#endif
#ifndef GL_WAIT_FAILED
#  define GL_WAIT_FAILED 0x911D
#endif
#ifndef GL_SYNC_FLUSH_COMMANDS_BIT
#  define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#endif
#ifndef GL_TIMEOUT_IGNORED
#  define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFFull
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glFenceSync
typedef GLsync (APIENTRYP PFNGLUXFENCESYNCPROC) (GLenum condition, GLbitfield flags);
#endif
#ifndef __GLUX__GLFCT_glIsSync
typedef GLboolean (APIENTRYP PFNGLUXISSYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
typedef void (APIENTRYP PFNGLUXDELETESYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
typedef GLenum (APIENTRYP PFNGLUXCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glWaitSync
typedef void (APIENTRYP PFNGLUXWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
typedef void (APIENTRYP PFNGLUXGETINTEGER64VPROC) (GLenum pname, GLint64 *params);
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
typedef void (APIENTRYP PFNGLUXGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glFenceSync
extern PFNGLUXFENCESYNCPROC glFenceSync;
#endif
#ifndef __GLUX__GLFCT_glIsSync
extern PFNGLUXISSYNCPROC glIsSync;
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
extern PFNGLUXDELETESYNCPROC glDeleteSync;
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
extern PFNGLUXCLIENTWAITSYNCPROC glClientWaitSync;
#endif
#ifndef __GLUX__GLFCT_glWaitSync
extern PFNGLUXWAITSYNCPROC glWaitSync;
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
extern PFNGLUXGETINTEGER64VPROC glGetInteger64v;
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
extern PFNGLUXGETSYNCIVPROC glGetSynciv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:00 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_sync__
#define __GLUX_GL_ARB_sync__

GLUX_NEW_PLUGIN(GL_ARB_sync);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_SERVER_WAIT_TIMEOUT
#  define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#endif
#ifndef GL_OBJECT_TYPE
#  define GL_OBJECT_TYPE 0x9112
#endif
#ifndef GL_SYNC_CONDITION
#  define GL_SYNC_CONDITION 0x9113
#endif
#ifndef GL_SYNC_STATUS
#  define GL_SYNC_STATUS 0x9114
#endif
#ifndef GL_SYNC_FLAGS
#  define GL_SYNC_FLAGS 0x9115
#endif
#ifndef GL_SYNC_FENCE
#  define GL_SYNC_FENCE 0x9116
#endif
#ifndef GL_SYNC_GPU_COMMANDS_COMPLETE
#  define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#endif
#ifndef GL_UNSIGNALED
#  define GL_UNSIGNALED 0x9118
#endif
#ifndef GL_SIGNALED
#  define GL_SIGNALED 0x9119
#endif
#ifndef GL_ALREADY_SIGNALED
#  define GL_ALREADY_SIGNALED 0x911A
#endif
#ifndef GL_TIMEOUT_EXPIRED
#  define GL_TIMEOUT_EXPIRED 0x911B
#endif
#ifndef GL_CONDITION_SATISFIED
#  define GL_CONDITION_SATISFIED 0x911C
#endif
#ifndef GL_WAIT_FAILED
#  define GL_WAIT_FAILED 0x911D
#endif
#ifndef GL_SYNC_FLUSH_COMMANDS_BIT
#  define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#endif
#ifndef GL_TIMEOUT_IGNORED
#  define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFFull
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glFenceSync
typedef GLsync (APIENTRYP PFNGLUXFENCESYNCPROC) (GLenum condition, GLbitfield flags);
#endif
#ifndef __GLUX__GLFCT_glIsSync
typedef GLboolean (APIENTRYP PFNGLUXISSYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
typedef void (APIENTRYP PFNGLUXDELETESYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
typedef GLenum (APIENTRYP PFNGLUXCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glWaitSync
typedef void (APIENTRYP PFNGLUXWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
typedef void (APIENTRYP PFNGLUXGETINTEGER64VPROC) (GLenum pname, GLint64 *params);
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
typedef void (APIENTRYP PFNGLUXGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glFenceSync
extern PFNGLUXFENCESYNCPROC glFenceSync;
#endif
#ifndef __GLUX__GLFCT_glIsSync
extern PFNGLUXISSYNCPROC glIsSync;
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
extern PFNGLUXDELETESYNCPROC glDeleteSync;
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
extern PFNGLUXCLIENTWAITSYNCPROC glClientWaitSync;
#endif
#ifndef __GLUX__GLFCT_glWaitSync
extern PFNGLUXWAITSYNCPROC glWaitSync;
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
extern PFNGLUXGETINTEGER64VPROC glGetInteger64v;
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
extern PFNGLUXGETSYNCIVPROC glGetSynciv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:09 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_sync__
#define __GLUX_GL_ARB_sync__

GLUX_NEW_PLUGIN(GL_ARB_sync);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_SERVER_WAIT_TIMEOUT
#  define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#endif
#ifndef GL_OBJECT_TYPE
#  define GL_OBJECT_TYPE 0x9112
#endif
#ifndef GL_SYNC_CONDITION
#  define GL_SYNC_CONDITION 0x9113
#endif
#ifndef GL_SYNC_STATUS
#  define GL_SYNC_STATUS 0x9114
#endif
#ifndef GL_SYNC_FLAGS
#  define GL_SYNC_FLAGS 0x9115
#endif
#ifndef GL_SYNC_FENCE
#  define GL_SYNC_FENCE 0x9116
#endif
#ifndef GL_SYNC_GPU_COMMANDS_COMPLETE
#  define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#endif
#ifndef GL_UNSIGNALED
#  define GL_UNSIGNALED 0x9118
#endif
#ifndef GL_SIGNALED
#  define GL_SIGNALED 0x9119
#endif
#ifndef GL_ALREADY_SIGNALED
#  define GL_ALREADY_SIGNALED 0x911A
#endif
#ifndef GL_TIMEOUT_EXPIRED
#  define GL_TIMEOUT_EXPIRED 0x911B
#endif
#ifndef GL_CONDITION_SATISFIED
#  define GL_CONDITION_SATISFIED 0x911C
#endif
#ifndef GL_WAIT_FAILED
#  define GL_WAIT_FAILED 0x911D
#endif
#ifndef GL_SYNC_FLUSH_COMMANDS_BIT
#  define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#endif
#ifndef GL_TIMEOUT_IGNORED
#  define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFFull
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glFenceSync
typedef GLsync (APIENTRYP PFNGLUXFENCESYNCPROC) (GLenum condition, GLbitfield flags);
#endif
#ifndef __GLUX__GLFCT_glIsSync
typedef GLboolean (APIENTRYP PFNGLUXISSYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
typedef void (APIENTRYP PFNGLUXDELETESYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
typedef GLenum (APIENTRYP PFNGLUXCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glWaitSync
typedef void (APIENTRYP PFNGLUXWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
typedef void (APIENTRYP PFNGLUXGETINTEGER64VPROC) (GLenum pname, GLint64 *params);
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
typedef void (APIENTRYP PFNGLUXGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glFenceSync
extern PFNGLUXFENCESYNCPROC glFenceSync;
#endif
#ifndef __GLUX__GLFCT_glIsSync
extern PFNGLUXISSYNCPROC glIsSync;
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
extern PFNGLUXDELETESYNCPROC glDeleteSync;
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
extern PFNGLUXCLIENTWAITSYNCPROC glClientWaitSync;
#endif
#ifndef __GLUX__GLFCT_glWaitSync
extern PFNGLUXWAITSYNCPROC glWaitSync;
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
extern PFNGLUXGETINTEGER64VPROC glGetInteger64v;
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
extern PFNGLUXGETSYNCIVPROC glGetSynciv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:21 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_sync__
#define __GLUX_GL_ARB_sync__

GLUX_NEW_PLUGIN(GL_ARB_sync);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_SERVER_WAIT_TIMEOUT
#  define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#endif
#ifndef GL_OBJECT_TYPE
#  define GL_OBJECT_TYPE 0x9112
#endif
#ifndef GL_SYNC_CONDITION
#  define GL_SYNC_CONDITION 0x9113
#endif
#ifndef GL_SYNC_STATUS
#  define GL_SYNC_STATUS 0x9114
#endif
#ifndef GL_SYNC_FLAGS
#  define GL_SYNC_FLAGS 0x9115
#endif
#ifndef GL_SYNC_FENCE
#  define GL_SYNC_FENCE 0x9116
#endif
#ifndef GL_SYNC_GPU_COMMANDS_COMPLETE
#  define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#endif
#ifndef GL_UNSIGNALED
#  define GL_UNSIGNALED 0x9118
#endif
#ifndef GL_SIGNALED
#  define GL_SIGNALED 0x9119
#endif
#ifndef GL_ALREADY_SIGNALED
#  define GL_ALREADY_SIGNALED 0x911A
#endif
#ifndef GL_TIMEOUT_EXPIRED
#  define GL_TIMEOUT_EXPIRED 0x911B
#endif
#ifndef GL_CONDITION_SATISFIED
#  define GL_CONDITION_SATISFIED 0x911C
#endif
#ifndef GL_WAIT_FAILED
#  define GL_WAIT_FAILED 0x911D
#endif
#ifndef GL_SYNC_FLUSH_COMMANDS_BIT
#  define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#endif
#ifndef GL_TIMEOUT_IGNORED
#  define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFFull
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glFenceSync
typedef GLsync (APIENTRYP PFNGLUXFENCESYNCPROC) (GLenum condition, GLbitfield flags);
#endif
#ifndef __GLUX__GLFCT_glIsSync
typedef GLboolean (APIENTRYP PFNGLUXISSYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
typedef void (APIENTRYP PFNGLUXDELETESYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
typedef GLenum (APIENTRYP PFNGLUXCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glWaitSync
typedef void (APIENTRYP PFNGLUXWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
typedef void (APIENTRYP PFNGLUXGETINTEGER64VPROC) (GLenum pname, GLint64 *params);
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
typedef void (APIENTRYP PFNGLUXGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glFenceSync
extern PFNGLUXFENCESYNCPROC glFenceSync;
#endif
#ifndef __GLUX__GLFCT_glIsSync
extern PFNGLUXISSYNCPROC glIsSync;
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
extern PFNGLUXDELETESYNCPROC glDeleteSync;
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
extern PFNGLUXCLIENTWAITSYNCPROC glClientWaitSync;
#endif
#ifndef __GLUX__GLFCT_glWaitSync
extern PFNGLUXWAITSYNCPROC glWaitSync;
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
extern PFNGLUXGETINTEGER64VPROC glGetInteger64v;
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
extern PFNGLUXGETSYNCIVPROC glGetSynciv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:52:01 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_sync__
#define __GLUX_GL_ARB_sync__

GLUX_NEW_PLUGIN(GL_ARB_sync);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_SERVER_WAIT_TIMEOUT
#  define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#endif
#ifndef GL_OBJECT_TYPE
#  define GL_OBJECT_TYPE 0x9112
#endif
#ifndef GL_SYNC_CONDITION
#  define GL_SYNC_CONDITION 0x9113
#endif
#ifndef GL_SYNC_STATUS
#  define GL_SYNC_STATUS 0x9114
#endif
#ifndef GL_SYNC_FLAGS
#  define GL_SYNC_FLAGS 0x9115
#endif
#ifndef GL_SYNC_FENCE
#  define GL_SYNC_FENCE 0x9116
#endif
#ifndef GL_SYNC_GPU_COMMANDS_COMPLETE
#  define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#endif
#ifndef GL_UNSIGNALED
#  define GL_UNSIGNALED 0x9118
#endif
#ifndef GL_SIGNALED
#  define GL_SIGNALED 0x9119
#endif
#ifndef GL_ALREADY_SIGNALED
#  define GL_ALREADY_SIGNALED 0x911A
#endif
#ifndef GL_TIMEOUT_EXPIRED
#  define GL_TIMEOUT_EXPIRED 0x911B
#endif
#ifndef GL_CONDITION_SATISFIED
#  define GL_CONDITION_SATISFIED 0x911C
#endif
#ifndef GL_WAIT_FAILED
#  define GL_WAIT_FAILED 0x911D
#endif
#ifndef GL_SYNC_FLUSH_COMMANDS_BIT
#  define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#endif
#ifndef GL_TIMEOUT_IGNORED
#  define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFFull
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glFenceSync
typedef GLsync (APIENTRYP PFNGLUXFENCESYNCPROC) (GLenum condition, GLbitfield flags);
#endif
#ifndef __GLUX__GLFCT_glIsSync
typedef GLboolean (APIENTRYP PFNGLUXISSYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
typedef void (APIENTRYP PFNGLUXDELETESYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
typedef GLenum (APIENTRYP PFNGLUXCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glWaitSync
typedef void (APIENTRYP PFNGLUXWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
typedef void (APIENTRYP PFNGLUXGETINTEGER64VPROC) (GLenum pname, GLint64 *params);
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
typedef void (APIENTRYP PFNGLUXGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glFenceSync
extern PFNGLUXFENCESYNCPROC glFenceSync;
#endif
#ifndef __GLUX__GLFCT_glIsSync
extern PFNGLUXISSYNCPROC glIsSync;
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
extern PFNGLUXDELETESYNCPROC glDeleteSync;
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
extern PFNGLUXCLIENTWAITSYNCPROC glClientWaitSync;
#endif
#ifndef __GLUX__GLFCT_glWaitSync
extern PFNGLUXWAITSYNCPROC glWaitSync;
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
extern PFNGLUXGETINTEGER64VPROC glGetInteger64v;
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
extern PFNGLUXGETSYNCIVPROC glGetSynciv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_sync__
#define __GLUX_GL_ARB_sync__

GLUX_NEW_PLUGIN(GL_ARB_sync);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_SERVER_WAIT_TIMEOUT
#  define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#endif
#ifndef GL_OBJECT_TYPE
#  define GL_OBJECT_TYPE 0x9112
#endif
#ifndef GL_SYNC_CONDITION
#  define GL_SYNC_CONDITION 0x9113
#endif
#ifndef GL_SYNC_STATUS
#  define GL_SYNC_STATUS 0x9114
#endif
#ifndef GL_SYNC_FLAGS
#  define GL_SYNC_FLAGS 0x9115
#endif
#ifndef GL_SYNC_FENCE
#  define GL_SYNC_FENCE 0x9116
#endif
#ifndef GL_SYNC_GPU_COMMANDS_COMPLETE
#  define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#endif
#ifndef GL_UNSIGNALED
#  define GL_UNSIGNALED 0x9118
#endif
#ifndef GL_SIGNALED
#  define GL_SIGNALED 0x9119
#endif
#ifndef GL_ALREADY_SIGNALED
#  define GL_ALREADY_SIGNALED 0x911A
#endif
#ifndef GL_TIMEOUT_EXPIRED
#  define GL_TIMEOUT_EXPIRED 0x911B
#endif
#ifndef GL_CONDITION_SATISFIED
#  define GL_CONDITION_SATISFIED 0x911C
#endif
#ifndef GL_WAIT_FAILED
#  define GL_WAIT_FAILED 0x911D
#endif
#ifndef GL_SYNC_FLUSH_COMMANDS_BIT
#  define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#endif
#ifndef GL_TIMEOUT_IGNORED
#  define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFFull
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glFenceSync
typedef GLsync (APIENTRYP PFNGLUXFENCESYNCPROC) (GLenum condition, GLbitfield flags);
#endif
#ifndef __GLUX__GLFCT_glIsSync
typedef GLboolean (APIENTRYP PFNGLUXISSYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
typedef void (APIENTRYP PFNGLUXDELETESYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
typedef GLenum (APIENTRYP PFNGLUXCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glWaitSync
typedef void (APIENTRYP PFNGLUXWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
typedef void (APIENTRYP PFNGLUXGETINTEGER64VPROC) (GLenum pname, GLint64 *params);
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
typedef void (APIENTRYP PFNGLUXGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glFenceSync
extern PFNGLUXFENCESYNCPROC glFenceSync;
#endif
#ifndef __GLUX__GLFCT_glIsSync
extern PFNGLUXISSYNCPROC glIsSync;
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
extern PFNGLUXDELETESYNCPROC glDeleteSync;
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
extern PFNGLUXCLIENTWAITSYNCPROC glClientWaitSync;
#endif
#ifndef __GLUX__GLFCT_glWaitSync
extern PFNGLUXWAITSYNCPROC glWaitSync;
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
extern PFNGLUXGETINTEGER64VPROC glGetInteger64v;
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
extern PFNGLUXGETSYNCIVPROC glGetSynciv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:04 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_sync__
#define __GLUX_GL_ARB_sync__

GLUX_NEW_PLUGIN(GL_ARB_sync);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_SERVER_WAIT_TIMEOUT
#  define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#endif
#ifndef GL_OBJECT_TYPE
#  define GL_OBJECT_TYPE 0x9112
#endif
#ifndef GL_SYNC_CONDITION
#  define GL_SYNC_CONDITION 0x9113
#endif
#ifndef GL_SYNC_STATUS
#  define GL_SYNC_STATUS 0x9114
#endif
#ifndef GL_SYNC_FLAGS
#  define GL_SYNC_FLAGS 0x9115
#endif
#ifndef GL_SYNC_FENCE
#  define GL_SYNC_FENCE 0x9116
#endif
#ifndef GL_SYNC_GPU_COMMANDS_COMPLETE
#  define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#endif
#ifndef GL_UNSIGNALED
#  define GL_UNSIGNALED 0x9118
#endif
#ifndef GL_SIGNALED
#  define GL_SIGNALED 0x9119
#endif
#ifndef GL_ALREADY_SIGNALED
#  define GL_ALREADY_SIGNALED 0x911A
#endif
#ifndef GL_TIMEOUT_EXPIRED
#  define GL_TIMEOUT_EXPIRED 0x911B
#endif
#ifndef GL_CONDITION_SATISFIED
#  define GL_CONDITION_SATISFIED 0x911C
#endif
#ifndef GL_WAIT_FAILED
#  define GL_WAIT_FAILED 0x911D
#endif
#ifndef GL_SYNC_FLUSH_COMMANDS_BIT
#  define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#endif
#ifndef GL_TIMEOUT_IGNORED
#  define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFFull
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glFenceSync
typedef GLsync (APIENTRYP PFNGLUXFENCESYNCPROC) (GLenum condition, GLbitfield flags);
#endif
#ifndef __GLUX__GLFCT_glIsSync
typedef GLboolean (APIENTRYP PFNGLUXISSYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
typedef void (APIENTRYP PFNGLUXDELETESYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
typedef GLenum (APIENTRYP PFNGLUXCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glWaitSync
typedef void (APIENTRYP PFNGLUXWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
typedef void (APIENTRYP PFNGLUXGETINTEGER64VPROC) (GLenum pname, GLint64 *params);
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
typedef void (APIENTRYP PFNGLUXGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glFenceSync
extern PFNGLUXFENCESYNCPROC glFenceSync;
#endif
#ifndef __GLUX__GLFCT_glIsSync
extern PFNGLUXISSYNCPROC glIsSync;
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
extern PFNGLUXDELETESYNCPROC glDeleteSync;
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
extern PFNGLUXCLIENTWAITSYNCPROC glClientWaitSync;
#endif
#ifndef __GLUX__GLFCT_glWaitSync
extern PFNGLUXWAITSYNCPROC glWaitSync;
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
extern PFNGLUXGETINTEGER64VPROC glGetInteger64v;
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
extern PFNGLUXGETSYNCIVPROC glGetSynciv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:24 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_sync__
#define __GLUX_GL_ARB_sync__

GLUX_NEW_PLUGIN(GL_ARB_sync);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_SERVER_WAIT_TIMEOUT
#  define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#endif
#ifndef GL_OBJECT_TYPE
#  define GL_OBJECT_TYPE 0x9112
#endif
#ifndef GL_SYNC_CONDITION
#  define GL_SYNC_CONDITION 0x9113
#endif
#ifndef GL_SYNC_STATUS
#  define GL_SYNC_STATUS 0x9114
#endif
#ifndef GL_SYNC_FLAGS
#  define GL_SYNC_FLAGS 0x9115
#endif
#ifndef GL_SYNC_FENCE
#  define GL_SYNC_FENCE 0x9116
#endif
#ifndef GL_SYNC_GPU_COMMANDS_COMPLETE
#  define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#endif
#ifndef GL_UNSIGNALED
#  define GL_UNSIGNALED 0x9118
#endif
#ifndef GL_SIGNALED
#  define GL_SIGNALED 0x9119
#endif
#ifndef GL_ALREADY_SIGNALED
#  define GL_ALREADY_SIGNALED 0x911A
#endif
#ifndef GL_TIMEOUT_EXPIRED
#  define GL_TIMEOUT_EXPIRED 0x911B
#endif
#ifndef GL_CONDITION_SATISFIED
#  define GL_CONDITION_SATISFIED 0x911C
#endif
#ifndef GL_WAIT_FAILED
#  define GL_WAIT_FAILED 0x911D
#endif
#ifndef GL_SYNC_FLUSH_COMMANDS_BIT
#  define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#endif
#ifndef GL_TIMEOUT_IGNORED
#  define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFFull
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glFenceSync
typedef GLsync (APIENTRYP PFNGLUXFENCESYNCPROC) (GLenum condition, GLbitfield flags);
#endif
#ifndef __GLUX__GLFCT_glIsSync
typedef GLboolean (APIENTRYP PFNGLUXISSYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
typedef void (APIENTRYP PFNGLUXDELETESYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
typedef GLenum (APIENTRYP PFNGLUXCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glWaitSync
typedef void (APIENTRYP PFNGLUXWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
typedef void (APIENTRYP PFNGLUXGETINTEGER64VPROC) (GLenum pname, GLint64 *params);
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
typedef void (APIENTRYP PFNGLUXGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glFenceSync
extern PFNGLUXFENCESYNCPROC glFenceSync;
#endif
#ifndef __GLUX__GLFCT_glIsSync
extern PFNGLUXISSYNCPROC glIsSync;
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
extern PFNGLUXDELETESYNCPROC glDeleteSync;
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
extern PFNGLUXCLIENTWAITSYNCPROC glClientWaitSync;
#endif
#ifndef __GLUX__GLFCT_glWaitSync
extern PFNGLUXWAITSYNCPROC glWaitSync;
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
extern PFNGLUXGETINTEGER64VPROC glGetInteger64v;
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
extern PFNGLUXGETSYNCIVPROC glGetSynciv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_sync__
#define __GLUX_GL_ARB_sync__

GLUX_NEW_PLUGIN(GL_ARB_sync);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_SERVER_WAIT_TIMEOUT
#  define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#endif
#ifndef GL_OBJECT_TYPE
#  define GL_OBJECT_TYPE 0x9112
#endif
#ifndef GL_SYNC_CONDITION
#  define GL_SYNC_CONDITION 0x9113
#endif
#ifndef GL_SYNC_STATUS
#  define GL_SYNC_STATUS 0x9114
#endif
#ifndef GL_SYNC_FLAGS
#  define GL_SYNC_FLAGS 0x9115
#endif
#ifndef GL_SYNC_FENCE
#  define GL_SYNC_FENCE 0x9116
#endif
#ifndef GL_SYNC_GPU_COMMANDS_COMPLETE
#  define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#endif
#ifndef GL_UNSIGNALED
#  define GL_UNSIGNALED 0x9118
#endif
#ifndef GL_SIGNALED
#  define GL_SIGNALED 0x9119
#endif
#ifndef GL_ALREADY_SIGNALED
#  define GL_ALREADY_SIGNALED 0x911A
#endif
#ifndef GL_TIMEOUT_EXPIRED
#  define GL_TIMEOUT_EXPIRED 0x911B
#endif
#ifndef GL_CONDITION_SATISFIED
#  define GL_CONDITION_SATISFIED 0x911C
#endif
#ifndef GL_WAIT_FAILED
#  define GL_WAIT_FAILED 0x911D
#endif
#ifndef GL_SYNC_FLUSH_COMMANDS_BIT
#  define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#endif
#ifndef GL_TIMEOUT_IGNORED
#  define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFFull
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glFenceSync
typedef GLsync (APIENTRYP PFNGLUXFENCESYNCPROC) (GLenum condition, GLbitfield flags);
#endif
#ifndef __GLUX__GLFCT_glIsSync
typedef GLboolean (APIENTRYP PFNGLUXISSYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
typedef void (APIENTRYP PFNGLUXDELETESYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
typedef GLenum (APIENTRYP PFNGLUXCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glWaitSync
typedef void (APIENTRYP PFNGLUXWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
typedef void (APIENTRYP PFNGLUXGETINTEGER64VPROC) (GLenum pname, GLint64 *params);
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
typedef void (APIENTRYP PFNGLUXGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glFenceSync
extern PFNGLUXFENCESYNCPROC glFenceSync;
#endif
#ifndef __GLUX__GLFCT_glIsSync
extern PFNGLUXISSYNCPROC glIsSync;
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
extern PFNGLUXDELETESYNCPROC glDeleteSync;
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
extern PFNGLUXCLIENTWAITSYNCPROC glClientWaitSync;
#endif
#ifndef __GLUX__GLFCT_glWaitSync
extern PFNGLUXWAITSYNCPROC glWaitSync;
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
extern PFNGLUXGETINTEGER64VPROC glGetInteger64v;
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
extern PFNGLUXGETSYNCIVPROC glGetSynciv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:41:57 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_sync__
#define __GLUX_GL_ARB_sync__

GLUX_NEW_PLUGIN(GL_ARB_sync);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_SERVER_WAIT_TIMEOUT
#  define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#endif
#ifndef GL_OBJECT_TYPE
#  define GL_OBJECT_TYPE 0x9112
#endif
#ifndef GL_SYNC_CONDITION
#  define GL_SYNC_CONDITION 0x9113
#endif
#ifndef GL_SYNC_STATUS
#  define GL_SYNC_STATUS 0x9114
#endif
#ifndef GL_SYNC_FLAGS
#  define GL_SYNC_FLAGS 0x9115
#endif
#ifndef GL_SYNC_FENCE
#  define GL_SYNC_FENCE 0x9116
#endif
#ifndef GL_SYNC_GPU_COMMANDS_COMPLETE
#  define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#endif
#ifndef GL_UNSIGNALED
#  define GL_UNSIGNALED 0x9118
#endif
#ifndef GL_SIGNALED
#  define GL_SIGNALED 0x9119
#endif
#ifndef GL_ALREADY_SIGNALED
#  define GL_ALREADY_SIGNALED 0x911A
#endif
#ifndef GL_TIMEOUT_EXPIRED
#  define GL_TIMEOUT_EXPIRED 0x911B
#endif
#ifndef GL_CONDITION_SATISFIED
#  define GL_CONDITION_SATISFIED 0x911C
#endif
#ifndef GL_WAIT_FAILED
#  define GL_WAIT_FAILED 0x911D
#endif
#ifndef GL_SYNC_FLUSH_COMMANDS_BIT
#  define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#endif
#ifndef GL_TIMEOUT_IGNORED
#  define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFFull
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glFenceSync
typedef GLsync (APIENTRYP PFNGLUXFENCESYNCPROC) (GLenum condition, GLbitfield flags);
#endif
#ifndef __GLUX__GLFCT_glIsSync
typedef GLboolean (APIENTRYP PFNGLUXISSYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
typedef void (APIENTRYP PFNGLUXDELETESYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
typedef GLenum (APIENTRYP PFNGLUXCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glWaitSync
typedef void (APIENTRYP PFNGLUXWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
typedef void (APIENTRYP PFNGLUXGETINTEGER64VPROC) (GLenum pname, GLint64 *params);
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
typedef void (APIENTRYP PFNGLUXGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glFenceSync
extern PFNGLUXFENCESYNCPROC glFenceSync;
#endif
#ifndef __GLUX__GLFCT_glIsSync
extern PFNGLUXISSYNCPROC glIsSync;
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
extern PFNGLUXDELETESYNCPROC glDeleteSync;
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
extern PFNGLUXCLIENTWAITSYNCPROC glClientWaitSync;
#endif
#ifndef __GLUX__GLFCT_glWaitSync
extern PFNGLUXWAITSYNCPROC glWaitSync;
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
extern PFNGLUXGETINTEGER64VPROC glGetInteger64v;
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
extern PFNGLUXGETSYNCIVPROC glGetSynciv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:39 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_sync__
#define __GLUX_GL_ARB_sync__

GLUX_NEW_PLUGIN(GL_ARB_sync);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_SERVER_WAIT_TIMEOUT
#  define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#endif
#ifndef GL_OBJECT_TYPE
#  define GL_OBJECT_TYPE 0x9112
#endif
#ifndef GL_SYNC_CONDITION
#  define GL_SYNC_CONDITION 0x9113
#endif
#ifndef GL_SYNC_STATUS
#  define GL_SYNC_STATUS 0x9114
#endif
#ifndef GL_SYNC_FLAGS
#  define GL_SYNC_FLAGS 0x9115
#endif
#ifndef GL_SYNC_FENCE
#  define GL_SYNC_FENCE 0x9116
#endif
#ifndef GL_SYNC_GPU_COMMANDS_COMPLETE
#  define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#endif
#ifndef GL_UNSIGNALED
#  define GL_UNSIGNALED 0x9118
#endif
#ifndef GL_SIGNALED
#  define GL_SIGNALED 0x9119
#endif
#ifndef GL_ALREADY_SIGNALED
#  define GL_ALREADY_SIGNALED 0x911A
#endif
#ifndef GL_TIMEOUT_EXPIRED
#  define GL_TIMEOUT_EXPIRED 0x911B
#endif
#ifndef GL_CONDITION_SATISFIED
#  define GL_CONDITION_SATISFIED 0x911C
#endif
#ifndef GL_WAIT_FAILED
#  define GL_WAIT_FAILED 0x911D
#endif
#ifndef GL_SYNC_FLUSH_COMMANDS_BIT
#  define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#endif
#ifndef GL_TIMEOUT_IGNORED
#  define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFFull
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glFenceSync
typedef GLsync (APIENTRYP PFNGLUXFENCESYNCPROC) (GLenum condition, GLbitfield flags);
#endif
#ifndef __GLUX__GLFCT_glIsSync
typedef GLboolean (APIENTRYP PFNGLUXISSYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
typedef void (APIENTRYP PFNGLUXDELETESYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
typedef GLenum (APIENTRYP PFNGLUXCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glWaitSync
typedef void (APIENTRYP PFNGLUXWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
typedef void (APIENTRYP PFNGLUXGETINTEGER64VPROC) (GLenum pname, GLint64 *params);
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
typedef void (APIENTRYP PFNGLUXGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glFenceSync
extern PFNGLUXFENCESYNCPROC glFenceSync;
#endif
#ifndef __GLUX__GLFCT_glIsSync
extern PFNGLUXISSYNCPROC glIsSync;
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
extern PFNGLUXDELETESYNCPROC glDeleteSync;
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
extern PFNGLUXCLIENTWAITSYNCPROC glClientWaitSync;
#endif
#ifndef __GLUX__GLFCT_glWaitSync
extern PFNGLUXWAITSYNCPROC glWaitSync;
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
extern PFNGLUXGETINTEGER64VPROC glGetInteger64v;
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
extern PFNGLUXGETSYNCIVPROC glGetSynciv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:09:58 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_sync__
#define __GLUX_GL_ARB_sync__

GLUX_NEW_PLUGIN(GL_ARB_sync);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_SERVER_WAIT_TIMEOUT
#  define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#endif
#ifndef GL_OBJECT_TYPE
#  define GL_OBJECT_TYPE 0x9112
#endif
#ifndef GL_SYNC_CONDITION
#  define GL_SYNC_CONDITION 0x9113
#endif
#ifndef GL_SYNC_STATUS
#  define GL_SYNC_STATUS 0x9114
#endif
#ifndef GL_SYNC_FLAGS
#  define GL_SYNC_FLAGS 0x9115
#endif
#ifndef GL_SYNC_FENCE
#  define GL_SYNC_FENCE 0x9116
#endif
#ifndef GL_SYNC_GPU_COMMANDS_COMPLETE
#  define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#endif
#ifndef GL_UNSIGNALED
#  define GL_UNSIGNALED 0x9118
#endif
#ifndef GL_SIGNALED
#  define GL_SIGNALED 0x9119
#endif
#ifndef GL_ALREADY_SIGNALED
#  define GL_ALREADY_SIGNALED 0x911A
#endif
#ifndef GL_TIMEOUT_EXPIRED
#  define GL_TIMEOUT_EXPIRED 0x911B
#endif
#ifndef GL_CONDITION_SATISFIED
#  define GL_CONDITION_SATISFIED 0x911C
#endif
#ifndef GL_WAIT_FAILED
#  define GL_WAIT_FAILED 0x911D
#endif
#ifndef GL_SYNC_FLUSH_COMMANDS_BIT
#  define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#endif
#ifndef GL_TIMEOUT_IGNORED
#  define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFFull
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glFenceSync
typedef GLsync (APIENTRYP PFNGLUXFENCESYNCPROC) (GLenum condition, GLbitfield flags);
#endif
#ifndef __GLUX__GLFCT_glIsSync
typedef GLboolean (APIENTRYP PFNGLUXISSYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
typedef void (APIENTRYP PFNGLUXDELETESYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
typedef GLenum (APIENTRYP PFNGLUXCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glWaitSync
typedef void (APIENTRYP PFNGLUXWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
typedef void (APIENTRYP PFNGLUXGETINTEGER64VPROC) (GLenum pname, GLint64 *params);
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
typedef void (APIENTRYP PFNGLUXGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glFenceSync
extern PFNGLUXFENCESYNCPROC glFenceSync;
#endif
#ifndef __GLUX__GLFCT_glIsSync
extern PFNGLUXISSYNCPROC glIsSync;
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
extern PFNGLUXDELETESYNCPROC glDeleteSync;
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
extern PFNGLUXCLIENTWAITSYNCPROC glClientWaitSync;
#endif
#ifndef __GLUX__GLFCT_glWaitSync
extern PFNGLUXWAITSYNCPROC glWaitSync;
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
extern PFNGLUXGETINTEGER64VPROC glGetInteger64v;
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
extern PFNGLUXGETSYNCIVPROC glGetSynciv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:19:59 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_sync__
#define __GLUX_GL_ARB_sync__

GLUX_NEW_PLUGIN(GL_ARB_sync);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_SERVER_WAIT_TIMEOUT
#  define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#endif
#ifndef GL_OBJECT_TYPE
#  define GL_OBJECT_TYPE 0x9112
#endif
#ifndef GL_SYNC_CONDITION
#  define GL_SYNC_CONDITION 0x9113
#endif
#ifndef GL_SYNC_STATUS
#  define GL_SYNC_STATUS 0x9114
#endif
#ifndef GL_SYNC_FLAGS
#  define GL_SYNC_FLAGS 0x9115
#endif
#ifndef GL_SYNC_FENCE
#  define GL_SYNC_FENCE 0x9116
#endif
#ifndef GL_SYNC_GPU_COMMANDS_COMPLETE
#  define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#endif
#ifndef GL_UNSIGNALED
#  define GL_UNSIGNALED 0x9118
#endif
#ifndef GL_SIGNALED
#  define GL_SIGNALED 0x9119
#endif
#ifndef GL_ALREADY_SIGNALED
#  define GL_ALREADY_SIGNALED 0x911A
#endif
#ifndef GL_TIMEOUT_EXPIRED
#  define GL_TIMEOUT_EXPIRED 0x911B
#endif
#ifndef GL_CONDITION_SATISFIED
#  define GL_CONDITION_SATISFIED 0x911C
#endif
#ifndef GL_WAIT_FAILED
#  define GL_WAIT_FAILED 0x911D
#endif
#ifndef GL_SYNC_FLUSH_COMMANDS_BIT
#  define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#endif
#ifndef GL_TIMEOUT_IGNORED
#  define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFFull
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glFenceSync
typedef GLsync (APIENTRYP PFNGLUXFENCESYNCPROC) (GLenum condition, GLbitfield flags);
#endif
#ifndef __GLUX__GLFCT_glIsSync
typedef GLboolean (APIENTRYP PFNGLUXISSYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
typedef void (APIENTRYP PFNGLUXDELETESYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
typedef GLenum (APIENTRYP PFNGLUXCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glWaitSync
typedef void (APIENTRYP PFNGLUXWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
typedef void (APIENTRYP PFNGLUXGETINTEGER64VPROC) (GLenum pname, GLint64 *params);
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
typedef void (APIENTRYP PFNGLUXGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glFenceSync
extern PFNGLUXFENCESYNCPROC glFenceSync;
#endif
#ifndef __GLUX__GLFCT_glIsSync
extern PFNGLUXISSYNCPROC glIsSync;
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
extern PFNGLUXDELETESYNCPROC glDeleteSync;
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
extern PFNGLUXCLIENTWAITSYNCPROC glClientWaitSync;
#endif
#ifndef __GLUX__GLFCT_glWaitSync
extern PFNGLUXWAITSYNCPROC glWaitSync;
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
extern PFNGLUXGETINTEGER64VPROC glGetInteger64v;
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
extern PFNGLUXGETSYNCIVPROC glGetSynciv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:42:57 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_sync__
#define __GLUX_GL_ARB_sync__

GLUX_NEW_PLUGIN(GL_ARB_sync)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_SERVER_WAIT_TIMEOUT
#  define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#endif
#ifndef GL_OBJECT_TYPE
#  define GL_OBJECT_TYPE 0x9112
#endif
#ifndef GL_SYNC_CONDITION
#  define GL_SYNC_CONDITION 0x9113
#endif
#ifndef GL_SYNC_STATUS
#  define GL_SYNC_STATUS 0x9114
#endif
#ifndef GL_SYNC_FLAGS
#  define GL_SYNC_FLAGS 0x9115
#endif
#ifndef GL_SYNC_FENCE
#  define GL_SYNC_FENCE 0x9116
#endif
#ifndef GL_SYNC_GPU_COMMANDS_COMPLETE
#  define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#endif
#ifndef GL_UNSIGNALED
#  define GL_UNSIGNALED 0x9118
#endif
#ifndef GL_SIGNALED
#  define GL_SIGNALED 0x9119
#endif
#ifndef GL_ALREADY_SIGNALED
#  define GL_ALREADY_SIGNALED 0x911A
#endif
#ifndef GL_TIMEOUT_EXPIRED
#  define GL_TIMEOUT_EXPIRED 0x911B
#endif
#ifndef GL_CONDITION_SATISFIED
#  define GL_CONDITION_SATISFIED 0x911C
#endif
#ifndef GL_WAIT_FAILED
#  define GL_WAIT_FAILED 0x911D
#endif
#ifndef GL_SYNC_FLUSH_COMMANDS_BIT
#  define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#endif
#ifndef GL_TIMEOUT_IGNORED
#  define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFFull
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glFenceSync
typedef GLsync (APIENTRYP PFNGLUXFENCESYNCPROC) (GLenum condition, GLbitfield flags);
#endif
#ifndef __GLUX__GLFCT_glIsSync
typedef GLboolean (APIENTRYP PFNGLUXISSYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
typedef void (APIENTRYP PFNGLUXDELETESYNCPROC) (GLsync sync);
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
typedef GLenum (APIENTRYP PFNGLUXCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glWaitSync
typedef void (APIENTRYP PFNGLUXWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
typedef void (APIENTRYP PFNGLUXGETINTEGER64VPROC) (GLenum pname, GLint64 *params);
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
typedef void (APIENTRYP PFNGLUXGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glFenceSync
extern PFNGLUXFENCESYNCPROC glFenceSync;
#endif
#ifndef __GLUX__GLFCT_glIsSync
extern PFNGLUXISSYNCPROC glIsSync;
#endif
#ifndef __GLUX__GLFCT_glDeleteSync
extern PFNGLUXDELETESYNCPROC glDeleteSync;
#endif
#ifndef __GLUX__GLFCT_glClientWaitSync
extern PFNGLUXCLIENTWAITSYNCPROC glClientWaitSync;
#endif
#ifndef __GLUX__GLFCT_glWaitSync
extern PFNGLUXWAITSYNCPROC glWaitSync;
#endif
#ifndef __GLUX__GLFCT_glGetInteger64v
extern PFNGLUXGETINTEGER64VPROC glGetInteger64v;
#endif
#ifndef __GLUX__GLFCT_glGetSynciv
extern PFNGLUXGETSYNCIVPROC glGetSynciv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
