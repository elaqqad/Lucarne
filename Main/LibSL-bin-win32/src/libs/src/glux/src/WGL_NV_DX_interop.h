
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:27 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_NV_DX_interop__
#define __GLUX_WGL_NV_DX_interop__

GLUX_NEW_PLUGIN(WGL_NV_DX_interop);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_ACCESS_READ_ONLY_NV
#  define WGL_ACCESS_READ_ONLY_NV 0x00000000
#endif
#ifndef WGL_ACCESS_READ_WRITE_NV
#  define WGL_ACCESS_READ_WRITE_NV 0x00000001
#endif
#ifndef WGL_ACCESS_WRITE_DISCARD_NV
#  define WGL_ACCESS_WRITE_DISCARD_NV 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
typedef BOOL (APIENTRYP PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC) (void *dxObject, HANDLE shareHandle);
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
typedef HANDLE (APIENTRYP PFNWGLUXDXOPENDEVICENVPROC) (void *dxDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
typedef BOOL (APIENTRYP PFNWGLUXDXCLOSEDEVICENVPROC) (HANDLE hDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
typedef HANDLE (APIENTRYP PFNWGLUXDXREGISTEROBJECTNVPROC) (HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNREGISTEROBJECTNVPROC) (HANDLE hDevice, HANDLE hObject);
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
typedef BOOL (APIENTRYP PFNWGLUXDXOBJECTACCESSNVPROC) (HANDLE hObject, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
extern PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC wglDXSetResourceShareHandleNV;
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
extern PFNWGLUXDXOPENDEVICENVPROC wglDXOpenDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
extern PFNWGLUXDXCLOSEDEVICENVPROC wglDXCloseDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
extern PFNWGLUXDXREGISTEROBJECTNVPROC wglDXRegisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
extern PFNWGLUXDXUNREGISTEROBJECTNVPROC wglDXUnregisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
extern PFNWGLUXDXOBJECTACCESSNVPROC wglDXObjectAccessNV;
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
extern PFNWGLUXDXLOCKOBJECTSNVPROC wglDXLockObjectsNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
extern PFNWGLUXDXUNLOCKOBJECTSNVPROC wglDXUnlockObjectsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:46 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_NV_DX_interop__
#define __GLUX_WGL_NV_DX_interop__

GLUX_NEW_PLUGIN(WGL_NV_DX_interop);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_ACCESS_READ_ONLY_NV
#  define WGL_ACCESS_READ_ONLY_NV 0x00000000
#endif
#ifndef WGL_ACCESS_READ_WRITE_NV
#  define WGL_ACCESS_READ_WRITE_NV 0x00000001
#endif
#ifndef WGL_ACCESS_WRITE_DISCARD_NV
#  define WGL_ACCESS_WRITE_DISCARD_NV 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
typedef BOOL (APIENTRYP PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC) (void *dxObject, HANDLE shareHandle);
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
typedef HANDLE (APIENTRYP PFNWGLUXDXOPENDEVICENVPROC) (void *dxDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
typedef BOOL (APIENTRYP PFNWGLUXDXCLOSEDEVICENVPROC) (HANDLE hDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
typedef HANDLE (APIENTRYP PFNWGLUXDXREGISTEROBJECTNVPROC) (HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNREGISTEROBJECTNVPROC) (HANDLE hDevice, HANDLE hObject);
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
typedef BOOL (APIENTRYP PFNWGLUXDXOBJECTACCESSNVPROC) (HANDLE hObject, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
extern PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC wglDXSetResourceShareHandleNV;
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
extern PFNWGLUXDXOPENDEVICENVPROC wglDXOpenDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
extern PFNWGLUXDXCLOSEDEVICENVPROC wglDXCloseDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
extern PFNWGLUXDXREGISTEROBJECTNVPROC wglDXRegisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
extern PFNWGLUXDXUNREGISTEROBJECTNVPROC wglDXUnregisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
extern PFNWGLUXDXOBJECTACCESSNVPROC wglDXObjectAccessNV;
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
extern PFNWGLUXDXLOCKOBJECTSNVPROC wglDXLockObjectsNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
extern PFNWGLUXDXUNLOCKOBJECTSNVPROC wglDXUnlockObjectsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:54 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_NV_DX_interop__
#define __GLUX_WGL_NV_DX_interop__

GLUX_NEW_PLUGIN(WGL_NV_DX_interop);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_ACCESS_READ_ONLY_NV
#  define WGL_ACCESS_READ_ONLY_NV 0x00000000
#endif
#ifndef WGL_ACCESS_READ_WRITE_NV
#  define WGL_ACCESS_READ_WRITE_NV 0x00000001
#endif
#ifndef WGL_ACCESS_WRITE_DISCARD_NV
#  define WGL_ACCESS_WRITE_DISCARD_NV 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
typedef BOOL (APIENTRYP PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC) (void *dxObject, HANDLE shareHandle);
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
typedef HANDLE (APIENTRYP PFNWGLUXDXOPENDEVICENVPROC) (void *dxDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
typedef BOOL (APIENTRYP PFNWGLUXDXCLOSEDEVICENVPROC) (HANDLE hDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
typedef HANDLE (APIENTRYP PFNWGLUXDXREGISTEROBJECTNVPROC) (HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNREGISTEROBJECTNVPROC) (HANDLE hDevice, HANDLE hObject);
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
typedef BOOL (APIENTRYP PFNWGLUXDXOBJECTACCESSNVPROC) (HANDLE hObject, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
extern PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC wglDXSetResourceShareHandleNV;
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
extern PFNWGLUXDXOPENDEVICENVPROC wglDXOpenDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
extern PFNWGLUXDXCLOSEDEVICENVPROC wglDXCloseDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
extern PFNWGLUXDXREGISTEROBJECTNVPROC wglDXRegisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
extern PFNWGLUXDXUNREGISTEROBJECTNVPROC wglDXUnregisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
extern PFNWGLUXDXOBJECTACCESSNVPROC wglDXObjectAccessNV;
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
extern PFNWGLUXDXLOCKOBJECTSNVPROC wglDXLockObjectsNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
extern PFNWGLUXDXUNLOCKOBJECTSNVPROC wglDXUnlockObjectsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:13 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_NV_DX_interop__
#define __GLUX_WGL_NV_DX_interop__

GLUX_NEW_PLUGIN(WGL_NV_DX_interop);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_ACCESS_READ_ONLY_NV
#  define WGL_ACCESS_READ_ONLY_NV 0x00000000
#endif
#ifndef WGL_ACCESS_READ_WRITE_NV
#  define WGL_ACCESS_READ_WRITE_NV 0x00000001
#endif
#ifndef WGL_ACCESS_WRITE_DISCARD_NV
#  define WGL_ACCESS_WRITE_DISCARD_NV 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
typedef BOOL (APIENTRYP PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC) (void *dxObject, HANDLE shareHandle);
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
typedef HANDLE (APIENTRYP PFNWGLUXDXOPENDEVICENVPROC) (void *dxDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
typedef BOOL (APIENTRYP PFNWGLUXDXCLOSEDEVICENVPROC) (HANDLE hDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
typedef HANDLE (APIENTRYP PFNWGLUXDXREGISTEROBJECTNVPROC) (HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNREGISTEROBJECTNVPROC) (HANDLE hDevice, HANDLE hObject);
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
typedef BOOL (APIENTRYP PFNWGLUXDXOBJECTACCESSNVPROC) (HANDLE hObject, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
extern PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC wglDXSetResourceShareHandleNV;
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
extern PFNWGLUXDXOPENDEVICENVPROC wglDXOpenDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
extern PFNWGLUXDXCLOSEDEVICENVPROC wglDXCloseDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
extern PFNWGLUXDXREGISTEROBJECTNVPROC wglDXRegisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
extern PFNWGLUXDXUNREGISTEROBJECTNVPROC wglDXUnregisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
extern PFNWGLUXDXOBJECTACCESSNVPROC wglDXObjectAccessNV;
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
extern PFNWGLUXDXLOCKOBJECTSNVPROC wglDXLockObjectsNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
extern PFNWGLUXDXUNLOCKOBJECTSNVPROC wglDXUnlockObjectsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:30 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_NV_DX_interop__
#define __GLUX_WGL_NV_DX_interop__

GLUX_NEW_PLUGIN(WGL_NV_DX_interop);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_ACCESS_READ_ONLY_NV
#  define WGL_ACCESS_READ_ONLY_NV 0x00000000
#endif
#ifndef WGL_ACCESS_READ_WRITE_NV
#  define WGL_ACCESS_READ_WRITE_NV 0x00000001
#endif
#ifndef WGL_ACCESS_WRITE_DISCARD_NV
#  define WGL_ACCESS_WRITE_DISCARD_NV 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
typedef BOOL (APIENTRYP PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC) (void *dxObject, HANDLE shareHandle);
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
typedef HANDLE (APIENTRYP PFNWGLUXDXOPENDEVICENVPROC) (void *dxDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
typedef BOOL (APIENTRYP PFNWGLUXDXCLOSEDEVICENVPROC) (HANDLE hDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
typedef HANDLE (APIENTRYP PFNWGLUXDXREGISTEROBJECTNVPROC) (HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNREGISTEROBJECTNVPROC) (HANDLE hDevice, HANDLE hObject);
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
typedef BOOL (APIENTRYP PFNWGLUXDXOBJECTACCESSNVPROC) (HANDLE hObject, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
extern PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC wglDXSetResourceShareHandleNV;
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
extern PFNWGLUXDXOPENDEVICENVPROC wglDXOpenDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
extern PFNWGLUXDXCLOSEDEVICENVPROC wglDXCloseDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
extern PFNWGLUXDXREGISTEROBJECTNVPROC wglDXRegisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
extern PFNWGLUXDXUNREGISTEROBJECTNVPROC wglDXUnregisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
extern PFNWGLUXDXOBJECTACCESSNVPROC wglDXObjectAccessNV;
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
extern PFNWGLUXDXLOCKOBJECTSNVPROC wglDXLockObjectsNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
extern PFNWGLUXDXUNLOCKOBJECTSNVPROC wglDXUnlockObjectsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:33 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_NV_DX_interop__
#define __GLUX_WGL_NV_DX_interop__

GLUX_NEW_PLUGIN(WGL_NV_DX_interop);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_ACCESS_READ_ONLY_NV
#  define WGL_ACCESS_READ_ONLY_NV 0x00000000
#endif
#ifndef WGL_ACCESS_READ_WRITE_NV
#  define WGL_ACCESS_READ_WRITE_NV 0x00000001
#endif
#ifndef WGL_ACCESS_WRITE_DISCARD_NV
#  define WGL_ACCESS_WRITE_DISCARD_NV 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
typedef BOOL (APIENTRYP PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC) (void *dxObject, HANDLE shareHandle);
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
typedef HANDLE (APIENTRYP PFNWGLUXDXOPENDEVICENVPROC) (void *dxDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
typedef BOOL (APIENTRYP PFNWGLUXDXCLOSEDEVICENVPROC) (HANDLE hDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
typedef HANDLE (APIENTRYP PFNWGLUXDXREGISTEROBJECTNVPROC) (HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNREGISTEROBJECTNVPROC) (HANDLE hDevice, HANDLE hObject);
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
typedef BOOL (APIENTRYP PFNWGLUXDXOBJECTACCESSNVPROC) (HANDLE hObject, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
extern PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC wglDXSetResourceShareHandleNV;
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
extern PFNWGLUXDXOPENDEVICENVPROC wglDXOpenDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
extern PFNWGLUXDXCLOSEDEVICENVPROC wglDXCloseDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
extern PFNWGLUXDXREGISTEROBJECTNVPROC wglDXRegisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
extern PFNWGLUXDXUNREGISTEROBJECTNVPROC wglDXUnregisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
extern PFNWGLUXDXOBJECTACCESSNVPROC wglDXObjectAccessNV;
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
extern PFNWGLUXDXLOCKOBJECTSNVPROC wglDXLockObjectsNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
extern PFNWGLUXDXUNLOCKOBJECTSNVPROC wglDXUnlockObjectsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:55 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_NV_DX_interop__
#define __GLUX_WGL_NV_DX_interop__

GLUX_NEW_PLUGIN(WGL_NV_DX_interop);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_ACCESS_READ_ONLY_NV
#  define WGL_ACCESS_READ_ONLY_NV 0x00000000
#endif
#ifndef WGL_ACCESS_READ_WRITE_NV
#  define WGL_ACCESS_READ_WRITE_NV 0x00000001
#endif
#ifndef WGL_ACCESS_WRITE_DISCARD_NV
#  define WGL_ACCESS_WRITE_DISCARD_NV 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
typedef BOOL (APIENTRYP PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC) (void *dxObject, HANDLE shareHandle);
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
typedef HANDLE (APIENTRYP PFNWGLUXDXOPENDEVICENVPROC) (void *dxDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
typedef BOOL (APIENTRYP PFNWGLUXDXCLOSEDEVICENVPROC) (HANDLE hDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
typedef HANDLE (APIENTRYP PFNWGLUXDXREGISTEROBJECTNVPROC) (HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNREGISTEROBJECTNVPROC) (HANDLE hDevice, HANDLE hObject);
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
typedef BOOL (APIENTRYP PFNWGLUXDXOBJECTACCESSNVPROC) (HANDLE hObject, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
extern PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC wglDXSetResourceShareHandleNV;
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
extern PFNWGLUXDXOPENDEVICENVPROC wglDXOpenDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
extern PFNWGLUXDXCLOSEDEVICENVPROC wglDXCloseDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
extern PFNWGLUXDXREGISTEROBJECTNVPROC wglDXRegisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
extern PFNWGLUXDXUNREGISTEROBJECTNVPROC wglDXUnregisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
extern PFNWGLUXDXOBJECTACCESSNVPROC wglDXObjectAccessNV;
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
extern PFNWGLUXDXLOCKOBJECTSNVPROC wglDXLockObjectsNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
extern PFNWGLUXDXUNLOCKOBJECTSNVPROC wglDXUnlockObjectsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:29:06 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_NV_DX_interop__
#define __GLUX_WGL_NV_DX_interop__

GLUX_NEW_PLUGIN(WGL_NV_DX_interop);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_ACCESS_READ_ONLY_NV
#  define WGL_ACCESS_READ_ONLY_NV 0x00000000
#endif
#ifndef WGL_ACCESS_READ_WRITE_NV
#  define WGL_ACCESS_READ_WRITE_NV 0x00000001
#endif
#ifndef WGL_ACCESS_WRITE_DISCARD_NV
#  define WGL_ACCESS_WRITE_DISCARD_NV 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
typedef BOOL (APIENTRYP PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC) (void *dxObject, HANDLE shareHandle);
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
typedef HANDLE (APIENTRYP PFNWGLUXDXOPENDEVICENVPROC) (void *dxDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
typedef BOOL (APIENTRYP PFNWGLUXDXCLOSEDEVICENVPROC) (HANDLE hDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
typedef HANDLE (APIENTRYP PFNWGLUXDXREGISTEROBJECTNVPROC) (HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNREGISTEROBJECTNVPROC) (HANDLE hDevice, HANDLE hObject);
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
typedef BOOL (APIENTRYP PFNWGLUXDXOBJECTACCESSNVPROC) (HANDLE hObject, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
extern PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC wglDXSetResourceShareHandleNV;
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
extern PFNWGLUXDXOPENDEVICENVPROC wglDXOpenDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
extern PFNWGLUXDXCLOSEDEVICENVPROC wglDXCloseDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
extern PFNWGLUXDXREGISTEROBJECTNVPROC wglDXRegisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
extern PFNWGLUXDXUNREGISTEROBJECTNVPROC wglDXUnregisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
extern PFNWGLUXDXOBJECTACCESSNVPROC wglDXObjectAccessNV;
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
extern PFNWGLUXDXLOCKOBJECTSNVPROC wglDXLockObjectsNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
extern PFNWGLUXDXUNLOCKOBJECTSNVPROC wglDXUnlockObjectsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:17:07 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_NV_DX_interop__
#define __GLUX_WGL_NV_DX_interop__

GLUX_NEW_PLUGIN(WGL_NV_DX_interop);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_ACCESS_READ_ONLY_NV
#  define WGL_ACCESS_READ_ONLY_NV 0x00000000
#endif
#ifndef WGL_ACCESS_READ_WRITE_NV
#  define WGL_ACCESS_READ_WRITE_NV 0x00000001
#endif
#ifndef WGL_ACCESS_WRITE_DISCARD_NV
#  define WGL_ACCESS_WRITE_DISCARD_NV 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
typedef BOOL (APIENTRYP PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC) (void *dxObject, HANDLE shareHandle);
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
typedef HANDLE (APIENTRYP PFNWGLUXDXOPENDEVICENVPROC) (void *dxDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
typedef BOOL (APIENTRYP PFNWGLUXDXCLOSEDEVICENVPROC) (HANDLE hDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
typedef HANDLE (APIENTRYP PFNWGLUXDXREGISTEROBJECTNVPROC) (HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNREGISTEROBJECTNVPROC) (HANDLE hDevice, HANDLE hObject);
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
typedef BOOL (APIENTRYP PFNWGLUXDXOBJECTACCESSNVPROC) (HANDLE hObject, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
extern PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC wglDXSetResourceShareHandleNV;
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
extern PFNWGLUXDXOPENDEVICENVPROC wglDXOpenDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
extern PFNWGLUXDXCLOSEDEVICENVPROC wglDXCloseDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
extern PFNWGLUXDXREGISTEROBJECTNVPROC wglDXRegisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
extern PFNWGLUXDXUNREGISTEROBJECTNVPROC wglDXUnregisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
extern PFNWGLUXDXOBJECTACCESSNVPROC wglDXObjectAccessNV;
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
extern PFNWGLUXDXLOCKOBJECTSNVPROC wglDXLockObjectsNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
extern PFNWGLUXDXUNLOCKOBJECTSNVPROC wglDXUnlockObjectsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_NV_DX_interop__
#define __GLUX_WGL_NV_DX_interop__

GLUX_NEW_PLUGIN(WGL_NV_DX_interop);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_ACCESS_READ_ONLY_NV
#  define WGL_ACCESS_READ_ONLY_NV 0x00000000
#endif
#ifndef WGL_ACCESS_READ_WRITE_NV
#  define WGL_ACCESS_READ_WRITE_NV 0x00000001
#endif
#ifndef WGL_ACCESS_WRITE_DISCARD_NV
#  define WGL_ACCESS_WRITE_DISCARD_NV 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
typedef BOOL (APIENTRYP PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC) (void *dxObject, HANDLE shareHandle);
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
typedef HANDLE (APIENTRYP PFNWGLUXDXOPENDEVICENVPROC) (void *dxDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
typedef BOOL (APIENTRYP PFNWGLUXDXCLOSEDEVICENVPROC) (HANDLE hDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
typedef HANDLE (APIENTRYP PFNWGLUXDXREGISTEROBJECTNVPROC) (HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNREGISTEROBJECTNVPROC) (HANDLE hDevice, HANDLE hObject);
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
typedef BOOL (APIENTRYP PFNWGLUXDXOBJECTACCESSNVPROC) (HANDLE hObject, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
extern PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC wglDXSetResourceShareHandleNV;
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
extern PFNWGLUXDXOPENDEVICENVPROC wglDXOpenDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
extern PFNWGLUXDXCLOSEDEVICENVPROC wglDXCloseDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
extern PFNWGLUXDXREGISTEROBJECTNVPROC wglDXRegisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
extern PFNWGLUXDXUNREGISTEROBJECTNVPROC wglDXUnregisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
extern PFNWGLUXDXOBJECTACCESSNVPROC wglDXObjectAccessNV;
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
extern PFNWGLUXDXLOCKOBJECTSNVPROC wglDXLockObjectsNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
extern PFNWGLUXDXUNLOCKOBJECTSNVPROC wglDXUnlockObjectsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:21 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_NV_DX_interop__
#define __GLUX_WGL_NV_DX_interop__

GLUX_NEW_PLUGIN(WGL_NV_DX_interop);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_ACCESS_READ_ONLY_NV
#  define WGL_ACCESS_READ_ONLY_NV 0x00000000
#endif
#ifndef WGL_ACCESS_READ_WRITE_NV
#  define WGL_ACCESS_READ_WRITE_NV 0x00000001
#endif
#ifndef WGL_ACCESS_WRITE_DISCARD_NV
#  define WGL_ACCESS_WRITE_DISCARD_NV 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
typedef BOOL (APIENTRYP PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC) (void *dxObject, HANDLE shareHandle);
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
typedef HANDLE (APIENTRYP PFNWGLUXDXOPENDEVICENVPROC) (void *dxDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
typedef BOOL (APIENTRYP PFNWGLUXDXCLOSEDEVICENVPROC) (HANDLE hDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
typedef HANDLE (APIENTRYP PFNWGLUXDXREGISTEROBJECTNVPROC) (HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNREGISTEROBJECTNVPROC) (HANDLE hDevice, HANDLE hObject);
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
typedef BOOL (APIENTRYP PFNWGLUXDXOBJECTACCESSNVPROC) (HANDLE hObject, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
extern PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC wglDXSetResourceShareHandleNV;
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
extern PFNWGLUXDXOPENDEVICENVPROC wglDXOpenDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
extern PFNWGLUXDXCLOSEDEVICENVPROC wglDXCloseDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
extern PFNWGLUXDXREGISTEROBJECTNVPROC wglDXRegisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
extern PFNWGLUXDXUNREGISTEROBJECTNVPROC wglDXUnregisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
extern PFNWGLUXDXOBJECTACCESSNVPROC wglDXObjectAccessNV;
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
extern PFNWGLUXDXLOCKOBJECTSNVPROC wglDXLockObjectsNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
extern PFNWGLUXDXUNLOCKOBJECTSNVPROC wglDXUnlockObjectsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_NV_DX_interop__
#define __GLUX_WGL_NV_DX_interop__

GLUX_NEW_PLUGIN(WGL_NV_DX_interop);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_ACCESS_READ_ONLY_NV
#  define WGL_ACCESS_READ_ONLY_NV 0x00000000
#endif
#ifndef WGL_ACCESS_READ_WRITE_NV
#  define WGL_ACCESS_READ_WRITE_NV 0x00000001
#endif
#ifndef WGL_ACCESS_WRITE_DISCARD_NV
#  define WGL_ACCESS_WRITE_DISCARD_NV 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
typedef BOOL (APIENTRYP PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC) (void *dxObject, HANDLE shareHandle);
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
typedef HANDLE (APIENTRYP PFNWGLUXDXOPENDEVICENVPROC) (void *dxDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
typedef BOOL (APIENTRYP PFNWGLUXDXCLOSEDEVICENVPROC) (HANDLE hDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
typedef HANDLE (APIENTRYP PFNWGLUXDXREGISTEROBJECTNVPROC) (HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNREGISTEROBJECTNVPROC) (HANDLE hDevice, HANDLE hObject);
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
typedef BOOL (APIENTRYP PFNWGLUXDXOBJECTACCESSNVPROC) (HANDLE hObject, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
extern PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC wglDXSetResourceShareHandleNV;
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
extern PFNWGLUXDXOPENDEVICENVPROC wglDXOpenDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
extern PFNWGLUXDXCLOSEDEVICENVPROC wglDXCloseDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
extern PFNWGLUXDXREGISTEROBJECTNVPROC wglDXRegisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
extern PFNWGLUXDXUNREGISTEROBJECTNVPROC wglDXUnregisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
extern PFNWGLUXDXOBJECTACCESSNVPROC wglDXObjectAccessNV;
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
extern PFNWGLUXDXLOCKOBJECTSNVPROC wglDXLockObjectsNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
extern PFNWGLUXDXUNLOCKOBJECTSNVPROC wglDXUnlockObjectsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:09 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_NV_DX_interop__
#define __GLUX_WGL_NV_DX_interop__

GLUX_NEW_PLUGIN(WGL_NV_DX_interop);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_ACCESS_READ_ONLY_NV
#  define WGL_ACCESS_READ_ONLY_NV 0x00000000
#endif
#ifndef WGL_ACCESS_READ_WRITE_NV
#  define WGL_ACCESS_READ_WRITE_NV 0x00000001
#endif
#ifndef WGL_ACCESS_WRITE_DISCARD_NV
#  define WGL_ACCESS_WRITE_DISCARD_NV 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
typedef BOOL (APIENTRYP PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC) (void *dxObject, HANDLE shareHandle);
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
typedef HANDLE (APIENTRYP PFNWGLUXDXOPENDEVICENVPROC) (void *dxDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
typedef BOOL (APIENTRYP PFNWGLUXDXCLOSEDEVICENVPROC) (HANDLE hDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
typedef HANDLE (APIENTRYP PFNWGLUXDXREGISTEROBJECTNVPROC) (HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNREGISTEROBJECTNVPROC) (HANDLE hDevice, HANDLE hObject);
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
typedef BOOL (APIENTRYP PFNWGLUXDXOBJECTACCESSNVPROC) (HANDLE hObject, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
extern PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC wglDXSetResourceShareHandleNV;
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
extern PFNWGLUXDXOPENDEVICENVPROC wglDXOpenDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
extern PFNWGLUXDXCLOSEDEVICENVPROC wglDXCloseDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
extern PFNWGLUXDXREGISTEROBJECTNVPROC wglDXRegisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
extern PFNWGLUXDXUNREGISTEROBJECTNVPROC wglDXUnregisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
extern PFNWGLUXDXOBJECTACCESSNVPROC wglDXObjectAccessNV;
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
extern PFNWGLUXDXLOCKOBJECTSNVPROC wglDXLockObjectsNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
extern PFNWGLUXDXUNLOCKOBJECTSNVPROC wglDXUnlockObjectsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:24 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_NV_DX_interop__
#define __GLUX_WGL_NV_DX_interop__

GLUX_NEW_PLUGIN(WGL_NV_DX_interop);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_ACCESS_READ_ONLY_NV
#  define WGL_ACCESS_READ_ONLY_NV 0x00000000
#endif
#ifndef WGL_ACCESS_READ_WRITE_NV
#  define WGL_ACCESS_READ_WRITE_NV 0x00000001
#endif
#ifndef WGL_ACCESS_WRITE_DISCARD_NV
#  define WGL_ACCESS_WRITE_DISCARD_NV 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
typedef BOOL (APIENTRYP PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC) (void *dxObject, HANDLE shareHandle);
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
typedef HANDLE (APIENTRYP PFNWGLUXDXOPENDEVICENVPROC) (void *dxDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
typedef BOOL (APIENTRYP PFNWGLUXDXCLOSEDEVICENVPROC) (HANDLE hDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
typedef HANDLE (APIENTRYP PFNWGLUXDXREGISTEROBJECTNVPROC) (HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNREGISTEROBJECTNVPROC) (HANDLE hDevice, HANDLE hObject);
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
typedef BOOL (APIENTRYP PFNWGLUXDXOBJECTACCESSNVPROC) (HANDLE hObject, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
extern PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC wglDXSetResourceShareHandleNV;
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
extern PFNWGLUXDXOPENDEVICENVPROC wglDXOpenDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
extern PFNWGLUXDXCLOSEDEVICENVPROC wglDXCloseDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
extern PFNWGLUXDXREGISTEROBJECTNVPROC wglDXRegisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
extern PFNWGLUXDXUNREGISTEROBJECTNVPROC wglDXUnregisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
extern PFNWGLUXDXOBJECTACCESSNVPROC wglDXObjectAccessNV;
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
extern PFNWGLUXDXLOCKOBJECTSNVPROC wglDXLockObjectsNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
extern PFNWGLUXDXUNLOCKOBJECTSNVPROC wglDXUnlockObjectsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:52:05 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_NV_DX_interop__
#define __GLUX_WGL_NV_DX_interop__

GLUX_NEW_PLUGIN(WGL_NV_DX_interop);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_ACCESS_READ_ONLY_NV
#  define WGL_ACCESS_READ_ONLY_NV 0x00000000
#endif
#ifndef WGL_ACCESS_READ_WRITE_NV
#  define WGL_ACCESS_READ_WRITE_NV 0x00000001
#endif
#ifndef WGL_ACCESS_WRITE_DISCARD_NV
#  define WGL_ACCESS_WRITE_DISCARD_NV 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
typedef BOOL (APIENTRYP PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC) (void *dxObject, HANDLE shareHandle);
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
typedef HANDLE (APIENTRYP PFNWGLUXDXOPENDEVICENVPROC) (void *dxDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
typedef BOOL (APIENTRYP PFNWGLUXDXCLOSEDEVICENVPROC) (HANDLE hDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
typedef HANDLE (APIENTRYP PFNWGLUXDXREGISTEROBJECTNVPROC) (HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNREGISTEROBJECTNVPROC) (HANDLE hDevice, HANDLE hObject);
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
typedef BOOL (APIENTRYP PFNWGLUXDXOBJECTACCESSNVPROC) (HANDLE hObject, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
extern PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC wglDXSetResourceShareHandleNV;
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
extern PFNWGLUXDXOPENDEVICENVPROC wglDXOpenDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
extern PFNWGLUXDXCLOSEDEVICENVPROC wglDXCloseDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
extern PFNWGLUXDXREGISTEROBJECTNVPROC wglDXRegisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
extern PFNWGLUXDXUNREGISTEROBJECTNVPROC wglDXUnregisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
extern PFNWGLUXDXOBJECTACCESSNVPROC wglDXObjectAccessNV;
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
extern PFNWGLUXDXLOCKOBJECTSNVPROC wglDXLockObjectsNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
extern PFNWGLUXDXUNLOCKOBJECTSNVPROC wglDXUnlockObjectsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_NV_DX_interop__
#define __GLUX_WGL_NV_DX_interop__

GLUX_NEW_PLUGIN(WGL_NV_DX_interop);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_ACCESS_READ_ONLY_NV
#  define WGL_ACCESS_READ_ONLY_NV 0x00000000
#endif
#ifndef WGL_ACCESS_READ_WRITE_NV
#  define WGL_ACCESS_READ_WRITE_NV 0x00000001
#endif
#ifndef WGL_ACCESS_WRITE_DISCARD_NV
#  define WGL_ACCESS_WRITE_DISCARD_NV 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
typedef BOOL (APIENTRYP PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC) (void *dxObject, HANDLE shareHandle);
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
typedef HANDLE (APIENTRYP PFNWGLUXDXOPENDEVICENVPROC) (void *dxDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
typedef BOOL (APIENTRYP PFNWGLUXDXCLOSEDEVICENVPROC) (HANDLE hDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
typedef HANDLE (APIENTRYP PFNWGLUXDXREGISTEROBJECTNVPROC) (HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNREGISTEROBJECTNVPROC) (HANDLE hDevice, HANDLE hObject);
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
typedef BOOL (APIENTRYP PFNWGLUXDXOBJECTACCESSNVPROC) (HANDLE hObject, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
extern PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC wglDXSetResourceShareHandleNV;
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
extern PFNWGLUXDXOPENDEVICENVPROC wglDXOpenDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
extern PFNWGLUXDXCLOSEDEVICENVPROC wglDXCloseDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
extern PFNWGLUXDXREGISTEROBJECTNVPROC wglDXRegisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
extern PFNWGLUXDXUNREGISTEROBJECTNVPROC wglDXUnregisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
extern PFNWGLUXDXOBJECTACCESSNVPROC wglDXObjectAccessNV;
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
extern PFNWGLUXDXLOCKOBJECTSNVPROC wglDXLockObjectsNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
extern PFNWGLUXDXUNLOCKOBJECTSNVPROC wglDXUnlockObjectsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:06 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_NV_DX_interop__
#define __GLUX_WGL_NV_DX_interop__

GLUX_NEW_PLUGIN(WGL_NV_DX_interop);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_ACCESS_READ_ONLY_NV
#  define WGL_ACCESS_READ_ONLY_NV 0x00000000
#endif
#ifndef WGL_ACCESS_READ_WRITE_NV
#  define WGL_ACCESS_READ_WRITE_NV 0x00000001
#endif
#ifndef WGL_ACCESS_WRITE_DISCARD_NV
#  define WGL_ACCESS_WRITE_DISCARD_NV 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
typedef BOOL (APIENTRYP PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC) (void *dxObject, HANDLE shareHandle);
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
typedef HANDLE (APIENTRYP PFNWGLUXDXOPENDEVICENVPROC) (void *dxDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
typedef BOOL (APIENTRYP PFNWGLUXDXCLOSEDEVICENVPROC) (HANDLE hDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
typedef HANDLE (APIENTRYP PFNWGLUXDXREGISTEROBJECTNVPROC) (HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNREGISTEROBJECTNVPROC) (HANDLE hDevice, HANDLE hObject);
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
typedef BOOL (APIENTRYP PFNWGLUXDXOBJECTACCESSNVPROC) (HANDLE hObject, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
extern PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC wglDXSetResourceShareHandleNV;
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
extern PFNWGLUXDXOPENDEVICENVPROC wglDXOpenDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
extern PFNWGLUXDXCLOSEDEVICENVPROC wglDXCloseDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
extern PFNWGLUXDXREGISTEROBJECTNVPROC wglDXRegisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
extern PFNWGLUXDXUNREGISTEROBJECTNVPROC wglDXUnregisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
extern PFNWGLUXDXOBJECTACCESSNVPROC wglDXObjectAccessNV;
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
extern PFNWGLUXDXLOCKOBJECTSNVPROC wglDXLockObjectsNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
extern PFNWGLUXDXUNLOCKOBJECTSNVPROC wglDXUnlockObjectsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:26 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_NV_DX_interop__
#define __GLUX_WGL_NV_DX_interop__

GLUX_NEW_PLUGIN(WGL_NV_DX_interop);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_ACCESS_READ_ONLY_NV
#  define WGL_ACCESS_READ_ONLY_NV 0x00000000
#endif
#ifndef WGL_ACCESS_READ_WRITE_NV
#  define WGL_ACCESS_READ_WRITE_NV 0x00000001
#endif
#ifndef WGL_ACCESS_WRITE_DISCARD_NV
#  define WGL_ACCESS_WRITE_DISCARD_NV 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
typedef BOOL (APIENTRYP PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC) (void *dxObject, HANDLE shareHandle);
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
typedef HANDLE (APIENTRYP PFNWGLUXDXOPENDEVICENVPROC) (void *dxDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
typedef BOOL (APIENTRYP PFNWGLUXDXCLOSEDEVICENVPROC) (HANDLE hDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
typedef HANDLE (APIENTRYP PFNWGLUXDXREGISTEROBJECTNVPROC) (HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNREGISTEROBJECTNVPROC) (HANDLE hDevice, HANDLE hObject);
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
typedef BOOL (APIENTRYP PFNWGLUXDXOBJECTACCESSNVPROC) (HANDLE hObject, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
extern PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC wglDXSetResourceShareHandleNV;
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
extern PFNWGLUXDXOPENDEVICENVPROC wglDXOpenDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
extern PFNWGLUXDXCLOSEDEVICENVPROC wglDXCloseDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
extern PFNWGLUXDXREGISTEROBJECTNVPROC wglDXRegisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
extern PFNWGLUXDXUNREGISTEROBJECTNVPROC wglDXUnregisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
extern PFNWGLUXDXOBJECTACCESSNVPROC wglDXObjectAccessNV;
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
extern PFNWGLUXDXLOCKOBJECTSNVPROC wglDXLockObjectsNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
extern PFNWGLUXDXUNLOCKOBJECTSNVPROC wglDXUnlockObjectsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_NV_DX_interop__
#define __GLUX_WGL_NV_DX_interop__

GLUX_NEW_PLUGIN(WGL_NV_DX_interop);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_ACCESS_READ_ONLY_NV
#  define WGL_ACCESS_READ_ONLY_NV 0x00000000
#endif
#ifndef WGL_ACCESS_READ_WRITE_NV
#  define WGL_ACCESS_READ_WRITE_NV 0x00000001
#endif
#ifndef WGL_ACCESS_WRITE_DISCARD_NV
#  define WGL_ACCESS_WRITE_DISCARD_NV 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
typedef BOOL (APIENTRYP PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC) (void *dxObject, HANDLE shareHandle);
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
typedef HANDLE (APIENTRYP PFNWGLUXDXOPENDEVICENVPROC) (void *dxDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
typedef BOOL (APIENTRYP PFNWGLUXDXCLOSEDEVICENVPROC) (HANDLE hDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
typedef HANDLE (APIENTRYP PFNWGLUXDXREGISTEROBJECTNVPROC) (HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNREGISTEROBJECTNVPROC) (HANDLE hDevice, HANDLE hObject);
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
typedef BOOL (APIENTRYP PFNWGLUXDXOBJECTACCESSNVPROC) (HANDLE hObject, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
extern PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC wglDXSetResourceShareHandleNV;
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
extern PFNWGLUXDXOPENDEVICENVPROC wglDXOpenDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
extern PFNWGLUXDXCLOSEDEVICENVPROC wglDXCloseDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
extern PFNWGLUXDXREGISTEROBJECTNVPROC wglDXRegisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
extern PFNWGLUXDXUNREGISTEROBJECTNVPROC wglDXUnregisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
extern PFNWGLUXDXOBJECTACCESSNVPROC wglDXObjectAccessNV;
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
extern PFNWGLUXDXLOCKOBJECTSNVPROC wglDXLockObjectsNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
extern PFNWGLUXDXUNLOCKOBJECTSNVPROC wglDXUnlockObjectsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:42:01 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_NV_DX_interop__
#define __GLUX_WGL_NV_DX_interop__

GLUX_NEW_PLUGIN(WGL_NV_DX_interop);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_ACCESS_READ_ONLY_NV
#  define WGL_ACCESS_READ_ONLY_NV 0x00000000
#endif
#ifndef WGL_ACCESS_READ_WRITE_NV
#  define WGL_ACCESS_READ_WRITE_NV 0x00000001
#endif
#ifndef WGL_ACCESS_WRITE_DISCARD_NV
#  define WGL_ACCESS_WRITE_DISCARD_NV 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
typedef BOOL (APIENTRYP PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC) (void *dxObject, HANDLE shareHandle);
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
typedef HANDLE (APIENTRYP PFNWGLUXDXOPENDEVICENVPROC) (void *dxDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
typedef BOOL (APIENTRYP PFNWGLUXDXCLOSEDEVICENVPROC) (HANDLE hDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
typedef HANDLE (APIENTRYP PFNWGLUXDXREGISTEROBJECTNVPROC) (HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNREGISTEROBJECTNVPROC) (HANDLE hDevice, HANDLE hObject);
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
typedef BOOL (APIENTRYP PFNWGLUXDXOBJECTACCESSNVPROC) (HANDLE hObject, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
extern PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC wglDXSetResourceShareHandleNV;
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
extern PFNWGLUXDXOPENDEVICENVPROC wglDXOpenDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
extern PFNWGLUXDXCLOSEDEVICENVPROC wglDXCloseDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
extern PFNWGLUXDXREGISTEROBJECTNVPROC wglDXRegisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
extern PFNWGLUXDXUNREGISTEROBJECTNVPROC wglDXUnregisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
extern PFNWGLUXDXOBJECTACCESSNVPROC wglDXObjectAccessNV;
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
extern PFNWGLUXDXLOCKOBJECTSNVPROC wglDXLockObjectsNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
extern PFNWGLUXDXUNLOCKOBJECTSNVPROC wglDXUnlockObjectsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:42 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_NV_DX_interop__
#define __GLUX_WGL_NV_DX_interop__

GLUX_NEW_PLUGIN(WGL_NV_DX_interop);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_ACCESS_READ_ONLY_NV
#  define WGL_ACCESS_READ_ONLY_NV 0x00000000
#endif
#ifndef WGL_ACCESS_READ_WRITE_NV
#  define WGL_ACCESS_READ_WRITE_NV 0x00000001
#endif
#ifndef WGL_ACCESS_WRITE_DISCARD_NV
#  define WGL_ACCESS_WRITE_DISCARD_NV 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
typedef BOOL (APIENTRYP PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC) (void *dxObject, HANDLE shareHandle);
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
typedef HANDLE (APIENTRYP PFNWGLUXDXOPENDEVICENVPROC) (void *dxDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
typedef BOOL (APIENTRYP PFNWGLUXDXCLOSEDEVICENVPROC) (HANDLE hDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
typedef HANDLE (APIENTRYP PFNWGLUXDXREGISTEROBJECTNVPROC) (HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNREGISTEROBJECTNVPROC) (HANDLE hDevice, HANDLE hObject);
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
typedef BOOL (APIENTRYP PFNWGLUXDXOBJECTACCESSNVPROC) (HANDLE hObject, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
extern PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC wglDXSetResourceShareHandleNV;
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
extern PFNWGLUXDXOPENDEVICENVPROC wglDXOpenDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
extern PFNWGLUXDXCLOSEDEVICENVPROC wglDXCloseDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
extern PFNWGLUXDXREGISTEROBJECTNVPROC wglDXRegisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
extern PFNWGLUXDXUNREGISTEROBJECTNVPROC wglDXUnregisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
extern PFNWGLUXDXOBJECTACCESSNVPROC wglDXObjectAccessNV;
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
extern PFNWGLUXDXLOCKOBJECTSNVPROC wglDXLockObjectsNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
extern PFNWGLUXDXUNLOCKOBJECTSNVPROC wglDXUnlockObjectsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:10:00 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_NV_DX_interop__
#define __GLUX_WGL_NV_DX_interop__

GLUX_NEW_PLUGIN(WGL_NV_DX_interop);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_ACCESS_READ_ONLY_NV
#  define WGL_ACCESS_READ_ONLY_NV 0x00000000
#endif
#ifndef WGL_ACCESS_READ_WRITE_NV
#  define WGL_ACCESS_READ_WRITE_NV 0x00000001
#endif
#ifndef WGL_ACCESS_WRITE_DISCARD_NV
#  define WGL_ACCESS_WRITE_DISCARD_NV 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
typedef BOOL (APIENTRYP PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC) (void *dxObject, HANDLE shareHandle);
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
typedef HANDLE (APIENTRYP PFNWGLUXDXOPENDEVICENVPROC) (void *dxDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
typedef BOOL (APIENTRYP PFNWGLUXDXCLOSEDEVICENVPROC) (HANDLE hDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
typedef HANDLE (APIENTRYP PFNWGLUXDXREGISTEROBJECTNVPROC) (HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNREGISTEROBJECTNVPROC) (HANDLE hDevice, HANDLE hObject);
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
typedef BOOL (APIENTRYP PFNWGLUXDXOBJECTACCESSNVPROC) (HANDLE hObject, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
extern PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC wglDXSetResourceShareHandleNV;
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
extern PFNWGLUXDXOPENDEVICENVPROC wglDXOpenDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
extern PFNWGLUXDXCLOSEDEVICENVPROC wglDXCloseDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
extern PFNWGLUXDXREGISTEROBJECTNVPROC wglDXRegisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
extern PFNWGLUXDXUNREGISTEROBJECTNVPROC wglDXUnregisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
extern PFNWGLUXDXOBJECTACCESSNVPROC wglDXObjectAccessNV;
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
extern PFNWGLUXDXLOCKOBJECTSNVPROC wglDXLockObjectsNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
extern PFNWGLUXDXUNLOCKOBJECTSNVPROC wglDXUnlockObjectsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:20:01 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_NV_DX_interop__
#define __GLUX_WGL_NV_DX_interop__

GLUX_NEW_PLUGIN(WGL_NV_DX_interop);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_ACCESS_READ_ONLY_NV
#  define WGL_ACCESS_READ_ONLY_NV 0x00000000
#endif
#ifndef WGL_ACCESS_READ_WRITE_NV
#  define WGL_ACCESS_READ_WRITE_NV 0x00000001
#endif
#ifndef WGL_ACCESS_WRITE_DISCARD_NV
#  define WGL_ACCESS_WRITE_DISCARD_NV 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
typedef BOOL (APIENTRYP PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC) (void *dxObject, HANDLE shareHandle);
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
typedef HANDLE (APIENTRYP PFNWGLUXDXOPENDEVICENVPROC) (void *dxDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
typedef BOOL (APIENTRYP PFNWGLUXDXCLOSEDEVICENVPROC) (HANDLE hDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
typedef HANDLE (APIENTRYP PFNWGLUXDXREGISTEROBJECTNVPROC) (HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNREGISTEROBJECTNVPROC) (HANDLE hDevice, HANDLE hObject);
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
typedef BOOL (APIENTRYP PFNWGLUXDXOBJECTACCESSNVPROC) (HANDLE hObject, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
extern PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC wglDXSetResourceShareHandleNV;
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
extern PFNWGLUXDXOPENDEVICENVPROC wglDXOpenDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
extern PFNWGLUXDXCLOSEDEVICENVPROC wglDXCloseDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
extern PFNWGLUXDXREGISTEROBJECTNVPROC wglDXRegisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
extern PFNWGLUXDXUNREGISTEROBJECTNVPROC wglDXUnregisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
extern PFNWGLUXDXOBJECTACCESSNVPROC wglDXObjectAccessNV;
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
extern PFNWGLUXDXLOCKOBJECTSNVPROC wglDXLockObjectsNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
extern PFNWGLUXDXUNLOCKOBJECTSNVPROC wglDXUnlockObjectsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:43:01 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_NV_DX_interop__
#define __GLUX_WGL_NV_DX_interop__

GLUX_NEW_PLUGIN(WGL_NV_DX_interop)
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_ACCESS_READ_ONLY_NV
#  define WGL_ACCESS_READ_ONLY_NV 0x00000000
#endif
#ifndef WGL_ACCESS_READ_WRITE_NV
#  define WGL_ACCESS_READ_WRITE_NV 0x00000001
#endif
#ifndef WGL_ACCESS_WRITE_DISCARD_NV
#  define WGL_ACCESS_WRITE_DISCARD_NV 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
typedef BOOL (APIENTRYP PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC) (void *dxObject, HANDLE shareHandle);
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
typedef HANDLE (APIENTRYP PFNWGLUXDXOPENDEVICENVPROC) (void *dxDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
typedef BOOL (APIENTRYP PFNWGLUXDXCLOSEDEVICENVPROC) (HANDLE hDevice);
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
typedef HANDLE (APIENTRYP PFNWGLUXDXREGISTEROBJECTNVPROC) (HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNREGISTEROBJECTNVPROC) (HANDLE hDevice, HANDLE hObject);
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
typedef BOOL (APIENTRYP PFNWGLUXDXOBJECTACCESSNVPROC) (HANDLE hObject, GLenum access);
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
typedef BOOL (APIENTRYP PFNWGLUXDXUNLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglDXSetResourceShareHandleNV
extern PFNWGLUXDXSETRESOURCESHAREHANDLENVPROC wglDXSetResourceShareHandleNV;
#endif
#ifndef __GLUX__GLFCT_wglDXOpenDeviceNV
extern PFNWGLUXDXOPENDEVICENVPROC wglDXOpenDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXCloseDeviceNV
extern PFNWGLUXDXCLOSEDEVICENVPROC wglDXCloseDeviceNV;
#endif
#ifndef __GLUX__GLFCT_wglDXRegisterObjectNV
extern PFNWGLUXDXREGISTEROBJECTNVPROC wglDXRegisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnregisterObjectNV
extern PFNWGLUXDXUNREGISTEROBJECTNVPROC wglDXUnregisterObjectNV;
#endif
#ifndef __GLUX__GLFCT_wglDXObjectAccessNV
extern PFNWGLUXDXOBJECTACCESSNVPROC wglDXObjectAccessNV;
#endif
#ifndef __GLUX__GLFCT_wglDXLockObjectsNV
extern PFNWGLUXDXLOCKOBJECTSNVPROC wglDXLockObjectsNV;
#endif
#ifndef __GLUX__GLFCT_wglDXUnlockObjectsNV
extern PFNWGLUXDXUNLOCKOBJECTSNVPROC wglDXUnlockObjectsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------
