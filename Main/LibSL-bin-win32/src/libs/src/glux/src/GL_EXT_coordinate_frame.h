
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:25 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_coordinate_frame__
#define __GLUX_GL_EXT_coordinate_frame__

GLUX_NEW_PLUGIN(GL_EXT_coordinate_frame);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TANGENT_ARRAY_EXT
#  define GL_TANGENT_ARRAY_EXT 0x8439
#endif
#ifndef GL_BINORMAL_ARRAY_EXT
#  define GL_BINORMAL_ARRAY_EXT 0x843A
#endif
#ifndef GL_CURRENT_TANGENT_EXT
#  define GL_CURRENT_TANGENT_EXT 0x843B
#endif
#ifndef GL_CURRENT_BINORMAL_EXT
#  define GL_CURRENT_BINORMAL_EXT 0x843C
#endif
#ifndef GL_TANGENT_ARRAY_TYPE_EXT
#  define GL_TANGENT_ARRAY_TYPE_EXT 0x843E
#endif
#ifndef GL_TANGENT_ARRAY_STRIDE_EXT
#  define GL_TANGENT_ARRAY_STRIDE_EXT 0x843F
#endif
#ifndef GL_BINORMAL_ARRAY_TYPE_EXT
#  define GL_BINORMAL_ARRAY_TYPE_EXT 0x8440
#endif
#ifndef GL_BINORMAL_ARRAY_STRIDE_EXT
#  define GL_BINORMAL_ARRAY_STRIDE_EXT 0x8441
#endif
#ifndef GL_TANGENT_ARRAY_POINTER_EXT
#  define GL_TANGENT_ARRAY_POINTER_EXT 0x8442
#endif
#ifndef GL_BINORMAL_ARRAY_POINTER_EXT
#  define GL_BINORMAL_ARRAY_POINTER_EXT 0x8443
#endif
#ifndef GL_MAP1_TANGENT_EXT
#  define GL_MAP1_TANGENT_EXT 0x8444
#endif
#ifndef GL_MAP2_TANGENT_EXT
#  define GL_MAP2_TANGENT_EXT 0x8445
#endif
#ifndef GL_MAP1_BINORMAL_EXT
#  define GL_MAP1_BINORMAL_EXT 0x8446
#endif
#ifndef GL_MAP2_BINORMAL_EXT
#  define GL_MAP2_BINORMAL_EXT 0x8447
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTangent3bEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
typedef void (APIENTRYP PFNGLUXTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
typedef void (APIENTRYP PFNGLUXBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTangent3bEXT
extern PFNGLUXTANGENT3BEXTPROC glTangent3bEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
extern PFNGLUXTANGENT3BVEXTPROC glTangent3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
extern PFNGLUXTANGENT3DEXTPROC glTangent3dEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
extern PFNGLUXTANGENT3DVEXTPROC glTangent3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
extern PFNGLUXTANGENT3FEXTPROC glTangent3fEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
extern PFNGLUXTANGENT3FVEXTPROC glTangent3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
extern PFNGLUXTANGENT3IEXTPROC glTangent3iEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
extern PFNGLUXTANGENT3IVEXTPROC glTangent3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
extern PFNGLUXTANGENT3SEXTPROC glTangent3sEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
extern PFNGLUXTANGENT3SVEXTPROC glTangent3svEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
extern PFNGLUXBINORMAL3BEXTPROC glBinormal3bEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
extern PFNGLUXBINORMAL3BVEXTPROC glBinormal3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
extern PFNGLUXBINORMAL3DEXTPROC glBinormal3dEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
extern PFNGLUXBINORMAL3DVEXTPROC glBinormal3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
extern PFNGLUXBINORMAL3FEXTPROC glBinormal3fEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
extern PFNGLUXBINORMAL3FVEXTPROC glBinormal3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
extern PFNGLUXBINORMAL3IEXTPROC glBinormal3iEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
extern PFNGLUXBINORMAL3IVEXTPROC glBinormal3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
extern PFNGLUXBINORMAL3SEXTPROC glBinormal3sEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
extern PFNGLUXBINORMAL3SVEXTPROC glBinormal3svEXT;
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
extern PFNGLUXTANGENTPOINTEREXTPROC glTangentPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
extern PFNGLUXBINORMALPOINTEREXTPROC glBinormalPointerEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:43 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_coordinate_frame__
#define __GLUX_GL_EXT_coordinate_frame__

GLUX_NEW_PLUGIN(GL_EXT_coordinate_frame);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TANGENT_ARRAY_EXT
#  define GL_TANGENT_ARRAY_EXT 0x8439
#endif
#ifndef GL_BINORMAL_ARRAY_EXT
#  define GL_BINORMAL_ARRAY_EXT 0x843A
#endif
#ifndef GL_CURRENT_TANGENT_EXT
#  define GL_CURRENT_TANGENT_EXT 0x843B
#endif
#ifndef GL_CURRENT_BINORMAL_EXT
#  define GL_CURRENT_BINORMAL_EXT 0x843C
#endif
#ifndef GL_TANGENT_ARRAY_TYPE_EXT
#  define GL_TANGENT_ARRAY_TYPE_EXT 0x843E
#endif
#ifndef GL_TANGENT_ARRAY_STRIDE_EXT
#  define GL_TANGENT_ARRAY_STRIDE_EXT 0x843F
#endif
#ifndef GL_BINORMAL_ARRAY_TYPE_EXT
#  define GL_BINORMAL_ARRAY_TYPE_EXT 0x8440
#endif
#ifndef GL_BINORMAL_ARRAY_STRIDE_EXT
#  define GL_BINORMAL_ARRAY_STRIDE_EXT 0x8441
#endif
#ifndef GL_TANGENT_ARRAY_POINTER_EXT
#  define GL_TANGENT_ARRAY_POINTER_EXT 0x8442
#endif
#ifndef GL_BINORMAL_ARRAY_POINTER_EXT
#  define GL_BINORMAL_ARRAY_POINTER_EXT 0x8443
#endif
#ifndef GL_MAP1_TANGENT_EXT
#  define GL_MAP1_TANGENT_EXT 0x8444
#endif
#ifndef GL_MAP2_TANGENT_EXT
#  define GL_MAP2_TANGENT_EXT 0x8445
#endif
#ifndef GL_MAP1_BINORMAL_EXT
#  define GL_MAP1_BINORMAL_EXT 0x8446
#endif
#ifndef GL_MAP2_BINORMAL_EXT
#  define GL_MAP2_BINORMAL_EXT 0x8447
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTangent3bEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
typedef void (APIENTRYP PFNGLUXTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
typedef void (APIENTRYP PFNGLUXBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTangent3bEXT
extern PFNGLUXTANGENT3BEXTPROC glTangent3bEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
extern PFNGLUXTANGENT3BVEXTPROC glTangent3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
extern PFNGLUXTANGENT3DEXTPROC glTangent3dEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
extern PFNGLUXTANGENT3DVEXTPROC glTangent3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
extern PFNGLUXTANGENT3FEXTPROC glTangent3fEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
extern PFNGLUXTANGENT3FVEXTPROC glTangent3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
extern PFNGLUXTANGENT3IEXTPROC glTangent3iEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
extern PFNGLUXTANGENT3IVEXTPROC glTangent3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
extern PFNGLUXTANGENT3SEXTPROC glTangent3sEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
extern PFNGLUXTANGENT3SVEXTPROC glTangent3svEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
extern PFNGLUXBINORMAL3BEXTPROC glBinormal3bEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
extern PFNGLUXBINORMAL3BVEXTPROC glBinormal3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
extern PFNGLUXBINORMAL3DEXTPROC glBinormal3dEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
extern PFNGLUXBINORMAL3DVEXTPROC glBinormal3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
extern PFNGLUXBINORMAL3FEXTPROC glBinormal3fEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
extern PFNGLUXBINORMAL3FVEXTPROC glBinormal3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
extern PFNGLUXBINORMAL3IEXTPROC glBinormal3iEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
extern PFNGLUXBINORMAL3IVEXTPROC glBinormal3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
extern PFNGLUXBINORMAL3SEXTPROC glBinormal3sEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
extern PFNGLUXBINORMAL3SVEXTPROC glBinormal3svEXT;
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
extern PFNGLUXTANGENTPOINTEREXTPROC glTangentPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
extern PFNGLUXBINORMALPOINTEREXTPROC glBinormalPointerEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:53 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_coordinate_frame__
#define __GLUX_GL_EXT_coordinate_frame__

GLUX_NEW_PLUGIN(GL_EXT_coordinate_frame);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TANGENT_ARRAY_EXT
#  define GL_TANGENT_ARRAY_EXT 0x8439
#endif
#ifndef GL_BINORMAL_ARRAY_EXT
#  define GL_BINORMAL_ARRAY_EXT 0x843A
#endif
#ifndef GL_CURRENT_TANGENT_EXT
#  define GL_CURRENT_TANGENT_EXT 0x843B
#endif
#ifndef GL_CURRENT_BINORMAL_EXT
#  define GL_CURRENT_BINORMAL_EXT 0x843C
#endif
#ifndef GL_TANGENT_ARRAY_TYPE_EXT
#  define GL_TANGENT_ARRAY_TYPE_EXT 0x843E
#endif
#ifndef GL_TANGENT_ARRAY_STRIDE_EXT
#  define GL_TANGENT_ARRAY_STRIDE_EXT 0x843F
#endif
#ifndef GL_BINORMAL_ARRAY_TYPE_EXT
#  define GL_BINORMAL_ARRAY_TYPE_EXT 0x8440
#endif
#ifndef GL_BINORMAL_ARRAY_STRIDE_EXT
#  define GL_BINORMAL_ARRAY_STRIDE_EXT 0x8441
#endif
#ifndef GL_TANGENT_ARRAY_POINTER_EXT
#  define GL_TANGENT_ARRAY_POINTER_EXT 0x8442
#endif
#ifndef GL_BINORMAL_ARRAY_POINTER_EXT
#  define GL_BINORMAL_ARRAY_POINTER_EXT 0x8443
#endif
#ifndef GL_MAP1_TANGENT_EXT
#  define GL_MAP1_TANGENT_EXT 0x8444
#endif
#ifndef GL_MAP2_TANGENT_EXT
#  define GL_MAP2_TANGENT_EXT 0x8445
#endif
#ifndef GL_MAP1_BINORMAL_EXT
#  define GL_MAP1_BINORMAL_EXT 0x8446
#endif
#ifndef GL_MAP2_BINORMAL_EXT
#  define GL_MAP2_BINORMAL_EXT 0x8447
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTangent3bEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
typedef void (APIENTRYP PFNGLUXTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
typedef void (APIENTRYP PFNGLUXBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTangent3bEXT
extern PFNGLUXTANGENT3BEXTPROC glTangent3bEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
extern PFNGLUXTANGENT3BVEXTPROC glTangent3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
extern PFNGLUXTANGENT3DEXTPROC glTangent3dEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
extern PFNGLUXTANGENT3DVEXTPROC glTangent3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
extern PFNGLUXTANGENT3FEXTPROC glTangent3fEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
extern PFNGLUXTANGENT3FVEXTPROC glTangent3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
extern PFNGLUXTANGENT3IEXTPROC glTangent3iEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
extern PFNGLUXTANGENT3IVEXTPROC glTangent3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
extern PFNGLUXTANGENT3SEXTPROC glTangent3sEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
extern PFNGLUXTANGENT3SVEXTPROC glTangent3svEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
extern PFNGLUXBINORMAL3BEXTPROC glBinormal3bEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
extern PFNGLUXBINORMAL3BVEXTPROC glBinormal3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
extern PFNGLUXBINORMAL3DEXTPROC glBinormal3dEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
extern PFNGLUXBINORMAL3DVEXTPROC glBinormal3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
extern PFNGLUXBINORMAL3FEXTPROC glBinormal3fEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
extern PFNGLUXBINORMAL3FVEXTPROC glBinormal3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
extern PFNGLUXBINORMAL3IEXTPROC glBinormal3iEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
extern PFNGLUXBINORMAL3IVEXTPROC glBinormal3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
extern PFNGLUXBINORMAL3SEXTPROC glBinormal3sEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
extern PFNGLUXBINORMAL3SVEXTPROC glBinormal3svEXT;
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
extern PFNGLUXTANGENTPOINTEREXTPROC glTangentPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
extern PFNGLUXBINORMALPOINTEREXTPROC glBinormalPointerEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:13 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_coordinate_frame__
#define __GLUX_GL_EXT_coordinate_frame__

GLUX_NEW_PLUGIN(GL_EXT_coordinate_frame);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TANGENT_ARRAY_EXT
#  define GL_TANGENT_ARRAY_EXT 0x8439
#endif
#ifndef GL_BINORMAL_ARRAY_EXT
#  define GL_BINORMAL_ARRAY_EXT 0x843A
#endif
#ifndef GL_CURRENT_TANGENT_EXT
#  define GL_CURRENT_TANGENT_EXT 0x843B
#endif
#ifndef GL_CURRENT_BINORMAL_EXT
#  define GL_CURRENT_BINORMAL_EXT 0x843C
#endif
#ifndef GL_TANGENT_ARRAY_TYPE_EXT
#  define GL_TANGENT_ARRAY_TYPE_EXT 0x843E
#endif
#ifndef GL_TANGENT_ARRAY_STRIDE_EXT
#  define GL_TANGENT_ARRAY_STRIDE_EXT 0x843F
#endif
#ifndef GL_BINORMAL_ARRAY_TYPE_EXT
#  define GL_BINORMAL_ARRAY_TYPE_EXT 0x8440
#endif
#ifndef GL_BINORMAL_ARRAY_STRIDE_EXT
#  define GL_BINORMAL_ARRAY_STRIDE_EXT 0x8441
#endif
#ifndef GL_TANGENT_ARRAY_POINTER_EXT
#  define GL_TANGENT_ARRAY_POINTER_EXT 0x8442
#endif
#ifndef GL_BINORMAL_ARRAY_POINTER_EXT
#  define GL_BINORMAL_ARRAY_POINTER_EXT 0x8443
#endif
#ifndef GL_MAP1_TANGENT_EXT
#  define GL_MAP1_TANGENT_EXT 0x8444
#endif
#ifndef GL_MAP2_TANGENT_EXT
#  define GL_MAP2_TANGENT_EXT 0x8445
#endif
#ifndef GL_MAP1_BINORMAL_EXT
#  define GL_MAP1_BINORMAL_EXT 0x8446
#endif
#ifndef GL_MAP2_BINORMAL_EXT
#  define GL_MAP2_BINORMAL_EXT 0x8447
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTangent3bEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
typedef void (APIENTRYP PFNGLUXTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
typedef void (APIENTRYP PFNGLUXBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTangent3bEXT
extern PFNGLUXTANGENT3BEXTPROC glTangent3bEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
extern PFNGLUXTANGENT3BVEXTPROC glTangent3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
extern PFNGLUXTANGENT3DEXTPROC glTangent3dEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
extern PFNGLUXTANGENT3DVEXTPROC glTangent3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
extern PFNGLUXTANGENT3FEXTPROC glTangent3fEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
extern PFNGLUXTANGENT3FVEXTPROC glTangent3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
extern PFNGLUXTANGENT3IEXTPROC glTangent3iEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
extern PFNGLUXTANGENT3IVEXTPROC glTangent3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
extern PFNGLUXTANGENT3SEXTPROC glTangent3sEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
extern PFNGLUXTANGENT3SVEXTPROC glTangent3svEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
extern PFNGLUXBINORMAL3BEXTPROC glBinormal3bEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
extern PFNGLUXBINORMAL3BVEXTPROC glBinormal3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
extern PFNGLUXBINORMAL3DEXTPROC glBinormal3dEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
extern PFNGLUXBINORMAL3DVEXTPROC glBinormal3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
extern PFNGLUXBINORMAL3FEXTPROC glBinormal3fEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
extern PFNGLUXBINORMAL3FVEXTPROC glBinormal3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
extern PFNGLUXBINORMAL3IEXTPROC glBinormal3iEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
extern PFNGLUXBINORMAL3IVEXTPROC glBinormal3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
extern PFNGLUXBINORMAL3SEXTPROC glBinormal3sEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
extern PFNGLUXBINORMAL3SVEXTPROC glBinormal3svEXT;
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
extern PFNGLUXTANGENTPOINTEREXTPROC glTangentPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
extern PFNGLUXBINORMALPOINTEREXTPROC glBinormalPointerEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:29 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_coordinate_frame__
#define __GLUX_GL_EXT_coordinate_frame__

GLUX_NEW_PLUGIN(GL_EXT_coordinate_frame);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TANGENT_ARRAY_EXT
#  define GL_TANGENT_ARRAY_EXT 0x8439
#endif
#ifndef GL_BINORMAL_ARRAY_EXT
#  define GL_BINORMAL_ARRAY_EXT 0x843A
#endif
#ifndef GL_CURRENT_TANGENT_EXT
#  define GL_CURRENT_TANGENT_EXT 0x843B
#endif
#ifndef GL_CURRENT_BINORMAL_EXT
#  define GL_CURRENT_BINORMAL_EXT 0x843C
#endif
#ifndef GL_TANGENT_ARRAY_TYPE_EXT
#  define GL_TANGENT_ARRAY_TYPE_EXT 0x843E
#endif
#ifndef GL_TANGENT_ARRAY_STRIDE_EXT
#  define GL_TANGENT_ARRAY_STRIDE_EXT 0x843F
#endif
#ifndef GL_BINORMAL_ARRAY_TYPE_EXT
#  define GL_BINORMAL_ARRAY_TYPE_EXT 0x8440
#endif
#ifndef GL_BINORMAL_ARRAY_STRIDE_EXT
#  define GL_BINORMAL_ARRAY_STRIDE_EXT 0x8441
#endif
#ifndef GL_TANGENT_ARRAY_POINTER_EXT
#  define GL_TANGENT_ARRAY_POINTER_EXT 0x8442
#endif
#ifndef GL_BINORMAL_ARRAY_POINTER_EXT
#  define GL_BINORMAL_ARRAY_POINTER_EXT 0x8443
#endif
#ifndef GL_MAP1_TANGENT_EXT
#  define GL_MAP1_TANGENT_EXT 0x8444
#endif
#ifndef GL_MAP2_TANGENT_EXT
#  define GL_MAP2_TANGENT_EXT 0x8445
#endif
#ifndef GL_MAP1_BINORMAL_EXT
#  define GL_MAP1_BINORMAL_EXT 0x8446
#endif
#ifndef GL_MAP2_BINORMAL_EXT
#  define GL_MAP2_BINORMAL_EXT 0x8447
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTangent3bEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
typedef void (APIENTRYP PFNGLUXTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
typedef void (APIENTRYP PFNGLUXBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTangent3bEXT
extern PFNGLUXTANGENT3BEXTPROC glTangent3bEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
extern PFNGLUXTANGENT3BVEXTPROC glTangent3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
extern PFNGLUXTANGENT3DEXTPROC glTangent3dEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
extern PFNGLUXTANGENT3DVEXTPROC glTangent3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
extern PFNGLUXTANGENT3FEXTPROC glTangent3fEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
extern PFNGLUXTANGENT3FVEXTPROC glTangent3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
extern PFNGLUXTANGENT3IEXTPROC glTangent3iEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
extern PFNGLUXTANGENT3IVEXTPROC glTangent3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
extern PFNGLUXTANGENT3SEXTPROC glTangent3sEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
extern PFNGLUXTANGENT3SVEXTPROC glTangent3svEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
extern PFNGLUXBINORMAL3BEXTPROC glBinormal3bEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
extern PFNGLUXBINORMAL3BVEXTPROC glBinormal3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
extern PFNGLUXBINORMAL3DEXTPROC glBinormal3dEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
extern PFNGLUXBINORMAL3DVEXTPROC glBinormal3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
extern PFNGLUXBINORMAL3FEXTPROC glBinormal3fEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
extern PFNGLUXBINORMAL3FVEXTPROC glBinormal3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
extern PFNGLUXBINORMAL3IEXTPROC glBinormal3iEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
extern PFNGLUXBINORMAL3IVEXTPROC glBinormal3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
extern PFNGLUXBINORMAL3SEXTPROC glBinormal3sEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
extern PFNGLUXBINORMAL3SVEXTPROC glBinormal3svEXT;
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
extern PFNGLUXTANGENTPOINTEREXTPROC glTangentPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
extern PFNGLUXBINORMALPOINTEREXTPROC glBinormalPointerEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:32 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_coordinate_frame__
#define __GLUX_GL_EXT_coordinate_frame__

GLUX_NEW_PLUGIN(GL_EXT_coordinate_frame);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TANGENT_ARRAY_EXT
#  define GL_TANGENT_ARRAY_EXT 0x8439
#endif
#ifndef GL_BINORMAL_ARRAY_EXT
#  define GL_BINORMAL_ARRAY_EXT 0x843A
#endif
#ifndef GL_CURRENT_TANGENT_EXT
#  define GL_CURRENT_TANGENT_EXT 0x843B
#endif
#ifndef GL_CURRENT_BINORMAL_EXT
#  define GL_CURRENT_BINORMAL_EXT 0x843C
#endif
#ifndef GL_TANGENT_ARRAY_TYPE_EXT
#  define GL_TANGENT_ARRAY_TYPE_EXT 0x843E
#endif
#ifndef GL_TANGENT_ARRAY_STRIDE_EXT
#  define GL_TANGENT_ARRAY_STRIDE_EXT 0x843F
#endif
#ifndef GL_BINORMAL_ARRAY_TYPE_EXT
#  define GL_BINORMAL_ARRAY_TYPE_EXT 0x8440
#endif
#ifndef GL_BINORMAL_ARRAY_STRIDE_EXT
#  define GL_BINORMAL_ARRAY_STRIDE_EXT 0x8441
#endif
#ifndef GL_TANGENT_ARRAY_POINTER_EXT
#  define GL_TANGENT_ARRAY_POINTER_EXT 0x8442
#endif
#ifndef GL_BINORMAL_ARRAY_POINTER_EXT
#  define GL_BINORMAL_ARRAY_POINTER_EXT 0x8443
#endif
#ifndef GL_MAP1_TANGENT_EXT
#  define GL_MAP1_TANGENT_EXT 0x8444
#endif
#ifndef GL_MAP2_TANGENT_EXT
#  define GL_MAP2_TANGENT_EXT 0x8445
#endif
#ifndef GL_MAP1_BINORMAL_EXT
#  define GL_MAP1_BINORMAL_EXT 0x8446
#endif
#ifndef GL_MAP2_BINORMAL_EXT
#  define GL_MAP2_BINORMAL_EXT 0x8447
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTangent3bEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
typedef void (APIENTRYP PFNGLUXTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
typedef void (APIENTRYP PFNGLUXBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTangent3bEXT
extern PFNGLUXTANGENT3BEXTPROC glTangent3bEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
extern PFNGLUXTANGENT3BVEXTPROC glTangent3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
extern PFNGLUXTANGENT3DEXTPROC glTangent3dEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
extern PFNGLUXTANGENT3DVEXTPROC glTangent3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
extern PFNGLUXTANGENT3FEXTPROC glTangent3fEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
extern PFNGLUXTANGENT3FVEXTPROC glTangent3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
extern PFNGLUXTANGENT3IEXTPROC glTangent3iEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
extern PFNGLUXTANGENT3IVEXTPROC glTangent3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
extern PFNGLUXTANGENT3SEXTPROC glTangent3sEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
extern PFNGLUXTANGENT3SVEXTPROC glTangent3svEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
extern PFNGLUXBINORMAL3BEXTPROC glBinormal3bEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
extern PFNGLUXBINORMAL3BVEXTPROC glBinormal3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
extern PFNGLUXBINORMAL3DEXTPROC glBinormal3dEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
extern PFNGLUXBINORMAL3DVEXTPROC glBinormal3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
extern PFNGLUXBINORMAL3FEXTPROC glBinormal3fEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
extern PFNGLUXBINORMAL3FVEXTPROC glBinormal3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
extern PFNGLUXBINORMAL3IEXTPROC glBinormal3iEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
extern PFNGLUXBINORMAL3IVEXTPROC glBinormal3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
extern PFNGLUXBINORMAL3SEXTPROC glBinormal3sEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
extern PFNGLUXBINORMAL3SVEXTPROC glBinormal3svEXT;
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
extern PFNGLUXTANGENTPOINTEREXTPROC glTangentPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
extern PFNGLUXBINORMALPOINTEREXTPROC glBinormalPointerEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:54 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_coordinate_frame__
#define __GLUX_GL_EXT_coordinate_frame__

GLUX_NEW_PLUGIN(GL_EXT_coordinate_frame);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TANGENT_ARRAY_EXT
#  define GL_TANGENT_ARRAY_EXT 0x8439
#endif
#ifndef GL_BINORMAL_ARRAY_EXT
#  define GL_BINORMAL_ARRAY_EXT 0x843A
#endif
#ifndef GL_CURRENT_TANGENT_EXT
#  define GL_CURRENT_TANGENT_EXT 0x843B
#endif
#ifndef GL_CURRENT_BINORMAL_EXT
#  define GL_CURRENT_BINORMAL_EXT 0x843C
#endif
#ifndef GL_TANGENT_ARRAY_TYPE_EXT
#  define GL_TANGENT_ARRAY_TYPE_EXT 0x843E
#endif
#ifndef GL_TANGENT_ARRAY_STRIDE_EXT
#  define GL_TANGENT_ARRAY_STRIDE_EXT 0x843F
#endif
#ifndef GL_BINORMAL_ARRAY_TYPE_EXT
#  define GL_BINORMAL_ARRAY_TYPE_EXT 0x8440
#endif
#ifndef GL_BINORMAL_ARRAY_STRIDE_EXT
#  define GL_BINORMAL_ARRAY_STRIDE_EXT 0x8441
#endif
#ifndef GL_TANGENT_ARRAY_POINTER_EXT
#  define GL_TANGENT_ARRAY_POINTER_EXT 0x8442
#endif
#ifndef GL_BINORMAL_ARRAY_POINTER_EXT
#  define GL_BINORMAL_ARRAY_POINTER_EXT 0x8443
#endif
#ifndef GL_MAP1_TANGENT_EXT
#  define GL_MAP1_TANGENT_EXT 0x8444
#endif
#ifndef GL_MAP2_TANGENT_EXT
#  define GL_MAP2_TANGENT_EXT 0x8445
#endif
#ifndef GL_MAP1_BINORMAL_EXT
#  define GL_MAP1_BINORMAL_EXT 0x8446
#endif
#ifndef GL_MAP2_BINORMAL_EXT
#  define GL_MAP2_BINORMAL_EXT 0x8447
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTangent3bEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
typedef void (APIENTRYP PFNGLUXTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
typedef void (APIENTRYP PFNGLUXBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTangent3bEXT
extern PFNGLUXTANGENT3BEXTPROC glTangent3bEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
extern PFNGLUXTANGENT3BVEXTPROC glTangent3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
extern PFNGLUXTANGENT3DEXTPROC glTangent3dEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
extern PFNGLUXTANGENT3DVEXTPROC glTangent3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
extern PFNGLUXTANGENT3FEXTPROC glTangent3fEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
extern PFNGLUXTANGENT3FVEXTPROC glTangent3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
extern PFNGLUXTANGENT3IEXTPROC glTangent3iEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
extern PFNGLUXTANGENT3IVEXTPROC glTangent3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
extern PFNGLUXTANGENT3SEXTPROC glTangent3sEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
extern PFNGLUXTANGENT3SVEXTPROC glTangent3svEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
extern PFNGLUXBINORMAL3BEXTPROC glBinormal3bEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
extern PFNGLUXBINORMAL3BVEXTPROC glBinormal3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
extern PFNGLUXBINORMAL3DEXTPROC glBinormal3dEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
extern PFNGLUXBINORMAL3DVEXTPROC glBinormal3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
extern PFNGLUXBINORMAL3FEXTPROC glBinormal3fEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
extern PFNGLUXBINORMAL3FVEXTPROC glBinormal3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
extern PFNGLUXBINORMAL3IEXTPROC glBinormal3iEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
extern PFNGLUXBINORMAL3IVEXTPROC glBinormal3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
extern PFNGLUXBINORMAL3SEXTPROC glBinormal3sEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
extern PFNGLUXBINORMAL3SVEXTPROC glBinormal3svEXT;
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
extern PFNGLUXTANGENTPOINTEREXTPROC glTangentPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
extern PFNGLUXBINORMALPOINTEREXTPROC glBinormalPointerEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:28:03 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_coordinate_frame__
#define __GLUX_GL_EXT_coordinate_frame__

GLUX_NEW_PLUGIN(GL_EXT_coordinate_frame);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TANGENT_ARRAY_EXT
#  define GL_TANGENT_ARRAY_EXT 0x8439
#endif
#ifndef GL_BINORMAL_ARRAY_EXT
#  define GL_BINORMAL_ARRAY_EXT 0x843A
#endif
#ifndef GL_CURRENT_TANGENT_EXT
#  define GL_CURRENT_TANGENT_EXT 0x843B
#endif
#ifndef GL_CURRENT_BINORMAL_EXT
#  define GL_CURRENT_BINORMAL_EXT 0x843C
#endif
#ifndef GL_TANGENT_ARRAY_TYPE_EXT
#  define GL_TANGENT_ARRAY_TYPE_EXT 0x843E
#endif
#ifndef GL_TANGENT_ARRAY_STRIDE_EXT
#  define GL_TANGENT_ARRAY_STRIDE_EXT 0x843F
#endif
#ifndef GL_BINORMAL_ARRAY_TYPE_EXT
#  define GL_BINORMAL_ARRAY_TYPE_EXT 0x8440
#endif
#ifndef GL_BINORMAL_ARRAY_STRIDE_EXT
#  define GL_BINORMAL_ARRAY_STRIDE_EXT 0x8441
#endif
#ifndef GL_TANGENT_ARRAY_POINTER_EXT
#  define GL_TANGENT_ARRAY_POINTER_EXT 0x8442
#endif
#ifndef GL_BINORMAL_ARRAY_POINTER_EXT
#  define GL_BINORMAL_ARRAY_POINTER_EXT 0x8443
#endif
#ifndef GL_MAP1_TANGENT_EXT
#  define GL_MAP1_TANGENT_EXT 0x8444
#endif
#ifndef GL_MAP2_TANGENT_EXT
#  define GL_MAP2_TANGENT_EXT 0x8445
#endif
#ifndef GL_MAP1_BINORMAL_EXT
#  define GL_MAP1_BINORMAL_EXT 0x8446
#endif
#ifndef GL_MAP2_BINORMAL_EXT
#  define GL_MAP2_BINORMAL_EXT 0x8447
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTangent3bEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
typedef void (APIENTRYP PFNGLUXTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
typedef void (APIENTRYP PFNGLUXBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTangent3bEXT
extern PFNGLUXTANGENT3BEXTPROC glTangent3bEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
extern PFNGLUXTANGENT3BVEXTPROC glTangent3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
extern PFNGLUXTANGENT3DEXTPROC glTangent3dEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
extern PFNGLUXTANGENT3DVEXTPROC glTangent3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
extern PFNGLUXTANGENT3FEXTPROC glTangent3fEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
extern PFNGLUXTANGENT3FVEXTPROC glTangent3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
extern PFNGLUXTANGENT3IEXTPROC glTangent3iEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
extern PFNGLUXTANGENT3IVEXTPROC glTangent3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
extern PFNGLUXTANGENT3SEXTPROC glTangent3sEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
extern PFNGLUXTANGENT3SVEXTPROC glTangent3svEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
extern PFNGLUXBINORMAL3BEXTPROC glBinormal3bEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
extern PFNGLUXBINORMAL3BVEXTPROC glBinormal3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
extern PFNGLUXBINORMAL3DEXTPROC glBinormal3dEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
extern PFNGLUXBINORMAL3DVEXTPROC glBinormal3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
extern PFNGLUXBINORMAL3FEXTPROC glBinormal3fEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
extern PFNGLUXBINORMAL3FVEXTPROC glBinormal3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
extern PFNGLUXBINORMAL3IEXTPROC glBinormal3iEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
extern PFNGLUXBINORMAL3IVEXTPROC glBinormal3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
extern PFNGLUXBINORMAL3SEXTPROC glBinormal3sEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
extern PFNGLUXBINORMAL3SVEXTPROC glBinormal3svEXT;
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
extern PFNGLUXTANGENTPOINTEREXTPROC glTangentPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
extern PFNGLUXBINORMALPOINTEREXTPROC glBinormalPointerEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:16:57 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_coordinate_frame__
#define __GLUX_GL_EXT_coordinate_frame__

GLUX_NEW_PLUGIN(GL_EXT_coordinate_frame);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TANGENT_ARRAY_EXT
#  define GL_TANGENT_ARRAY_EXT 0x8439
#endif
#ifndef GL_BINORMAL_ARRAY_EXT
#  define GL_BINORMAL_ARRAY_EXT 0x843A
#endif
#ifndef GL_CURRENT_TANGENT_EXT
#  define GL_CURRENT_TANGENT_EXT 0x843B
#endif
#ifndef GL_CURRENT_BINORMAL_EXT
#  define GL_CURRENT_BINORMAL_EXT 0x843C
#endif
#ifndef GL_TANGENT_ARRAY_TYPE_EXT
#  define GL_TANGENT_ARRAY_TYPE_EXT 0x843E
#endif
#ifndef GL_TANGENT_ARRAY_STRIDE_EXT
#  define GL_TANGENT_ARRAY_STRIDE_EXT 0x843F
#endif
#ifndef GL_BINORMAL_ARRAY_TYPE_EXT
#  define GL_BINORMAL_ARRAY_TYPE_EXT 0x8440
#endif
#ifndef GL_BINORMAL_ARRAY_STRIDE_EXT
#  define GL_BINORMAL_ARRAY_STRIDE_EXT 0x8441
#endif
#ifndef GL_TANGENT_ARRAY_POINTER_EXT
#  define GL_TANGENT_ARRAY_POINTER_EXT 0x8442
#endif
#ifndef GL_BINORMAL_ARRAY_POINTER_EXT
#  define GL_BINORMAL_ARRAY_POINTER_EXT 0x8443
#endif
#ifndef GL_MAP1_TANGENT_EXT
#  define GL_MAP1_TANGENT_EXT 0x8444
#endif
#ifndef GL_MAP2_TANGENT_EXT
#  define GL_MAP2_TANGENT_EXT 0x8445
#endif
#ifndef GL_MAP1_BINORMAL_EXT
#  define GL_MAP1_BINORMAL_EXT 0x8446
#endif
#ifndef GL_MAP2_BINORMAL_EXT
#  define GL_MAP2_BINORMAL_EXT 0x8447
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTangent3bEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
typedef void (APIENTRYP PFNGLUXTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
typedef void (APIENTRYP PFNGLUXBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTangent3bEXT
extern PFNGLUXTANGENT3BEXTPROC glTangent3bEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
extern PFNGLUXTANGENT3BVEXTPROC glTangent3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
extern PFNGLUXTANGENT3DEXTPROC glTangent3dEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
extern PFNGLUXTANGENT3DVEXTPROC glTangent3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
extern PFNGLUXTANGENT3FEXTPROC glTangent3fEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
extern PFNGLUXTANGENT3FVEXTPROC glTangent3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
extern PFNGLUXTANGENT3IEXTPROC glTangent3iEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
extern PFNGLUXTANGENT3IVEXTPROC glTangent3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
extern PFNGLUXTANGENT3SEXTPROC glTangent3sEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
extern PFNGLUXTANGENT3SVEXTPROC glTangent3svEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
extern PFNGLUXBINORMAL3BEXTPROC glBinormal3bEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
extern PFNGLUXBINORMAL3BVEXTPROC glBinormal3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
extern PFNGLUXBINORMAL3DEXTPROC glBinormal3dEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
extern PFNGLUXBINORMAL3DVEXTPROC glBinormal3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
extern PFNGLUXBINORMAL3FEXTPROC glBinormal3fEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
extern PFNGLUXBINORMAL3FVEXTPROC glBinormal3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
extern PFNGLUXBINORMAL3IEXTPROC glBinormal3iEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
extern PFNGLUXBINORMAL3IVEXTPROC glBinormal3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
extern PFNGLUXBINORMAL3SEXTPROC glBinormal3sEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
extern PFNGLUXBINORMAL3SVEXTPROC glBinormal3svEXT;
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
extern PFNGLUXTANGENTPOINTEREXTPROC glTangentPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
extern PFNGLUXBINORMALPOINTEREXTPROC glBinormalPointerEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_coordinate_frame__
#define __GLUX_GL_EXT_coordinate_frame__

GLUX_NEW_PLUGIN(GL_EXT_coordinate_frame);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TANGENT_ARRAY_EXT
#  define GL_TANGENT_ARRAY_EXT 0x8439
#endif
#ifndef GL_BINORMAL_ARRAY_EXT
#  define GL_BINORMAL_ARRAY_EXT 0x843A
#endif
#ifndef GL_CURRENT_TANGENT_EXT
#  define GL_CURRENT_TANGENT_EXT 0x843B
#endif
#ifndef GL_CURRENT_BINORMAL_EXT
#  define GL_CURRENT_BINORMAL_EXT 0x843C
#endif
#ifndef GL_TANGENT_ARRAY_TYPE_EXT
#  define GL_TANGENT_ARRAY_TYPE_EXT 0x843E
#endif
#ifndef GL_TANGENT_ARRAY_STRIDE_EXT
#  define GL_TANGENT_ARRAY_STRIDE_EXT 0x843F
#endif
#ifndef GL_BINORMAL_ARRAY_TYPE_EXT
#  define GL_BINORMAL_ARRAY_TYPE_EXT 0x8440
#endif
#ifndef GL_BINORMAL_ARRAY_STRIDE_EXT
#  define GL_BINORMAL_ARRAY_STRIDE_EXT 0x8441
#endif
#ifndef GL_TANGENT_ARRAY_POINTER_EXT
#  define GL_TANGENT_ARRAY_POINTER_EXT 0x8442
#endif
#ifndef GL_BINORMAL_ARRAY_POINTER_EXT
#  define GL_BINORMAL_ARRAY_POINTER_EXT 0x8443
#endif
#ifndef GL_MAP1_TANGENT_EXT
#  define GL_MAP1_TANGENT_EXT 0x8444
#endif
#ifndef GL_MAP2_TANGENT_EXT
#  define GL_MAP2_TANGENT_EXT 0x8445
#endif
#ifndef GL_MAP1_BINORMAL_EXT
#  define GL_MAP1_BINORMAL_EXT 0x8446
#endif
#ifndef GL_MAP2_BINORMAL_EXT
#  define GL_MAP2_BINORMAL_EXT 0x8447
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTangent3bEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
typedef void (APIENTRYP PFNGLUXTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
typedef void (APIENTRYP PFNGLUXBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTangent3bEXT
extern PFNGLUXTANGENT3BEXTPROC glTangent3bEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
extern PFNGLUXTANGENT3BVEXTPROC glTangent3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
extern PFNGLUXTANGENT3DEXTPROC glTangent3dEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
extern PFNGLUXTANGENT3DVEXTPROC glTangent3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
extern PFNGLUXTANGENT3FEXTPROC glTangent3fEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
extern PFNGLUXTANGENT3FVEXTPROC glTangent3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
extern PFNGLUXTANGENT3IEXTPROC glTangent3iEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
extern PFNGLUXTANGENT3IVEXTPROC glTangent3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
extern PFNGLUXTANGENT3SEXTPROC glTangent3sEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
extern PFNGLUXTANGENT3SVEXTPROC glTangent3svEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
extern PFNGLUXBINORMAL3BEXTPROC glBinormal3bEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
extern PFNGLUXBINORMAL3BVEXTPROC glBinormal3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
extern PFNGLUXBINORMAL3DEXTPROC glBinormal3dEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
extern PFNGLUXBINORMAL3DVEXTPROC glBinormal3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
extern PFNGLUXBINORMAL3FEXTPROC glBinormal3fEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
extern PFNGLUXBINORMAL3FVEXTPROC glBinormal3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
extern PFNGLUXBINORMAL3IEXTPROC glBinormal3iEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
extern PFNGLUXBINORMAL3IVEXTPROC glBinormal3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
extern PFNGLUXBINORMAL3SEXTPROC glBinormal3sEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
extern PFNGLUXBINORMAL3SVEXTPROC glBinormal3svEXT;
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
extern PFNGLUXTANGENTPOINTEREXTPROC glTangentPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
extern PFNGLUXBINORMALPOINTEREXTPROC glBinormalPointerEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:20 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_coordinate_frame__
#define __GLUX_GL_EXT_coordinate_frame__

GLUX_NEW_PLUGIN(GL_EXT_coordinate_frame);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TANGENT_ARRAY_EXT
#  define GL_TANGENT_ARRAY_EXT 0x8439
#endif
#ifndef GL_BINORMAL_ARRAY_EXT
#  define GL_BINORMAL_ARRAY_EXT 0x843A
#endif
#ifndef GL_CURRENT_TANGENT_EXT
#  define GL_CURRENT_TANGENT_EXT 0x843B
#endif
#ifndef GL_CURRENT_BINORMAL_EXT
#  define GL_CURRENT_BINORMAL_EXT 0x843C
#endif
#ifndef GL_TANGENT_ARRAY_TYPE_EXT
#  define GL_TANGENT_ARRAY_TYPE_EXT 0x843E
#endif
#ifndef GL_TANGENT_ARRAY_STRIDE_EXT
#  define GL_TANGENT_ARRAY_STRIDE_EXT 0x843F
#endif
#ifndef GL_BINORMAL_ARRAY_TYPE_EXT
#  define GL_BINORMAL_ARRAY_TYPE_EXT 0x8440
#endif
#ifndef GL_BINORMAL_ARRAY_STRIDE_EXT
#  define GL_BINORMAL_ARRAY_STRIDE_EXT 0x8441
#endif
#ifndef GL_TANGENT_ARRAY_POINTER_EXT
#  define GL_TANGENT_ARRAY_POINTER_EXT 0x8442
#endif
#ifndef GL_BINORMAL_ARRAY_POINTER_EXT
#  define GL_BINORMAL_ARRAY_POINTER_EXT 0x8443
#endif
#ifndef GL_MAP1_TANGENT_EXT
#  define GL_MAP1_TANGENT_EXT 0x8444
#endif
#ifndef GL_MAP2_TANGENT_EXT
#  define GL_MAP2_TANGENT_EXT 0x8445
#endif
#ifndef GL_MAP1_BINORMAL_EXT
#  define GL_MAP1_BINORMAL_EXT 0x8446
#endif
#ifndef GL_MAP2_BINORMAL_EXT
#  define GL_MAP2_BINORMAL_EXT 0x8447
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTangent3bEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
typedef void (APIENTRYP PFNGLUXTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
typedef void (APIENTRYP PFNGLUXBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTangent3bEXT
extern PFNGLUXTANGENT3BEXTPROC glTangent3bEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
extern PFNGLUXTANGENT3BVEXTPROC glTangent3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
extern PFNGLUXTANGENT3DEXTPROC glTangent3dEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
extern PFNGLUXTANGENT3DVEXTPROC glTangent3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
extern PFNGLUXTANGENT3FEXTPROC glTangent3fEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
extern PFNGLUXTANGENT3FVEXTPROC glTangent3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
extern PFNGLUXTANGENT3IEXTPROC glTangent3iEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
extern PFNGLUXTANGENT3IVEXTPROC glTangent3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
extern PFNGLUXTANGENT3SEXTPROC glTangent3sEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
extern PFNGLUXTANGENT3SVEXTPROC glTangent3svEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
extern PFNGLUXBINORMAL3BEXTPROC glBinormal3bEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
extern PFNGLUXBINORMAL3BVEXTPROC glBinormal3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
extern PFNGLUXBINORMAL3DEXTPROC glBinormal3dEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
extern PFNGLUXBINORMAL3DVEXTPROC glBinormal3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
extern PFNGLUXBINORMAL3FEXTPROC glBinormal3fEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
extern PFNGLUXBINORMAL3FVEXTPROC glBinormal3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
extern PFNGLUXBINORMAL3IEXTPROC glBinormal3iEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
extern PFNGLUXBINORMAL3IVEXTPROC glBinormal3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
extern PFNGLUXBINORMAL3SEXTPROC glBinormal3sEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
extern PFNGLUXBINORMAL3SVEXTPROC glBinormal3svEXT;
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
extern PFNGLUXTANGENTPOINTEREXTPROC glTangentPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
extern PFNGLUXBINORMALPOINTEREXTPROC glBinormalPointerEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:00 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_coordinate_frame__
#define __GLUX_GL_EXT_coordinate_frame__

GLUX_NEW_PLUGIN(GL_EXT_coordinate_frame);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TANGENT_ARRAY_EXT
#  define GL_TANGENT_ARRAY_EXT 0x8439
#endif
#ifndef GL_BINORMAL_ARRAY_EXT
#  define GL_BINORMAL_ARRAY_EXT 0x843A
#endif
#ifndef GL_CURRENT_TANGENT_EXT
#  define GL_CURRENT_TANGENT_EXT 0x843B
#endif
#ifndef GL_CURRENT_BINORMAL_EXT
#  define GL_CURRENT_BINORMAL_EXT 0x843C
#endif
#ifndef GL_TANGENT_ARRAY_TYPE_EXT
#  define GL_TANGENT_ARRAY_TYPE_EXT 0x843E
#endif
#ifndef GL_TANGENT_ARRAY_STRIDE_EXT
#  define GL_TANGENT_ARRAY_STRIDE_EXT 0x843F
#endif
#ifndef GL_BINORMAL_ARRAY_TYPE_EXT
#  define GL_BINORMAL_ARRAY_TYPE_EXT 0x8440
#endif
#ifndef GL_BINORMAL_ARRAY_STRIDE_EXT
#  define GL_BINORMAL_ARRAY_STRIDE_EXT 0x8441
#endif
#ifndef GL_TANGENT_ARRAY_POINTER_EXT
#  define GL_TANGENT_ARRAY_POINTER_EXT 0x8442
#endif
#ifndef GL_BINORMAL_ARRAY_POINTER_EXT
#  define GL_BINORMAL_ARRAY_POINTER_EXT 0x8443
#endif
#ifndef GL_MAP1_TANGENT_EXT
#  define GL_MAP1_TANGENT_EXT 0x8444
#endif
#ifndef GL_MAP2_TANGENT_EXT
#  define GL_MAP2_TANGENT_EXT 0x8445
#endif
#ifndef GL_MAP1_BINORMAL_EXT
#  define GL_MAP1_BINORMAL_EXT 0x8446
#endif
#ifndef GL_MAP2_BINORMAL_EXT
#  define GL_MAP2_BINORMAL_EXT 0x8447
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTangent3bEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
typedef void (APIENTRYP PFNGLUXTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
typedef void (APIENTRYP PFNGLUXBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTangent3bEXT
extern PFNGLUXTANGENT3BEXTPROC glTangent3bEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
extern PFNGLUXTANGENT3BVEXTPROC glTangent3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
extern PFNGLUXTANGENT3DEXTPROC glTangent3dEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
extern PFNGLUXTANGENT3DVEXTPROC glTangent3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
extern PFNGLUXTANGENT3FEXTPROC glTangent3fEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
extern PFNGLUXTANGENT3FVEXTPROC glTangent3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
extern PFNGLUXTANGENT3IEXTPROC glTangent3iEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
extern PFNGLUXTANGENT3IVEXTPROC glTangent3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
extern PFNGLUXTANGENT3SEXTPROC glTangent3sEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
extern PFNGLUXTANGENT3SVEXTPROC glTangent3svEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
extern PFNGLUXBINORMAL3BEXTPROC glBinormal3bEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
extern PFNGLUXBINORMAL3BVEXTPROC glBinormal3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
extern PFNGLUXBINORMAL3DEXTPROC glBinormal3dEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
extern PFNGLUXBINORMAL3DVEXTPROC glBinormal3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
extern PFNGLUXBINORMAL3FEXTPROC glBinormal3fEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
extern PFNGLUXBINORMAL3FVEXTPROC glBinormal3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
extern PFNGLUXBINORMAL3IEXTPROC glBinormal3iEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
extern PFNGLUXBINORMAL3IVEXTPROC glBinormal3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
extern PFNGLUXBINORMAL3SEXTPROC glBinormal3sEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
extern PFNGLUXBINORMAL3SVEXTPROC glBinormal3svEXT;
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
extern PFNGLUXTANGENTPOINTEREXTPROC glTangentPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
extern PFNGLUXBINORMALPOINTEREXTPROC glBinormalPointerEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:09 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_coordinate_frame__
#define __GLUX_GL_EXT_coordinate_frame__

GLUX_NEW_PLUGIN(GL_EXT_coordinate_frame);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TANGENT_ARRAY_EXT
#  define GL_TANGENT_ARRAY_EXT 0x8439
#endif
#ifndef GL_BINORMAL_ARRAY_EXT
#  define GL_BINORMAL_ARRAY_EXT 0x843A
#endif
#ifndef GL_CURRENT_TANGENT_EXT
#  define GL_CURRENT_TANGENT_EXT 0x843B
#endif
#ifndef GL_CURRENT_BINORMAL_EXT
#  define GL_CURRENT_BINORMAL_EXT 0x843C
#endif
#ifndef GL_TANGENT_ARRAY_TYPE_EXT
#  define GL_TANGENT_ARRAY_TYPE_EXT 0x843E
#endif
#ifndef GL_TANGENT_ARRAY_STRIDE_EXT
#  define GL_TANGENT_ARRAY_STRIDE_EXT 0x843F
#endif
#ifndef GL_BINORMAL_ARRAY_TYPE_EXT
#  define GL_BINORMAL_ARRAY_TYPE_EXT 0x8440
#endif
#ifndef GL_BINORMAL_ARRAY_STRIDE_EXT
#  define GL_BINORMAL_ARRAY_STRIDE_EXT 0x8441
#endif
#ifndef GL_TANGENT_ARRAY_POINTER_EXT
#  define GL_TANGENT_ARRAY_POINTER_EXT 0x8442
#endif
#ifndef GL_BINORMAL_ARRAY_POINTER_EXT
#  define GL_BINORMAL_ARRAY_POINTER_EXT 0x8443
#endif
#ifndef GL_MAP1_TANGENT_EXT
#  define GL_MAP1_TANGENT_EXT 0x8444
#endif
#ifndef GL_MAP2_TANGENT_EXT
#  define GL_MAP2_TANGENT_EXT 0x8445
#endif
#ifndef GL_MAP1_BINORMAL_EXT
#  define GL_MAP1_BINORMAL_EXT 0x8446
#endif
#ifndef GL_MAP2_BINORMAL_EXT
#  define GL_MAP2_BINORMAL_EXT 0x8447
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTangent3bEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
typedef void (APIENTRYP PFNGLUXTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
typedef void (APIENTRYP PFNGLUXBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTangent3bEXT
extern PFNGLUXTANGENT3BEXTPROC glTangent3bEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
extern PFNGLUXTANGENT3BVEXTPROC glTangent3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
extern PFNGLUXTANGENT3DEXTPROC glTangent3dEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
extern PFNGLUXTANGENT3DVEXTPROC glTangent3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
extern PFNGLUXTANGENT3FEXTPROC glTangent3fEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
extern PFNGLUXTANGENT3FVEXTPROC glTangent3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
extern PFNGLUXTANGENT3IEXTPROC glTangent3iEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
extern PFNGLUXTANGENT3IVEXTPROC glTangent3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
extern PFNGLUXTANGENT3SEXTPROC glTangent3sEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
extern PFNGLUXTANGENT3SVEXTPROC glTangent3svEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
extern PFNGLUXBINORMAL3BEXTPROC glBinormal3bEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
extern PFNGLUXBINORMAL3BVEXTPROC glBinormal3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
extern PFNGLUXBINORMAL3DEXTPROC glBinormal3dEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
extern PFNGLUXBINORMAL3DVEXTPROC glBinormal3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
extern PFNGLUXBINORMAL3FEXTPROC glBinormal3fEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
extern PFNGLUXBINORMAL3FVEXTPROC glBinormal3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
extern PFNGLUXBINORMAL3IEXTPROC glBinormal3iEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
extern PFNGLUXBINORMAL3IVEXTPROC glBinormal3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
extern PFNGLUXBINORMAL3SEXTPROC glBinormal3sEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
extern PFNGLUXBINORMAL3SVEXTPROC glBinormal3svEXT;
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
extern PFNGLUXTANGENTPOINTEREXTPROC glTangentPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
extern PFNGLUXBINORMALPOINTEREXTPROC glBinormalPointerEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:22 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_coordinate_frame__
#define __GLUX_GL_EXT_coordinate_frame__

GLUX_NEW_PLUGIN(GL_EXT_coordinate_frame);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TANGENT_ARRAY_EXT
#  define GL_TANGENT_ARRAY_EXT 0x8439
#endif
#ifndef GL_BINORMAL_ARRAY_EXT
#  define GL_BINORMAL_ARRAY_EXT 0x843A
#endif
#ifndef GL_CURRENT_TANGENT_EXT
#  define GL_CURRENT_TANGENT_EXT 0x843B
#endif
#ifndef GL_CURRENT_BINORMAL_EXT
#  define GL_CURRENT_BINORMAL_EXT 0x843C
#endif
#ifndef GL_TANGENT_ARRAY_TYPE_EXT
#  define GL_TANGENT_ARRAY_TYPE_EXT 0x843E
#endif
#ifndef GL_TANGENT_ARRAY_STRIDE_EXT
#  define GL_TANGENT_ARRAY_STRIDE_EXT 0x843F
#endif
#ifndef GL_BINORMAL_ARRAY_TYPE_EXT
#  define GL_BINORMAL_ARRAY_TYPE_EXT 0x8440
#endif
#ifndef GL_BINORMAL_ARRAY_STRIDE_EXT
#  define GL_BINORMAL_ARRAY_STRIDE_EXT 0x8441
#endif
#ifndef GL_TANGENT_ARRAY_POINTER_EXT
#  define GL_TANGENT_ARRAY_POINTER_EXT 0x8442
#endif
#ifndef GL_BINORMAL_ARRAY_POINTER_EXT
#  define GL_BINORMAL_ARRAY_POINTER_EXT 0x8443
#endif
#ifndef GL_MAP1_TANGENT_EXT
#  define GL_MAP1_TANGENT_EXT 0x8444
#endif
#ifndef GL_MAP2_TANGENT_EXT
#  define GL_MAP2_TANGENT_EXT 0x8445
#endif
#ifndef GL_MAP1_BINORMAL_EXT
#  define GL_MAP1_BINORMAL_EXT 0x8446
#endif
#ifndef GL_MAP2_BINORMAL_EXT
#  define GL_MAP2_BINORMAL_EXT 0x8447
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTangent3bEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
typedef void (APIENTRYP PFNGLUXTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
typedef void (APIENTRYP PFNGLUXBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTangent3bEXT
extern PFNGLUXTANGENT3BEXTPROC glTangent3bEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
extern PFNGLUXTANGENT3BVEXTPROC glTangent3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
extern PFNGLUXTANGENT3DEXTPROC glTangent3dEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
extern PFNGLUXTANGENT3DVEXTPROC glTangent3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
extern PFNGLUXTANGENT3FEXTPROC glTangent3fEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
extern PFNGLUXTANGENT3FVEXTPROC glTangent3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
extern PFNGLUXTANGENT3IEXTPROC glTangent3iEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
extern PFNGLUXTANGENT3IVEXTPROC glTangent3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
extern PFNGLUXTANGENT3SEXTPROC glTangent3sEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
extern PFNGLUXTANGENT3SVEXTPROC glTangent3svEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
extern PFNGLUXBINORMAL3BEXTPROC glBinormal3bEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
extern PFNGLUXBINORMAL3BVEXTPROC glBinormal3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
extern PFNGLUXBINORMAL3DEXTPROC glBinormal3dEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
extern PFNGLUXBINORMAL3DVEXTPROC glBinormal3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
extern PFNGLUXBINORMAL3FEXTPROC glBinormal3fEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
extern PFNGLUXBINORMAL3FVEXTPROC glBinormal3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
extern PFNGLUXBINORMAL3IEXTPROC glBinormal3iEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
extern PFNGLUXBINORMAL3IVEXTPROC glBinormal3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
extern PFNGLUXBINORMAL3SEXTPROC glBinormal3sEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
extern PFNGLUXBINORMAL3SVEXTPROC glBinormal3svEXT;
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
extern PFNGLUXTANGENTPOINTEREXTPROC glTangentPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
extern PFNGLUXBINORMALPOINTEREXTPROC glBinormalPointerEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:52:01 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_coordinate_frame__
#define __GLUX_GL_EXT_coordinate_frame__

GLUX_NEW_PLUGIN(GL_EXT_coordinate_frame);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TANGENT_ARRAY_EXT
#  define GL_TANGENT_ARRAY_EXT 0x8439
#endif
#ifndef GL_BINORMAL_ARRAY_EXT
#  define GL_BINORMAL_ARRAY_EXT 0x843A
#endif
#ifndef GL_CURRENT_TANGENT_EXT
#  define GL_CURRENT_TANGENT_EXT 0x843B
#endif
#ifndef GL_CURRENT_BINORMAL_EXT
#  define GL_CURRENT_BINORMAL_EXT 0x843C
#endif
#ifndef GL_TANGENT_ARRAY_TYPE_EXT
#  define GL_TANGENT_ARRAY_TYPE_EXT 0x843E
#endif
#ifndef GL_TANGENT_ARRAY_STRIDE_EXT
#  define GL_TANGENT_ARRAY_STRIDE_EXT 0x843F
#endif
#ifndef GL_BINORMAL_ARRAY_TYPE_EXT
#  define GL_BINORMAL_ARRAY_TYPE_EXT 0x8440
#endif
#ifndef GL_BINORMAL_ARRAY_STRIDE_EXT
#  define GL_BINORMAL_ARRAY_STRIDE_EXT 0x8441
#endif
#ifndef GL_TANGENT_ARRAY_POINTER_EXT
#  define GL_TANGENT_ARRAY_POINTER_EXT 0x8442
#endif
#ifndef GL_BINORMAL_ARRAY_POINTER_EXT
#  define GL_BINORMAL_ARRAY_POINTER_EXT 0x8443
#endif
#ifndef GL_MAP1_TANGENT_EXT
#  define GL_MAP1_TANGENT_EXT 0x8444
#endif
#ifndef GL_MAP2_TANGENT_EXT
#  define GL_MAP2_TANGENT_EXT 0x8445
#endif
#ifndef GL_MAP1_BINORMAL_EXT
#  define GL_MAP1_BINORMAL_EXT 0x8446
#endif
#ifndef GL_MAP2_BINORMAL_EXT
#  define GL_MAP2_BINORMAL_EXT 0x8447
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTangent3bEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
typedef void (APIENTRYP PFNGLUXTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
typedef void (APIENTRYP PFNGLUXBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTangent3bEXT
extern PFNGLUXTANGENT3BEXTPROC glTangent3bEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
extern PFNGLUXTANGENT3BVEXTPROC glTangent3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
extern PFNGLUXTANGENT3DEXTPROC glTangent3dEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
extern PFNGLUXTANGENT3DVEXTPROC glTangent3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
extern PFNGLUXTANGENT3FEXTPROC glTangent3fEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
extern PFNGLUXTANGENT3FVEXTPROC glTangent3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
extern PFNGLUXTANGENT3IEXTPROC glTangent3iEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
extern PFNGLUXTANGENT3IVEXTPROC glTangent3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
extern PFNGLUXTANGENT3SEXTPROC glTangent3sEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
extern PFNGLUXTANGENT3SVEXTPROC glTangent3svEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
extern PFNGLUXBINORMAL3BEXTPROC glBinormal3bEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
extern PFNGLUXBINORMAL3BVEXTPROC glBinormal3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
extern PFNGLUXBINORMAL3DEXTPROC glBinormal3dEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
extern PFNGLUXBINORMAL3DVEXTPROC glBinormal3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
extern PFNGLUXBINORMAL3FEXTPROC glBinormal3fEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
extern PFNGLUXBINORMAL3FVEXTPROC glBinormal3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
extern PFNGLUXBINORMAL3IEXTPROC glBinormal3iEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
extern PFNGLUXBINORMAL3IVEXTPROC glBinormal3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
extern PFNGLUXBINORMAL3SEXTPROC glBinormal3sEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
extern PFNGLUXBINORMAL3SVEXTPROC glBinormal3svEXT;
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
extern PFNGLUXTANGENTPOINTEREXTPROC glTangentPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
extern PFNGLUXBINORMALPOINTEREXTPROC glBinormalPointerEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_coordinate_frame__
#define __GLUX_GL_EXT_coordinate_frame__

GLUX_NEW_PLUGIN(GL_EXT_coordinate_frame);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TANGENT_ARRAY_EXT
#  define GL_TANGENT_ARRAY_EXT 0x8439
#endif
#ifndef GL_BINORMAL_ARRAY_EXT
#  define GL_BINORMAL_ARRAY_EXT 0x843A
#endif
#ifndef GL_CURRENT_TANGENT_EXT
#  define GL_CURRENT_TANGENT_EXT 0x843B
#endif
#ifndef GL_CURRENT_BINORMAL_EXT
#  define GL_CURRENT_BINORMAL_EXT 0x843C
#endif
#ifndef GL_TANGENT_ARRAY_TYPE_EXT
#  define GL_TANGENT_ARRAY_TYPE_EXT 0x843E
#endif
#ifndef GL_TANGENT_ARRAY_STRIDE_EXT
#  define GL_TANGENT_ARRAY_STRIDE_EXT 0x843F
#endif
#ifndef GL_BINORMAL_ARRAY_TYPE_EXT
#  define GL_BINORMAL_ARRAY_TYPE_EXT 0x8440
#endif
#ifndef GL_BINORMAL_ARRAY_STRIDE_EXT
#  define GL_BINORMAL_ARRAY_STRIDE_EXT 0x8441
#endif
#ifndef GL_TANGENT_ARRAY_POINTER_EXT
#  define GL_TANGENT_ARRAY_POINTER_EXT 0x8442
#endif
#ifndef GL_BINORMAL_ARRAY_POINTER_EXT
#  define GL_BINORMAL_ARRAY_POINTER_EXT 0x8443
#endif
#ifndef GL_MAP1_TANGENT_EXT
#  define GL_MAP1_TANGENT_EXT 0x8444
#endif
#ifndef GL_MAP2_TANGENT_EXT
#  define GL_MAP2_TANGENT_EXT 0x8445
#endif
#ifndef GL_MAP1_BINORMAL_EXT
#  define GL_MAP1_BINORMAL_EXT 0x8446
#endif
#ifndef GL_MAP2_BINORMAL_EXT
#  define GL_MAP2_BINORMAL_EXT 0x8447
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTangent3bEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
typedef void (APIENTRYP PFNGLUXTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
typedef void (APIENTRYP PFNGLUXBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTangent3bEXT
extern PFNGLUXTANGENT3BEXTPROC glTangent3bEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
extern PFNGLUXTANGENT3BVEXTPROC glTangent3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
extern PFNGLUXTANGENT3DEXTPROC glTangent3dEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
extern PFNGLUXTANGENT3DVEXTPROC glTangent3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
extern PFNGLUXTANGENT3FEXTPROC glTangent3fEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
extern PFNGLUXTANGENT3FVEXTPROC glTangent3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
extern PFNGLUXTANGENT3IEXTPROC glTangent3iEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
extern PFNGLUXTANGENT3IVEXTPROC glTangent3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
extern PFNGLUXTANGENT3SEXTPROC glTangent3sEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
extern PFNGLUXTANGENT3SVEXTPROC glTangent3svEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
extern PFNGLUXBINORMAL3BEXTPROC glBinormal3bEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
extern PFNGLUXBINORMAL3BVEXTPROC glBinormal3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
extern PFNGLUXBINORMAL3DEXTPROC glBinormal3dEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
extern PFNGLUXBINORMAL3DVEXTPROC glBinormal3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
extern PFNGLUXBINORMAL3FEXTPROC glBinormal3fEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
extern PFNGLUXBINORMAL3FVEXTPROC glBinormal3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
extern PFNGLUXBINORMAL3IEXTPROC glBinormal3iEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
extern PFNGLUXBINORMAL3IVEXTPROC glBinormal3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
extern PFNGLUXBINORMAL3SEXTPROC glBinormal3sEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
extern PFNGLUXBINORMAL3SVEXTPROC glBinormal3svEXT;
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
extern PFNGLUXTANGENTPOINTEREXTPROC glTangentPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
extern PFNGLUXBINORMALPOINTEREXTPROC glBinormalPointerEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:04 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_coordinate_frame__
#define __GLUX_GL_EXT_coordinate_frame__

GLUX_NEW_PLUGIN(GL_EXT_coordinate_frame);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TANGENT_ARRAY_EXT
#  define GL_TANGENT_ARRAY_EXT 0x8439
#endif
#ifndef GL_BINORMAL_ARRAY_EXT
#  define GL_BINORMAL_ARRAY_EXT 0x843A
#endif
#ifndef GL_CURRENT_TANGENT_EXT
#  define GL_CURRENT_TANGENT_EXT 0x843B
#endif
#ifndef GL_CURRENT_BINORMAL_EXT
#  define GL_CURRENT_BINORMAL_EXT 0x843C
#endif
#ifndef GL_TANGENT_ARRAY_TYPE_EXT
#  define GL_TANGENT_ARRAY_TYPE_EXT 0x843E
#endif
#ifndef GL_TANGENT_ARRAY_STRIDE_EXT
#  define GL_TANGENT_ARRAY_STRIDE_EXT 0x843F
#endif
#ifndef GL_BINORMAL_ARRAY_TYPE_EXT
#  define GL_BINORMAL_ARRAY_TYPE_EXT 0x8440
#endif
#ifndef GL_BINORMAL_ARRAY_STRIDE_EXT
#  define GL_BINORMAL_ARRAY_STRIDE_EXT 0x8441
#endif
#ifndef GL_TANGENT_ARRAY_POINTER_EXT
#  define GL_TANGENT_ARRAY_POINTER_EXT 0x8442
#endif
#ifndef GL_BINORMAL_ARRAY_POINTER_EXT
#  define GL_BINORMAL_ARRAY_POINTER_EXT 0x8443
#endif
#ifndef GL_MAP1_TANGENT_EXT
#  define GL_MAP1_TANGENT_EXT 0x8444
#endif
#ifndef GL_MAP2_TANGENT_EXT
#  define GL_MAP2_TANGENT_EXT 0x8445
#endif
#ifndef GL_MAP1_BINORMAL_EXT
#  define GL_MAP1_BINORMAL_EXT 0x8446
#endif
#ifndef GL_MAP2_BINORMAL_EXT
#  define GL_MAP2_BINORMAL_EXT 0x8447
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTangent3bEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
typedef void (APIENTRYP PFNGLUXTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
typedef void (APIENTRYP PFNGLUXBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTangent3bEXT
extern PFNGLUXTANGENT3BEXTPROC glTangent3bEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
extern PFNGLUXTANGENT3BVEXTPROC glTangent3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
extern PFNGLUXTANGENT3DEXTPROC glTangent3dEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
extern PFNGLUXTANGENT3DVEXTPROC glTangent3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
extern PFNGLUXTANGENT3FEXTPROC glTangent3fEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
extern PFNGLUXTANGENT3FVEXTPROC glTangent3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
extern PFNGLUXTANGENT3IEXTPROC glTangent3iEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
extern PFNGLUXTANGENT3IVEXTPROC glTangent3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
extern PFNGLUXTANGENT3SEXTPROC glTangent3sEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
extern PFNGLUXTANGENT3SVEXTPROC glTangent3svEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
extern PFNGLUXBINORMAL3BEXTPROC glBinormal3bEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
extern PFNGLUXBINORMAL3BVEXTPROC glBinormal3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
extern PFNGLUXBINORMAL3DEXTPROC glBinormal3dEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
extern PFNGLUXBINORMAL3DVEXTPROC glBinormal3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
extern PFNGLUXBINORMAL3FEXTPROC glBinormal3fEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
extern PFNGLUXBINORMAL3FVEXTPROC glBinormal3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
extern PFNGLUXBINORMAL3IEXTPROC glBinormal3iEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
extern PFNGLUXBINORMAL3IVEXTPROC glBinormal3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
extern PFNGLUXBINORMAL3SEXTPROC glBinormal3sEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
extern PFNGLUXBINORMAL3SVEXTPROC glBinormal3svEXT;
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
extern PFNGLUXTANGENTPOINTEREXTPROC glTangentPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
extern PFNGLUXBINORMALPOINTEREXTPROC glBinormalPointerEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:24 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_coordinate_frame__
#define __GLUX_GL_EXT_coordinate_frame__

GLUX_NEW_PLUGIN(GL_EXT_coordinate_frame);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TANGENT_ARRAY_EXT
#  define GL_TANGENT_ARRAY_EXT 0x8439
#endif
#ifndef GL_BINORMAL_ARRAY_EXT
#  define GL_BINORMAL_ARRAY_EXT 0x843A
#endif
#ifndef GL_CURRENT_TANGENT_EXT
#  define GL_CURRENT_TANGENT_EXT 0x843B
#endif
#ifndef GL_CURRENT_BINORMAL_EXT
#  define GL_CURRENT_BINORMAL_EXT 0x843C
#endif
#ifndef GL_TANGENT_ARRAY_TYPE_EXT
#  define GL_TANGENT_ARRAY_TYPE_EXT 0x843E
#endif
#ifndef GL_TANGENT_ARRAY_STRIDE_EXT
#  define GL_TANGENT_ARRAY_STRIDE_EXT 0x843F
#endif
#ifndef GL_BINORMAL_ARRAY_TYPE_EXT
#  define GL_BINORMAL_ARRAY_TYPE_EXT 0x8440
#endif
#ifndef GL_BINORMAL_ARRAY_STRIDE_EXT
#  define GL_BINORMAL_ARRAY_STRIDE_EXT 0x8441
#endif
#ifndef GL_TANGENT_ARRAY_POINTER_EXT
#  define GL_TANGENT_ARRAY_POINTER_EXT 0x8442
#endif
#ifndef GL_BINORMAL_ARRAY_POINTER_EXT
#  define GL_BINORMAL_ARRAY_POINTER_EXT 0x8443
#endif
#ifndef GL_MAP1_TANGENT_EXT
#  define GL_MAP1_TANGENT_EXT 0x8444
#endif
#ifndef GL_MAP2_TANGENT_EXT
#  define GL_MAP2_TANGENT_EXT 0x8445
#endif
#ifndef GL_MAP1_BINORMAL_EXT
#  define GL_MAP1_BINORMAL_EXT 0x8446
#endif
#ifndef GL_MAP2_BINORMAL_EXT
#  define GL_MAP2_BINORMAL_EXT 0x8447
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTangent3bEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
typedef void (APIENTRYP PFNGLUXTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
typedef void (APIENTRYP PFNGLUXBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTangent3bEXT
extern PFNGLUXTANGENT3BEXTPROC glTangent3bEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
extern PFNGLUXTANGENT3BVEXTPROC glTangent3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
extern PFNGLUXTANGENT3DEXTPROC glTangent3dEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
extern PFNGLUXTANGENT3DVEXTPROC glTangent3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
extern PFNGLUXTANGENT3FEXTPROC glTangent3fEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
extern PFNGLUXTANGENT3FVEXTPROC glTangent3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
extern PFNGLUXTANGENT3IEXTPROC glTangent3iEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
extern PFNGLUXTANGENT3IVEXTPROC glTangent3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
extern PFNGLUXTANGENT3SEXTPROC glTangent3sEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
extern PFNGLUXTANGENT3SVEXTPROC glTangent3svEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
extern PFNGLUXBINORMAL3BEXTPROC glBinormal3bEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
extern PFNGLUXBINORMAL3BVEXTPROC glBinormal3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
extern PFNGLUXBINORMAL3DEXTPROC glBinormal3dEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
extern PFNGLUXBINORMAL3DVEXTPROC glBinormal3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
extern PFNGLUXBINORMAL3FEXTPROC glBinormal3fEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
extern PFNGLUXBINORMAL3FVEXTPROC glBinormal3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
extern PFNGLUXBINORMAL3IEXTPROC glBinormal3iEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
extern PFNGLUXBINORMAL3IVEXTPROC glBinormal3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
extern PFNGLUXBINORMAL3SEXTPROC glBinormal3sEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
extern PFNGLUXBINORMAL3SVEXTPROC glBinormal3svEXT;
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
extern PFNGLUXTANGENTPOINTEREXTPROC glTangentPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
extern PFNGLUXBINORMALPOINTEREXTPROC glBinormalPointerEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_coordinate_frame__
#define __GLUX_GL_EXT_coordinate_frame__

GLUX_NEW_PLUGIN(GL_EXT_coordinate_frame);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TANGENT_ARRAY_EXT
#  define GL_TANGENT_ARRAY_EXT 0x8439
#endif
#ifndef GL_BINORMAL_ARRAY_EXT
#  define GL_BINORMAL_ARRAY_EXT 0x843A
#endif
#ifndef GL_CURRENT_TANGENT_EXT
#  define GL_CURRENT_TANGENT_EXT 0x843B
#endif
#ifndef GL_CURRENT_BINORMAL_EXT
#  define GL_CURRENT_BINORMAL_EXT 0x843C
#endif
#ifndef GL_TANGENT_ARRAY_TYPE_EXT
#  define GL_TANGENT_ARRAY_TYPE_EXT 0x843E
#endif
#ifndef GL_TANGENT_ARRAY_STRIDE_EXT
#  define GL_TANGENT_ARRAY_STRIDE_EXT 0x843F
#endif
#ifndef GL_BINORMAL_ARRAY_TYPE_EXT
#  define GL_BINORMAL_ARRAY_TYPE_EXT 0x8440
#endif
#ifndef GL_BINORMAL_ARRAY_STRIDE_EXT
#  define GL_BINORMAL_ARRAY_STRIDE_EXT 0x8441
#endif
#ifndef GL_TANGENT_ARRAY_POINTER_EXT
#  define GL_TANGENT_ARRAY_POINTER_EXT 0x8442
#endif
#ifndef GL_BINORMAL_ARRAY_POINTER_EXT
#  define GL_BINORMAL_ARRAY_POINTER_EXT 0x8443
#endif
#ifndef GL_MAP1_TANGENT_EXT
#  define GL_MAP1_TANGENT_EXT 0x8444
#endif
#ifndef GL_MAP2_TANGENT_EXT
#  define GL_MAP2_TANGENT_EXT 0x8445
#endif
#ifndef GL_MAP1_BINORMAL_EXT
#  define GL_MAP1_BINORMAL_EXT 0x8446
#endif
#ifndef GL_MAP2_BINORMAL_EXT
#  define GL_MAP2_BINORMAL_EXT 0x8447
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTangent3bEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
typedef void (APIENTRYP PFNGLUXTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
typedef void (APIENTRYP PFNGLUXBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTangent3bEXT
extern PFNGLUXTANGENT3BEXTPROC glTangent3bEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
extern PFNGLUXTANGENT3BVEXTPROC glTangent3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
extern PFNGLUXTANGENT3DEXTPROC glTangent3dEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
extern PFNGLUXTANGENT3DVEXTPROC glTangent3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
extern PFNGLUXTANGENT3FEXTPROC glTangent3fEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
extern PFNGLUXTANGENT3FVEXTPROC glTangent3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
extern PFNGLUXTANGENT3IEXTPROC glTangent3iEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
extern PFNGLUXTANGENT3IVEXTPROC glTangent3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
extern PFNGLUXTANGENT3SEXTPROC glTangent3sEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
extern PFNGLUXTANGENT3SVEXTPROC glTangent3svEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
extern PFNGLUXBINORMAL3BEXTPROC glBinormal3bEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
extern PFNGLUXBINORMAL3BVEXTPROC glBinormal3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
extern PFNGLUXBINORMAL3DEXTPROC glBinormal3dEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
extern PFNGLUXBINORMAL3DVEXTPROC glBinormal3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
extern PFNGLUXBINORMAL3FEXTPROC glBinormal3fEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
extern PFNGLUXBINORMAL3FVEXTPROC glBinormal3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
extern PFNGLUXBINORMAL3IEXTPROC glBinormal3iEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
extern PFNGLUXBINORMAL3IVEXTPROC glBinormal3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
extern PFNGLUXBINORMAL3SEXTPROC glBinormal3sEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
extern PFNGLUXBINORMAL3SVEXTPROC glBinormal3svEXT;
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
extern PFNGLUXTANGENTPOINTEREXTPROC glTangentPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
extern PFNGLUXBINORMALPOINTEREXTPROC glBinormalPointerEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:41:58 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_coordinate_frame__
#define __GLUX_GL_EXT_coordinate_frame__

GLUX_NEW_PLUGIN(GL_EXT_coordinate_frame);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TANGENT_ARRAY_EXT
#  define GL_TANGENT_ARRAY_EXT 0x8439
#endif
#ifndef GL_BINORMAL_ARRAY_EXT
#  define GL_BINORMAL_ARRAY_EXT 0x843A
#endif
#ifndef GL_CURRENT_TANGENT_EXT
#  define GL_CURRENT_TANGENT_EXT 0x843B
#endif
#ifndef GL_CURRENT_BINORMAL_EXT
#  define GL_CURRENT_BINORMAL_EXT 0x843C
#endif
#ifndef GL_TANGENT_ARRAY_TYPE_EXT
#  define GL_TANGENT_ARRAY_TYPE_EXT 0x843E
#endif
#ifndef GL_TANGENT_ARRAY_STRIDE_EXT
#  define GL_TANGENT_ARRAY_STRIDE_EXT 0x843F
#endif
#ifndef GL_BINORMAL_ARRAY_TYPE_EXT
#  define GL_BINORMAL_ARRAY_TYPE_EXT 0x8440
#endif
#ifndef GL_BINORMAL_ARRAY_STRIDE_EXT
#  define GL_BINORMAL_ARRAY_STRIDE_EXT 0x8441
#endif
#ifndef GL_TANGENT_ARRAY_POINTER_EXT
#  define GL_TANGENT_ARRAY_POINTER_EXT 0x8442
#endif
#ifndef GL_BINORMAL_ARRAY_POINTER_EXT
#  define GL_BINORMAL_ARRAY_POINTER_EXT 0x8443
#endif
#ifndef GL_MAP1_TANGENT_EXT
#  define GL_MAP1_TANGENT_EXT 0x8444
#endif
#ifndef GL_MAP2_TANGENT_EXT
#  define GL_MAP2_TANGENT_EXT 0x8445
#endif
#ifndef GL_MAP1_BINORMAL_EXT
#  define GL_MAP1_BINORMAL_EXT 0x8446
#endif
#ifndef GL_MAP2_BINORMAL_EXT
#  define GL_MAP2_BINORMAL_EXT 0x8447
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTangent3bEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
typedef void (APIENTRYP PFNGLUXTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
typedef void (APIENTRYP PFNGLUXBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTangent3bEXT
extern PFNGLUXTANGENT3BEXTPROC glTangent3bEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
extern PFNGLUXTANGENT3BVEXTPROC glTangent3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
extern PFNGLUXTANGENT3DEXTPROC glTangent3dEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
extern PFNGLUXTANGENT3DVEXTPROC glTangent3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
extern PFNGLUXTANGENT3FEXTPROC glTangent3fEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
extern PFNGLUXTANGENT3FVEXTPROC glTangent3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
extern PFNGLUXTANGENT3IEXTPROC glTangent3iEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
extern PFNGLUXTANGENT3IVEXTPROC glTangent3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
extern PFNGLUXTANGENT3SEXTPROC glTangent3sEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
extern PFNGLUXTANGENT3SVEXTPROC glTangent3svEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
extern PFNGLUXBINORMAL3BEXTPROC glBinormal3bEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
extern PFNGLUXBINORMAL3BVEXTPROC glBinormal3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
extern PFNGLUXBINORMAL3DEXTPROC glBinormal3dEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
extern PFNGLUXBINORMAL3DVEXTPROC glBinormal3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
extern PFNGLUXBINORMAL3FEXTPROC glBinormal3fEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
extern PFNGLUXBINORMAL3FVEXTPROC glBinormal3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
extern PFNGLUXBINORMAL3IEXTPROC glBinormal3iEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
extern PFNGLUXBINORMAL3IVEXTPROC glBinormal3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
extern PFNGLUXBINORMAL3SEXTPROC glBinormal3sEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
extern PFNGLUXBINORMAL3SVEXTPROC glBinormal3svEXT;
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
extern PFNGLUXTANGENTPOINTEREXTPROC glTangentPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
extern PFNGLUXBINORMALPOINTEREXTPROC glBinormalPointerEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:39 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_coordinate_frame__
#define __GLUX_GL_EXT_coordinate_frame__

GLUX_NEW_PLUGIN(GL_EXT_coordinate_frame);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TANGENT_ARRAY_EXT
#  define GL_TANGENT_ARRAY_EXT 0x8439
#endif
#ifndef GL_BINORMAL_ARRAY_EXT
#  define GL_BINORMAL_ARRAY_EXT 0x843A
#endif
#ifndef GL_CURRENT_TANGENT_EXT
#  define GL_CURRENT_TANGENT_EXT 0x843B
#endif
#ifndef GL_CURRENT_BINORMAL_EXT
#  define GL_CURRENT_BINORMAL_EXT 0x843C
#endif
#ifndef GL_TANGENT_ARRAY_TYPE_EXT
#  define GL_TANGENT_ARRAY_TYPE_EXT 0x843E
#endif
#ifndef GL_TANGENT_ARRAY_STRIDE_EXT
#  define GL_TANGENT_ARRAY_STRIDE_EXT 0x843F
#endif
#ifndef GL_BINORMAL_ARRAY_TYPE_EXT
#  define GL_BINORMAL_ARRAY_TYPE_EXT 0x8440
#endif
#ifndef GL_BINORMAL_ARRAY_STRIDE_EXT
#  define GL_BINORMAL_ARRAY_STRIDE_EXT 0x8441
#endif
#ifndef GL_TANGENT_ARRAY_POINTER_EXT
#  define GL_TANGENT_ARRAY_POINTER_EXT 0x8442
#endif
#ifndef GL_BINORMAL_ARRAY_POINTER_EXT
#  define GL_BINORMAL_ARRAY_POINTER_EXT 0x8443
#endif
#ifndef GL_MAP1_TANGENT_EXT
#  define GL_MAP1_TANGENT_EXT 0x8444
#endif
#ifndef GL_MAP2_TANGENT_EXT
#  define GL_MAP2_TANGENT_EXT 0x8445
#endif
#ifndef GL_MAP1_BINORMAL_EXT
#  define GL_MAP1_BINORMAL_EXT 0x8446
#endif
#ifndef GL_MAP2_BINORMAL_EXT
#  define GL_MAP2_BINORMAL_EXT 0x8447
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTangent3bEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
typedef void (APIENTRYP PFNGLUXTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
typedef void (APIENTRYP PFNGLUXBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTangent3bEXT
extern PFNGLUXTANGENT3BEXTPROC glTangent3bEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
extern PFNGLUXTANGENT3BVEXTPROC glTangent3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
extern PFNGLUXTANGENT3DEXTPROC glTangent3dEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
extern PFNGLUXTANGENT3DVEXTPROC glTangent3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
extern PFNGLUXTANGENT3FEXTPROC glTangent3fEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
extern PFNGLUXTANGENT3FVEXTPROC glTangent3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
extern PFNGLUXTANGENT3IEXTPROC glTangent3iEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
extern PFNGLUXTANGENT3IVEXTPROC glTangent3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
extern PFNGLUXTANGENT3SEXTPROC glTangent3sEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
extern PFNGLUXTANGENT3SVEXTPROC glTangent3svEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
extern PFNGLUXBINORMAL3BEXTPROC glBinormal3bEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
extern PFNGLUXBINORMAL3BVEXTPROC glBinormal3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
extern PFNGLUXBINORMAL3DEXTPROC glBinormal3dEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
extern PFNGLUXBINORMAL3DVEXTPROC glBinormal3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
extern PFNGLUXBINORMAL3FEXTPROC glBinormal3fEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
extern PFNGLUXBINORMAL3FVEXTPROC glBinormal3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
extern PFNGLUXBINORMAL3IEXTPROC glBinormal3iEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
extern PFNGLUXBINORMAL3IVEXTPROC glBinormal3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
extern PFNGLUXBINORMAL3SEXTPROC glBinormal3sEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
extern PFNGLUXBINORMAL3SVEXTPROC glBinormal3svEXT;
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
extern PFNGLUXTANGENTPOINTEREXTPROC glTangentPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
extern PFNGLUXBINORMALPOINTEREXTPROC glBinormalPointerEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:09:58 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_coordinate_frame__
#define __GLUX_GL_EXT_coordinate_frame__

GLUX_NEW_PLUGIN(GL_EXT_coordinate_frame);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TANGENT_ARRAY_EXT
#  define GL_TANGENT_ARRAY_EXT 0x8439
#endif
#ifndef GL_BINORMAL_ARRAY_EXT
#  define GL_BINORMAL_ARRAY_EXT 0x843A
#endif
#ifndef GL_CURRENT_TANGENT_EXT
#  define GL_CURRENT_TANGENT_EXT 0x843B
#endif
#ifndef GL_CURRENT_BINORMAL_EXT
#  define GL_CURRENT_BINORMAL_EXT 0x843C
#endif
#ifndef GL_TANGENT_ARRAY_TYPE_EXT
#  define GL_TANGENT_ARRAY_TYPE_EXT 0x843E
#endif
#ifndef GL_TANGENT_ARRAY_STRIDE_EXT
#  define GL_TANGENT_ARRAY_STRIDE_EXT 0x843F
#endif
#ifndef GL_BINORMAL_ARRAY_TYPE_EXT
#  define GL_BINORMAL_ARRAY_TYPE_EXT 0x8440
#endif
#ifndef GL_BINORMAL_ARRAY_STRIDE_EXT
#  define GL_BINORMAL_ARRAY_STRIDE_EXT 0x8441
#endif
#ifndef GL_TANGENT_ARRAY_POINTER_EXT
#  define GL_TANGENT_ARRAY_POINTER_EXT 0x8442
#endif
#ifndef GL_BINORMAL_ARRAY_POINTER_EXT
#  define GL_BINORMAL_ARRAY_POINTER_EXT 0x8443
#endif
#ifndef GL_MAP1_TANGENT_EXT
#  define GL_MAP1_TANGENT_EXT 0x8444
#endif
#ifndef GL_MAP2_TANGENT_EXT
#  define GL_MAP2_TANGENT_EXT 0x8445
#endif
#ifndef GL_MAP1_BINORMAL_EXT
#  define GL_MAP1_BINORMAL_EXT 0x8446
#endif
#ifndef GL_MAP2_BINORMAL_EXT
#  define GL_MAP2_BINORMAL_EXT 0x8447
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTangent3bEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
typedef void (APIENTRYP PFNGLUXTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
typedef void (APIENTRYP PFNGLUXBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTangent3bEXT
extern PFNGLUXTANGENT3BEXTPROC glTangent3bEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
extern PFNGLUXTANGENT3BVEXTPROC glTangent3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
extern PFNGLUXTANGENT3DEXTPROC glTangent3dEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
extern PFNGLUXTANGENT3DVEXTPROC glTangent3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
extern PFNGLUXTANGENT3FEXTPROC glTangent3fEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
extern PFNGLUXTANGENT3FVEXTPROC glTangent3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
extern PFNGLUXTANGENT3IEXTPROC glTangent3iEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
extern PFNGLUXTANGENT3IVEXTPROC glTangent3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
extern PFNGLUXTANGENT3SEXTPROC glTangent3sEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
extern PFNGLUXTANGENT3SVEXTPROC glTangent3svEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
extern PFNGLUXBINORMAL3BEXTPROC glBinormal3bEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
extern PFNGLUXBINORMAL3BVEXTPROC glBinormal3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
extern PFNGLUXBINORMAL3DEXTPROC glBinormal3dEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
extern PFNGLUXBINORMAL3DVEXTPROC glBinormal3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
extern PFNGLUXBINORMAL3FEXTPROC glBinormal3fEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
extern PFNGLUXBINORMAL3FVEXTPROC glBinormal3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
extern PFNGLUXBINORMAL3IEXTPROC glBinormal3iEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
extern PFNGLUXBINORMAL3IVEXTPROC glBinormal3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
extern PFNGLUXBINORMAL3SEXTPROC glBinormal3sEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
extern PFNGLUXBINORMAL3SVEXTPROC glBinormal3svEXT;
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
extern PFNGLUXTANGENTPOINTEREXTPROC glTangentPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
extern PFNGLUXBINORMALPOINTEREXTPROC glBinormalPointerEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:19:59 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_coordinate_frame__
#define __GLUX_GL_EXT_coordinate_frame__

GLUX_NEW_PLUGIN(GL_EXT_coordinate_frame);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TANGENT_ARRAY_EXT
#  define GL_TANGENT_ARRAY_EXT 0x8439
#endif
#ifndef GL_BINORMAL_ARRAY_EXT
#  define GL_BINORMAL_ARRAY_EXT 0x843A
#endif
#ifndef GL_CURRENT_TANGENT_EXT
#  define GL_CURRENT_TANGENT_EXT 0x843B
#endif
#ifndef GL_CURRENT_BINORMAL_EXT
#  define GL_CURRENT_BINORMAL_EXT 0x843C
#endif
#ifndef GL_TANGENT_ARRAY_TYPE_EXT
#  define GL_TANGENT_ARRAY_TYPE_EXT 0x843E
#endif
#ifndef GL_TANGENT_ARRAY_STRIDE_EXT
#  define GL_TANGENT_ARRAY_STRIDE_EXT 0x843F
#endif
#ifndef GL_BINORMAL_ARRAY_TYPE_EXT
#  define GL_BINORMAL_ARRAY_TYPE_EXT 0x8440
#endif
#ifndef GL_BINORMAL_ARRAY_STRIDE_EXT
#  define GL_BINORMAL_ARRAY_STRIDE_EXT 0x8441
#endif
#ifndef GL_TANGENT_ARRAY_POINTER_EXT
#  define GL_TANGENT_ARRAY_POINTER_EXT 0x8442
#endif
#ifndef GL_BINORMAL_ARRAY_POINTER_EXT
#  define GL_BINORMAL_ARRAY_POINTER_EXT 0x8443
#endif
#ifndef GL_MAP1_TANGENT_EXT
#  define GL_MAP1_TANGENT_EXT 0x8444
#endif
#ifndef GL_MAP2_TANGENT_EXT
#  define GL_MAP2_TANGENT_EXT 0x8445
#endif
#ifndef GL_MAP1_BINORMAL_EXT
#  define GL_MAP1_BINORMAL_EXT 0x8446
#endif
#ifndef GL_MAP2_BINORMAL_EXT
#  define GL_MAP2_BINORMAL_EXT 0x8447
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTangent3bEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
typedef void (APIENTRYP PFNGLUXTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
typedef void (APIENTRYP PFNGLUXBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTangent3bEXT
extern PFNGLUXTANGENT3BEXTPROC glTangent3bEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
extern PFNGLUXTANGENT3BVEXTPROC glTangent3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
extern PFNGLUXTANGENT3DEXTPROC glTangent3dEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
extern PFNGLUXTANGENT3DVEXTPROC glTangent3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
extern PFNGLUXTANGENT3FEXTPROC glTangent3fEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
extern PFNGLUXTANGENT3FVEXTPROC glTangent3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
extern PFNGLUXTANGENT3IEXTPROC glTangent3iEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
extern PFNGLUXTANGENT3IVEXTPROC glTangent3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
extern PFNGLUXTANGENT3SEXTPROC glTangent3sEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
extern PFNGLUXTANGENT3SVEXTPROC glTangent3svEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
extern PFNGLUXBINORMAL3BEXTPROC glBinormal3bEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
extern PFNGLUXBINORMAL3BVEXTPROC glBinormal3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
extern PFNGLUXBINORMAL3DEXTPROC glBinormal3dEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
extern PFNGLUXBINORMAL3DVEXTPROC glBinormal3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
extern PFNGLUXBINORMAL3FEXTPROC glBinormal3fEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
extern PFNGLUXBINORMAL3FVEXTPROC glBinormal3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
extern PFNGLUXBINORMAL3IEXTPROC glBinormal3iEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
extern PFNGLUXBINORMAL3IVEXTPROC glBinormal3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
extern PFNGLUXBINORMAL3SEXTPROC glBinormal3sEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
extern PFNGLUXBINORMAL3SVEXTPROC glBinormal3svEXT;
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
extern PFNGLUXTANGENTPOINTEREXTPROC glTangentPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
extern PFNGLUXBINORMALPOINTEREXTPROC glBinormalPointerEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:42:57 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_coordinate_frame__
#define __GLUX_GL_EXT_coordinate_frame__

GLUX_NEW_PLUGIN(GL_EXT_coordinate_frame)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TANGENT_ARRAY_EXT
#  define GL_TANGENT_ARRAY_EXT 0x8439
#endif
#ifndef GL_BINORMAL_ARRAY_EXT
#  define GL_BINORMAL_ARRAY_EXT 0x843A
#endif
#ifndef GL_CURRENT_TANGENT_EXT
#  define GL_CURRENT_TANGENT_EXT 0x843B
#endif
#ifndef GL_CURRENT_BINORMAL_EXT
#  define GL_CURRENT_BINORMAL_EXT 0x843C
#endif
#ifndef GL_TANGENT_ARRAY_TYPE_EXT
#  define GL_TANGENT_ARRAY_TYPE_EXT 0x843E
#endif
#ifndef GL_TANGENT_ARRAY_STRIDE_EXT
#  define GL_TANGENT_ARRAY_STRIDE_EXT 0x843F
#endif
#ifndef GL_BINORMAL_ARRAY_TYPE_EXT
#  define GL_BINORMAL_ARRAY_TYPE_EXT 0x8440
#endif
#ifndef GL_BINORMAL_ARRAY_STRIDE_EXT
#  define GL_BINORMAL_ARRAY_STRIDE_EXT 0x8441
#endif
#ifndef GL_TANGENT_ARRAY_POINTER_EXT
#  define GL_TANGENT_ARRAY_POINTER_EXT 0x8442
#endif
#ifndef GL_BINORMAL_ARRAY_POINTER_EXT
#  define GL_BINORMAL_ARRAY_POINTER_EXT 0x8443
#endif
#ifndef GL_MAP1_TANGENT_EXT
#  define GL_MAP1_TANGENT_EXT 0x8444
#endif
#ifndef GL_MAP2_TANGENT_EXT
#  define GL_MAP2_TANGENT_EXT 0x8445
#endif
#ifndef GL_MAP1_BINORMAL_EXT
#  define GL_MAP1_BINORMAL_EXT 0x8446
#endif
#ifndef GL_MAP2_BINORMAL_EXT
#  define GL_MAP2_BINORMAL_EXT 0x8447
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTangent3bEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
typedef void (APIENTRYP PFNGLUXTANGENT3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
typedef void (APIENTRYP PFNGLUXTANGENT3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
typedef void (APIENTRYP PFNGLUXTANGENT3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3BVEXTPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3DVEXTPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3FVEXTPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3IVEXTPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
typedef void (APIENTRYP PFNGLUXBINORMAL3SVEXTPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
typedef void (APIENTRYP PFNGLUXTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
typedef void (APIENTRYP PFNGLUXBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTangent3bEXT
extern PFNGLUXTANGENT3BEXTPROC glTangent3bEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3bvEXT
extern PFNGLUXTANGENT3BVEXTPROC glTangent3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dEXT
extern PFNGLUXTANGENT3DEXTPROC glTangent3dEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3dvEXT
extern PFNGLUXTANGENT3DVEXTPROC glTangent3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fEXT
extern PFNGLUXTANGENT3FEXTPROC glTangent3fEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3fvEXT
extern PFNGLUXTANGENT3FVEXTPROC glTangent3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3iEXT
extern PFNGLUXTANGENT3IEXTPROC glTangent3iEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3ivEXT
extern PFNGLUXTANGENT3IVEXTPROC glTangent3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3sEXT
extern PFNGLUXTANGENT3SEXTPROC glTangent3sEXT;
#endif
#ifndef __GLUX__GLFCT_glTangent3svEXT
extern PFNGLUXTANGENT3SVEXTPROC glTangent3svEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bEXT
extern PFNGLUXBINORMAL3BEXTPROC glBinormal3bEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3bvEXT
extern PFNGLUXBINORMAL3BVEXTPROC glBinormal3bvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dEXT
extern PFNGLUXBINORMAL3DEXTPROC glBinormal3dEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3dvEXT
extern PFNGLUXBINORMAL3DVEXTPROC glBinormal3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fEXT
extern PFNGLUXBINORMAL3FEXTPROC glBinormal3fEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3fvEXT
extern PFNGLUXBINORMAL3FVEXTPROC glBinormal3fvEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3iEXT
extern PFNGLUXBINORMAL3IEXTPROC glBinormal3iEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3ivEXT
extern PFNGLUXBINORMAL3IVEXTPROC glBinormal3ivEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3sEXT
extern PFNGLUXBINORMAL3SEXTPROC glBinormal3sEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormal3svEXT
extern PFNGLUXBINORMAL3SVEXTPROC glBinormal3svEXT;
#endif
#ifndef __GLUX__GLFCT_glTangentPointerEXT
extern PFNGLUXTANGENTPOINTEREXTPROC glTangentPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glBinormalPointerEXT
extern PFNGLUXBINORMALPOINTEREXTPROC glBinormalPointerEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
