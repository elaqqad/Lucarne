
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:25 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_tessellation_shader__
#define __GLUX_GL_ARB_tessellation_shader__

GLUX_NEW_PLUGIN(GL_ARB_tessellation_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_PATCHES
#  define GL_PATCHES 0x000E
#endif
#ifndef GL_PATCH_VERTICES
#  define GL_PATCH_VERTICES 0x8E72
#endif
#ifndef GL_PATCH_DEFAULT_INNER_LEVEL
#  define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#endif
#ifndef GL_PATCH_DEFAULT_OUTER_LEVEL
#  define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#endif
#ifndef GL_TESS_CONTROL_OUTPUT_VERTICES
#  define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#endif
#ifndef GL_TESS_GEN_MODE
#  define GL_TESS_GEN_MODE 0x8E76
#endif
#ifndef GL_TESS_GEN_SPACING
#  define GL_TESS_GEN_SPACING 0x8E77
#endif
#ifndef GL_TESS_GEN_VERTEX_ORDER
#  define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#endif
#ifndef GL_TESS_GEN_POINT_MODE
#  define GL_TESS_GEN_POINT_MODE 0x8E79
#endif
#ifndef GL_ISOLINES
#  define GL_ISOLINES 0x8E7A
#endif
#ifndef GL_FRACTIONAL_ODD
#  define GL_FRACTIONAL_ODD 0x8E7B
#endif
#ifndef GL_FRACTIONAL_EVEN
#  define GL_FRACTIONAL_EVEN 0x8E7C
#endif
#ifndef GL_MAX_PATCH_VERTICES
#  define GL_MAX_PATCH_VERTICES 0x8E7D
#endif
#ifndef GL_MAX_TESS_GEN_LEVEL
#  define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#endif
#ifndef GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#endif
#ifndef GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#endif
#ifndef GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#endif
#ifndef GL_MAX_TESS_PATCH_COMPONENTS
#  define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#endif
#ifndef GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#endif
#ifndef GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS
#  define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#endif
#ifndef GL_MAX_TESS_CONTROL_INPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#endif
#ifndef GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#endif
#ifndef GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#endif
#ifndef GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#endif
#ifndef GL_TESS_EVALUATION_SHADER
#  define GL_TESS_EVALUATION_SHADER 0x8E87
#endif
#ifndef GL_TESS_CONTROL_SHADER
#  define GL_TESS_CONTROL_SHADER 0x8E88
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glPatchParameteri
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERIPROC) (GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glPatchParameteri
extern PFNGLUXPATCHPARAMETERIPROC glPatchParameteri;
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
extern PFNGLUXPATCHPARAMETERFVPROC glPatchParameterfv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:40 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_tessellation_shader__
#define __GLUX_GL_ARB_tessellation_shader__

GLUX_NEW_PLUGIN(GL_ARB_tessellation_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_PATCHES
#  define GL_PATCHES 0x000E
#endif
#ifndef GL_PATCH_VERTICES
#  define GL_PATCH_VERTICES 0x8E72
#endif
#ifndef GL_PATCH_DEFAULT_INNER_LEVEL
#  define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#endif
#ifndef GL_PATCH_DEFAULT_OUTER_LEVEL
#  define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#endif
#ifndef GL_TESS_CONTROL_OUTPUT_VERTICES
#  define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#endif
#ifndef GL_TESS_GEN_MODE
#  define GL_TESS_GEN_MODE 0x8E76
#endif
#ifndef GL_TESS_GEN_SPACING
#  define GL_TESS_GEN_SPACING 0x8E77
#endif
#ifndef GL_TESS_GEN_VERTEX_ORDER
#  define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#endif
#ifndef GL_TESS_GEN_POINT_MODE
#  define GL_TESS_GEN_POINT_MODE 0x8E79
#endif
#ifndef GL_ISOLINES
#  define GL_ISOLINES 0x8E7A
#endif
#ifndef GL_FRACTIONAL_ODD
#  define GL_FRACTIONAL_ODD 0x8E7B
#endif
#ifndef GL_FRACTIONAL_EVEN
#  define GL_FRACTIONAL_EVEN 0x8E7C
#endif
#ifndef GL_MAX_PATCH_VERTICES
#  define GL_MAX_PATCH_VERTICES 0x8E7D
#endif
#ifndef GL_MAX_TESS_GEN_LEVEL
#  define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#endif
#ifndef GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#endif
#ifndef GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#endif
#ifndef GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#endif
#ifndef GL_MAX_TESS_PATCH_COMPONENTS
#  define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#endif
#ifndef GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#endif
#ifndef GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS
#  define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#endif
#ifndef GL_MAX_TESS_CONTROL_INPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#endif
#ifndef GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#endif
#ifndef GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#endif
#ifndef GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#endif
#ifndef GL_TESS_EVALUATION_SHADER
#  define GL_TESS_EVALUATION_SHADER 0x8E87
#endif
#ifndef GL_TESS_CONTROL_SHADER
#  define GL_TESS_CONTROL_SHADER 0x8E88
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glPatchParameteri
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERIPROC) (GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glPatchParameteri
extern PFNGLUXPATCHPARAMETERIPROC glPatchParameteri;
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
extern PFNGLUXPATCHPARAMETERFVPROC glPatchParameterfv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:53 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_tessellation_shader__
#define __GLUX_GL_ARB_tessellation_shader__

GLUX_NEW_PLUGIN(GL_ARB_tessellation_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_PATCHES
#  define GL_PATCHES 0x000E
#endif
#ifndef GL_PATCH_VERTICES
#  define GL_PATCH_VERTICES 0x8E72
#endif
#ifndef GL_PATCH_DEFAULT_INNER_LEVEL
#  define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#endif
#ifndef GL_PATCH_DEFAULT_OUTER_LEVEL
#  define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#endif
#ifndef GL_TESS_CONTROL_OUTPUT_VERTICES
#  define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#endif
#ifndef GL_TESS_GEN_MODE
#  define GL_TESS_GEN_MODE 0x8E76
#endif
#ifndef GL_TESS_GEN_SPACING
#  define GL_TESS_GEN_SPACING 0x8E77
#endif
#ifndef GL_TESS_GEN_VERTEX_ORDER
#  define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#endif
#ifndef GL_TESS_GEN_POINT_MODE
#  define GL_TESS_GEN_POINT_MODE 0x8E79
#endif
#ifndef GL_ISOLINES
#  define GL_ISOLINES 0x8E7A
#endif
#ifndef GL_FRACTIONAL_ODD
#  define GL_FRACTIONAL_ODD 0x8E7B
#endif
#ifndef GL_FRACTIONAL_EVEN
#  define GL_FRACTIONAL_EVEN 0x8E7C
#endif
#ifndef GL_MAX_PATCH_VERTICES
#  define GL_MAX_PATCH_VERTICES 0x8E7D
#endif
#ifndef GL_MAX_TESS_GEN_LEVEL
#  define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#endif
#ifndef GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#endif
#ifndef GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#endif
#ifndef GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#endif
#ifndef GL_MAX_TESS_PATCH_COMPONENTS
#  define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#endif
#ifndef GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#endif
#ifndef GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS
#  define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#endif
#ifndef GL_MAX_TESS_CONTROL_INPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#endif
#ifndef GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#endif
#ifndef GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#endif
#ifndef GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#endif
#ifndef GL_TESS_EVALUATION_SHADER
#  define GL_TESS_EVALUATION_SHADER 0x8E87
#endif
#ifndef GL_TESS_CONTROL_SHADER
#  define GL_TESS_CONTROL_SHADER 0x8E88
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glPatchParameteri
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERIPROC) (GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glPatchParameteri
extern PFNGLUXPATCHPARAMETERIPROC glPatchParameteri;
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
extern PFNGLUXPATCHPARAMETERFVPROC glPatchParameterfv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:13 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_tessellation_shader__
#define __GLUX_GL_ARB_tessellation_shader__

GLUX_NEW_PLUGIN(GL_ARB_tessellation_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_PATCHES
#  define GL_PATCHES 0x000E
#endif
#ifndef GL_PATCH_VERTICES
#  define GL_PATCH_VERTICES 0x8E72
#endif
#ifndef GL_PATCH_DEFAULT_INNER_LEVEL
#  define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#endif
#ifndef GL_PATCH_DEFAULT_OUTER_LEVEL
#  define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#endif
#ifndef GL_TESS_CONTROL_OUTPUT_VERTICES
#  define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#endif
#ifndef GL_TESS_GEN_MODE
#  define GL_TESS_GEN_MODE 0x8E76
#endif
#ifndef GL_TESS_GEN_SPACING
#  define GL_TESS_GEN_SPACING 0x8E77
#endif
#ifndef GL_TESS_GEN_VERTEX_ORDER
#  define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#endif
#ifndef GL_TESS_GEN_POINT_MODE
#  define GL_TESS_GEN_POINT_MODE 0x8E79
#endif
#ifndef GL_ISOLINES
#  define GL_ISOLINES 0x8E7A
#endif
#ifndef GL_FRACTIONAL_ODD
#  define GL_FRACTIONAL_ODD 0x8E7B
#endif
#ifndef GL_FRACTIONAL_EVEN
#  define GL_FRACTIONAL_EVEN 0x8E7C
#endif
#ifndef GL_MAX_PATCH_VERTICES
#  define GL_MAX_PATCH_VERTICES 0x8E7D
#endif
#ifndef GL_MAX_TESS_GEN_LEVEL
#  define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#endif
#ifndef GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#endif
#ifndef GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#endif
#ifndef GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#endif
#ifndef GL_MAX_TESS_PATCH_COMPONENTS
#  define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#endif
#ifndef GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#endif
#ifndef GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS
#  define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#endif
#ifndef GL_MAX_TESS_CONTROL_INPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#endif
#ifndef GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#endif
#ifndef GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#endif
#ifndef GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#endif
#ifndef GL_TESS_EVALUATION_SHADER
#  define GL_TESS_EVALUATION_SHADER 0x8E87
#endif
#ifndef GL_TESS_CONTROL_SHADER
#  define GL_TESS_CONTROL_SHADER 0x8E88
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glPatchParameteri
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERIPROC) (GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glPatchParameteri
extern PFNGLUXPATCHPARAMETERIPROC glPatchParameteri;
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
extern PFNGLUXPATCHPARAMETERFVPROC glPatchParameterfv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:28 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_tessellation_shader__
#define __GLUX_GL_ARB_tessellation_shader__

GLUX_NEW_PLUGIN(GL_ARB_tessellation_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_PATCHES
#  define GL_PATCHES 0x000E
#endif
#ifndef GL_PATCH_VERTICES
#  define GL_PATCH_VERTICES 0x8E72
#endif
#ifndef GL_PATCH_DEFAULT_INNER_LEVEL
#  define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#endif
#ifndef GL_PATCH_DEFAULT_OUTER_LEVEL
#  define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#endif
#ifndef GL_TESS_CONTROL_OUTPUT_VERTICES
#  define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#endif
#ifndef GL_TESS_GEN_MODE
#  define GL_TESS_GEN_MODE 0x8E76
#endif
#ifndef GL_TESS_GEN_SPACING
#  define GL_TESS_GEN_SPACING 0x8E77
#endif
#ifndef GL_TESS_GEN_VERTEX_ORDER
#  define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#endif
#ifndef GL_TESS_GEN_POINT_MODE
#  define GL_TESS_GEN_POINT_MODE 0x8E79
#endif
#ifndef GL_ISOLINES
#  define GL_ISOLINES 0x8E7A
#endif
#ifndef GL_FRACTIONAL_ODD
#  define GL_FRACTIONAL_ODD 0x8E7B
#endif
#ifndef GL_FRACTIONAL_EVEN
#  define GL_FRACTIONAL_EVEN 0x8E7C
#endif
#ifndef GL_MAX_PATCH_VERTICES
#  define GL_MAX_PATCH_VERTICES 0x8E7D
#endif
#ifndef GL_MAX_TESS_GEN_LEVEL
#  define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#endif
#ifndef GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#endif
#ifndef GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#endif
#ifndef GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#endif
#ifndef GL_MAX_TESS_PATCH_COMPONENTS
#  define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#endif
#ifndef GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#endif
#ifndef GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS
#  define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#endif
#ifndef GL_MAX_TESS_CONTROL_INPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#endif
#ifndef GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#endif
#ifndef GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#endif
#ifndef GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#endif
#ifndef GL_TESS_EVALUATION_SHADER
#  define GL_TESS_EVALUATION_SHADER 0x8E87
#endif
#ifndef GL_TESS_CONTROL_SHADER
#  define GL_TESS_CONTROL_SHADER 0x8E88
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glPatchParameteri
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERIPROC) (GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glPatchParameteri
extern PFNGLUXPATCHPARAMETERIPROC glPatchParameteri;
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
extern PFNGLUXPATCHPARAMETERFVPROC glPatchParameterfv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:32 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_tessellation_shader__
#define __GLUX_GL_ARB_tessellation_shader__

GLUX_NEW_PLUGIN(GL_ARB_tessellation_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_PATCHES
#  define GL_PATCHES 0x000E
#endif
#ifndef GL_PATCH_VERTICES
#  define GL_PATCH_VERTICES 0x8E72
#endif
#ifndef GL_PATCH_DEFAULT_INNER_LEVEL
#  define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#endif
#ifndef GL_PATCH_DEFAULT_OUTER_LEVEL
#  define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#endif
#ifndef GL_TESS_CONTROL_OUTPUT_VERTICES
#  define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#endif
#ifndef GL_TESS_GEN_MODE
#  define GL_TESS_GEN_MODE 0x8E76
#endif
#ifndef GL_TESS_GEN_SPACING
#  define GL_TESS_GEN_SPACING 0x8E77
#endif
#ifndef GL_TESS_GEN_VERTEX_ORDER
#  define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#endif
#ifndef GL_TESS_GEN_POINT_MODE
#  define GL_TESS_GEN_POINT_MODE 0x8E79
#endif
#ifndef GL_ISOLINES
#  define GL_ISOLINES 0x8E7A
#endif
#ifndef GL_FRACTIONAL_ODD
#  define GL_FRACTIONAL_ODD 0x8E7B
#endif
#ifndef GL_FRACTIONAL_EVEN
#  define GL_FRACTIONAL_EVEN 0x8E7C
#endif
#ifndef GL_MAX_PATCH_VERTICES
#  define GL_MAX_PATCH_VERTICES 0x8E7D
#endif
#ifndef GL_MAX_TESS_GEN_LEVEL
#  define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#endif
#ifndef GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#endif
#ifndef GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#endif
#ifndef GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#endif
#ifndef GL_MAX_TESS_PATCH_COMPONENTS
#  define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#endif
#ifndef GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#endif
#ifndef GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS
#  define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#endif
#ifndef GL_MAX_TESS_CONTROL_INPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#endif
#ifndef GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#endif
#ifndef GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#endif
#ifndef GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#endif
#ifndef GL_TESS_EVALUATION_SHADER
#  define GL_TESS_EVALUATION_SHADER 0x8E87
#endif
#ifndef GL_TESS_CONTROL_SHADER
#  define GL_TESS_CONTROL_SHADER 0x8E88
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glPatchParameteri
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERIPROC) (GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glPatchParameteri
extern PFNGLUXPATCHPARAMETERIPROC glPatchParameteri;
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
extern PFNGLUXPATCHPARAMETERFVPROC glPatchParameterfv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:52 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_tessellation_shader__
#define __GLUX_GL_ARB_tessellation_shader__

GLUX_NEW_PLUGIN(GL_ARB_tessellation_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_PATCHES
#  define GL_PATCHES 0x000E
#endif
#ifndef GL_PATCH_VERTICES
#  define GL_PATCH_VERTICES 0x8E72
#endif
#ifndef GL_PATCH_DEFAULT_INNER_LEVEL
#  define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#endif
#ifndef GL_PATCH_DEFAULT_OUTER_LEVEL
#  define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#endif
#ifndef GL_TESS_CONTROL_OUTPUT_VERTICES
#  define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#endif
#ifndef GL_TESS_GEN_MODE
#  define GL_TESS_GEN_MODE 0x8E76
#endif
#ifndef GL_TESS_GEN_SPACING
#  define GL_TESS_GEN_SPACING 0x8E77
#endif
#ifndef GL_TESS_GEN_VERTEX_ORDER
#  define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#endif
#ifndef GL_TESS_GEN_POINT_MODE
#  define GL_TESS_GEN_POINT_MODE 0x8E79
#endif
#ifndef GL_ISOLINES
#  define GL_ISOLINES 0x8E7A
#endif
#ifndef GL_FRACTIONAL_ODD
#  define GL_FRACTIONAL_ODD 0x8E7B
#endif
#ifndef GL_FRACTIONAL_EVEN
#  define GL_FRACTIONAL_EVEN 0x8E7C
#endif
#ifndef GL_MAX_PATCH_VERTICES
#  define GL_MAX_PATCH_VERTICES 0x8E7D
#endif
#ifndef GL_MAX_TESS_GEN_LEVEL
#  define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#endif
#ifndef GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#endif
#ifndef GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#endif
#ifndef GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#endif
#ifndef GL_MAX_TESS_PATCH_COMPONENTS
#  define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#endif
#ifndef GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#endif
#ifndef GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS
#  define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#endif
#ifndef GL_MAX_TESS_CONTROL_INPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#endif
#ifndef GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#endif
#ifndef GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#endif
#ifndef GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#endif
#ifndef GL_TESS_EVALUATION_SHADER
#  define GL_TESS_EVALUATION_SHADER 0x8E87
#endif
#ifndef GL_TESS_CONTROL_SHADER
#  define GL_TESS_CONTROL_SHADER 0x8E88
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glPatchParameteri
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERIPROC) (GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glPatchParameteri
extern PFNGLUXPATCHPARAMETERIPROC glPatchParameteri;
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
extern PFNGLUXPATCHPARAMETERFVPROC glPatchParameterfv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:27:59 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_tessellation_shader__
#define __GLUX_GL_ARB_tessellation_shader__

GLUX_NEW_PLUGIN(GL_ARB_tessellation_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_PATCHES
#  define GL_PATCHES 0x000E
#endif
#ifndef GL_PATCH_VERTICES
#  define GL_PATCH_VERTICES 0x8E72
#endif
#ifndef GL_PATCH_DEFAULT_INNER_LEVEL
#  define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#endif
#ifndef GL_PATCH_DEFAULT_OUTER_LEVEL
#  define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#endif
#ifndef GL_TESS_CONTROL_OUTPUT_VERTICES
#  define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#endif
#ifndef GL_TESS_GEN_MODE
#  define GL_TESS_GEN_MODE 0x8E76
#endif
#ifndef GL_TESS_GEN_SPACING
#  define GL_TESS_GEN_SPACING 0x8E77
#endif
#ifndef GL_TESS_GEN_VERTEX_ORDER
#  define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#endif
#ifndef GL_TESS_GEN_POINT_MODE
#  define GL_TESS_GEN_POINT_MODE 0x8E79
#endif
#ifndef GL_ISOLINES
#  define GL_ISOLINES 0x8E7A
#endif
#ifndef GL_FRACTIONAL_ODD
#  define GL_FRACTIONAL_ODD 0x8E7B
#endif
#ifndef GL_FRACTIONAL_EVEN
#  define GL_FRACTIONAL_EVEN 0x8E7C
#endif
#ifndef GL_MAX_PATCH_VERTICES
#  define GL_MAX_PATCH_VERTICES 0x8E7D
#endif
#ifndef GL_MAX_TESS_GEN_LEVEL
#  define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#endif
#ifndef GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#endif
#ifndef GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#endif
#ifndef GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#endif
#ifndef GL_MAX_TESS_PATCH_COMPONENTS
#  define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#endif
#ifndef GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#endif
#ifndef GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS
#  define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#endif
#ifndef GL_MAX_TESS_CONTROL_INPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#endif
#ifndef GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#endif
#ifndef GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#endif
#ifndef GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#endif
#ifndef GL_TESS_EVALUATION_SHADER
#  define GL_TESS_EVALUATION_SHADER 0x8E87
#endif
#ifndef GL_TESS_CONTROL_SHADER
#  define GL_TESS_CONTROL_SHADER 0x8E88
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glPatchParameteri
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERIPROC) (GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glPatchParameteri
extern PFNGLUXPATCHPARAMETERIPROC glPatchParameteri;
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
extern PFNGLUXPATCHPARAMETERFVPROC glPatchParameterfv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:16:56 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_tessellation_shader__
#define __GLUX_GL_ARB_tessellation_shader__

GLUX_NEW_PLUGIN(GL_ARB_tessellation_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_PATCHES
#  define GL_PATCHES 0x000E
#endif
#ifndef GL_PATCH_VERTICES
#  define GL_PATCH_VERTICES 0x8E72
#endif
#ifndef GL_PATCH_DEFAULT_INNER_LEVEL
#  define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#endif
#ifndef GL_PATCH_DEFAULT_OUTER_LEVEL
#  define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#endif
#ifndef GL_TESS_CONTROL_OUTPUT_VERTICES
#  define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#endif
#ifndef GL_TESS_GEN_MODE
#  define GL_TESS_GEN_MODE 0x8E76
#endif
#ifndef GL_TESS_GEN_SPACING
#  define GL_TESS_GEN_SPACING 0x8E77
#endif
#ifndef GL_TESS_GEN_VERTEX_ORDER
#  define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#endif
#ifndef GL_TESS_GEN_POINT_MODE
#  define GL_TESS_GEN_POINT_MODE 0x8E79
#endif
#ifndef GL_ISOLINES
#  define GL_ISOLINES 0x8E7A
#endif
#ifndef GL_FRACTIONAL_ODD
#  define GL_FRACTIONAL_ODD 0x8E7B
#endif
#ifndef GL_FRACTIONAL_EVEN
#  define GL_FRACTIONAL_EVEN 0x8E7C
#endif
#ifndef GL_MAX_PATCH_VERTICES
#  define GL_MAX_PATCH_VERTICES 0x8E7D
#endif
#ifndef GL_MAX_TESS_GEN_LEVEL
#  define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#endif
#ifndef GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#endif
#ifndef GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#endif
#ifndef GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#endif
#ifndef GL_MAX_TESS_PATCH_COMPONENTS
#  define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#endif
#ifndef GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#endif
#ifndef GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS
#  define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#endif
#ifndef GL_MAX_TESS_CONTROL_INPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#endif
#ifndef GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#endif
#ifndef GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#endif
#ifndef GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#endif
#ifndef GL_TESS_EVALUATION_SHADER
#  define GL_TESS_EVALUATION_SHADER 0x8E87
#endif
#ifndef GL_TESS_CONTROL_SHADER
#  define GL_TESS_CONTROL_SHADER 0x8E88
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glPatchParameteri
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERIPROC) (GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glPatchParameteri
extern PFNGLUXPATCHPARAMETERIPROC glPatchParameteri;
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
extern PFNGLUXPATCHPARAMETERFVPROC glPatchParameterfv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_tessellation_shader__
#define __GLUX_GL_ARB_tessellation_shader__

GLUX_NEW_PLUGIN(GL_ARB_tessellation_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_PATCHES
#  define GL_PATCHES 0x000E
#endif
#ifndef GL_PATCH_VERTICES
#  define GL_PATCH_VERTICES 0x8E72
#endif
#ifndef GL_PATCH_DEFAULT_INNER_LEVEL
#  define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#endif
#ifndef GL_PATCH_DEFAULT_OUTER_LEVEL
#  define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#endif
#ifndef GL_TESS_CONTROL_OUTPUT_VERTICES
#  define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#endif
#ifndef GL_TESS_GEN_MODE
#  define GL_TESS_GEN_MODE 0x8E76
#endif
#ifndef GL_TESS_GEN_SPACING
#  define GL_TESS_GEN_SPACING 0x8E77
#endif
#ifndef GL_TESS_GEN_VERTEX_ORDER
#  define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#endif
#ifndef GL_TESS_GEN_POINT_MODE
#  define GL_TESS_GEN_POINT_MODE 0x8E79
#endif
#ifndef GL_ISOLINES
#  define GL_ISOLINES 0x8E7A
#endif
#ifndef GL_FRACTIONAL_ODD
#  define GL_FRACTIONAL_ODD 0x8E7B
#endif
#ifndef GL_FRACTIONAL_EVEN
#  define GL_FRACTIONAL_EVEN 0x8E7C
#endif
#ifndef GL_MAX_PATCH_VERTICES
#  define GL_MAX_PATCH_VERTICES 0x8E7D
#endif
#ifndef GL_MAX_TESS_GEN_LEVEL
#  define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#endif
#ifndef GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#endif
#ifndef GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#endif
#ifndef GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#endif
#ifndef GL_MAX_TESS_PATCH_COMPONENTS
#  define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#endif
#ifndef GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#endif
#ifndef GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS
#  define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#endif
#ifndef GL_MAX_TESS_CONTROL_INPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#endif
#ifndef GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#endif
#ifndef GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#endif
#ifndef GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#endif
#ifndef GL_TESS_EVALUATION_SHADER
#  define GL_TESS_EVALUATION_SHADER 0x8E87
#endif
#ifndef GL_TESS_CONTROL_SHADER
#  define GL_TESS_CONTROL_SHADER 0x8E88
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glPatchParameteri
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERIPROC) (GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glPatchParameteri
extern PFNGLUXPATCHPARAMETERIPROC glPatchParameteri;
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
extern PFNGLUXPATCHPARAMETERFVPROC glPatchParameterfv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:19 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_tessellation_shader__
#define __GLUX_GL_ARB_tessellation_shader__

GLUX_NEW_PLUGIN(GL_ARB_tessellation_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_PATCHES
#  define GL_PATCHES 0x000E
#endif
#ifndef GL_PATCH_VERTICES
#  define GL_PATCH_VERTICES 0x8E72
#endif
#ifndef GL_PATCH_DEFAULT_INNER_LEVEL
#  define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#endif
#ifndef GL_PATCH_DEFAULT_OUTER_LEVEL
#  define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#endif
#ifndef GL_TESS_CONTROL_OUTPUT_VERTICES
#  define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#endif
#ifndef GL_TESS_GEN_MODE
#  define GL_TESS_GEN_MODE 0x8E76
#endif
#ifndef GL_TESS_GEN_SPACING
#  define GL_TESS_GEN_SPACING 0x8E77
#endif
#ifndef GL_TESS_GEN_VERTEX_ORDER
#  define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#endif
#ifndef GL_TESS_GEN_POINT_MODE
#  define GL_TESS_GEN_POINT_MODE 0x8E79
#endif
#ifndef GL_ISOLINES
#  define GL_ISOLINES 0x8E7A
#endif
#ifndef GL_FRACTIONAL_ODD
#  define GL_FRACTIONAL_ODD 0x8E7B
#endif
#ifndef GL_FRACTIONAL_EVEN
#  define GL_FRACTIONAL_EVEN 0x8E7C
#endif
#ifndef GL_MAX_PATCH_VERTICES
#  define GL_MAX_PATCH_VERTICES 0x8E7D
#endif
#ifndef GL_MAX_TESS_GEN_LEVEL
#  define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#endif
#ifndef GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#endif
#ifndef GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#endif
#ifndef GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#endif
#ifndef GL_MAX_TESS_PATCH_COMPONENTS
#  define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#endif
#ifndef GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#endif
#ifndef GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS
#  define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#endif
#ifndef GL_MAX_TESS_CONTROL_INPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#endif
#ifndef GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#endif
#ifndef GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#endif
#ifndef GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#endif
#ifndef GL_TESS_EVALUATION_SHADER
#  define GL_TESS_EVALUATION_SHADER 0x8E87
#endif
#ifndef GL_TESS_CONTROL_SHADER
#  define GL_TESS_CONTROL_SHADER 0x8E88
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glPatchParameteri
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERIPROC) (GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glPatchParameteri
extern PFNGLUXPATCHPARAMETERIPROC glPatchParameteri;
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
extern PFNGLUXPATCHPARAMETERFVPROC glPatchParameterfv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:00 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_tessellation_shader__
#define __GLUX_GL_ARB_tessellation_shader__

GLUX_NEW_PLUGIN(GL_ARB_tessellation_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_PATCHES
#  define GL_PATCHES 0x000E
#endif
#ifndef GL_PATCH_VERTICES
#  define GL_PATCH_VERTICES 0x8E72
#endif
#ifndef GL_PATCH_DEFAULT_INNER_LEVEL
#  define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#endif
#ifndef GL_PATCH_DEFAULT_OUTER_LEVEL
#  define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#endif
#ifndef GL_TESS_CONTROL_OUTPUT_VERTICES
#  define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#endif
#ifndef GL_TESS_GEN_MODE
#  define GL_TESS_GEN_MODE 0x8E76
#endif
#ifndef GL_TESS_GEN_SPACING
#  define GL_TESS_GEN_SPACING 0x8E77
#endif
#ifndef GL_TESS_GEN_VERTEX_ORDER
#  define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#endif
#ifndef GL_TESS_GEN_POINT_MODE
#  define GL_TESS_GEN_POINT_MODE 0x8E79
#endif
#ifndef GL_ISOLINES
#  define GL_ISOLINES 0x8E7A
#endif
#ifndef GL_FRACTIONAL_ODD
#  define GL_FRACTIONAL_ODD 0x8E7B
#endif
#ifndef GL_FRACTIONAL_EVEN
#  define GL_FRACTIONAL_EVEN 0x8E7C
#endif
#ifndef GL_MAX_PATCH_VERTICES
#  define GL_MAX_PATCH_VERTICES 0x8E7D
#endif
#ifndef GL_MAX_TESS_GEN_LEVEL
#  define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#endif
#ifndef GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#endif
#ifndef GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#endif
#ifndef GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#endif
#ifndef GL_MAX_TESS_PATCH_COMPONENTS
#  define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#endif
#ifndef GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#endif
#ifndef GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS
#  define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#endif
#ifndef GL_MAX_TESS_CONTROL_INPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#endif
#ifndef GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#endif
#ifndef GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#endif
#ifndef GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#endif
#ifndef GL_TESS_EVALUATION_SHADER
#  define GL_TESS_EVALUATION_SHADER 0x8E87
#endif
#ifndef GL_TESS_CONTROL_SHADER
#  define GL_TESS_CONTROL_SHADER 0x8E88
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glPatchParameteri
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERIPROC) (GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glPatchParameteri
extern PFNGLUXPATCHPARAMETERIPROC glPatchParameteri;
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
extern PFNGLUXPATCHPARAMETERFVPROC glPatchParameterfv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:08 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_tessellation_shader__
#define __GLUX_GL_ARB_tessellation_shader__

GLUX_NEW_PLUGIN(GL_ARB_tessellation_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_PATCHES
#  define GL_PATCHES 0x000E
#endif
#ifndef GL_PATCH_VERTICES
#  define GL_PATCH_VERTICES 0x8E72
#endif
#ifndef GL_PATCH_DEFAULT_INNER_LEVEL
#  define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#endif
#ifndef GL_PATCH_DEFAULT_OUTER_LEVEL
#  define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#endif
#ifndef GL_TESS_CONTROL_OUTPUT_VERTICES
#  define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#endif
#ifndef GL_TESS_GEN_MODE
#  define GL_TESS_GEN_MODE 0x8E76
#endif
#ifndef GL_TESS_GEN_SPACING
#  define GL_TESS_GEN_SPACING 0x8E77
#endif
#ifndef GL_TESS_GEN_VERTEX_ORDER
#  define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#endif
#ifndef GL_TESS_GEN_POINT_MODE
#  define GL_TESS_GEN_POINT_MODE 0x8E79
#endif
#ifndef GL_ISOLINES
#  define GL_ISOLINES 0x8E7A
#endif
#ifndef GL_FRACTIONAL_ODD
#  define GL_FRACTIONAL_ODD 0x8E7B
#endif
#ifndef GL_FRACTIONAL_EVEN
#  define GL_FRACTIONAL_EVEN 0x8E7C
#endif
#ifndef GL_MAX_PATCH_VERTICES
#  define GL_MAX_PATCH_VERTICES 0x8E7D
#endif
#ifndef GL_MAX_TESS_GEN_LEVEL
#  define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#endif
#ifndef GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#endif
#ifndef GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#endif
#ifndef GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#endif
#ifndef GL_MAX_TESS_PATCH_COMPONENTS
#  define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#endif
#ifndef GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#endif
#ifndef GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS
#  define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#endif
#ifndef GL_MAX_TESS_CONTROL_INPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#endif
#ifndef GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#endif
#ifndef GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#endif
#ifndef GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#endif
#ifndef GL_TESS_EVALUATION_SHADER
#  define GL_TESS_EVALUATION_SHADER 0x8E87
#endif
#ifndef GL_TESS_CONTROL_SHADER
#  define GL_TESS_CONTROL_SHADER 0x8E88
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glPatchParameteri
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERIPROC) (GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glPatchParameteri
extern PFNGLUXPATCHPARAMETERIPROC glPatchParameteri;
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
extern PFNGLUXPATCHPARAMETERFVPROC glPatchParameterfv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:20 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_tessellation_shader__
#define __GLUX_GL_ARB_tessellation_shader__

GLUX_NEW_PLUGIN(GL_ARB_tessellation_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_PATCHES
#  define GL_PATCHES 0x000E
#endif
#ifndef GL_PATCH_VERTICES
#  define GL_PATCH_VERTICES 0x8E72
#endif
#ifndef GL_PATCH_DEFAULT_INNER_LEVEL
#  define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#endif
#ifndef GL_PATCH_DEFAULT_OUTER_LEVEL
#  define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#endif
#ifndef GL_TESS_CONTROL_OUTPUT_VERTICES
#  define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#endif
#ifndef GL_TESS_GEN_MODE
#  define GL_TESS_GEN_MODE 0x8E76
#endif
#ifndef GL_TESS_GEN_SPACING
#  define GL_TESS_GEN_SPACING 0x8E77
#endif
#ifndef GL_TESS_GEN_VERTEX_ORDER
#  define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#endif
#ifndef GL_TESS_GEN_POINT_MODE
#  define GL_TESS_GEN_POINT_MODE 0x8E79
#endif
#ifndef GL_ISOLINES
#  define GL_ISOLINES 0x8E7A
#endif
#ifndef GL_FRACTIONAL_ODD
#  define GL_FRACTIONAL_ODD 0x8E7B
#endif
#ifndef GL_FRACTIONAL_EVEN
#  define GL_FRACTIONAL_EVEN 0x8E7C
#endif
#ifndef GL_MAX_PATCH_VERTICES
#  define GL_MAX_PATCH_VERTICES 0x8E7D
#endif
#ifndef GL_MAX_TESS_GEN_LEVEL
#  define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#endif
#ifndef GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#endif
#ifndef GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#endif
#ifndef GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#endif
#ifndef GL_MAX_TESS_PATCH_COMPONENTS
#  define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#endif
#ifndef GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#endif
#ifndef GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS
#  define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#endif
#ifndef GL_MAX_TESS_CONTROL_INPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#endif
#ifndef GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#endif
#ifndef GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#endif
#ifndef GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#endif
#ifndef GL_TESS_EVALUATION_SHADER
#  define GL_TESS_EVALUATION_SHADER 0x8E87
#endif
#ifndef GL_TESS_CONTROL_SHADER
#  define GL_TESS_CONTROL_SHADER 0x8E88
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glPatchParameteri
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERIPROC) (GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glPatchParameteri
extern PFNGLUXPATCHPARAMETERIPROC glPatchParameteri;
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
extern PFNGLUXPATCHPARAMETERFVPROC glPatchParameterfv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:51:59 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_tessellation_shader__
#define __GLUX_GL_ARB_tessellation_shader__

GLUX_NEW_PLUGIN(GL_ARB_tessellation_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_PATCHES
#  define GL_PATCHES 0x000E
#endif
#ifndef GL_PATCH_VERTICES
#  define GL_PATCH_VERTICES 0x8E72
#endif
#ifndef GL_PATCH_DEFAULT_INNER_LEVEL
#  define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#endif
#ifndef GL_PATCH_DEFAULT_OUTER_LEVEL
#  define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#endif
#ifndef GL_TESS_CONTROL_OUTPUT_VERTICES
#  define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#endif
#ifndef GL_TESS_GEN_MODE
#  define GL_TESS_GEN_MODE 0x8E76
#endif
#ifndef GL_TESS_GEN_SPACING
#  define GL_TESS_GEN_SPACING 0x8E77
#endif
#ifndef GL_TESS_GEN_VERTEX_ORDER
#  define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#endif
#ifndef GL_TESS_GEN_POINT_MODE
#  define GL_TESS_GEN_POINT_MODE 0x8E79
#endif
#ifndef GL_ISOLINES
#  define GL_ISOLINES 0x8E7A
#endif
#ifndef GL_FRACTIONAL_ODD
#  define GL_FRACTIONAL_ODD 0x8E7B
#endif
#ifndef GL_FRACTIONAL_EVEN
#  define GL_FRACTIONAL_EVEN 0x8E7C
#endif
#ifndef GL_MAX_PATCH_VERTICES
#  define GL_MAX_PATCH_VERTICES 0x8E7D
#endif
#ifndef GL_MAX_TESS_GEN_LEVEL
#  define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#endif
#ifndef GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#endif
#ifndef GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#endif
#ifndef GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#endif
#ifndef GL_MAX_TESS_PATCH_COMPONENTS
#  define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#endif
#ifndef GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#endif
#ifndef GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS
#  define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#endif
#ifndef GL_MAX_TESS_CONTROL_INPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#endif
#ifndef GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#endif
#ifndef GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#endif
#ifndef GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#endif
#ifndef GL_TESS_EVALUATION_SHADER
#  define GL_TESS_EVALUATION_SHADER 0x8E87
#endif
#ifndef GL_TESS_CONTROL_SHADER
#  define GL_TESS_CONTROL_SHADER 0x8E88
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glPatchParameteri
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERIPROC) (GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glPatchParameteri
extern PFNGLUXPATCHPARAMETERIPROC glPatchParameteri;
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
extern PFNGLUXPATCHPARAMETERFVPROC glPatchParameterfv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_tessellation_shader__
#define __GLUX_GL_ARB_tessellation_shader__

GLUX_NEW_PLUGIN(GL_ARB_tessellation_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_PATCHES
#  define GL_PATCHES 0x000E
#endif
#ifndef GL_PATCH_VERTICES
#  define GL_PATCH_VERTICES 0x8E72
#endif
#ifndef GL_PATCH_DEFAULT_INNER_LEVEL
#  define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#endif
#ifndef GL_PATCH_DEFAULT_OUTER_LEVEL
#  define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#endif
#ifndef GL_TESS_CONTROL_OUTPUT_VERTICES
#  define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#endif
#ifndef GL_TESS_GEN_MODE
#  define GL_TESS_GEN_MODE 0x8E76
#endif
#ifndef GL_TESS_GEN_SPACING
#  define GL_TESS_GEN_SPACING 0x8E77
#endif
#ifndef GL_TESS_GEN_VERTEX_ORDER
#  define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#endif
#ifndef GL_TESS_GEN_POINT_MODE
#  define GL_TESS_GEN_POINT_MODE 0x8E79
#endif
#ifndef GL_ISOLINES
#  define GL_ISOLINES 0x8E7A
#endif
#ifndef GL_FRACTIONAL_ODD
#  define GL_FRACTIONAL_ODD 0x8E7B
#endif
#ifndef GL_FRACTIONAL_EVEN
#  define GL_FRACTIONAL_EVEN 0x8E7C
#endif
#ifndef GL_MAX_PATCH_VERTICES
#  define GL_MAX_PATCH_VERTICES 0x8E7D
#endif
#ifndef GL_MAX_TESS_GEN_LEVEL
#  define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#endif
#ifndef GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#endif
#ifndef GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#endif
#ifndef GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#endif
#ifndef GL_MAX_TESS_PATCH_COMPONENTS
#  define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#endif
#ifndef GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#endif
#ifndef GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS
#  define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#endif
#ifndef GL_MAX_TESS_CONTROL_INPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#endif
#ifndef GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#endif
#ifndef GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#endif
#ifndef GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#endif
#ifndef GL_TESS_EVALUATION_SHADER
#  define GL_TESS_EVALUATION_SHADER 0x8E87
#endif
#ifndef GL_TESS_CONTROL_SHADER
#  define GL_TESS_CONTROL_SHADER 0x8E88
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glPatchParameteri
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERIPROC) (GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glPatchParameteri
extern PFNGLUXPATCHPARAMETERIPROC glPatchParameteri;
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
extern PFNGLUXPATCHPARAMETERFVPROC glPatchParameterfv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:03 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_tessellation_shader__
#define __GLUX_GL_ARB_tessellation_shader__

GLUX_NEW_PLUGIN(GL_ARB_tessellation_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_PATCHES
#  define GL_PATCHES 0x000E
#endif
#ifndef GL_PATCH_VERTICES
#  define GL_PATCH_VERTICES 0x8E72
#endif
#ifndef GL_PATCH_DEFAULT_INNER_LEVEL
#  define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#endif
#ifndef GL_PATCH_DEFAULT_OUTER_LEVEL
#  define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#endif
#ifndef GL_TESS_CONTROL_OUTPUT_VERTICES
#  define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#endif
#ifndef GL_TESS_GEN_MODE
#  define GL_TESS_GEN_MODE 0x8E76
#endif
#ifndef GL_TESS_GEN_SPACING
#  define GL_TESS_GEN_SPACING 0x8E77
#endif
#ifndef GL_TESS_GEN_VERTEX_ORDER
#  define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#endif
#ifndef GL_TESS_GEN_POINT_MODE
#  define GL_TESS_GEN_POINT_MODE 0x8E79
#endif
#ifndef GL_ISOLINES
#  define GL_ISOLINES 0x8E7A
#endif
#ifndef GL_FRACTIONAL_ODD
#  define GL_FRACTIONAL_ODD 0x8E7B
#endif
#ifndef GL_FRACTIONAL_EVEN
#  define GL_FRACTIONAL_EVEN 0x8E7C
#endif
#ifndef GL_MAX_PATCH_VERTICES
#  define GL_MAX_PATCH_VERTICES 0x8E7D
#endif
#ifndef GL_MAX_TESS_GEN_LEVEL
#  define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#endif
#ifndef GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#endif
#ifndef GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#endif
#ifndef GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#endif
#ifndef GL_MAX_TESS_PATCH_COMPONENTS
#  define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#endif
#ifndef GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#endif
#ifndef GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS
#  define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#endif
#ifndef GL_MAX_TESS_CONTROL_INPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#endif
#ifndef GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#endif
#ifndef GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#endif
#ifndef GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#endif
#ifndef GL_TESS_EVALUATION_SHADER
#  define GL_TESS_EVALUATION_SHADER 0x8E87
#endif
#ifndef GL_TESS_CONTROL_SHADER
#  define GL_TESS_CONTROL_SHADER 0x8E88
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glPatchParameteri
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERIPROC) (GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glPatchParameteri
extern PFNGLUXPATCHPARAMETERIPROC glPatchParameteri;
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
extern PFNGLUXPATCHPARAMETERFVPROC glPatchParameterfv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:23 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_tessellation_shader__
#define __GLUX_GL_ARB_tessellation_shader__

GLUX_NEW_PLUGIN(GL_ARB_tessellation_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_PATCHES
#  define GL_PATCHES 0x000E
#endif
#ifndef GL_PATCH_VERTICES
#  define GL_PATCH_VERTICES 0x8E72
#endif
#ifndef GL_PATCH_DEFAULT_INNER_LEVEL
#  define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#endif
#ifndef GL_PATCH_DEFAULT_OUTER_LEVEL
#  define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#endif
#ifndef GL_TESS_CONTROL_OUTPUT_VERTICES
#  define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#endif
#ifndef GL_TESS_GEN_MODE
#  define GL_TESS_GEN_MODE 0x8E76
#endif
#ifndef GL_TESS_GEN_SPACING
#  define GL_TESS_GEN_SPACING 0x8E77
#endif
#ifndef GL_TESS_GEN_VERTEX_ORDER
#  define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#endif
#ifndef GL_TESS_GEN_POINT_MODE
#  define GL_TESS_GEN_POINT_MODE 0x8E79
#endif
#ifndef GL_ISOLINES
#  define GL_ISOLINES 0x8E7A
#endif
#ifndef GL_FRACTIONAL_ODD
#  define GL_FRACTIONAL_ODD 0x8E7B
#endif
#ifndef GL_FRACTIONAL_EVEN
#  define GL_FRACTIONAL_EVEN 0x8E7C
#endif
#ifndef GL_MAX_PATCH_VERTICES
#  define GL_MAX_PATCH_VERTICES 0x8E7D
#endif
#ifndef GL_MAX_TESS_GEN_LEVEL
#  define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#endif
#ifndef GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#endif
#ifndef GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#endif
#ifndef GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#endif
#ifndef GL_MAX_TESS_PATCH_COMPONENTS
#  define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#endif
#ifndef GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#endif
#ifndef GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS
#  define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#endif
#ifndef GL_MAX_TESS_CONTROL_INPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#endif
#ifndef GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#endif
#ifndef GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#endif
#ifndef GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#endif
#ifndef GL_TESS_EVALUATION_SHADER
#  define GL_TESS_EVALUATION_SHADER 0x8E87
#endif
#ifndef GL_TESS_CONTROL_SHADER
#  define GL_TESS_CONTROL_SHADER 0x8E88
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glPatchParameteri
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERIPROC) (GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glPatchParameteri
extern PFNGLUXPATCHPARAMETERIPROC glPatchParameteri;
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
extern PFNGLUXPATCHPARAMETERFVPROC glPatchParameterfv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_tessellation_shader__
#define __GLUX_GL_ARB_tessellation_shader__

GLUX_NEW_PLUGIN(GL_ARB_tessellation_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_PATCHES
#  define GL_PATCHES 0x000E
#endif
#ifndef GL_PATCH_VERTICES
#  define GL_PATCH_VERTICES 0x8E72
#endif
#ifndef GL_PATCH_DEFAULT_INNER_LEVEL
#  define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#endif
#ifndef GL_PATCH_DEFAULT_OUTER_LEVEL
#  define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#endif
#ifndef GL_TESS_CONTROL_OUTPUT_VERTICES
#  define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#endif
#ifndef GL_TESS_GEN_MODE
#  define GL_TESS_GEN_MODE 0x8E76
#endif
#ifndef GL_TESS_GEN_SPACING
#  define GL_TESS_GEN_SPACING 0x8E77
#endif
#ifndef GL_TESS_GEN_VERTEX_ORDER
#  define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#endif
#ifndef GL_TESS_GEN_POINT_MODE
#  define GL_TESS_GEN_POINT_MODE 0x8E79
#endif
#ifndef GL_ISOLINES
#  define GL_ISOLINES 0x8E7A
#endif
#ifndef GL_FRACTIONAL_ODD
#  define GL_FRACTIONAL_ODD 0x8E7B
#endif
#ifndef GL_FRACTIONAL_EVEN
#  define GL_FRACTIONAL_EVEN 0x8E7C
#endif
#ifndef GL_MAX_PATCH_VERTICES
#  define GL_MAX_PATCH_VERTICES 0x8E7D
#endif
#ifndef GL_MAX_TESS_GEN_LEVEL
#  define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#endif
#ifndef GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#endif
#ifndef GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#endif
#ifndef GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#endif
#ifndef GL_MAX_TESS_PATCH_COMPONENTS
#  define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#endif
#ifndef GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#endif
#ifndef GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS
#  define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#endif
#ifndef GL_MAX_TESS_CONTROL_INPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#endif
#ifndef GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#endif
#ifndef GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#endif
#ifndef GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#endif
#ifndef GL_TESS_EVALUATION_SHADER
#  define GL_TESS_EVALUATION_SHADER 0x8E87
#endif
#ifndef GL_TESS_CONTROL_SHADER
#  define GL_TESS_CONTROL_SHADER 0x8E88
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glPatchParameteri
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERIPROC) (GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glPatchParameteri
extern PFNGLUXPATCHPARAMETERIPROC glPatchParameteri;
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
extern PFNGLUXPATCHPARAMETERFVPROC glPatchParameterfv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:41:57 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_tessellation_shader__
#define __GLUX_GL_ARB_tessellation_shader__

GLUX_NEW_PLUGIN(GL_ARB_tessellation_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_PATCHES
#  define GL_PATCHES 0x000E
#endif
#ifndef GL_PATCH_VERTICES
#  define GL_PATCH_VERTICES 0x8E72
#endif
#ifndef GL_PATCH_DEFAULT_INNER_LEVEL
#  define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#endif
#ifndef GL_PATCH_DEFAULT_OUTER_LEVEL
#  define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#endif
#ifndef GL_TESS_CONTROL_OUTPUT_VERTICES
#  define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#endif
#ifndef GL_TESS_GEN_MODE
#  define GL_TESS_GEN_MODE 0x8E76
#endif
#ifndef GL_TESS_GEN_SPACING
#  define GL_TESS_GEN_SPACING 0x8E77
#endif
#ifndef GL_TESS_GEN_VERTEX_ORDER
#  define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#endif
#ifndef GL_TESS_GEN_POINT_MODE
#  define GL_TESS_GEN_POINT_MODE 0x8E79
#endif
#ifndef GL_ISOLINES
#  define GL_ISOLINES 0x8E7A
#endif
#ifndef GL_FRACTIONAL_ODD
#  define GL_FRACTIONAL_ODD 0x8E7B
#endif
#ifndef GL_FRACTIONAL_EVEN
#  define GL_FRACTIONAL_EVEN 0x8E7C
#endif
#ifndef GL_MAX_PATCH_VERTICES
#  define GL_MAX_PATCH_VERTICES 0x8E7D
#endif
#ifndef GL_MAX_TESS_GEN_LEVEL
#  define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#endif
#ifndef GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#endif
#ifndef GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#endif
#ifndef GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#endif
#ifndef GL_MAX_TESS_PATCH_COMPONENTS
#  define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#endif
#ifndef GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#endif
#ifndef GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS
#  define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#endif
#ifndef GL_MAX_TESS_CONTROL_INPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#endif
#ifndef GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#endif
#ifndef GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#endif
#ifndef GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#endif
#ifndef GL_TESS_EVALUATION_SHADER
#  define GL_TESS_EVALUATION_SHADER 0x8E87
#endif
#ifndef GL_TESS_CONTROL_SHADER
#  define GL_TESS_CONTROL_SHADER 0x8E88
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glPatchParameteri
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERIPROC) (GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glPatchParameteri
extern PFNGLUXPATCHPARAMETERIPROC glPatchParameteri;
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
extern PFNGLUXPATCHPARAMETERFVPROC glPatchParameterfv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:38 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_tessellation_shader__
#define __GLUX_GL_ARB_tessellation_shader__

GLUX_NEW_PLUGIN(GL_ARB_tessellation_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_PATCHES
#  define GL_PATCHES 0x000E
#endif
#ifndef GL_PATCH_VERTICES
#  define GL_PATCH_VERTICES 0x8E72
#endif
#ifndef GL_PATCH_DEFAULT_INNER_LEVEL
#  define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#endif
#ifndef GL_PATCH_DEFAULT_OUTER_LEVEL
#  define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#endif
#ifndef GL_TESS_CONTROL_OUTPUT_VERTICES
#  define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#endif
#ifndef GL_TESS_GEN_MODE
#  define GL_TESS_GEN_MODE 0x8E76
#endif
#ifndef GL_TESS_GEN_SPACING
#  define GL_TESS_GEN_SPACING 0x8E77
#endif
#ifndef GL_TESS_GEN_VERTEX_ORDER
#  define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#endif
#ifndef GL_TESS_GEN_POINT_MODE
#  define GL_TESS_GEN_POINT_MODE 0x8E79
#endif
#ifndef GL_ISOLINES
#  define GL_ISOLINES 0x8E7A
#endif
#ifndef GL_FRACTIONAL_ODD
#  define GL_FRACTIONAL_ODD 0x8E7B
#endif
#ifndef GL_FRACTIONAL_EVEN
#  define GL_FRACTIONAL_EVEN 0x8E7C
#endif
#ifndef GL_MAX_PATCH_VERTICES
#  define GL_MAX_PATCH_VERTICES 0x8E7D
#endif
#ifndef GL_MAX_TESS_GEN_LEVEL
#  define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#endif
#ifndef GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#endif
#ifndef GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#endif
#ifndef GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#endif
#ifndef GL_MAX_TESS_PATCH_COMPONENTS
#  define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#endif
#ifndef GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#endif
#ifndef GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS
#  define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#endif
#ifndef GL_MAX_TESS_CONTROL_INPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#endif
#ifndef GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#endif
#ifndef GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#endif
#ifndef GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#endif
#ifndef GL_TESS_EVALUATION_SHADER
#  define GL_TESS_EVALUATION_SHADER 0x8E87
#endif
#ifndef GL_TESS_CONTROL_SHADER
#  define GL_TESS_CONTROL_SHADER 0x8E88
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glPatchParameteri
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERIPROC) (GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glPatchParameteri
extern PFNGLUXPATCHPARAMETERIPROC glPatchParameteri;
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
extern PFNGLUXPATCHPARAMETERFVPROC glPatchParameterfv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:09:57 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_tessellation_shader__
#define __GLUX_GL_ARB_tessellation_shader__

GLUX_NEW_PLUGIN(GL_ARB_tessellation_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_PATCHES
#  define GL_PATCHES 0x000E
#endif
#ifndef GL_PATCH_VERTICES
#  define GL_PATCH_VERTICES 0x8E72
#endif
#ifndef GL_PATCH_DEFAULT_INNER_LEVEL
#  define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#endif
#ifndef GL_PATCH_DEFAULT_OUTER_LEVEL
#  define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#endif
#ifndef GL_TESS_CONTROL_OUTPUT_VERTICES
#  define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#endif
#ifndef GL_TESS_GEN_MODE
#  define GL_TESS_GEN_MODE 0x8E76
#endif
#ifndef GL_TESS_GEN_SPACING
#  define GL_TESS_GEN_SPACING 0x8E77
#endif
#ifndef GL_TESS_GEN_VERTEX_ORDER
#  define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#endif
#ifndef GL_TESS_GEN_POINT_MODE
#  define GL_TESS_GEN_POINT_MODE 0x8E79
#endif
#ifndef GL_ISOLINES
#  define GL_ISOLINES 0x8E7A
#endif
#ifndef GL_FRACTIONAL_ODD
#  define GL_FRACTIONAL_ODD 0x8E7B
#endif
#ifndef GL_FRACTIONAL_EVEN
#  define GL_FRACTIONAL_EVEN 0x8E7C
#endif
#ifndef GL_MAX_PATCH_VERTICES
#  define GL_MAX_PATCH_VERTICES 0x8E7D
#endif
#ifndef GL_MAX_TESS_GEN_LEVEL
#  define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#endif
#ifndef GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#endif
#ifndef GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#endif
#ifndef GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#endif
#ifndef GL_MAX_TESS_PATCH_COMPONENTS
#  define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#endif
#ifndef GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#endif
#ifndef GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS
#  define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#endif
#ifndef GL_MAX_TESS_CONTROL_INPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#endif
#ifndef GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#endif
#ifndef GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#endif
#ifndef GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#endif
#ifndef GL_TESS_EVALUATION_SHADER
#  define GL_TESS_EVALUATION_SHADER 0x8E87
#endif
#ifndef GL_TESS_CONTROL_SHADER
#  define GL_TESS_CONTROL_SHADER 0x8E88
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glPatchParameteri
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERIPROC) (GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glPatchParameteri
extern PFNGLUXPATCHPARAMETERIPROC glPatchParameteri;
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
extern PFNGLUXPATCHPARAMETERFVPROC glPatchParameterfv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:19:58 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_tessellation_shader__
#define __GLUX_GL_ARB_tessellation_shader__

GLUX_NEW_PLUGIN(GL_ARB_tessellation_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_PATCHES
#  define GL_PATCHES 0x000E
#endif
#ifndef GL_PATCH_VERTICES
#  define GL_PATCH_VERTICES 0x8E72
#endif
#ifndef GL_PATCH_DEFAULT_INNER_LEVEL
#  define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#endif
#ifndef GL_PATCH_DEFAULT_OUTER_LEVEL
#  define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#endif
#ifndef GL_TESS_CONTROL_OUTPUT_VERTICES
#  define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#endif
#ifndef GL_TESS_GEN_MODE
#  define GL_TESS_GEN_MODE 0x8E76
#endif
#ifndef GL_TESS_GEN_SPACING
#  define GL_TESS_GEN_SPACING 0x8E77
#endif
#ifndef GL_TESS_GEN_VERTEX_ORDER
#  define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#endif
#ifndef GL_TESS_GEN_POINT_MODE
#  define GL_TESS_GEN_POINT_MODE 0x8E79
#endif
#ifndef GL_ISOLINES
#  define GL_ISOLINES 0x8E7A
#endif
#ifndef GL_FRACTIONAL_ODD
#  define GL_FRACTIONAL_ODD 0x8E7B
#endif
#ifndef GL_FRACTIONAL_EVEN
#  define GL_FRACTIONAL_EVEN 0x8E7C
#endif
#ifndef GL_MAX_PATCH_VERTICES
#  define GL_MAX_PATCH_VERTICES 0x8E7D
#endif
#ifndef GL_MAX_TESS_GEN_LEVEL
#  define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#endif
#ifndef GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#endif
#ifndef GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#endif
#ifndef GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#endif
#ifndef GL_MAX_TESS_PATCH_COMPONENTS
#  define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#endif
#ifndef GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#endif
#ifndef GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS
#  define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#endif
#ifndef GL_MAX_TESS_CONTROL_INPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#endif
#ifndef GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#endif
#ifndef GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#endif
#ifndef GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#endif
#ifndef GL_TESS_EVALUATION_SHADER
#  define GL_TESS_EVALUATION_SHADER 0x8E87
#endif
#ifndef GL_TESS_CONTROL_SHADER
#  define GL_TESS_CONTROL_SHADER 0x8E88
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glPatchParameteri
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERIPROC) (GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glPatchParameteri
extern PFNGLUXPATCHPARAMETERIPROC glPatchParameteri;
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
extern PFNGLUXPATCHPARAMETERFVPROC glPatchParameterfv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:42:56 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_tessellation_shader__
#define __GLUX_GL_ARB_tessellation_shader__

GLUX_NEW_PLUGIN(GL_ARB_tessellation_shader)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_PATCHES
#  define GL_PATCHES 0x000E
#endif
#ifndef GL_PATCH_VERTICES
#  define GL_PATCH_VERTICES 0x8E72
#endif
#ifndef GL_PATCH_DEFAULT_INNER_LEVEL
#  define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#endif
#ifndef GL_PATCH_DEFAULT_OUTER_LEVEL
#  define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#endif
#ifndef GL_TESS_CONTROL_OUTPUT_VERTICES
#  define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#endif
#ifndef GL_TESS_GEN_MODE
#  define GL_TESS_GEN_MODE 0x8E76
#endif
#ifndef GL_TESS_GEN_SPACING
#  define GL_TESS_GEN_SPACING 0x8E77
#endif
#ifndef GL_TESS_GEN_VERTEX_ORDER
#  define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#endif
#ifndef GL_TESS_GEN_POINT_MODE
#  define GL_TESS_GEN_POINT_MODE 0x8E79
#endif
#ifndef GL_ISOLINES
#  define GL_ISOLINES 0x8E7A
#endif
#ifndef GL_FRACTIONAL_ODD
#  define GL_FRACTIONAL_ODD 0x8E7B
#endif
#ifndef GL_FRACTIONAL_EVEN
#  define GL_FRACTIONAL_EVEN 0x8E7C
#endif
#ifndef GL_MAX_PATCH_VERTICES
#  define GL_MAX_PATCH_VERTICES 0x8E7D
#endif
#ifndef GL_MAX_TESS_GEN_LEVEL
#  define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#endif
#ifndef GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#endif
#ifndef GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#endif
#ifndef GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#endif
#ifndef GL_MAX_TESS_PATCH_COMPONENTS
#  define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#endif
#ifndef GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#endif
#ifndef GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#endif
#ifndef GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS
#  define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#endif
#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
#  define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#endif
#ifndef GL_MAX_TESS_CONTROL_INPUT_COMPONENTS
#  define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#endif
#ifndef GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS
#  define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#endif
#ifndef GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#endif
#ifndef GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#endif
#ifndef GL_TESS_EVALUATION_SHADER
#  define GL_TESS_EVALUATION_SHADER 0x8E87
#endif
#ifndef GL_TESS_CONTROL_SHADER
#  define GL_TESS_CONTROL_SHADER 0x8E88
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glPatchParameteri
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERIPROC) (GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
typedef void (APIENTRYP PFNGLUXPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glPatchParameteri
extern PFNGLUXPATCHPARAMETERIPROC glPatchParameteri;
#endif
#ifndef __GLUX__GLFCT_glPatchParameterfv
extern PFNGLUXPATCHPARAMETERFVPROC glPatchParameterfv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
