
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:25 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_internalformat_query2__
#define __GLUX_GL_ARB_internalformat_query2__

GLUX_NEW_PLUGIN(GL_ARB_internalformat_query2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INTERNALFORMAT_SUPPORTED
#  define GL_INTERNALFORMAT_SUPPORTED 0x826F
#endif
#ifndef GL_INTERNALFORMAT_PREFERRED
#  define GL_INTERNALFORMAT_PREFERRED 0x8270
#endif
#ifndef GL_INTERNALFORMAT_RED_SIZE
#  define GL_INTERNALFORMAT_RED_SIZE 0x8271
#endif
#ifndef GL_INTERNALFORMAT_GREEN_SIZE
#  define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#endif
#ifndef GL_INTERNALFORMAT_BLUE_SIZE
#  define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_SIZE
#  define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_SIZE
#  define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_SIZE
#  define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#endif
#ifndef GL_INTERNALFORMAT_SHARED_SIZE
#  define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#endif
#ifndef GL_INTERNALFORMAT_RED_TYPE
#  define GL_INTERNALFORMAT_RED_TYPE 0x8278
#endif
#ifndef GL_INTERNALFORMAT_GREEN_TYPE
#  define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#endif
#ifndef GL_INTERNALFORMAT_BLUE_TYPE
#  define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_TYPE
#  define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_TYPE
#  define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_TYPE
#  define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#endif
#ifndef GL_MAX_WIDTH
#  define GL_MAX_WIDTH 0x827E
#endif
#ifndef GL_MAX_HEIGHT
#  define GL_MAX_HEIGHT 0x827F
#endif
#ifndef GL_MAX_DEPTH
#  define GL_MAX_DEPTH 0x8280
#endif
#ifndef GL_MAX_LAYERS
#  define GL_MAX_LAYERS 0x8281
#endif
#ifndef GL_MAX_COMBINED_DIMENSIONS
#  define GL_MAX_COMBINED_DIMENSIONS 0x8282
#endif
#ifndef GL_COLOR_COMPONENTS
#  define GL_COLOR_COMPONENTS 0x8283
#endif
#ifndef GL_DEPTH_COMPONENTS
#  define GL_DEPTH_COMPONENTS 0x8284
#endif
#ifndef GL_STENCIL_COMPONENTS
#  define GL_STENCIL_COMPONENTS 0x8285
#endif
#ifndef GL_COLOR_RENDERABLE
#  define GL_COLOR_RENDERABLE 0x8286
#endif
#ifndef GL_DEPTH_RENDERABLE
#  define GL_DEPTH_RENDERABLE 0x8287
#endif
#ifndef GL_STENCIL_RENDERABLE
#  define GL_STENCIL_RENDERABLE 0x8288
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE
#  define GL_FRAMEBUFFER_RENDERABLE 0x8289
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE_LAYERED
#  define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#endif
#ifndef GL_FRAMEBUFFER_BLEND
#  define GL_FRAMEBUFFER_BLEND 0x828B
#endif
#ifndef GL_READ_PIXELS
#  define GL_READ_PIXELS 0x828C
#endif
#ifndef GL_READ_PIXELS_FORMAT
#  define GL_READ_PIXELS_FORMAT 0x828D
#endif
#ifndef GL_READ_PIXELS_TYPE
#  define GL_READ_PIXELS_TYPE 0x828E
#endif
#ifndef GL_TEXTURE_IMAGE_FORMAT
#  define GL_TEXTURE_IMAGE_FORMAT 0x828F
#endif
#ifndef GL_TEXTURE_IMAGE_TYPE
#  define GL_TEXTURE_IMAGE_TYPE 0x8290
#endif
#ifndef GL_GET_TEXTURE_IMAGE_FORMAT
#  define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#endif
#ifndef GL_GET_TEXTURE_IMAGE_TYPE
#  define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#endif
#ifndef GL_MIPMAP
#  define GL_MIPMAP 0x8293
#endif
#ifndef GL_MANUAL_GENERATE_MIPMAP
#  define GL_MANUAL_GENERATE_MIPMAP 0x8294
#endif
#ifndef GL_AUTO_GENERATE_MIPMAP
#  define GL_AUTO_GENERATE_MIPMAP 0x8295
#endif
#ifndef GL_COLOR_ENCODING
#  define GL_COLOR_ENCODING 0x8296
#endif
#ifndef GL_SRGB_READ
#  define GL_SRGB_READ 0x8297
#endif
#ifndef GL_SRGB_WRITE
#  define GL_SRGB_WRITE 0x8298
#endif
#ifndef GL_SRGB_DECODE_ARB
#  define GL_SRGB_DECODE_ARB 0x8299
#endif
#ifndef GL_FILTER
#  define GL_FILTER 0x829A
#endif
#ifndef GL_VERTEX_TEXTURE
#  define GL_VERTEX_TEXTURE 0x829B
#endif
#ifndef GL_TESS_CONTROL_TEXTURE
#  define GL_TESS_CONTROL_TEXTURE 0x829C
#endif
#ifndef GL_TESS_EVALUATION_TEXTURE
#  define GL_TESS_EVALUATION_TEXTURE 0x829D
#endif
#ifndef GL_GEOMETRY_TEXTURE
#  define GL_GEOMETRY_TEXTURE 0x829E
#endif
#ifndef GL_FRAGMENT_TEXTURE
#  define GL_FRAGMENT_TEXTURE 0x829F
#endif
#ifndef GL_COMPUTE_TEXTURE
#  define GL_COMPUTE_TEXTURE 0x82A0
#endif
#ifndef GL_TEXTURE_SHADOW
#  define GL_TEXTURE_SHADOW 0x82A1
#endif
#ifndef GL_TEXTURE_GATHER
#  define GL_TEXTURE_GATHER 0x82A2
#endif
#ifndef GL_TEXTURE_GATHER_SHADOW
#  define GL_TEXTURE_GATHER_SHADOW 0x82A3
#endif
#ifndef GL_SHADER_IMAGE_LOAD
#  define GL_SHADER_IMAGE_LOAD 0x82A4
#endif
#ifndef GL_SHADER_IMAGE_STORE
#  define GL_SHADER_IMAGE_STORE 0x82A5
#endif
#ifndef GL_SHADER_IMAGE_ATOMIC
#  define GL_SHADER_IMAGE_ATOMIC 0x82A6
#endif
#ifndef GL_IMAGE_TEXEL_SIZE
#  define GL_IMAGE_TEXEL_SIZE 0x82A7
#endif
#ifndef GL_IMAGE_COMPATIBILITY_CLASS
#  define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#endif
#ifndef GL_IMAGE_PIXEL_FORMAT
#  define GL_IMAGE_PIXEL_FORMAT 0x82A9
#endif
#ifndef GL_IMAGE_PIXEL_TYPE
#  define GL_IMAGE_PIXEL_TYPE 0x82AA
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_WIDTH
#  define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT
#  define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_SIZE
#  define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#endif
#ifndef GL_CLEAR_BUFFER
#  define GL_CLEAR_BUFFER 0x82B4
#endif
#ifndef GL_TEXTURE_VIEW
#  define GL_TEXTURE_VIEW 0x82B5
#endif
#ifndef GL_VIEW_COMPATIBILITY_CLASS
#  define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#endif
#ifndef GL_FULL_SUPPORT
#  define GL_FULL_SUPPORT 0x82B7
#endif
#ifndef GL_CAVEAT_SUPPORT
#  define GL_CAVEAT_SUPPORT 0x82B8
#endif
#ifndef GL_IMAGE_CLASS_4_X_32
#  define GL_IMAGE_CLASS_4_X_32 0x82B9
#endif
#ifndef GL_IMAGE_CLASS_2_X_32
#  define GL_IMAGE_CLASS_2_X_32 0x82BA
#endif
#ifndef GL_IMAGE_CLASS_1_X_32
#  define GL_IMAGE_CLASS_1_X_32 0x82BB
#endif
#ifndef GL_IMAGE_CLASS_4_X_16
#  define GL_IMAGE_CLASS_4_X_16 0x82BC
#endif
#ifndef GL_IMAGE_CLASS_2_X_16
#  define GL_IMAGE_CLASS_2_X_16 0x82BD
#endif
#ifndef GL_IMAGE_CLASS_1_X_16
#  define GL_IMAGE_CLASS_1_X_16 0x82BE
#endif
#ifndef GL_IMAGE_CLASS_4_X_8
#  define GL_IMAGE_CLASS_4_X_8 0x82BF
#endif
#ifndef GL_IMAGE_CLASS_2_X_8
#  define GL_IMAGE_CLASS_2_X_8 0x82C0
#endif
#ifndef GL_IMAGE_CLASS_1_X_8
#  define GL_IMAGE_CLASS_1_X_8 0x82C1
#endif
#ifndef GL_IMAGE_CLASS_11_11_10
#  define GL_IMAGE_CLASS_11_11_10 0x82C2
#endif
#ifndef GL_IMAGE_CLASS_10_10_10_2
#  define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#endif
#ifndef GL_VIEW_CLASS_128_BITS
#  define GL_VIEW_CLASS_128_BITS 0x82C4
#endif
#ifndef GL_VIEW_CLASS_96_BITS
#  define GL_VIEW_CLASS_96_BITS 0x82C5
#endif
#ifndef GL_VIEW_CLASS_64_BITS
#  define GL_VIEW_CLASS_64_BITS 0x82C6
#endif
#ifndef GL_VIEW_CLASS_48_BITS
#  define GL_VIEW_CLASS_48_BITS 0x82C7
#endif
#ifndef GL_VIEW_CLASS_32_BITS
#  define GL_VIEW_CLASS_32_BITS 0x82C8
#endif
#ifndef GL_VIEW_CLASS_24_BITS
#  define GL_VIEW_CLASS_24_BITS 0x82C9
#endif
#ifndef GL_VIEW_CLASS_16_BITS
#  define GL_VIEW_CLASS_16_BITS 0x82CA
#endif
#ifndef GL_VIEW_CLASS_8_BITS
#  define GL_VIEW_CLASS_8_BITS 0x82CB
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGB
#  define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT3_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT5_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#endif
#ifndef GL_VIEW_CLASS_RGTC1_RED
#  define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#endif
#ifndef GL_VIEW_CLASS_RGTC2_RG
#  define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#endif
#ifndef GL_VIEW_CLASS_BPTC_UNORM
#  define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#endif
#ifndef GL_VIEW_CLASS_BPTC_FLOAT
#  define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetInternalformati64v
typedef void (APIENTRYP PFNGLUXGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetInternalformati64v
extern PFNGLUXGETINTERNALFORMATI64VPROC glGetInternalformati64v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:43 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_internalformat_query2__
#define __GLUX_GL_ARB_internalformat_query2__

GLUX_NEW_PLUGIN(GL_ARB_internalformat_query2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INTERNALFORMAT_SUPPORTED
#  define GL_INTERNALFORMAT_SUPPORTED 0x826F
#endif
#ifndef GL_INTERNALFORMAT_PREFERRED
#  define GL_INTERNALFORMAT_PREFERRED 0x8270
#endif
#ifndef GL_INTERNALFORMAT_RED_SIZE
#  define GL_INTERNALFORMAT_RED_SIZE 0x8271
#endif
#ifndef GL_INTERNALFORMAT_GREEN_SIZE
#  define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#endif
#ifndef GL_INTERNALFORMAT_BLUE_SIZE
#  define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_SIZE
#  define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_SIZE
#  define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_SIZE
#  define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#endif
#ifndef GL_INTERNALFORMAT_SHARED_SIZE
#  define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#endif
#ifndef GL_INTERNALFORMAT_RED_TYPE
#  define GL_INTERNALFORMAT_RED_TYPE 0x8278
#endif
#ifndef GL_INTERNALFORMAT_GREEN_TYPE
#  define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#endif
#ifndef GL_INTERNALFORMAT_BLUE_TYPE
#  define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_TYPE
#  define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_TYPE
#  define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_TYPE
#  define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#endif
#ifndef GL_MAX_WIDTH
#  define GL_MAX_WIDTH 0x827E
#endif
#ifndef GL_MAX_HEIGHT
#  define GL_MAX_HEIGHT 0x827F
#endif
#ifndef GL_MAX_DEPTH
#  define GL_MAX_DEPTH 0x8280
#endif
#ifndef GL_MAX_LAYERS
#  define GL_MAX_LAYERS 0x8281
#endif
#ifndef GL_MAX_COMBINED_DIMENSIONS
#  define GL_MAX_COMBINED_DIMENSIONS 0x8282
#endif
#ifndef GL_COLOR_COMPONENTS
#  define GL_COLOR_COMPONENTS 0x8283
#endif
#ifndef GL_DEPTH_COMPONENTS
#  define GL_DEPTH_COMPONENTS 0x8284
#endif
#ifndef GL_STENCIL_COMPONENTS
#  define GL_STENCIL_COMPONENTS 0x8285
#endif
#ifndef GL_COLOR_RENDERABLE
#  define GL_COLOR_RENDERABLE 0x8286
#endif
#ifndef GL_DEPTH_RENDERABLE
#  define GL_DEPTH_RENDERABLE 0x8287
#endif
#ifndef GL_STENCIL_RENDERABLE
#  define GL_STENCIL_RENDERABLE 0x8288
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE
#  define GL_FRAMEBUFFER_RENDERABLE 0x8289
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE_LAYERED
#  define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#endif
#ifndef GL_FRAMEBUFFER_BLEND
#  define GL_FRAMEBUFFER_BLEND 0x828B
#endif
#ifndef GL_READ_PIXELS
#  define GL_READ_PIXELS 0x828C
#endif
#ifndef GL_READ_PIXELS_FORMAT
#  define GL_READ_PIXELS_FORMAT 0x828D
#endif
#ifndef GL_READ_PIXELS_TYPE
#  define GL_READ_PIXELS_TYPE 0x828E
#endif
#ifndef GL_TEXTURE_IMAGE_FORMAT
#  define GL_TEXTURE_IMAGE_FORMAT 0x828F
#endif
#ifndef GL_TEXTURE_IMAGE_TYPE
#  define GL_TEXTURE_IMAGE_TYPE 0x8290
#endif
#ifndef GL_GET_TEXTURE_IMAGE_FORMAT
#  define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#endif
#ifndef GL_GET_TEXTURE_IMAGE_TYPE
#  define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#endif
#ifndef GL_MIPMAP
#  define GL_MIPMAP 0x8293
#endif
#ifndef GL_MANUAL_GENERATE_MIPMAP
#  define GL_MANUAL_GENERATE_MIPMAP 0x8294
#endif
#ifndef GL_AUTO_GENERATE_MIPMAP
#  define GL_AUTO_GENERATE_MIPMAP 0x8295
#endif
#ifndef GL_COLOR_ENCODING
#  define GL_COLOR_ENCODING 0x8296
#endif
#ifndef GL_SRGB_READ
#  define GL_SRGB_READ 0x8297
#endif
#ifndef GL_SRGB_WRITE
#  define GL_SRGB_WRITE 0x8298
#endif
#ifndef GL_SRGB_DECODE_ARB
#  define GL_SRGB_DECODE_ARB 0x8299
#endif
#ifndef GL_FILTER
#  define GL_FILTER 0x829A
#endif
#ifndef GL_VERTEX_TEXTURE
#  define GL_VERTEX_TEXTURE 0x829B
#endif
#ifndef GL_TESS_CONTROL_TEXTURE
#  define GL_TESS_CONTROL_TEXTURE 0x829C
#endif
#ifndef GL_TESS_EVALUATION_TEXTURE
#  define GL_TESS_EVALUATION_TEXTURE 0x829D
#endif
#ifndef GL_GEOMETRY_TEXTURE
#  define GL_GEOMETRY_TEXTURE 0x829E
#endif
#ifndef GL_FRAGMENT_TEXTURE
#  define GL_FRAGMENT_TEXTURE 0x829F
#endif
#ifndef GL_COMPUTE_TEXTURE
#  define GL_COMPUTE_TEXTURE 0x82A0
#endif
#ifndef GL_TEXTURE_SHADOW
#  define GL_TEXTURE_SHADOW 0x82A1
#endif
#ifndef GL_TEXTURE_GATHER
#  define GL_TEXTURE_GATHER 0x82A2
#endif
#ifndef GL_TEXTURE_GATHER_SHADOW
#  define GL_TEXTURE_GATHER_SHADOW 0x82A3
#endif
#ifndef GL_SHADER_IMAGE_LOAD
#  define GL_SHADER_IMAGE_LOAD 0x82A4
#endif
#ifndef GL_SHADER_IMAGE_STORE
#  define GL_SHADER_IMAGE_STORE 0x82A5
#endif
#ifndef GL_SHADER_IMAGE_ATOMIC
#  define GL_SHADER_IMAGE_ATOMIC 0x82A6
#endif
#ifndef GL_IMAGE_TEXEL_SIZE
#  define GL_IMAGE_TEXEL_SIZE 0x82A7
#endif
#ifndef GL_IMAGE_COMPATIBILITY_CLASS
#  define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#endif
#ifndef GL_IMAGE_PIXEL_FORMAT
#  define GL_IMAGE_PIXEL_FORMAT 0x82A9
#endif
#ifndef GL_IMAGE_PIXEL_TYPE
#  define GL_IMAGE_PIXEL_TYPE 0x82AA
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_WIDTH
#  define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT
#  define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_SIZE
#  define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#endif
#ifndef GL_CLEAR_BUFFER
#  define GL_CLEAR_BUFFER 0x82B4
#endif
#ifndef GL_TEXTURE_VIEW
#  define GL_TEXTURE_VIEW 0x82B5
#endif
#ifndef GL_VIEW_COMPATIBILITY_CLASS
#  define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#endif
#ifndef GL_FULL_SUPPORT
#  define GL_FULL_SUPPORT 0x82B7
#endif
#ifndef GL_CAVEAT_SUPPORT
#  define GL_CAVEAT_SUPPORT 0x82B8
#endif
#ifndef GL_IMAGE_CLASS_4_X_32
#  define GL_IMAGE_CLASS_4_X_32 0x82B9
#endif
#ifndef GL_IMAGE_CLASS_2_X_32
#  define GL_IMAGE_CLASS_2_X_32 0x82BA
#endif
#ifndef GL_IMAGE_CLASS_1_X_32
#  define GL_IMAGE_CLASS_1_X_32 0x82BB
#endif
#ifndef GL_IMAGE_CLASS_4_X_16
#  define GL_IMAGE_CLASS_4_X_16 0x82BC
#endif
#ifndef GL_IMAGE_CLASS_2_X_16
#  define GL_IMAGE_CLASS_2_X_16 0x82BD
#endif
#ifndef GL_IMAGE_CLASS_1_X_16
#  define GL_IMAGE_CLASS_1_X_16 0x82BE
#endif
#ifndef GL_IMAGE_CLASS_4_X_8
#  define GL_IMAGE_CLASS_4_X_8 0x82BF
#endif
#ifndef GL_IMAGE_CLASS_2_X_8
#  define GL_IMAGE_CLASS_2_X_8 0x82C0
#endif
#ifndef GL_IMAGE_CLASS_1_X_8
#  define GL_IMAGE_CLASS_1_X_8 0x82C1
#endif
#ifndef GL_IMAGE_CLASS_11_11_10
#  define GL_IMAGE_CLASS_11_11_10 0x82C2
#endif
#ifndef GL_IMAGE_CLASS_10_10_10_2
#  define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#endif
#ifndef GL_VIEW_CLASS_128_BITS
#  define GL_VIEW_CLASS_128_BITS 0x82C4
#endif
#ifndef GL_VIEW_CLASS_96_BITS
#  define GL_VIEW_CLASS_96_BITS 0x82C5
#endif
#ifndef GL_VIEW_CLASS_64_BITS
#  define GL_VIEW_CLASS_64_BITS 0x82C6
#endif
#ifndef GL_VIEW_CLASS_48_BITS
#  define GL_VIEW_CLASS_48_BITS 0x82C7
#endif
#ifndef GL_VIEW_CLASS_32_BITS
#  define GL_VIEW_CLASS_32_BITS 0x82C8
#endif
#ifndef GL_VIEW_CLASS_24_BITS
#  define GL_VIEW_CLASS_24_BITS 0x82C9
#endif
#ifndef GL_VIEW_CLASS_16_BITS
#  define GL_VIEW_CLASS_16_BITS 0x82CA
#endif
#ifndef GL_VIEW_CLASS_8_BITS
#  define GL_VIEW_CLASS_8_BITS 0x82CB
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGB
#  define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT3_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT5_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#endif
#ifndef GL_VIEW_CLASS_RGTC1_RED
#  define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#endif
#ifndef GL_VIEW_CLASS_RGTC2_RG
#  define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#endif
#ifndef GL_VIEW_CLASS_BPTC_UNORM
#  define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#endif
#ifndef GL_VIEW_CLASS_BPTC_FLOAT
#  define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetInternalformati64v
typedef void (APIENTRYP PFNGLUXGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetInternalformati64v
extern PFNGLUXGETINTERNALFORMATI64VPROC glGetInternalformati64v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:53 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_internalformat_query2__
#define __GLUX_GL_ARB_internalformat_query2__

GLUX_NEW_PLUGIN(GL_ARB_internalformat_query2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INTERNALFORMAT_SUPPORTED
#  define GL_INTERNALFORMAT_SUPPORTED 0x826F
#endif
#ifndef GL_INTERNALFORMAT_PREFERRED
#  define GL_INTERNALFORMAT_PREFERRED 0x8270
#endif
#ifndef GL_INTERNALFORMAT_RED_SIZE
#  define GL_INTERNALFORMAT_RED_SIZE 0x8271
#endif
#ifndef GL_INTERNALFORMAT_GREEN_SIZE
#  define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#endif
#ifndef GL_INTERNALFORMAT_BLUE_SIZE
#  define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_SIZE
#  define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_SIZE
#  define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_SIZE
#  define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#endif
#ifndef GL_INTERNALFORMAT_SHARED_SIZE
#  define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#endif
#ifndef GL_INTERNALFORMAT_RED_TYPE
#  define GL_INTERNALFORMAT_RED_TYPE 0x8278
#endif
#ifndef GL_INTERNALFORMAT_GREEN_TYPE
#  define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#endif
#ifndef GL_INTERNALFORMAT_BLUE_TYPE
#  define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_TYPE
#  define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_TYPE
#  define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_TYPE
#  define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#endif
#ifndef GL_MAX_WIDTH
#  define GL_MAX_WIDTH 0x827E
#endif
#ifndef GL_MAX_HEIGHT
#  define GL_MAX_HEIGHT 0x827F
#endif
#ifndef GL_MAX_DEPTH
#  define GL_MAX_DEPTH 0x8280
#endif
#ifndef GL_MAX_LAYERS
#  define GL_MAX_LAYERS 0x8281
#endif
#ifndef GL_MAX_COMBINED_DIMENSIONS
#  define GL_MAX_COMBINED_DIMENSIONS 0x8282
#endif
#ifndef GL_COLOR_COMPONENTS
#  define GL_COLOR_COMPONENTS 0x8283
#endif
#ifndef GL_DEPTH_COMPONENTS
#  define GL_DEPTH_COMPONENTS 0x8284
#endif
#ifndef GL_STENCIL_COMPONENTS
#  define GL_STENCIL_COMPONENTS 0x8285
#endif
#ifndef GL_COLOR_RENDERABLE
#  define GL_COLOR_RENDERABLE 0x8286
#endif
#ifndef GL_DEPTH_RENDERABLE
#  define GL_DEPTH_RENDERABLE 0x8287
#endif
#ifndef GL_STENCIL_RENDERABLE
#  define GL_STENCIL_RENDERABLE 0x8288
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE
#  define GL_FRAMEBUFFER_RENDERABLE 0x8289
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE_LAYERED
#  define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#endif
#ifndef GL_FRAMEBUFFER_BLEND
#  define GL_FRAMEBUFFER_BLEND 0x828B
#endif
#ifndef GL_READ_PIXELS
#  define GL_READ_PIXELS 0x828C
#endif
#ifndef GL_READ_PIXELS_FORMAT
#  define GL_READ_PIXELS_FORMAT 0x828D
#endif
#ifndef GL_READ_PIXELS_TYPE
#  define GL_READ_PIXELS_TYPE 0x828E
#endif
#ifndef GL_TEXTURE_IMAGE_FORMAT
#  define GL_TEXTURE_IMAGE_FORMAT 0x828F
#endif
#ifndef GL_TEXTURE_IMAGE_TYPE
#  define GL_TEXTURE_IMAGE_TYPE 0x8290
#endif
#ifndef GL_GET_TEXTURE_IMAGE_FORMAT
#  define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#endif
#ifndef GL_GET_TEXTURE_IMAGE_TYPE
#  define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#endif
#ifndef GL_MIPMAP
#  define GL_MIPMAP 0x8293
#endif
#ifndef GL_MANUAL_GENERATE_MIPMAP
#  define GL_MANUAL_GENERATE_MIPMAP 0x8294
#endif
#ifndef GL_AUTO_GENERATE_MIPMAP
#  define GL_AUTO_GENERATE_MIPMAP 0x8295
#endif
#ifndef GL_COLOR_ENCODING
#  define GL_COLOR_ENCODING 0x8296
#endif
#ifndef GL_SRGB_READ
#  define GL_SRGB_READ 0x8297
#endif
#ifndef GL_SRGB_WRITE
#  define GL_SRGB_WRITE 0x8298
#endif
#ifndef GL_SRGB_DECODE_ARB
#  define GL_SRGB_DECODE_ARB 0x8299
#endif
#ifndef GL_FILTER
#  define GL_FILTER 0x829A
#endif
#ifndef GL_VERTEX_TEXTURE
#  define GL_VERTEX_TEXTURE 0x829B
#endif
#ifndef GL_TESS_CONTROL_TEXTURE
#  define GL_TESS_CONTROL_TEXTURE 0x829C
#endif
#ifndef GL_TESS_EVALUATION_TEXTURE
#  define GL_TESS_EVALUATION_TEXTURE 0x829D
#endif
#ifndef GL_GEOMETRY_TEXTURE
#  define GL_GEOMETRY_TEXTURE 0x829E
#endif
#ifndef GL_FRAGMENT_TEXTURE
#  define GL_FRAGMENT_TEXTURE 0x829F
#endif
#ifndef GL_COMPUTE_TEXTURE
#  define GL_COMPUTE_TEXTURE 0x82A0
#endif
#ifndef GL_TEXTURE_SHADOW
#  define GL_TEXTURE_SHADOW 0x82A1
#endif
#ifndef GL_TEXTURE_GATHER
#  define GL_TEXTURE_GATHER 0x82A2
#endif
#ifndef GL_TEXTURE_GATHER_SHADOW
#  define GL_TEXTURE_GATHER_SHADOW 0x82A3
#endif
#ifndef GL_SHADER_IMAGE_LOAD
#  define GL_SHADER_IMAGE_LOAD 0x82A4
#endif
#ifndef GL_SHADER_IMAGE_STORE
#  define GL_SHADER_IMAGE_STORE 0x82A5
#endif
#ifndef GL_SHADER_IMAGE_ATOMIC
#  define GL_SHADER_IMAGE_ATOMIC 0x82A6
#endif
#ifndef GL_IMAGE_TEXEL_SIZE
#  define GL_IMAGE_TEXEL_SIZE 0x82A7
#endif
#ifndef GL_IMAGE_COMPATIBILITY_CLASS
#  define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#endif
#ifndef GL_IMAGE_PIXEL_FORMAT
#  define GL_IMAGE_PIXEL_FORMAT 0x82A9
#endif
#ifndef GL_IMAGE_PIXEL_TYPE
#  define GL_IMAGE_PIXEL_TYPE 0x82AA
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_WIDTH
#  define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT
#  define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_SIZE
#  define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#endif
#ifndef GL_CLEAR_BUFFER
#  define GL_CLEAR_BUFFER 0x82B4
#endif
#ifndef GL_TEXTURE_VIEW
#  define GL_TEXTURE_VIEW 0x82B5
#endif
#ifndef GL_VIEW_COMPATIBILITY_CLASS
#  define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#endif
#ifndef GL_FULL_SUPPORT
#  define GL_FULL_SUPPORT 0x82B7
#endif
#ifndef GL_CAVEAT_SUPPORT
#  define GL_CAVEAT_SUPPORT 0x82B8
#endif
#ifndef GL_IMAGE_CLASS_4_X_32
#  define GL_IMAGE_CLASS_4_X_32 0x82B9
#endif
#ifndef GL_IMAGE_CLASS_2_X_32
#  define GL_IMAGE_CLASS_2_X_32 0x82BA
#endif
#ifndef GL_IMAGE_CLASS_1_X_32
#  define GL_IMAGE_CLASS_1_X_32 0x82BB
#endif
#ifndef GL_IMAGE_CLASS_4_X_16
#  define GL_IMAGE_CLASS_4_X_16 0x82BC
#endif
#ifndef GL_IMAGE_CLASS_2_X_16
#  define GL_IMAGE_CLASS_2_X_16 0x82BD
#endif
#ifndef GL_IMAGE_CLASS_1_X_16
#  define GL_IMAGE_CLASS_1_X_16 0x82BE
#endif
#ifndef GL_IMAGE_CLASS_4_X_8
#  define GL_IMAGE_CLASS_4_X_8 0x82BF
#endif
#ifndef GL_IMAGE_CLASS_2_X_8
#  define GL_IMAGE_CLASS_2_X_8 0x82C0
#endif
#ifndef GL_IMAGE_CLASS_1_X_8
#  define GL_IMAGE_CLASS_1_X_8 0x82C1
#endif
#ifndef GL_IMAGE_CLASS_11_11_10
#  define GL_IMAGE_CLASS_11_11_10 0x82C2
#endif
#ifndef GL_IMAGE_CLASS_10_10_10_2
#  define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#endif
#ifndef GL_VIEW_CLASS_128_BITS
#  define GL_VIEW_CLASS_128_BITS 0x82C4
#endif
#ifndef GL_VIEW_CLASS_96_BITS
#  define GL_VIEW_CLASS_96_BITS 0x82C5
#endif
#ifndef GL_VIEW_CLASS_64_BITS
#  define GL_VIEW_CLASS_64_BITS 0x82C6
#endif
#ifndef GL_VIEW_CLASS_48_BITS
#  define GL_VIEW_CLASS_48_BITS 0x82C7
#endif
#ifndef GL_VIEW_CLASS_32_BITS
#  define GL_VIEW_CLASS_32_BITS 0x82C8
#endif
#ifndef GL_VIEW_CLASS_24_BITS
#  define GL_VIEW_CLASS_24_BITS 0x82C9
#endif
#ifndef GL_VIEW_CLASS_16_BITS
#  define GL_VIEW_CLASS_16_BITS 0x82CA
#endif
#ifndef GL_VIEW_CLASS_8_BITS
#  define GL_VIEW_CLASS_8_BITS 0x82CB
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGB
#  define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT3_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT5_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#endif
#ifndef GL_VIEW_CLASS_RGTC1_RED
#  define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#endif
#ifndef GL_VIEW_CLASS_RGTC2_RG
#  define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#endif
#ifndef GL_VIEW_CLASS_BPTC_UNORM
#  define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#endif
#ifndef GL_VIEW_CLASS_BPTC_FLOAT
#  define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetInternalformati64v
typedef void (APIENTRYP PFNGLUXGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetInternalformati64v
extern PFNGLUXGETINTERNALFORMATI64VPROC glGetInternalformati64v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:13 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_internalformat_query2__
#define __GLUX_GL_ARB_internalformat_query2__

GLUX_NEW_PLUGIN(GL_ARB_internalformat_query2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INTERNALFORMAT_SUPPORTED
#  define GL_INTERNALFORMAT_SUPPORTED 0x826F
#endif
#ifndef GL_INTERNALFORMAT_PREFERRED
#  define GL_INTERNALFORMAT_PREFERRED 0x8270
#endif
#ifndef GL_INTERNALFORMAT_RED_SIZE
#  define GL_INTERNALFORMAT_RED_SIZE 0x8271
#endif
#ifndef GL_INTERNALFORMAT_GREEN_SIZE
#  define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#endif
#ifndef GL_INTERNALFORMAT_BLUE_SIZE
#  define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_SIZE
#  define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_SIZE
#  define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_SIZE
#  define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#endif
#ifndef GL_INTERNALFORMAT_SHARED_SIZE
#  define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#endif
#ifndef GL_INTERNALFORMAT_RED_TYPE
#  define GL_INTERNALFORMAT_RED_TYPE 0x8278
#endif
#ifndef GL_INTERNALFORMAT_GREEN_TYPE
#  define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#endif
#ifndef GL_INTERNALFORMAT_BLUE_TYPE
#  define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_TYPE
#  define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_TYPE
#  define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_TYPE
#  define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#endif
#ifndef GL_MAX_WIDTH
#  define GL_MAX_WIDTH 0x827E
#endif
#ifndef GL_MAX_HEIGHT
#  define GL_MAX_HEIGHT 0x827F
#endif
#ifndef GL_MAX_DEPTH
#  define GL_MAX_DEPTH 0x8280
#endif
#ifndef GL_MAX_LAYERS
#  define GL_MAX_LAYERS 0x8281
#endif
#ifndef GL_MAX_COMBINED_DIMENSIONS
#  define GL_MAX_COMBINED_DIMENSIONS 0x8282
#endif
#ifndef GL_COLOR_COMPONENTS
#  define GL_COLOR_COMPONENTS 0x8283
#endif
#ifndef GL_DEPTH_COMPONENTS
#  define GL_DEPTH_COMPONENTS 0x8284
#endif
#ifndef GL_STENCIL_COMPONENTS
#  define GL_STENCIL_COMPONENTS 0x8285
#endif
#ifndef GL_COLOR_RENDERABLE
#  define GL_COLOR_RENDERABLE 0x8286
#endif
#ifndef GL_DEPTH_RENDERABLE
#  define GL_DEPTH_RENDERABLE 0x8287
#endif
#ifndef GL_STENCIL_RENDERABLE
#  define GL_STENCIL_RENDERABLE 0x8288
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE
#  define GL_FRAMEBUFFER_RENDERABLE 0x8289
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE_LAYERED
#  define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#endif
#ifndef GL_FRAMEBUFFER_BLEND
#  define GL_FRAMEBUFFER_BLEND 0x828B
#endif
#ifndef GL_READ_PIXELS
#  define GL_READ_PIXELS 0x828C
#endif
#ifndef GL_READ_PIXELS_FORMAT
#  define GL_READ_PIXELS_FORMAT 0x828D
#endif
#ifndef GL_READ_PIXELS_TYPE
#  define GL_READ_PIXELS_TYPE 0x828E
#endif
#ifndef GL_TEXTURE_IMAGE_FORMAT
#  define GL_TEXTURE_IMAGE_FORMAT 0x828F
#endif
#ifndef GL_TEXTURE_IMAGE_TYPE
#  define GL_TEXTURE_IMAGE_TYPE 0x8290
#endif
#ifndef GL_GET_TEXTURE_IMAGE_FORMAT
#  define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#endif
#ifndef GL_GET_TEXTURE_IMAGE_TYPE
#  define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#endif
#ifndef GL_MIPMAP
#  define GL_MIPMAP 0x8293
#endif
#ifndef GL_MANUAL_GENERATE_MIPMAP
#  define GL_MANUAL_GENERATE_MIPMAP 0x8294
#endif
#ifndef GL_AUTO_GENERATE_MIPMAP
#  define GL_AUTO_GENERATE_MIPMAP 0x8295
#endif
#ifndef GL_COLOR_ENCODING
#  define GL_COLOR_ENCODING 0x8296
#endif
#ifndef GL_SRGB_READ
#  define GL_SRGB_READ 0x8297
#endif
#ifndef GL_SRGB_WRITE
#  define GL_SRGB_WRITE 0x8298
#endif
#ifndef GL_SRGB_DECODE_ARB
#  define GL_SRGB_DECODE_ARB 0x8299
#endif
#ifndef GL_FILTER
#  define GL_FILTER 0x829A
#endif
#ifndef GL_VERTEX_TEXTURE
#  define GL_VERTEX_TEXTURE 0x829B
#endif
#ifndef GL_TESS_CONTROL_TEXTURE
#  define GL_TESS_CONTROL_TEXTURE 0x829C
#endif
#ifndef GL_TESS_EVALUATION_TEXTURE
#  define GL_TESS_EVALUATION_TEXTURE 0x829D
#endif
#ifndef GL_GEOMETRY_TEXTURE
#  define GL_GEOMETRY_TEXTURE 0x829E
#endif
#ifndef GL_FRAGMENT_TEXTURE
#  define GL_FRAGMENT_TEXTURE 0x829F
#endif
#ifndef GL_COMPUTE_TEXTURE
#  define GL_COMPUTE_TEXTURE 0x82A0
#endif
#ifndef GL_TEXTURE_SHADOW
#  define GL_TEXTURE_SHADOW 0x82A1
#endif
#ifndef GL_TEXTURE_GATHER
#  define GL_TEXTURE_GATHER 0x82A2
#endif
#ifndef GL_TEXTURE_GATHER_SHADOW
#  define GL_TEXTURE_GATHER_SHADOW 0x82A3
#endif
#ifndef GL_SHADER_IMAGE_LOAD
#  define GL_SHADER_IMAGE_LOAD 0x82A4
#endif
#ifndef GL_SHADER_IMAGE_STORE
#  define GL_SHADER_IMAGE_STORE 0x82A5
#endif
#ifndef GL_SHADER_IMAGE_ATOMIC
#  define GL_SHADER_IMAGE_ATOMIC 0x82A6
#endif
#ifndef GL_IMAGE_TEXEL_SIZE
#  define GL_IMAGE_TEXEL_SIZE 0x82A7
#endif
#ifndef GL_IMAGE_COMPATIBILITY_CLASS
#  define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#endif
#ifndef GL_IMAGE_PIXEL_FORMAT
#  define GL_IMAGE_PIXEL_FORMAT 0x82A9
#endif
#ifndef GL_IMAGE_PIXEL_TYPE
#  define GL_IMAGE_PIXEL_TYPE 0x82AA
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_WIDTH
#  define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT
#  define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_SIZE
#  define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#endif
#ifndef GL_CLEAR_BUFFER
#  define GL_CLEAR_BUFFER 0x82B4
#endif
#ifndef GL_TEXTURE_VIEW
#  define GL_TEXTURE_VIEW 0x82B5
#endif
#ifndef GL_VIEW_COMPATIBILITY_CLASS
#  define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#endif
#ifndef GL_FULL_SUPPORT
#  define GL_FULL_SUPPORT 0x82B7
#endif
#ifndef GL_CAVEAT_SUPPORT
#  define GL_CAVEAT_SUPPORT 0x82B8
#endif
#ifndef GL_IMAGE_CLASS_4_X_32
#  define GL_IMAGE_CLASS_4_X_32 0x82B9
#endif
#ifndef GL_IMAGE_CLASS_2_X_32
#  define GL_IMAGE_CLASS_2_X_32 0x82BA
#endif
#ifndef GL_IMAGE_CLASS_1_X_32
#  define GL_IMAGE_CLASS_1_X_32 0x82BB
#endif
#ifndef GL_IMAGE_CLASS_4_X_16
#  define GL_IMAGE_CLASS_4_X_16 0x82BC
#endif
#ifndef GL_IMAGE_CLASS_2_X_16
#  define GL_IMAGE_CLASS_2_X_16 0x82BD
#endif
#ifndef GL_IMAGE_CLASS_1_X_16
#  define GL_IMAGE_CLASS_1_X_16 0x82BE
#endif
#ifndef GL_IMAGE_CLASS_4_X_8
#  define GL_IMAGE_CLASS_4_X_8 0x82BF
#endif
#ifndef GL_IMAGE_CLASS_2_X_8
#  define GL_IMAGE_CLASS_2_X_8 0x82C0
#endif
#ifndef GL_IMAGE_CLASS_1_X_8
#  define GL_IMAGE_CLASS_1_X_8 0x82C1
#endif
#ifndef GL_IMAGE_CLASS_11_11_10
#  define GL_IMAGE_CLASS_11_11_10 0x82C2
#endif
#ifndef GL_IMAGE_CLASS_10_10_10_2
#  define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#endif
#ifndef GL_VIEW_CLASS_128_BITS
#  define GL_VIEW_CLASS_128_BITS 0x82C4
#endif
#ifndef GL_VIEW_CLASS_96_BITS
#  define GL_VIEW_CLASS_96_BITS 0x82C5
#endif
#ifndef GL_VIEW_CLASS_64_BITS
#  define GL_VIEW_CLASS_64_BITS 0x82C6
#endif
#ifndef GL_VIEW_CLASS_48_BITS
#  define GL_VIEW_CLASS_48_BITS 0x82C7
#endif
#ifndef GL_VIEW_CLASS_32_BITS
#  define GL_VIEW_CLASS_32_BITS 0x82C8
#endif
#ifndef GL_VIEW_CLASS_24_BITS
#  define GL_VIEW_CLASS_24_BITS 0x82C9
#endif
#ifndef GL_VIEW_CLASS_16_BITS
#  define GL_VIEW_CLASS_16_BITS 0x82CA
#endif
#ifndef GL_VIEW_CLASS_8_BITS
#  define GL_VIEW_CLASS_8_BITS 0x82CB
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGB
#  define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT3_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT5_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#endif
#ifndef GL_VIEW_CLASS_RGTC1_RED
#  define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#endif
#ifndef GL_VIEW_CLASS_RGTC2_RG
#  define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#endif
#ifndef GL_VIEW_CLASS_BPTC_UNORM
#  define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#endif
#ifndef GL_VIEW_CLASS_BPTC_FLOAT
#  define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetInternalformati64v
typedef void (APIENTRYP PFNGLUXGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetInternalformati64v
extern PFNGLUXGETINTERNALFORMATI64VPROC glGetInternalformati64v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:29 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_internalformat_query2__
#define __GLUX_GL_ARB_internalformat_query2__

GLUX_NEW_PLUGIN(GL_ARB_internalformat_query2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INTERNALFORMAT_SUPPORTED
#  define GL_INTERNALFORMAT_SUPPORTED 0x826F
#endif
#ifndef GL_INTERNALFORMAT_PREFERRED
#  define GL_INTERNALFORMAT_PREFERRED 0x8270
#endif
#ifndef GL_INTERNALFORMAT_RED_SIZE
#  define GL_INTERNALFORMAT_RED_SIZE 0x8271
#endif
#ifndef GL_INTERNALFORMAT_GREEN_SIZE
#  define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#endif
#ifndef GL_INTERNALFORMAT_BLUE_SIZE
#  define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_SIZE
#  define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_SIZE
#  define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_SIZE
#  define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#endif
#ifndef GL_INTERNALFORMAT_SHARED_SIZE
#  define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#endif
#ifndef GL_INTERNALFORMAT_RED_TYPE
#  define GL_INTERNALFORMAT_RED_TYPE 0x8278
#endif
#ifndef GL_INTERNALFORMAT_GREEN_TYPE
#  define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#endif
#ifndef GL_INTERNALFORMAT_BLUE_TYPE
#  define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_TYPE
#  define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_TYPE
#  define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_TYPE
#  define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#endif
#ifndef GL_MAX_WIDTH
#  define GL_MAX_WIDTH 0x827E
#endif
#ifndef GL_MAX_HEIGHT
#  define GL_MAX_HEIGHT 0x827F
#endif
#ifndef GL_MAX_DEPTH
#  define GL_MAX_DEPTH 0x8280
#endif
#ifndef GL_MAX_LAYERS
#  define GL_MAX_LAYERS 0x8281
#endif
#ifndef GL_MAX_COMBINED_DIMENSIONS
#  define GL_MAX_COMBINED_DIMENSIONS 0x8282
#endif
#ifndef GL_COLOR_COMPONENTS
#  define GL_COLOR_COMPONENTS 0x8283
#endif
#ifndef GL_DEPTH_COMPONENTS
#  define GL_DEPTH_COMPONENTS 0x8284
#endif
#ifndef GL_STENCIL_COMPONENTS
#  define GL_STENCIL_COMPONENTS 0x8285
#endif
#ifndef GL_COLOR_RENDERABLE
#  define GL_COLOR_RENDERABLE 0x8286
#endif
#ifndef GL_DEPTH_RENDERABLE
#  define GL_DEPTH_RENDERABLE 0x8287
#endif
#ifndef GL_STENCIL_RENDERABLE
#  define GL_STENCIL_RENDERABLE 0x8288
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE
#  define GL_FRAMEBUFFER_RENDERABLE 0x8289
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE_LAYERED
#  define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#endif
#ifndef GL_FRAMEBUFFER_BLEND
#  define GL_FRAMEBUFFER_BLEND 0x828B
#endif
#ifndef GL_READ_PIXELS
#  define GL_READ_PIXELS 0x828C
#endif
#ifndef GL_READ_PIXELS_FORMAT
#  define GL_READ_PIXELS_FORMAT 0x828D
#endif
#ifndef GL_READ_PIXELS_TYPE
#  define GL_READ_PIXELS_TYPE 0x828E
#endif
#ifndef GL_TEXTURE_IMAGE_FORMAT
#  define GL_TEXTURE_IMAGE_FORMAT 0x828F
#endif
#ifndef GL_TEXTURE_IMAGE_TYPE
#  define GL_TEXTURE_IMAGE_TYPE 0x8290
#endif
#ifndef GL_GET_TEXTURE_IMAGE_FORMAT
#  define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#endif
#ifndef GL_GET_TEXTURE_IMAGE_TYPE
#  define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#endif
#ifndef GL_MIPMAP
#  define GL_MIPMAP 0x8293
#endif
#ifndef GL_MANUAL_GENERATE_MIPMAP
#  define GL_MANUAL_GENERATE_MIPMAP 0x8294
#endif
#ifndef GL_AUTO_GENERATE_MIPMAP
#  define GL_AUTO_GENERATE_MIPMAP 0x8295
#endif
#ifndef GL_COLOR_ENCODING
#  define GL_COLOR_ENCODING 0x8296
#endif
#ifndef GL_SRGB_READ
#  define GL_SRGB_READ 0x8297
#endif
#ifndef GL_SRGB_WRITE
#  define GL_SRGB_WRITE 0x8298
#endif
#ifndef GL_SRGB_DECODE_ARB
#  define GL_SRGB_DECODE_ARB 0x8299
#endif
#ifndef GL_FILTER
#  define GL_FILTER 0x829A
#endif
#ifndef GL_VERTEX_TEXTURE
#  define GL_VERTEX_TEXTURE 0x829B
#endif
#ifndef GL_TESS_CONTROL_TEXTURE
#  define GL_TESS_CONTROL_TEXTURE 0x829C
#endif
#ifndef GL_TESS_EVALUATION_TEXTURE
#  define GL_TESS_EVALUATION_TEXTURE 0x829D
#endif
#ifndef GL_GEOMETRY_TEXTURE
#  define GL_GEOMETRY_TEXTURE 0x829E
#endif
#ifndef GL_FRAGMENT_TEXTURE
#  define GL_FRAGMENT_TEXTURE 0x829F
#endif
#ifndef GL_COMPUTE_TEXTURE
#  define GL_COMPUTE_TEXTURE 0x82A0
#endif
#ifndef GL_TEXTURE_SHADOW
#  define GL_TEXTURE_SHADOW 0x82A1
#endif
#ifndef GL_TEXTURE_GATHER
#  define GL_TEXTURE_GATHER 0x82A2
#endif
#ifndef GL_TEXTURE_GATHER_SHADOW
#  define GL_TEXTURE_GATHER_SHADOW 0x82A3
#endif
#ifndef GL_SHADER_IMAGE_LOAD
#  define GL_SHADER_IMAGE_LOAD 0x82A4
#endif
#ifndef GL_SHADER_IMAGE_STORE
#  define GL_SHADER_IMAGE_STORE 0x82A5
#endif
#ifndef GL_SHADER_IMAGE_ATOMIC
#  define GL_SHADER_IMAGE_ATOMIC 0x82A6
#endif
#ifndef GL_IMAGE_TEXEL_SIZE
#  define GL_IMAGE_TEXEL_SIZE 0x82A7
#endif
#ifndef GL_IMAGE_COMPATIBILITY_CLASS
#  define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#endif
#ifndef GL_IMAGE_PIXEL_FORMAT
#  define GL_IMAGE_PIXEL_FORMAT 0x82A9
#endif
#ifndef GL_IMAGE_PIXEL_TYPE
#  define GL_IMAGE_PIXEL_TYPE 0x82AA
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_WIDTH
#  define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT
#  define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_SIZE
#  define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#endif
#ifndef GL_CLEAR_BUFFER
#  define GL_CLEAR_BUFFER 0x82B4
#endif
#ifndef GL_TEXTURE_VIEW
#  define GL_TEXTURE_VIEW 0x82B5
#endif
#ifndef GL_VIEW_COMPATIBILITY_CLASS
#  define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#endif
#ifndef GL_FULL_SUPPORT
#  define GL_FULL_SUPPORT 0x82B7
#endif
#ifndef GL_CAVEAT_SUPPORT
#  define GL_CAVEAT_SUPPORT 0x82B8
#endif
#ifndef GL_IMAGE_CLASS_4_X_32
#  define GL_IMAGE_CLASS_4_X_32 0x82B9
#endif
#ifndef GL_IMAGE_CLASS_2_X_32
#  define GL_IMAGE_CLASS_2_X_32 0x82BA
#endif
#ifndef GL_IMAGE_CLASS_1_X_32
#  define GL_IMAGE_CLASS_1_X_32 0x82BB
#endif
#ifndef GL_IMAGE_CLASS_4_X_16
#  define GL_IMAGE_CLASS_4_X_16 0x82BC
#endif
#ifndef GL_IMAGE_CLASS_2_X_16
#  define GL_IMAGE_CLASS_2_X_16 0x82BD
#endif
#ifndef GL_IMAGE_CLASS_1_X_16
#  define GL_IMAGE_CLASS_1_X_16 0x82BE
#endif
#ifndef GL_IMAGE_CLASS_4_X_8
#  define GL_IMAGE_CLASS_4_X_8 0x82BF
#endif
#ifndef GL_IMAGE_CLASS_2_X_8
#  define GL_IMAGE_CLASS_2_X_8 0x82C0
#endif
#ifndef GL_IMAGE_CLASS_1_X_8
#  define GL_IMAGE_CLASS_1_X_8 0x82C1
#endif
#ifndef GL_IMAGE_CLASS_11_11_10
#  define GL_IMAGE_CLASS_11_11_10 0x82C2
#endif
#ifndef GL_IMAGE_CLASS_10_10_10_2
#  define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#endif
#ifndef GL_VIEW_CLASS_128_BITS
#  define GL_VIEW_CLASS_128_BITS 0x82C4
#endif
#ifndef GL_VIEW_CLASS_96_BITS
#  define GL_VIEW_CLASS_96_BITS 0x82C5
#endif
#ifndef GL_VIEW_CLASS_64_BITS
#  define GL_VIEW_CLASS_64_BITS 0x82C6
#endif
#ifndef GL_VIEW_CLASS_48_BITS
#  define GL_VIEW_CLASS_48_BITS 0x82C7
#endif
#ifndef GL_VIEW_CLASS_32_BITS
#  define GL_VIEW_CLASS_32_BITS 0x82C8
#endif
#ifndef GL_VIEW_CLASS_24_BITS
#  define GL_VIEW_CLASS_24_BITS 0x82C9
#endif
#ifndef GL_VIEW_CLASS_16_BITS
#  define GL_VIEW_CLASS_16_BITS 0x82CA
#endif
#ifndef GL_VIEW_CLASS_8_BITS
#  define GL_VIEW_CLASS_8_BITS 0x82CB
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGB
#  define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT3_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT5_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#endif
#ifndef GL_VIEW_CLASS_RGTC1_RED
#  define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#endif
#ifndef GL_VIEW_CLASS_RGTC2_RG
#  define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#endif
#ifndef GL_VIEW_CLASS_BPTC_UNORM
#  define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#endif
#ifndef GL_VIEW_CLASS_BPTC_FLOAT
#  define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetInternalformati64v
typedef void (APIENTRYP PFNGLUXGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetInternalformati64v
extern PFNGLUXGETINTERNALFORMATI64VPROC glGetInternalformati64v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:32 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_internalformat_query2__
#define __GLUX_GL_ARB_internalformat_query2__

GLUX_NEW_PLUGIN(GL_ARB_internalformat_query2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INTERNALFORMAT_SUPPORTED
#  define GL_INTERNALFORMAT_SUPPORTED 0x826F
#endif
#ifndef GL_INTERNALFORMAT_PREFERRED
#  define GL_INTERNALFORMAT_PREFERRED 0x8270
#endif
#ifndef GL_INTERNALFORMAT_RED_SIZE
#  define GL_INTERNALFORMAT_RED_SIZE 0x8271
#endif
#ifndef GL_INTERNALFORMAT_GREEN_SIZE
#  define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#endif
#ifndef GL_INTERNALFORMAT_BLUE_SIZE
#  define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_SIZE
#  define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_SIZE
#  define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_SIZE
#  define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#endif
#ifndef GL_INTERNALFORMAT_SHARED_SIZE
#  define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#endif
#ifndef GL_INTERNALFORMAT_RED_TYPE
#  define GL_INTERNALFORMAT_RED_TYPE 0x8278
#endif
#ifndef GL_INTERNALFORMAT_GREEN_TYPE
#  define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#endif
#ifndef GL_INTERNALFORMAT_BLUE_TYPE
#  define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_TYPE
#  define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_TYPE
#  define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_TYPE
#  define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#endif
#ifndef GL_MAX_WIDTH
#  define GL_MAX_WIDTH 0x827E
#endif
#ifndef GL_MAX_HEIGHT
#  define GL_MAX_HEIGHT 0x827F
#endif
#ifndef GL_MAX_DEPTH
#  define GL_MAX_DEPTH 0x8280
#endif
#ifndef GL_MAX_LAYERS
#  define GL_MAX_LAYERS 0x8281
#endif
#ifndef GL_MAX_COMBINED_DIMENSIONS
#  define GL_MAX_COMBINED_DIMENSIONS 0x8282
#endif
#ifndef GL_COLOR_COMPONENTS
#  define GL_COLOR_COMPONENTS 0x8283
#endif
#ifndef GL_DEPTH_COMPONENTS
#  define GL_DEPTH_COMPONENTS 0x8284
#endif
#ifndef GL_STENCIL_COMPONENTS
#  define GL_STENCIL_COMPONENTS 0x8285
#endif
#ifndef GL_COLOR_RENDERABLE
#  define GL_COLOR_RENDERABLE 0x8286
#endif
#ifndef GL_DEPTH_RENDERABLE
#  define GL_DEPTH_RENDERABLE 0x8287
#endif
#ifndef GL_STENCIL_RENDERABLE
#  define GL_STENCIL_RENDERABLE 0x8288
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE
#  define GL_FRAMEBUFFER_RENDERABLE 0x8289
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE_LAYERED
#  define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#endif
#ifndef GL_FRAMEBUFFER_BLEND
#  define GL_FRAMEBUFFER_BLEND 0x828B
#endif
#ifndef GL_READ_PIXELS
#  define GL_READ_PIXELS 0x828C
#endif
#ifndef GL_READ_PIXELS_FORMAT
#  define GL_READ_PIXELS_FORMAT 0x828D
#endif
#ifndef GL_READ_PIXELS_TYPE
#  define GL_READ_PIXELS_TYPE 0x828E
#endif
#ifndef GL_TEXTURE_IMAGE_FORMAT
#  define GL_TEXTURE_IMAGE_FORMAT 0x828F
#endif
#ifndef GL_TEXTURE_IMAGE_TYPE
#  define GL_TEXTURE_IMAGE_TYPE 0x8290
#endif
#ifndef GL_GET_TEXTURE_IMAGE_FORMAT
#  define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#endif
#ifndef GL_GET_TEXTURE_IMAGE_TYPE
#  define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#endif
#ifndef GL_MIPMAP
#  define GL_MIPMAP 0x8293
#endif
#ifndef GL_MANUAL_GENERATE_MIPMAP
#  define GL_MANUAL_GENERATE_MIPMAP 0x8294
#endif
#ifndef GL_AUTO_GENERATE_MIPMAP
#  define GL_AUTO_GENERATE_MIPMAP 0x8295
#endif
#ifndef GL_COLOR_ENCODING
#  define GL_COLOR_ENCODING 0x8296
#endif
#ifndef GL_SRGB_READ
#  define GL_SRGB_READ 0x8297
#endif
#ifndef GL_SRGB_WRITE
#  define GL_SRGB_WRITE 0x8298
#endif
#ifndef GL_SRGB_DECODE_ARB
#  define GL_SRGB_DECODE_ARB 0x8299
#endif
#ifndef GL_FILTER
#  define GL_FILTER 0x829A
#endif
#ifndef GL_VERTEX_TEXTURE
#  define GL_VERTEX_TEXTURE 0x829B
#endif
#ifndef GL_TESS_CONTROL_TEXTURE
#  define GL_TESS_CONTROL_TEXTURE 0x829C
#endif
#ifndef GL_TESS_EVALUATION_TEXTURE
#  define GL_TESS_EVALUATION_TEXTURE 0x829D
#endif
#ifndef GL_GEOMETRY_TEXTURE
#  define GL_GEOMETRY_TEXTURE 0x829E
#endif
#ifndef GL_FRAGMENT_TEXTURE
#  define GL_FRAGMENT_TEXTURE 0x829F
#endif
#ifndef GL_COMPUTE_TEXTURE
#  define GL_COMPUTE_TEXTURE 0x82A0
#endif
#ifndef GL_TEXTURE_SHADOW
#  define GL_TEXTURE_SHADOW 0x82A1
#endif
#ifndef GL_TEXTURE_GATHER
#  define GL_TEXTURE_GATHER 0x82A2
#endif
#ifndef GL_TEXTURE_GATHER_SHADOW
#  define GL_TEXTURE_GATHER_SHADOW 0x82A3
#endif
#ifndef GL_SHADER_IMAGE_LOAD
#  define GL_SHADER_IMAGE_LOAD 0x82A4
#endif
#ifndef GL_SHADER_IMAGE_STORE
#  define GL_SHADER_IMAGE_STORE 0x82A5
#endif
#ifndef GL_SHADER_IMAGE_ATOMIC
#  define GL_SHADER_IMAGE_ATOMIC 0x82A6
#endif
#ifndef GL_IMAGE_TEXEL_SIZE
#  define GL_IMAGE_TEXEL_SIZE 0x82A7
#endif
#ifndef GL_IMAGE_COMPATIBILITY_CLASS
#  define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#endif
#ifndef GL_IMAGE_PIXEL_FORMAT
#  define GL_IMAGE_PIXEL_FORMAT 0x82A9
#endif
#ifndef GL_IMAGE_PIXEL_TYPE
#  define GL_IMAGE_PIXEL_TYPE 0x82AA
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_WIDTH
#  define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT
#  define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_SIZE
#  define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#endif
#ifndef GL_CLEAR_BUFFER
#  define GL_CLEAR_BUFFER 0x82B4
#endif
#ifndef GL_TEXTURE_VIEW
#  define GL_TEXTURE_VIEW 0x82B5
#endif
#ifndef GL_VIEW_COMPATIBILITY_CLASS
#  define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#endif
#ifndef GL_FULL_SUPPORT
#  define GL_FULL_SUPPORT 0x82B7
#endif
#ifndef GL_CAVEAT_SUPPORT
#  define GL_CAVEAT_SUPPORT 0x82B8
#endif
#ifndef GL_IMAGE_CLASS_4_X_32
#  define GL_IMAGE_CLASS_4_X_32 0x82B9
#endif
#ifndef GL_IMAGE_CLASS_2_X_32
#  define GL_IMAGE_CLASS_2_X_32 0x82BA
#endif
#ifndef GL_IMAGE_CLASS_1_X_32
#  define GL_IMAGE_CLASS_1_X_32 0x82BB
#endif
#ifndef GL_IMAGE_CLASS_4_X_16
#  define GL_IMAGE_CLASS_4_X_16 0x82BC
#endif
#ifndef GL_IMAGE_CLASS_2_X_16
#  define GL_IMAGE_CLASS_2_X_16 0x82BD
#endif
#ifndef GL_IMAGE_CLASS_1_X_16
#  define GL_IMAGE_CLASS_1_X_16 0x82BE
#endif
#ifndef GL_IMAGE_CLASS_4_X_8
#  define GL_IMAGE_CLASS_4_X_8 0x82BF
#endif
#ifndef GL_IMAGE_CLASS_2_X_8
#  define GL_IMAGE_CLASS_2_X_8 0x82C0
#endif
#ifndef GL_IMAGE_CLASS_1_X_8
#  define GL_IMAGE_CLASS_1_X_8 0x82C1
#endif
#ifndef GL_IMAGE_CLASS_11_11_10
#  define GL_IMAGE_CLASS_11_11_10 0x82C2
#endif
#ifndef GL_IMAGE_CLASS_10_10_10_2
#  define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#endif
#ifndef GL_VIEW_CLASS_128_BITS
#  define GL_VIEW_CLASS_128_BITS 0x82C4
#endif
#ifndef GL_VIEW_CLASS_96_BITS
#  define GL_VIEW_CLASS_96_BITS 0x82C5
#endif
#ifndef GL_VIEW_CLASS_64_BITS
#  define GL_VIEW_CLASS_64_BITS 0x82C6
#endif
#ifndef GL_VIEW_CLASS_48_BITS
#  define GL_VIEW_CLASS_48_BITS 0x82C7
#endif
#ifndef GL_VIEW_CLASS_32_BITS
#  define GL_VIEW_CLASS_32_BITS 0x82C8
#endif
#ifndef GL_VIEW_CLASS_24_BITS
#  define GL_VIEW_CLASS_24_BITS 0x82C9
#endif
#ifndef GL_VIEW_CLASS_16_BITS
#  define GL_VIEW_CLASS_16_BITS 0x82CA
#endif
#ifndef GL_VIEW_CLASS_8_BITS
#  define GL_VIEW_CLASS_8_BITS 0x82CB
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGB
#  define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT3_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT5_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#endif
#ifndef GL_VIEW_CLASS_RGTC1_RED
#  define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#endif
#ifndef GL_VIEW_CLASS_RGTC2_RG
#  define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#endif
#ifndef GL_VIEW_CLASS_BPTC_UNORM
#  define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#endif
#ifndef GL_VIEW_CLASS_BPTC_FLOAT
#  define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetInternalformati64v
typedef void (APIENTRYP PFNGLUXGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetInternalformati64v
extern PFNGLUXGETINTERNALFORMATI64VPROC glGetInternalformati64v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:54 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_internalformat_query2__
#define __GLUX_GL_ARB_internalformat_query2__

GLUX_NEW_PLUGIN(GL_ARB_internalformat_query2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INTERNALFORMAT_SUPPORTED
#  define GL_INTERNALFORMAT_SUPPORTED 0x826F
#endif
#ifndef GL_INTERNALFORMAT_PREFERRED
#  define GL_INTERNALFORMAT_PREFERRED 0x8270
#endif
#ifndef GL_INTERNALFORMAT_RED_SIZE
#  define GL_INTERNALFORMAT_RED_SIZE 0x8271
#endif
#ifndef GL_INTERNALFORMAT_GREEN_SIZE
#  define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#endif
#ifndef GL_INTERNALFORMAT_BLUE_SIZE
#  define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_SIZE
#  define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_SIZE
#  define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_SIZE
#  define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#endif
#ifndef GL_INTERNALFORMAT_SHARED_SIZE
#  define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#endif
#ifndef GL_INTERNALFORMAT_RED_TYPE
#  define GL_INTERNALFORMAT_RED_TYPE 0x8278
#endif
#ifndef GL_INTERNALFORMAT_GREEN_TYPE
#  define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#endif
#ifndef GL_INTERNALFORMAT_BLUE_TYPE
#  define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_TYPE
#  define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_TYPE
#  define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_TYPE
#  define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#endif
#ifndef GL_MAX_WIDTH
#  define GL_MAX_WIDTH 0x827E
#endif
#ifndef GL_MAX_HEIGHT
#  define GL_MAX_HEIGHT 0x827F
#endif
#ifndef GL_MAX_DEPTH
#  define GL_MAX_DEPTH 0x8280
#endif
#ifndef GL_MAX_LAYERS
#  define GL_MAX_LAYERS 0x8281
#endif
#ifndef GL_MAX_COMBINED_DIMENSIONS
#  define GL_MAX_COMBINED_DIMENSIONS 0x8282
#endif
#ifndef GL_COLOR_COMPONENTS
#  define GL_COLOR_COMPONENTS 0x8283
#endif
#ifndef GL_DEPTH_COMPONENTS
#  define GL_DEPTH_COMPONENTS 0x8284
#endif
#ifndef GL_STENCIL_COMPONENTS
#  define GL_STENCIL_COMPONENTS 0x8285
#endif
#ifndef GL_COLOR_RENDERABLE
#  define GL_COLOR_RENDERABLE 0x8286
#endif
#ifndef GL_DEPTH_RENDERABLE
#  define GL_DEPTH_RENDERABLE 0x8287
#endif
#ifndef GL_STENCIL_RENDERABLE
#  define GL_STENCIL_RENDERABLE 0x8288
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE
#  define GL_FRAMEBUFFER_RENDERABLE 0x8289
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE_LAYERED
#  define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#endif
#ifndef GL_FRAMEBUFFER_BLEND
#  define GL_FRAMEBUFFER_BLEND 0x828B
#endif
#ifndef GL_READ_PIXELS
#  define GL_READ_PIXELS 0x828C
#endif
#ifndef GL_READ_PIXELS_FORMAT
#  define GL_READ_PIXELS_FORMAT 0x828D
#endif
#ifndef GL_READ_PIXELS_TYPE
#  define GL_READ_PIXELS_TYPE 0x828E
#endif
#ifndef GL_TEXTURE_IMAGE_FORMAT
#  define GL_TEXTURE_IMAGE_FORMAT 0x828F
#endif
#ifndef GL_TEXTURE_IMAGE_TYPE
#  define GL_TEXTURE_IMAGE_TYPE 0x8290
#endif
#ifndef GL_GET_TEXTURE_IMAGE_FORMAT
#  define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#endif
#ifndef GL_GET_TEXTURE_IMAGE_TYPE
#  define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#endif
#ifndef GL_MIPMAP
#  define GL_MIPMAP 0x8293
#endif
#ifndef GL_MANUAL_GENERATE_MIPMAP
#  define GL_MANUAL_GENERATE_MIPMAP 0x8294
#endif
#ifndef GL_AUTO_GENERATE_MIPMAP
#  define GL_AUTO_GENERATE_MIPMAP 0x8295
#endif
#ifndef GL_COLOR_ENCODING
#  define GL_COLOR_ENCODING 0x8296
#endif
#ifndef GL_SRGB_READ
#  define GL_SRGB_READ 0x8297
#endif
#ifndef GL_SRGB_WRITE
#  define GL_SRGB_WRITE 0x8298
#endif
#ifndef GL_SRGB_DECODE_ARB
#  define GL_SRGB_DECODE_ARB 0x8299
#endif
#ifndef GL_FILTER
#  define GL_FILTER 0x829A
#endif
#ifndef GL_VERTEX_TEXTURE
#  define GL_VERTEX_TEXTURE 0x829B
#endif
#ifndef GL_TESS_CONTROL_TEXTURE
#  define GL_TESS_CONTROL_TEXTURE 0x829C
#endif
#ifndef GL_TESS_EVALUATION_TEXTURE
#  define GL_TESS_EVALUATION_TEXTURE 0x829D
#endif
#ifndef GL_GEOMETRY_TEXTURE
#  define GL_GEOMETRY_TEXTURE 0x829E
#endif
#ifndef GL_FRAGMENT_TEXTURE
#  define GL_FRAGMENT_TEXTURE 0x829F
#endif
#ifndef GL_COMPUTE_TEXTURE
#  define GL_COMPUTE_TEXTURE 0x82A0
#endif
#ifndef GL_TEXTURE_SHADOW
#  define GL_TEXTURE_SHADOW 0x82A1
#endif
#ifndef GL_TEXTURE_GATHER
#  define GL_TEXTURE_GATHER 0x82A2
#endif
#ifndef GL_TEXTURE_GATHER_SHADOW
#  define GL_TEXTURE_GATHER_SHADOW 0x82A3
#endif
#ifndef GL_SHADER_IMAGE_LOAD
#  define GL_SHADER_IMAGE_LOAD 0x82A4
#endif
#ifndef GL_SHADER_IMAGE_STORE
#  define GL_SHADER_IMAGE_STORE 0x82A5
#endif
#ifndef GL_SHADER_IMAGE_ATOMIC
#  define GL_SHADER_IMAGE_ATOMIC 0x82A6
#endif
#ifndef GL_IMAGE_TEXEL_SIZE
#  define GL_IMAGE_TEXEL_SIZE 0x82A7
#endif
#ifndef GL_IMAGE_COMPATIBILITY_CLASS
#  define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#endif
#ifndef GL_IMAGE_PIXEL_FORMAT
#  define GL_IMAGE_PIXEL_FORMAT 0x82A9
#endif
#ifndef GL_IMAGE_PIXEL_TYPE
#  define GL_IMAGE_PIXEL_TYPE 0x82AA
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_WIDTH
#  define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT
#  define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_SIZE
#  define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#endif
#ifndef GL_CLEAR_BUFFER
#  define GL_CLEAR_BUFFER 0x82B4
#endif
#ifndef GL_TEXTURE_VIEW
#  define GL_TEXTURE_VIEW 0x82B5
#endif
#ifndef GL_VIEW_COMPATIBILITY_CLASS
#  define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#endif
#ifndef GL_FULL_SUPPORT
#  define GL_FULL_SUPPORT 0x82B7
#endif
#ifndef GL_CAVEAT_SUPPORT
#  define GL_CAVEAT_SUPPORT 0x82B8
#endif
#ifndef GL_IMAGE_CLASS_4_X_32
#  define GL_IMAGE_CLASS_4_X_32 0x82B9
#endif
#ifndef GL_IMAGE_CLASS_2_X_32
#  define GL_IMAGE_CLASS_2_X_32 0x82BA
#endif
#ifndef GL_IMAGE_CLASS_1_X_32
#  define GL_IMAGE_CLASS_1_X_32 0x82BB
#endif
#ifndef GL_IMAGE_CLASS_4_X_16
#  define GL_IMAGE_CLASS_4_X_16 0x82BC
#endif
#ifndef GL_IMAGE_CLASS_2_X_16
#  define GL_IMAGE_CLASS_2_X_16 0x82BD
#endif
#ifndef GL_IMAGE_CLASS_1_X_16
#  define GL_IMAGE_CLASS_1_X_16 0x82BE
#endif
#ifndef GL_IMAGE_CLASS_4_X_8
#  define GL_IMAGE_CLASS_4_X_8 0x82BF
#endif
#ifndef GL_IMAGE_CLASS_2_X_8
#  define GL_IMAGE_CLASS_2_X_8 0x82C0
#endif
#ifndef GL_IMAGE_CLASS_1_X_8
#  define GL_IMAGE_CLASS_1_X_8 0x82C1
#endif
#ifndef GL_IMAGE_CLASS_11_11_10
#  define GL_IMAGE_CLASS_11_11_10 0x82C2
#endif
#ifndef GL_IMAGE_CLASS_10_10_10_2
#  define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#endif
#ifndef GL_VIEW_CLASS_128_BITS
#  define GL_VIEW_CLASS_128_BITS 0x82C4
#endif
#ifndef GL_VIEW_CLASS_96_BITS
#  define GL_VIEW_CLASS_96_BITS 0x82C5
#endif
#ifndef GL_VIEW_CLASS_64_BITS
#  define GL_VIEW_CLASS_64_BITS 0x82C6
#endif
#ifndef GL_VIEW_CLASS_48_BITS
#  define GL_VIEW_CLASS_48_BITS 0x82C7
#endif
#ifndef GL_VIEW_CLASS_32_BITS
#  define GL_VIEW_CLASS_32_BITS 0x82C8
#endif
#ifndef GL_VIEW_CLASS_24_BITS
#  define GL_VIEW_CLASS_24_BITS 0x82C9
#endif
#ifndef GL_VIEW_CLASS_16_BITS
#  define GL_VIEW_CLASS_16_BITS 0x82CA
#endif
#ifndef GL_VIEW_CLASS_8_BITS
#  define GL_VIEW_CLASS_8_BITS 0x82CB
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGB
#  define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT3_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT5_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#endif
#ifndef GL_VIEW_CLASS_RGTC1_RED
#  define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#endif
#ifndef GL_VIEW_CLASS_RGTC2_RG
#  define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#endif
#ifndef GL_VIEW_CLASS_BPTC_UNORM
#  define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#endif
#ifndef GL_VIEW_CLASS_BPTC_FLOAT
#  define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetInternalformati64v
typedef void (APIENTRYP PFNGLUXGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetInternalformati64v
extern PFNGLUXGETINTERNALFORMATI64VPROC glGetInternalformati64v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:28:03 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_internalformat_query2__
#define __GLUX_GL_ARB_internalformat_query2__

GLUX_NEW_PLUGIN(GL_ARB_internalformat_query2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INTERNALFORMAT_SUPPORTED
#  define GL_INTERNALFORMAT_SUPPORTED 0x826F
#endif
#ifndef GL_INTERNALFORMAT_PREFERRED
#  define GL_INTERNALFORMAT_PREFERRED 0x8270
#endif
#ifndef GL_INTERNALFORMAT_RED_SIZE
#  define GL_INTERNALFORMAT_RED_SIZE 0x8271
#endif
#ifndef GL_INTERNALFORMAT_GREEN_SIZE
#  define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#endif
#ifndef GL_INTERNALFORMAT_BLUE_SIZE
#  define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_SIZE
#  define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_SIZE
#  define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_SIZE
#  define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#endif
#ifndef GL_INTERNALFORMAT_SHARED_SIZE
#  define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#endif
#ifndef GL_INTERNALFORMAT_RED_TYPE
#  define GL_INTERNALFORMAT_RED_TYPE 0x8278
#endif
#ifndef GL_INTERNALFORMAT_GREEN_TYPE
#  define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#endif
#ifndef GL_INTERNALFORMAT_BLUE_TYPE
#  define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_TYPE
#  define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_TYPE
#  define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_TYPE
#  define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#endif
#ifndef GL_MAX_WIDTH
#  define GL_MAX_WIDTH 0x827E
#endif
#ifndef GL_MAX_HEIGHT
#  define GL_MAX_HEIGHT 0x827F
#endif
#ifndef GL_MAX_DEPTH
#  define GL_MAX_DEPTH 0x8280
#endif
#ifndef GL_MAX_LAYERS
#  define GL_MAX_LAYERS 0x8281
#endif
#ifndef GL_MAX_COMBINED_DIMENSIONS
#  define GL_MAX_COMBINED_DIMENSIONS 0x8282
#endif
#ifndef GL_COLOR_COMPONENTS
#  define GL_COLOR_COMPONENTS 0x8283
#endif
#ifndef GL_DEPTH_COMPONENTS
#  define GL_DEPTH_COMPONENTS 0x8284
#endif
#ifndef GL_STENCIL_COMPONENTS
#  define GL_STENCIL_COMPONENTS 0x8285
#endif
#ifndef GL_COLOR_RENDERABLE
#  define GL_COLOR_RENDERABLE 0x8286
#endif
#ifndef GL_DEPTH_RENDERABLE
#  define GL_DEPTH_RENDERABLE 0x8287
#endif
#ifndef GL_STENCIL_RENDERABLE
#  define GL_STENCIL_RENDERABLE 0x8288
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE
#  define GL_FRAMEBUFFER_RENDERABLE 0x8289
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE_LAYERED
#  define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#endif
#ifndef GL_FRAMEBUFFER_BLEND
#  define GL_FRAMEBUFFER_BLEND 0x828B
#endif
#ifndef GL_READ_PIXELS
#  define GL_READ_PIXELS 0x828C
#endif
#ifndef GL_READ_PIXELS_FORMAT
#  define GL_READ_PIXELS_FORMAT 0x828D
#endif
#ifndef GL_READ_PIXELS_TYPE
#  define GL_READ_PIXELS_TYPE 0x828E
#endif
#ifndef GL_TEXTURE_IMAGE_FORMAT
#  define GL_TEXTURE_IMAGE_FORMAT 0x828F
#endif
#ifndef GL_TEXTURE_IMAGE_TYPE
#  define GL_TEXTURE_IMAGE_TYPE 0x8290
#endif
#ifndef GL_GET_TEXTURE_IMAGE_FORMAT
#  define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#endif
#ifndef GL_GET_TEXTURE_IMAGE_TYPE
#  define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#endif
#ifndef GL_MIPMAP
#  define GL_MIPMAP 0x8293
#endif
#ifndef GL_MANUAL_GENERATE_MIPMAP
#  define GL_MANUAL_GENERATE_MIPMAP 0x8294
#endif
#ifndef GL_AUTO_GENERATE_MIPMAP
#  define GL_AUTO_GENERATE_MIPMAP 0x8295
#endif
#ifndef GL_COLOR_ENCODING
#  define GL_COLOR_ENCODING 0x8296
#endif
#ifndef GL_SRGB_READ
#  define GL_SRGB_READ 0x8297
#endif
#ifndef GL_SRGB_WRITE
#  define GL_SRGB_WRITE 0x8298
#endif
#ifndef GL_SRGB_DECODE_ARB
#  define GL_SRGB_DECODE_ARB 0x8299
#endif
#ifndef GL_FILTER
#  define GL_FILTER 0x829A
#endif
#ifndef GL_VERTEX_TEXTURE
#  define GL_VERTEX_TEXTURE 0x829B
#endif
#ifndef GL_TESS_CONTROL_TEXTURE
#  define GL_TESS_CONTROL_TEXTURE 0x829C
#endif
#ifndef GL_TESS_EVALUATION_TEXTURE
#  define GL_TESS_EVALUATION_TEXTURE 0x829D
#endif
#ifndef GL_GEOMETRY_TEXTURE
#  define GL_GEOMETRY_TEXTURE 0x829E
#endif
#ifndef GL_FRAGMENT_TEXTURE
#  define GL_FRAGMENT_TEXTURE 0x829F
#endif
#ifndef GL_COMPUTE_TEXTURE
#  define GL_COMPUTE_TEXTURE 0x82A0
#endif
#ifndef GL_TEXTURE_SHADOW
#  define GL_TEXTURE_SHADOW 0x82A1
#endif
#ifndef GL_TEXTURE_GATHER
#  define GL_TEXTURE_GATHER 0x82A2
#endif
#ifndef GL_TEXTURE_GATHER_SHADOW
#  define GL_TEXTURE_GATHER_SHADOW 0x82A3
#endif
#ifndef GL_SHADER_IMAGE_LOAD
#  define GL_SHADER_IMAGE_LOAD 0x82A4
#endif
#ifndef GL_SHADER_IMAGE_STORE
#  define GL_SHADER_IMAGE_STORE 0x82A5
#endif
#ifndef GL_SHADER_IMAGE_ATOMIC
#  define GL_SHADER_IMAGE_ATOMIC 0x82A6
#endif
#ifndef GL_IMAGE_TEXEL_SIZE
#  define GL_IMAGE_TEXEL_SIZE 0x82A7
#endif
#ifndef GL_IMAGE_COMPATIBILITY_CLASS
#  define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#endif
#ifndef GL_IMAGE_PIXEL_FORMAT
#  define GL_IMAGE_PIXEL_FORMAT 0x82A9
#endif
#ifndef GL_IMAGE_PIXEL_TYPE
#  define GL_IMAGE_PIXEL_TYPE 0x82AA
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_WIDTH
#  define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT
#  define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_SIZE
#  define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#endif
#ifndef GL_CLEAR_BUFFER
#  define GL_CLEAR_BUFFER 0x82B4
#endif
#ifndef GL_TEXTURE_VIEW
#  define GL_TEXTURE_VIEW 0x82B5
#endif
#ifndef GL_VIEW_COMPATIBILITY_CLASS
#  define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#endif
#ifndef GL_FULL_SUPPORT
#  define GL_FULL_SUPPORT 0x82B7
#endif
#ifndef GL_CAVEAT_SUPPORT
#  define GL_CAVEAT_SUPPORT 0x82B8
#endif
#ifndef GL_IMAGE_CLASS_4_X_32
#  define GL_IMAGE_CLASS_4_X_32 0x82B9
#endif
#ifndef GL_IMAGE_CLASS_2_X_32
#  define GL_IMAGE_CLASS_2_X_32 0x82BA
#endif
#ifndef GL_IMAGE_CLASS_1_X_32
#  define GL_IMAGE_CLASS_1_X_32 0x82BB
#endif
#ifndef GL_IMAGE_CLASS_4_X_16
#  define GL_IMAGE_CLASS_4_X_16 0x82BC
#endif
#ifndef GL_IMAGE_CLASS_2_X_16
#  define GL_IMAGE_CLASS_2_X_16 0x82BD
#endif
#ifndef GL_IMAGE_CLASS_1_X_16
#  define GL_IMAGE_CLASS_1_X_16 0x82BE
#endif
#ifndef GL_IMAGE_CLASS_4_X_8
#  define GL_IMAGE_CLASS_4_X_8 0x82BF
#endif
#ifndef GL_IMAGE_CLASS_2_X_8
#  define GL_IMAGE_CLASS_2_X_8 0x82C0
#endif
#ifndef GL_IMAGE_CLASS_1_X_8
#  define GL_IMAGE_CLASS_1_X_8 0x82C1
#endif
#ifndef GL_IMAGE_CLASS_11_11_10
#  define GL_IMAGE_CLASS_11_11_10 0x82C2
#endif
#ifndef GL_IMAGE_CLASS_10_10_10_2
#  define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#endif
#ifndef GL_VIEW_CLASS_128_BITS
#  define GL_VIEW_CLASS_128_BITS 0x82C4
#endif
#ifndef GL_VIEW_CLASS_96_BITS
#  define GL_VIEW_CLASS_96_BITS 0x82C5
#endif
#ifndef GL_VIEW_CLASS_64_BITS
#  define GL_VIEW_CLASS_64_BITS 0x82C6
#endif
#ifndef GL_VIEW_CLASS_48_BITS
#  define GL_VIEW_CLASS_48_BITS 0x82C7
#endif
#ifndef GL_VIEW_CLASS_32_BITS
#  define GL_VIEW_CLASS_32_BITS 0x82C8
#endif
#ifndef GL_VIEW_CLASS_24_BITS
#  define GL_VIEW_CLASS_24_BITS 0x82C9
#endif
#ifndef GL_VIEW_CLASS_16_BITS
#  define GL_VIEW_CLASS_16_BITS 0x82CA
#endif
#ifndef GL_VIEW_CLASS_8_BITS
#  define GL_VIEW_CLASS_8_BITS 0x82CB
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGB
#  define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT3_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT5_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#endif
#ifndef GL_VIEW_CLASS_RGTC1_RED
#  define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#endif
#ifndef GL_VIEW_CLASS_RGTC2_RG
#  define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#endif
#ifndef GL_VIEW_CLASS_BPTC_UNORM
#  define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#endif
#ifndef GL_VIEW_CLASS_BPTC_FLOAT
#  define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetInternalformati64v
typedef void (APIENTRYP PFNGLUXGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetInternalformati64v
extern PFNGLUXGETINTERNALFORMATI64VPROC glGetInternalformati64v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:16:57 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_internalformat_query2__
#define __GLUX_GL_ARB_internalformat_query2__

GLUX_NEW_PLUGIN(GL_ARB_internalformat_query2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INTERNALFORMAT_SUPPORTED
#  define GL_INTERNALFORMAT_SUPPORTED 0x826F
#endif
#ifndef GL_INTERNALFORMAT_PREFERRED
#  define GL_INTERNALFORMAT_PREFERRED 0x8270
#endif
#ifndef GL_INTERNALFORMAT_RED_SIZE
#  define GL_INTERNALFORMAT_RED_SIZE 0x8271
#endif
#ifndef GL_INTERNALFORMAT_GREEN_SIZE
#  define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#endif
#ifndef GL_INTERNALFORMAT_BLUE_SIZE
#  define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_SIZE
#  define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_SIZE
#  define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_SIZE
#  define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#endif
#ifndef GL_INTERNALFORMAT_SHARED_SIZE
#  define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#endif
#ifndef GL_INTERNALFORMAT_RED_TYPE
#  define GL_INTERNALFORMAT_RED_TYPE 0x8278
#endif
#ifndef GL_INTERNALFORMAT_GREEN_TYPE
#  define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#endif
#ifndef GL_INTERNALFORMAT_BLUE_TYPE
#  define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_TYPE
#  define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_TYPE
#  define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_TYPE
#  define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#endif
#ifndef GL_MAX_WIDTH
#  define GL_MAX_WIDTH 0x827E
#endif
#ifndef GL_MAX_HEIGHT
#  define GL_MAX_HEIGHT 0x827F
#endif
#ifndef GL_MAX_DEPTH
#  define GL_MAX_DEPTH 0x8280
#endif
#ifndef GL_MAX_LAYERS
#  define GL_MAX_LAYERS 0x8281
#endif
#ifndef GL_MAX_COMBINED_DIMENSIONS
#  define GL_MAX_COMBINED_DIMENSIONS 0x8282
#endif
#ifndef GL_COLOR_COMPONENTS
#  define GL_COLOR_COMPONENTS 0x8283
#endif
#ifndef GL_DEPTH_COMPONENTS
#  define GL_DEPTH_COMPONENTS 0x8284
#endif
#ifndef GL_STENCIL_COMPONENTS
#  define GL_STENCIL_COMPONENTS 0x8285
#endif
#ifndef GL_COLOR_RENDERABLE
#  define GL_COLOR_RENDERABLE 0x8286
#endif
#ifndef GL_DEPTH_RENDERABLE
#  define GL_DEPTH_RENDERABLE 0x8287
#endif
#ifndef GL_STENCIL_RENDERABLE
#  define GL_STENCIL_RENDERABLE 0x8288
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE
#  define GL_FRAMEBUFFER_RENDERABLE 0x8289
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE_LAYERED
#  define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#endif
#ifndef GL_FRAMEBUFFER_BLEND
#  define GL_FRAMEBUFFER_BLEND 0x828B
#endif
#ifndef GL_READ_PIXELS
#  define GL_READ_PIXELS 0x828C
#endif
#ifndef GL_READ_PIXELS_FORMAT
#  define GL_READ_PIXELS_FORMAT 0x828D
#endif
#ifndef GL_READ_PIXELS_TYPE
#  define GL_READ_PIXELS_TYPE 0x828E
#endif
#ifndef GL_TEXTURE_IMAGE_FORMAT
#  define GL_TEXTURE_IMAGE_FORMAT 0x828F
#endif
#ifndef GL_TEXTURE_IMAGE_TYPE
#  define GL_TEXTURE_IMAGE_TYPE 0x8290
#endif
#ifndef GL_GET_TEXTURE_IMAGE_FORMAT
#  define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#endif
#ifndef GL_GET_TEXTURE_IMAGE_TYPE
#  define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#endif
#ifndef GL_MIPMAP
#  define GL_MIPMAP 0x8293
#endif
#ifndef GL_MANUAL_GENERATE_MIPMAP
#  define GL_MANUAL_GENERATE_MIPMAP 0x8294
#endif
#ifndef GL_AUTO_GENERATE_MIPMAP
#  define GL_AUTO_GENERATE_MIPMAP 0x8295
#endif
#ifndef GL_COLOR_ENCODING
#  define GL_COLOR_ENCODING 0x8296
#endif
#ifndef GL_SRGB_READ
#  define GL_SRGB_READ 0x8297
#endif
#ifndef GL_SRGB_WRITE
#  define GL_SRGB_WRITE 0x8298
#endif
#ifndef GL_SRGB_DECODE_ARB
#  define GL_SRGB_DECODE_ARB 0x8299
#endif
#ifndef GL_FILTER
#  define GL_FILTER 0x829A
#endif
#ifndef GL_VERTEX_TEXTURE
#  define GL_VERTEX_TEXTURE 0x829B
#endif
#ifndef GL_TESS_CONTROL_TEXTURE
#  define GL_TESS_CONTROL_TEXTURE 0x829C
#endif
#ifndef GL_TESS_EVALUATION_TEXTURE
#  define GL_TESS_EVALUATION_TEXTURE 0x829D
#endif
#ifndef GL_GEOMETRY_TEXTURE
#  define GL_GEOMETRY_TEXTURE 0x829E
#endif
#ifndef GL_FRAGMENT_TEXTURE
#  define GL_FRAGMENT_TEXTURE 0x829F
#endif
#ifndef GL_COMPUTE_TEXTURE
#  define GL_COMPUTE_TEXTURE 0x82A0
#endif
#ifndef GL_TEXTURE_SHADOW
#  define GL_TEXTURE_SHADOW 0x82A1
#endif
#ifndef GL_TEXTURE_GATHER
#  define GL_TEXTURE_GATHER 0x82A2
#endif
#ifndef GL_TEXTURE_GATHER_SHADOW
#  define GL_TEXTURE_GATHER_SHADOW 0x82A3
#endif
#ifndef GL_SHADER_IMAGE_LOAD
#  define GL_SHADER_IMAGE_LOAD 0x82A4
#endif
#ifndef GL_SHADER_IMAGE_STORE
#  define GL_SHADER_IMAGE_STORE 0x82A5
#endif
#ifndef GL_SHADER_IMAGE_ATOMIC
#  define GL_SHADER_IMAGE_ATOMIC 0x82A6
#endif
#ifndef GL_IMAGE_TEXEL_SIZE
#  define GL_IMAGE_TEXEL_SIZE 0x82A7
#endif
#ifndef GL_IMAGE_COMPATIBILITY_CLASS
#  define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#endif
#ifndef GL_IMAGE_PIXEL_FORMAT
#  define GL_IMAGE_PIXEL_FORMAT 0x82A9
#endif
#ifndef GL_IMAGE_PIXEL_TYPE
#  define GL_IMAGE_PIXEL_TYPE 0x82AA
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_WIDTH
#  define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT
#  define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_SIZE
#  define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#endif
#ifndef GL_CLEAR_BUFFER
#  define GL_CLEAR_BUFFER 0x82B4
#endif
#ifndef GL_TEXTURE_VIEW
#  define GL_TEXTURE_VIEW 0x82B5
#endif
#ifndef GL_VIEW_COMPATIBILITY_CLASS
#  define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#endif
#ifndef GL_FULL_SUPPORT
#  define GL_FULL_SUPPORT 0x82B7
#endif
#ifndef GL_CAVEAT_SUPPORT
#  define GL_CAVEAT_SUPPORT 0x82B8
#endif
#ifndef GL_IMAGE_CLASS_4_X_32
#  define GL_IMAGE_CLASS_4_X_32 0x82B9
#endif
#ifndef GL_IMAGE_CLASS_2_X_32
#  define GL_IMAGE_CLASS_2_X_32 0x82BA
#endif
#ifndef GL_IMAGE_CLASS_1_X_32
#  define GL_IMAGE_CLASS_1_X_32 0x82BB
#endif
#ifndef GL_IMAGE_CLASS_4_X_16
#  define GL_IMAGE_CLASS_4_X_16 0x82BC
#endif
#ifndef GL_IMAGE_CLASS_2_X_16
#  define GL_IMAGE_CLASS_2_X_16 0x82BD
#endif
#ifndef GL_IMAGE_CLASS_1_X_16
#  define GL_IMAGE_CLASS_1_X_16 0x82BE
#endif
#ifndef GL_IMAGE_CLASS_4_X_8
#  define GL_IMAGE_CLASS_4_X_8 0x82BF
#endif
#ifndef GL_IMAGE_CLASS_2_X_8
#  define GL_IMAGE_CLASS_2_X_8 0x82C0
#endif
#ifndef GL_IMAGE_CLASS_1_X_8
#  define GL_IMAGE_CLASS_1_X_8 0x82C1
#endif
#ifndef GL_IMAGE_CLASS_11_11_10
#  define GL_IMAGE_CLASS_11_11_10 0x82C2
#endif
#ifndef GL_IMAGE_CLASS_10_10_10_2
#  define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#endif
#ifndef GL_VIEW_CLASS_128_BITS
#  define GL_VIEW_CLASS_128_BITS 0x82C4
#endif
#ifndef GL_VIEW_CLASS_96_BITS
#  define GL_VIEW_CLASS_96_BITS 0x82C5
#endif
#ifndef GL_VIEW_CLASS_64_BITS
#  define GL_VIEW_CLASS_64_BITS 0x82C6
#endif
#ifndef GL_VIEW_CLASS_48_BITS
#  define GL_VIEW_CLASS_48_BITS 0x82C7
#endif
#ifndef GL_VIEW_CLASS_32_BITS
#  define GL_VIEW_CLASS_32_BITS 0x82C8
#endif
#ifndef GL_VIEW_CLASS_24_BITS
#  define GL_VIEW_CLASS_24_BITS 0x82C9
#endif
#ifndef GL_VIEW_CLASS_16_BITS
#  define GL_VIEW_CLASS_16_BITS 0x82CA
#endif
#ifndef GL_VIEW_CLASS_8_BITS
#  define GL_VIEW_CLASS_8_BITS 0x82CB
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGB
#  define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT3_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT5_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#endif
#ifndef GL_VIEW_CLASS_RGTC1_RED
#  define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#endif
#ifndef GL_VIEW_CLASS_RGTC2_RG
#  define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#endif
#ifndef GL_VIEW_CLASS_BPTC_UNORM
#  define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#endif
#ifndef GL_VIEW_CLASS_BPTC_FLOAT
#  define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetInternalformati64v
typedef void (APIENTRYP PFNGLUXGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetInternalformati64v
extern PFNGLUXGETINTERNALFORMATI64VPROC glGetInternalformati64v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_internalformat_query2__
#define __GLUX_GL_ARB_internalformat_query2__

GLUX_NEW_PLUGIN(GL_ARB_internalformat_query2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INTERNALFORMAT_SUPPORTED
#  define GL_INTERNALFORMAT_SUPPORTED 0x826F
#endif
#ifndef GL_INTERNALFORMAT_PREFERRED
#  define GL_INTERNALFORMAT_PREFERRED 0x8270
#endif
#ifndef GL_INTERNALFORMAT_RED_SIZE
#  define GL_INTERNALFORMAT_RED_SIZE 0x8271
#endif
#ifndef GL_INTERNALFORMAT_GREEN_SIZE
#  define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#endif
#ifndef GL_INTERNALFORMAT_BLUE_SIZE
#  define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_SIZE
#  define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_SIZE
#  define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_SIZE
#  define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#endif
#ifndef GL_INTERNALFORMAT_SHARED_SIZE
#  define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#endif
#ifndef GL_INTERNALFORMAT_RED_TYPE
#  define GL_INTERNALFORMAT_RED_TYPE 0x8278
#endif
#ifndef GL_INTERNALFORMAT_GREEN_TYPE
#  define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#endif
#ifndef GL_INTERNALFORMAT_BLUE_TYPE
#  define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_TYPE
#  define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_TYPE
#  define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_TYPE
#  define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#endif
#ifndef GL_MAX_WIDTH
#  define GL_MAX_WIDTH 0x827E
#endif
#ifndef GL_MAX_HEIGHT
#  define GL_MAX_HEIGHT 0x827F
#endif
#ifndef GL_MAX_DEPTH
#  define GL_MAX_DEPTH 0x8280
#endif
#ifndef GL_MAX_LAYERS
#  define GL_MAX_LAYERS 0x8281
#endif
#ifndef GL_MAX_COMBINED_DIMENSIONS
#  define GL_MAX_COMBINED_DIMENSIONS 0x8282
#endif
#ifndef GL_COLOR_COMPONENTS
#  define GL_COLOR_COMPONENTS 0x8283
#endif
#ifndef GL_DEPTH_COMPONENTS
#  define GL_DEPTH_COMPONENTS 0x8284
#endif
#ifndef GL_STENCIL_COMPONENTS
#  define GL_STENCIL_COMPONENTS 0x8285
#endif
#ifndef GL_COLOR_RENDERABLE
#  define GL_COLOR_RENDERABLE 0x8286
#endif
#ifndef GL_DEPTH_RENDERABLE
#  define GL_DEPTH_RENDERABLE 0x8287
#endif
#ifndef GL_STENCIL_RENDERABLE
#  define GL_STENCIL_RENDERABLE 0x8288
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE
#  define GL_FRAMEBUFFER_RENDERABLE 0x8289
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE_LAYERED
#  define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#endif
#ifndef GL_FRAMEBUFFER_BLEND
#  define GL_FRAMEBUFFER_BLEND 0x828B
#endif
#ifndef GL_READ_PIXELS
#  define GL_READ_PIXELS 0x828C
#endif
#ifndef GL_READ_PIXELS_FORMAT
#  define GL_READ_PIXELS_FORMAT 0x828D
#endif
#ifndef GL_READ_PIXELS_TYPE
#  define GL_READ_PIXELS_TYPE 0x828E
#endif
#ifndef GL_TEXTURE_IMAGE_FORMAT
#  define GL_TEXTURE_IMAGE_FORMAT 0x828F
#endif
#ifndef GL_TEXTURE_IMAGE_TYPE
#  define GL_TEXTURE_IMAGE_TYPE 0x8290
#endif
#ifndef GL_GET_TEXTURE_IMAGE_FORMAT
#  define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#endif
#ifndef GL_GET_TEXTURE_IMAGE_TYPE
#  define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#endif
#ifndef GL_MIPMAP
#  define GL_MIPMAP 0x8293
#endif
#ifndef GL_MANUAL_GENERATE_MIPMAP
#  define GL_MANUAL_GENERATE_MIPMAP 0x8294
#endif
#ifndef GL_AUTO_GENERATE_MIPMAP
#  define GL_AUTO_GENERATE_MIPMAP 0x8295
#endif
#ifndef GL_COLOR_ENCODING
#  define GL_COLOR_ENCODING 0x8296
#endif
#ifndef GL_SRGB_READ
#  define GL_SRGB_READ 0x8297
#endif
#ifndef GL_SRGB_WRITE
#  define GL_SRGB_WRITE 0x8298
#endif
#ifndef GL_SRGB_DECODE_ARB
#  define GL_SRGB_DECODE_ARB 0x8299
#endif
#ifndef GL_FILTER
#  define GL_FILTER 0x829A
#endif
#ifndef GL_VERTEX_TEXTURE
#  define GL_VERTEX_TEXTURE 0x829B
#endif
#ifndef GL_TESS_CONTROL_TEXTURE
#  define GL_TESS_CONTROL_TEXTURE 0x829C
#endif
#ifndef GL_TESS_EVALUATION_TEXTURE
#  define GL_TESS_EVALUATION_TEXTURE 0x829D
#endif
#ifndef GL_GEOMETRY_TEXTURE
#  define GL_GEOMETRY_TEXTURE 0x829E
#endif
#ifndef GL_FRAGMENT_TEXTURE
#  define GL_FRAGMENT_TEXTURE 0x829F
#endif
#ifndef GL_COMPUTE_TEXTURE
#  define GL_COMPUTE_TEXTURE 0x82A0
#endif
#ifndef GL_TEXTURE_SHADOW
#  define GL_TEXTURE_SHADOW 0x82A1
#endif
#ifndef GL_TEXTURE_GATHER
#  define GL_TEXTURE_GATHER 0x82A2
#endif
#ifndef GL_TEXTURE_GATHER_SHADOW
#  define GL_TEXTURE_GATHER_SHADOW 0x82A3
#endif
#ifndef GL_SHADER_IMAGE_LOAD
#  define GL_SHADER_IMAGE_LOAD 0x82A4
#endif
#ifndef GL_SHADER_IMAGE_STORE
#  define GL_SHADER_IMAGE_STORE 0x82A5
#endif
#ifndef GL_SHADER_IMAGE_ATOMIC
#  define GL_SHADER_IMAGE_ATOMIC 0x82A6
#endif
#ifndef GL_IMAGE_TEXEL_SIZE
#  define GL_IMAGE_TEXEL_SIZE 0x82A7
#endif
#ifndef GL_IMAGE_COMPATIBILITY_CLASS
#  define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#endif
#ifndef GL_IMAGE_PIXEL_FORMAT
#  define GL_IMAGE_PIXEL_FORMAT 0x82A9
#endif
#ifndef GL_IMAGE_PIXEL_TYPE
#  define GL_IMAGE_PIXEL_TYPE 0x82AA
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_WIDTH
#  define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT
#  define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_SIZE
#  define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#endif
#ifndef GL_CLEAR_BUFFER
#  define GL_CLEAR_BUFFER 0x82B4
#endif
#ifndef GL_TEXTURE_VIEW
#  define GL_TEXTURE_VIEW 0x82B5
#endif
#ifndef GL_VIEW_COMPATIBILITY_CLASS
#  define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#endif
#ifndef GL_FULL_SUPPORT
#  define GL_FULL_SUPPORT 0x82B7
#endif
#ifndef GL_CAVEAT_SUPPORT
#  define GL_CAVEAT_SUPPORT 0x82B8
#endif
#ifndef GL_IMAGE_CLASS_4_X_32
#  define GL_IMAGE_CLASS_4_X_32 0x82B9
#endif
#ifndef GL_IMAGE_CLASS_2_X_32
#  define GL_IMAGE_CLASS_2_X_32 0x82BA
#endif
#ifndef GL_IMAGE_CLASS_1_X_32
#  define GL_IMAGE_CLASS_1_X_32 0x82BB
#endif
#ifndef GL_IMAGE_CLASS_4_X_16
#  define GL_IMAGE_CLASS_4_X_16 0x82BC
#endif
#ifndef GL_IMAGE_CLASS_2_X_16
#  define GL_IMAGE_CLASS_2_X_16 0x82BD
#endif
#ifndef GL_IMAGE_CLASS_1_X_16
#  define GL_IMAGE_CLASS_1_X_16 0x82BE
#endif
#ifndef GL_IMAGE_CLASS_4_X_8
#  define GL_IMAGE_CLASS_4_X_8 0x82BF
#endif
#ifndef GL_IMAGE_CLASS_2_X_8
#  define GL_IMAGE_CLASS_2_X_8 0x82C0
#endif
#ifndef GL_IMAGE_CLASS_1_X_8
#  define GL_IMAGE_CLASS_1_X_8 0x82C1
#endif
#ifndef GL_IMAGE_CLASS_11_11_10
#  define GL_IMAGE_CLASS_11_11_10 0x82C2
#endif
#ifndef GL_IMAGE_CLASS_10_10_10_2
#  define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#endif
#ifndef GL_VIEW_CLASS_128_BITS
#  define GL_VIEW_CLASS_128_BITS 0x82C4
#endif
#ifndef GL_VIEW_CLASS_96_BITS
#  define GL_VIEW_CLASS_96_BITS 0x82C5
#endif
#ifndef GL_VIEW_CLASS_64_BITS
#  define GL_VIEW_CLASS_64_BITS 0x82C6
#endif
#ifndef GL_VIEW_CLASS_48_BITS
#  define GL_VIEW_CLASS_48_BITS 0x82C7
#endif
#ifndef GL_VIEW_CLASS_32_BITS
#  define GL_VIEW_CLASS_32_BITS 0x82C8
#endif
#ifndef GL_VIEW_CLASS_24_BITS
#  define GL_VIEW_CLASS_24_BITS 0x82C9
#endif
#ifndef GL_VIEW_CLASS_16_BITS
#  define GL_VIEW_CLASS_16_BITS 0x82CA
#endif
#ifndef GL_VIEW_CLASS_8_BITS
#  define GL_VIEW_CLASS_8_BITS 0x82CB
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGB
#  define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT3_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT5_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#endif
#ifndef GL_VIEW_CLASS_RGTC1_RED
#  define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#endif
#ifndef GL_VIEW_CLASS_RGTC2_RG
#  define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#endif
#ifndef GL_VIEW_CLASS_BPTC_UNORM
#  define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#endif
#ifndef GL_VIEW_CLASS_BPTC_FLOAT
#  define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetInternalformati64v
typedef void (APIENTRYP PFNGLUXGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetInternalformati64v
extern PFNGLUXGETINTERNALFORMATI64VPROC glGetInternalformati64v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:20 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_internalformat_query2__
#define __GLUX_GL_ARB_internalformat_query2__

GLUX_NEW_PLUGIN(GL_ARB_internalformat_query2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INTERNALFORMAT_SUPPORTED
#  define GL_INTERNALFORMAT_SUPPORTED 0x826F
#endif
#ifndef GL_INTERNALFORMAT_PREFERRED
#  define GL_INTERNALFORMAT_PREFERRED 0x8270
#endif
#ifndef GL_INTERNALFORMAT_RED_SIZE
#  define GL_INTERNALFORMAT_RED_SIZE 0x8271
#endif
#ifndef GL_INTERNALFORMAT_GREEN_SIZE
#  define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#endif
#ifndef GL_INTERNALFORMAT_BLUE_SIZE
#  define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_SIZE
#  define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_SIZE
#  define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_SIZE
#  define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#endif
#ifndef GL_INTERNALFORMAT_SHARED_SIZE
#  define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#endif
#ifndef GL_INTERNALFORMAT_RED_TYPE
#  define GL_INTERNALFORMAT_RED_TYPE 0x8278
#endif
#ifndef GL_INTERNALFORMAT_GREEN_TYPE
#  define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#endif
#ifndef GL_INTERNALFORMAT_BLUE_TYPE
#  define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_TYPE
#  define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_TYPE
#  define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_TYPE
#  define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#endif
#ifndef GL_MAX_WIDTH
#  define GL_MAX_WIDTH 0x827E
#endif
#ifndef GL_MAX_HEIGHT
#  define GL_MAX_HEIGHT 0x827F
#endif
#ifndef GL_MAX_DEPTH
#  define GL_MAX_DEPTH 0x8280
#endif
#ifndef GL_MAX_LAYERS
#  define GL_MAX_LAYERS 0x8281
#endif
#ifndef GL_MAX_COMBINED_DIMENSIONS
#  define GL_MAX_COMBINED_DIMENSIONS 0x8282
#endif
#ifndef GL_COLOR_COMPONENTS
#  define GL_COLOR_COMPONENTS 0x8283
#endif
#ifndef GL_DEPTH_COMPONENTS
#  define GL_DEPTH_COMPONENTS 0x8284
#endif
#ifndef GL_STENCIL_COMPONENTS
#  define GL_STENCIL_COMPONENTS 0x8285
#endif
#ifndef GL_COLOR_RENDERABLE
#  define GL_COLOR_RENDERABLE 0x8286
#endif
#ifndef GL_DEPTH_RENDERABLE
#  define GL_DEPTH_RENDERABLE 0x8287
#endif
#ifndef GL_STENCIL_RENDERABLE
#  define GL_STENCIL_RENDERABLE 0x8288
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE
#  define GL_FRAMEBUFFER_RENDERABLE 0x8289
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE_LAYERED
#  define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#endif
#ifndef GL_FRAMEBUFFER_BLEND
#  define GL_FRAMEBUFFER_BLEND 0x828B
#endif
#ifndef GL_READ_PIXELS
#  define GL_READ_PIXELS 0x828C
#endif
#ifndef GL_READ_PIXELS_FORMAT
#  define GL_READ_PIXELS_FORMAT 0x828D
#endif
#ifndef GL_READ_PIXELS_TYPE
#  define GL_READ_PIXELS_TYPE 0x828E
#endif
#ifndef GL_TEXTURE_IMAGE_FORMAT
#  define GL_TEXTURE_IMAGE_FORMAT 0x828F
#endif
#ifndef GL_TEXTURE_IMAGE_TYPE
#  define GL_TEXTURE_IMAGE_TYPE 0x8290
#endif
#ifndef GL_GET_TEXTURE_IMAGE_FORMAT
#  define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#endif
#ifndef GL_GET_TEXTURE_IMAGE_TYPE
#  define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#endif
#ifndef GL_MIPMAP
#  define GL_MIPMAP 0x8293
#endif
#ifndef GL_MANUAL_GENERATE_MIPMAP
#  define GL_MANUAL_GENERATE_MIPMAP 0x8294
#endif
#ifndef GL_AUTO_GENERATE_MIPMAP
#  define GL_AUTO_GENERATE_MIPMAP 0x8295
#endif
#ifndef GL_COLOR_ENCODING
#  define GL_COLOR_ENCODING 0x8296
#endif
#ifndef GL_SRGB_READ
#  define GL_SRGB_READ 0x8297
#endif
#ifndef GL_SRGB_WRITE
#  define GL_SRGB_WRITE 0x8298
#endif
#ifndef GL_SRGB_DECODE_ARB
#  define GL_SRGB_DECODE_ARB 0x8299
#endif
#ifndef GL_FILTER
#  define GL_FILTER 0x829A
#endif
#ifndef GL_VERTEX_TEXTURE
#  define GL_VERTEX_TEXTURE 0x829B
#endif
#ifndef GL_TESS_CONTROL_TEXTURE
#  define GL_TESS_CONTROL_TEXTURE 0x829C
#endif
#ifndef GL_TESS_EVALUATION_TEXTURE
#  define GL_TESS_EVALUATION_TEXTURE 0x829D
#endif
#ifndef GL_GEOMETRY_TEXTURE
#  define GL_GEOMETRY_TEXTURE 0x829E
#endif
#ifndef GL_FRAGMENT_TEXTURE
#  define GL_FRAGMENT_TEXTURE 0x829F
#endif
#ifndef GL_COMPUTE_TEXTURE
#  define GL_COMPUTE_TEXTURE 0x82A0
#endif
#ifndef GL_TEXTURE_SHADOW
#  define GL_TEXTURE_SHADOW 0x82A1
#endif
#ifndef GL_TEXTURE_GATHER
#  define GL_TEXTURE_GATHER 0x82A2
#endif
#ifndef GL_TEXTURE_GATHER_SHADOW
#  define GL_TEXTURE_GATHER_SHADOW 0x82A3
#endif
#ifndef GL_SHADER_IMAGE_LOAD
#  define GL_SHADER_IMAGE_LOAD 0x82A4
#endif
#ifndef GL_SHADER_IMAGE_STORE
#  define GL_SHADER_IMAGE_STORE 0x82A5
#endif
#ifndef GL_SHADER_IMAGE_ATOMIC
#  define GL_SHADER_IMAGE_ATOMIC 0x82A6
#endif
#ifndef GL_IMAGE_TEXEL_SIZE
#  define GL_IMAGE_TEXEL_SIZE 0x82A7
#endif
#ifndef GL_IMAGE_COMPATIBILITY_CLASS
#  define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#endif
#ifndef GL_IMAGE_PIXEL_FORMAT
#  define GL_IMAGE_PIXEL_FORMAT 0x82A9
#endif
#ifndef GL_IMAGE_PIXEL_TYPE
#  define GL_IMAGE_PIXEL_TYPE 0x82AA
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_WIDTH
#  define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT
#  define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_SIZE
#  define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#endif
#ifndef GL_CLEAR_BUFFER
#  define GL_CLEAR_BUFFER 0x82B4
#endif
#ifndef GL_TEXTURE_VIEW
#  define GL_TEXTURE_VIEW 0x82B5
#endif
#ifndef GL_VIEW_COMPATIBILITY_CLASS
#  define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#endif
#ifndef GL_FULL_SUPPORT
#  define GL_FULL_SUPPORT 0x82B7
#endif
#ifndef GL_CAVEAT_SUPPORT
#  define GL_CAVEAT_SUPPORT 0x82B8
#endif
#ifndef GL_IMAGE_CLASS_4_X_32
#  define GL_IMAGE_CLASS_4_X_32 0x82B9
#endif
#ifndef GL_IMAGE_CLASS_2_X_32
#  define GL_IMAGE_CLASS_2_X_32 0x82BA
#endif
#ifndef GL_IMAGE_CLASS_1_X_32
#  define GL_IMAGE_CLASS_1_X_32 0x82BB
#endif
#ifndef GL_IMAGE_CLASS_4_X_16
#  define GL_IMAGE_CLASS_4_X_16 0x82BC
#endif
#ifndef GL_IMAGE_CLASS_2_X_16
#  define GL_IMAGE_CLASS_2_X_16 0x82BD
#endif
#ifndef GL_IMAGE_CLASS_1_X_16
#  define GL_IMAGE_CLASS_1_X_16 0x82BE
#endif
#ifndef GL_IMAGE_CLASS_4_X_8
#  define GL_IMAGE_CLASS_4_X_8 0x82BF
#endif
#ifndef GL_IMAGE_CLASS_2_X_8
#  define GL_IMAGE_CLASS_2_X_8 0x82C0
#endif
#ifndef GL_IMAGE_CLASS_1_X_8
#  define GL_IMAGE_CLASS_1_X_8 0x82C1
#endif
#ifndef GL_IMAGE_CLASS_11_11_10
#  define GL_IMAGE_CLASS_11_11_10 0x82C2
#endif
#ifndef GL_IMAGE_CLASS_10_10_10_2
#  define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#endif
#ifndef GL_VIEW_CLASS_128_BITS
#  define GL_VIEW_CLASS_128_BITS 0x82C4
#endif
#ifndef GL_VIEW_CLASS_96_BITS
#  define GL_VIEW_CLASS_96_BITS 0x82C5
#endif
#ifndef GL_VIEW_CLASS_64_BITS
#  define GL_VIEW_CLASS_64_BITS 0x82C6
#endif
#ifndef GL_VIEW_CLASS_48_BITS
#  define GL_VIEW_CLASS_48_BITS 0x82C7
#endif
#ifndef GL_VIEW_CLASS_32_BITS
#  define GL_VIEW_CLASS_32_BITS 0x82C8
#endif
#ifndef GL_VIEW_CLASS_24_BITS
#  define GL_VIEW_CLASS_24_BITS 0x82C9
#endif
#ifndef GL_VIEW_CLASS_16_BITS
#  define GL_VIEW_CLASS_16_BITS 0x82CA
#endif
#ifndef GL_VIEW_CLASS_8_BITS
#  define GL_VIEW_CLASS_8_BITS 0x82CB
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGB
#  define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT3_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT5_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#endif
#ifndef GL_VIEW_CLASS_RGTC1_RED
#  define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#endif
#ifndef GL_VIEW_CLASS_RGTC2_RG
#  define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#endif
#ifndef GL_VIEW_CLASS_BPTC_UNORM
#  define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#endif
#ifndef GL_VIEW_CLASS_BPTC_FLOAT
#  define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetInternalformati64v
typedef void (APIENTRYP PFNGLUXGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetInternalformati64v
extern PFNGLUXGETINTERNALFORMATI64VPROC glGetInternalformati64v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:00 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_internalformat_query2__
#define __GLUX_GL_ARB_internalformat_query2__

GLUX_NEW_PLUGIN(GL_ARB_internalformat_query2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INTERNALFORMAT_SUPPORTED
#  define GL_INTERNALFORMAT_SUPPORTED 0x826F
#endif
#ifndef GL_INTERNALFORMAT_PREFERRED
#  define GL_INTERNALFORMAT_PREFERRED 0x8270
#endif
#ifndef GL_INTERNALFORMAT_RED_SIZE
#  define GL_INTERNALFORMAT_RED_SIZE 0x8271
#endif
#ifndef GL_INTERNALFORMAT_GREEN_SIZE
#  define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#endif
#ifndef GL_INTERNALFORMAT_BLUE_SIZE
#  define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_SIZE
#  define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_SIZE
#  define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_SIZE
#  define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#endif
#ifndef GL_INTERNALFORMAT_SHARED_SIZE
#  define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#endif
#ifndef GL_INTERNALFORMAT_RED_TYPE
#  define GL_INTERNALFORMAT_RED_TYPE 0x8278
#endif
#ifndef GL_INTERNALFORMAT_GREEN_TYPE
#  define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#endif
#ifndef GL_INTERNALFORMAT_BLUE_TYPE
#  define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_TYPE
#  define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_TYPE
#  define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_TYPE
#  define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#endif
#ifndef GL_MAX_WIDTH
#  define GL_MAX_WIDTH 0x827E
#endif
#ifndef GL_MAX_HEIGHT
#  define GL_MAX_HEIGHT 0x827F
#endif
#ifndef GL_MAX_DEPTH
#  define GL_MAX_DEPTH 0x8280
#endif
#ifndef GL_MAX_LAYERS
#  define GL_MAX_LAYERS 0x8281
#endif
#ifndef GL_MAX_COMBINED_DIMENSIONS
#  define GL_MAX_COMBINED_DIMENSIONS 0x8282
#endif
#ifndef GL_COLOR_COMPONENTS
#  define GL_COLOR_COMPONENTS 0x8283
#endif
#ifndef GL_DEPTH_COMPONENTS
#  define GL_DEPTH_COMPONENTS 0x8284
#endif
#ifndef GL_STENCIL_COMPONENTS
#  define GL_STENCIL_COMPONENTS 0x8285
#endif
#ifndef GL_COLOR_RENDERABLE
#  define GL_COLOR_RENDERABLE 0x8286
#endif
#ifndef GL_DEPTH_RENDERABLE
#  define GL_DEPTH_RENDERABLE 0x8287
#endif
#ifndef GL_STENCIL_RENDERABLE
#  define GL_STENCIL_RENDERABLE 0x8288
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE
#  define GL_FRAMEBUFFER_RENDERABLE 0x8289
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE_LAYERED
#  define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#endif
#ifndef GL_FRAMEBUFFER_BLEND
#  define GL_FRAMEBUFFER_BLEND 0x828B
#endif
#ifndef GL_READ_PIXELS
#  define GL_READ_PIXELS 0x828C
#endif
#ifndef GL_READ_PIXELS_FORMAT
#  define GL_READ_PIXELS_FORMAT 0x828D
#endif
#ifndef GL_READ_PIXELS_TYPE
#  define GL_READ_PIXELS_TYPE 0x828E
#endif
#ifndef GL_TEXTURE_IMAGE_FORMAT
#  define GL_TEXTURE_IMAGE_FORMAT 0x828F
#endif
#ifndef GL_TEXTURE_IMAGE_TYPE
#  define GL_TEXTURE_IMAGE_TYPE 0x8290
#endif
#ifndef GL_GET_TEXTURE_IMAGE_FORMAT
#  define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#endif
#ifndef GL_GET_TEXTURE_IMAGE_TYPE
#  define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#endif
#ifndef GL_MIPMAP
#  define GL_MIPMAP 0x8293
#endif
#ifndef GL_MANUAL_GENERATE_MIPMAP
#  define GL_MANUAL_GENERATE_MIPMAP 0x8294
#endif
#ifndef GL_AUTO_GENERATE_MIPMAP
#  define GL_AUTO_GENERATE_MIPMAP 0x8295
#endif
#ifndef GL_COLOR_ENCODING
#  define GL_COLOR_ENCODING 0x8296
#endif
#ifndef GL_SRGB_READ
#  define GL_SRGB_READ 0x8297
#endif
#ifndef GL_SRGB_WRITE
#  define GL_SRGB_WRITE 0x8298
#endif
#ifndef GL_SRGB_DECODE_ARB
#  define GL_SRGB_DECODE_ARB 0x8299
#endif
#ifndef GL_FILTER
#  define GL_FILTER 0x829A
#endif
#ifndef GL_VERTEX_TEXTURE
#  define GL_VERTEX_TEXTURE 0x829B
#endif
#ifndef GL_TESS_CONTROL_TEXTURE
#  define GL_TESS_CONTROL_TEXTURE 0x829C
#endif
#ifndef GL_TESS_EVALUATION_TEXTURE
#  define GL_TESS_EVALUATION_TEXTURE 0x829D
#endif
#ifndef GL_GEOMETRY_TEXTURE
#  define GL_GEOMETRY_TEXTURE 0x829E
#endif
#ifndef GL_FRAGMENT_TEXTURE
#  define GL_FRAGMENT_TEXTURE 0x829F
#endif
#ifndef GL_COMPUTE_TEXTURE
#  define GL_COMPUTE_TEXTURE 0x82A0
#endif
#ifndef GL_TEXTURE_SHADOW
#  define GL_TEXTURE_SHADOW 0x82A1
#endif
#ifndef GL_TEXTURE_GATHER
#  define GL_TEXTURE_GATHER 0x82A2
#endif
#ifndef GL_TEXTURE_GATHER_SHADOW
#  define GL_TEXTURE_GATHER_SHADOW 0x82A3
#endif
#ifndef GL_SHADER_IMAGE_LOAD
#  define GL_SHADER_IMAGE_LOAD 0x82A4
#endif
#ifndef GL_SHADER_IMAGE_STORE
#  define GL_SHADER_IMAGE_STORE 0x82A5
#endif
#ifndef GL_SHADER_IMAGE_ATOMIC
#  define GL_SHADER_IMAGE_ATOMIC 0x82A6
#endif
#ifndef GL_IMAGE_TEXEL_SIZE
#  define GL_IMAGE_TEXEL_SIZE 0x82A7
#endif
#ifndef GL_IMAGE_COMPATIBILITY_CLASS
#  define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#endif
#ifndef GL_IMAGE_PIXEL_FORMAT
#  define GL_IMAGE_PIXEL_FORMAT 0x82A9
#endif
#ifndef GL_IMAGE_PIXEL_TYPE
#  define GL_IMAGE_PIXEL_TYPE 0x82AA
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_WIDTH
#  define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT
#  define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_SIZE
#  define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#endif
#ifndef GL_CLEAR_BUFFER
#  define GL_CLEAR_BUFFER 0x82B4
#endif
#ifndef GL_TEXTURE_VIEW
#  define GL_TEXTURE_VIEW 0x82B5
#endif
#ifndef GL_VIEW_COMPATIBILITY_CLASS
#  define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#endif
#ifndef GL_FULL_SUPPORT
#  define GL_FULL_SUPPORT 0x82B7
#endif
#ifndef GL_CAVEAT_SUPPORT
#  define GL_CAVEAT_SUPPORT 0x82B8
#endif
#ifndef GL_IMAGE_CLASS_4_X_32
#  define GL_IMAGE_CLASS_4_X_32 0x82B9
#endif
#ifndef GL_IMAGE_CLASS_2_X_32
#  define GL_IMAGE_CLASS_2_X_32 0x82BA
#endif
#ifndef GL_IMAGE_CLASS_1_X_32
#  define GL_IMAGE_CLASS_1_X_32 0x82BB
#endif
#ifndef GL_IMAGE_CLASS_4_X_16
#  define GL_IMAGE_CLASS_4_X_16 0x82BC
#endif
#ifndef GL_IMAGE_CLASS_2_X_16
#  define GL_IMAGE_CLASS_2_X_16 0x82BD
#endif
#ifndef GL_IMAGE_CLASS_1_X_16
#  define GL_IMAGE_CLASS_1_X_16 0x82BE
#endif
#ifndef GL_IMAGE_CLASS_4_X_8
#  define GL_IMAGE_CLASS_4_X_8 0x82BF
#endif
#ifndef GL_IMAGE_CLASS_2_X_8
#  define GL_IMAGE_CLASS_2_X_8 0x82C0
#endif
#ifndef GL_IMAGE_CLASS_1_X_8
#  define GL_IMAGE_CLASS_1_X_8 0x82C1
#endif
#ifndef GL_IMAGE_CLASS_11_11_10
#  define GL_IMAGE_CLASS_11_11_10 0x82C2
#endif
#ifndef GL_IMAGE_CLASS_10_10_10_2
#  define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#endif
#ifndef GL_VIEW_CLASS_128_BITS
#  define GL_VIEW_CLASS_128_BITS 0x82C4
#endif
#ifndef GL_VIEW_CLASS_96_BITS
#  define GL_VIEW_CLASS_96_BITS 0x82C5
#endif
#ifndef GL_VIEW_CLASS_64_BITS
#  define GL_VIEW_CLASS_64_BITS 0x82C6
#endif
#ifndef GL_VIEW_CLASS_48_BITS
#  define GL_VIEW_CLASS_48_BITS 0x82C7
#endif
#ifndef GL_VIEW_CLASS_32_BITS
#  define GL_VIEW_CLASS_32_BITS 0x82C8
#endif
#ifndef GL_VIEW_CLASS_24_BITS
#  define GL_VIEW_CLASS_24_BITS 0x82C9
#endif
#ifndef GL_VIEW_CLASS_16_BITS
#  define GL_VIEW_CLASS_16_BITS 0x82CA
#endif
#ifndef GL_VIEW_CLASS_8_BITS
#  define GL_VIEW_CLASS_8_BITS 0x82CB
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGB
#  define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT3_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT5_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#endif
#ifndef GL_VIEW_CLASS_RGTC1_RED
#  define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#endif
#ifndef GL_VIEW_CLASS_RGTC2_RG
#  define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#endif
#ifndef GL_VIEW_CLASS_BPTC_UNORM
#  define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#endif
#ifndef GL_VIEW_CLASS_BPTC_FLOAT
#  define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetInternalformati64v
typedef void (APIENTRYP PFNGLUXGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetInternalformati64v
extern PFNGLUXGETINTERNALFORMATI64VPROC glGetInternalformati64v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:09 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_internalformat_query2__
#define __GLUX_GL_ARB_internalformat_query2__

GLUX_NEW_PLUGIN(GL_ARB_internalformat_query2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INTERNALFORMAT_SUPPORTED
#  define GL_INTERNALFORMAT_SUPPORTED 0x826F
#endif
#ifndef GL_INTERNALFORMAT_PREFERRED
#  define GL_INTERNALFORMAT_PREFERRED 0x8270
#endif
#ifndef GL_INTERNALFORMAT_RED_SIZE
#  define GL_INTERNALFORMAT_RED_SIZE 0x8271
#endif
#ifndef GL_INTERNALFORMAT_GREEN_SIZE
#  define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#endif
#ifndef GL_INTERNALFORMAT_BLUE_SIZE
#  define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_SIZE
#  define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_SIZE
#  define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_SIZE
#  define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#endif
#ifndef GL_INTERNALFORMAT_SHARED_SIZE
#  define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#endif
#ifndef GL_INTERNALFORMAT_RED_TYPE
#  define GL_INTERNALFORMAT_RED_TYPE 0x8278
#endif
#ifndef GL_INTERNALFORMAT_GREEN_TYPE
#  define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#endif
#ifndef GL_INTERNALFORMAT_BLUE_TYPE
#  define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_TYPE
#  define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_TYPE
#  define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_TYPE
#  define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#endif
#ifndef GL_MAX_WIDTH
#  define GL_MAX_WIDTH 0x827E
#endif
#ifndef GL_MAX_HEIGHT
#  define GL_MAX_HEIGHT 0x827F
#endif
#ifndef GL_MAX_DEPTH
#  define GL_MAX_DEPTH 0x8280
#endif
#ifndef GL_MAX_LAYERS
#  define GL_MAX_LAYERS 0x8281
#endif
#ifndef GL_MAX_COMBINED_DIMENSIONS
#  define GL_MAX_COMBINED_DIMENSIONS 0x8282
#endif
#ifndef GL_COLOR_COMPONENTS
#  define GL_COLOR_COMPONENTS 0x8283
#endif
#ifndef GL_DEPTH_COMPONENTS
#  define GL_DEPTH_COMPONENTS 0x8284
#endif
#ifndef GL_STENCIL_COMPONENTS
#  define GL_STENCIL_COMPONENTS 0x8285
#endif
#ifndef GL_COLOR_RENDERABLE
#  define GL_COLOR_RENDERABLE 0x8286
#endif
#ifndef GL_DEPTH_RENDERABLE
#  define GL_DEPTH_RENDERABLE 0x8287
#endif
#ifndef GL_STENCIL_RENDERABLE
#  define GL_STENCIL_RENDERABLE 0x8288
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE
#  define GL_FRAMEBUFFER_RENDERABLE 0x8289
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE_LAYERED
#  define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#endif
#ifndef GL_FRAMEBUFFER_BLEND
#  define GL_FRAMEBUFFER_BLEND 0x828B
#endif
#ifndef GL_READ_PIXELS
#  define GL_READ_PIXELS 0x828C
#endif
#ifndef GL_READ_PIXELS_FORMAT
#  define GL_READ_PIXELS_FORMAT 0x828D
#endif
#ifndef GL_READ_PIXELS_TYPE
#  define GL_READ_PIXELS_TYPE 0x828E
#endif
#ifndef GL_TEXTURE_IMAGE_FORMAT
#  define GL_TEXTURE_IMAGE_FORMAT 0x828F
#endif
#ifndef GL_TEXTURE_IMAGE_TYPE
#  define GL_TEXTURE_IMAGE_TYPE 0x8290
#endif
#ifndef GL_GET_TEXTURE_IMAGE_FORMAT
#  define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#endif
#ifndef GL_GET_TEXTURE_IMAGE_TYPE
#  define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#endif
#ifndef GL_MIPMAP
#  define GL_MIPMAP 0x8293
#endif
#ifndef GL_MANUAL_GENERATE_MIPMAP
#  define GL_MANUAL_GENERATE_MIPMAP 0x8294
#endif
#ifndef GL_AUTO_GENERATE_MIPMAP
#  define GL_AUTO_GENERATE_MIPMAP 0x8295
#endif
#ifndef GL_COLOR_ENCODING
#  define GL_COLOR_ENCODING 0x8296
#endif
#ifndef GL_SRGB_READ
#  define GL_SRGB_READ 0x8297
#endif
#ifndef GL_SRGB_WRITE
#  define GL_SRGB_WRITE 0x8298
#endif
#ifndef GL_SRGB_DECODE_ARB
#  define GL_SRGB_DECODE_ARB 0x8299
#endif
#ifndef GL_FILTER
#  define GL_FILTER 0x829A
#endif
#ifndef GL_VERTEX_TEXTURE
#  define GL_VERTEX_TEXTURE 0x829B
#endif
#ifndef GL_TESS_CONTROL_TEXTURE
#  define GL_TESS_CONTROL_TEXTURE 0x829C
#endif
#ifndef GL_TESS_EVALUATION_TEXTURE
#  define GL_TESS_EVALUATION_TEXTURE 0x829D
#endif
#ifndef GL_GEOMETRY_TEXTURE
#  define GL_GEOMETRY_TEXTURE 0x829E
#endif
#ifndef GL_FRAGMENT_TEXTURE
#  define GL_FRAGMENT_TEXTURE 0x829F
#endif
#ifndef GL_COMPUTE_TEXTURE
#  define GL_COMPUTE_TEXTURE 0x82A0
#endif
#ifndef GL_TEXTURE_SHADOW
#  define GL_TEXTURE_SHADOW 0x82A1
#endif
#ifndef GL_TEXTURE_GATHER
#  define GL_TEXTURE_GATHER 0x82A2
#endif
#ifndef GL_TEXTURE_GATHER_SHADOW
#  define GL_TEXTURE_GATHER_SHADOW 0x82A3
#endif
#ifndef GL_SHADER_IMAGE_LOAD
#  define GL_SHADER_IMAGE_LOAD 0x82A4
#endif
#ifndef GL_SHADER_IMAGE_STORE
#  define GL_SHADER_IMAGE_STORE 0x82A5
#endif
#ifndef GL_SHADER_IMAGE_ATOMIC
#  define GL_SHADER_IMAGE_ATOMIC 0x82A6
#endif
#ifndef GL_IMAGE_TEXEL_SIZE
#  define GL_IMAGE_TEXEL_SIZE 0x82A7
#endif
#ifndef GL_IMAGE_COMPATIBILITY_CLASS
#  define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#endif
#ifndef GL_IMAGE_PIXEL_FORMAT
#  define GL_IMAGE_PIXEL_FORMAT 0x82A9
#endif
#ifndef GL_IMAGE_PIXEL_TYPE
#  define GL_IMAGE_PIXEL_TYPE 0x82AA
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_WIDTH
#  define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT
#  define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_SIZE
#  define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#endif
#ifndef GL_CLEAR_BUFFER
#  define GL_CLEAR_BUFFER 0x82B4
#endif
#ifndef GL_TEXTURE_VIEW
#  define GL_TEXTURE_VIEW 0x82B5
#endif
#ifndef GL_VIEW_COMPATIBILITY_CLASS
#  define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#endif
#ifndef GL_FULL_SUPPORT
#  define GL_FULL_SUPPORT 0x82B7
#endif
#ifndef GL_CAVEAT_SUPPORT
#  define GL_CAVEAT_SUPPORT 0x82B8
#endif
#ifndef GL_IMAGE_CLASS_4_X_32
#  define GL_IMAGE_CLASS_4_X_32 0x82B9
#endif
#ifndef GL_IMAGE_CLASS_2_X_32
#  define GL_IMAGE_CLASS_2_X_32 0x82BA
#endif
#ifndef GL_IMAGE_CLASS_1_X_32
#  define GL_IMAGE_CLASS_1_X_32 0x82BB
#endif
#ifndef GL_IMAGE_CLASS_4_X_16
#  define GL_IMAGE_CLASS_4_X_16 0x82BC
#endif
#ifndef GL_IMAGE_CLASS_2_X_16
#  define GL_IMAGE_CLASS_2_X_16 0x82BD
#endif
#ifndef GL_IMAGE_CLASS_1_X_16
#  define GL_IMAGE_CLASS_1_X_16 0x82BE
#endif
#ifndef GL_IMAGE_CLASS_4_X_8
#  define GL_IMAGE_CLASS_4_X_8 0x82BF
#endif
#ifndef GL_IMAGE_CLASS_2_X_8
#  define GL_IMAGE_CLASS_2_X_8 0x82C0
#endif
#ifndef GL_IMAGE_CLASS_1_X_8
#  define GL_IMAGE_CLASS_1_X_8 0x82C1
#endif
#ifndef GL_IMAGE_CLASS_11_11_10
#  define GL_IMAGE_CLASS_11_11_10 0x82C2
#endif
#ifndef GL_IMAGE_CLASS_10_10_10_2
#  define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#endif
#ifndef GL_VIEW_CLASS_128_BITS
#  define GL_VIEW_CLASS_128_BITS 0x82C4
#endif
#ifndef GL_VIEW_CLASS_96_BITS
#  define GL_VIEW_CLASS_96_BITS 0x82C5
#endif
#ifndef GL_VIEW_CLASS_64_BITS
#  define GL_VIEW_CLASS_64_BITS 0x82C6
#endif
#ifndef GL_VIEW_CLASS_48_BITS
#  define GL_VIEW_CLASS_48_BITS 0x82C7
#endif
#ifndef GL_VIEW_CLASS_32_BITS
#  define GL_VIEW_CLASS_32_BITS 0x82C8
#endif
#ifndef GL_VIEW_CLASS_24_BITS
#  define GL_VIEW_CLASS_24_BITS 0x82C9
#endif
#ifndef GL_VIEW_CLASS_16_BITS
#  define GL_VIEW_CLASS_16_BITS 0x82CA
#endif
#ifndef GL_VIEW_CLASS_8_BITS
#  define GL_VIEW_CLASS_8_BITS 0x82CB
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGB
#  define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT3_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT5_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#endif
#ifndef GL_VIEW_CLASS_RGTC1_RED
#  define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#endif
#ifndef GL_VIEW_CLASS_RGTC2_RG
#  define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#endif
#ifndef GL_VIEW_CLASS_BPTC_UNORM
#  define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#endif
#ifndef GL_VIEW_CLASS_BPTC_FLOAT
#  define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetInternalformati64v
typedef void (APIENTRYP PFNGLUXGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetInternalformati64v
extern PFNGLUXGETINTERNALFORMATI64VPROC glGetInternalformati64v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:21 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_internalformat_query2__
#define __GLUX_GL_ARB_internalformat_query2__

GLUX_NEW_PLUGIN(GL_ARB_internalformat_query2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INTERNALFORMAT_SUPPORTED
#  define GL_INTERNALFORMAT_SUPPORTED 0x826F
#endif
#ifndef GL_INTERNALFORMAT_PREFERRED
#  define GL_INTERNALFORMAT_PREFERRED 0x8270
#endif
#ifndef GL_INTERNALFORMAT_RED_SIZE
#  define GL_INTERNALFORMAT_RED_SIZE 0x8271
#endif
#ifndef GL_INTERNALFORMAT_GREEN_SIZE
#  define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#endif
#ifndef GL_INTERNALFORMAT_BLUE_SIZE
#  define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_SIZE
#  define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_SIZE
#  define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_SIZE
#  define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#endif
#ifndef GL_INTERNALFORMAT_SHARED_SIZE
#  define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#endif
#ifndef GL_INTERNALFORMAT_RED_TYPE
#  define GL_INTERNALFORMAT_RED_TYPE 0x8278
#endif
#ifndef GL_INTERNALFORMAT_GREEN_TYPE
#  define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#endif
#ifndef GL_INTERNALFORMAT_BLUE_TYPE
#  define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_TYPE
#  define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_TYPE
#  define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_TYPE
#  define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#endif
#ifndef GL_MAX_WIDTH
#  define GL_MAX_WIDTH 0x827E
#endif
#ifndef GL_MAX_HEIGHT
#  define GL_MAX_HEIGHT 0x827F
#endif
#ifndef GL_MAX_DEPTH
#  define GL_MAX_DEPTH 0x8280
#endif
#ifndef GL_MAX_LAYERS
#  define GL_MAX_LAYERS 0x8281
#endif
#ifndef GL_MAX_COMBINED_DIMENSIONS
#  define GL_MAX_COMBINED_DIMENSIONS 0x8282
#endif
#ifndef GL_COLOR_COMPONENTS
#  define GL_COLOR_COMPONENTS 0x8283
#endif
#ifndef GL_DEPTH_COMPONENTS
#  define GL_DEPTH_COMPONENTS 0x8284
#endif
#ifndef GL_STENCIL_COMPONENTS
#  define GL_STENCIL_COMPONENTS 0x8285
#endif
#ifndef GL_COLOR_RENDERABLE
#  define GL_COLOR_RENDERABLE 0x8286
#endif
#ifndef GL_DEPTH_RENDERABLE
#  define GL_DEPTH_RENDERABLE 0x8287
#endif
#ifndef GL_STENCIL_RENDERABLE
#  define GL_STENCIL_RENDERABLE 0x8288
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE
#  define GL_FRAMEBUFFER_RENDERABLE 0x8289
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE_LAYERED
#  define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#endif
#ifndef GL_FRAMEBUFFER_BLEND
#  define GL_FRAMEBUFFER_BLEND 0x828B
#endif
#ifndef GL_READ_PIXELS
#  define GL_READ_PIXELS 0x828C
#endif
#ifndef GL_READ_PIXELS_FORMAT
#  define GL_READ_PIXELS_FORMAT 0x828D
#endif
#ifndef GL_READ_PIXELS_TYPE
#  define GL_READ_PIXELS_TYPE 0x828E
#endif
#ifndef GL_TEXTURE_IMAGE_FORMAT
#  define GL_TEXTURE_IMAGE_FORMAT 0x828F
#endif
#ifndef GL_TEXTURE_IMAGE_TYPE
#  define GL_TEXTURE_IMAGE_TYPE 0x8290
#endif
#ifndef GL_GET_TEXTURE_IMAGE_FORMAT
#  define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#endif
#ifndef GL_GET_TEXTURE_IMAGE_TYPE
#  define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#endif
#ifndef GL_MIPMAP
#  define GL_MIPMAP 0x8293
#endif
#ifndef GL_MANUAL_GENERATE_MIPMAP
#  define GL_MANUAL_GENERATE_MIPMAP 0x8294
#endif
#ifndef GL_AUTO_GENERATE_MIPMAP
#  define GL_AUTO_GENERATE_MIPMAP 0x8295
#endif
#ifndef GL_COLOR_ENCODING
#  define GL_COLOR_ENCODING 0x8296
#endif
#ifndef GL_SRGB_READ
#  define GL_SRGB_READ 0x8297
#endif
#ifndef GL_SRGB_WRITE
#  define GL_SRGB_WRITE 0x8298
#endif
#ifndef GL_SRGB_DECODE_ARB
#  define GL_SRGB_DECODE_ARB 0x8299
#endif
#ifndef GL_FILTER
#  define GL_FILTER 0x829A
#endif
#ifndef GL_VERTEX_TEXTURE
#  define GL_VERTEX_TEXTURE 0x829B
#endif
#ifndef GL_TESS_CONTROL_TEXTURE
#  define GL_TESS_CONTROL_TEXTURE 0x829C
#endif
#ifndef GL_TESS_EVALUATION_TEXTURE
#  define GL_TESS_EVALUATION_TEXTURE 0x829D
#endif
#ifndef GL_GEOMETRY_TEXTURE
#  define GL_GEOMETRY_TEXTURE 0x829E
#endif
#ifndef GL_FRAGMENT_TEXTURE
#  define GL_FRAGMENT_TEXTURE 0x829F
#endif
#ifndef GL_COMPUTE_TEXTURE
#  define GL_COMPUTE_TEXTURE 0x82A0
#endif
#ifndef GL_TEXTURE_SHADOW
#  define GL_TEXTURE_SHADOW 0x82A1
#endif
#ifndef GL_TEXTURE_GATHER
#  define GL_TEXTURE_GATHER 0x82A2
#endif
#ifndef GL_TEXTURE_GATHER_SHADOW
#  define GL_TEXTURE_GATHER_SHADOW 0x82A3
#endif
#ifndef GL_SHADER_IMAGE_LOAD
#  define GL_SHADER_IMAGE_LOAD 0x82A4
#endif
#ifndef GL_SHADER_IMAGE_STORE
#  define GL_SHADER_IMAGE_STORE 0x82A5
#endif
#ifndef GL_SHADER_IMAGE_ATOMIC
#  define GL_SHADER_IMAGE_ATOMIC 0x82A6
#endif
#ifndef GL_IMAGE_TEXEL_SIZE
#  define GL_IMAGE_TEXEL_SIZE 0x82A7
#endif
#ifndef GL_IMAGE_COMPATIBILITY_CLASS
#  define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#endif
#ifndef GL_IMAGE_PIXEL_FORMAT
#  define GL_IMAGE_PIXEL_FORMAT 0x82A9
#endif
#ifndef GL_IMAGE_PIXEL_TYPE
#  define GL_IMAGE_PIXEL_TYPE 0x82AA
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_WIDTH
#  define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT
#  define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_SIZE
#  define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#endif
#ifndef GL_CLEAR_BUFFER
#  define GL_CLEAR_BUFFER 0x82B4
#endif
#ifndef GL_TEXTURE_VIEW
#  define GL_TEXTURE_VIEW 0x82B5
#endif
#ifndef GL_VIEW_COMPATIBILITY_CLASS
#  define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#endif
#ifndef GL_FULL_SUPPORT
#  define GL_FULL_SUPPORT 0x82B7
#endif
#ifndef GL_CAVEAT_SUPPORT
#  define GL_CAVEAT_SUPPORT 0x82B8
#endif
#ifndef GL_IMAGE_CLASS_4_X_32
#  define GL_IMAGE_CLASS_4_X_32 0x82B9
#endif
#ifndef GL_IMAGE_CLASS_2_X_32
#  define GL_IMAGE_CLASS_2_X_32 0x82BA
#endif
#ifndef GL_IMAGE_CLASS_1_X_32
#  define GL_IMAGE_CLASS_1_X_32 0x82BB
#endif
#ifndef GL_IMAGE_CLASS_4_X_16
#  define GL_IMAGE_CLASS_4_X_16 0x82BC
#endif
#ifndef GL_IMAGE_CLASS_2_X_16
#  define GL_IMAGE_CLASS_2_X_16 0x82BD
#endif
#ifndef GL_IMAGE_CLASS_1_X_16
#  define GL_IMAGE_CLASS_1_X_16 0x82BE
#endif
#ifndef GL_IMAGE_CLASS_4_X_8
#  define GL_IMAGE_CLASS_4_X_8 0x82BF
#endif
#ifndef GL_IMAGE_CLASS_2_X_8
#  define GL_IMAGE_CLASS_2_X_8 0x82C0
#endif
#ifndef GL_IMAGE_CLASS_1_X_8
#  define GL_IMAGE_CLASS_1_X_8 0x82C1
#endif
#ifndef GL_IMAGE_CLASS_11_11_10
#  define GL_IMAGE_CLASS_11_11_10 0x82C2
#endif
#ifndef GL_IMAGE_CLASS_10_10_10_2
#  define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#endif
#ifndef GL_VIEW_CLASS_128_BITS
#  define GL_VIEW_CLASS_128_BITS 0x82C4
#endif
#ifndef GL_VIEW_CLASS_96_BITS
#  define GL_VIEW_CLASS_96_BITS 0x82C5
#endif
#ifndef GL_VIEW_CLASS_64_BITS
#  define GL_VIEW_CLASS_64_BITS 0x82C6
#endif
#ifndef GL_VIEW_CLASS_48_BITS
#  define GL_VIEW_CLASS_48_BITS 0x82C7
#endif
#ifndef GL_VIEW_CLASS_32_BITS
#  define GL_VIEW_CLASS_32_BITS 0x82C8
#endif
#ifndef GL_VIEW_CLASS_24_BITS
#  define GL_VIEW_CLASS_24_BITS 0x82C9
#endif
#ifndef GL_VIEW_CLASS_16_BITS
#  define GL_VIEW_CLASS_16_BITS 0x82CA
#endif
#ifndef GL_VIEW_CLASS_8_BITS
#  define GL_VIEW_CLASS_8_BITS 0x82CB
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGB
#  define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT3_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT5_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#endif
#ifndef GL_VIEW_CLASS_RGTC1_RED
#  define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#endif
#ifndef GL_VIEW_CLASS_RGTC2_RG
#  define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#endif
#ifndef GL_VIEW_CLASS_BPTC_UNORM
#  define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#endif
#ifndef GL_VIEW_CLASS_BPTC_FLOAT
#  define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetInternalformati64v
typedef void (APIENTRYP PFNGLUXGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetInternalformati64v
extern PFNGLUXGETINTERNALFORMATI64VPROC glGetInternalformati64v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:52:01 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_internalformat_query2__
#define __GLUX_GL_ARB_internalformat_query2__

GLUX_NEW_PLUGIN(GL_ARB_internalformat_query2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INTERNALFORMAT_SUPPORTED
#  define GL_INTERNALFORMAT_SUPPORTED 0x826F
#endif
#ifndef GL_INTERNALFORMAT_PREFERRED
#  define GL_INTERNALFORMAT_PREFERRED 0x8270
#endif
#ifndef GL_INTERNALFORMAT_RED_SIZE
#  define GL_INTERNALFORMAT_RED_SIZE 0x8271
#endif
#ifndef GL_INTERNALFORMAT_GREEN_SIZE
#  define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#endif
#ifndef GL_INTERNALFORMAT_BLUE_SIZE
#  define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_SIZE
#  define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_SIZE
#  define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_SIZE
#  define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#endif
#ifndef GL_INTERNALFORMAT_SHARED_SIZE
#  define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#endif
#ifndef GL_INTERNALFORMAT_RED_TYPE
#  define GL_INTERNALFORMAT_RED_TYPE 0x8278
#endif
#ifndef GL_INTERNALFORMAT_GREEN_TYPE
#  define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#endif
#ifndef GL_INTERNALFORMAT_BLUE_TYPE
#  define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_TYPE
#  define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_TYPE
#  define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_TYPE
#  define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#endif
#ifndef GL_MAX_WIDTH
#  define GL_MAX_WIDTH 0x827E
#endif
#ifndef GL_MAX_HEIGHT
#  define GL_MAX_HEIGHT 0x827F
#endif
#ifndef GL_MAX_DEPTH
#  define GL_MAX_DEPTH 0x8280
#endif
#ifndef GL_MAX_LAYERS
#  define GL_MAX_LAYERS 0x8281
#endif
#ifndef GL_MAX_COMBINED_DIMENSIONS
#  define GL_MAX_COMBINED_DIMENSIONS 0x8282
#endif
#ifndef GL_COLOR_COMPONENTS
#  define GL_COLOR_COMPONENTS 0x8283
#endif
#ifndef GL_DEPTH_COMPONENTS
#  define GL_DEPTH_COMPONENTS 0x8284
#endif
#ifndef GL_STENCIL_COMPONENTS
#  define GL_STENCIL_COMPONENTS 0x8285
#endif
#ifndef GL_COLOR_RENDERABLE
#  define GL_COLOR_RENDERABLE 0x8286
#endif
#ifndef GL_DEPTH_RENDERABLE
#  define GL_DEPTH_RENDERABLE 0x8287
#endif
#ifndef GL_STENCIL_RENDERABLE
#  define GL_STENCIL_RENDERABLE 0x8288
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE
#  define GL_FRAMEBUFFER_RENDERABLE 0x8289
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE_LAYERED
#  define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#endif
#ifndef GL_FRAMEBUFFER_BLEND
#  define GL_FRAMEBUFFER_BLEND 0x828B
#endif
#ifndef GL_READ_PIXELS
#  define GL_READ_PIXELS 0x828C
#endif
#ifndef GL_READ_PIXELS_FORMAT
#  define GL_READ_PIXELS_FORMAT 0x828D
#endif
#ifndef GL_READ_PIXELS_TYPE
#  define GL_READ_PIXELS_TYPE 0x828E
#endif
#ifndef GL_TEXTURE_IMAGE_FORMAT
#  define GL_TEXTURE_IMAGE_FORMAT 0x828F
#endif
#ifndef GL_TEXTURE_IMAGE_TYPE
#  define GL_TEXTURE_IMAGE_TYPE 0x8290
#endif
#ifndef GL_GET_TEXTURE_IMAGE_FORMAT
#  define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#endif
#ifndef GL_GET_TEXTURE_IMAGE_TYPE
#  define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#endif
#ifndef GL_MIPMAP
#  define GL_MIPMAP 0x8293
#endif
#ifndef GL_MANUAL_GENERATE_MIPMAP
#  define GL_MANUAL_GENERATE_MIPMAP 0x8294
#endif
#ifndef GL_AUTO_GENERATE_MIPMAP
#  define GL_AUTO_GENERATE_MIPMAP 0x8295
#endif
#ifndef GL_COLOR_ENCODING
#  define GL_COLOR_ENCODING 0x8296
#endif
#ifndef GL_SRGB_READ
#  define GL_SRGB_READ 0x8297
#endif
#ifndef GL_SRGB_WRITE
#  define GL_SRGB_WRITE 0x8298
#endif
#ifndef GL_SRGB_DECODE_ARB
#  define GL_SRGB_DECODE_ARB 0x8299
#endif
#ifndef GL_FILTER
#  define GL_FILTER 0x829A
#endif
#ifndef GL_VERTEX_TEXTURE
#  define GL_VERTEX_TEXTURE 0x829B
#endif
#ifndef GL_TESS_CONTROL_TEXTURE
#  define GL_TESS_CONTROL_TEXTURE 0x829C
#endif
#ifndef GL_TESS_EVALUATION_TEXTURE
#  define GL_TESS_EVALUATION_TEXTURE 0x829D
#endif
#ifndef GL_GEOMETRY_TEXTURE
#  define GL_GEOMETRY_TEXTURE 0x829E
#endif
#ifndef GL_FRAGMENT_TEXTURE
#  define GL_FRAGMENT_TEXTURE 0x829F
#endif
#ifndef GL_COMPUTE_TEXTURE
#  define GL_COMPUTE_TEXTURE 0x82A0
#endif
#ifndef GL_TEXTURE_SHADOW
#  define GL_TEXTURE_SHADOW 0x82A1
#endif
#ifndef GL_TEXTURE_GATHER
#  define GL_TEXTURE_GATHER 0x82A2
#endif
#ifndef GL_TEXTURE_GATHER_SHADOW
#  define GL_TEXTURE_GATHER_SHADOW 0x82A3
#endif
#ifndef GL_SHADER_IMAGE_LOAD
#  define GL_SHADER_IMAGE_LOAD 0x82A4
#endif
#ifndef GL_SHADER_IMAGE_STORE
#  define GL_SHADER_IMAGE_STORE 0x82A5
#endif
#ifndef GL_SHADER_IMAGE_ATOMIC
#  define GL_SHADER_IMAGE_ATOMIC 0x82A6
#endif
#ifndef GL_IMAGE_TEXEL_SIZE
#  define GL_IMAGE_TEXEL_SIZE 0x82A7
#endif
#ifndef GL_IMAGE_COMPATIBILITY_CLASS
#  define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#endif
#ifndef GL_IMAGE_PIXEL_FORMAT
#  define GL_IMAGE_PIXEL_FORMAT 0x82A9
#endif
#ifndef GL_IMAGE_PIXEL_TYPE
#  define GL_IMAGE_PIXEL_TYPE 0x82AA
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_WIDTH
#  define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT
#  define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_SIZE
#  define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#endif
#ifndef GL_CLEAR_BUFFER
#  define GL_CLEAR_BUFFER 0x82B4
#endif
#ifndef GL_TEXTURE_VIEW
#  define GL_TEXTURE_VIEW 0x82B5
#endif
#ifndef GL_VIEW_COMPATIBILITY_CLASS
#  define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#endif
#ifndef GL_FULL_SUPPORT
#  define GL_FULL_SUPPORT 0x82B7
#endif
#ifndef GL_CAVEAT_SUPPORT
#  define GL_CAVEAT_SUPPORT 0x82B8
#endif
#ifndef GL_IMAGE_CLASS_4_X_32
#  define GL_IMAGE_CLASS_4_X_32 0x82B9
#endif
#ifndef GL_IMAGE_CLASS_2_X_32
#  define GL_IMAGE_CLASS_2_X_32 0x82BA
#endif
#ifndef GL_IMAGE_CLASS_1_X_32
#  define GL_IMAGE_CLASS_1_X_32 0x82BB
#endif
#ifndef GL_IMAGE_CLASS_4_X_16
#  define GL_IMAGE_CLASS_4_X_16 0x82BC
#endif
#ifndef GL_IMAGE_CLASS_2_X_16
#  define GL_IMAGE_CLASS_2_X_16 0x82BD
#endif
#ifndef GL_IMAGE_CLASS_1_X_16
#  define GL_IMAGE_CLASS_1_X_16 0x82BE
#endif
#ifndef GL_IMAGE_CLASS_4_X_8
#  define GL_IMAGE_CLASS_4_X_8 0x82BF
#endif
#ifndef GL_IMAGE_CLASS_2_X_8
#  define GL_IMAGE_CLASS_2_X_8 0x82C0
#endif
#ifndef GL_IMAGE_CLASS_1_X_8
#  define GL_IMAGE_CLASS_1_X_8 0x82C1
#endif
#ifndef GL_IMAGE_CLASS_11_11_10
#  define GL_IMAGE_CLASS_11_11_10 0x82C2
#endif
#ifndef GL_IMAGE_CLASS_10_10_10_2
#  define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#endif
#ifndef GL_VIEW_CLASS_128_BITS
#  define GL_VIEW_CLASS_128_BITS 0x82C4
#endif
#ifndef GL_VIEW_CLASS_96_BITS
#  define GL_VIEW_CLASS_96_BITS 0x82C5
#endif
#ifndef GL_VIEW_CLASS_64_BITS
#  define GL_VIEW_CLASS_64_BITS 0x82C6
#endif
#ifndef GL_VIEW_CLASS_48_BITS
#  define GL_VIEW_CLASS_48_BITS 0x82C7
#endif
#ifndef GL_VIEW_CLASS_32_BITS
#  define GL_VIEW_CLASS_32_BITS 0x82C8
#endif
#ifndef GL_VIEW_CLASS_24_BITS
#  define GL_VIEW_CLASS_24_BITS 0x82C9
#endif
#ifndef GL_VIEW_CLASS_16_BITS
#  define GL_VIEW_CLASS_16_BITS 0x82CA
#endif
#ifndef GL_VIEW_CLASS_8_BITS
#  define GL_VIEW_CLASS_8_BITS 0x82CB
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGB
#  define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT3_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT5_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#endif
#ifndef GL_VIEW_CLASS_RGTC1_RED
#  define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#endif
#ifndef GL_VIEW_CLASS_RGTC2_RG
#  define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#endif
#ifndef GL_VIEW_CLASS_BPTC_UNORM
#  define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#endif
#ifndef GL_VIEW_CLASS_BPTC_FLOAT
#  define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetInternalformati64v
typedef void (APIENTRYP PFNGLUXGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetInternalformati64v
extern PFNGLUXGETINTERNALFORMATI64VPROC glGetInternalformati64v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_internalformat_query2__
#define __GLUX_GL_ARB_internalformat_query2__

GLUX_NEW_PLUGIN(GL_ARB_internalformat_query2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INTERNALFORMAT_SUPPORTED
#  define GL_INTERNALFORMAT_SUPPORTED 0x826F
#endif
#ifndef GL_INTERNALFORMAT_PREFERRED
#  define GL_INTERNALFORMAT_PREFERRED 0x8270
#endif
#ifndef GL_INTERNALFORMAT_RED_SIZE
#  define GL_INTERNALFORMAT_RED_SIZE 0x8271
#endif
#ifndef GL_INTERNALFORMAT_GREEN_SIZE
#  define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#endif
#ifndef GL_INTERNALFORMAT_BLUE_SIZE
#  define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_SIZE
#  define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_SIZE
#  define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_SIZE
#  define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#endif
#ifndef GL_INTERNALFORMAT_SHARED_SIZE
#  define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#endif
#ifndef GL_INTERNALFORMAT_RED_TYPE
#  define GL_INTERNALFORMAT_RED_TYPE 0x8278
#endif
#ifndef GL_INTERNALFORMAT_GREEN_TYPE
#  define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#endif
#ifndef GL_INTERNALFORMAT_BLUE_TYPE
#  define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_TYPE
#  define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_TYPE
#  define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_TYPE
#  define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#endif
#ifndef GL_MAX_WIDTH
#  define GL_MAX_WIDTH 0x827E
#endif
#ifndef GL_MAX_HEIGHT
#  define GL_MAX_HEIGHT 0x827F
#endif
#ifndef GL_MAX_DEPTH
#  define GL_MAX_DEPTH 0x8280
#endif
#ifndef GL_MAX_LAYERS
#  define GL_MAX_LAYERS 0x8281
#endif
#ifndef GL_MAX_COMBINED_DIMENSIONS
#  define GL_MAX_COMBINED_DIMENSIONS 0x8282
#endif
#ifndef GL_COLOR_COMPONENTS
#  define GL_COLOR_COMPONENTS 0x8283
#endif
#ifndef GL_DEPTH_COMPONENTS
#  define GL_DEPTH_COMPONENTS 0x8284
#endif
#ifndef GL_STENCIL_COMPONENTS
#  define GL_STENCIL_COMPONENTS 0x8285
#endif
#ifndef GL_COLOR_RENDERABLE
#  define GL_COLOR_RENDERABLE 0x8286
#endif
#ifndef GL_DEPTH_RENDERABLE
#  define GL_DEPTH_RENDERABLE 0x8287
#endif
#ifndef GL_STENCIL_RENDERABLE
#  define GL_STENCIL_RENDERABLE 0x8288
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE
#  define GL_FRAMEBUFFER_RENDERABLE 0x8289
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE_LAYERED
#  define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#endif
#ifndef GL_FRAMEBUFFER_BLEND
#  define GL_FRAMEBUFFER_BLEND 0x828B
#endif
#ifndef GL_READ_PIXELS
#  define GL_READ_PIXELS 0x828C
#endif
#ifndef GL_READ_PIXELS_FORMAT
#  define GL_READ_PIXELS_FORMAT 0x828D
#endif
#ifndef GL_READ_PIXELS_TYPE
#  define GL_READ_PIXELS_TYPE 0x828E
#endif
#ifndef GL_TEXTURE_IMAGE_FORMAT
#  define GL_TEXTURE_IMAGE_FORMAT 0x828F
#endif
#ifndef GL_TEXTURE_IMAGE_TYPE
#  define GL_TEXTURE_IMAGE_TYPE 0x8290
#endif
#ifndef GL_GET_TEXTURE_IMAGE_FORMAT
#  define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#endif
#ifndef GL_GET_TEXTURE_IMAGE_TYPE
#  define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#endif
#ifndef GL_MIPMAP
#  define GL_MIPMAP 0x8293
#endif
#ifndef GL_MANUAL_GENERATE_MIPMAP
#  define GL_MANUAL_GENERATE_MIPMAP 0x8294
#endif
#ifndef GL_AUTO_GENERATE_MIPMAP
#  define GL_AUTO_GENERATE_MIPMAP 0x8295
#endif
#ifndef GL_COLOR_ENCODING
#  define GL_COLOR_ENCODING 0x8296
#endif
#ifndef GL_SRGB_READ
#  define GL_SRGB_READ 0x8297
#endif
#ifndef GL_SRGB_WRITE
#  define GL_SRGB_WRITE 0x8298
#endif
#ifndef GL_SRGB_DECODE_ARB
#  define GL_SRGB_DECODE_ARB 0x8299
#endif
#ifndef GL_FILTER
#  define GL_FILTER 0x829A
#endif
#ifndef GL_VERTEX_TEXTURE
#  define GL_VERTEX_TEXTURE 0x829B
#endif
#ifndef GL_TESS_CONTROL_TEXTURE
#  define GL_TESS_CONTROL_TEXTURE 0x829C
#endif
#ifndef GL_TESS_EVALUATION_TEXTURE
#  define GL_TESS_EVALUATION_TEXTURE 0x829D
#endif
#ifndef GL_GEOMETRY_TEXTURE
#  define GL_GEOMETRY_TEXTURE 0x829E
#endif
#ifndef GL_FRAGMENT_TEXTURE
#  define GL_FRAGMENT_TEXTURE 0x829F
#endif
#ifndef GL_COMPUTE_TEXTURE
#  define GL_COMPUTE_TEXTURE 0x82A0
#endif
#ifndef GL_TEXTURE_SHADOW
#  define GL_TEXTURE_SHADOW 0x82A1
#endif
#ifndef GL_TEXTURE_GATHER
#  define GL_TEXTURE_GATHER 0x82A2
#endif
#ifndef GL_TEXTURE_GATHER_SHADOW
#  define GL_TEXTURE_GATHER_SHADOW 0x82A3
#endif
#ifndef GL_SHADER_IMAGE_LOAD
#  define GL_SHADER_IMAGE_LOAD 0x82A4
#endif
#ifndef GL_SHADER_IMAGE_STORE
#  define GL_SHADER_IMAGE_STORE 0x82A5
#endif
#ifndef GL_SHADER_IMAGE_ATOMIC
#  define GL_SHADER_IMAGE_ATOMIC 0x82A6
#endif
#ifndef GL_IMAGE_TEXEL_SIZE
#  define GL_IMAGE_TEXEL_SIZE 0x82A7
#endif
#ifndef GL_IMAGE_COMPATIBILITY_CLASS
#  define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#endif
#ifndef GL_IMAGE_PIXEL_FORMAT
#  define GL_IMAGE_PIXEL_FORMAT 0x82A9
#endif
#ifndef GL_IMAGE_PIXEL_TYPE
#  define GL_IMAGE_PIXEL_TYPE 0x82AA
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_WIDTH
#  define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT
#  define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_SIZE
#  define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#endif
#ifndef GL_CLEAR_BUFFER
#  define GL_CLEAR_BUFFER 0x82B4
#endif
#ifndef GL_TEXTURE_VIEW
#  define GL_TEXTURE_VIEW 0x82B5
#endif
#ifndef GL_VIEW_COMPATIBILITY_CLASS
#  define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#endif
#ifndef GL_FULL_SUPPORT
#  define GL_FULL_SUPPORT 0x82B7
#endif
#ifndef GL_CAVEAT_SUPPORT
#  define GL_CAVEAT_SUPPORT 0x82B8
#endif
#ifndef GL_IMAGE_CLASS_4_X_32
#  define GL_IMAGE_CLASS_4_X_32 0x82B9
#endif
#ifndef GL_IMAGE_CLASS_2_X_32
#  define GL_IMAGE_CLASS_2_X_32 0x82BA
#endif
#ifndef GL_IMAGE_CLASS_1_X_32
#  define GL_IMAGE_CLASS_1_X_32 0x82BB
#endif
#ifndef GL_IMAGE_CLASS_4_X_16
#  define GL_IMAGE_CLASS_4_X_16 0x82BC
#endif
#ifndef GL_IMAGE_CLASS_2_X_16
#  define GL_IMAGE_CLASS_2_X_16 0x82BD
#endif
#ifndef GL_IMAGE_CLASS_1_X_16
#  define GL_IMAGE_CLASS_1_X_16 0x82BE
#endif
#ifndef GL_IMAGE_CLASS_4_X_8
#  define GL_IMAGE_CLASS_4_X_8 0x82BF
#endif
#ifndef GL_IMAGE_CLASS_2_X_8
#  define GL_IMAGE_CLASS_2_X_8 0x82C0
#endif
#ifndef GL_IMAGE_CLASS_1_X_8
#  define GL_IMAGE_CLASS_1_X_8 0x82C1
#endif
#ifndef GL_IMAGE_CLASS_11_11_10
#  define GL_IMAGE_CLASS_11_11_10 0x82C2
#endif
#ifndef GL_IMAGE_CLASS_10_10_10_2
#  define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#endif
#ifndef GL_VIEW_CLASS_128_BITS
#  define GL_VIEW_CLASS_128_BITS 0x82C4
#endif
#ifndef GL_VIEW_CLASS_96_BITS
#  define GL_VIEW_CLASS_96_BITS 0x82C5
#endif
#ifndef GL_VIEW_CLASS_64_BITS
#  define GL_VIEW_CLASS_64_BITS 0x82C6
#endif
#ifndef GL_VIEW_CLASS_48_BITS
#  define GL_VIEW_CLASS_48_BITS 0x82C7
#endif
#ifndef GL_VIEW_CLASS_32_BITS
#  define GL_VIEW_CLASS_32_BITS 0x82C8
#endif
#ifndef GL_VIEW_CLASS_24_BITS
#  define GL_VIEW_CLASS_24_BITS 0x82C9
#endif
#ifndef GL_VIEW_CLASS_16_BITS
#  define GL_VIEW_CLASS_16_BITS 0x82CA
#endif
#ifndef GL_VIEW_CLASS_8_BITS
#  define GL_VIEW_CLASS_8_BITS 0x82CB
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGB
#  define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT3_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT5_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#endif
#ifndef GL_VIEW_CLASS_RGTC1_RED
#  define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#endif
#ifndef GL_VIEW_CLASS_RGTC2_RG
#  define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#endif
#ifndef GL_VIEW_CLASS_BPTC_UNORM
#  define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#endif
#ifndef GL_VIEW_CLASS_BPTC_FLOAT
#  define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetInternalformati64v
typedef void (APIENTRYP PFNGLUXGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetInternalformati64v
extern PFNGLUXGETINTERNALFORMATI64VPROC glGetInternalformati64v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:04 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_internalformat_query2__
#define __GLUX_GL_ARB_internalformat_query2__

GLUX_NEW_PLUGIN(GL_ARB_internalformat_query2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INTERNALFORMAT_SUPPORTED
#  define GL_INTERNALFORMAT_SUPPORTED 0x826F
#endif
#ifndef GL_INTERNALFORMAT_PREFERRED
#  define GL_INTERNALFORMAT_PREFERRED 0x8270
#endif
#ifndef GL_INTERNALFORMAT_RED_SIZE
#  define GL_INTERNALFORMAT_RED_SIZE 0x8271
#endif
#ifndef GL_INTERNALFORMAT_GREEN_SIZE
#  define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#endif
#ifndef GL_INTERNALFORMAT_BLUE_SIZE
#  define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_SIZE
#  define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_SIZE
#  define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_SIZE
#  define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#endif
#ifndef GL_INTERNALFORMAT_SHARED_SIZE
#  define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#endif
#ifndef GL_INTERNALFORMAT_RED_TYPE
#  define GL_INTERNALFORMAT_RED_TYPE 0x8278
#endif
#ifndef GL_INTERNALFORMAT_GREEN_TYPE
#  define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#endif
#ifndef GL_INTERNALFORMAT_BLUE_TYPE
#  define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_TYPE
#  define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_TYPE
#  define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_TYPE
#  define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#endif
#ifndef GL_MAX_WIDTH
#  define GL_MAX_WIDTH 0x827E
#endif
#ifndef GL_MAX_HEIGHT
#  define GL_MAX_HEIGHT 0x827F
#endif
#ifndef GL_MAX_DEPTH
#  define GL_MAX_DEPTH 0x8280
#endif
#ifndef GL_MAX_LAYERS
#  define GL_MAX_LAYERS 0x8281
#endif
#ifndef GL_MAX_COMBINED_DIMENSIONS
#  define GL_MAX_COMBINED_DIMENSIONS 0x8282
#endif
#ifndef GL_COLOR_COMPONENTS
#  define GL_COLOR_COMPONENTS 0x8283
#endif
#ifndef GL_DEPTH_COMPONENTS
#  define GL_DEPTH_COMPONENTS 0x8284
#endif
#ifndef GL_STENCIL_COMPONENTS
#  define GL_STENCIL_COMPONENTS 0x8285
#endif
#ifndef GL_COLOR_RENDERABLE
#  define GL_COLOR_RENDERABLE 0x8286
#endif
#ifndef GL_DEPTH_RENDERABLE
#  define GL_DEPTH_RENDERABLE 0x8287
#endif
#ifndef GL_STENCIL_RENDERABLE
#  define GL_STENCIL_RENDERABLE 0x8288
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE
#  define GL_FRAMEBUFFER_RENDERABLE 0x8289
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE_LAYERED
#  define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#endif
#ifndef GL_FRAMEBUFFER_BLEND
#  define GL_FRAMEBUFFER_BLEND 0x828B
#endif
#ifndef GL_READ_PIXELS
#  define GL_READ_PIXELS 0x828C
#endif
#ifndef GL_READ_PIXELS_FORMAT
#  define GL_READ_PIXELS_FORMAT 0x828D
#endif
#ifndef GL_READ_PIXELS_TYPE
#  define GL_READ_PIXELS_TYPE 0x828E
#endif
#ifndef GL_TEXTURE_IMAGE_FORMAT
#  define GL_TEXTURE_IMAGE_FORMAT 0x828F
#endif
#ifndef GL_TEXTURE_IMAGE_TYPE
#  define GL_TEXTURE_IMAGE_TYPE 0x8290
#endif
#ifndef GL_GET_TEXTURE_IMAGE_FORMAT
#  define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#endif
#ifndef GL_GET_TEXTURE_IMAGE_TYPE
#  define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#endif
#ifndef GL_MIPMAP
#  define GL_MIPMAP 0x8293
#endif
#ifndef GL_MANUAL_GENERATE_MIPMAP
#  define GL_MANUAL_GENERATE_MIPMAP 0x8294
#endif
#ifndef GL_AUTO_GENERATE_MIPMAP
#  define GL_AUTO_GENERATE_MIPMAP 0x8295
#endif
#ifndef GL_COLOR_ENCODING
#  define GL_COLOR_ENCODING 0x8296
#endif
#ifndef GL_SRGB_READ
#  define GL_SRGB_READ 0x8297
#endif
#ifndef GL_SRGB_WRITE
#  define GL_SRGB_WRITE 0x8298
#endif
#ifndef GL_SRGB_DECODE_ARB
#  define GL_SRGB_DECODE_ARB 0x8299
#endif
#ifndef GL_FILTER
#  define GL_FILTER 0x829A
#endif
#ifndef GL_VERTEX_TEXTURE
#  define GL_VERTEX_TEXTURE 0x829B
#endif
#ifndef GL_TESS_CONTROL_TEXTURE
#  define GL_TESS_CONTROL_TEXTURE 0x829C
#endif
#ifndef GL_TESS_EVALUATION_TEXTURE
#  define GL_TESS_EVALUATION_TEXTURE 0x829D
#endif
#ifndef GL_GEOMETRY_TEXTURE
#  define GL_GEOMETRY_TEXTURE 0x829E
#endif
#ifndef GL_FRAGMENT_TEXTURE
#  define GL_FRAGMENT_TEXTURE 0x829F
#endif
#ifndef GL_COMPUTE_TEXTURE
#  define GL_COMPUTE_TEXTURE 0x82A0
#endif
#ifndef GL_TEXTURE_SHADOW
#  define GL_TEXTURE_SHADOW 0x82A1
#endif
#ifndef GL_TEXTURE_GATHER
#  define GL_TEXTURE_GATHER 0x82A2
#endif
#ifndef GL_TEXTURE_GATHER_SHADOW
#  define GL_TEXTURE_GATHER_SHADOW 0x82A3
#endif
#ifndef GL_SHADER_IMAGE_LOAD
#  define GL_SHADER_IMAGE_LOAD 0x82A4
#endif
#ifndef GL_SHADER_IMAGE_STORE
#  define GL_SHADER_IMAGE_STORE 0x82A5
#endif
#ifndef GL_SHADER_IMAGE_ATOMIC
#  define GL_SHADER_IMAGE_ATOMIC 0x82A6
#endif
#ifndef GL_IMAGE_TEXEL_SIZE
#  define GL_IMAGE_TEXEL_SIZE 0x82A7
#endif
#ifndef GL_IMAGE_COMPATIBILITY_CLASS
#  define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#endif
#ifndef GL_IMAGE_PIXEL_FORMAT
#  define GL_IMAGE_PIXEL_FORMAT 0x82A9
#endif
#ifndef GL_IMAGE_PIXEL_TYPE
#  define GL_IMAGE_PIXEL_TYPE 0x82AA
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_WIDTH
#  define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT
#  define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_SIZE
#  define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#endif
#ifndef GL_CLEAR_BUFFER
#  define GL_CLEAR_BUFFER 0x82B4
#endif
#ifndef GL_TEXTURE_VIEW
#  define GL_TEXTURE_VIEW 0x82B5
#endif
#ifndef GL_VIEW_COMPATIBILITY_CLASS
#  define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#endif
#ifndef GL_FULL_SUPPORT
#  define GL_FULL_SUPPORT 0x82B7
#endif
#ifndef GL_CAVEAT_SUPPORT
#  define GL_CAVEAT_SUPPORT 0x82B8
#endif
#ifndef GL_IMAGE_CLASS_4_X_32
#  define GL_IMAGE_CLASS_4_X_32 0x82B9
#endif
#ifndef GL_IMAGE_CLASS_2_X_32
#  define GL_IMAGE_CLASS_2_X_32 0x82BA
#endif
#ifndef GL_IMAGE_CLASS_1_X_32
#  define GL_IMAGE_CLASS_1_X_32 0x82BB
#endif
#ifndef GL_IMAGE_CLASS_4_X_16
#  define GL_IMAGE_CLASS_4_X_16 0x82BC
#endif
#ifndef GL_IMAGE_CLASS_2_X_16
#  define GL_IMAGE_CLASS_2_X_16 0x82BD
#endif
#ifndef GL_IMAGE_CLASS_1_X_16
#  define GL_IMAGE_CLASS_1_X_16 0x82BE
#endif
#ifndef GL_IMAGE_CLASS_4_X_8
#  define GL_IMAGE_CLASS_4_X_8 0x82BF
#endif
#ifndef GL_IMAGE_CLASS_2_X_8
#  define GL_IMAGE_CLASS_2_X_8 0x82C0
#endif
#ifndef GL_IMAGE_CLASS_1_X_8
#  define GL_IMAGE_CLASS_1_X_8 0x82C1
#endif
#ifndef GL_IMAGE_CLASS_11_11_10
#  define GL_IMAGE_CLASS_11_11_10 0x82C2
#endif
#ifndef GL_IMAGE_CLASS_10_10_10_2
#  define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#endif
#ifndef GL_VIEW_CLASS_128_BITS
#  define GL_VIEW_CLASS_128_BITS 0x82C4
#endif
#ifndef GL_VIEW_CLASS_96_BITS
#  define GL_VIEW_CLASS_96_BITS 0x82C5
#endif
#ifndef GL_VIEW_CLASS_64_BITS
#  define GL_VIEW_CLASS_64_BITS 0x82C6
#endif
#ifndef GL_VIEW_CLASS_48_BITS
#  define GL_VIEW_CLASS_48_BITS 0x82C7
#endif
#ifndef GL_VIEW_CLASS_32_BITS
#  define GL_VIEW_CLASS_32_BITS 0x82C8
#endif
#ifndef GL_VIEW_CLASS_24_BITS
#  define GL_VIEW_CLASS_24_BITS 0x82C9
#endif
#ifndef GL_VIEW_CLASS_16_BITS
#  define GL_VIEW_CLASS_16_BITS 0x82CA
#endif
#ifndef GL_VIEW_CLASS_8_BITS
#  define GL_VIEW_CLASS_8_BITS 0x82CB
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGB
#  define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT3_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT5_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#endif
#ifndef GL_VIEW_CLASS_RGTC1_RED
#  define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#endif
#ifndef GL_VIEW_CLASS_RGTC2_RG
#  define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#endif
#ifndef GL_VIEW_CLASS_BPTC_UNORM
#  define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#endif
#ifndef GL_VIEW_CLASS_BPTC_FLOAT
#  define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetInternalformati64v
typedef void (APIENTRYP PFNGLUXGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetInternalformati64v
extern PFNGLUXGETINTERNALFORMATI64VPROC glGetInternalformati64v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:24 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_internalformat_query2__
#define __GLUX_GL_ARB_internalformat_query2__

GLUX_NEW_PLUGIN(GL_ARB_internalformat_query2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INTERNALFORMAT_SUPPORTED
#  define GL_INTERNALFORMAT_SUPPORTED 0x826F
#endif
#ifndef GL_INTERNALFORMAT_PREFERRED
#  define GL_INTERNALFORMAT_PREFERRED 0x8270
#endif
#ifndef GL_INTERNALFORMAT_RED_SIZE
#  define GL_INTERNALFORMAT_RED_SIZE 0x8271
#endif
#ifndef GL_INTERNALFORMAT_GREEN_SIZE
#  define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#endif
#ifndef GL_INTERNALFORMAT_BLUE_SIZE
#  define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_SIZE
#  define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_SIZE
#  define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_SIZE
#  define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#endif
#ifndef GL_INTERNALFORMAT_SHARED_SIZE
#  define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#endif
#ifndef GL_INTERNALFORMAT_RED_TYPE
#  define GL_INTERNALFORMAT_RED_TYPE 0x8278
#endif
#ifndef GL_INTERNALFORMAT_GREEN_TYPE
#  define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#endif
#ifndef GL_INTERNALFORMAT_BLUE_TYPE
#  define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_TYPE
#  define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_TYPE
#  define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_TYPE
#  define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#endif
#ifndef GL_MAX_WIDTH
#  define GL_MAX_WIDTH 0x827E
#endif
#ifndef GL_MAX_HEIGHT
#  define GL_MAX_HEIGHT 0x827F
#endif
#ifndef GL_MAX_DEPTH
#  define GL_MAX_DEPTH 0x8280
#endif
#ifndef GL_MAX_LAYERS
#  define GL_MAX_LAYERS 0x8281
#endif
#ifndef GL_MAX_COMBINED_DIMENSIONS
#  define GL_MAX_COMBINED_DIMENSIONS 0x8282
#endif
#ifndef GL_COLOR_COMPONENTS
#  define GL_COLOR_COMPONENTS 0x8283
#endif
#ifndef GL_DEPTH_COMPONENTS
#  define GL_DEPTH_COMPONENTS 0x8284
#endif
#ifndef GL_STENCIL_COMPONENTS
#  define GL_STENCIL_COMPONENTS 0x8285
#endif
#ifndef GL_COLOR_RENDERABLE
#  define GL_COLOR_RENDERABLE 0x8286
#endif
#ifndef GL_DEPTH_RENDERABLE
#  define GL_DEPTH_RENDERABLE 0x8287
#endif
#ifndef GL_STENCIL_RENDERABLE
#  define GL_STENCIL_RENDERABLE 0x8288
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE
#  define GL_FRAMEBUFFER_RENDERABLE 0x8289
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE_LAYERED
#  define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#endif
#ifndef GL_FRAMEBUFFER_BLEND
#  define GL_FRAMEBUFFER_BLEND 0x828B
#endif
#ifndef GL_READ_PIXELS
#  define GL_READ_PIXELS 0x828C
#endif
#ifndef GL_READ_PIXELS_FORMAT
#  define GL_READ_PIXELS_FORMAT 0x828D
#endif
#ifndef GL_READ_PIXELS_TYPE
#  define GL_READ_PIXELS_TYPE 0x828E
#endif
#ifndef GL_TEXTURE_IMAGE_FORMAT
#  define GL_TEXTURE_IMAGE_FORMAT 0x828F
#endif
#ifndef GL_TEXTURE_IMAGE_TYPE
#  define GL_TEXTURE_IMAGE_TYPE 0x8290
#endif
#ifndef GL_GET_TEXTURE_IMAGE_FORMAT
#  define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#endif
#ifndef GL_GET_TEXTURE_IMAGE_TYPE
#  define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#endif
#ifndef GL_MIPMAP
#  define GL_MIPMAP 0x8293
#endif
#ifndef GL_MANUAL_GENERATE_MIPMAP
#  define GL_MANUAL_GENERATE_MIPMAP 0x8294
#endif
#ifndef GL_AUTO_GENERATE_MIPMAP
#  define GL_AUTO_GENERATE_MIPMAP 0x8295
#endif
#ifndef GL_COLOR_ENCODING
#  define GL_COLOR_ENCODING 0x8296
#endif
#ifndef GL_SRGB_READ
#  define GL_SRGB_READ 0x8297
#endif
#ifndef GL_SRGB_WRITE
#  define GL_SRGB_WRITE 0x8298
#endif
#ifndef GL_SRGB_DECODE_ARB
#  define GL_SRGB_DECODE_ARB 0x8299
#endif
#ifndef GL_FILTER
#  define GL_FILTER 0x829A
#endif
#ifndef GL_VERTEX_TEXTURE
#  define GL_VERTEX_TEXTURE 0x829B
#endif
#ifndef GL_TESS_CONTROL_TEXTURE
#  define GL_TESS_CONTROL_TEXTURE 0x829C
#endif
#ifndef GL_TESS_EVALUATION_TEXTURE
#  define GL_TESS_EVALUATION_TEXTURE 0x829D
#endif
#ifndef GL_GEOMETRY_TEXTURE
#  define GL_GEOMETRY_TEXTURE 0x829E
#endif
#ifndef GL_FRAGMENT_TEXTURE
#  define GL_FRAGMENT_TEXTURE 0x829F
#endif
#ifndef GL_COMPUTE_TEXTURE
#  define GL_COMPUTE_TEXTURE 0x82A0
#endif
#ifndef GL_TEXTURE_SHADOW
#  define GL_TEXTURE_SHADOW 0x82A1
#endif
#ifndef GL_TEXTURE_GATHER
#  define GL_TEXTURE_GATHER 0x82A2
#endif
#ifndef GL_TEXTURE_GATHER_SHADOW
#  define GL_TEXTURE_GATHER_SHADOW 0x82A3
#endif
#ifndef GL_SHADER_IMAGE_LOAD
#  define GL_SHADER_IMAGE_LOAD 0x82A4
#endif
#ifndef GL_SHADER_IMAGE_STORE
#  define GL_SHADER_IMAGE_STORE 0x82A5
#endif
#ifndef GL_SHADER_IMAGE_ATOMIC
#  define GL_SHADER_IMAGE_ATOMIC 0x82A6
#endif
#ifndef GL_IMAGE_TEXEL_SIZE
#  define GL_IMAGE_TEXEL_SIZE 0x82A7
#endif
#ifndef GL_IMAGE_COMPATIBILITY_CLASS
#  define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#endif
#ifndef GL_IMAGE_PIXEL_FORMAT
#  define GL_IMAGE_PIXEL_FORMAT 0x82A9
#endif
#ifndef GL_IMAGE_PIXEL_TYPE
#  define GL_IMAGE_PIXEL_TYPE 0x82AA
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_WIDTH
#  define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT
#  define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_SIZE
#  define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#endif
#ifndef GL_CLEAR_BUFFER
#  define GL_CLEAR_BUFFER 0x82B4
#endif
#ifndef GL_TEXTURE_VIEW
#  define GL_TEXTURE_VIEW 0x82B5
#endif
#ifndef GL_VIEW_COMPATIBILITY_CLASS
#  define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#endif
#ifndef GL_FULL_SUPPORT
#  define GL_FULL_SUPPORT 0x82B7
#endif
#ifndef GL_CAVEAT_SUPPORT
#  define GL_CAVEAT_SUPPORT 0x82B8
#endif
#ifndef GL_IMAGE_CLASS_4_X_32
#  define GL_IMAGE_CLASS_4_X_32 0x82B9
#endif
#ifndef GL_IMAGE_CLASS_2_X_32
#  define GL_IMAGE_CLASS_2_X_32 0x82BA
#endif
#ifndef GL_IMAGE_CLASS_1_X_32
#  define GL_IMAGE_CLASS_1_X_32 0x82BB
#endif
#ifndef GL_IMAGE_CLASS_4_X_16
#  define GL_IMAGE_CLASS_4_X_16 0x82BC
#endif
#ifndef GL_IMAGE_CLASS_2_X_16
#  define GL_IMAGE_CLASS_2_X_16 0x82BD
#endif
#ifndef GL_IMAGE_CLASS_1_X_16
#  define GL_IMAGE_CLASS_1_X_16 0x82BE
#endif
#ifndef GL_IMAGE_CLASS_4_X_8
#  define GL_IMAGE_CLASS_4_X_8 0x82BF
#endif
#ifndef GL_IMAGE_CLASS_2_X_8
#  define GL_IMAGE_CLASS_2_X_8 0x82C0
#endif
#ifndef GL_IMAGE_CLASS_1_X_8
#  define GL_IMAGE_CLASS_1_X_8 0x82C1
#endif
#ifndef GL_IMAGE_CLASS_11_11_10
#  define GL_IMAGE_CLASS_11_11_10 0x82C2
#endif
#ifndef GL_IMAGE_CLASS_10_10_10_2
#  define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#endif
#ifndef GL_VIEW_CLASS_128_BITS
#  define GL_VIEW_CLASS_128_BITS 0x82C4
#endif
#ifndef GL_VIEW_CLASS_96_BITS
#  define GL_VIEW_CLASS_96_BITS 0x82C5
#endif
#ifndef GL_VIEW_CLASS_64_BITS
#  define GL_VIEW_CLASS_64_BITS 0x82C6
#endif
#ifndef GL_VIEW_CLASS_48_BITS
#  define GL_VIEW_CLASS_48_BITS 0x82C7
#endif
#ifndef GL_VIEW_CLASS_32_BITS
#  define GL_VIEW_CLASS_32_BITS 0x82C8
#endif
#ifndef GL_VIEW_CLASS_24_BITS
#  define GL_VIEW_CLASS_24_BITS 0x82C9
#endif
#ifndef GL_VIEW_CLASS_16_BITS
#  define GL_VIEW_CLASS_16_BITS 0x82CA
#endif
#ifndef GL_VIEW_CLASS_8_BITS
#  define GL_VIEW_CLASS_8_BITS 0x82CB
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGB
#  define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT3_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT5_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#endif
#ifndef GL_VIEW_CLASS_RGTC1_RED
#  define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#endif
#ifndef GL_VIEW_CLASS_RGTC2_RG
#  define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#endif
#ifndef GL_VIEW_CLASS_BPTC_UNORM
#  define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#endif
#ifndef GL_VIEW_CLASS_BPTC_FLOAT
#  define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetInternalformati64v
typedef void (APIENTRYP PFNGLUXGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetInternalformati64v
extern PFNGLUXGETINTERNALFORMATI64VPROC glGetInternalformati64v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_internalformat_query2__
#define __GLUX_GL_ARB_internalformat_query2__

GLUX_NEW_PLUGIN(GL_ARB_internalformat_query2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INTERNALFORMAT_SUPPORTED
#  define GL_INTERNALFORMAT_SUPPORTED 0x826F
#endif
#ifndef GL_INTERNALFORMAT_PREFERRED
#  define GL_INTERNALFORMAT_PREFERRED 0x8270
#endif
#ifndef GL_INTERNALFORMAT_RED_SIZE
#  define GL_INTERNALFORMAT_RED_SIZE 0x8271
#endif
#ifndef GL_INTERNALFORMAT_GREEN_SIZE
#  define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#endif
#ifndef GL_INTERNALFORMAT_BLUE_SIZE
#  define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_SIZE
#  define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_SIZE
#  define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_SIZE
#  define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#endif
#ifndef GL_INTERNALFORMAT_SHARED_SIZE
#  define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#endif
#ifndef GL_INTERNALFORMAT_RED_TYPE
#  define GL_INTERNALFORMAT_RED_TYPE 0x8278
#endif
#ifndef GL_INTERNALFORMAT_GREEN_TYPE
#  define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#endif
#ifndef GL_INTERNALFORMAT_BLUE_TYPE
#  define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_TYPE
#  define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_TYPE
#  define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_TYPE
#  define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#endif
#ifndef GL_MAX_WIDTH
#  define GL_MAX_WIDTH 0x827E
#endif
#ifndef GL_MAX_HEIGHT
#  define GL_MAX_HEIGHT 0x827F
#endif
#ifndef GL_MAX_DEPTH
#  define GL_MAX_DEPTH 0x8280
#endif
#ifndef GL_MAX_LAYERS
#  define GL_MAX_LAYERS 0x8281
#endif
#ifndef GL_MAX_COMBINED_DIMENSIONS
#  define GL_MAX_COMBINED_DIMENSIONS 0x8282
#endif
#ifndef GL_COLOR_COMPONENTS
#  define GL_COLOR_COMPONENTS 0x8283
#endif
#ifndef GL_DEPTH_COMPONENTS
#  define GL_DEPTH_COMPONENTS 0x8284
#endif
#ifndef GL_STENCIL_COMPONENTS
#  define GL_STENCIL_COMPONENTS 0x8285
#endif
#ifndef GL_COLOR_RENDERABLE
#  define GL_COLOR_RENDERABLE 0x8286
#endif
#ifndef GL_DEPTH_RENDERABLE
#  define GL_DEPTH_RENDERABLE 0x8287
#endif
#ifndef GL_STENCIL_RENDERABLE
#  define GL_STENCIL_RENDERABLE 0x8288
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE
#  define GL_FRAMEBUFFER_RENDERABLE 0x8289
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE_LAYERED
#  define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#endif
#ifndef GL_FRAMEBUFFER_BLEND
#  define GL_FRAMEBUFFER_BLEND 0x828B
#endif
#ifndef GL_READ_PIXELS
#  define GL_READ_PIXELS 0x828C
#endif
#ifndef GL_READ_PIXELS_FORMAT
#  define GL_READ_PIXELS_FORMAT 0x828D
#endif
#ifndef GL_READ_PIXELS_TYPE
#  define GL_READ_PIXELS_TYPE 0x828E
#endif
#ifndef GL_TEXTURE_IMAGE_FORMAT
#  define GL_TEXTURE_IMAGE_FORMAT 0x828F
#endif
#ifndef GL_TEXTURE_IMAGE_TYPE
#  define GL_TEXTURE_IMAGE_TYPE 0x8290
#endif
#ifndef GL_GET_TEXTURE_IMAGE_FORMAT
#  define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#endif
#ifndef GL_GET_TEXTURE_IMAGE_TYPE
#  define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#endif
#ifndef GL_MIPMAP
#  define GL_MIPMAP 0x8293
#endif
#ifndef GL_MANUAL_GENERATE_MIPMAP
#  define GL_MANUAL_GENERATE_MIPMAP 0x8294
#endif
#ifndef GL_AUTO_GENERATE_MIPMAP
#  define GL_AUTO_GENERATE_MIPMAP 0x8295
#endif
#ifndef GL_COLOR_ENCODING
#  define GL_COLOR_ENCODING 0x8296
#endif
#ifndef GL_SRGB_READ
#  define GL_SRGB_READ 0x8297
#endif
#ifndef GL_SRGB_WRITE
#  define GL_SRGB_WRITE 0x8298
#endif
#ifndef GL_SRGB_DECODE_ARB
#  define GL_SRGB_DECODE_ARB 0x8299
#endif
#ifndef GL_FILTER
#  define GL_FILTER 0x829A
#endif
#ifndef GL_VERTEX_TEXTURE
#  define GL_VERTEX_TEXTURE 0x829B
#endif
#ifndef GL_TESS_CONTROL_TEXTURE
#  define GL_TESS_CONTROL_TEXTURE 0x829C
#endif
#ifndef GL_TESS_EVALUATION_TEXTURE
#  define GL_TESS_EVALUATION_TEXTURE 0x829D
#endif
#ifndef GL_GEOMETRY_TEXTURE
#  define GL_GEOMETRY_TEXTURE 0x829E
#endif
#ifndef GL_FRAGMENT_TEXTURE
#  define GL_FRAGMENT_TEXTURE 0x829F
#endif
#ifndef GL_COMPUTE_TEXTURE
#  define GL_COMPUTE_TEXTURE 0x82A0
#endif
#ifndef GL_TEXTURE_SHADOW
#  define GL_TEXTURE_SHADOW 0x82A1
#endif
#ifndef GL_TEXTURE_GATHER
#  define GL_TEXTURE_GATHER 0x82A2
#endif
#ifndef GL_TEXTURE_GATHER_SHADOW
#  define GL_TEXTURE_GATHER_SHADOW 0x82A3
#endif
#ifndef GL_SHADER_IMAGE_LOAD
#  define GL_SHADER_IMAGE_LOAD 0x82A4
#endif
#ifndef GL_SHADER_IMAGE_STORE
#  define GL_SHADER_IMAGE_STORE 0x82A5
#endif
#ifndef GL_SHADER_IMAGE_ATOMIC
#  define GL_SHADER_IMAGE_ATOMIC 0x82A6
#endif
#ifndef GL_IMAGE_TEXEL_SIZE
#  define GL_IMAGE_TEXEL_SIZE 0x82A7
#endif
#ifndef GL_IMAGE_COMPATIBILITY_CLASS
#  define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#endif
#ifndef GL_IMAGE_PIXEL_FORMAT
#  define GL_IMAGE_PIXEL_FORMAT 0x82A9
#endif
#ifndef GL_IMAGE_PIXEL_TYPE
#  define GL_IMAGE_PIXEL_TYPE 0x82AA
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_WIDTH
#  define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT
#  define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_SIZE
#  define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#endif
#ifndef GL_CLEAR_BUFFER
#  define GL_CLEAR_BUFFER 0x82B4
#endif
#ifndef GL_TEXTURE_VIEW
#  define GL_TEXTURE_VIEW 0x82B5
#endif
#ifndef GL_VIEW_COMPATIBILITY_CLASS
#  define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#endif
#ifndef GL_FULL_SUPPORT
#  define GL_FULL_SUPPORT 0x82B7
#endif
#ifndef GL_CAVEAT_SUPPORT
#  define GL_CAVEAT_SUPPORT 0x82B8
#endif
#ifndef GL_IMAGE_CLASS_4_X_32
#  define GL_IMAGE_CLASS_4_X_32 0x82B9
#endif
#ifndef GL_IMAGE_CLASS_2_X_32
#  define GL_IMAGE_CLASS_2_X_32 0x82BA
#endif
#ifndef GL_IMAGE_CLASS_1_X_32
#  define GL_IMAGE_CLASS_1_X_32 0x82BB
#endif
#ifndef GL_IMAGE_CLASS_4_X_16
#  define GL_IMAGE_CLASS_4_X_16 0x82BC
#endif
#ifndef GL_IMAGE_CLASS_2_X_16
#  define GL_IMAGE_CLASS_2_X_16 0x82BD
#endif
#ifndef GL_IMAGE_CLASS_1_X_16
#  define GL_IMAGE_CLASS_1_X_16 0x82BE
#endif
#ifndef GL_IMAGE_CLASS_4_X_8
#  define GL_IMAGE_CLASS_4_X_8 0x82BF
#endif
#ifndef GL_IMAGE_CLASS_2_X_8
#  define GL_IMAGE_CLASS_2_X_8 0x82C0
#endif
#ifndef GL_IMAGE_CLASS_1_X_8
#  define GL_IMAGE_CLASS_1_X_8 0x82C1
#endif
#ifndef GL_IMAGE_CLASS_11_11_10
#  define GL_IMAGE_CLASS_11_11_10 0x82C2
#endif
#ifndef GL_IMAGE_CLASS_10_10_10_2
#  define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#endif
#ifndef GL_VIEW_CLASS_128_BITS
#  define GL_VIEW_CLASS_128_BITS 0x82C4
#endif
#ifndef GL_VIEW_CLASS_96_BITS
#  define GL_VIEW_CLASS_96_BITS 0x82C5
#endif
#ifndef GL_VIEW_CLASS_64_BITS
#  define GL_VIEW_CLASS_64_BITS 0x82C6
#endif
#ifndef GL_VIEW_CLASS_48_BITS
#  define GL_VIEW_CLASS_48_BITS 0x82C7
#endif
#ifndef GL_VIEW_CLASS_32_BITS
#  define GL_VIEW_CLASS_32_BITS 0x82C8
#endif
#ifndef GL_VIEW_CLASS_24_BITS
#  define GL_VIEW_CLASS_24_BITS 0x82C9
#endif
#ifndef GL_VIEW_CLASS_16_BITS
#  define GL_VIEW_CLASS_16_BITS 0x82CA
#endif
#ifndef GL_VIEW_CLASS_8_BITS
#  define GL_VIEW_CLASS_8_BITS 0x82CB
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGB
#  define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT3_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT5_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#endif
#ifndef GL_VIEW_CLASS_RGTC1_RED
#  define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#endif
#ifndef GL_VIEW_CLASS_RGTC2_RG
#  define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#endif
#ifndef GL_VIEW_CLASS_BPTC_UNORM
#  define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#endif
#ifndef GL_VIEW_CLASS_BPTC_FLOAT
#  define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetInternalformati64v
typedef void (APIENTRYP PFNGLUXGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetInternalformati64v
extern PFNGLUXGETINTERNALFORMATI64VPROC glGetInternalformati64v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:41:58 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_internalformat_query2__
#define __GLUX_GL_ARB_internalformat_query2__

GLUX_NEW_PLUGIN(GL_ARB_internalformat_query2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INTERNALFORMAT_SUPPORTED
#  define GL_INTERNALFORMAT_SUPPORTED 0x826F
#endif
#ifndef GL_INTERNALFORMAT_PREFERRED
#  define GL_INTERNALFORMAT_PREFERRED 0x8270
#endif
#ifndef GL_INTERNALFORMAT_RED_SIZE
#  define GL_INTERNALFORMAT_RED_SIZE 0x8271
#endif
#ifndef GL_INTERNALFORMAT_GREEN_SIZE
#  define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#endif
#ifndef GL_INTERNALFORMAT_BLUE_SIZE
#  define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_SIZE
#  define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_SIZE
#  define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_SIZE
#  define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#endif
#ifndef GL_INTERNALFORMAT_SHARED_SIZE
#  define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#endif
#ifndef GL_INTERNALFORMAT_RED_TYPE
#  define GL_INTERNALFORMAT_RED_TYPE 0x8278
#endif
#ifndef GL_INTERNALFORMAT_GREEN_TYPE
#  define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#endif
#ifndef GL_INTERNALFORMAT_BLUE_TYPE
#  define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_TYPE
#  define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_TYPE
#  define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_TYPE
#  define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#endif
#ifndef GL_MAX_WIDTH
#  define GL_MAX_WIDTH 0x827E
#endif
#ifndef GL_MAX_HEIGHT
#  define GL_MAX_HEIGHT 0x827F
#endif
#ifndef GL_MAX_DEPTH
#  define GL_MAX_DEPTH 0x8280
#endif
#ifndef GL_MAX_LAYERS
#  define GL_MAX_LAYERS 0x8281
#endif
#ifndef GL_MAX_COMBINED_DIMENSIONS
#  define GL_MAX_COMBINED_DIMENSIONS 0x8282
#endif
#ifndef GL_COLOR_COMPONENTS
#  define GL_COLOR_COMPONENTS 0x8283
#endif
#ifndef GL_DEPTH_COMPONENTS
#  define GL_DEPTH_COMPONENTS 0x8284
#endif
#ifndef GL_STENCIL_COMPONENTS
#  define GL_STENCIL_COMPONENTS 0x8285
#endif
#ifndef GL_COLOR_RENDERABLE
#  define GL_COLOR_RENDERABLE 0x8286
#endif
#ifndef GL_DEPTH_RENDERABLE
#  define GL_DEPTH_RENDERABLE 0x8287
#endif
#ifndef GL_STENCIL_RENDERABLE
#  define GL_STENCIL_RENDERABLE 0x8288
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE
#  define GL_FRAMEBUFFER_RENDERABLE 0x8289
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE_LAYERED
#  define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#endif
#ifndef GL_FRAMEBUFFER_BLEND
#  define GL_FRAMEBUFFER_BLEND 0x828B
#endif
#ifndef GL_READ_PIXELS
#  define GL_READ_PIXELS 0x828C
#endif
#ifndef GL_READ_PIXELS_FORMAT
#  define GL_READ_PIXELS_FORMAT 0x828D
#endif
#ifndef GL_READ_PIXELS_TYPE
#  define GL_READ_PIXELS_TYPE 0x828E
#endif
#ifndef GL_TEXTURE_IMAGE_FORMAT
#  define GL_TEXTURE_IMAGE_FORMAT 0x828F
#endif
#ifndef GL_TEXTURE_IMAGE_TYPE
#  define GL_TEXTURE_IMAGE_TYPE 0x8290
#endif
#ifndef GL_GET_TEXTURE_IMAGE_FORMAT
#  define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#endif
#ifndef GL_GET_TEXTURE_IMAGE_TYPE
#  define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#endif
#ifndef GL_MIPMAP
#  define GL_MIPMAP 0x8293
#endif
#ifndef GL_MANUAL_GENERATE_MIPMAP
#  define GL_MANUAL_GENERATE_MIPMAP 0x8294
#endif
#ifndef GL_AUTO_GENERATE_MIPMAP
#  define GL_AUTO_GENERATE_MIPMAP 0x8295
#endif
#ifndef GL_COLOR_ENCODING
#  define GL_COLOR_ENCODING 0x8296
#endif
#ifndef GL_SRGB_READ
#  define GL_SRGB_READ 0x8297
#endif
#ifndef GL_SRGB_WRITE
#  define GL_SRGB_WRITE 0x8298
#endif
#ifndef GL_SRGB_DECODE_ARB
#  define GL_SRGB_DECODE_ARB 0x8299
#endif
#ifndef GL_FILTER
#  define GL_FILTER 0x829A
#endif
#ifndef GL_VERTEX_TEXTURE
#  define GL_VERTEX_TEXTURE 0x829B
#endif
#ifndef GL_TESS_CONTROL_TEXTURE
#  define GL_TESS_CONTROL_TEXTURE 0x829C
#endif
#ifndef GL_TESS_EVALUATION_TEXTURE
#  define GL_TESS_EVALUATION_TEXTURE 0x829D
#endif
#ifndef GL_GEOMETRY_TEXTURE
#  define GL_GEOMETRY_TEXTURE 0x829E
#endif
#ifndef GL_FRAGMENT_TEXTURE
#  define GL_FRAGMENT_TEXTURE 0x829F
#endif
#ifndef GL_COMPUTE_TEXTURE
#  define GL_COMPUTE_TEXTURE 0x82A0
#endif
#ifndef GL_TEXTURE_SHADOW
#  define GL_TEXTURE_SHADOW 0x82A1
#endif
#ifndef GL_TEXTURE_GATHER
#  define GL_TEXTURE_GATHER 0x82A2
#endif
#ifndef GL_TEXTURE_GATHER_SHADOW
#  define GL_TEXTURE_GATHER_SHADOW 0x82A3
#endif
#ifndef GL_SHADER_IMAGE_LOAD
#  define GL_SHADER_IMAGE_LOAD 0x82A4
#endif
#ifndef GL_SHADER_IMAGE_STORE
#  define GL_SHADER_IMAGE_STORE 0x82A5
#endif
#ifndef GL_SHADER_IMAGE_ATOMIC
#  define GL_SHADER_IMAGE_ATOMIC 0x82A6
#endif
#ifndef GL_IMAGE_TEXEL_SIZE
#  define GL_IMAGE_TEXEL_SIZE 0x82A7
#endif
#ifndef GL_IMAGE_COMPATIBILITY_CLASS
#  define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#endif
#ifndef GL_IMAGE_PIXEL_FORMAT
#  define GL_IMAGE_PIXEL_FORMAT 0x82A9
#endif
#ifndef GL_IMAGE_PIXEL_TYPE
#  define GL_IMAGE_PIXEL_TYPE 0x82AA
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_WIDTH
#  define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT
#  define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_SIZE
#  define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#endif
#ifndef GL_CLEAR_BUFFER
#  define GL_CLEAR_BUFFER 0x82B4
#endif
#ifndef GL_TEXTURE_VIEW
#  define GL_TEXTURE_VIEW 0x82B5
#endif
#ifndef GL_VIEW_COMPATIBILITY_CLASS
#  define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#endif
#ifndef GL_FULL_SUPPORT
#  define GL_FULL_SUPPORT 0x82B7
#endif
#ifndef GL_CAVEAT_SUPPORT
#  define GL_CAVEAT_SUPPORT 0x82B8
#endif
#ifndef GL_IMAGE_CLASS_4_X_32
#  define GL_IMAGE_CLASS_4_X_32 0x82B9
#endif
#ifndef GL_IMAGE_CLASS_2_X_32
#  define GL_IMAGE_CLASS_2_X_32 0x82BA
#endif
#ifndef GL_IMAGE_CLASS_1_X_32
#  define GL_IMAGE_CLASS_1_X_32 0x82BB
#endif
#ifndef GL_IMAGE_CLASS_4_X_16
#  define GL_IMAGE_CLASS_4_X_16 0x82BC
#endif
#ifndef GL_IMAGE_CLASS_2_X_16
#  define GL_IMAGE_CLASS_2_X_16 0x82BD
#endif
#ifndef GL_IMAGE_CLASS_1_X_16
#  define GL_IMAGE_CLASS_1_X_16 0x82BE
#endif
#ifndef GL_IMAGE_CLASS_4_X_8
#  define GL_IMAGE_CLASS_4_X_8 0x82BF
#endif
#ifndef GL_IMAGE_CLASS_2_X_8
#  define GL_IMAGE_CLASS_2_X_8 0x82C0
#endif
#ifndef GL_IMAGE_CLASS_1_X_8
#  define GL_IMAGE_CLASS_1_X_8 0x82C1
#endif
#ifndef GL_IMAGE_CLASS_11_11_10
#  define GL_IMAGE_CLASS_11_11_10 0x82C2
#endif
#ifndef GL_IMAGE_CLASS_10_10_10_2
#  define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#endif
#ifndef GL_VIEW_CLASS_128_BITS
#  define GL_VIEW_CLASS_128_BITS 0x82C4
#endif
#ifndef GL_VIEW_CLASS_96_BITS
#  define GL_VIEW_CLASS_96_BITS 0x82C5
#endif
#ifndef GL_VIEW_CLASS_64_BITS
#  define GL_VIEW_CLASS_64_BITS 0x82C6
#endif
#ifndef GL_VIEW_CLASS_48_BITS
#  define GL_VIEW_CLASS_48_BITS 0x82C7
#endif
#ifndef GL_VIEW_CLASS_32_BITS
#  define GL_VIEW_CLASS_32_BITS 0x82C8
#endif
#ifndef GL_VIEW_CLASS_24_BITS
#  define GL_VIEW_CLASS_24_BITS 0x82C9
#endif
#ifndef GL_VIEW_CLASS_16_BITS
#  define GL_VIEW_CLASS_16_BITS 0x82CA
#endif
#ifndef GL_VIEW_CLASS_8_BITS
#  define GL_VIEW_CLASS_8_BITS 0x82CB
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGB
#  define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT3_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT5_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#endif
#ifndef GL_VIEW_CLASS_RGTC1_RED
#  define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#endif
#ifndef GL_VIEW_CLASS_RGTC2_RG
#  define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#endif
#ifndef GL_VIEW_CLASS_BPTC_UNORM
#  define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#endif
#ifndef GL_VIEW_CLASS_BPTC_FLOAT
#  define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetInternalformati64v
typedef void (APIENTRYP PFNGLUXGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetInternalformati64v
extern PFNGLUXGETINTERNALFORMATI64VPROC glGetInternalformati64v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:39 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_internalformat_query2__
#define __GLUX_GL_ARB_internalformat_query2__

GLUX_NEW_PLUGIN(GL_ARB_internalformat_query2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INTERNALFORMAT_SUPPORTED
#  define GL_INTERNALFORMAT_SUPPORTED 0x826F
#endif
#ifndef GL_INTERNALFORMAT_PREFERRED
#  define GL_INTERNALFORMAT_PREFERRED 0x8270
#endif
#ifndef GL_INTERNALFORMAT_RED_SIZE
#  define GL_INTERNALFORMAT_RED_SIZE 0x8271
#endif
#ifndef GL_INTERNALFORMAT_GREEN_SIZE
#  define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#endif
#ifndef GL_INTERNALFORMAT_BLUE_SIZE
#  define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_SIZE
#  define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_SIZE
#  define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_SIZE
#  define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#endif
#ifndef GL_INTERNALFORMAT_SHARED_SIZE
#  define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#endif
#ifndef GL_INTERNALFORMAT_RED_TYPE
#  define GL_INTERNALFORMAT_RED_TYPE 0x8278
#endif
#ifndef GL_INTERNALFORMAT_GREEN_TYPE
#  define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#endif
#ifndef GL_INTERNALFORMAT_BLUE_TYPE
#  define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_TYPE
#  define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_TYPE
#  define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_TYPE
#  define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#endif
#ifndef GL_MAX_WIDTH
#  define GL_MAX_WIDTH 0x827E
#endif
#ifndef GL_MAX_HEIGHT
#  define GL_MAX_HEIGHT 0x827F
#endif
#ifndef GL_MAX_DEPTH
#  define GL_MAX_DEPTH 0x8280
#endif
#ifndef GL_MAX_LAYERS
#  define GL_MAX_LAYERS 0x8281
#endif
#ifndef GL_MAX_COMBINED_DIMENSIONS
#  define GL_MAX_COMBINED_DIMENSIONS 0x8282
#endif
#ifndef GL_COLOR_COMPONENTS
#  define GL_COLOR_COMPONENTS 0x8283
#endif
#ifndef GL_DEPTH_COMPONENTS
#  define GL_DEPTH_COMPONENTS 0x8284
#endif
#ifndef GL_STENCIL_COMPONENTS
#  define GL_STENCIL_COMPONENTS 0x8285
#endif
#ifndef GL_COLOR_RENDERABLE
#  define GL_COLOR_RENDERABLE 0x8286
#endif
#ifndef GL_DEPTH_RENDERABLE
#  define GL_DEPTH_RENDERABLE 0x8287
#endif
#ifndef GL_STENCIL_RENDERABLE
#  define GL_STENCIL_RENDERABLE 0x8288
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE
#  define GL_FRAMEBUFFER_RENDERABLE 0x8289
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE_LAYERED
#  define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#endif
#ifndef GL_FRAMEBUFFER_BLEND
#  define GL_FRAMEBUFFER_BLEND 0x828B
#endif
#ifndef GL_READ_PIXELS
#  define GL_READ_PIXELS 0x828C
#endif
#ifndef GL_READ_PIXELS_FORMAT
#  define GL_READ_PIXELS_FORMAT 0x828D
#endif
#ifndef GL_READ_PIXELS_TYPE
#  define GL_READ_PIXELS_TYPE 0x828E
#endif
#ifndef GL_TEXTURE_IMAGE_FORMAT
#  define GL_TEXTURE_IMAGE_FORMAT 0x828F
#endif
#ifndef GL_TEXTURE_IMAGE_TYPE
#  define GL_TEXTURE_IMAGE_TYPE 0x8290
#endif
#ifndef GL_GET_TEXTURE_IMAGE_FORMAT
#  define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#endif
#ifndef GL_GET_TEXTURE_IMAGE_TYPE
#  define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#endif
#ifndef GL_MIPMAP
#  define GL_MIPMAP 0x8293
#endif
#ifndef GL_MANUAL_GENERATE_MIPMAP
#  define GL_MANUAL_GENERATE_MIPMAP 0x8294
#endif
#ifndef GL_AUTO_GENERATE_MIPMAP
#  define GL_AUTO_GENERATE_MIPMAP 0x8295
#endif
#ifndef GL_COLOR_ENCODING
#  define GL_COLOR_ENCODING 0x8296
#endif
#ifndef GL_SRGB_READ
#  define GL_SRGB_READ 0x8297
#endif
#ifndef GL_SRGB_WRITE
#  define GL_SRGB_WRITE 0x8298
#endif
#ifndef GL_SRGB_DECODE_ARB
#  define GL_SRGB_DECODE_ARB 0x8299
#endif
#ifndef GL_FILTER
#  define GL_FILTER 0x829A
#endif
#ifndef GL_VERTEX_TEXTURE
#  define GL_VERTEX_TEXTURE 0x829B
#endif
#ifndef GL_TESS_CONTROL_TEXTURE
#  define GL_TESS_CONTROL_TEXTURE 0x829C
#endif
#ifndef GL_TESS_EVALUATION_TEXTURE
#  define GL_TESS_EVALUATION_TEXTURE 0x829D
#endif
#ifndef GL_GEOMETRY_TEXTURE
#  define GL_GEOMETRY_TEXTURE 0x829E
#endif
#ifndef GL_FRAGMENT_TEXTURE
#  define GL_FRAGMENT_TEXTURE 0x829F
#endif
#ifndef GL_COMPUTE_TEXTURE
#  define GL_COMPUTE_TEXTURE 0x82A0
#endif
#ifndef GL_TEXTURE_SHADOW
#  define GL_TEXTURE_SHADOW 0x82A1
#endif
#ifndef GL_TEXTURE_GATHER
#  define GL_TEXTURE_GATHER 0x82A2
#endif
#ifndef GL_TEXTURE_GATHER_SHADOW
#  define GL_TEXTURE_GATHER_SHADOW 0x82A3
#endif
#ifndef GL_SHADER_IMAGE_LOAD
#  define GL_SHADER_IMAGE_LOAD 0x82A4
#endif
#ifndef GL_SHADER_IMAGE_STORE
#  define GL_SHADER_IMAGE_STORE 0x82A5
#endif
#ifndef GL_SHADER_IMAGE_ATOMIC
#  define GL_SHADER_IMAGE_ATOMIC 0x82A6
#endif
#ifndef GL_IMAGE_TEXEL_SIZE
#  define GL_IMAGE_TEXEL_SIZE 0x82A7
#endif
#ifndef GL_IMAGE_COMPATIBILITY_CLASS
#  define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#endif
#ifndef GL_IMAGE_PIXEL_FORMAT
#  define GL_IMAGE_PIXEL_FORMAT 0x82A9
#endif
#ifndef GL_IMAGE_PIXEL_TYPE
#  define GL_IMAGE_PIXEL_TYPE 0x82AA
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_WIDTH
#  define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT
#  define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_SIZE
#  define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#endif
#ifndef GL_CLEAR_BUFFER
#  define GL_CLEAR_BUFFER 0x82B4
#endif
#ifndef GL_TEXTURE_VIEW
#  define GL_TEXTURE_VIEW 0x82B5
#endif
#ifndef GL_VIEW_COMPATIBILITY_CLASS
#  define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#endif
#ifndef GL_FULL_SUPPORT
#  define GL_FULL_SUPPORT 0x82B7
#endif
#ifndef GL_CAVEAT_SUPPORT
#  define GL_CAVEAT_SUPPORT 0x82B8
#endif
#ifndef GL_IMAGE_CLASS_4_X_32
#  define GL_IMAGE_CLASS_4_X_32 0x82B9
#endif
#ifndef GL_IMAGE_CLASS_2_X_32
#  define GL_IMAGE_CLASS_2_X_32 0x82BA
#endif
#ifndef GL_IMAGE_CLASS_1_X_32
#  define GL_IMAGE_CLASS_1_X_32 0x82BB
#endif
#ifndef GL_IMAGE_CLASS_4_X_16
#  define GL_IMAGE_CLASS_4_X_16 0x82BC
#endif
#ifndef GL_IMAGE_CLASS_2_X_16
#  define GL_IMAGE_CLASS_2_X_16 0x82BD
#endif
#ifndef GL_IMAGE_CLASS_1_X_16
#  define GL_IMAGE_CLASS_1_X_16 0x82BE
#endif
#ifndef GL_IMAGE_CLASS_4_X_8
#  define GL_IMAGE_CLASS_4_X_8 0x82BF
#endif
#ifndef GL_IMAGE_CLASS_2_X_8
#  define GL_IMAGE_CLASS_2_X_8 0x82C0
#endif
#ifndef GL_IMAGE_CLASS_1_X_8
#  define GL_IMAGE_CLASS_1_X_8 0x82C1
#endif
#ifndef GL_IMAGE_CLASS_11_11_10
#  define GL_IMAGE_CLASS_11_11_10 0x82C2
#endif
#ifndef GL_IMAGE_CLASS_10_10_10_2
#  define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#endif
#ifndef GL_VIEW_CLASS_128_BITS
#  define GL_VIEW_CLASS_128_BITS 0x82C4
#endif
#ifndef GL_VIEW_CLASS_96_BITS
#  define GL_VIEW_CLASS_96_BITS 0x82C5
#endif
#ifndef GL_VIEW_CLASS_64_BITS
#  define GL_VIEW_CLASS_64_BITS 0x82C6
#endif
#ifndef GL_VIEW_CLASS_48_BITS
#  define GL_VIEW_CLASS_48_BITS 0x82C7
#endif
#ifndef GL_VIEW_CLASS_32_BITS
#  define GL_VIEW_CLASS_32_BITS 0x82C8
#endif
#ifndef GL_VIEW_CLASS_24_BITS
#  define GL_VIEW_CLASS_24_BITS 0x82C9
#endif
#ifndef GL_VIEW_CLASS_16_BITS
#  define GL_VIEW_CLASS_16_BITS 0x82CA
#endif
#ifndef GL_VIEW_CLASS_8_BITS
#  define GL_VIEW_CLASS_8_BITS 0x82CB
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGB
#  define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT3_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT5_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#endif
#ifndef GL_VIEW_CLASS_RGTC1_RED
#  define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#endif
#ifndef GL_VIEW_CLASS_RGTC2_RG
#  define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#endif
#ifndef GL_VIEW_CLASS_BPTC_UNORM
#  define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#endif
#ifndef GL_VIEW_CLASS_BPTC_FLOAT
#  define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetInternalformati64v
typedef void (APIENTRYP PFNGLUXGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetInternalformati64v
extern PFNGLUXGETINTERNALFORMATI64VPROC glGetInternalformati64v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:09:58 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_internalformat_query2__
#define __GLUX_GL_ARB_internalformat_query2__

GLUX_NEW_PLUGIN(GL_ARB_internalformat_query2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INTERNALFORMAT_SUPPORTED
#  define GL_INTERNALFORMAT_SUPPORTED 0x826F
#endif
#ifndef GL_INTERNALFORMAT_PREFERRED
#  define GL_INTERNALFORMAT_PREFERRED 0x8270
#endif
#ifndef GL_INTERNALFORMAT_RED_SIZE
#  define GL_INTERNALFORMAT_RED_SIZE 0x8271
#endif
#ifndef GL_INTERNALFORMAT_GREEN_SIZE
#  define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#endif
#ifndef GL_INTERNALFORMAT_BLUE_SIZE
#  define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_SIZE
#  define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_SIZE
#  define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_SIZE
#  define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#endif
#ifndef GL_INTERNALFORMAT_SHARED_SIZE
#  define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#endif
#ifndef GL_INTERNALFORMAT_RED_TYPE
#  define GL_INTERNALFORMAT_RED_TYPE 0x8278
#endif
#ifndef GL_INTERNALFORMAT_GREEN_TYPE
#  define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#endif
#ifndef GL_INTERNALFORMAT_BLUE_TYPE
#  define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_TYPE
#  define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_TYPE
#  define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_TYPE
#  define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#endif
#ifndef GL_MAX_WIDTH
#  define GL_MAX_WIDTH 0x827E
#endif
#ifndef GL_MAX_HEIGHT
#  define GL_MAX_HEIGHT 0x827F
#endif
#ifndef GL_MAX_DEPTH
#  define GL_MAX_DEPTH 0x8280
#endif
#ifndef GL_MAX_LAYERS
#  define GL_MAX_LAYERS 0x8281
#endif
#ifndef GL_MAX_COMBINED_DIMENSIONS
#  define GL_MAX_COMBINED_DIMENSIONS 0x8282
#endif
#ifndef GL_COLOR_COMPONENTS
#  define GL_COLOR_COMPONENTS 0x8283
#endif
#ifndef GL_DEPTH_COMPONENTS
#  define GL_DEPTH_COMPONENTS 0x8284
#endif
#ifndef GL_STENCIL_COMPONENTS
#  define GL_STENCIL_COMPONENTS 0x8285
#endif
#ifndef GL_COLOR_RENDERABLE
#  define GL_COLOR_RENDERABLE 0x8286
#endif
#ifndef GL_DEPTH_RENDERABLE
#  define GL_DEPTH_RENDERABLE 0x8287
#endif
#ifndef GL_STENCIL_RENDERABLE
#  define GL_STENCIL_RENDERABLE 0x8288
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE
#  define GL_FRAMEBUFFER_RENDERABLE 0x8289
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE_LAYERED
#  define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#endif
#ifndef GL_FRAMEBUFFER_BLEND
#  define GL_FRAMEBUFFER_BLEND 0x828B
#endif
#ifndef GL_READ_PIXELS
#  define GL_READ_PIXELS 0x828C
#endif
#ifndef GL_READ_PIXELS_FORMAT
#  define GL_READ_PIXELS_FORMAT 0x828D
#endif
#ifndef GL_READ_PIXELS_TYPE
#  define GL_READ_PIXELS_TYPE 0x828E
#endif
#ifndef GL_TEXTURE_IMAGE_FORMAT
#  define GL_TEXTURE_IMAGE_FORMAT 0x828F
#endif
#ifndef GL_TEXTURE_IMAGE_TYPE
#  define GL_TEXTURE_IMAGE_TYPE 0x8290
#endif
#ifndef GL_GET_TEXTURE_IMAGE_FORMAT
#  define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#endif
#ifndef GL_GET_TEXTURE_IMAGE_TYPE
#  define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#endif
#ifndef GL_MIPMAP
#  define GL_MIPMAP 0x8293
#endif
#ifndef GL_MANUAL_GENERATE_MIPMAP
#  define GL_MANUAL_GENERATE_MIPMAP 0x8294
#endif
#ifndef GL_AUTO_GENERATE_MIPMAP
#  define GL_AUTO_GENERATE_MIPMAP 0x8295
#endif
#ifndef GL_COLOR_ENCODING
#  define GL_COLOR_ENCODING 0x8296
#endif
#ifndef GL_SRGB_READ
#  define GL_SRGB_READ 0x8297
#endif
#ifndef GL_SRGB_WRITE
#  define GL_SRGB_WRITE 0x8298
#endif
#ifndef GL_SRGB_DECODE_ARB
#  define GL_SRGB_DECODE_ARB 0x8299
#endif
#ifndef GL_FILTER
#  define GL_FILTER 0x829A
#endif
#ifndef GL_VERTEX_TEXTURE
#  define GL_VERTEX_TEXTURE 0x829B
#endif
#ifndef GL_TESS_CONTROL_TEXTURE
#  define GL_TESS_CONTROL_TEXTURE 0x829C
#endif
#ifndef GL_TESS_EVALUATION_TEXTURE
#  define GL_TESS_EVALUATION_TEXTURE 0x829D
#endif
#ifndef GL_GEOMETRY_TEXTURE
#  define GL_GEOMETRY_TEXTURE 0x829E
#endif
#ifndef GL_FRAGMENT_TEXTURE
#  define GL_FRAGMENT_TEXTURE 0x829F
#endif
#ifndef GL_COMPUTE_TEXTURE
#  define GL_COMPUTE_TEXTURE 0x82A0
#endif
#ifndef GL_TEXTURE_SHADOW
#  define GL_TEXTURE_SHADOW 0x82A1
#endif
#ifndef GL_TEXTURE_GATHER
#  define GL_TEXTURE_GATHER 0x82A2
#endif
#ifndef GL_TEXTURE_GATHER_SHADOW
#  define GL_TEXTURE_GATHER_SHADOW 0x82A3
#endif
#ifndef GL_SHADER_IMAGE_LOAD
#  define GL_SHADER_IMAGE_LOAD 0x82A4
#endif
#ifndef GL_SHADER_IMAGE_STORE
#  define GL_SHADER_IMAGE_STORE 0x82A5
#endif
#ifndef GL_SHADER_IMAGE_ATOMIC
#  define GL_SHADER_IMAGE_ATOMIC 0x82A6
#endif
#ifndef GL_IMAGE_TEXEL_SIZE
#  define GL_IMAGE_TEXEL_SIZE 0x82A7
#endif
#ifndef GL_IMAGE_COMPATIBILITY_CLASS
#  define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#endif
#ifndef GL_IMAGE_PIXEL_FORMAT
#  define GL_IMAGE_PIXEL_FORMAT 0x82A9
#endif
#ifndef GL_IMAGE_PIXEL_TYPE
#  define GL_IMAGE_PIXEL_TYPE 0x82AA
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_WIDTH
#  define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT
#  define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_SIZE
#  define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#endif
#ifndef GL_CLEAR_BUFFER
#  define GL_CLEAR_BUFFER 0x82B4
#endif
#ifndef GL_TEXTURE_VIEW
#  define GL_TEXTURE_VIEW 0x82B5
#endif
#ifndef GL_VIEW_COMPATIBILITY_CLASS
#  define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#endif
#ifndef GL_FULL_SUPPORT
#  define GL_FULL_SUPPORT 0x82B7
#endif
#ifndef GL_CAVEAT_SUPPORT
#  define GL_CAVEAT_SUPPORT 0x82B8
#endif
#ifndef GL_IMAGE_CLASS_4_X_32
#  define GL_IMAGE_CLASS_4_X_32 0x82B9
#endif
#ifndef GL_IMAGE_CLASS_2_X_32
#  define GL_IMAGE_CLASS_2_X_32 0x82BA
#endif
#ifndef GL_IMAGE_CLASS_1_X_32
#  define GL_IMAGE_CLASS_1_X_32 0x82BB
#endif
#ifndef GL_IMAGE_CLASS_4_X_16
#  define GL_IMAGE_CLASS_4_X_16 0x82BC
#endif
#ifndef GL_IMAGE_CLASS_2_X_16
#  define GL_IMAGE_CLASS_2_X_16 0x82BD
#endif
#ifndef GL_IMAGE_CLASS_1_X_16
#  define GL_IMAGE_CLASS_1_X_16 0x82BE
#endif
#ifndef GL_IMAGE_CLASS_4_X_8
#  define GL_IMAGE_CLASS_4_X_8 0x82BF
#endif
#ifndef GL_IMAGE_CLASS_2_X_8
#  define GL_IMAGE_CLASS_2_X_8 0x82C0
#endif
#ifndef GL_IMAGE_CLASS_1_X_8
#  define GL_IMAGE_CLASS_1_X_8 0x82C1
#endif
#ifndef GL_IMAGE_CLASS_11_11_10
#  define GL_IMAGE_CLASS_11_11_10 0x82C2
#endif
#ifndef GL_IMAGE_CLASS_10_10_10_2
#  define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#endif
#ifndef GL_VIEW_CLASS_128_BITS
#  define GL_VIEW_CLASS_128_BITS 0x82C4
#endif
#ifndef GL_VIEW_CLASS_96_BITS
#  define GL_VIEW_CLASS_96_BITS 0x82C5
#endif
#ifndef GL_VIEW_CLASS_64_BITS
#  define GL_VIEW_CLASS_64_BITS 0x82C6
#endif
#ifndef GL_VIEW_CLASS_48_BITS
#  define GL_VIEW_CLASS_48_BITS 0x82C7
#endif
#ifndef GL_VIEW_CLASS_32_BITS
#  define GL_VIEW_CLASS_32_BITS 0x82C8
#endif
#ifndef GL_VIEW_CLASS_24_BITS
#  define GL_VIEW_CLASS_24_BITS 0x82C9
#endif
#ifndef GL_VIEW_CLASS_16_BITS
#  define GL_VIEW_CLASS_16_BITS 0x82CA
#endif
#ifndef GL_VIEW_CLASS_8_BITS
#  define GL_VIEW_CLASS_8_BITS 0x82CB
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGB
#  define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT3_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT5_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#endif
#ifndef GL_VIEW_CLASS_RGTC1_RED
#  define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#endif
#ifndef GL_VIEW_CLASS_RGTC2_RG
#  define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#endif
#ifndef GL_VIEW_CLASS_BPTC_UNORM
#  define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#endif
#ifndef GL_VIEW_CLASS_BPTC_FLOAT
#  define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetInternalformati64v
typedef void (APIENTRYP PFNGLUXGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetInternalformati64v
extern PFNGLUXGETINTERNALFORMATI64VPROC glGetInternalformati64v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:19:59 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_internalformat_query2__
#define __GLUX_GL_ARB_internalformat_query2__

GLUX_NEW_PLUGIN(GL_ARB_internalformat_query2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INTERNALFORMAT_SUPPORTED
#  define GL_INTERNALFORMAT_SUPPORTED 0x826F
#endif
#ifndef GL_INTERNALFORMAT_PREFERRED
#  define GL_INTERNALFORMAT_PREFERRED 0x8270
#endif
#ifndef GL_INTERNALFORMAT_RED_SIZE
#  define GL_INTERNALFORMAT_RED_SIZE 0x8271
#endif
#ifndef GL_INTERNALFORMAT_GREEN_SIZE
#  define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#endif
#ifndef GL_INTERNALFORMAT_BLUE_SIZE
#  define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_SIZE
#  define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_SIZE
#  define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_SIZE
#  define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#endif
#ifndef GL_INTERNALFORMAT_SHARED_SIZE
#  define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#endif
#ifndef GL_INTERNALFORMAT_RED_TYPE
#  define GL_INTERNALFORMAT_RED_TYPE 0x8278
#endif
#ifndef GL_INTERNALFORMAT_GREEN_TYPE
#  define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#endif
#ifndef GL_INTERNALFORMAT_BLUE_TYPE
#  define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_TYPE
#  define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_TYPE
#  define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_TYPE
#  define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#endif
#ifndef GL_MAX_WIDTH
#  define GL_MAX_WIDTH 0x827E
#endif
#ifndef GL_MAX_HEIGHT
#  define GL_MAX_HEIGHT 0x827F
#endif
#ifndef GL_MAX_DEPTH
#  define GL_MAX_DEPTH 0x8280
#endif
#ifndef GL_MAX_LAYERS
#  define GL_MAX_LAYERS 0x8281
#endif
#ifndef GL_MAX_COMBINED_DIMENSIONS
#  define GL_MAX_COMBINED_DIMENSIONS 0x8282
#endif
#ifndef GL_COLOR_COMPONENTS
#  define GL_COLOR_COMPONENTS 0x8283
#endif
#ifndef GL_DEPTH_COMPONENTS
#  define GL_DEPTH_COMPONENTS 0x8284
#endif
#ifndef GL_STENCIL_COMPONENTS
#  define GL_STENCIL_COMPONENTS 0x8285
#endif
#ifndef GL_COLOR_RENDERABLE
#  define GL_COLOR_RENDERABLE 0x8286
#endif
#ifndef GL_DEPTH_RENDERABLE
#  define GL_DEPTH_RENDERABLE 0x8287
#endif
#ifndef GL_STENCIL_RENDERABLE
#  define GL_STENCIL_RENDERABLE 0x8288
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE
#  define GL_FRAMEBUFFER_RENDERABLE 0x8289
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE_LAYERED
#  define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#endif
#ifndef GL_FRAMEBUFFER_BLEND
#  define GL_FRAMEBUFFER_BLEND 0x828B
#endif
#ifndef GL_READ_PIXELS
#  define GL_READ_PIXELS 0x828C
#endif
#ifndef GL_READ_PIXELS_FORMAT
#  define GL_READ_PIXELS_FORMAT 0x828D
#endif
#ifndef GL_READ_PIXELS_TYPE
#  define GL_READ_PIXELS_TYPE 0x828E
#endif
#ifndef GL_TEXTURE_IMAGE_FORMAT
#  define GL_TEXTURE_IMAGE_FORMAT 0x828F
#endif
#ifndef GL_TEXTURE_IMAGE_TYPE
#  define GL_TEXTURE_IMAGE_TYPE 0x8290
#endif
#ifndef GL_GET_TEXTURE_IMAGE_FORMAT
#  define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#endif
#ifndef GL_GET_TEXTURE_IMAGE_TYPE
#  define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#endif
#ifndef GL_MIPMAP
#  define GL_MIPMAP 0x8293
#endif
#ifndef GL_MANUAL_GENERATE_MIPMAP
#  define GL_MANUAL_GENERATE_MIPMAP 0x8294
#endif
#ifndef GL_AUTO_GENERATE_MIPMAP
#  define GL_AUTO_GENERATE_MIPMAP 0x8295
#endif
#ifndef GL_COLOR_ENCODING
#  define GL_COLOR_ENCODING 0x8296
#endif
#ifndef GL_SRGB_READ
#  define GL_SRGB_READ 0x8297
#endif
#ifndef GL_SRGB_WRITE
#  define GL_SRGB_WRITE 0x8298
#endif
#ifndef GL_SRGB_DECODE_ARB
#  define GL_SRGB_DECODE_ARB 0x8299
#endif
#ifndef GL_FILTER
#  define GL_FILTER 0x829A
#endif
#ifndef GL_VERTEX_TEXTURE
#  define GL_VERTEX_TEXTURE 0x829B
#endif
#ifndef GL_TESS_CONTROL_TEXTURE
#  define GL_TESS_CONTROL_TEXTURE 0x829C
#endif
#ifndef GL_TESS_EVALUATION_TEXTURE
#  define GL_TESS_EVALUATION_TEXTURE 0x829D
#endif
#ifndef GL_GEOMETRY_TEXTURE
#  define GL_GEOMETRY_TEXTURE 0x829E
#endif
#ifndef GL_FRAGMENT_TEXTURE
#  define GL_FRAGMENT_TEXTURE 0x829F
#endif
#ifndef GL_COMPUTE_TEXTURE
#  define GL_COMPUTE_TEXTURE 0x82A0
#endif
#ifndef GL_TEXTURE_SHADOW
#  define GL_TEXTURE_SHADOW 0x82A1
#endif
#ifndef GL_TEXTURE_GATHER
#  define GL_TEXTURE_GATHER 0x82A2
#endif
#ifndef GL_TEXTURE_GATHER_SHADOW
#  define GL_TEXTURE_GATHER_SHADOW 0x82A3
#endif
#ifndef GL_SHADER_IMAGE_LOAD
#  define GL_SHADER_IMAGE_LOAD 0x82A4
#endif
#ifndef GL_SHADER_IMAGE_STORE
#  define GL_SHADER_IMAGE_STORE 0x82A5
#endif
#ifndef GL_SHADER_IMAGE_ATOMIC
#  define GL_SHADER_IMAGE_ATOMIC 0x82A6
#endif
#ifndef GL_IMAGE_TEXEL_SIZE
#  define GL_IMAGE_TEXEL_SIZE 0x82A7
#endif
#ifndef GL_IMAGE_COMPATIBILITY_CLASS
#  define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#endif
#ifndef GL_IMAGE_PIXEL_FORMAT
#  define GL_IMAGE_PIXEL_FORMAT 0x82A9
#endif
#ifndef GL_IMAGE_PIXEL_TYPE
#  define GL_IMAGE_PIXEL_TYPE 0x82AA
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_WIDTH
#  define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT
#  define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_SIZE
#  define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#endif
#ifndef GL_CLEAR_BUFFER
#  define GL_CLEAR_BUFFER 0x82B4
#endif
#ifndef GL_TEXTURE_VIEW
#  define GL_TEXTURE_VIEW 0x82B5
#endif
#ifndef GL_VIEW_COMPATIBILITY_CLASS
#  define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#endif
#ifndef GL_FULL_SUPPORT
#  define GL_FULL_SUPPORT 0x82B7
#endif
#ifndef GL_CAVEAT_SUPPORT
#  define GL_CAVEAT_SUPPORT 0x82B8
#endif
#ifndef GL_IMAGE_CLASS_4_X_32
#  define GL_IMAGE_CLASS_4_X_32 0x82B9
#endif
#ifndef GL_IMAGE_CLASS_2_X_32
#  define GL_IMAGE_CLASS_2_X_32 0x82BA
#endif
#ifndef GL_IMAGE_CLASS_1_X_32
#  define GL_IMAGE_CLASS_1_X_32 0x82BB
#endif
#ifndef GL_IMAGE_CLASS_4_X_16
#  define GL_IMAGE_CLASS_4_X_16 0x82BC
#endif
#ifndef GL_IMAGE_CLASS_2_X_16
#  define GL_IMAGE_CLASS_2_X_16 0x82BD
#endif
#ifndef GL_IMAGE_CLASS_1_X_16
#  define GL_IMAGE_CLASS_1_X_16 0x82BE
#endif
#ifndef GL_IMAGE_CLASS_4_X_8
#  define GL_IMAGE_CLASS_4_X_8 0x82BF
#endif
#ifndef GL_IMAGE_CLASS_2_X_8
#  define GL_IMAGE_CLASS_2_X_8 0x82C0
#endif
#ifndef GL_IMAGE_CLASS_1_X_8
#  define GL_IMAGE_CLASS_1_X_8 0x82C1
#endif
#ifndef GL_IMAGE_CLASS_11_11_10
#  define GL_IMAGE_CLASS_11_11_10 0x82C2
#endif
#ifndef GL_IMAGE_CLASS_10_10_10_2
#  define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#endif
#ifndef GL_VIEW_CLASS_128_BITS
#  define GL_VIEW_CLASS_128_BITS 0x82C4
#endif
#ifndef GL_VIEW_CLASS_96_BITS
#  define GL_VIEW_CLASS_96_BITS 0x82C5
#endif
#ifndef GL_VIEW_CLASS_64_BITS
#  define GL_VIEW_CLASS_64_BITS 0x82C6
#endif
#ifndef GL_VIEW_CLASS_48_BITS
#  define GL_VIEW_CLASS_48_BITS 0x82C7
#endif
#ifndef GL_VIEW_CLASS_32_BITS
#  define GL_VIEW_CLASS_32_BITS 0x82C8
#endif
#ifndef GL_VIEW_CLASS_24_BITS
#  define GL_VIEW_CLASS_24_BITS 0x82C9
#endif
#ifndef GL_VIEW_CLASS_16_BITS
#  define GL_VIEW_CLASS_16_BITS 0x82CA
#endif
#ifndef GL_VIEW_CLASS_8_BITS
#  define GL_VIEW_CLASS_8_BITS 0x82CB
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGB
#  define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT3_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT5_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#endif
#ifndef GL_VIEW_CLASS_RGTC1_RED
#  define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#endif
#ifndef GL_VIEW_CLASS_RGTC2_RG
#  define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#endif
#ifndef GL_VIEW_CLASS_BPTC_UNORM
#  define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#endif
#ifndef GL_VIEW_CLASS_BPTC_FLOAT
#  define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetInternalformati64v
typedef void (APIENTRYP PFNGLUXGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetInternalformati64v
extern PFNGLUXGETINTERNALFORMATI64VPROC glGetInternalformati64v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:42:57 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_internalformat_query2__
#define __GLUX_GL_ARB_internalformat_query2__

GLUX_NEW_PLUGIN(GL_ARB_internalformat_query2)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INTERNALFORMAT_SUPPORTED
#  define GL_INTERNALFORMAT_SUPPORTED 0x826F
#endif
#ifndef GL_INTERNALFORMAT_PREFERRED
#  define GL_INTERNALFORMAT_PREFERRED 0x8270
#endif
#ifndef GL_INTERNALFORMAT_RED_SIZE
#  define GL_INTERNALFORMAT_RED_SIZE 0x8271
#endif
#ifndef GL_INTERNALFORMAT_GREEN_SIZE
#  define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#endif
#ifndef GL_INTERNALFORMAT_BLUE_SIZE
#  define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_SIZE
#  define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_SIZE
#  define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_SIZE
#  define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#endif
#ifndef GL_INTERNALFORMAT_SHARED_SIZE
#  define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#endif
#ifndef GL_INTERNALFORMAT_RED_TYPE
#  define GL_INTERNALFORMAT_RED_TYPE 0x8278
#endif
#ifndef GL_INTERNALFORMAT_GREEN_TYPE
#  define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#endif
#ifndef GL_INTERNALFORMAT_BLUE_TYPE
#  define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#endif
#ifndef GL_INTERNALFORMAT_ALPHA_TYPE
#  define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#endif
#ifndef GL_INTERNALFORMAT_DEPTH_TYPE
#  define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#endif
#ifndef GL_INTERNALFORMAT_STENCIL_TYPE
#  define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#endif
#ifndef GL_MAX_WIDTH
#  define GL_MAX_WIDTH 0x827E
#endif
#ifndef GL_MAX_HEIGHT
#  define GL_MAX_HEIGHT 0x827F
#endif
#ifndef GL_MAX_DEPTH
#  define GL_MAX_DEPTH 0x8280
#endif
#ifndef GL_MAX_LAYERS
#  define GL_MAX_LAYERS 0x8281
#endif
#ifndef GL_MAX_COMBINED_DIMENSIONS
#  define GL_MAX_COMBINED_DIMENSIONS 0x8282
#endif
#ifndef GL_COLOR_COMPONENTS
#  define GL_COLOR_COMPONENTS 0x8283
#endif
#ifndef GL_DEPTH_COMPONENTS
#  define GL_DEPTH_COMPONENTS 0x8284
#endif
#ifndef GL_STENCIL_COMPONENTS
#  define GL_STENCIL_COMPONENTS 0x8285
#endif
#ifndef GL_COLOR_RENDERABLE
#  define GL_COLOR_RENDERABLE 0x8286
#endif
#ifndef GL_DEPTH_RENDERABLE
#  define GL_DEPTH_RENDERABLE 0x8287
#endif
#ifndef GL_STENCIL_RENDERABLE
#  define GL_STENCIL_RENDERABLE 0x8288
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE
#  define GL_FRAMEBUFFER_RENDERABLE 0x8289
#endif
#ifndef GL_FRAMEBUFFER_RENDERABLE_LAYERED
#  define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#endif
#ifndef GL_FRAMEBUFFER_BLEND
#  define GL_FRAMEBUFFER_BLEND 0x828B
#endif
#ifndef GL_READ_PIXELS
#  define GL_READ_PIXELS 0x828C
#endif
#ifndef GL_READ_PIXELS_FORMAT
#  define GL_READ_PIXELS_FORMAT 0x828D
#endif
#ifndef GL_READ_PIXELS_TYPE
#  define GL_READ_PIXELS_TYPE 0x828E
#endif
#ifndef GL_TEXTURE_IMAGE_FORMAT
#  define GL_TEXTURE_IMAGE_FORMAT 0x828F
#endif
#ifndef GL_TEXTURE_IMAGE_TYPE
#  define GL_TEXTURE_IMAGE_TYPE 0x8290
#endif
#ifndef GL_GET_TEXTURE_IMAGE_FORMAT
#  define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#endif
#ifndef GL_GET_TEXTURE_IMAGE_TYPE
#  define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#endif
#ifndef GL_MIPMAP
#  define GL_MIPMAP 0x8293
#endif
#ifndef GL_MANUAL_GENERATE_MIPMAP
#  define GL_MANUAL_GENERATE_MIPMAP 0x8294
#endif
#ifndef GL_AUTO_GENERATE_MIPMAP
#  define GL_AUTO_GENERATE_MIPMAP 0x8295
#endif
#ifndef GL_COLOR_ENCODING
#  define GL_COLOR_ENCODING 0x8296
#endif
#ifndef GL_SRGB_READ
#  define GL_SRGB_READ 0x8297
#endif
#ifndef GL_SRGB_WRITE
#  define GL_SRGB_WRITE 0x8298
#endif
#ifndef GL_SRGB_DECODE_ARB
#  define GL_SRGB_DECODE_ARB 0x8299
#endif
#ifndef GL_FILTER
#  define GL_FILTER 0x829A
#endif
#ifndef GL_VERTEX_TEXTURE
#  define GL_VERTEX_TEXTURE 0x829B
#endif
#ifndef GL_TESS_CONTROL_TEXTURE
#  define GL_TESS_CONTROL_TEXTURE 0x829C
#endif
#ifndef GL_TESS_EVALUATION_TEXTURE
#  define GL_TESS_EVALUATION_TEXTURE 0x829D
#endif
#ifndef GL_GEOMETRY_TEXTURE
#  define GL_GEOMETRY_TEXTURE 0x829E
#endif
#ifndef GL_FRAGMENT_TEXTURE
#  define GL_FRAGMENT_TEXTURE 0x829F
#endif
#ifndef GL_COMPUTE_TEXTURE
#  define GL_COMPUTE_TEXTURE 0x82A0
#endif
#ifndef GL_TEXTURE_SHADOW
#  define GL_TEXTURE_SHADOW 0x82A1
#endif
#ifndef GL_TEXTURE_GATHER
#  define GL_TEXTURE_GATHER 0x82A2
#endif
#ifndef GL_TEXTURE_GATHER_SHADOW
#  define GL_TEXTURE_GATHER_SHADOW 0x82A3
#endif
#ifndef GL_SHADER_IMAGE_LOAD
#  define GL_SHADER_IMAGE_LOAD 0x82A4
#endif
#ifndef GL_SHADER_IMAGE_STORE
#  define GL_SHADER_IMAGE_STORE 0x82A5
#endif
#ifndef GL_SHADER_IMAGE_ATOMIC
#  define GL_SHADER_IMAGE_ATOMIC 0x82A6
#endif
#ifndef GL_IMAGE_TEXEL_SIZE
#  define GL_IMAGE_TEXEL_SIZE 0x82A7
#endif
#ifndef GL_IMAGE_COMPATIBILITY_CLASS
#  define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#endif
#ifndef GL_IMAGE_PIXEL_FORMAT
#  define GL_IMAGE_PIXEL_FORMAT 0x82A9
#endif
#ifndef GL_IMAGE_PIXEL_TYPE
#  define GL_IMAGE_PIXEL_TYPE 0x82AA
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#endif
#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE
#  define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_WIDTH
#  define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT
#  define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#endif
#ifndef GL_TEXTURE_COMPRESSED_BLOCK_SIZE
#  define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#endif
#ifndef GL_CLEAR_BUFFER
#  define GL_CLEAR_BUFFER 0x82B4
#endif
#ifndef GL_TEXTURE_VIEW
#  define GL_TEXTURE_VIEW 0x82B5
#endif
#ifndef GL_VIEW_COMPATIBILITY_CLASS
#  define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#endif
#ifndef GL_FULL_SUPPORT
#  define GL_FULL_SUPPORT 0x82B7
#endif
#ifndef GL_CAVEAT_SUPPORT
#  define GL_CAVEAT_SUPPORT 0x82B8
#endif
#ifndef GL_IMAGE_CLASS_4_X_32
#  define GL_IMAGE_CLASS_4_X_32 0x82B9
#endif
#ifndef GL_IMAGE_CLASS_2_X_32
#  define GL_IMAGE_CLASS_2_X_32 0x82BA
#endif
#ifndef GL_IMAGE_CLASS_1_X_32
#  define GL_IMAGE_CLASS_1_X_32 0x82BB
#endif
#ifndef GL_IMAGE_CLASS_4_X_16
#  define GL_IMAGE_CLASS_4_X_16 0x82BC
#endif
#ifndef GL_IMAGE_CLASS_2_X_16
#  define GL_IMAGE_CLASS_2_X_16 0x82BD
#endif
#ifndef GL_IMAGE_CLASS_1_X_16
#  define GL_IMAGE_CLASS_1_X_16 0x82BE
#endif
#ifndef GL_IMAGE_CLASS_4_X_8
#  define GL_IMAGE_CLASS_4_X_8 0x82BF
#endif
#ifndef GL_IMAGE_CLASS_2_X_8
#  define GL_IMAGE_CLASS_2_X_8 0x82C0
#endif
#ifndef GL_IMAGE_CLASS_1_X_8
#  define GL_IMAGE_CLASS_1_X_8 0x82C1
#endif
#ifndef GL_IMAGE_CLASS_11_11_10
#  define GL_IMAGE_CLASS_11_11_10 0x82C2
#endif
#ifndef GL_IMAGE_CLASS_10_10_10_2
#  define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#endif
#ifndef GL_VIEW_CLASS_128_BITS
#  define GL_VIEW_CLASS_128_BITS 0x82C4
#endif
#ifndef GL_VIEW_CLASS_96_BITS
#  define GL_VIEW_CLASS_96_BITS 0x82C5
#endif
#ifndef GL_VIEW_CLASS_64_BITS
#  define GL_VIEW_CLASS_64_BITS 0x82C6
#endif
#ifndef GL_VIEW_CLASS_48_BITS
#  define GL_VIEW_CLASS_48_BITS 0x82C7
#endif
#ifndef GL_VIEW_CLASS_32_BITS
#  define GL_VIEW_CLASS_32_BITS 0x82C8
#endif
#ifndef GL_VIEW_CLASS_24_BITS
#  define GL_VIEW_CLASS_24_BITS 0x82C9
#endif
#ifndef GL_VIEW_CLASS_16_BITS
#  define GL_VIEW_CLASS_16_BITS 0x82CA
#endif
#ifndef GL_VIEW_CLASS_8_BITS
#  define GL_VIEW_CLASS_8_BITS 0x82CB
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGB
#  define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT3_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#endif
#ifndef GL_VIEW_CLASS_S3TC_DXT5_RGBA
#  define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#endif
#ifndef GL_VIEW_CLASS_RGTC1_RED
#  define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#endif
#ifndef GL_VIEW_CLASS_RGTC2_RG
#  define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#endif
#ifndef GL_VIEW_CLASS_BPTC_UNORM
#  define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#endif
#ifndef GL_VIEW_CLASS_BPTC_FLOAT
#  define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetInternalformati64v
typedef void (APIENTRYP PFNGLUXGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetInternalformati64v
extern PFNGLUXGETINTERNALFORMATI64VPROC glGetInternalformati64v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
