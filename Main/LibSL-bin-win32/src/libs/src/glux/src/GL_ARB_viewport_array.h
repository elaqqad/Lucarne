
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:25 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_viewport_array__
#define __GLUX_GL_ARB_viewport_array__

GLUX_NEW_PLUGIN(GL_ARB_viewport_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VIEWPORTS
#  define GL_MAX_VIEWPORTS 0x825B
#endif
#ifndef GL_VIEWPORT_SUBPIXEL_BITS
#  define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#endif
#ifndef GL_VIEWPORT_BOUNDS_RANGE
#  define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#endif
#ifndef GL_LAYER_PROVOKING_VERTEX
#  define GL_LAYER_PROVOKING_VERTEX 0x825E
#endif
#ifndef GL_VIEWPORT_INDEX_PROVOKING_VERTEX
#  define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#endif
#ifndef GL_UNDEFINED_VERTEX
#  define GL_UNDEFINED_VERTEX 0x8260
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glViewportArrayv
typedef void (APIENTRYP PFNGLUXVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
typedef void (APIENTRYP PFNGLUXSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
typedef void (APIENTRYP PFNGLUXDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
typedef void (APIENTRYP PFNGLUXDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
typedef void (APIENTRYP PFNGLUXGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
typedef void (APIENTRYP PFNGLUXGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glViewportArrayv
extern PFNGLUXVIEWPORTARRAYVPROC glViewportArrayv;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
extern PFNGLUXVIEWPORTINDEXEDFPROC glViewportIndexedf;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
extern PFNGLUXVIEWPORTINDEXEDFVPROC glViewportIndexedfv;
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
extern PFNGLUXSCISSORARRAYVPROC glScissorArrayv;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
extern PFNGLUXSCISSORINDEXEDPROC glScissorIndexed;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
extern PFNGLUXSCISSORINDEXEDVPROC glScissorIndexedv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
extern PFNGLUXDEPTHRANGEARRAYVPROC glDepthRangeArrayv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
extern PFNGLUXDEPTHRANGEINDEXEDPROC glDepthRangeIndexed;
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
extern PFNGLUXGETFLOATI_VPROC glGetFloati_v;
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
extern PFNGLUXGETDOUBLEI_VPROC glGetDoublei_v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:43 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_viewport_array__
#define __GLUX_GL_ARB_viewport_array__

GLUX_NEW_PLUGIN(GL_ARB_viewport_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VIEWPORTS
#  define GL_MAX_VIEWPORTS 0x825B
#endif
#ifndef GL_VIEWPORT_SUBPIXEL_BITS
#  define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#endif
#ifndef GL_VIEWPORT_BOUNDS_RANGE
#  define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#endif
#ifndef GL_LAYER_PROVOKING_VERTEX
#  define GL_LAYER_PROVOKING_VERTEX 0x825E
#endif
#ifndef GL_VIEWPORT_INDEX_PROVOKING_VERTEX
#  define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#endif
#ifndef GL_UNDEFINED_VERTEX
#  define GL_UNDEFINED_VERTEX 0x8260
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glViewportArrayv
typedef void (APIENTRYP PFNGLUXVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
typedef void (APIENTRYP PFNGLUXSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
typedef void (APIENTRYP PFNGLUXDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
typedef void (APIENTRYP PFNGLUXDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
typedef void (APIENTRYP PFNGLUXGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
typedef void (APIENTRYP PFNGLUXGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glViewportArrayv
extern PFNGLUXVIEWPORTARRAYVPROC glViewportArrayv;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
extern PFNGLUXVIEWPORTINDEXEDFPROC glViewportIndexedf;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
extern PFNGLUXVIEWPORTINDEXEDFVPROC glViewportIndexedfv;
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
extern PFNGLUXSCISSORARRAYVPROC glScissorArrayv;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
extern PFNGLUXSCISSORINDEXEDPROC glScissorIndexed;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
extern PFNGLUXSCISSORINDEXEDVPROC glScissorIndexedv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
extern PFNGLUXDEPTHRANGEARRAYVPROC glDepthRangeArrayv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
extern PFNGLUXDEPTHRANGEINDEXEDPROC glDepthRangeIndexed;
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
extern PFNGLUXGETFLOATI_VPROC glGetFloati_v;
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
extern PFNGLUXGETDOUBLEI_VPROC glGetDoublei_v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:53 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_viewport_array__
#define __GLUX_GL_ARB_viewport_array__

GLUX_NEW_PLUGIN(GL_ARB_viewport_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VIEWPORTS
#  define GL_MAX_VIEWPORTS 0x825B
#endif
#ifndef GL_VIEWPORT_SUBPIXEL_BITS
#  define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#endif
#ifndef GL_VIEWPORT_BOUNDS_RANGE
#  define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#endif
#ifndef GL_LAYER_PROVOKING_VERTEX
#  define GL_LAYER_PROVOKING_VERTEX 0x825E
#endif
#ifndef GL_VIEWPORT_INDEX_PROVOKING_VERTEX
#  define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#endif
#ifndef GL_UNDEFINED_VERTEX
#  define GL_UNDEFINED_VERTEX 0x8260
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glViewportArrayv
typedef void (APIENTRYP PFNGLUXVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
typedef void (APIENTRYP PFNGLUXSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
typedef void (APIENTRYP PFNGLUXDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
typedef void (APIENTRYP PFNGLUXDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
typedef void (APIENTRYP PFNGLUXGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
typedef void (APIENTRYP PFNGLUXGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glViewportArrayv
extern PFNGLUXVIEWPORTARRAYVPROC glViewportArrayv;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
extern PFNGLUXVIEWPORTINDEXEDFPROC glViewportIndexedf;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
extern PFNGLUXVIEWPORTINDEXEDFVPROC glViewportIndexedfv;
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
extern PFNGLUXSCISSORARRAYVPROC glScissorArrayv;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
extern PFNGLUXSCISSORINDEXEDPROC glScissorIndexed;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
extern PFNGLUXSCISSORINDEXEDVPROC glScissorIndexedv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
extern PFNGLUXDEPTHRANGEARRAYVPROC glDepthRangeArrayv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
extern PFNGLUXDEPTHRANGEINDEXEDPROC glDepthRangeIndexed;
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
extern PFNGLUXGETFLOATI_VPROC glGetFloati_v;
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
extern PFNGLUXGETDOUBLEI_VPROC glGetDoublei_v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:13 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_viewport_array__
#define __GLUX_GL_ARB_viewport_array__

GLUX_NEW_PLUGIN(GL_ARB_viewport_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VIEWPORTS
#  define GL_MAX_VIEWPORTS 0x825B
#endif
#ifndef GL_VIEWPORT_SUBPIXEL_BITS
#  define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#endif
#ifndef GL_VIEWPORT_BOUNDS_RANGE
#  define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#endif
#ifndef GL_LAYER_PROVOKING_VERTEX
#  define GL_LAYER_PROVOKING_VERTEX 0x825E
#endif
#ifndef GL_VIEWPORT_INDEX_PROVOKING_VERTEX
#  define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#endif
#ifndef GL_UNDEFINED_VERTEX
#  define GL_UNDEFINED_VERTEX 0x8260
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glViewportArrayv
typedef void (APIENTRYP PFNGLUXVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
typedef void (APIENTRYP PFNGLUXSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
typedef void (APIENTRYP PFNGLUXDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
typedef void (APIENTRYP PFNGLUXDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
typedef void (APIENTRYP PFNGLUXGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
typedef void (APIENTRYP PFNGLUXGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glViewportArrayv
extern PFNGLUXVIEWPORTARRAYVPROC glViewportArrayv;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
extern PFNGLUXVIEWPORTINDEXEDFPROC glViewportIndexedf;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
extern PFNGLUXVIEWPORTINDEXEDFVPROC glViewportIndexedfv;
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
extern PFNGLUXSCISSORARRAYVPROC glScissorArrayv;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
extern PFNGLUXSCISSORINDEXEDPROC glScissorIndexed;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
extern PFNGLUXSCISSORINDEXEDVPROC glScissorIndexedv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
extern PFNGLUXDEPTHRANGEARRAYVPROC glDepthRangeArrayv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
extern PFNGLUXDEPTHRANGEINDEXEDPROC glDepthRangeIndexed;
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
extern PFNGLUXGETFLOATI_VPROC glGetFloati_v;
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
extern PFNGLUXGETDOUBLEI_VPROC glGetDoublei_v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:29 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_viewport_array__
#define __GLUX_GL_ARB_viewport_array__

GLUX_NEW_PLUGIN(GL_ARB_viewport_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VIEWPORTS
#  define GL_MAX_VIEWPORTS 0x825B
#endif
#ifndef GL_VIEWPORT_SUBPIXEL_BITS
#  define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#endif
#ifndef GL_VIEWPORT_BOUNDS_RANGE
#  define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#endif
#ifndef GL_LAYER_PROVOKING_VERTEX
#  define GL_LAYER_PROVOKING_VERTEX 0x825E
#endif
#ifndef GL_VIEWPORT_INDEX_PROVOKING_VERTEX
#  define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#endif
#ifndef GL_UNDEFINED_VERTEX
#  define GL_UNDEFINED_VERTEX 0x8260
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glViewportArrayv
typedef void (APIENTRYP PFNGLUXVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
typedef void (APIENTRYP PFNGLUXSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
typedef void (APIENTRYP PFNGLUXDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
typedef void (APIENTRYP PFNGLUXDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
typedef void (APIENTRYP PFNGLUXGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
typedef void (APIENTRYP PFNGLUXGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glViewportArrayv
extern PFNGLUXVIEWPORTARRAYVPROC glViewportArrayv;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
extern PFNGLUXVIEWPORTINDEXEDFPROC glViewportIndexedf;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
extern PFNGLUXVIEWPORTINDEXEDFVPROC glViewportIndexedfv;
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
extern PFNGLUXSCISSORARRAYVPROC glScissorArrayv;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
extern PFNGLUXSCISSORINDEXEDPROC glScissorIndexed;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
extern PFNGLUXSCISSORINDEXEDVPROC glScissorIndexedv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
extern PFNGLUXDEPTHRANGEARRAYVPROC glDepthRangeArrayv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
extern PFNGLUXDEPTHRANGEINDEXEDPROC glDepthRangeIndexed;
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
extern PFNGLUXGETFLOATI_VPROC glGetFloati_v;
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
extern PFNGLUXGETDOUBLEI_VPROC glGetDoublei_v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:32 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_viewport_array__
#define __GLUX_GL_ARB_viewport_array__

GLUX_NEW_PLUGIN(GL_ARB_viewport_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VIEWPORTS
#  define GL_MAX_VIEWPORTS 0x825B
#endif
#ifndef GL_VIEWPORT_SUBPIXEL_BITS
#  define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#endif
#ifndef GL_VIEWPORT_BOUNDS_RANGE
#  define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#endif
#ifndef GL_LAYER_PROVOKING_VERTEX
#  define GL_LAYER_PROVOKING_VERTEX 0x825E
#endif
#ifndef GL_VIEWPORT_INDEX_PROVOKING_VERTEX
#  define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#endif
#ifndef GL_UNDEFINED_VERTEX
#  define GL_UNDEFINED_VERTEX 0x8260
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glViewportArrayv
typedef void (APIENTRYP PFNGLUXVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
typedef void (APIENTRYP PFNGLUXSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
typedef void (APIENTRYP PFNGLUXDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
typedef void (APIENTRYP PFNGLUXDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
typedef void (APIENTRYP PFNGLUXGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
typedef void (APIENTRYP PFNGLUXGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glViewportArrayv
extern PFNGLUXVIEWPORTARRAYVPROC glViewportArrayv;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
extern PFNGLUXVIEWPORTINDEXEDFPROC glViewportIndexedf;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
extern PFNGLUXVIEWPORTINDEXEDFVPROC glViewportIndexedfv;
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
extern PFNGLUXSCISSORARRAYVPROC glScissorArrayv;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
extern PFNGLUXSCISSORINDEXEDPROC glScissorIndexed;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
extern PFNGLUXSCISSORINDEXEDVPROC glScissorIndexedv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
extern PFNGLUXDEPTHRANGEARRAYVPROC glDepthRangeArrayv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
extern PFNGLUXDEPTHRANGEINDEXEDPROC glDepthRangeIndexed;
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
extern PFNGLUXGETFLOATI_VPROC glGetFloati_v;
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
extern PFNGLUXGETDOUBLEI_VPROC glGetDoublei_v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:54 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_viewport_array__
#define __GLUX_GL_ARB_viewport_array__

GLUX_NEW_PLUGIN(GL_ARB_viewport_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VIEWPORTS
#  define GL_MAX_VIEWPORTS 0x825B
#endif
#ifndef GL_VIEWPORT_SUBPIXEL_BITS
#  define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#endif
#ifndef GL_VIEWPORT_BOUNDS_RANGE
#  define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#endif
#ifndef GL_LAYER_PROVOKING_VERTEX
#  define GL_LAYER_PROVOKING_VERTEX 0x825E
#endif
#ifndef GL_VIEWPORT_INDEX_PROVOKING_VERTEX
#  define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#endif
#ifndef GL_UNDEFINED_VERTEX
#  define GL_UNDEFINED_VERTEX 0x8260
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glViewportArrayv
typedef void (APIENTRYP PFNGLUXVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
typedef void (APIENTRYP PFNGLUXSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
typedef void (APIENTRYP PFNGLUXDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
typedef void (APIENTRYP PFNGLUXDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
typedef void (APIENTRYP PFNGLUXGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
typedef void (APIENTRYP PFNGLUXGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glViewportArrayv
extern PFNGLUXVIEWPORTARRAYVPROC glViewportArrayv;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
extern PFNGLUXVIEWPORTINDEXEDFPROC glViewportIndexedf;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
extern PFNGLUXVIEWPORTINDEXEDFVPROC glViewportIndexedfv;
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
extern PFNGLUXSCISSORARRAYVPROC glScissorArrayv;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
extern PFNGLUXSCISSORINDEXEDPROC glScissorIndexed;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
extern PFNGLUXSCISSORINDEXEDVPROC glScissorIndexedv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
extern PFNGLUXDEPTHRANGEARRAYVPROC glDepthRangeArrayv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
extern PFNGLUXDEPTHRANGEINDEXEDPROC glDepthRangeIndexed;
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
extern PFNGLUXGETFLOATI_VPROC glGetFloati_v;
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
extern PFNGLUXGETDOUBLEI_VPROC glGetDoublei_v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:28:04 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_viewport_array__
#define __GLUX_GL_ARB_viewport_array__

GLUX_NEW_PLUGIN(GL_ARB_viewport_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VIEWPORTS
#  define GL_MAX_VIEWPORTS 0x825B
#endif
#ifndef GL_VIEWPORT_SUBPIXEL_BITS
#  define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#endif
#ifndef GL_VIEWPORT_BOUNDS_RANGE
#  define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#endif
#ifndef GL_LAYER_PROVOKING_VERTEX
#  define GL_LAYER_PROVOKING_VERTEX 0x825E
#endif
#ifndef GL_VIEWPORT_INDEX_PROVOKING_VERTEX
#  define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#endif
#ifndef GL_UNDEFINED_VERTEX
#  define GL_UNDEFINED_VERTEX 0x8260
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glViewportArrayv
typedef void (APIENTRYP PFNGLUXVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
typedef void (APIENTRYP PFNGLUXSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
typedef void (APIENTRYP PFNGLUXDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
typedef void (APIENTRYP PFNGLUXDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
typedef void (APIENTRYP PFNGLUXGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
typedef void (APIENTRYP PFNGLUXGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glViewportArrayv
extern PFNGLUXVIEWPORTARRAYVPROC glViewportArrayv;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
extern PFNGLUXVIEWPORTINDEXEDFPROC glViewportIndexedf;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
extern PFNGLUXVIEWPORTINDEXEDFVPROC glViewportIndexedfv;
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
extern PFNGLUXSCISSORARRAYVPROC glScissorArrayv;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
extern PFNGLUXSCISSORINDEXEDPROC glScissorIndexed;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
extern PFNGLUXSCISSORINDEXEDVPROC glScissorIndexedv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
extern PFNGLUXDEPTHRANGEARRAYVPROC glDepthRangeArrayv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
extern PFNGLUXDEPTHRANGEINDEXEDPROC glDepthRangeIndexed;
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
extern PFNGLUXGETFLOATI_VPROC glGetFloati_v;
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
extern PFNGLUXGETDOUBLEI_VPROC glGetDoublei_v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:16:58 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_viewport_array__
#define __GLUX_GL_ARB_viewport_array__

GLUX_NEW_PLUGIN(GL_ARB_viewport_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VIEWPORTS
#  define GL_MAX_VIEWPORTS 0x825B
#endif
#ifndef GL_VIEWPORT_SUBPIXEL_BITS
#  define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#endif
#ifndef GL_VIEWPORT_BOUNDS_RANGE
#  define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#endif
#ifndef GL_LAYER_PROVOKING_VERTEX
#  define GL_LAYER_PROVOKING_VERTEX 0x825E
#endif
#ifndef GL_VIEWPORT_INDEX_PROVOKING_VERTEX
#  define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#endif
#ifndef GL_UNDEFINED_VERTEX
#  define GL_UNDEFINED_VERTEX 0x8260
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glViewportArrayv
typedef void (APIENTRYP PFNGLUXVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
typedef void (APIENTRYP PFNGLUXSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
typedef void (APIENTRYP PFNGLUXDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
typedef void (APIENTRYP PFNGLUXDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
typedef void (APIENTRYP PFNGLUXGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
typedef void (APIENTRYP PFNGLUXGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glViewportArrayv
extern PFNGLUXVIEWPORTARRAYVPROC glViewportArrayv;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
extern PFNGLUXVIEWPORTINDEXEDFPROC glViewportIndexedf;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
extern PFNGLUXVIEWPORTINDEXEDFVPROC glViewportIndexedfv;
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
extern PFNGLUXSCISSORARRAYVPROC glScissorArrayv;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
extern PFNGLUXSCISSORINDEXEDPROC glScissorIndexed;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
extern PFNGLUXSCISSORINDEXEDVPROC glScissorIndexedv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
extern PFNGLUXDEPTHRANGEARRAYVPROC glDepthRangeArrayv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
extern PFNGLUXDEPTHRANGEINDEXEDPROC glDepthRangeIndexed;
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
extern PFNGLUXGETFLOATI_VPROC glGetFloati_v;
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
extern PFNGLUXGETDOUBLEI_VPROC glGetDoublei_v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_viewport_array__
#define __GLUX_GL_ARB_viewport_array__

GLUX_NEW_PLUGIN(GL_ARB_viewport_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VIEWPORTS
#  define GL_MAX_VIEWPORTS 0x825B
#endif
#ifndef GL_VIEWPORT_SUBPIXEL_BITS
#  define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#endif
#ifndef GL_VIEWPORT_BOUNDS_RANGE
#  define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#endif
#ifndef GL_LAYER_PROVOKING_VERTEX
#  define GL_LAYER_PROVOKING_VERTEX 0x825E
#endif
#ifndef GL_VIEWPORT_INDEX_PROVOKING_VERTEX
#  define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#endif
#ifndef GL_UNDEFINED_VERTEX
#  define GL_UNDEFINED_VERTEX 0x8260
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glViewportArrayv
typedef void (APIENTRYP PFNGLUXVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
typedef void (APIENTRYP PFNGLUXSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
typedef void (APIENTRYP PFNGLUXDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
typedef void (APIENTRYP PFNGLUXDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
typedef void (APIENTRYP PFNGLUXGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
typedef void (APIENTRYP PFNGLUXGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glViewportArrayv
extern PFNGLUXVIEWPORTARRAYVPROC glViewportArrayv;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
extern PFNGLUXVIEWPORTINDEXEDFPROC glViewportIndexedf;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
extern PFNGLUXVIEWPORTINDEXEDFVPROC glViewportIndexedfv;
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
extern PFNGLUXSCISSORARRAYVPROC glScissorArrayv;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
extern PFNGLUXSCISSORINDEXEDPROC glScissorIndexed;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
extern PFNGLUXSCISSORINDEXEDVPROC glScissorIndexedv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
extern PFNGLUXDEPTHRANGEARRAYVPROC glDepthRangeArrayv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
extern PFNGLUXDEPTHRANGEINDEXEDPROC glDepthRangeIndexed;
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
extern PFNGLUXGETFLOATI_VPROC glGetFloati_v;
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
extern PFNGLUXGETDOUBLEI_VPROC glGetDoublei_v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:20 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_viewport_array__
#define __GLUX_GL_ARB_viewport_array__

GLUX_NEW_PLUGIN(GL_ARB_viewport_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VIEWPORTS
#  define GL_MAX_VIEWPORTS 0x825B
#endif
#ifndef GL_VIEWPORT_SUBPIXEL_BITS
#  define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#endif
#ifndef GL_VIEWPORT_BOUNDS_RANGE
#  define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#endif
#ifndef GL_LAYER_PROVOKING_VERTEX
#  define GL_LAYER_PROVOKING_VERTEX 0x825E
#endif
#ifndef GL_VIEWPORT_INDEX_PROVOKING_VERTEX
#  define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#endif
#ifndef GL_UNDEFINED_VERTEX
#  define GL_UNDEFINED_VERTEX 0x8260
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glViewportArrayv
typedef void (APIENTRYP PFNGLUXVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
typedef void (APIENTRYP PFNGLUXSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
typedef void (APIENTRYP PFNGLUXDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
typedef void (APIENTRYP PFNGLUXDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
typedef void (APIENTRYP PFNGLUXGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
typedef void (APIENTRYP PFNGLUXGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glViewportArrayv
extern PFNGLUXVIEWPORTARRAYVPROC glViewportArrayv;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
extern PFNGLUXVIEWPORTINDEXEDFPROC glViewportIndexedf;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
extern PFNGLUXVIEWPORTINDEXEDFVPROC glViewportIndexedfv;
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
extern PFNGLUXSCISSORARRAYVPROC glScissorArrayv;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
extern PFNGLUXSCISSORINDEXEDPROC glScissorIndexed;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
extern PFNGLUXSCISSORINDEXEDVPROC glScissorIndexedv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
extern PFNGLUXDEPTHRANGEARRAYVPROC glDepthRangeArrayv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
extern PFNGLUXDEPTHRANGEINDEXEDPROC glDepthRangeIndexed;
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
extern PFNGLUXGETFLOATI_VPROC glGetFloati_v;
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
extern PFNGLUXGETDOUBLEI_VPROC glGetDoublei_v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:00 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_viewport_array__
#define __GLUX_GL_ARB_viewport_array__

GLUX_NEW_PLUGIN(GL_ARB_viewport_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VIEWPORTS
#  define GL_MAX_VIEWPORTS 0x825B
#endif
#ifndef GL_VIEWPORT_SUBPIXEL_BITS
#  define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#endif
#ifndef GL_VIEWPORT_BOUNDS_RANGE
#  define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#endif
#ifndef GL_LAYER_PROVOKING_VERTEX
#  define GL_LAYER_PROVOKING_VERTEX 0x825E
#endif
#ifndef GL_VIEWPORT_INDEX_PROVOKING_VERTEX
#  define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#endif
#ifndef GL_UNDEFINED_VERTEX
#  define GL_UNDEFINED_VERTEX 0x8260
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glViewportArrayv
typedef void (APIENTRYP PFNGLUXVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
typedef void (APIENTRYP PFNGLUXSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
typedef void (APIENTRYP PFNGLUXDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
typedef void (APIENTRYP PFNGLUXDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
typedef void (APIENTRYP PFNGLUXGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
typedef void (APIENTRYP PFNGLUXGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glViewportArrayv
extern PFNGLUXVIEWPORTARRAYVPROC glViewportArrayv;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
extern PFNGLUXVIEWPORTINDEXEDFPROC glViewportIndexedf;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
extern PFNGLUXVIEWPORTINDEXEDFVPROC glViewportIndexedfv;
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
extern PFNGLUXSCISSORARRAYVPROC glScissorArrayv;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
extern PFNGLUXSCISSORINDEXEDPROC glScissorIndexed;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
extern PFNGLUXSCISSORINDEXEDVPROC glScissorIndexedv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
extern PFNGLUXDEPTHRANGEARRAYVPROC glDepthRangeArrayv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
extern PFNGLUXDEPTHRANGEINDEXEDPROC glDepthRangeIndexed;
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
extern PFNGLUXGETFLOATI_VPROC glGetFloati_v;
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
extern PFNGLUXGETDOUBLEI_VPROC glGetDoublei_v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:09 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_viewport_array__
#define __GLUX_GL_ARB_viewport_array__

GLUX_NEW_PLUGIN(GL_ARB_viewport_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VIEWPORTS
#  define GL_MAX_VIEWPORTS 0x825B
#endif
#ifndef GL_VIEWPORT_SUBPIXEL_BITS
#  define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#endif
#ifndef GL_VIEWPORT_BOUNDS_RANGE
#  define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#endif
#ifndef GL_LAYER_PROVOKING_VERTEX
#  define GL_LAYER_PROVOKING_VERTEX 0x825E
#endif
#ifndef GL_VIEWPORT_INDEX_PROVOKING_VERTEX
#  define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#endif
#ifndef GL_UNDEFINED_VERTEX
#  define GL_UNDEFINED_VERTEX 0x8260
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glViewportArrayv
typedef void (APIENTRYP PFNGLUXVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
typedef void (APIENTRYP PFNGLUXSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
typedef void (APIENTRYP PFNGLUXDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
typedef void (APIENTRYP PFNGLUXDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
typedef void (APIENTRYP PFNGLUXGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
typedef void (APIENTRYP PFNGLUXGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glViewportArrayv
extern PFNGLUXVIEWPORTARRAYVPROC glViewportArrayv;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
extern PFNGLUXVIEWPORTINDEXEDFPROC glViewportIndexedf;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
extern PFNGLUXVIEWPORTINDEXEDFVPROC glViewportIndexedfv;
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
extern PFNGLUXSCISSORARRAYVPROC glScissorArrayv;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
extern PFNGLUXSCISSORINDEXEDPROC glScissorIndexed;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
extern PFNGLUXSCISSORINDEXEDVPROC glScissorIndexedv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
extern PFNGLUXDEPTHRANGEARRAYVPROC glDepthRangeArrayv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
extern PFNGLUXDEPTHRANGEINDEXEDPROC glDepthRangeIndexed;
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
extern PFNGLUXGETFLOATI_VPROC glGetFloati_v;
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
extern PFNGLUXGETDOUBLEI_VPROC glGetDoublei_v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:22 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_viewport_array__
#define __GLUX_GL_ARB_viewport_array__

GLUX_NEW_PLUGIN(GL_ARB_viewport_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VIEWPORTS
#  define GL_MAX_VIEWPORTS 0x825B
#endif
#ifndef GL_VIEWPORT_SUBPIXEL_BITS
#  define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#endif
#ifndef GL_VIEWPORT_BOUNDS_RANGE
#  define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#endif
#ifndef GL_LAYER_PROVOKING_VERTEX
#  define GL_LAYER_PROVOKING_VERTEX 0x825E
#endif
#ifndef GL_VIEWPORT_INDEX_PROVOKING_VERTEX
#  define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#endif
#ifndef GL_UNDEFINED_VERTEX
#  define GL_UNDEFINED_VERTEX 0x8260
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glViewportArrayv
typedef void (APIENTRYP PFNGLUXVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
typedef void (APIENTRYP PFNGLUXSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
typedef void (APIENTRYP PFNGLUXDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
typedef void (APIENTRYP PFNGLUXDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
typedef void (APIENTRYP PFNGLUXGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
typedef void (APIENTRYP PFNGLUXGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glViewportArrayv
extern PFNGLUXVIEWPORTARRAYVPROC glViewportArrayv;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
extern PFNGLUXVIEWPORTINDEXEDFPROC glViewportIndexedf;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
extern PFNGLUXVIEWPORTINDEXEDFVPROC glViewportIndexedfv;
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
extern PFNGLUXSCISSORARRAYVPROC glScissorArrayv;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
extern PFNGLUXSCISSORINDEXEDPROC glScissorIndexed;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
extern PFNGLUXSCISSORINDEXEDVPROC glScissorIndexedv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
extern PFNGLUXDEPTHRANGEARRAYVPROC glDepthRangeArrayv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
extern PFNGLUXDEPTHRANGEINDEXEDPROC glDepthRangeIndexed;
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
extern PFNGLUXGETFLOATI_VPROC glGetFloati_v;
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
extern PFNGLUXGETDOUBLEI_VPROC glGetDoublei_v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:52:02 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_viewport_array__
#define __GLUX_GL_ARB_viewport_array__

GLUX_NEW_PLUGIN(GL_ARB_viewport_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VIEWPORTS
#  define GL_MAX_VIEWPORTS 0x825B
#endif
#ifndef GL_VIEWPORT_SUBPIXEL_BITS
#  define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#endif
#ifndef GL_VIEWPORT_BOUNDS_RANGE
#  define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#endif
#ifndef GL_LAYER_PROVOKING_VERTEX
#  define GL_LAYER_PROVOKING_VERTEX 0x825E
#endif
#ifndef GL_VIEWPORT_INDEX_PROVOKING_VERTEX
#  define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#endif
#ifndef GL_UNDEFINED_VERTEX
#  define GL_UNDEFINED_VERTEX 0x8260
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glViewportArrayv
typedef void (APIENTRYP PFNGLUXVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
typedef void (APIENTRYP PFNGLUXSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
typedef void (APIENTRYP PFNGLUXDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
typedef void (APIENTRYP PFNGLUXDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
typedef void (APIENTRYP PFNGLUXGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
typedef void (APIENTRYP PFNGLUXGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glViewportArrayv
extern PFNGLUXVIEWPORTARRAYVPROC glViewportArrayv;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
extern PFNGLUXVIEWPORTINDEXEDFPROC glViewportIndexedf;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
extern PFNGLUXVIEWPORTINDEXEDFVPROC glViewportIndexedfv;
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
extern PFNGLUXSCISSORARRAYVPROC glScissorArrayv;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
extern PFNGLUXSCISSORINDEXEDPROC glScissorIndexed;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
extern PFNGLUXSCISSORINDEXEDVPROC glScissorIndexedv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
extern PFNGLUXDEPTHRANGEARRAYVPROC glDepthRangeArrayv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
extern PFNGLUXDEPTHRANGEINDEXEDPROC glDepthRangeIndexed;
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
extern PFNGLUXGETFLOATI_VPROC glGetFloati_v;
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
extern PFNGLUXGETDOUBLEI_VPROC glGetDoublei_v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_viewport_array__
#define __GLUX_GL_ARB_viewport_array__

GLUX_NEW_PLUGIN(GL_ARB_viewport_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VIEWPORTS
#  define GL_MAX_VIEWPORTS 0x825B
#endif
#ifndef GL_VIEWPORT_SUBPIXEL_BITS
#  define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#endif
#ifndef GL_VIEWPORT_BOUNDS_RANGE
#  define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#endif
#ifndef GL_LAYER_PROVOKING_VERTEX
#  define GL_LAYER_PROVOKING_VERTEX 0x825E
#endif
#ifndef GL_VIEWPORT_INDEX_PROVOKING_VERTEX
#  define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#endif
#ifndef GL_UNDEFINED_VERTEX
#  define GL_UNDEFINED_VERTEX 0x8260
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glViewportArrayv
typedef void (APIENTRYP PFNGLUXVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
typedef void (APIENTRYP PFNGLUXSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
typedef void (APIENTRYP PFNGLUXDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
typedef void (APIENTRYP PFNGLUXDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
typedef void (APIENTRYP PFNGLUXGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
typedef void (APIENTRYP PFNGLUXGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glViewportArrayv
extern PFNGLUXVIEWPORTARRAYVPROC glViewportArrayv;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
extern PFNGLUXVIEWPORTINDEXEDFPROC glViewportIndexedf;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
extern PFNGLUXVIEWPORTINDEXEDFVPROC glViewportIndexedfv;
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
extern PFNGLUXSCISSORARRAYVPROC glScissorArrayv;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
extern PFNGLUXSCISSORINDEXEDPROC glScissorIndexed;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
extern PFNGLUXSCISSORINDEXEDVPROC glScissorIndexedv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
extern PFNGLUXDEPTHRANGEARRAYVPROC glDepthRangeArrayv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
extern PFNGLUXDEPTHRANGEINDEXEDPROC glDepthRangeIndexed;
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
extern PFNGLUXGETFLOATI_VPROC glGetFloati_v;
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
extern PFNGLUXGETDOUBLEI_VPROC glGetDoublei_v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:05 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_viewport_array__
#define __GLUX_GL_ARB_viewport_array__

GLUX_NEW_PLUGIN(GL_ARB_viewport_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VIEWPORTS
#  define GL_MAX_VIEWPORTS 0x825B
#endif
#ifndef GL_VIEWPORT_SUBPIXEL_BITS
#  define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#endif
#ifndef GL_VIEWPORT_BOUNDS_RANGE
#  define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#endif
#ifndef GL_LAYER_PROVOKING_VERTEX
#  define GL_LAYER_PROVOKING_VERTEX 0x825E
#endif
#ifndef GL_VIEWPORT_INDEX_PROVOKING_VERTEX
#  define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#endif
#ifndef GL_UNDEFINED_VERTEX
#  define GL_UNDEFINED_VERTEX 0x8260
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glViewportArrayv
typedef void (APIENTRYP PFNGLUXVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
typedef void (APIENTRYP PFNGLUXSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
typedef void (APIENTRYP PFNGLUXDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
typedef void (APIENTRYP PFNGLUXDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
typedef void (APIENTRYP PFNGLUXGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
typedef void (APIENTRYP PFNGLUXGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glViewportArrayv
extern PFNGLUXVIEWPORTARRAYVPROC glViewportArrayv;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
extern PFNGLUXVIEWPORTINDEXEDFPROC glViewportIndexedf;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
extern PFNGLUXVIEWPORTINDEXEDFVPROC glViewportIndexedfv;
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
extern PFNGLUXSCISSORARRAYVPROC glScissorArrayv;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
extern PFNGLUXSCISSORINDEXEDPROC glScissorIndexed;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
extern PFNGLUXSCISSORINDEXEDVPROC glScissorIndexedv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
extern PFNGLUXDEPTHRANGEARRAYVPROC glDepthRangeArrayv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
extern PFNGLUXDEPTHRANGEINDEXEDPROC glDepthRangeIndexed;
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
extern PFNGLUXGETFLOATI_VPROC glGetFloati_v;
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
extern PFNGLUXGETDOUBLEI_VPROC glGetDoublei_v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_viewport_array__
#define __GLUX_GL_ARB_viewport_array__

GLUX_NEW_PLUGIN(GL_ARB_viewport_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VIEWPORTS
#  define GL_MAX_VIEWPORTS 0x825B
#endif
#ifndef GL_VIEWPORT_SUBPIXEL_BITS
#  define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#endif
#ifndef GL_VIEWPORT_BOUNDS_RANGE
#  define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#endif
#ifndef GL_LAYER_PROVOKING_VERTEX
#  define GL_LAYER_PROVOKING_VERTEX 0x825E
#endif
#ifndef GL_VIEWPORT_INDEX_PROVOKING_VERTEX
#  define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#endif
#ifndef GL_UNDEFINED_VERTEX
#  define GL_UNDEFINED_VERTEX 0x8260
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glViewportArrayv
typedef void (APIENTRYP PFNGLUXVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
typedef void (APIENTRYP PFNGLUXSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
typedef void (APIENTRYP PFNGLUXDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
typedef void (APIENTRYP PFNGLUXDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
typedef void (APIENTRYP PFNGLUXGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
typedef void (APIENTRYP PFNGLUXGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glViewportArrayv
extern PFNGLUXVIEWPORTARRAYVPROC glViewportArrayv;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
extern PFNGLUXVIEWPORTINDEXEDFPROC glViewportIndexedf;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
extern PFNGLUXVIEWPORTINDEXEDFVPROC glViewportIndexedfv;
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
extern PFNGLUXSCISSORARRAYVPROC glScissorArrayv;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
extern PFNGLUXSCISSORINDEXEDPROC glScissorIndexed;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
extern PFNGLUXSCISSORINDEXEDVPROC glScissorIndexedv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
extern PFNGLUXDEPTHRANGEARRAYVPROC glDepthRangeArrayv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
extern PFNGLUXDEPTHRANGEINDEXEDPROC glDepthRangeIndexed;
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
extern PFNGLUXGETFLOATI_VPROC glGetFloati_v;
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
extern PFNGLUXGETDOUBLEI_VPROC glGetDoublei_v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_viewport_array__
#define __GLUX_GL_ARB_viewport_array__

GLUX_NEW_PLUGIN(GL_ARB_viewport_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VIEWPORTS
#  define GL_MAX_VIEWPORTS 0x825B
#endif
#ifndef GL_VIEWPORT_SUBPIXEL_BITS
#  define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#endif
#ifndef GL_VIEWPORT_BOUNDS_RANGE
#  define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#endif
#ifndef GL_LAYER_PROVOKING_VERTEX
#  define GL_LAYER_PROVOKING_VERTEX 0x825E
#endif
#ifndef GL_VIEWPORT_INDEX_PROVOKING_VERTEX
#  define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#endif
#ifndef GL_UNDEFINED_VERTEX
#  define GL_UNDEFINED_VERTEX 0x8260
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glViewportArrayv
typedef void (APIENTRYP PFNGLUXVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
typedef void (APIENTRYP PFNGLUXSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
typedef void (APIENTRYP PFNGLUXDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
typedef void (APIENTRYP PFNGLUXDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
typedef void (APIENTRYP PFNGLUXGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
typedef void (APIENTRYP PFNGLUXGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glViewportArrayv
extern PFNGLUXVIEWPORTARRAYVPROC glViewportArrayv;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
extern PFNGLUXVIEWPORTINDEXEDFPROC glViewportIndexedf;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
extern PFNGLUXVIEWPORTINDEXEDFVPROC glViewportIndexedfv;
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
extern PFNGLUXSCISSORARRAYVPROC glScissorArrayv;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
extern PFNGLUXSCISSORINDEXEDPROC glScissorIndexed;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
extern PFNGLUXSCISSORINDEXEDVPROC glScissorIndexedv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
extern PFNGLUXDEPTHRANGEARRAYVPROC glDepthRangeArrayv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
extern PFNGLUXDEPTHRANGEINDEXEDPROC glDepthRangeIndexed;
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
extern PFNGLUXGETFLOATI_VPROC glGetFloati_v;
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
extern PFNGLUXGETDOUBLEI_VPROC glGetDoublei_v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:41:58 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_viewport_array__
#define __GLUX_GL_ARB_viewport_array__

GLUX_NEW_PLUGIN(GL_ARB_viewport_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VIEWPORTS
#  define GL_MAX_VIEWPORTS 0x825B
#endif
#ifndef GL_VIEWPORT_SUBPIXEL_BITS
#  define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#endif
#ifndef GL_VIEWPORT_BOUNDS_RANGE
#  define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#endif
#ifndef GL_LAYER_PROVOKING_VERTEX
#  define GL_LAYER_PROVOKING_VERTEX 0x825E
#endif
#ifndef GL_VIEWPORT_INDEX_PROVOKING_VERTEX
#  define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#endif
#ifndef GL_UNDEFINED_VERTEX
#  define GL_UNDEFINED_VERTEX 0x8260
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glViewportArrayv
typedef void (APIENTRYP PFNGLUXVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
typedef void (APIENTRYP PFNGLUXSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
typedef void (APIENTRYP PFNGLUXDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
typedef void (APIENTRYP PFNGLUXDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
typedef void (APIENTRYP PFNGLUXGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
typedef void (APIENTRYP PFNGLUXGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glViewportArrayv
extern PFNGLUXVIEWPORTARRAYVPROC glViewportArrayv;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
extern PFNGLUXVIEWPORTINDEXEDFPROC glViewportIndexedf;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
extern PFNGLUXVIEWPORTINDEXEDFVPROC glViewportIndexedfv;
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
extern PFNGLUXSCISSORARRAYVPROC glScissorArrayv;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
extern PFNGLUXSCISSORINDEXEDPROC glScissorIndexed;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
extern PFNGLUXSCISSORINDEXEDVPROC glScissorIndexedv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
extern PFNGLUXDEPTHRANGEARRAYVPROC glDepthRangeArrayv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
extern PFNGLUXDEPTHRANGEINDEXEDPROC glDepthRangeIndexed;
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
extern PFNGLUXGETFLOATI_VPROC glGetFloati_v;
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
extern PFNGLUXGETDOUBLEI_VPROC glGetDoublei_v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:39 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_viewport_array__
#define __GLUX_GL_ARB_viewport_array__

GLUX_NEW_PLUGIN(GL_ARB_viewport_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VIEWPORTS
#  define GL_MAX_VIEWPORTS 0x825B
#endif
#ifndef GL_VIEWPORT_SUBPIXEL_BITS
#  define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#endif
#ifndef GL_VIEWPORT_BOUNDS_RANGE
#  define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#endif
#ifndef GL_LAYER_PROVOKING_VERTEX
#  define GL_LAYER_PROVOKING_VERTEX 0x825E
#endif
#ifndef GL_VIEWPORT_INDEX_PROVOKING_VERTEX
#  define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#endif
#ifndef GL_UNDEFINED_VERTEX
#  define GL_UNDEFINED_VERTEX 0x8260
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glViewportArrayv
typedef void (APIENTRYP PFNGLUXVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
typedef void (APIENTRYP PFNGLUXSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
typedef void (APIENTRYP PFNGLUXDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
typedef void (APIENTRYP PFNGLUXDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
typedef void (APIENTRYP PFNGLUXGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
typedef void (APIENTRYP PFNGLUXGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glViewportArrayv
extern PFNGLUXVIEWPORTARRAYVPROC glViewportArrayv;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
extern PFNGLUXVIEWPORTINDEXEDFPROC glViewportIndexedf;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
extern PFNGLUXVIEWPORTINDEXEDFVPROC glViewportIndexedfv;
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
extern PFNGLUXSCISSORARRAYVPROC glScissorArrayv;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
extern PFNGLUXSCISSORINDEXEDPROC glScissorIndexed;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
extern PFNGLUXSCISSORINDEXEDVPROC glScissorIndexedv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
extern PFNGLUXDEPTHRANGEARRAYVPROC glDepthRangeArrayv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
extern PFNGLUXDEPTHRANGEINDEXEDPROC glDepthRangeIndexed;
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
extern PFNGLUXGETFLOATI_VPROC glGetFloati_v;
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
extern PFNGLUXGETDOUBLEI_VPROC glGetDoublei_v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:09:59 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_viewport_array__
#define __GLUX_GL_ARB_viewport_array__

GLUX_NEW_PLUGIN(GL_ARB_viewport_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VIEWPORTS
#  define GL_MAX_VIEWPORTS 0x825B
#endif
#ifndef GL_VIEWPORT_SUBPIXEL_BITS
#  define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#endif
#ifndef GL_VIEWPORT_BOUNDS_RANGE
#  define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#endif
#ifndef GL_LAYER_PROVOKING_VERTEX
#  define GL_LAYER_PROVOKING_VERTEX 0x825E
#endif
#ifndef GL_VIEWPORT_INDEX_PROVOKING_VERTEX
#  define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#endif
#ifndef GL_UNDEFINED_VERTEX
#  define GL_UNDEFINED_VERTEX 0x8260
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glViewportArrayv
typedef void (APIENTRYP PFNGLUXVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
typedef void (APIENTRYP PFNGLUXSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
typedef void (APIENTRYP PFNGLUXDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
typedef void (APIENTRYP PFNGLUXDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
typedef void (APIENTRYP PFNGLUXGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
typedef void (APIENTRYP PFNGLUXGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glViewportArrayv
extern PFNGLUXVIEWPORTARRAYVPROC glViewportArrayv;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
extern PFNGLUXVIEWPORTINDEXEDFPROC glViewportIndexedf;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
extern PFNGLUXVIEWPORTINDEXEDFVPROC glViewportIndexedfv;
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
extern PFNGLUXSCISSORARRAYVPROC glScissorArrayv;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
extern PFNGLUXSCISSORINDEXEDPROC glScissorIndexed;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
extern PFNGLUXSCISSORINDEXEDVPROC glScissorIndexedv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
extern PFNGLUXDEPTHRANGEARRAYVPROC glDepthRangeArrayv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
extern PFNGLUXDEPTHRANGEINDEXEDPROC glDepthRangeIndexed;
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
extern PFNGLUXGETFLOATI_VPROC glGetFloati_v;
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
extern PFNGLUXGETDOUBLEI_VPROC glGetDoublei_v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:19:59 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_viewport_array__
#define __GLUX_GL_ARB_viewport_array__

GLUX_NEW_PLUGIN(GL_ARB_viewport_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VIEWPORTS
#  define GL_MAX_VIEWPORTS 0x825B
#endif
#ifndef GL_VIEWPORT_SUBPIXEL_BITS
#  define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#endif
#ifndef GL_VIEWPORT_BOUNDS_RANGE
#  define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#endif
#ifndef GL_LAYER_PROVOKING_VERTEX
#  define GL_LAYER_PROVOKING_VERTEX 0x825E
#endif
#ifndef GL_VIEWPORT_INDEX_PROVOKING_VERTEX
#  define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#endif
#ifndef GL_UNDEFINED_VERTEX
#  define GL_UNDEFINED_VERTEX 0x8260
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glViewportArrayv
typedef void (APIENTRYP PFNGLUXVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
typedef void (APIENTRYP PFNGLUXSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
typedef void (APIENTRYP PFNGLUXDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
typedef void (APIENTRYP PFNGLUXDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
typedef void (APIENTRYP PFNGLUXGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
typedef void (APIENTRYP PFNGLUXGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glViewportArrayv
extern PFNGLUXVIEWPORTARRAYVPROC glViewportArrayv;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
extern PFNGLUXVIEWPORTINDEXEDFPROC glViewportIndexedf;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
extern PFNGLUXVIEWPORTINDEXEDFVPROC glViewportIndexedfv;
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
extern PFNGLUXSCISSORARRAYVPROC glScissorArrayv;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
extern PFNGLUXSCISSORINDEXEDPROC glScissorIndexed;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
extern PFNGLUXSCISSORINDEXEDVPROC glScissorIndexedv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
extern PFNGLUXDEPTHRANGEARRAYVPROC glDepthRangeArrayv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
extern PFNGLUXDEPTHRANGEINDEXEDPROC glDepthRangeIndexed;
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
extern PFNGLUXGETFLOATI_VPROC glGetFloati_v;
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
extern PFNGLUXGETDOUBLEI_VPROC glGetDoublei_v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:42:57 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_viewport_array__
#define __GLUX_GL_ARB_viewport_array__

GLUX_NEW_PLUGIN(GL_ARB_viewport_array)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VIEWPORTS
#  define GL_MAX_VIEWPORTS 0x825B
#endif
#ifndef GL_VIEWPORT_SUBPIXEL_BITS
#  define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#endif
#ifndef GL_VIEWPORT_BOUNDS_RANGE
#  define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#endif
#ifndef GL_LAYER_PROVOKING_VERTEX
#  define GL_LAYER_PROVOKING_VERTEX 0x825E
#endif
#ifndef GL_VIEWPORT_INDEX_PROVOKING_VERTEX
#  define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#endif
#ifndef GL_UNDEFINED_VERTEX
#  define GL_UNDEFINED_VERTEX 0x8260
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glViewportArrayv
typedef void (APIENTRYP PFNGLUXVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
typedef void (APIENTRYP PFNGLUXSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
typedef void (APIENTRYP PFNGLUXDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
typedef void (APIENTRYP PFNGLUXDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
typedef void (APIENTRYP PFNGLUXGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
typedef void (APIENTRYP PFNGLUXGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glViewportArrayv
extern PFNGLUXVIEWPORTARRAYVPROC glViewportArrayv;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
extern PFNGLUXVIEWPORTINDEXEDFPROC glViewportIndexedf;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
extern PFNGLUXVIEWPORTINDEXEDFVPROC glViewportIndexedfv;
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
extern PFNGLUXSCISSORARRAYVPROC glScissorArrayv;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
extern PFNGLUXSCISSORINDEXEDPROC glScissorIndexed;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
extern PFNGLUXSCISSORINDEXEDVPROC glScissorIndexedv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
extern PFNGLUXDEPTHRANGEARRAYVPROC glDepthRangeArrayv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
extern PFNGLUXDEPTHRANGEINDEXEDPROC glDepthRangeIndexed;
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
extern PFNGLUXGETFLOATI_VPROC glGetFloati_v;
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
extern PFNGLUXGETDOUBLEI_VPROC glGetDoublei_v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
