
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:25 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_framebuffer_object__
#define __GLUX_GL_EXT_framebuffer_object__

GLUX_NEW_PLUGIN(GL_EXT_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION_EXT
#  define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE_EXT
#  define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
#endif
#ifndef GL_FRAMEBUFFER_BINDING_EXT
#  define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
#endif
#ifndef GL_RENDERBUFFER_BINDING_EXT
#  define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE_EXT
#  define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 0x8CD9
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 0x8CDA
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED_EXT
#  define GL_FRAMEBUFFER_UNSUPPORTED_EXT 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS_EXT
#  define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0_EXT
#  define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1_EXT
#  define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2_EXT
#  define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3_EXT
#  define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4_EXT
#  define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5_EXT
#  define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6_EXT
#  define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7_EXT
#  define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8_EXT
#  define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9_EXT
#  define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10_EXT
#  define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11_EXT
#  define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12_EXT
#  define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13_EXT
#  define GL_COLOR_ATTACHMENT13_EXT 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14_EXT
#  define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15_EXT
#  define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT_EXT
#  define GL_DEPTH_ATTACHMENT_EXT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT_EXT
#  define GL_STENCIL_ATTACHMENT_EXT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER_EXT
#  define GL_FRAMEBUFFER_EXT 0x8D40
#endif
#ifndef GL_RENDERBUFFER_EXT
#  define GL_RENDERBUFFER_EXT 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH_EXT
#  define GL_RENDERBUFFER_WIDTH_EXT 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT_EXT
#  define GL_RENDERBUFFER_HEIGHT_EXT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1_EXT
#  define GL_STENCIL_INDEX1_EXT 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4_EXT
#  define GL_STENCIL_INDEX4_EXT 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8_EXT
#  define GL_STENCIL_INDEX8_EXT 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16_EXT
#  define GL_STENCIL_INDEX16_EXT 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE_EXT
#  define GL_RENDERBUFFER_RED_SIZE_EXT 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE_EXT
#  define GL_RENDERBUFFER_GREEN_SIZE_EXT 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE_EXT
#  define GL_RENDERBUFFER_BLUE_SIZE_EXT 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE_EXT
#  define GL_RENDERBUFFER_ALPHA_SIZE_EXT 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE_EXT
#  define GL_RENDERBUFFER_DEPTH_SIZE_EXT 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE_EXT
#  define GL_RENDERBUFFER_STENCIL_SIZE_EXT 0x8D55
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFEREXTPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFEREXTPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPEXTPROC) (GLenum target);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
extern PFNGLUXISRENDERBUFFEREXTPROC glIsRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
extern PFNGLUXBINDRENDERBUFFEREXTPROC glBindRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
extern PFNGLUXDELETERENDERBUFFERSEXTPROC glDeleteRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
extern PFNGLUXGENRENDERBUFFERSEXTPROC glGenRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
extern PFNGLUXRENDERBUFFERSTORAGEEXTPROC glRenderbufferStorageEXT;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
extern PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC glGetRenderbufferParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
extern PFNGLUXISFRAMEBUFFEREXTPROC glIsFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
extern PFNGLUXBINDFRAMEBUFFEREXTPROC glBindFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
extern PFNGLUXDELETEFRAMEBUFFERSEXTPROC glDeleteFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
extern PFNGLUXGENFRAMEBUFFERSEXTPROC glGenFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
extern PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC glCheckFramebufferStatusEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC glFramebufferTexture1DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC glFramebufferTexture2DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC glFramebufferTexture3DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
extern PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC glFramebufferRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glGetFramebufferAttachmentParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
extern PFNGLUXGENERATEMIPMAPEXTPROC glGenerateMipmapEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:43 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_framebuffer_object__
#define __GLUX_GL_EXT_framebuffer_object__

GLUX_NEW_PLUGIN(GL_EXT_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION_EXT
#  define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE_EXT
#  define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
#endif
#ifndef GL_FRAMEBUFFER_BINDING_EXT
#  define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
#endif
#ifndef GL_RENDERBUFFER_BINDING_EXT
#  define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE_EXT
#  define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 0x8CD9
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 0x8CDA
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED_EXT
#  define GL_FRAMEBUFFER_UNSUPPORTED_EXT 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS_EXT
#  define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0_EXT
#  define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1_EXT
#  define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2_EXT
#  define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3_EXT
#  define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4_EXT
#  define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5_EXT
#  define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6_EXT
#  define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7_EXT
#  define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8_EXT
#  define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9_EXT
#  define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10_EXT
#  define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11_EXT
#  define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12_EXT
#  define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13_EXT
#  define GL_COLOR_ATTACHMENT13_EXT 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14_EXT
#  define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15_EXT
#  define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT_EXT
#  define GL_DEPTH_ATTACHMENT_EXT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT_EXT
#  define GL_STENCIL_ATTACHMENT_EXT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER_EXT
#  define GL_FRAMEBUFFER_EXT 0x8D40
#endif
#ifndef GL_RENDERBUFFER_EXT
#  define GL_RENDERBUFFER_EXT 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH_EXT
#  define GL_RENDERBUFFER_WIDTH_EXT 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT_EXT
#  define GL_RENDERBUFFER_HEIGHT_EXT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1_EXT
#  define GL_STENCIL_INDEX1_EXT 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4_EXT
#  define GL_STENCIL_INDEX4_EXT 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8_EXT
#  define GL_STENCIL_INDEX8_EXT 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16_EXT
#  define GL_STENCIL_INDEX16_EXT 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE_EXT
#  define GL_RENDERBUFFER_RED_SIZE_EXT 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE_EXT
#  define GL_RENDERBUFFER_GREEN_SIZE_EXT 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE_EXT
#  define GL_RENDERBUFFER_BLUE_SIZE_EXT 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE_EXT
#  define GL_RENDERBUFFER_ALPHA_SIZE_EXT 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE_EXT
#  define GL_RENDERBUFFER_DEPTH_SIZE_EXT 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE_EXT
#  define GL_RENDERBUFFER_STENCIL_SIZE_EXT 0x8D55
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFEREXTPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFEREXTPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPEXTPROC) (GLenum target);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
extern PFNGLUXISRENDERBUFFEREXTPROC glIsRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
extern PFNGLUXBINDRENDERBUFFEREXTPROC glBindRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
extern PFNGLUXDELETERENDERBUFFERSEXTPROC glDeleteRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
extern PFNGLUXGENRENDERBUFFERSEXTPROC glGenRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
extern PFNGLUXRENDERBUFFERSTORAGEEXTPROC glRenderbufferStorageEXT;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
extern PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC glGetRenderbufferParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
extern PFNGLUXISFRAMEBUFFEREXTPROC glIsFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
extern PFNGLUXBINDFRAMEBUFFEREXTPROC glBindFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
extern PFNGLUXDELETEFRAMEBUFFERSEXTPROC glDeleteFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
extern PFNGLUXGENFRAMEBUFFERSEXTPROC glGenFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
extern PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC glCheckFramebufferStatusEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC glFramebufferTexture1DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC glFramebufferTexture2DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC glFramebufferTexture3DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
extern PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC glFramebufferRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glGetFramebufferAttachmentParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
extern PFNGLUXGENERATEMIPMAPEXTPROC glGenerateMipmapEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:53 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_framebuffer_object__
#define __GLUX_GL_EXT_framebuffer_object__

GLUX_NEW_PLUGIN(GL_EXT_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION_EXT
#  define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE_EXT
#  define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
#endif
#ifndef GL_FRAMEBUFFER_BINDING_EXT
#  define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
#endif
#ifndef GL_RENDERBUFFER_BINDING_EXT
#  define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE_EXT
#  define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 0x8CD9
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 0x8CDA
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED_EXT
#  define GL_FRAMEBUFFER_UNSUPPORTED_EXT 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS_EXT
#  define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0_EXT
#  define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1_EXT
#  define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2_EXT
#  define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3_EXT
#  define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4_EXT
#  define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5_EXT
#  define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6_EXT
#  define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7_EXT
#  define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8_EXT
#  define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9_EXT
#  define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10_EXT
#  define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11_EXT
#  define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12_EXT
#  define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13_EXT
#  define GL_COLOR_ATTACHMENT13_EXT 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14_EXT
#  define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15_EXT
#  define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT_EXT
#  define GL_DEPTH_ATTACHMENT_EXT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT_EXT
#  define GL_STENCIL_ATTACHMENT_EXT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER_EXT
#  define GL_FRAMEBUFFER_EXT 0x8D40
#endif
#ifndef GL_RENDERBUFFER_EXT
#  define GL_RENDERBUFFER_EXT 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH_EXT
#  define GL_RENDERBUFFER_WIDTH_EXT 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT_EXT
#  define GL_RENDERBUFFER_HEIGHT_EXT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1_EXT
#  define GL_STENCIL_INDEX1_EXT 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4_EXT
#  define GL_STENCIL_INDEX4_EXT 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8_EXT
#  define GL_STENCIL_INDEX8_EXT 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16_EXT
#  define GL_STENCIL_INDEX16_EXT 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE_EXT
#  define GL_RENDERBUFFER_RED_SIZE_EXT 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE_EXT
#  define GL_RENDERBUFFER_GREEN_SIZE_EXT 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE_EXT
#  define GL_RENDERBUFFER_BLUE_SIZE_EXT 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE_EXT
#  define GL_RENDERBUFFER_ALPHA_SIZE_EXT 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE_EXT
#  define GL_RENDERBUFFER_DEPTH_SIZE_EXT 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE_EXT
#  define GL_RENDERBUFFER_STENCIL_SIZE_EXT 0x8D55
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFEREXTPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFEREXTPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPEXTPROC) (GLenum target);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
extern PFNGLUXISRENDERBUFFEREXTPROC glIsRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
extern PFNGLUXBINDRENDERBUFFEREXTPROC glBindRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
extern PFNGLUXDELETERENDERBUFFERSEXTPROC glDeleteRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
extern PFNGLUXGENRENDERBUFFERSEXTPROC glGenRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
extern PFNGLUXRENDERBUFFERSTORAGEEXTPROC glRenderbufferStorageEXT;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
extern PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC glGetRenderbufferParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
extern PFNGLUXISFRAMEBUFFEREXTPROC glIsFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
extern PFNGLUXBINDFRAMEBUFFEREXTPROC glBindFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
extern PFNGLUXDELETEFRAMEBUFFERSEXTPROC glDeleteFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
extern PFNGLUXGENFRAMEBUFFERSEXTPROC glGenFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
extern PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC glCheckFramebufferStatusEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC glFramebufferTexture1DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC glFramebufferTexture2DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC glFramebufferTexture3DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
extern PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC glFramebufferRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glGetFramebufferAttachmentParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
extern PFNGLUXGENERATEMIPMAPEXTPROC glGenerateMipmapEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:13 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_framebuffer_object__
#define __GLUX_GL_EXT_framebuffer_object__

GLUX_NEW_PLUGIN(GL_EXT_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION_EXT
#  define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE_EXT
#  define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
#endif
#ifndef GL_FRAMEBUFFER_BINDING_EXT
#  define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
#endif
#ifndef GL_RENDERBUFFER_BINDING_EXT
#  define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE_EXT
#  define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 0x8CD9
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 0x8CDA
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED_EXT
#  define GL_FRAMEBUFFER_UNSUPPORTED_EXT 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS_EXT
#  define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0_EXT
#  define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1_EXT
#  define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2_EXT
#  define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3_EXT
#  define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4_EXT
#  define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5_EXT
#  define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6_EXT
#  define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7_EXT
#  define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8_EXT
#  define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9_EXT
#  define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10_EXT
#  define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11_EXT
#  define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12_EXT
#  define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13_EXT
#  define GL_COLOR_ATTACHMENT13_EXT 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14_EXT
#  define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15_EXT
#  define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT_EXT
#  define GL_DEPTH_ATTACHMENT_EXT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT_EXT
#  define GL_STENCIL_ATTACHMENT_EXT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER_EXT
#  define GL_FRAMEBUFFER_EXT 0x8D40
#endif
#ifndef GL_RENDERBUFFER_EXT
#  define GL_RENDERBUFFER_EXT 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH_EXT
#  define GL_RENDERBUFFER_WIDTH_EXT 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT_EXT
#  define GL_RENDERBUFFER_HEIGHT_EXT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1_EXT
#  define GL_STENCIL_INDEX1_EXT 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4_EXT
#  define GL_STENCIL_INDEX4_EXT 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8_EXT
#  define GL_STENCIL_INDEX8_EXT 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16_EXT
#  define GL_STENCIL_INDEX16_EXT 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE_EXT
#  define GL_RENDERBUFFER_RED_SIZE_EXT 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE_EXT
#  define GL_RENDERBUFFER_GREEN_SIZE_EXT 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE_EXT
#  define GL_RENDERBUFFER_BLUE_SIZE_EXT 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE_EXT
#  define GL_RENDERBUFFER_ALPHA_SIZE_EXT 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE_EXT
#  define GL_RENDERBUFFER_DEPTH_SIZE_EXT 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE_EXT
#  define GL_RENDERBUFFER_STENCIL_SIZE_EXT 0x8D55
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFEREXTPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFEREXTPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPEXTPROC) (GLenum target);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
extern PFNGLUXISRENDERBUFFEREXTPROC glIsRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
extern PFNGLUXBINDRENDERBUFFEREXTPROC glBindRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
extern PFNGLUXDELETERENDERBUFFERSEXTPROC glDeleteRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
extern PFNGLUXGENRENDERBUFFERSEXTPROC glGenRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
extern PFNGLUXRENDERBUFFERSTORAGEEXTPROC glRenderbufferStorageEXT;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
extern PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC glGetRenderbufferParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
extern PFNGLUXISFRAMEBUFFEREXTPROC glIsFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
extern PFNGLUXBINDFRAMEBUFFEREXTPROC glBindFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
extern PFNGLUXDELETEFRAMEBUFFERSEXTPROC glDeleteFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
extern PFNGLUXGENFRAMEBUFFERSEXTPROC glGenFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
extern PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC glCheckFramebufferStatusEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC glFramebufferTexture1DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC glFramebufferTexture2DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC glFramebufferTexture3DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
extern PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC glFramebufferRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glGetFramebufferAttachmentParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
extern PFNGLUXGENERATEMIPMAPEXTPROC glGenerateMipmapEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:29 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_framebuffer_object__
#define __GLUX_GL_EXT_framebuffer_object__

GLUX_NEW_PLUGIN(GL_EXT_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION_EXT
#  define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE_EXT
#  define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
#endif
#ifndef GL_FRAMEBUFFER_BINDING_EXT
#  define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
#endif
#ifndef GL_RENDERBUFFER_BINDING_EXT
#  define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE_EXT
#  define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 0x8CD9
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 0x8CDA
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED_EXT
#  define GL_FRAMEBUFFER_UNSUPPORTED_EXT 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS_EXT
#  define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0_EXT
#  define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1_EXT
#  define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2_EXT
#  define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3_EXT
#  define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4_EXT
#  define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5_EXT
#  define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6_EXT
#  define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7_EXT
#  define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8_EXT
#  define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9_EXT
#  define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10_EXT
#  define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11_EXT
#  define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12_EXT
#  define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13_EXT
#  define GL_COLOR_ATTACHMENT13_EXT 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14_EXT
#  define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15_EXT
#  define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT_EXT
#  define GL_DEPTH_ATTACHMENT_EXT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT_EXT
#  define GL_STENCIL_ATTACHMENT_EXT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER_EXT
#  define GL_FRAMEBUFFER_EXT 0x8D40
#endif
#ifndef GL_RENDERBUFFER_EXT
#  define GL_RENDERBUFFER_EXT 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH_EXT
#  define GL_RENDERBUFFER_WIDTH_EXT 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT_EXT
#  define GL_RENDERBUFFER_HEIGHT_EXT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1_EXT
#  define GL_STENCIL_INDEX1_EXT 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4_EXT
#  define GL_STENCIL_INDEX4_EXT 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8_EXT
#  define GL_STENCIL_INDEX8_EXT 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16_EXT
#  define GL_STENCIL_INDEX16_EXT 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE_EXT
#  define GL_RENDERBUFFER_RED_SIZE_EXT 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE_EXT
#  define GL_RENDERBUFFER_GREEN_SIZE_EXT 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE_EXT
#  define GL_RENDERBUFFER_BLUE_SIZE_EXT 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE_EXT
#  define GL_RENDERBUFFER_ALPHA_SIZE_EXT 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE_EXT
#  define GL_RENDERBUFFER_DEPTH_SIZE_EXT 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE_EXT
#  define GL_RENDERBUFFER_STENCIL_SIZE_EXT 0x8D55
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFEREXTPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFEREXTPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPEXTPROC) (GLenum target);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
extern PFNGLUXISRENDERBUFFEREXTPROC glIsRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
extern PFNGLUXBINDRENDERBUFFEREXTPROC glBindRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
extern PFNGLUXDELETERENDERBUFFERSEXTPROC glDeleteRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
extern PFNGLUXGENRENDERBUFFERSEXTPROC glGenRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
extern PFNGLUXRENDERBUFFERSTORAGEEXTPROC glRenderbufferStorageEXT;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
extern PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC glGetRenderbufferParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
extern PFNGLUXISFRAMEBUFFEREXTPROC glIsFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
extern PFNGLUXBINDFRAMEBUFFEREXTPROC glBindFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
extern PFNGLUXDELETEFRAMEBUFFERSEXTPROC glDeleteFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
extern PFNGLUXGENFRAMEBUFFERSEXTPROC glGenFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
extern PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC glCheckFramebufferStatusEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC glFramebufferTexture1DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC glFramebufferTexture2DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC glFramebufferTexture3DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
extern PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC glFramebufferRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glGetFramebufferAttachmentParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
extern PFNGLUXGENERATEMIPMAPEXTPROC glGenerateMipmapEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:32 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_framebuffer_object__
#define __GLUX_GL_EXT_framebuffer_object__

GLUX_NEW_PLUGIN(GL_EXT_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION_EXT
#  define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE_EXT
#  define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
#endif
#ifndef GL_FRAMEBUFFER_BINDING_EXT
#  define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
#endif
#ifndef GL_RENDERBUFFER_BINDING_EXT
#  define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE_EXT
#  define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 0x8CD9
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 0x8CDA
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED_EXT
#  define GL_FRAMEBUFFER_UNSUPPORTED_EXT 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS_EXT
#  define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0_EXT
#  define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1_EXT
#  define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2_EXT
#  define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3_EXT
#  define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4_EXT
#  define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5_EXT
#  define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6_EXT
#  define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7_EXT
#  define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8_EXT
#  define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9_EXT
#  define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10_EXT
#  define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11_EXT
#  define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12_EXT
#  define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13_EXT
#  define GL_COLOR_ATTACHMENT13_EXT 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14_EXT
#  define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15_EXT
#  define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT_EXT
#  define GL_DEPTH_ATTACHMENT_EXT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT_EXT
#  define GL_STENCIL_ATTACHMENT_EXT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER_EXT
#  define GL_FRAMEBUFFER_EXT 0x8D40
#endif
#ifndef GL_RENDERBUFFER_EXT
#  define GL_RENDERBUFFER_EXT 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH_EXT
#  define GL_RENDERBUFFER_WIDTH_EXT 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT_EXT
#  define GL_RENDERBUFFER_HEIGHT_EXT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1_EXT
#  define GL_STENCIL_INDEX1_EXT 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4_EXT
#  define GL_STENCIL_INDEX4_EXT 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8_EXT
#  define GL_STENCIL_INDEX8_EXT 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16_EXT
#  define GL_STENCIL_INDEX16_EXT 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE_EXT
#  define GL_RENDERBUFFER_RED_SIZE_EXT 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE_EXT
#  define GL_RENDERBUFFER_GREEN_SIZE_EXT 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE_EXT
#  define GL_RENDERBUFFER_BLUE_SIZE_EXT 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE_EXT
#  define GL_RENDERBUFFER_ALPHA_SIZE_EXT 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE_EXT
#  define GL_RENDERBUFFER_DEPTH_SIZE_EXT 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE_EXT
#  define GL_RENDERBUFFER_STENCIL_SIZE_EXT 0x8D55
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFEREXTPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFEREXTPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPEXTPROC) (GLenum target);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
extern PFNGLUXISRENDERBUFFEREXTPROC glIsRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
extern PFNGLUXBINDRENDERBUFFEREXTPROC glBindRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
extern PFNGLUXDELETERENDERBUFFERSEXTPROC glDeleteRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
extern PFNGLUXGENRENDERBUFFERSEXTPROC glGenRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
extern PFNGLUXRENDERBUFFERSTORAGEEXTPROC glRenderbufferStorageEXT;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
extern PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC glGetRenderbufferParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
extern PFNGLUXISFRAMEBUFFEREXTPROC glIsFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
extern PFNGLUXBINDFRAMEBUFFEREXTPROC glBindFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
extern PFNGLUXDELETEFRAMEBUFFERSEXTPROC glDeleteFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
extern PFNGLUXGENFRAMEBUFFERSEXTPROC glGenFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
extern PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC glCheckFramebufferStatusEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC glFramebufferTexture1DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC glFramebufferTexture2DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC glFramebufferTexture3DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
extern PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC glFramebufferRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glGetFramebufferAttachmentParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
extern PFNGLUXGENERATEMIPMAPEXTPROC glGenerateMipmapEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:53 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_framebuffer_object__
#define __GLUX_GL_EXT_framebuffer_object__

GLUX_NEW_PLUGIN(GL_EXT_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION_EXT
#  define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE_EXT
#  define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
#endif
#ifndef GL_FRAMEBUFFER_BINDING_EXT
#  define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
#endif
#ifndef GL_RENDERBUFFER_BINDING_EXT
#  define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE_EXT
#  define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 0x8CD9
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 0x8CDA
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED_EXT
#  define GL_FRAMEBUFFER_UNSUPPORTED_EXT 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS_EXT
#  define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0_EXT
#  define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1_EXT
#  define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2_EXT
#  define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3_EXT
#  define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4_EXT
#  define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5_EXT
#  define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6_EXT
#  define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7_EXT
#  define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8_EXT
#  define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9_EXT
#  define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10_EXT
#  define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11_EXT
#  define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12_EXT
#  define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13_EXT
#  define GL_COLOR_ATTACHMENT13_EXT 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14_EXT
#  define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15_EXT
#  define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT_EXT
#  define GL_DEPTH_ATTACHMENT_EXT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT_EXT
#  define GL_STENCIL_ATTACHMENT_EXT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER_EXT
#  define GL_FRAMEBUFFER_EXT 0x8D40
#endif
#ifndef GL_RENDERBUFFER_EXT
#  define GL_RENDERBUFFER_EXT 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH_EXT
#  define GL_RENDERBUFFER_WIDTH_EXT 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT_EXT
#  define GL_RENDERBUFFER_HEIGHT_EXT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1_EXT
#  define GL_STENCIL_INDEX1_EXT 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4_EXT
#  define GL_STENCIL_INDEX4_EXT 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8_EXT
#  define GL_STENCIL_INDEX8_EXT 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16_EXT
#  define GL_STENCIL_INDEX16_EXT 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE_EXT
#  define GL_RENDERBUFFER_RED_SIZE_EXT 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE_EXT
#  define GL_RENDERBUFFER_GREEN_SIZE_EXT 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE_EXT
#  define GL_RENDERBUFFER_BLUE_SIZE_EXT 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE_EXT
#  define GL_RENDERBUFFER_ALPHA_SIZE_EXT 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE_EXT
#  define GL_RENDERBUFFER_DEPTH_SIZE_EXT 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE_EXT
#  define GL_RENDERBUFFER_STENCIL_SIZE_EXT 0x8D55
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFEREXTPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFEREXTPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPEXTPROC) (GLenum target);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
extern PFNGLUXISRENDERBUFFEREXTPROC glIsRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
extern PFNGLUXBINDRENDERBUFFEREXTPROC glBindRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
extern PFNGLUXDELETERENDERBUFFERSEXTPROC glDeleteRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
extern PFNGLUXGENRENDERBUFFERSEXTPROC glGenRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
extern PFNGLUXRENDERBUFFERSTORAGEEXTPROC glRenderbufferStorageEXT;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
extern PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC glGetRenderbufferParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
extern PFNGLUXISFRAMEBUFFEREXTPROC glIsFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
extern PFNGLUXBINDFRAMEBUFFEREXTPROC glBindFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
extern PFNGLUXDELETEFRAMEBUFFERSEXTPROC glDeleteFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
extern PFNGLUXGENFRAMEBUFFERSEXTPROC glGenFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
extern PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC glCheckFramebufferStatusEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC glFramebufferTexture1DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC glFramebufferTexture2DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC glFramebufferTexture3DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
extern PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC glFramebufferRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glGetFramebufferAttachmentParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
extern PFNGLUXGENERATEMIPMAPEXTPROC glGenerateMipmapEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:28:02 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_framebuffer_object__
#define __GLUX_GL_EXT_framebuffer_object__

GLUX_NEW_PLUGIN(GL_EXT_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION_EXT
#  define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE_EXT
#  define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
#endif
#ifndef GL_FRAMEBUFFER_BINDING_EXT
#  define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
#endif
#ifndef GL_RENDERBUFFER_BINDING_EXT
#  define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE_EXT
#  define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 0x8CD9
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 0x8CDA
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED_EXT
#  define GL_FRAMEBUFFER_UNSUPPORTED_EXT 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS_EXT
#  define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0_EXT
#  define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1_EXT
#  define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2_EXT
#  define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3_EXT
#  define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4_EXT
#  define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5_EXT
#  define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6_EXT
#  define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7_EXT
#  define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8_EXT
#  define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9_EXT
#  define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10_EXT
#  define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11_EXT
#  define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12_EXT
#  define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13_EXT
#  define GL_COLOR_ATTACHMENT13_EXT 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14_EXT
#  define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15_EXT
#  define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT_EXT
#  define GL_DEPTH_ATTACHMENT_EXT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT_EXT
#  define GL_STENCIL_ATTACHMENT_EXT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER_EXT
#  define GL_FRAMEBUFFER_EXT 0x8D40
#endif
#ifndef GL_RENDERBUFFER_EXT
#  define GL_RENDERBUFFER_EXT 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH_EXT
#  define GL_RENDERBUFFER_WIDTH_EXT 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT_EXT
#  define GL_RENDERBUFFER_HEIGHT_EXT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1_EXT
#  define GL_STENCIL_INDEX1_EXT 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4_EXT
#  define GL_STENCIL_INDEX4_EXT 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8_EXT
#  define GL_STENCIL_INDEX8_EXT 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16_EXT
#  define GL_STENCIL_INDEX16_EXT 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE_EXT
#  define GL_RENDERBUFFER_RED_SIZE_EXT 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE_EXT
#  define GL_RENDERBUFFER_GREEN_SIZE_EXT 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE_EXT
#  define GL_RENDERBUFFER_BLUE_SIZE_EXT 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE_EXT
#  define GL_RENDERBUFFER_ALPHA_SIZE_EXT 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE_EXT
#  define GL_RENDERBUFFER_DEPTH_SIZE_EXT 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE_EXT
#  define GL_RENDERBUFFER_STENCIL_SIZE_EXT 0x8D55
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFEREXTPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFEREXTPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPEXTPROC) (GLenum target);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
extern PFNGLUXISRENDERBUFFEREXTPROC glIsRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
extern PFNGLUXBINDRENDERBUFFEREXTPROC glBindRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
extern PFNGLUXDELETERENDERBUFFERSEXTPROC glDeleteRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
extern PFNGLUXGENRENDERBUFFERSEXTPROC glGenRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
extern PFNGLUXRENDERBUFFERSTORAGEEXTPROC glRenderbufferStorageEXT;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
extern PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC glGetRenderbufferParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
extern PFNGLUXISFRAMEBUFFEREXTPROC glIsFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
extern PFNGLUXBINDFRAMEBUFFEREXTPROC glBindFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
extern PFNGLUXDELETEFRAMEBUFFERSEXTPROC glDeleteFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
extern PFNGLUXGENFRAMEBUFFERSEXTPROC glGenFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
extern PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC glCheckFramebufferStatusEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC glFramebufferTexture1DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC glFramebufferTexture2DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC glFramebufferTexture3DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
extern PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC glFramebufferRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glGetFramebufferAttachmentParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
extern PFNGLUXGENERATEMIPMAPEXTPROC glGenerateMipmapEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:16:56 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_framebuffer_object__
#define __GLUX_GL_EXT_framebuffer_object__

GLUX_NEW_PLUGIN(GL_EXT_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION_EXT
#  define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE_EXT
#  define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
#endif
#ifndef GL_FRAMEBUFFER_BINDING_EXT
#  define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
#endif
#ifndef GL_RENDERBUFFER_BINDING_EXT
#  define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE_EXT
#  define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 0x8CD9
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 0x8CDA
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED_EXT
#  define GL_FRAMEBUFFER_UNSUPPORTED_EXT 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS_EXT
#  define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0_EXT
#  define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1_EXT
#  define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2_EXT
#  define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3_EXT
#  define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4_EXT
#  define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5_EXT
#  define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6_EXT
#  define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7_EXT
#  define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8_EXT
#  define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9_EXT
#  define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10_EXT
#  define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11_EXT
#  define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12_EXT
#  define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13_EXT
#  define GL_COLOR_ATTACHMENT13_EXT 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14_EXT
#  define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15_EXT
#  define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT_EXT
#  define GL_DEPTH_ATTACHMENT_EXT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT_EXT
#  define GL_STENCIL_ATTACHMENT_EXT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER_EXT
#  define GL_FRAMEBUFFER_EXT 0x8D40
#endif
#ifndef GL_RENDERBUFFER_EXT
#  define GL_RENDERBUFFER_EXT 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH_EXT
#  define GL_RENDERBUFFER_WIDTH_EXT 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT_EXT
#  define GL_RENDERBUFFER_HEIGHT_EXT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1_EXT
#  define GL_STENCIL_INDEX1_EXT 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4_EXT
#  define GL_STENCIL_INDEX4_EXT 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8_EXT
#  define GL_STENCIL_INDEX8_EXT 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16_EXT
#  define GL_STENCIL_INDEX16_EXT 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE_EXT
#  define GL_RENDERBUFFER_RED_SIZE_EXT 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE_EXT
#  define GL_RENDERBUFFER_GREEN_SIZE_EXT 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE_EXT
#  define GL_RENDERBUFFER_BLUE_SIZE_EXT 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE_EXT
#  define GL_RENDERBUFFER_ALPHA_SIZE_EXT 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE_EXT
#  define GL_RENDERBUFFER_DEPTH_SIZE_EXT 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE_EXT
#  define GL_RENDERBUFFER_STENCIL_SIZE_EXT 0x8D55
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFEREXTPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFEREXTPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPEXTPROC) (GLenum target);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
extern PFNGLUXISRENDERBUFFEREXTPROC glIsRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
extern PFNGLUXBINDRENDERBUFFEREXTPROC glBindRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
extern PFNGLUXDELETERENDERBUFFERSEXTPROC glDeleteRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
extern PFNGLUXGENRENDERBUFFERSEXTPROC glGenRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
extern PFNGLUXRENDERBUFFERSTORAGEEXTPROC glRenderbufferStorageEXT;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
extern PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC glGetRenderbufferParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
extern PFNGLUXISFRAMEBUFFEREXTPROC glIsFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
extern PFNGLUXBINDFRAMEBUFFEREXTPROC glBindFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
extern PFNGLUXDELETEFRAMEBUFFERSEXTPROC glDeleteFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
extern PFNGLUXGENFRAMEBUFFERSEXTPROC glGenFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
extern PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC glCheckFramebufferStatusEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC glFramebufferTexture1DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC glFramebufferTexture2DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC glFramebufferTexture3DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
extern PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC glFramebufferRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glGetFramebufferAttachmentParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
extern PFNGLUXGENERATEMIPMAPEXTPROC glGenerateMipmapEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_framebuffer_object__
#define __GLUX_GL_EXT_framebuffer_object__

GLUX_NEW_PLUGIN(GL_EXT_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION_EXT
#  define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE_EXT
#  define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
#endif
#ifndef GL_FRAMEBUFFER_BINDING_EXT
#  define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
#endif
#ifndef GL_RENDERBUFFER_BINDING_EXT
#  define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE_EXT
#  define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 0x8CD9
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 0x8CDA
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED_EXT
#  define GL_FRAMEBUFFER_UNSUPPORTED_EXT 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS_EXT
#  define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0_EXT
#  define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1_EXT
#  define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2_EXT
#  define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3_EXT
#  define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4_EXT
#  define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5_EXT
#  define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6_EXT
#  define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7_EXT
#  define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8_EXT
#  define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9_EXT
#  define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10_EXT
#  define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11_EXT
#  define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12_EXT
#  define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13_EXT
#  define GL_COLOR_ATTACHMENT13_EXT 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14_EXT
#  define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15_EXT
#  define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT_EXT
#  define GL_DEPTH_ATTACHMENT_EXT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT_EXT
#  define GL_STENCIL_ATTACHMENT_EXT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER_EXT
#  define GL_FRAMEBUFFER_EXT 0x8D40
#endif
#ifndef GL_RENDERBUFFER_EXT
#  define GL_RENDERBUFFER_EXT 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH_EXT
#  define GL_RENDERBUFFER_WIDTH_EXT 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT_EXT
#  define GL_RENDERBUFFER_HEIGHT_EXT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1_EXT
#  define GL_STENCIL_INDEX1_EXT 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4_EXT
#  define GL_STENCIL_INDEX4_EXT 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8_EXT
#  define GL_STENCIL_INDEX8_EXT 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16_EXT
#  define GL_STENCIL_INDEX16_EXT 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE_EXT
#  define GL_RENDERBUFFER_RED_SIZE_EXT 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE_EXT
#  define GL_RENDERBUFFER_GREEN_SIZE_EXT 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE_EXT
#  define GL_RENDERBUFFER_BLUE_SIZE_EXT 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE_EXT
#  define GL_RENDERBUFFER_ALPHA_SIZE_EXT 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE_EXT
#  define GL_RENDERBUFFER_DEPTH_SIZE_EXT 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE_EXT
#  define GL_RENDERBUFFER_STENCIL_SIZE_EXT 0x8D55
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFEREXTPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFEREXTPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPEXTPROC) (GLenum target);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
extern PFNGLUXISRENDERBUFFEREXTPROC glIsRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
extern PFNGLUXBINDRENDERBUFFEREXTPROC glBindRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
extern PFNGLUXDELETERENDERBUFFERSEXTPROC glDeleteRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
extern PFNGLUXGENRENDERBUFFERSEXTPROC glGenRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
extern PFNGLUXRENDERBUFFERSTORAGEEXTPROC glRenderbufferStorageEXT;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
extern PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC glGetRenderbufferParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
extern PFNGLUXISFRAMEBUFFEREXTPROC glIsFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
extern PFNGLUXBINDFRAMEBUFFEREXTPROC glBindFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
extern PFNGLUXDELETEFRAMEBUFFERSEXTPROC glDeleteFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
extern PFNGLUXGENFRAMEBUFFERSEXTPROC glGenFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
extern PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC glCheckFramebufferStatusEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC glFramebufferTexture1DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC glFramebufferTexture2DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC glFramebufferTexture3DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
extern PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC glFramebufferRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glGetFramebufferAttachmentParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
extern PFNGLUXGENERATEMIPMAPEXTPROC glGenerateMipmapEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:19 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_framebuffer_object__
#define __GLUX_GL_EXT_framebuffer_object__

GLUX_NEW_PLUGIN(GL_EXT_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION_EXT
#  define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE_EXT
#  define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
#endif
#ifndef GL_FRAMEBUFFER_BINDING_EXT
#  define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
#endif
#ifndef GL_RENDERBUFFER_BINDING_EXT
#  define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE_EXT
#  define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 0x8CD9
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 0x8CDA
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED_EXT
#  define GL_FRAMEBUFFER_UNSUPPORTED_EXT 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS_EXT
#  define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0_EXT
#  define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1_EXT
#  define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2_EXT
#  define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3_EXT
#  define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4_EXT
#  define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5_EXT
#  define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6_EXT
#  define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7_EXT
#  define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8_EXT
#  define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9_EXT
#  define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10_EXT
#  define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11_EXT
#  define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12_EXT
#  define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13_EXT
#  define GL_COLOR_ATTACHMENT13_EXT 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14_EXT
#  define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15_EXT
#  define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT_EXT
#  define GL_DEPTH_ATTACHMENT_EXT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT_EXT
#  define GL_STENCIL_ATTACHMENT_EXT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER_EXT
#  define GL_FRAMEBUFFER_EXT 0x8D40
#endif
#ifndef GL_RENDERBUFFER_EXT
#  define GL_RENDERBUFFER_EXT 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH_EXT
#  define GL_RENDERBUFFER_WIDTH_EXT 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT_EXT
#  define GL_RENDERBUFFER_HEIGHT_EXT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1_EXT
#  define GL_STENCIL_INDEX1_EXT 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4_EXT
#  define GL_STENCIL_INDEX4_EXT 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8_EXT
#  define GL_STENCIL_INDEX8_EXT 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16_EXT
#  define GL_STENCIL_INDEX16_EXT 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE_EXT
#  define GL_RENDERBUFFER_RED_SIZE_EXT 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE_EXT
#  define GL_RENDERBUFFER_GREEN_SIZE_EXT 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE_EXT
#  define GL_RENDERBUFFER_BLUE_SIZE_EXT 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE_EXT
#  define GL_RENDERBUFFER_ALPHA_SIZE_EXT 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE_EXT
#  define GL_RENDERBUFFER_DEPTH_SIZE_EXT 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE_EXT
#  define GL_RENDERBUFFER_STENCIL_SIZE_EXT 0x8D55
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFEREXTPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFEREXTPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPEXTPROC) (GLenum target);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
extern PFNGLUXISRENDERBUFFEREXTPROC glIsRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
extern PFNGLUXBINDRENDERBUFFEREXTPROC glBindRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
extern PFNGLUXDELETERENDERBUFFERSEXTPROC glDeleteRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
extern PFNGLUXGENRENDERBUFFERSEXTPROC glGenRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
extern PFNGLUXRENDERBUFFERSTORAGEEXTPROC glRenderbufferStorageEXT;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
extern PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC glGetRenderbufferParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
extern PFNGLUXISFRAMEBUFFEREXTPROC glIsFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
extern PFNGLUXBINDFRAMEBUFFEREXTPROC glBindFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
extern PFNGLUXDELETEFRAMEBUFFERSEXTPROC glDeleteFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
extern PFNGLUXGENFRAMEBUFFERSEXTPROC glGenFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
extern PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC glCheckFramebufferStatusEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC glFramebufferTexture1DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC glFramebufferTexture2DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC glFramebufferTexture3DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
extern PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC glFramebufferRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glGetFramebufferAttachmentParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
extern PFNGLUXGENERATEMIPMAPEXTPROC glGenerateMipmapEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:00 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_framebuffer_object__
#define __GLUX_GL_EXT_framebuffer_object__

GLUX_NEW_PLUGIN(GL_EXT_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION_EXT
#  define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE_EXT
#  define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
#endif
#ifndef GL_FRAMEBUFFER_BINDING_EXT
#  define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
#endif
#ifndef GL_RENDERBUFFER_BINDING_EXT
#  define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE_EXT
#  define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 0x8CD9
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 0x8CDA
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED_EXT
#  define GL_FRAMEBUFFER_UNSUPPORTED_EXT 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS_EXT
#  define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0_EXT
#  define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1_EXT
#  define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2_EXT
#  define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3_EXT
#  define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4_EXT
#  define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5_EXT
#  define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6_EXT
#  define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7_EXT
#  define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8_EXT
#  define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9_EXT
#  define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10_EXT
#  define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11_EXT
#  define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12_EXT
#  define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13_EXT
#  define GL_COLOR_ATTACHMENT13_EXT 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14_EXT
#  define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15_EXT
#  define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT_EXT
#  define GL_DEPTH_ATTACHMENT_EXT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT_EXT
#  define GL_STENCIL_ATTACHMENT_EXT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER_EXT
#  define GL_FRAMEBUFFER_EXT 0x8D40
#endif
#ifndef GL_RENDERBUFFER_EXT
#  define GL_RENDERBUFFER_EXT 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH_EXT
#  define GL_RENDERBUFFER_WIDTH_EXT 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT_EXT
#  define GL_RENDERBUFFER_HEIGHT_EXT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1_EXT
#  define GL_STENCIL_INDEX1_EXT 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4_EXT
#  define GL_STENCIL_INDEX4_EXT 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8_EXT
#  define GL_STENCIL_INDEX8_EXT 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16_EXT
#  define GL_STENCIL_INDEX16_EXT 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE_EXT
#  define GL_RENDERBUFFER_RED_SIZE_EXT 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE_EXT
#  define GL_RENDERBUFFER_GREEN_SIZE_EXT 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE_EXT
#  define GL_RENDERBUFFER_BLUE_SIZE_EXT 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE_EXT
#  define GL_RENDERBUFFER_ALPHA_SIZE_EXT 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE_EXT
#  define GL_RENDERBUFFER_DEPTH_SIZE_EXT 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE_EXT
#  define GL_RENDERBUFFER_STENCIL_SIZE_EXT 0x8D55
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFEREXTPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFEREXTPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPEXTPROC) (GLenum target);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
extern PFNGLUXISRENDERBUFFEREXTPROC glIsRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
extern PFNGLUXBINDRENDERBUFFEREXTPROC glBindRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
extern PFNGLUXDELETERENDERBUFFERSEXTPROC glDeleteRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
extern PFNGLUXGENRENDERBUFFERSEXTPROC glGenRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
extern PFNGLUXRENDERBUFFERSTORAGEEXTPROC glRenderbufferStorageEXT;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
extern PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC glGetRenderbufferParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
extern PFNGLUXISFRAMEBUFFEREXTPROC glIsFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
extern PFNGLUXBINDFRAMEBUFFEREXTPROC glBindFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
extern PFNGLUXDELETEFRAMEBUFFERSEXTPROC glDeleteFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
extern PFNGLUXGENFRAMEBUFFERSEXTPROC glGenFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
extern PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC glCheckFramebufferStatusEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC glFramebufferTexture1DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC glFramebufferTexture2DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC glFramebufferTexture3DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
extern PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC glFramebufferRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glGetFramebufferAttachmentParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
extern PFNGLUXGENERATEMIPMAPEXTPROC glGenerateMipmapEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:09 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_framebuffer_object__
#define __GLUX_GL_EXT_framebuffer_object__

GLUX_NEW_PLUGIN(GL_EXT_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION_EXT
#  define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE_EXT
#  define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
#endif
#ifndef GL_FRAMEBUFFER_BINDING_EXT
#  define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
#endif
#ifndef GL_RENDERBUFFER_BINDING_EXT
#  define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE_EXT
#  define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 0x8CD9
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 0x8CDA
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED_EXT
#  define GL_FRAMEBUFFER_UNSUPPORTED_EXT 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS_EXT
#  define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0_EXT
#  define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1_EXT
#  define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2_EXT
#  define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3_EXT
#  define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4_EXT
#  define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5_EXT
#  define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6_EXT
#  define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7_EXT
#  define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8_EXT
#  define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9_EXT
#  define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10_EXT
#  define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11_EXT
#  define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12_EXT
#  define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13_EXT
#  define GL_COLOR_ATTACHMENT13_EXT 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14_EXT
#  define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15_EXT
#  define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT_EXT
#  define GL_DEPTH_ATTACHMENT_EXT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT_EXT
#  define GL_STENCIL_ATTACHMENT_EXT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER_EXT
#  define GL_FRAMEBUFFER_EXT 0x8D40
#endif
#ifndef GL_RENDERBUFFER_EXT
#  define GL_RENDERBUFFER_EXT 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH_EXT
#  define GL_RENDERBUFFER_WIDTH_EXT 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT_EXT
#  define GL_RENDERBUFFER_HEIGHT_EXT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1_EXT
#  define GL_STENCIL_INDEX1_EXT 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4_EXT
#  define GL_STENCIL_INDEX4_EXT 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8_EXT
#  define GL_STENCIL_INDEX8_EXT 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16_EXT
#  define GL_STENCIL_INDEX16_EXT 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE_EXT
#  define GL_RENDERBUFFER_RED_SIZE_EXT 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE_EXT
#  define GL_RENDERBUFFER_GREEN_SIZE_EXT 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE_EXT
#  define GL_RENDERBUFFER_BLUE_SIZE_EXT 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE_EXT
#  define GL_RENDERBUFFER_ALPHA_SIZE_EXT 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE_EXT
#  define GL_RENDERBUFFER_DEPTH_SIZE_EXT 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE_EXT
#  define GL_RENDERBUFFER_STENCIL_SIZE_EXT 0x8D55
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFEREXTPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFEREXTPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPEXTPROC) (GLenum target);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
extern PFNGLUXISRENDERBUFFEREXTPROC glIsRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
extern PFNGLUXBINDRENDERBUFFEREXTPROC glBindRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
extern PFNGLUXDELETERENDERBUFFERSEXTPROC glDeleteRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
extern PFNGLUXGENRENDERBUFFERSEXTPROC glGenRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
extern PFNGLUXRENDERBUFFERSTORAGEEXTPROC glRenderbufferStorageEXT;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
extern PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC glGetRenderbufferParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
extern PFNGLUXISFRAMEBUFFEREXTPROC glIsFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
extern PFNGLUXBINDFRAMEBUFFEREXTPROC glBindFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
extern PFNGLUXDELETEFRAMEBUFFERSEXTPROC glDeleteFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
extern PFNGLUXGENFRAMEBUFFERSEXTPROC glGenFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
extern PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC glCheckFramebufferStatusEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC glFramebufferTexture1DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC glFramebufferTexture2DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC glFramebufferTexture3DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
extern PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC glFramebufferRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glGetFramebufferAttachmentParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
extern PFNGLUXGENERATEMIPMAPEXTPROC glGenerateMipmapEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:21 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_framebuffer_object__
#define __GLUX_GL_EXT_framebuffer_object__

GLUX_NEW_PLUGIN(GL_EXT_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION_EXT
#  define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE_EXT
#  define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
#endif
#ifndef GL_FRAMEBUFFER_BINDING_EXT
#  define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
#endif
#ifndef GL_RENDERBUFFER_BINDING_EXT
#  define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE_EXT
#  define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 0x8CD9
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 0x8CDA
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED_EXT
#  define GL_FRAMEBUFFER_UNSUPPORTED_EXT 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS_EXT
#  define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0_EXT
#  define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1_EXT
#  define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2_EXT
#  define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3_EXT
#  define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4_EXT
#  define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5_EXT
#  define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6_EXT
#  define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7_EXT
#  define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8_EXT
#  define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9_EXT
#  define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10_EXT
#  define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11_EXT
#  define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12_EXT
#  define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13_EXT
#  define GL_COLOR_ATTACHMENT13_EXT 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14_EXT
#  define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15_EXT
#  define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT_EXT
#  define GL_DEPTH_ATTACHMENT_EXT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT_EXT
#  define GL_STENCIL_ATTACHMENT_EXT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER_EXT
#  define GL_FRAMEBUFFER_EXT 0x8D40
#endif
#ifndef GL_RENDERBUFFER_EXT
#  define GL_RENDERBUFFER_EXT 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH_EXT
#  define GL_RENDERBUFFER_WIDTH_EXT 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT_EXT
#  define GL_RENDERBUFFER_HEIGHT_EXT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1_EXT
#  define GL_STENCIL_INDEX1_EXT 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4_EXT
#  define GL_STENCIL_INDEX4_EXT 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8_EXT
#  define GL_STENCIL_INDEX8_EXT 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16_EXT
#  define GL_STENCIL_INDEX16_EXT 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE_EXT
#  define GL_RENDERBUFFER_RED_SIZE_EXT 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE_EXT
#  define GL_RENDERBUFFER_GREEN_SIZE_EXT 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE_EXT
#  define GL_RENDERBUFFER_BLUE_SIZE_EXT 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE_EXT
#  define GL_RENDERBUFFER_ALPHA_SIZE_EXT 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE_EXT
#  define GL_RENDERBUFFER_DEPTH_SIZE_EXT 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE_EXT
#  define GL_RENDERBUFFER_STENCIL_SIZE_EXT 0x8D55
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFEREXTPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFEREXTPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPEXTPROC) (GLenum target);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
extern PFNGLUXISRENDERBUFFEREXTPROC glIsRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
extern PFNGLUXBINDRENDERBUFFEREXTPROC glBindRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
extern PFNGLUXDELETERENDERBUFFERSEXTPROC glDeleteRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
extern PFNGLUXGENRENDERBUFFERSEXTPROC glGenRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
extern PFNGLUXRENDERBUFFERSTORAGEEXTPROC glRenderbufferStorageEXT;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
extern PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC glGetRenderbufferParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
extern PFNGLUXISFRAMEBUFFEREXTPROC glIsFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
extern PFNGLUXBINDFRAMEBUFFEREXTPROC glBindFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
extern PFNGLUXDELETEFRAMEBUFFERSEXTPROC glDeleteFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
extern PFNGLUXGENFRAMEBUFFERSEXTPROC glGenFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
extern PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC glCheckFramebufferStatusEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC glFramebufferTexture1DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC glFramebufferTexture2DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC glFramebufferTexture3DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
extern PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC glFramebufferRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glGetFramebufferAttachmentParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
extern PFNGLUXGENERATEMIPMAPEXTPROC glGenerateMipmapEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:52:00 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_framebuffer_object__
#define __GLUX_GL_EXT_framebuffer_object__

GLUX_NEW_PLUGIN(GL_EXT_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION_EXT
#  define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE_EXT
#  define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
#endif
#ifndef GL_FRAMEBUFFER_BINDING_EXT
#  define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
#endif
#ifndef GL_RENDERBUFFER_BINDING_EXT
#  define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE_EXT
#  define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 0x8CD9
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 0x8CDA
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED_EXT
#  define GL_FRAMEBUFFER_UNSUPPORTED_EXT 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS_EXT
#  define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0_EXT
#  define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1_EXT
#  define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2_EXT
#  define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3_EXT
#  define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4_EXT
#  define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5_EXT
#  define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6_EXT
#  define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7_EXT
#  define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8_EXT
#  define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9_EXT
#  define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10_EXT
#  define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11_EXT
#  define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12_EXT
#  define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13_EXT
#  define GL_COLOR_ATTACHMENT13_EXT 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14_EXT
#  define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15_EXT
#  define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT_EXT
#  define GL_DEPTH_ATTACHMENT_EXT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT_EXT
#  define GL_STENCIL_ATTACHMENT_EXT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER_EXT
#  define GL_FRAMEBUFFER_EXT 0x8D40
#endif
#ifndef GL_RENDERBUFFER_EXT
#  define GL_RENDERBUFFER_EXT 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH_EXT
#  define GL_RENDERBUFFER_WIDTH_EXT 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT_EXT
#  define GL_RENDERBUFFER_HEIGHT_EXT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1_EXT
#  define GL_STENCIL_INDEX1_EXT 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4_EXT
#  define GL_STENCIL_INDEX4_EXT 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8_EXT
#  define GL_STENCIL_INDEX8_EXT 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16_EXT
#  define GL_STENCIL_INDEX16_EXT 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE_EXT
#  define GL_RENDERBUFFER_RED_SIZE_EXT 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE_EXT
#  define GL_RENDERBUFFER_GREEN_SIZE_EXT 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE_EXT
#  define GL_RENDERBUFFER_BLUE_SIZE_EXT 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE_EXT
#  define GL_RENDERBUFFER_ALPHA_SIZE_EXT 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE_EXT
#  define GL_RENDERBUFFER_DEPTH_SIZE_EXT 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE_EXT
#  define GL_RENDERBUFFER_STENCIL_SIZE_EXT 0x8D55
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFEREXTPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFEREXTPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPEXTPROC) (GLenum target);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
extern PFNGLUXISRENDERBUFFEREXTPROC glIsRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
extern PFNGLUXBINDRENDERBUFFEREXTPROC glBindRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
extern PFNGLUXDELETERENDERBUFFERSEXTPROC glDeleteRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
extern PFNGLUXGENRENDERBUFFERSEXTPROC glGenRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
extern PFNGLUXRENDERBUFFERSTORAGEEXTPROC glRenderbufferStorageEXT;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
extern PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC glGetRenderbufferParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
extern PFNGLUXISFRAMEBUFFEREXTPROC glIsFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
extern PFNGLUXBINDFRAMEBUFFEREXTPROC glBindFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
extern PFNGLUXDELETEFRAMEBUFFERSEXTPROC glDeleteFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
extern PFNGLUXGENFRAMEBUFFERSEXTPROC glGenFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
extern PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC glCheckFramebufferStatusEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC glFramebufferTexture1DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC glFramebufferTexture2DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC glFramebufferTexture3DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
extern PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC glFramebufferRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glGetFramebufferAttachmentParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
extern PFNGLUXGENERATEMIPMAPEXTPROC glGenerateMipmapEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_framebuffer_object__
#define __GLUX_GL_EXT_framebuffer_object__

GLUX_NEW_PLUGIN(GL_EXT_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION_EXT
#  define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE_EXT
#  define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
#endif
#ifndef GL_FRAMEBUFFER_BINDING_EXT
#  define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
#endif
#ifndef GL_RENDERBUFFER_BINDING_EXT
#  define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE_EXT
#  define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 0x8CD9
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 0x8CDA
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED_EXT
#  define GL_FRAMEBUFFER_UNSUPPORTED_EXT 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS_EXT
#  define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0_EXT
#  define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1_EXT
#  define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2_EXT
#  define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3_EXT
#  define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4_EXT
#  define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5_EXT
#  define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6_EXT
#  define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7_EXT
#  define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8_EXT
#  define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9_EXT
#  define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10_EXT
#  define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11_EXT
#  define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12_EXT
#  define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13_EXT
#  define GL_COLOR_ATTACHMENT13_EXT 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14_EXT
#  define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15_EXT
#  define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT_EXT
#  define GL_DEPTH_ATTACHMENT_EXT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT_EXT
#  define GL_STENCIL_ATTACHMENT_EXT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER_EXT
#  define GL_FRAMEBUFFER_EXT 0x8D40
#endif
#ifndef GL_RENDERBUFFER_EXT
#  define GL_RENDERBUFFER_EXT 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH_EXT
#  define GL_RENDERBUFFER_WIDTH_EXT 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT_EXT
#  define GL_RENDERBUFFER_HEIGHT_EXT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1_EXT
#  define GL_STENCIL_INDEX1_EXT 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4_EXT
#  define GL_STENCIL_INDEX4_EXT 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8_EXT
#  define GL_STENCIL_INDEX8_EXT 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16_EXT
#  define GL_STENCIL_INDEX16_EXT 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE_EXT
#  define GL_RENDERBUFFER_RED_SIZE_EXT 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE_EXT
#  define GL_RENDERBUFFER_GREEN_SIZE_EXT 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE_EXT
#  define GL_RENDERBUFFER_BLUE_SIZE_EXT 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE_EXT
#  define GL_RENDERBUFFER_ALPHA_SIZE_EXT 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE_EXT
#  define GL_RENDERBUFFER_DEPTH_SIZE_EXT 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE_EXT
#  define GL_RENDERBUFFER_STENCIL_SIZE_EXT 0x8D55
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFEREXTPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFEREXTPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPEXTPROC) (GLenum target);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
extern PFNGLUXISRENDERBUFFEREXTPROC glIsRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
extern PFNGLUXBINDRENDERBUFFEREXTPROC glBindRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
extern PFNGLUXDELETERENDERBUFFERSEXTPROC glDeleteRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
extern PFNGLUXGENRENDERBUFFERSEXTPROC glGenRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
extern PFNGLUXRENDERBUFFERSTORAGEEXTPROC glRenderbufferStorageEXT;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
extern PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC glGetRenderbufferParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
extern PFNGLUXISFRAMEBUFFEREXTPROC glIsFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
extern PFNGLUXBINDFRAMEBUFFEREXTPROC glBindFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
extern PFNGLUXDELETEFRAMEBUFFERSEXTPROC glDeleteFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
extern PFNGLUXGENFRAMEBUFFERSEXTPROC glGenFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
extern PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC glCheckFramebufferStatusEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC glFramebufferTexture1DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC glFramebufferTexture2DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC glFramebufferTexture3DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
extern PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC glFramebufferRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glGetFramebufferAttachmentParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
extern PFNGLUXGENERATEMIPMAPEXTPROC glGenerateMipmapEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:03 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_framebuffer_object__
#define __GLUX_GL_EXT_framebuffer_object__

GLUX_NEW_PLUGIN(GL_EXT_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION_EXT
#  define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE_EXT
#  define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
#endif
#ifndef GL_FRAMEBUFFER_BINDING_EXT
#  define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
#endif
#ifndef GL_RENDERBUFFER_BINDING_EXT
#  define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE_EXT
#  define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 0x8CD9
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 0x8CDA
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED_EXT
#  define GL_FRAMEBUFFER_UNSUPPORTED_EXT 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS_EXT
#  define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0_EXT
#  define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1_EXT
#  define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2_EXT
#  define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3_EXT
#  define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4_EXT
#  define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5_EXT
#  define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6_EXT
#  define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7_EXT
#  define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8_EXT
#  define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9_EXT
#  define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10_EXT
#  define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11_EXT
#  define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12_EXT
#  define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13_EXT
#  define GL_COLOR_ATTACHMENT13_EXT 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14_EXT
#  define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15_EXT
#  define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT_EXT
#  define GL_DEPTH_ATTACHMENT_EXT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT_EXT
#  define GL_STENCIL_ATTACHMENT_EXT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER_EXT
#  define GL_FRAMEBUFFER_EXT 0x8D40
#endif
#ifndef GL_RENDERBUFFER_EXT
#  define GL_RENDERBUFFER_EXT 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH_EXT
#  define GL_RENDERBUFFER_WIDTH_EXT 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT_EXT
#  define GL_RENDERBUFFER_HEIGHT_EXT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1_EXT
#  define GL_STENCIL_INDEX1_EXT 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4_EXT
#  define GL_STENCIL_INDEX4_EXT 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8_EXT
#  define GL_STENCIL_INDEX8_EXT 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16_EXT
#  define GL_STENCIL_INDEX16_EXT 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE_EXT
#  define GL_RENDERBUFFER_RED_SIZE_EXT 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE_EXT
#  define GL_RENDERBUFFER_GREEN_SIZE_EXT 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE_EXT
#  define GL_RENDERBUFFER_BLUE_SIZE_EXT 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE_EXT
#  define GL_RENDERBUFFER_ALPHA_SIZE_EXT 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE_EXT
#  define GL_RENDERBUFFER_DEPTH_SIZE_EXT 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE_EXT
#  define GL_RENDERBUFFER_STENCIL_SIZE_EXT 0x8D55
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFEREXTPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFEREXTPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPEXTPROC) (GLenum target);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
extern PFNGLUXISRENDERBUFFEREXTPROC glIsRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
extern PFNGLUXBINDRENDERBUFFEREXTPROC glBindRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
extern PFNGLUXDELETERENDERBUFFERSEXTPROC glDeleteRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
extern PFNGLUXGENRENDERBUFFERSEXTPROC glGenRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
extern PFNGLUXRENDERBUFFERSTORAGEEXTPROC glRenderbufferStorageEXT;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
extern PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC glGetRenderbufferParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
extern PFNGLUXISFRAMEBUFFEREXTPROC glIsFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
extern PFNGLUXBINDFRAMEBUFFEREXTPROC glBindFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
extern PFNGLUXDELETEFRAMEBUFFERSEXTPROC glDeleteFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
extern PFNGLUXGENFRAMEBUFFERSEXTPROC glGenFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
extern PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC glCheckFramebufferStatusEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC glFramebufferTexture1DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC glFramebufferTexture2DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC glFramebufferTexture3DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
extern PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC glFramebufferRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glGetFramebufferAttachmentParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
extern PFNGLUXGENERATEMIPMAPEXTPROC glGenerateMipmapEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:24 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_framebuffer_object__
#define __GLUX_GL_EXT_framebuffer_object__

GLUX_NEW_PLUGIN(GL_EXT_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION_EXT
#  define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE_EXT
#  define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
#endif
#ifndef GL_FRAMEBUFFER_BINDING_EXT
#  define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
#endif
#ifndef GL_RENDERBUFFER_BINDING_EXT
#  define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE_EXT
#  define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 0x8CD9
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 0x8CDA
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED_EXT
#  define GL_FRAMEBUFFER_UNSUPPORTED_EXT 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS_EXT
#  define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0_EXT
#  define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1_EXT
#  define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2_EXT
#  define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3_EXT
#  define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4_EXT
#  define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5_EXT
#  define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6_EXT
#  define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7_EXT
#  define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8_EXT
#  define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9_EXT
#  define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10_EXT
#  define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11_EXT
#  define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12_EXT
#  define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13_EXT
#  define GL_COLOR_ATTACHMENT13_EXT 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14_EXT
#  define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15_EXT
#  define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT_EXT
#  define GL_DEPTH_ATTACHMENT_EXT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT_EXT
#  define GL_STENCIL_ATTACHMENT_EXT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER_EXT
#  define GL_FRAMEBUFFER_EXT 0x8D40
#endif
#ifndef GL_RENDERBUFFER_EXT
#  define GL_RENDERBUFFER_EXT 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH_EXT
#  define GL_RENDERBUFFER_WIDTH_EXT 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT_EXT
#  define GL_RENDERBUFFER_HEIGHT_EXT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1_EXT
#  define GL_STENCIL_INDEX1_EXT 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4_EXT
#  define GL_STENCIL_INDEX4_EXT 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8_EXT
#  define GL_STENCIL_INDEX8_EXT 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16_EXT
#  define GL_STENCIL_INDEX16_EXT 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE_EXT
#  define GL_RENDERBUFFER_RED_SIZE_EXT 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE_EXT
#  define GL_RENDERBUFFER_GREEN_SIZE_EXT 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE_EXT
#  define GL_RENDERBUFFER_BLUE_SIZE_EXT 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE_EXT
#  define GL_RENDERBUFFER_ALPHA_SIZE_EXT 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE_EXT
#  define GL_RENDERBUFFER_DEPTH_SIZE_EXT 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE_EXT
#  define GL_RENDERBUFFER_STENCIL_SIZE_EXT 0x8D55
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFEREXTPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFEREXTPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPEXTPROC) (GLenum target);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
extern PFNGLUXISRENDERBUFFEREXTPROC glIsRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
extern PFNGLUXBINDRENDERBUFFEREXTPROC glBindRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
extern PFNGLUXDELETERENDERBUFFERSEXTPROC glDeleteRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
extern PFNGLUXGENRENDERBUFFERSEXTPROC glGenRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
extern PFNGLUXRENDERBUFFERSTORAGEEXTPROC glRenderbufferStorageEXT;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
extern PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC glGetRenderbufferParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
extern PFNGLUXISFRAMEBUFFEREXTPROC glIsFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
extern PFNGLUXBINDFRAMEBUFFEREXTPROC glBindFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
extern PFNGLUXDELETEFRAMEBUFFERSEXTPROC glDeleteFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
extern PFNGLUXGENFRAMEBUFFERSEXTPROC glGenFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
extern PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC glCheckFramebufferStatusEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC glFramebufferTexture1DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC glFramebufferTexture2DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC glFramebufferTexture3DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
extern PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC glFramebufferRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glGetFramebufferAttachmentParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
extern PFNGLUXGENERATEMIPMAPEXTPROC glGenerateMipmapEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_framebuffer_object__
#define __GLUX_GL_EXT_framebuffer_object__

GLUX_NEW_PLUGIN(GL_EXT_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION_EXT
#  define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE_EXT
#  define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
#endif
#ifndef GL_FRAMEBUFFER_BINDING_EXT
#  define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
#endif
#ifndef GL_RENDERBUFFER_BINDING_EXT
#  define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE_EXT
#  define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 0x8CD9
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 0x8CDA
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED_EXT
#  define GL_FRAMEBUFFER_UNSUPPORTED_EXT 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS_EXT
#  define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0_EXT
#  define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1_EXT
#  define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2_EXT
#  define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3_EXT
#  define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4_EXT
#  define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5_EXT
#  define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6_EXT
#  define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7_EXT
#  define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8_EXT
#  define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9_EXT
#  define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10_EXT
#  define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11_EXT
#  define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12_EXT
#  define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13_EXT
#  define GL_COLOR_ATTACHMENT13_EXT 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14_EXT
#  define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15_EXT
#  define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT_EXT
#  define GL_DEPTH_ATTACHMENT_EXT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT_EXT
#  define GL_STENCIL_ATTACHMENT_EXT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER_EXT
#  define GL_FRAMEBUFFER_EXT 0x8D40
#endif
#ifndef GL_RENDERBUFFER_EXT
#  define GL_RENDERBUFFER_EXT 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH_EXT
#  define GL_RENDERBUFFER_WIDTH_EXT 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT_EXT
#  define GL_RENDERBUFFER_HEIGHT_EXT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1_EXT
#  define GL_STENCIL_INDEX1_EXT 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4_EXT
#  define GL_STENCIL_INDEX4_EXT 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8_EXT
#  define GL_STENCIL_INDEX8_EXT 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16_EXT
#  define GL_STENCIL_INDEX16_EXT 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE_EXT
#  define GL_RENDERBUFFER_RED_SIZE_EXT 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE_EXT
#  define GL_RENDERBUFFER_GREEN_SIZE_EXT 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE_EXT
#  define GL_RENDERBUFFER_BLUE_SIZE_EXT 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE_EXT
#  define GL_RENDERBUFFER_ALPHA_SIZE_EXT 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE_EXT
#  define GL_RENDERBUFFER_DEPTH_SIZE_EXT 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE_EXT
#  define GL_RENDERBUFFER_STENCIL_SIZE_EXT 0x8D55
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFEREXTPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFEREXTPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPEXTPROC) (GLenum target);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
extern PFNGLUXISRENDERBUFFEREXTPROC glIsRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
extern PFNGLUXBINDRENDERBUFFEREXTPROC glBindRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
extern PFNGLUXDELETERENDERBUFFERSEXTPROC glDeleteRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
extern PFNGLUXGENRENDERBUFFERSEXTPROC glGenRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
extern PFNGLUXRENDERBUFFERSTORAGEEXTPROC glRenderbufferStorageEXT;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
extern PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC glGetRenderbufferParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
extern PFNGLUXISFRAMEBUFFEREXTPROC glIsFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
extern PFNGLUXBINDFRAMEBUFFEREXTPROC glBindFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
extern PFNGLUXDELETEFRAMEBUFFERSEXTPROC glDeleteFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
extern PFNGLUXGENFRAMEBUFFERSEXTPROC glGenFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
extern PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC glCheckFramebufferStatusEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC glFramebufferTexture1DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC glFramebufferTexture2DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC glFramebufferTexture3DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
extern PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC glFramebufferRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glGetFramebufferAttachmentParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
extern PFNGLUXGENERATEMIPMAPEXTPROC glGenerateMipmapEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:41:57 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_framebuffer_object__
#define __GLUX_GL_EXT_framebuffer_object__

GLUX_NEW_PLUGIN(GL_EXT_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION_EXT
#  define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE_EXT
#  define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
#endif
#ifndef GL_FRAMEBUFFER_BINDING_EXT
#  define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
#endif
#ifndef GL_RENDERBUFFER_BINDING_EXT
#  define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE_EXT
#  define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 0x8CD9
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 0x8CDA
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED_EXT
#  define GL_FRAMEBUFFER_UNSUPPORTED_EXT 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS_EXT
#  define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0_EXT
#  define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1_EXT
#  define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2_EXT
#  define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3_EXT
#  define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4_EXT
#  define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5_EXT
#  define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6_EXT
#  define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7_EXT
#  define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8_EXT
#  define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9_EXT
#  define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10_EXT
#  define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11_EXT
#  define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12_EXT
#  define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13_EXT
#  define GL_COLOR_ATTACHMENT13_EXT 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14_EXT
#  define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15_EXT
#  define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT_EXT
#  define GL_DEPTH_ATTACHMENT_EXT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT_EXT
#  define GL_STENCIL_ATTACHMENT_EXT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER_EXT
#  define GL_FRAMEBUFFER_EXT 0x8D40
#endif
#ifndef GL_RENDERBUFFER_EXT
#  define GL_RENDERBUFFER_EXT 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH_EXT
#  define GL_RENDERBUFFER_WIDTH_EXT 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT_EXT
#  define GL_RENDERBUFFER_HEIGHT_EXT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1_EXT
#  define GL_STENCIL_INDEX1_EXT 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4_EXT
#  define GL_STENCIL_INDEX4_EXT 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8_EXT
#  define GL_STENCIL_INDEX8_EXT 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16_EXT
#  define GL_STENCIL_INDEX16_EXT 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE_EXT
#  define GL_RENDERBUFFER_RED_SIZE_EXT 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE_EXT
#  define GL_RENDERBUFFER_GREEN_SIZE_EXT 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE_EXT
#  define GL_RENDERBUFFER_BLUE_SIZE_EXT 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE_EXT
#  define GL_RENDERBUFFER_ALPHA_SIZE_EXT 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE_EXT
#  define GL_RENDERBUFFER_DEPTH_SIZE_EXT 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE_EXT
#  define GL_RENDERBUFFER_STENCIL_SIZE_EXT 0x8D55
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFEREXTPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFEREXTPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPEXTPROC) (GLenum target);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
extern PFNGLUXISRENDERBUFFEREXTPROC glIsRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
extern PFNGLUXBINDRENDERBUFFEREXTPROC glBindRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
extern PFNGLUXDELETERENDERBUFFERSEXTPROC glDeleteRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
extern PFNGLUXGENRENDERBUFFERSEXTPROC glGenRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
extern PFNGLUXRENDERBUFFERSTORAGEEXTPROC glRenderbufferStorageEXT;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
extern PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC glGetRenderbufferParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
extern PFNGLUXISFRAMEBUFFEREXTPROC glIsFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
extern PFNGLUXBINDFRAMEBUFFEREXTPROC glBindFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
extern PFNGLUXDELETEFRAMEBUFFERSEXTPROC glDeleteFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
extern PFNGLUXGENFRAMEBUFFERSEXTPROC glGenFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
extern PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC glCheckFramebufferStatusEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC glFramebufferTexture1DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC glFramebufferTexture2DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC glFramebufferTexture3DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
extern PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC glFramebufferRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glGetFramebufferAttachmentParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
extern PFNGLUXGENERATEMIPMAPEXTPROC glGenerateMipmapEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:39 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_framebuffer_object__
#define __GLUX_GL_EXT_framebuffer_object__

GLUX_NEW_PLUGIN(GL_EXT_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION_EXT
#  define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE_EXT
#  define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
#endif
#ifndef GL_FRAMEBUFFER_BINDING_EXT
#  define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
#endif
#ifndef GL_RENDERBUFFER_BINDING_EXT
#  define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE_EXT
#  define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 0x8CD9
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 0x8CDA
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED_EXT
#  define GL_FRAMEBUFFER_UNSUPPORTED_EXT 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS_EXT
#  define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0_EXT
#  define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1_EXT
#  define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2_EXT
#  define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3_EXT
#  define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4_EXT
#  define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5_EXT
#  define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6_EXT
#  define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7_EXT
#  define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8_EXT
#  define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9_EXT
#  define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10_EXT
#  define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11_EXT
#  define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12_EXT
#  define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13_EXT
#  define GL_COLOR_ATTACHMENT13_EXT 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14_EXT
#  define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15_EXT
#  define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT_EXT
#  define GL_DEPTH_ATTACHMENT_EXT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT_EXT
#  define GL_STENCIL_ATTACHMENT_EXT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER_EXT
#  define GL_FRAMEBUFFER_EXT 0x8D40
#endif
#ifndef GL_RENDERBUFFER_EXT
#  define GL_RENDERBUFFER_EXT 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH_EXT
#  define GL_RENDERBUFFER_WIDTH_EXT 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT_EXT
#  define GL_RENDERBUFFER_HEIGHT_EXT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1_EXT
#  define GL_STENCIL_INDEX1_EXT 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4_EXT
#  define GL_STENCIL_INDEX4_EXT 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8_EXT
#  define GL_STENCIL_INDEX8_EXT 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16_EXT
#  define GL_STENCIL_INDEX16_EXT 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE_EXT
#  define GL_RENDERBUFFER_RED_SIZE_EXT 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE_EXT
#  define GL_RENDERBUFFER_GREEN_SIZE_EXT 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE_EXT
#  define GL_RENDERBUFFER_BLUE_SIZE_EXT 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE_EXT
#  define GL_RENDERBUFFER_ALPHA_SIZE_EXT 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE_EXT
#  define GL_RENDERBUFFER_DEPTH_SIZE_EXT 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE_EXT
#  define GL_RENDERBUFFER_STENCIL_SIZE_EXT 0x8D55
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFEREXTPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFEREXTPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPEXTPROC) (GLenum target);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
extern PFNGLUXISRENDERBUFFEREXTPROC glIsRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
extern PFNGLUXBINDRENDERBUFFEREXTPROC glBindRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
extern PFNGLUXDELETERENDERBUFFERSEXTPROC glDeleteRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
extern PFNGLUXGENRENDERBUFFERSEXTPROC glGenRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
extern PFNGLUXRENDERBUFFERSTORAGEEXTPROC glRenderbufferStorageEXT;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
extern PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC glGetRenderbufferParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
extern PFNGLUXISFRAMEBUFFEREXTPROC glIsFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
extern PFNGLUXBINDFRAMEBUFFEREXTPROC glBindFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
extern PFNGLUXDELETEFRAMEBUFFERSEXTPROC glDeleteFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
extern PFNGLUXGENFRAMEBUFFERSEXTPROC glGenFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
extern PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC glCheckFramebufferStatusEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC glFramebufferTexture1DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC glFramebufferTexture2DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC glFramebufferTexture3DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
extern PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC glFramebufferRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glGetFramebufferAttachmentParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
extern PFNGLUXGENERATEMIPMAPEXTPROC glGenerateMipmapEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:09:58 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_framebuffer_object__
#define __GLUX_GL_EXT_framebuffer_object__

GLUX_NEW_PLUGIN(GL_EXT_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION_EXT
#  define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE_EXT
#  define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
#endif
#ifndef GL_FRAMEBUFFER_BINDING_EXT
#  define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
#endif
#ifndef GL_RENDERBUFFER_BINDING_EXT
#  define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE_EXT
#  define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 0x8CD9
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 0x8CDA
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED_EXT
#  define GL_FRAMEBUFFER_UNSUPPORTED_EXT 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS_EXT
#  define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0_EXT
#  define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1_EXT
#  define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2_EXT
#  define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3_EXT
#  define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4_EXT
#  define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5_EXT
#  define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6_EXT
#  define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7_EXT
#  define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8_EXT
#  define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9_EXT
#  define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10_EXT
#  define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11_EXT
#  define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12_EXT
#  define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13_EXT
#  define GL_COLOR_ATTACHMENT13_EXT 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14_EXT
#  define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15_EXT
#  define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT_EXT
#  define GL_DEPTH_ATTACHMENT_EXT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT_EXT
#  define GL_STENCIL_ATTACHMENT_EXT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER_EXT
#  define GL_FRAMEBUFFER_EXT 0x8D40
#endif
#ifndef GL_RENDERBUFFER_EXT
#  define GL_RENDERBUFFER_EXT 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH_EXT
#  define GL_RENDERBUFFER_WIDTH_EXT 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT_EXT
#  define GL_RENDERBUFFER_HEIGHT_EXT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1_EXT
#  define GL_STENCIL_INDEX1_EXT 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4_EXT
#  define GL_STENCIL_INDEX4_EXT 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8_EXT
#  define GL_STENCIL_INDEX8_EXT 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16_EXT
#  define GL_STENCIL_INDEX16_EXT 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE_EXT
#  define GL_RENDERBUFFER_RED_SIZE_EXT 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE_EXT
#  define GL_RENDERBUFFER_GREEN_SIZE_EXT 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE_EXT
#  define GL_RENDERBUFFER_BLUE_SIZE_EXT 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE_EXT
#  define GL_RENDERBUFFER_ALPHA_SIZE_EXT 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE_EXT
#  define GL_RENDERBUFFER_DEPTH_SIZE_EXT 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE_EXT
#  define GL_RENDERBUFFER_STENCIL_SIZE_EXT 0x8D55
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFEREXTPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFEREXTPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPEXTPROC) (GLenum target);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
extern PFNGLUXISRENDERBUFFEREXTPROC glIsRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
extern PFNGLUXBINDRENDERBUFFEREXTPROC glBindRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
extern PFNGLUXDELETERENDERBUFFERSEXTPROC glDeleteRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
extern PFNGLUXGENRENDERBUFFERSEXTPROC glGenRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
extern PFNGLUXRENDERBUFFERSTORAGEEXTPROC glRenderbufferStorageEXT;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
extern PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC glGetRenderbufferParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
extern PFNGLUXISFRAMEBUFFEREXTPROC glIsFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
extern PFNGLUXBINDFRAMEBUFFEREXTPROC glBindFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
extern PFNGLUXDELETEFRAMEBUFFERSEXTPROC glDeleteFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
extern PFNGLUXGENFRAMEBUFFERSEXTPROC glGenFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
extern PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC glCheckFramebufferStatusEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC glFramebufferTexture1DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC glFramebufferTexture2DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC glFramebufferTexture3DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
extern PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC glFramebufferRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glGetFramebufferAttachmentParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
extern PFNGLUXGENERATEMIPMAPEXTPROC glGenerateMipmapEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:19:58 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_framebuffer_object__
#define __GLUX_GL_EXT_framebuffer_object__

GLUX_NEW_PLUGIN(GL_EXT_framebuffer_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION_EXT
#  define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE_EXT
#  define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
#endif
#ifndef GL_FRAMEBUFFER_BINDING_EXT
#  define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
#endif
#ifndef GL_RENDERBUFFER_BINDING_EXT
#  define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE_EXT
#  define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 0x8CD9
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 0x8CDA
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED_EXT
#  define GL_FRAMEBUFFER_UNSUPPORTED_EXT 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS_EXT
#  define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0_EXT
#  define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1_EXT
#  define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2_EXT
#  define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3_EXT
#  define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4_EXT
#  define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5_EXT
#  define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6_EXT
#  define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7_EXT
#  define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8_EXT
#  define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9_EXT
#  define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10_EXT
#  define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11_EXT
#  define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12_EXT
#  define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13_EXT
#  define GL_COLOR_ATTACHMENT13_EXT 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14_EXT
#  define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15_EXT
#  define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT_EXT
#  define GL_DEPTH_ATTACHMENT_EXT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT_EXT
#  define GL_STENCIL_ATTACHMENT_EXT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER_EXT
#  define GL_FRAMEBUFFER_EXT 0x8D40
#endif
#ifndef GL_RENDERBUFFER_EXT
#  define GL_RENDERBUFFER_EXT 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH_EXT
#  define GL_RENDERBUFFER_WIDTH_EXT 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT_EXT
#  define GL_RENDERBUFFER_HEIGHT_EXT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1_EXT
#  define GL_STENCIL_INDEX1_EXT 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4_EXT
#  define GL_STENCIL_INDEX4_EXT 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8_EXT
#  define GL_STENCIL_INDEX8_EXT 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16_EXT
#  define GL_STENCIL_INDEX16_EXT 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE_EXT
#  define GL_RENDERBUFFER_RED_SIZE_EXT 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE_EXT
#  define GL_RENDERBUFFER_GREEN_SIZE_EXT 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE_EXT
#  define GL_RENDERBUFFER_BLUE_SIZE_EXT 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE_EXT
#  define GL_RENDERBUFFER_ALPHA_SIZE_EXT 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE_EXT
#  define GL_RENDERBUFFER_DEPTH_SIZE_EXT 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE_EXT
#  define GL_RENDERBUFFER_STENCIL_SIZE_EXT 0x8D55
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFEREXTPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFEREXTPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPEXTPROC) (GLenum target);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
extern PFNGLUXISRENDERBUFFEREXTPROC glIsRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
extern PFNGLUXBINDRENDERBUFFEREXTPROC glBindRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
extern PFNGLUXDELETERENDERBUFFERSEXTPROC glDeleteRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
extern PFNGLUXGENRENDERBUFFERSEXTPROC glGenRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
extern PFNGLUXRENDERBUFFERSTORAGEEXTPROC glRenderbufferStorageEXT;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
extern PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC glGetRenderbufferParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
extern PFNGLUXISFRAMEBUFFEREXTPROC glIsFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
extern PFNGLUXBINDFRAMEBUFFEREXTPROC glBindFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
extern PFNGLUXDELETEFRAMEBUFFERSEXTPROC glDeleteFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
extern PFNGLUXGENFRAMEBUFFERSEXTPROC glGenFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
extern PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC glCheckFramebufferStatusEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC glFramebufferTexture1DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC glFramebufferTexture2DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC glFramebufferTexture3DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
extern PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC glFramebufferRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glGetFramebufferAttachmentParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
extern PFNGLUXGENERATEMIPMAPEXTPROC glGenerateMipmapEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:42:56 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_framebuffer_object__
#define __GLUX_GL_EXT_framebuffer_object__

GLUX_NEW_PLUGIN(GL_EXT_framebuffer_object)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_INVALID_FRAMEBUFFER_OPERATION_EXT
#  define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#endif
#ifndef GL_MAX_RENDERBUFFER_SIZE_EXT
#  define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
#endif
#ifndef GL_FRAMEBUFFER_BINDING_EXT
#  define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
#endif
#ifndef GL_RENDERBUFFER_BINDING_EXT
#  define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#endif
#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
#  define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#endif
#ifndef GL_FRAMEBUFFER_COMPLETE_EXT
#  define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 0x8CD9
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 0x8CDA
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 0x8CDB
#endif
#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
#  define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 0x8CDC
#endif
#ifndef GL_FRAMEBUFFER_UNSUPPORTED_EXT
#  define GL_FRAMEBUFFER_UNSUPPORTED_EXT 0x8CDD
#endif
#ifndef GL_MAX_COLOR_ATTACHMENTS_EXT
#  define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
#endif
#ifndef GL_COLOR_ATTACHMENT0_EXT
#  define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
#endif
#ifndef GL_COLOR_ATTACHMENT1_EXT
#  define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
#endif
#ifndef GL_COLOR_ATTACHMENT2_EXT
#  define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
#endif
#ifndef GL_COLOR_ATTACHMENT3_EXT
#  define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
#endif
#ifndef GL_COLOR_ATTACHMENT4_EXT
#  define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
#endif
#ifndef GL_COLOR_ATTACHMENT5_EXT
#  define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
#endif
#ifndef GL_COLOR_ATTACHMENT6_EXT
#  define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
#endif
#ifndef GL_COLOR_ATTACHMENT7_EXT
#  define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
#endif
#ifndef GL_COLOR_ATTACHMENT8_EXT
#  define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
#endif
#ifndef GL_COLOR_ATTACHMENT9_EXT
#  define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
#endif
#ifndef GL_COLOR_ATTACHMENT10_EXT
#  define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
#endif
#ifndef GL_COLOR_ATTACHMENT11_EXT
#  define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
#endif
#ifndef GL_COLOR_ATTACHMENT12_EXT
#  define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
#endif
#ifndef GL_COLOR_ATTACHMENT13_EXT
#  define GL_COLOR_ATTACHMENT13_EXT 0x8CED
#endif
#ifndef GL_COLOR_ATTACHMENT14_EXT
#  define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
#endif
#ifndef GL_COLOR_ATTACHMENT15_EXT
#  define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
#endif
#ifndef GL_DEPTH_ATTACHMENT_EXT
#  define GL_DEPTH_ATTACHMENT_EXT 0x8D00
#endif
#ifndef GL_STENCIL_ATTACHMENT_EXT
#  define GL_STENCIL_ATTACHMENT_EXT 0x8D20
#endif
#ifndef GL_FRAMEBUFFER_EXT
#  define GL_FRAMEBUFFER_EXT 0x8D40
#endif
#ifndef GL_RENDERBUFFER_EXT
#  define GL_RENDERBUFFER_EXT 0x8D41
#endif
#ifndef GL_RENDERBUFFER_WIDTH_EXT
#  define GL_RENDERBUFFER_WIDTH_EXT 0x8D42
#endif
#ifndef GL_RENDERBUFFER_HEIGHT_EXT
#  define GL_RENDERBUFFER_HEIGHT_EXT 0x8D43
#endif
#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
#  define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 0x8D44
#endif
#ifndef GL_STENCIL_INDEX1_EXT
#  define GL_STENCIL_INDEX1_EXT 0x8D46
#endif
#ifndef GL_STENCIL_INDEX4_EXT
#  define GL_STENCIL_INDEX4_EXT 0x8D47
#endif
#ifndef GL_STENCIL_INDEX8_EXT
#  define GL_STENCIL_INDEX8_EXT 0x8D48
#endif
#ifndef GL_STENCIL_INDEX16_EXT
#  define GL_STENCIL_INDEX16_EXT 0x8D49
#endif
#ifndef GL_RENDERBUFFER_RED_SIZE_EXT
#  define GL_RENDERBUFFER_RED_SIZE_EXT 0x8D50
#endif
#ifndef GL_RENDERBUFFER_GREEN_SIZE_EXT
#  define GL_RENDERBUFFER_GREEN_SIZE_EXT 0x8D51
#endif
#ifndef GL_RENDERBUFFER_BLUE_SIZE_EXT
#  define GL_RENDERBUFFER_BLUE_SIZE_EXT 0x8D52
#endif
#ifndef GL_RENDERBUFFER_ALPHA_SIZE_EXT
#  define GL_RENDERBUFFER_ALPHA_SIZE_EXT 0x8D53
#endif
#ifndef GL_RENDERBUFFER_DEPTH_SIZE_EXT
#  define GL_RENDERBUFFER_DEPTH_SIZE_EXT 0x8D54
#endif
#ifndef GL_RENDERBUFFER_STENCIL_SIZE_EXT
#  define GL_RENDERBUFFER_STENCIL_SIZE_EXT 0x8D55
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISRENDERBUFFEREXTPROC) (GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
typedef void (APIENTRYP PFNGLUXBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
typedef void (APIENTRYP PFNGLUXGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
typedef void (APIENTRYP PFNGLUXRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
typedef void (APIENTRYP PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
typedef GLboolean (APIENTRYP PFNGLUXISFRAMEBUFFEREXTPROC) (GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
typedef void (APIENTRYP PFNGLUXBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
typedef void (APIENTRYP PFNGLUXDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
typedef void (APIENTRYP PFNGLUXGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
typedef GLenum (APIENTRYP PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
typedef void (APIENTRYP PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
typedef void (APIENTRYP PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
typedef void (APIENTRYP PFNGLUXGENERATEMIPMAPEXTPROC) (GLenum target);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glIsRenderbufferEXT
extern PFNGLUXISRENDERBUFFEREXTPROC glIsRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindRenderbufferEXT
extern PFNGLUXBINDRENDERBUFFEREXTPROC glBindRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteRenderbuffersEXT
extern PFNGLUXDELETERENDERBUFFERSEXTPROC glDeleteRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenRenderbuffersEXT
extern PFNGLUXGENRENDERBUFFERSEXTPROC glGenRenderbuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glRenderbufferStorageEXT
extern PFNGLUXRENDERBUFFERSTORAGEEXTPROC glRenderbufferStorageEXT;
#endif
#ifndef __GLUX__GLFCT_glGetRenderbufferParameterivEXT
extern PFNGLUXGETRENDERBUFFERPARAMETERIVEXTPROC glGetRenderbufferParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glIsFramebufferEXT
extern PFNGLUXISFRAMEBUFFEREXTPROC glIsFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glBindFramebufferEXT
extern PFNGLUXBINDFRAMEBUFFEREXTPROC glBindFramebufferEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteFramebuffersEXT
extern PFNGLUXDELETEFRAMEBUFFERSEXTPROC glDeleteFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glGenFramebuffersEXT
extern PFNGLUXGENFRAMEBUFFERSEXTPROC glGenFramebuffersEXT;
#endif
#ifndef __GLUX__GLFCT_glCheckFramebufferStatusEXT
extern PFNGLUXCHECKFRAMEBUFFERSTATUSEXTPROC glCheckFramebufferStatusEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture1DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE1DEXTPROC glFramebufferTexture1DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture2DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE2DEXTPROC glFramebufferTexture2DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferTexture3DEXT
extern PFNGLUXFRAMEBUFFERTEXTURE3DEXTPROC glFramebufferTexture3DEXT;
#endif
#ifndef __GLUX__GLFCT_glFramebufferRenderbufferEXT
extern PFNGLUXFRAMEBUFFERRENDERBUFFEREXTPROC glFramebufferRenderbufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetFramebufferAttachmentParameterivEXT
extern PFNGLUXGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glGetFramebufferAttachmentParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glGenerateMipmapEXT
extern PFNGLUXGENERATEMIPMAPEXTPROC glGenerateMipmapEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
