
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:24 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback__
#define __GLUX_GL_NV_transform_feedback__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BACK_PRIMARY_COLOR_NV
#  define GL_BACK_PRIMARY_COLOR_NV 0x8C77
#endif
#ifndef GL_BACK_SECONDARY_COLOR_NV
#  define GL_BACK_SECONDARY_COLOR_NV 0x8C78
#endif
#ifndef GL_TEXTURE_COORD_NV
#  define GL_TEXTURE_COORD_NV 0x8C79
#endif
#ifndef GL_CLIP_DISTANCE_NV
#  define GL_CLIP_DISTANCE_NV 0x8C7A
#endif
#ifndef GL_VERTEX_ID_NV
#  define GL_VERTEX_ID_NV 0x8C7B
#endif
#ifndef GL_PRIMITIVE_ID_NV
#  define GL_PRIMITIVE_ID_NV 0x8C7C
#endif
#ifndef GL_GENERIC_ATTRIB_NV
#  define GL_GENERIC_ATTRIB_NV 0x8C7D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
#  define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#endif
#ifndef GL_ACTIVE_VARYINGS_NV
#  define GL_ACTIVE_VARYINGS_NV 0x8C81
#endif
#ifndef GL_ACTIVE_VARYING_MAX_LENGTH_NV
#  define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS_NV
#  define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#endif
#ifndef GL_TRANSFORM_FEEDBACK_RECORD_NV
#  define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
#endif
#ifndef GL_PRIMITIVES_GENERATED_NV
#  define GL_PRIMITIVES_GENERATED_NV 0x8C87
#endif
#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
#  define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#endif
#ifndef GL_RASTERIZER_DISCARD_NV
#  define GL_RASTERIZER_DISCARD_NV 0x8C89
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#endif
#ifndef GL_INTERLEAVED_ATTRIBS_NV
#  define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
#endif
#ifndef GL_SEPARATE_ATTRIBS_NV
#  define GL_SEPARATE_ATTRIBS_NV 0x8C8D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#endif
#ifndef GL_LAYER_NV
#  define GL_LAYER_NV 0x8DAA
#endif
#ifndef GL_NEXT_BUFFER_NV
#  define GL_NEXT_BUFFER_NV -2
#endif
#ifndef GL_SKIP_COMPONENTS4_NV
#  define GL_SKIP_COMPONENTS4_NV -3
#endif
#ifndef GL_SKIP_COMPONENTS3_NV
#  define GL_SKIP_COMPONENTS3_NV -4
#endif
#ifndef GL_SKIP_COMPONENTS2_NV
#  define GL_SKIP_COMPONENTS2_NV -5
#endif
#ifndef GL_SKIP_COMPONENTS1_NV
#  define GL_SKIP_COMPONENTS1_NV -6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXENDTRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
typedef void (APIENTRYP PFNGLUXBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
typedef void (APIENTRYP PFNGLUXACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
typedef GLint (APIENTRYP PFNGLUXGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
typedef void (APIENTRYP PFNGLUXGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
typedef void (APIENTRYP PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
extern PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC glBeginTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
extern PFNGLUXENDTRANSFORMFEEDBACKNVPROC glEndTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC glTransformFeedbackAttribsNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
extern PFNGLUXBINDBUFFERRANGENVPROC glBindBufferRangeNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
extern PFNGLUXBINDBUFFEROFFSETNVPROC glBindBufferOffsetNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
extern PFNGLUXBINDBUFFERBASENVPROC glBindBufferBaseNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
extern PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC glTransformFeedbackVaryingsNV;
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
extern PFNGLUXACTIVEVARYINGNVPROC glActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
extern PFNGLUXGETVARYINGLOCATIONNVPROC glGetVaryingLocationNV;
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
extern PFNGLUXGETACTIVEVARYINGNVPROC glGetActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
extern PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC glGetTransformFeedbackVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC glTransformFeedbackStreamAttribsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:37 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback__
#define __GLUX_GL_NV_transform_feedback__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BACK_PRIMARY_COLOR_NV
#  define GL_BACK_PRIMARY_COLOR_NV 0x8C77
#endif
#ifndef GL_BACK_SECONDARY_COLOR_NV
#  define GL_BACK_SECONDARY_COLOR_NV 0x8C78
#endif
#ifndef GL_TEXTURE_COORD_NV
#  define GL_TEXTURE_COORD_NV 0x8C79
#endif
#ifndef GL_CLIP_DISTANCE_NV
#  define GL_CLIP_DISTANCE_NV 0x8C7A
#endif
#ifndef GL_VERTEX_ID_NV
#  define GL_VERTEX_ID_NV 0x8C7B
#endif
#ifndef GL_PRIMITIVE_ID_NV
#  define GL_PRIMITIVE_ID_NV 0x8C7C
#endif
#ifndef GL_GENERIC_ATTRIB_NV
#  define GL_GENERIC_ATTRIB_NV 0x8C7D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
#  define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#endif
#ifndef GL_ACTIVE_VARYINGS_NV
#  define GL_ACTIVE_VARYINGS_NV 0x8C81
#endif
#ifndef GL_ACTIVE_VARYING_MAX_LENGTH_NV
#  define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS_NV
#  define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#endif
#ifndef GL_TRANSFORM_FEEDBACK_RECORD_NV
#  define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
#endif
#ifndef GL_PRIMITIVES_GENERATED_NV
#  define GL_PRIMITIVES_GENERATED_NV 0x8C87
#endif
#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
#  define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#endif
#ifndef GL_RASTERIZER_DISCARD_NV
#  define GL_RASTERIZER_DISCARD_NV 0x8C89
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#endif
#ifndef GL_INTERLEAVED_ATTRIBS_NV
#  define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
#endif
#ifndef GL_SEPARATE_ATTRIBS_NV
#  define GL_SEPARATE_ATTRIBS_NV 0x8C8D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#endif
#ifndef GL_LAYER_NV
#  define GL_LAYER_NV 0x8DAA
#endif
#ifndef GL_NEXT_BUFFER_NV
#  define GL_NEXT_BUFFER_NV -2
#endif
#ifndef GL_SKIP_COMPONENTS4_NV
#  define GL_SKIP_COMPONENTS4_NV -3
#endif
#ifndef GL_SKIP_COMPONENTS3_NV
#  define GL_SKIP_COMPONENTS3_NV -4
#endif
#ifndef GL_SKIP_COMPONENTS2_NV
#  define GL_SKIP_COMPONENTS2_NV -5
#endif
#ifndef GL_SKIP_COMPONENTS1_NV
#  define GL_SKIP_COMPONENTS1_NV -6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXENDTRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
typedef void (APIENTRYP PFNGLUXBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
typedef void (APIENTRYP PFNGLUXACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
typedef GLint (APIENTRYP PFNGLUXGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
typedef void (APIENTRYP PFNGLUXGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
typedef void (APIENTRYP PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
extern PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC glBeginTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
extern PFNGLUXENDTRANSFORMFEEDBACKNVPROC glEndTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC glTransformFeedbackAttribsNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
extern PFNGLUXBINDBUFFERRANGENVPROC glBindBufferRangeNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
extern PFNGLUXBINDBUFFEROFFSETNVPROC glBindBufferOffsetNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
extern PFNGLUXBINDBUFFERBASENVPROC glBindBufferBaseNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
extern PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC glTransformFeedbackVaryingsNV;
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
extern PFNGLUXACTIVEVARYINGNVPROC glActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
extern PFNGLUXGETVARYINGLOCATIONNVPROC glGetVaryingLocationNV;
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
extern PFNGLUXGETACTIVEVARYINGNVPROC glGetActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
extern PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC glGetTransformFeedbackVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC glTransformFeedbackStreamAttribsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:52 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback__
#define __GLUX_GL_NV_transform_feedback__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BACK_PRIMARY_COLOR_NV
#  define GL_BACK_PRIMARY_COLOR_NV 0x8C77
#endif
#ifndef GL_BACK_SECONDARY_COLOR_NV
#  define GL_BACK_SECONDARY_COLOR_NV 0x8C78
#endif
#ifndef GL_TEXTURE_COORD_NV
#  define GL_TEXTURE_COORD_NV 0x8C79
#endif
#ifndef GL_CLIP_DISTANCE_NV
#  define GL_CLIP_DISTANCE_NV 0x8C7A
#endif
#ifndef GL_VERTEX_ID_NV
#  define GL_VERTEX_ID_NV 0x8C7B
#endif
#ifndef GL_PRIMITIVE_ID_NV
#  define GL_PRIMITIVE_ID_NV 0x8C7C
#endif
#ifndef GL_GENERIC_ATTRIB_NV
#  define GL_GENERIC_ATTRIB_NV 0x8C7D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
#  define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#endif
#ifndef GL_ACTIVE_VARYINGS_NV
#  define GL_ACTIVE_VARYINGS_NV 0x8C81
#endif
#ifndef GL_ACTIVE_VARYING_MAX_LENGTH_NV
#  define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS_NV
#  define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#endif
#ifndef GL_TRANSFORM_FEEDBACK_RECORD_NV
#  define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
#endif
#ifndef GL_PRIMITIVES_GENERATED_NV
#  define GL_PRIMITIVES_GENERATED_NV 0x8C87
#endif
#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
#  define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#endif
#ifndef GL_RASTERIZER_DISCARD_NV
#  define GL_RASTERIZER_DISCARD_NV 0x8C89
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#endif
#ifndef GL_INTERLEAVED_ATTRIBS_NV
#  define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
#endif
#ifndef GL_SEPARATE_ATTRIBS_NV
#  define GL_SEPARATE_ATTRIBS_NV 0x8C8D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#endif
#ifndef GL_LAYER_NV
#  define GL_LAYER_NV 0x8DAA
#endif
#ifndef GL_NEXT_BUFFER_NV
#  define GL_NEXT_BUFFER_NV -2
#endif
#ifndef GL_SKIP_COMPONENTS4_NV
#  define GL_SKIP_COMPONENTS4_NV -3
#endif
#ifndef GL_SKIP_COMPONENTS3_NV
#  define GL_SKIP_COMPONENTS3_NV -4
#endif
#ifndef GL_SKIP_COMPONENTS2_NV
#  define GL_SKIP_COMPONENTS2_NV -5
#endif
#ifndef GL_SKIP_COMPONENTS1_NV
#  define GL_SKIP_COMPONENTS1_NV -6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXENDTRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
typedef void (APIENTRYP PFNGLUXBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
typedef void (APIENTRYP PFNGLUXACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
typedef GLint (APIENTRYP PFNGLUXGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
typedef void (APIENTRYP PFNGLUXGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
typedef void (APIENTRYP PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
extern PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC glBeginTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
extern PFNGLUXENDTRANSFORMFEEDBACKNVPROC glEndTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC glTransformFeedbackAttribsNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
extern PFNGLUXBINDBUFFERRANGENVPROC glBindBufferRangeNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
extern PFNGLUXBINDBUFFEROFFSETNVPROC glBindBufferOffsetNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
extern PFNGLUXBINDBUFFERBASENVPROC glBindBufferBaseNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
extern PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC glTransformFeedbackVaryingsNV;
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
extern PFNGLUXACTIVEVARYINGNVPROC glActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
extern PFNGLUXGETVARYINGLOCATIONNVPROC glGetVaryingLocationNV;
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
extern PFNGLUXGETACTIVEVARYINGNVPROC glGetActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
extern PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC glGetTransformFeedbackVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC glTransformFeedbackStreamAttribsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:12 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback__
#define __GLUX_GL_NV_transform_feedback__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BACK_PRIMARY_COLOR_NV
#  define GL_BACK_PRIMARY_COLOR_NV 0x8C77
#endif
#ifndef GL_BACK_SECONDARY_COLOR_NV
#  define GL_BACK_SECONDARY_COLOR_NV 0x8C78
#endif
#ifndef GL_TEXTURE_COORD_NV
#  define GL_TEXTURE_COORD_NV 0x8C79
#endif
#ifndef GL_CLIP_DISTANCE_NV
#  define GL_CLIP_DISTANCE_NV 0x8C7A
#endif
#ifndef GL_VERTEX_ID_NV
#  define GL_VERTEX_ID_NV 0x8C7B
#endif
#ifndef GL_PRIMITIVE_ID_NV
#  define GL_PRIMITIVE_ID_NV 0x8C7C
#endif
#ifndef GL_GENERIC_ATTRIB_NV
#  define GL_GENERIC_ATTRIB_NV 0x8C7D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
#  define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#endif
#ifndef GL_ACTIVE_VARYINGS_NV
#  define GL_ACTIVE_VARYINGS_NV 0x8C81
#endif
#ifndef GL_ACTIVE_VARYING_MAX_LENGTH_NV
#  define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS_NV
#  define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#endif
#ifndef GL_TRANSFORM_FEEDBACK_RECORD_NV
#  define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
#endif
#ifndef GL_PRIMITIVES_GENERATED_NV
#  define GL_PRIMITIVES_GENERATED_NV 0x8C87
#endif
#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
#  define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#endif
#ifndef GL_RASTERIZER_DISCARD_NV
#  define GL_RASTERIZER_DISCARD_NV 0x8C89
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#endif
#ifndef GL_INTERLEAVED_ATTRIBS_NV
#  define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
#endif
#ifndef GL_SEPARATE_ATTRIBS_NV
#  define GL_SEPARATE_ATTRIBS_NV 0x8C8D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#endif
#ifndef GL_LAYER_NV
#  define GL_LAYER_NV 0x8DAA
#endif
#ifndef GL_NEXT_BUFFER_NV
#  define GL_NEXT_BUFFER_NV -2
#endif
#ifndef GL_SKIP_COMPONENTS4_NV
#  define GL_SKIP_COMPONENTS4_NV -3
#endif
#ifndef GL_SKIP_COMPONENTS3_NV
#  define GL_SKIP_COMPONENTS3_NV -4
#endif
#ifndef GL_SKIP_COMPONENTS2_NV
#  define GL_SKIP_COMPONENTS2_NV -5
#endif
#ifndef GL_SKIP_COMPONENTS1_NV
#  define GL_SKIP_COMPONENTS1_NV -6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXENDTRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
typedef void (APIENTRYP PFNGLUXBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
typedef void (APIENTRYP PFNGLUXACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
typedef GLint (APIENTRYP PFNGLUXGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
typedef void (APIENTRYP PFNGLUXGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
typedef void (APIENTRYP PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
extern PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC glBeginTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
extern PFNGLUXENDTRANSFORMFEEDBACKNVPROC glEndTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC glTransformFeedbackAttribsNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
extern PFNGLUXBINDBUFFERRANGENVPROC glBindBufferRangeNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
extern PFNGLUXBINDBUFFEROFFSETNVPROC glBindBufferOffsetNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
extern PFNGLUXBINDBUFFERBASENVPROC glBindBufferBaseNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
extern PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC glTransformFeedbackVaryingsNV;
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
extern PFNGLUXACTIVEVARYINGNVPROC glActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
extern PFNGLUXGETVARYINGLOCATIONNVPROC glGetVaryingLocationNV;
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
extern PFNGLUXGETACTIVEVARYINGNVPROC glGetActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
extern PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC glGetTransformFeedbackVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC glTransformFeedbackStreamAttribsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:27 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback__
#define __GLUX_GL_NV_transform_feedback__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BACK_PRIMARY_COLOR_NV
#  define GL_BACK_PRIMARY_COLOR_NV 0x8C77
#endif
#ifndef GL_BACK_SECONDARY_COLOR_NV
#  define GL_BACK_SECONDARY_COLOR_NV 0x8C78
#endif
#ifndef GL_TEXTURE_COORD_NV
#  define GL_TEXTURE_COORD_NV 0x8C79
#endif
#ifndef GL_CLIP_DISTANCE_NV
#  define GL_CLIP_DISTANCE_NV 0x8C7A
#endif
#ifndef GL_VERTEX_ID_NV
#  define GL_VERTEX_ID_NV 0x8C7B
#endif
#ifndef GL_PRIMITIVE_ID_NV
#  define GL_PRIMITIVE_ID_NV 0x8C7C
#endif
#ifndef GL_GENERIC_ATTRIB_NV
#  define GL_GENERIC_ATTRIB_NV 0x8C7D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
#  define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#endif
#ifndef GL_ACTIVE_VARYINGS_NV
#  define GL_ACTIVE_VARYINGS_NV 0x8C81
#endif
#ifndef GL_ACTIVE_VARYING_MAX_LENGTH_NV
#  define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS_NV
#  define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#endif
#ifndef GL_TRANSFORM_FEEDBACK_RECORD_NV
#  define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
#endif
#ifndef GL_PRIMITIVES_GENERATED_NV
#  define GL_PRIMITIVES_GENERATED_NV 0x8C87
#endif
#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
#  define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#endif
#ifndef GL_RASTERIZER_DISCARD_NV
#  define GL_RASTERIZER_DISCARD_NV 0x8C89
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#endif
#ifndef GL_INTERLEAVED_ATTRIBS_NV
#  define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
#endif
#ifndef GL_SEPARATE_ATTRIBS_NV
#  define GL_SEPARATE_ATTRIBS_NV 0x8C8D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#endif
#ifndef GL_LAYER_NV
#  define GL_LAYER_NV 0x8DAA
#endif
#ifndef GL_NEXT_BUFFER_NV
#  define GL_NEXT_BUFFER_NV -2
#endif
#ifndef GL_SKIP_COMPONENTS4_NV
#  define GL_SKIP_COMPONENTS4_NV -3
#endif
#ifndef GL_SKIP_COMPONENTS3_NV
#  define GL_SKIP_COMPONENTS3_NV -4
#endif
#ifndef GL_SKIP_COMPONENTS2_NV
#  define GL_SKIP_COMPONENTS2_NV -5
#endif
#ifndef GL_SKIP_COMPONENTS1_NV
#  define GL_SKIP_COMPONENTS1_NV -6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXENDTRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
typedef void (APIENTRYP PFNGLUXBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
typedef void (APIENTRYP PFNGLUXACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
typedef GLint (APIENTRYP PFNGLUXGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
typedef void (APIENTRYP PFNGLUXGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
typedef void (APIENTRYP PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
extern PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC glBeginTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
extern PFNGLUXENDTRANSFORMFEEDBACKNVPROC glEndTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC glTransformFeedbackAttribsNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
extern PFNGLUXBINDBUFFERRANGENVPROC glBindBufferRangeNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
extern PFNGLUXBINDBUFFEROFFSETNVPROC glBindBufferOffsetNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
extern PFNGLUXBINDBUFFERBASENVPROC glBindBufferBaseNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
extern PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC glTransformFeedbackVaryingsNV;
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
extern PFNGLUXACTIVEVARYINGNVPROC glActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
extern PFNGLUXGETVARYINGLOCATIONNVPROC glGetVaryingLocationNV;
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
extern PFNGLUXGETACTIVEVARYINGNVPROC glGetActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
extern PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC glGetTransformFeedbackVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC glTransformFeedbackStreamAttribsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:32 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback__
#define __GLUX_GL_NV_transform_feedback__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BACK_PRIMARY_COLOR_NV
#  define GL_BACK_PRIMARY_COLOR_NV 0x8C77
#endif
#ifndef GL_BACK_SECONDARY_COLOR_NV
#  define GL_BACK_SECONDARY_COLOR_NV 0x8C78
#endif
#ifndef GL_TEXTURE_COORD_NV
#  define GL_TEXTURE_COORD_NV 0x8C79
#endif
#ifndef GL_CLIP_DISTANCE_NV
#  define GL_CLIP_DISTANCE_NV 0x8C7A
#endif
#ifndef GL_VERTEX_ID_NV
#  define GL_VERTEX_ID_NV 0x8C7B
#endif
#ifndef GL_PRIMITIVE_ID_NV
#  define GL_PRIMITIVE_ID_NV 0x8C7C
#endif
#ifndef GL_GENERIC_ATTRIB_NV
#  define GL_GENERIC_ATTRIB_NV 0x8C7D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
#  define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#endif
#ifndef GL_ACTIVE_VARYINGS_NV
#  define GL_ACTIVE_VARYINGS_NV 0x8C81
#endif
#ifndef GL_ACTIVE_VARYING_MAX_LENGTH_NV
#  define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS_NV
#  define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#endif
#ifndef GL_TRANSFORM_FEEDBACK_RECORD_NV
#  define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
#endif
#ifndef GL_PRIMITIVES_GENERATED_NV
#  define GL_PRIMITIVES_GENERATED_NV 0x8C87
#endif
#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
#  define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#endif
#ifndef GL_RASTERIZER_DISCARD_NV
#  define GL_RASTERIZER_DISCARD_NV 0x8C89
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#endif
#ifndef GL_INTERLEAVED_ATTRIBS_NV
#  define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
#endif
#ifndef GL_SEPARATE_ATTRIBS_NV
#  define GL_SEPARATE_ATTRIBS_NV 0x8C8D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#endif
#ifndef GL_LAYER_NV
#  define GL_LAYER_NV 0x8DAA
#endif
#ifndef GL_NEXT_BUFFER_NV
#  define GL_NEXT_BUFFER_NV -2
#endif
#ifndef GL_SKIP_COMPONENTS4_NV
#  define GL_SKIP_COMPONENTS4_NV -3
#endif
#ifndef GL_SKIP_COMPONENTS3_NV
#  define GL_SKIP_COMPONENTS3_NV -4
#endif
#ifndef GL_SKIP_COMPONENTS2_NV
#  define GL_SKIP_COMPONENTS2_NV -5
#endif
#ifndef GL_SKIP_COMPONENTS1_NV
#  define GL_SKIP_COMPONENTS1_NV -6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXENDTRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
typedef void (APIENTRYP PFNGLUXBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
typedef void (APIENTRYP PFNGLUXACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
typedef GLint (APIENTRYP PFNGLUXGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
typedef void (APIENTRYP PFNGLUXGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
typedef void (APIENTRYP PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
extern PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC glBeginTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
extern PFNGLUXENDTRANSFORMFEEDBACKNVPROC glEndTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC glTransformFeedbackAttribsNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
extern PFNGLUXBINDBUFFERRANGENVPROC glBindBufferRangeNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
extern PFNGLUXBINDBUFFEROFFSETNVPROC glBindBufferOffsetNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
extern PFNGLUXBINDBUFFERBASENVPROC glBindBufferBaseNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
extern PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC glTransformFeedbackVaryingsNV;
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
extern PFNGLUXACTIVEVARYINGNVPROC glActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
extern PFNGLUXGETVARYINGLOCATIONNVPROC glGetVaryingLocationNV;
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
extern PFNGLUXGETACTIVEVARYINGNVPROC glGetActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
extern PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC glGetTransformFeedbackVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC glTransformFeedbackStreamAttribsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:48 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback__
#define __GLUX_GL_NV_transform_feedback__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BACK_PRIMARY_COLOR_NV
#  define GL_BACK_PRIMARY_COLOR_NV 0x8C77
#endif
#ifndef GL_BACK_SECONDARY_COLOR_NV
#  define GL_BACK_SECONDARY_COLOR_NV 0x8C78
#endif
#ifndef GL_TEXTURE_COORD_NV
#  define GL_TEXTURE_COORD_NV 0x8C79
#endif
#ifndef GL_CLIP_DISTANCE_NV
#  define GL_CLIP_DISTANCE_NV 0x8C7A
#endif
#ifndef GL_VERTEX_ID_NV
#  define GL_VERTEX_ID_NV 0x8C7B
#endif
#ifndef GL_PRIMITIVE_ID_NV
#  define GL_PRIMITIVE_ID_NV 0x8C7C
#endif
#ifndef GL_GENERIC_ATTRIB_NV
#  define GL_GENERIC_ATTRIB_NV 0x8C7D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
#  define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#endif
#ifndef GL_ACTIVE_VARYINGS_NV
#  define GL_ACTIVE_VARYINGS_NV 0x8C81
#endif
#ifndef GL_ACTIVE_VARYING_MAX_LENGTH_NV
#  define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS_NV
#  define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#endif
#ifndef GL_TRANSFORM_FEEDBACK_RECORD_NV
#  define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
#endif
#ifndef GL_PRIMITIVES_GENERATED_NV
#  define GL_PRIMITIVES_GENERATED_NV 0x8C87
#endif
#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
#  define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#endif
#ifndef GL_RASTERIZER_DISCARD_NV
#  define GL_RASTERIZER_DISCARD_NV 0x8C89
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#endif
#ifndef GL_INTERLEAVED_ATTRIBS_NV
#  define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
#endif
#ifndef GL_SEPARATE_ATTRIBS_NV
#  define GL_SEPARATE_ATTRIBS_NV 0x8C8D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#endif
#ifndef GL_LAYER_NV
#  define GL_LAYER_NV 0x8DAA
#endif
#ifndef GL_NEXT_BUFFER_NV
#  define GL_NEXT_BUFFER_NV -2
#endif
#ifndef GL_SKIP_COMPONENTS4_NV
#  define GL_SKIP_COMPONENTS4_NV -3
#endif
#ifndef GL_SKIP_COMPONENTS3_NV
#  define GL_SKIP_COMPONENTS3_NV -4
#endif
#ifndef GL_SKIP_COMPONENTS2_NV
#  define GL_SKIP_COMPONENTS2_NV -5
#endif
#ifndef GL_SKIP_COMPONENTS1_NV
#  define GL_SKIP_COMPONENTS1_NV -6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXENDTRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
typedef void (APIENTRYP PFNGLUXBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
typedef void (APIENTRYP PFNGLUXACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
typedef GLint (APIENTRYP PFNGLUXGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
typedef void (APIENTRYP PFNGLUXGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
typedef void (APIENTRYP PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
extern PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC glBeginTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
extern PFNGLUXENDTRANSFORMFEEDBACKNVPROC glEndTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC glTransformFeedbackAttribsNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
extern PFNGLUXBINDBUFFERRANGENVPROC glBindBufferRangeNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
extern PFNGLUXBINDBUFFEROFFSETNVPROC glBindBufferOffsetNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
extern PFNGLUXBINDBUFFERBASENVPROC glBindBufferBaseNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
extern PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC glTransformFeedbackVaryingsNV;
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
extern PFNGLUXACTIVEVARYINGNVPROC glActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
extern PFNGLUXGETVARYINGLOCATIONNVPROC glGetVaryingLocationNV;
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
extern PFNGLUXGETACTIVEVARYINGNVPROC glGetActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
extern PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC glGetTransformFeedbackVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC glTransformFeedbackStreamAttribsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:24:55 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback__
#define __GLUX_GL_NV_transform_feedback__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BACK_PRIMARY_COLOR_NV
#  define GL_BACK_PRIMARY_COLOR_NV 0x8C77
#endif
#ifndef GL_BACK_SECONDARY_COLOR_NV
#  define GL_BACK_SECONDARY_COLOR_NV 0x8C78
#endif
#ifndef GL_TEXTURE_COORD_NV
#  define GL_TEXTURE_COORD_NV 0x8C79
#endif
#ifndef GL_CLIP_DISTANCE_NV
#  define GL_CLIP_DISTANCE_NV 0x8C7A
#endif
#ifndef GL_VERTEX_ID_NV
#  define GL_VERTEX_ID_NV 0x8C7B
#endif
#ifndef GL_PRIMITIVE_ID_NV
#  define GL_PRIMITIVE_ID_NV 0x8C7C
#endif
#ifndef GL_GENERIC_ATTRIB_NV
#  define GL_GENERIC_ATTRIB_NV 0x8C7D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
#  define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#endif
#ifndef GL_ACTIVE_VARYINGS_NV
#  define GL_ACTIVE_VARYINGS_NV 0x8C81
#endif
#ifndef GL_ACTIVE_VARYING_MAX_LENGTH_NV
#  define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS_NV
#  define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#endif
#ifndef GL_TRANSFORM_FEEDBACK_RECORD_NV
#  define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
#endif
#ifndef GL_PRIMITIVES_GENERATED_NV
#  define GL_PRIMITIVES_GENERATED_NV 0x8C87
#endif
#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
#  define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#endif
#ifndef GL_RASTERIZER_DISCARD_NV
#  define GL_RASTERIZER_DISCARD_NV 0x8C89
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#endif
#ifndef GL_INTERLEAVED_ATTRIBS_NV
#  define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
#endif
#ifndef GL_SEPARATE_ATTRIBS_NV
#  define GL_SEPARATE_ATTRIBS_NV 0x8C8D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#endif
#ifndef GL_LAYER_NV
#  define GL_LAYER_NV 0x8DAA
#endif
#ifndef GL_NEXT_BUFFER_NV
#  define GL_NEXT_BUFFER_NV -2
#endif
#ifndef GL_SKIP_COMPONENTS4_NV
#  define GL_SKIP_COMPONENTS4_NV -3
#endif
#ifndef GL_SKIP_COMPONENTS3_NV
#  define GL_SKIP_COMPONENTS3_NV -4
#endif
#ifndef GL_SKIP_COMPONENTS2_NV
#  define GL_SKIP_COMPONENTS2_NV -5
#endif
#ifndef GL_SKIP_COMPONENTS1_NV
#  define GL_SKIP_COMPONENTS1_NV -6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXENDTRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
typedef void (APIENTRYP PFNGLUXBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
typedef void (APIENTRYP PFNGLUXACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
typedef GLint (APIENTRYP PFNGLUXGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
typedef void (APIENTRYP PFNGLUXGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
typedef void (APIENTRYP PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
extern PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC glBeginTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
extern PFNGLUXENDTRANSFORMFEEDBACKNVPROC glEndTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC glTransformFeedbackAttribsNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
extern PFNGLUXBINDBUFFERRANGENVPROC glBindBufferRangeNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
extern PFNGLUXBINDBUFFEROFFSETNVPROC glBindBufferOffsetNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
extern PFNGLUXBINDBUFFERBASENVPROC glBindBufferBaseNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
extern PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC glTransformFeedbackVaryingsNV;
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
extern PFNGLUXACTIVEVARYINGNVPROC glActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
extern PFNGLUXGETVARYINGLOCATIONNVPROC glGetVaryingLocationNV;
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
extern PFNGLUXGETACTIVEVARYINGNVPROC glGetActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
extern PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC glGetTransformFeedbackVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC glTransformFeedbackStreamAttribsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:27:54 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback__
#define __GLUX_GL_NV_transform_feedback__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BACK_PRIMARY_COLOR_NV
#  define GL_BACK_PRIMARY_COLOR_NV 0x8C77
#endif
#ifndef GL_BACK_SECONDARY_COLOR_NV
#  define GL_BACK_SECONDARY_COLOR_NV 0x8C78
#endif
#ifndef GL_TEXTURE_COORD_NV
#  define GL_TEXTURE_COORD_NV 0x8C79
#endif
#ifndef GL_CLIP_DISTANCE_NV
#  define GL_CLIP_DISTANCE_NV 0x8C7A
#endif
#ifndef GL_VERTEX_ID_NV
#  define GL_VERTEX_ID_NV 0x8C7B
#endif
#ifndef GL_PRIMITIVE_ID_NV
#  define GL_PRIMITIVE_ID_NV 0x8C7C
#endif
#ifndef GL_GENERIC_ATTRIB_NV
#  define GL_GENERIC_ATTRIB_NV 0x8C7D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
#  define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#endif
#ifndef GL_ACTIVE_VARYINGS_NV
#  define GL_ACTIVE_VARYINGS_NV 0x8C81
#endif
#ifndef GL_ACTIVE_VARYING_MAX_LENGTH_NV
#  define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS_NV
#  define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#endif
#ifndef GL_TRANSFORM_FEEDBACK_RECORD_NV
#  define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
#endif
#ifndef GL_PRIMITIVES_GENERATED_NV
#  define GL_PRIMITIVES_GENERATED_NV 0x8C87
#endif
#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
#  define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#endif
#ifndef GL_RASTERIZER_DISCARD_NV
#  define GL_RASTERIZER_DISCARD_NV 0x8C89
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#endif
#ifndef GL_INTERLEAVED_ATTRIBS_NV
#  define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
#endif
#ifndef GL_SEPARATE_ATTRIBS_NV
#  define GL_SEPARATE_ATTRIBS_NV 0x8C8D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#endif
#ifndef GL_LAYER_NV
#  define GL_LAYER_NV 0x8DAA
#endif
#ifndef GL_NEXT_BUFFER_NV
#  define GL_NEXT_BUFFER_NV -2
#endif
#ifndef GL_SKIP_COMPONENTS4_NV
#  define GL_SKIP_COMPONENTS4_NV -3
#endif
#ifndef GL_SKIP_COMPONENTS3_NV
#  define GL_SKIP_COMPONENTS3_NV -4
#endif
#ifndef GL_SKIP_COMPONENTS2_NV
#  define GL_SKIP_COMPONENTS2_NV -5
#endif
#ifndef GL_SKIP_COMPONENTS1_NV
#  define GL_SKIP_COMPONENTS1_NV -6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXENDTRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
typedef void (APIENTRYP PFNGLUXBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
typedef void (APIENTRYP PFNGLUXACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
typedef GLint (APIENTRYP PFNGLUXGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
typedef void (APIENTRYP PFNGLUXGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
typedef void (APIENTRYP PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
extern PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC glBeginTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
extern PFNGLUXENDTRANSFORMFEEDBACKNVPROC glEndTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC glTransformFeedbackAttribsNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
extern PFNGLUXBINDBUFFERRANGENVPROC glBindBufferRangeNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
extern PFNGLUXBINDBUFFEROFFSETNVPROC glBindBufferOffsetNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
extern PFNGLUXBINDBUFFERBASENVPROC glBindBufferBaseNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
extern PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC glTransformFeedbackVaryingsNV;
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
extern PFNGLUXACTIVEVARYINGNVPROC glActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
extern PFNGLUXGETVARYINGLOCATIONNVPROC glGetVaryingLocationNV;
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
extern PFNGLUXGETACTIVEVARYINGNVPROC glGetActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
extern PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC glGetTransformFeedbackVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC glTransformFeedbackStreamAttribsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:16:54 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback__
#define __GLUX_GL_NV_transform_feedback__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BACK_PRIMARY_COLOR_NV
#  define GL_BACK_PRIMARY_COLOR_NV 0x8C77
#endif
#ifndef GL_BACK_SECONDARY_COLOR_NV
#  define GL_BACK_SECONDARY_COLOR_NV 0x8C78
#endif
#ifndef GL_TEXTURE_COORD_NV
#  define GL_TEXTURE_COORD_NV 0x8C79
#endif
#ifndef GL_CLIP_DISTANCE_NV
#  define GL_CLIP_DISTANCE_NV 0x8C7A
#endif
#ifndef GL_VERTEX_ID_NV
#  define GL_VERTEX_ID_NV 0x8C7B
#endif
#ifndef GL_PRIMITIVE_ID_NV
#  define GL_PRIMITIVE_ID_NV 0x8C7C
#endif
#ifndef GL_GENERIC_ATTRIB_NV
#  define GL_GENERIC_ATTRIB_NV 0x8C7D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
#  define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#endif
#ifndef GL_ACTIVE_VARYINGS_NV
#  define GL_ACTIVE_VARYINGS_NV 0x8C81
#endif
#ifndef GL_ACTIVE_VARYING_MAX_LENGTH_NV
#  define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS_NV
#  define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#endif
#ifndef GL_TRANSFORM_FEEDBACK_RECORD_NV
#  define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
#endif
#ifndef GL_PRIMITIVES_GENERATED_NV
#  define GL_PRIMITIVES_GENERATED_NV 0x8C87
#endif
#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
#  define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#endif
#ifndef GL_RASTERIZER_DISCARD_NV
#  define GL_RASTERIZER_DISCARD_NV 0x8C89
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#endif
#ifndef GL_INTERLEAVED_ATTRIBS_NV
#  define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
#endif
#ifndef GL_SEPARATE_ATTRIBS_NV
#  define GL_SEPARATE_ATTRIBS_NV 0x8C8D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#endif
#ifndef GL_LAYER_NV
#  define GL_LAYER_NV 0x8DAA
#endif
#ifndef GL_NEXT_BUFFER_NV
#  define GL_NEXT_BUFFER_NV -2
#endif
#ifndef GL_SKIP_COMPONENTS4_NV
#  define GL_SKIP_COMPONENTS4_NV -3
#endif
#ifndef GL_SKIP_COMPONENTS3_NV
#  define GL_SKIP_COMPONENTS3_NV -4
#endif
#ifndef GL_SKIP_COMPONENTS2_NV
#  define GL_SKIP_COMPONENTS2_NV -5
#endif
#ifndef GL_SKIP_COMPONENTS1_NV
#  define GL_SKIP_COMPONENTS1_NV -6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXENDTRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
typedef void (APIENTRYP PFNGLUXBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
typedef void (APIENTRYP PFNGLUXACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
typedef GLint (APIENTRYP PFNGLUXGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
typedef void (APIENTRYP PFNGLUXGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
typedef void (APIENTRYP PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
extern PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC glBeginTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
extern PFNGLUXENDTRANSFORMFEEDBACKNVPROC glEndTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC glTransformFeedbackAttribsNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
extern PFNGLUXBINDBUFFERRANGENVPROC glBindBufferRangeNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
extern PFNGLUXBINDBUFFEROFFSETNVPROC glBindBufferOffsetNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
extern PFNGLUXBINDBUFFERBASENVPROC glBindBufferBaseNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
extern PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC glTransformFeedbackVaryingsNV;
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
extern PFNGLUXACTIVEVARYINGNVPROC glActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
extern PFNGLUXGETVARYINGLOCATIONNVPROC glGetVaryingLocationNV;
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
extern PFNGLUXGETACTIVEVARYINGNVPROC glGetActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
extern PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC glGetTransformFeedbackVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC glTransformFeedbackStreamAttribsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:00 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback__
#define __GLUX_GL_NV_transform_feedback__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BACK_PRIMARY_COLOR_NV
#  define GL_BACK_PRIMARY_COLOR_NV 0x8C77
#endif
#ifndef GL_BACK_SECONDARY_COLOR_NV
#  define GL_BACK_SECONDARY_COLOR_NV 0x8C78
#endif
#ifndef GL_TEXTURE_COORD_NV
#  define GL_TEXTURE_COORD_NV 0x8C79
#endif
#ifndef GL_CLIP_DISTANCE_NV
#  define GL_CLIP_DISTANCE_NV 0x8C7A
#endif
#ifndef GL_VERTEX_ID_NV
#  define GL_VERTEX_ID_NV 0x8C7B
#endif
#ifndef GL_PRIMITIVE_ID_NV
#  define GL_PRIMITIVE_ID_NV 0x8C7C
#endif
#ifndef GL_GENERIC_ATTRIB_NV
#  define GL_GENERIC_ATTRIB_NV 0x8C7D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
#  define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#endif
#ifndef GL_ACTIVE_VARYINGS_NV
#  define GL_ACTIVE_VARYINGS_NV 0x8C81
#endif
#ifndef GL_ACTIVE_VARYING_MAX_LENGTH_NV
#  define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS_NV
#  define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#endif
#ifndef GL_TRANSFORM_FEEDBACK_RECORD_NV
#  define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
#endif
#ifndef GL_PRIMITIVES_GENERATED_NV
#  define GL_PRIMITIVES_GENERATED_NV 0x8C87
#endif
#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
#  define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#endif
#ifndef GL_RASTERIZER_DISCARD_NV
#  define GL_RASTERIZER_DISCARD_NV 0x8C89
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#endif
#ifndef GL_INTERLEAVED_ATTRIBS_NV
#  define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
#endif
#ifndef GL_SEPARATE_ATTRIBS_NV
#  define GL_SEPARATE_ATTRIBS_NV 0x8C8D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#endif
#ifndef GL_LAYER_NV
#  define GL_LAYER_NV 0x8DAA
#endif
#ifndef GL_NEXT_BUFFER_NV
#  define GL_NEXT_BUFFER_NV -2
#endif
#ifndef GL_SKIP_COMPONENTS4_NV
#  define GL_SKIP_COMPONENTS4_NV -3
#endif
#ifndef GL_SKIP_COMPONENTS3_NV
#  define GL_SKIP_COMPONENTS3_NV -4
#endif
#ifndef GL_SKIP_COMPONENTS2_NV
#  define GL_SKIP_COMPONENTS2_NV -5
#endif
#ifndef GL_SKIP_COMPONENTS1_NV
#  define GL_SKIP_COMPONENTS1_NV -6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXENDTRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
typedef void (APIENTRYP PFNGLUXBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
typedef void (APIENTRYP PFNGLUXACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
typedef GLint (APIENTRYP PFNGLUXGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
typedef void (APIENTRYP PFNGLUXGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
typedef void (APIENTRYP PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
extern PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC glBeginTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
extern PFNGLUXENDTRANSFORMFEEDBACKNVPROC glEndTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC glTransformFeedbackAttribsNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
extern PFNGLUXBINDBUFFERRANGENVPROC glBindBufferRangeNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
extern PFNGLUXBINDBUFFEROFFSETNVPROC glBindBufferOffsetNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
extern PFNGLUXBINDBUFFERBASENVPROC glBindBufferBaseNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
extern PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC glTransformFeedbackVaryingsNV;
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
extern PFNGLUXACTIVEVARYINGNVPROC glActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
extern PFNGLUXGETVARYINGLOCATIONNVPROC glGetVaryingLocationNV;
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
extern PFNGLUXGETACTIVEVARYINGNVPROC glGetActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
extern PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC glGetTransformFeedbackVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC glTransformFeedbackStreamAttribsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:18 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback__
#define __GLUX_GL_NV_transform_feedback__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BACK_PRIMARY_COLOR_NV
#  define GL_BACK_PRIMARY_COLOR_NV 0x8C77
#endif
#ifndef GL_BACK_SECONDARY_COLOR_NV
#  define GL_BACK_SECONDARY_COLOR_NV 0x8C78
#endif
#ifndef GL_TEXTURE_COORD_NV
#  define GL_TEXTURE_COORD_NV 0x8C79
#endif
#ifndef GL_CLIP_DISTANCE_NV
#  define GL_CLIP_DISTANCE_NV 0x8C7A
#endif
#ifndef GL_VERTEX_ID_NV
#  define GL_VERTEX_ID_NV 0x8C7B
#endif
#ifndef GL_PRIMITIVE_ID_NV
#  define GL_PRIMITIVE_ID_NV 0x8C7C
#endif
#ifndef GL_GENERIC_ATTRIB_NV
#  define GL_GENERIC_ATTRIB_NV 0x8C7D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
#  define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#endif
#ifndef GL_ACTIVE_VARYINGS_NV
#  define GL_ACTIVE_VARYINGS_NV 0x8C81
#endif
#ifndef GL_ACTIVE_VARYING_MAX_LENGTH_NV
#  define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS_NV
#  define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#endif
#ifndef GL_TRANSFORM_FEEDBACK_RECORD_NV
#  define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
#endif
#ifndef GL_PRIMITIVES_GENERATED_NV
#  define GL_PRIMITIVES_GENERATED_NV 0x8C87
#endif
#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
#  define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#endif
#ifndef GL_RASTERIZER_DISCARD_NV
#  define GL_RASTERIZER_DISCARD_NV 0x8C89
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#endif
#ifndef GL_INTERLEAVED_ATTRIBS_NV
#  define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
#endif
#ifndef GL_SEPARATE_ATTRIBS_NV
#  define GL_SEPARATE_ATTRIBS_NV 0x8C8D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#endif
#ifndef GL_LAYER_NV
#  define GL_LAYER_NV 0x8DAA
#endif
#ifndef GL_NEXT_BUFFER_NV
#  define GL_NEXT_BUFFER_NV -2
#endif
#ifndef GL_SKIP_COMPONENTS4_NV
#  define GL_SKIP_COMPONENTS4_NV -3
#endif
#ifndef GL_SKIP_COMPONENTS3_NV
#  define GL_SKIP_COMPONENTS3_NV -4
#endif
#ifndef GL_SKIP_COMPONENTS2_NV
#  define GL_SKIP_COMPONENTS2_NV -5
#endif
#ifndef GL_SKIP_COMPONENTS1_NV
#  define GL_SKIP_COMPONENTS1_NV -6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXENDTRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
typedef void (APIENTRYP PFNGLUXBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
typedef void (APIENTRYP PFNGLUXACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
typedef GLint (APIENTRYP PFNGLUXGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
typedef void (APIENTRYP PFNGLUXGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
typedef void (APIENTRYP PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
extern PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC glBeginTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
extern PFNGLUXENDTRANSFORMFEEDBACKNVPROC glEndTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC glTransformFeedbackAttribsNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
extern PFNGLUXBINDBUFFERRANGENVPROC glBindBufferRangeNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
extern PFNGLUXBINDBUFFEROFFSETNVPROC glBindBufferOffsetNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
extern PFNGLUXBINDBUFFERBASENVPROC glBindBufferBaseNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
extern PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC glTransformFeedbackVaryingsNV;
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
extern PFNGLUXACTIVEVARYINGNVPROC glActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
extern PFNGLUXGETVARYINGLOCATIONNVPROC glGetVaryingLocationNV;
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
extern PFNGLUXGETACTIVEVARYINGNVPROC glGetActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
extern PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC glGetTransformFeedbackVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC glTransformFeedbackStreamAttribsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:36:58 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback__
#define __GLUX_GL_NV_transform_feedback__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BACK_PRIMARY_COLOR_NV
#  define GL_BACK_PRIMARY_COLOR_NV 0x8C77
#endif
#ifndef GL_BACK_SECONDARY_COLOR_NV
#  define GL_BACK_SECONDARY_COLOR_NV 0x8C78
#endif
#ifndef GL_TEXTURE_COORD_NV
#  define GL_TEXTURE_COORD_NV 0x8C79
#endif
#ifndef GL_CLIP_DISTANCE_NV
#  define GL_CLIP_DISTANCE_NV 0x8C7A
#endif
#ifndef GL_VERTEX_ID_NV
#  define GL_VERTEX_ID_NV 0x8C7B
#endif
#ifndef GL_PRIMITIVE_ID_NV
#  define GL_PRIMITIVE_ID_NV 0x8C7C
#endif
#ifndef GL_GENERIC_ATTRIB_NV
#  define GL_GENERIC_ATTRIB_NV 0x8C7D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
#  define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#endif
#ifndef GL_ACTIVE_VARYINGS_NV
#  define GL_ACTIVE_VARYINGS_NV 0x8C81
#endif
#ifndef GL_ACTIVE_VARYING_MAX_LENGTH_NV
#  define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS_NV
#  define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#endif
#ifndef GL_TRANSFORM_FEEDBACK_RECORD_NV
#  define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
#endif
#ifndef GL_PRIMITIVES_GENERATED_NV
#  define GL_PRIMITIVES_GENERATED_NV 0x8C87
#endif
#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
#  define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#endif
#ifndef GL_RASTERIZER_DISCARD_NV
#  define GL_RASTERIZER_DISCARD_NV 0x8C89
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#endif
#ifndef GL_INTERLEAVED_ATTRIBS_NV
#  define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
#endif
#ifndef GL_SEPARATE_ATTRIBS_NV
#  define GL_SEPARATE_ATTRIBS_NV 0x8C8D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#endif
#ifndef GL_LAYER_NV
#  define GL_LAYER_NV 0x8DAA
#endif
#ifndef GL_NEXT_BUFFER_NV
#  define GL_NEXT_BUFFER_NV -2
#endif
#ifndef GL_SKIP_COMPONENTS4_NV
#  define GL_SKIP_COMPONENTS4_NV -3
#endif
#ifndef GL_SKIP_COMPONENTS3_NV
#  define GL_SKIP_COMPONENTS3_NV -4
#endif
#ifndef GL_SKIP_COMPONENTS2_NV
#  define GL_SKIP_COMPONENTS2_NV -5
#endif
#ifndef GL_SKIP_COMPONENTS1_NV
#  define GL_SKIP_COMPONENTS1_NV -6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXENDTRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
typedef void (APIENTRYP PFNGLUXBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
typedef void (APIENTRYP PFNGLUXACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
typedef GLint (APIENTRYP PFNGLUXGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
typedef void (APIENTRYP PFNGLUXGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
typedef void (APIENTRYP PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
extern PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC glBeginTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
extern PFNGLUXENDTRANSFORMFEEDBACKNVPROC glEndTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC glTransformFeedbackAttribsNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
extern PFNGLUXBINDBUFFERRANGENVPROC glBindBufferRangeNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
extern PFNGLUXBINDBUFFEROFFSETNVPROC glBindBufferOffsetNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
extern PFNGLUXBINDBUFFERBASENVPROC glBindBufferBaseNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
extern PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC glTransformFeedbackVaryingsNV;
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
extern PFNGLUXACTIVEVARYINGNVPROC glActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
extern PFNGLUXGETVARYINGLOCATIONNVPROC glGetVaryingLocationNV;
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
extern PFNGLUXGETACTIVEVARYINGNVPROC glGetActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
extern PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC glGetTransformFeedbackVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC glTransformFeedbackStreamAttribsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:08 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback__
#define __GLUX_GL_NV_transform_feedback__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BACK_PRIMARY_COLOR_NV
#  define GL_BACK_PRIMARY_COLOR_NV 0x8C77
#endif
#ifndef GL_BACK_SECONDARY_COLOR_NV
#  define GL_BACK_SECONDARY_COLOR_NV 0x8C78
#endif
#ifndef GL_TEXTURE_COORD_NV
#  define GL_TEXTURE_COORD_NV 0x8C79
#endif
#ifndef GL_CLIP_DISTANCE_NV
#  define GL_CLIP_DISTANCE_NV 0x8C7A
#endif
#ifndef GL_VERTEX_ID_NV
#  define GL_VERTEX_ID_NV 0x8C7B
#endif
#ifndef GL_PRIMITIVE_ID_NV
#  define GL_PRIMITIVE_ID_NV 0x8C7C
#endif
#ifndef GL_GENERIC_ATTRIB_NV
#  define GL_GENERIC_ATTRIB_NV 0x8C7D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
#  define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#endif
#ifndef GL_ACTIVE_VARYINGS_NV
#  define GL_ACTIVE_VARYINGS_NV 0x8C81
#endif
#ifndef GL_ACTIVE_VARYING_MAX_LENGTH_NV
#  define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS_NV
#  define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#endif
#ifndef GL_TRANSFORM_FEEDBACK_RECORD_NV
#  define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
#endif
#ifndef GL_PRIMITIVES_GENERATED_NV
#  define GL_PRIMITIVES_GENERATED_NV 0x8C87
#endif
#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
#  define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#endif
#ifndef GL_RASTERIZER_DISCARD_NV
#  define GL_RASTERIZER_DISCARD_NV 0x8C89
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#endif
#ifndef GL_INTERLEAVED_ATTRIBS_NV
#  define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
#endif
#ifndef GL_SEPARATE_ATTRIBS_NV
#  define GL_SEPARATE_ATTRIBS_NV 0x8C8D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#endif
#ifndef GL_LAYER_NV
#  define GL_LAYER_NV 0x8DAA
#endif
#ifndef GL_NEXT_BUFFER_NV
#  define GL_NEXT_BUFFER_NV -2
#endif
#ifndef GL_SKIP_COMPONENTS4_NV
#  define GL_SKIP_COMPONENTS4_NV -3
#endif
#ifndef GL_SKIP_COMPONENTS3_NV
#  define GL_SKIP_COMPONENTS3_NV -4
#endif
#ifndef GL_SKIP_COMPONENTS2_NV
#  define GL_SKIP_COMPONENTS2_NV -5
#endif
#ifndef GL_SKIP_COMPONENTS1_NV
#  define GL_SKIP_COMPONENTS1_NV -6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXENDTRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
typedef void (APIENTRYP PFNGLUXBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
typedef void (APIENTRYP PFNGLUXACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
typedef GLint (APIENTRYP PFNGLUXGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
typedef void (APIENTRYP PFNGLUXGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
typedef void (APIENTRYP PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
extern PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC glBeginTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
extern PFNGLUXENDTRANSFORMFEEDBACKNVPROC glEndTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC glTransformFeedbackAttribsNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
extern PFNGLUXBINDBUFFERRANGENVPROC glBindBufferRangeNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
extern PFNGLUXBINDBUFFEROFFSETNVPROC glBindBufferOffsetNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
extern PFNGLUXBINDBUFFERBASENVPROC glBindBufferBaseNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
extern PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC glTransformFeedbackVaryingsNV;
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
extern PFNGLUXACTIVEVARYINGNVPROC glActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
extern PFNGLUXGETVARYINGLOCATIONNVPROC glGetVaryingLocationNV;
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
extern PFNGLUXGETACTIVEVARYINGNVPROC glGetActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
extern PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC glGetTransformFeedbackVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC glTransformFeedbackStreamAttribsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:18 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback__
#define __GLUX_GL_NV_transform_feedback__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BACK_PRIMARY_COLOR_NV
#  define GL_BACK_PRIMARY_COLOR_NV 0x8C77
#endif
#ifndef GL_BACK_SECONDARY_COLOR_NV
#  define GL_BACK_SECONDARY_COLOR_NV 0x8C78
#endif
#ifndef GL_TEXTURE_COORD_NV
#  define GL_TEXTURE_COORD_NV 0x8C79
#endif
#ifndef GL_CLIP_DISTANCE_NV
#  define GL_CLIP_DISTANCE_NV 0x8C7A
#endif
#ifndef GL_VERTEX_ID_NV
#  define GL_VERTEX_ID_NV 0x8C7B
#endif
#ifndef GL_PRIMITIVE_ID_NV
#  define GL_PRIMITIVE_ID_NV 0x8C7C
#endif
#ifndef GL_GENERIC_ATTRIB_NV
#  define GL_GENERIC_ATTRIB_NV 0x8C7D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
#  define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#endif
#ifndef GL_ACTIVE_VARYINGS_NV
#  define GL_ACTIVE_VARYINGS_NV 0x8C81
#endif
#ifndef GL_ACTIVE_VARYING_MAX_LENGTH_NV
#  define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS_NV
#  define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#endif
#ifndef GL_TRANSFORM_FEEDBACK_RECORD_NV
#  define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
#endif
#ifndef GL_PRIMITIVES_GENERATED_NV
#  define GL_PRIMITIVES_GENERATED_NV 0x8C87
#endif
#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
#  define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#endif
#ifndef GL_RASTERIZER_DISCARD_NV
#  define GL_RASTERIZER_DISCARD_NV 0x8C89
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#endif
#ifndef GL_INTERLEAVED_ATTRIBS_NV
#  define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
#endif
#ifndef GL_SEPARATE_ATTRIBS_NV
#  define GL_SEPARATE_ATTRIBS_NV 0x8C8D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#endif
#ifndef GL_LAYER_NV
#  define GL_LAYER_NV 0x8DAA
#endif
#ifndef GL_NEXT_BUFFER_NV
#  define GL_NEXT_BUFFER_NV -2
#endif
#ifndef GL_SKIP_COMPONENTS4_NV
#  define GL_SKIP_COMPONENTS4_NV -3
#endif
#ifndef GL_SKIP_COMPONENTS3_NV
#  define GL_SKIP_COMPONENTS3_NV -4
#endif
#ifndef GL_SKIP_COMPONENTS2_NV
#  define GL_SKIP_COMPONENTS2_NV -5
#endif
#ifndef GL_SKIP_COMPONENTS1_NV
#  define GL_SKIP_COMPONENTS1_NV -6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXENDTRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
typedef void (APIENTRYP PFNGLUXBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
typedef void (APIENTRYP PFNGLUXACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
typedef GLint (APIENTRYP PFNGLUXGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
typedef void (APIENTRYP PFNGLUXGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
typedef void (APIENTRYP PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
extern PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC glBeginTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
extern PFNGLUXENDTRANSFORMFEEDBACKNVPROC glEndTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC glTransformFeedbackAttribsNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
extern PFNGLUXBINDBUFFERRANGENVPROC glBindBufferRangeNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
extern PFNGLUXBINDBUFFEROFFSETNVPROC glBindBufferOffsetNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
extern PFNGLUXBINDBUFFERBASENVPROC glBindBufferBaseNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
extern PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC glTransformFeedbackVaryingsNV;
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
extern PFNGLUXACTIVEVARYINGNVPROC glActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
extern PFNGLUXGETVARYINGLOCATIONNVPROC glGetVaryingLocationNV;
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
extern PFNGLUXGETACTIVEVARYINGNVPROC glGetActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
extern PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC glGetTransformFeedbackVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC glTransformFeedbackStreamAttribsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:51:56 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback__
#define __GLUX_GL_NV_transform_feedback__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BACK_PRIMARY_COLOR_NV
#  define GL_BACK_PRIMARY_COLOR_NV 0x8C77
#endif
#ifndef GL_BACK_SECONDARY_COLOR_NV
#  define GL_BACK_SECONDARY_COLOR_NV 0x8C78
#endif
#ifndef GL_TEXTURE_COORD_NV
#  define GL_TEXTURE_COORD_NV 0x8C79
#endif
#ifndef GL_CLIP_DISTANCE_NV
#  define GL_CLIP_DISTANCE_NV 0x8C7A
#endif
#ifndef GL_VERTEX_ID_NV
#  define GL_VERTEX_ID_NV 0x8C7B
#endif
#ifndef GL_PRIMITIVE_ID_NV
#  define GL_PRIMITIVE_ID_NV 0x8C7C
#endif
#ifndef GL_GENERIC_ATTRIB_NV
#  define GL_GENERIC_ATTRIB_NV 0x8C7D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
#  define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#endif
#ifndef GL_ACTIVE_VARYINGS_NV
#  define GL_ACTIVE_VARYINGS_NV 0x8C81
#endif
#ifndef GL_ACTIVE_VARYING_MAX_LENGTH_NV
#  define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS_NV
#  define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#endif
#ifndef GL_TRANSFORM_FEEDBACK_RECORD_NV
#  define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
#endif
#ifndef GL_PRIMITIVES_GENERATED_NV
#  define GL_PRIMITIVES_GENERATED_NV 0x8C87
#endif
#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
#  define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#endif
#ifndef GL_RASTERIZER_DISCARD_NV
#  define GL_RASTERIZER_DISCARD_NV 0x8C89
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#endif
#ifndef GL_INTERLEAVED_ATTRIBS_NV
#  define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
#endif
#ifndef GL_SEPARATE_ATTRIBS_NV
#  define GL_SEPARATE_ATTRIBS_NV 0x8C8D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#endif
#ifndef GL_LAYER_NV
#  define GL_LAYER_NV 0x8DAA
#endif
#ifndef GL_NEXT_BUFFER_NV
#  define GL_NEXT_BUFFER_NV -2
#endif
#ifndef GL_SKIP_COMPONENTS4_NV
#  define GL_SKIP_COMPONENTS4_NV -3
#endif
#ifndef GL_SKIP_COMPONENTS3_NV
#  define GL_SKIP_COMPONENTS3_NV -4
#endif
#ifndef GL_SKIP_COMPONENTS2_NV
#  define GL_SKIP_COMPONENTS2_NV -5
#endif
#ifndef GL_SKIP_COMPONENTS1_NV
#  define GL_SKIP_COMPONENTS1_NV -6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXENDTRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
typedef void (APIENTRYP PFNGLUXBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
typedef void (APIENTRYP PFNGLUXACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
typedef GLint (APIENTRYP PFNGLUXGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
typedef void (APIENTRYP PFNGLUXGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
typedef void (APIENTRYP PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
extern PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC glBeginTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
extern PFNGLUXENDTRANSFORMFEEDBACKNVPROC glEndTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC glTransformFeedbackAttribsNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
extern PFNGLUXBINDBUFFERRANGENVPROC glBindBufferRangeNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
extern PFNGLUXBINDBUFFEROFFSETNVPROC glBindBufferOffsetNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
extern PFNGLUXBINDBUFFERBASENVPROC glBindBufferBaseNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
extern PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC glTransformFeedbackVaryingsNV;
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
extern PFNGLUXACTIVEVARYINGNVPROC glActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
extern PFNGLUXGETVARYINGLOCATIONNVPROC glGetVaryingLocationNV;
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
extern PFNGLUXGETACTIVEVARYINGNVPROC glGetActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
extern PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC glGetTransformFeedbackVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC glTransformFeedbackStreamAttribsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:50 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback__
#define __GLUX_GL_NV_transform_feedback__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BACK_PRIMARY_COLOR_NV
#  define GL_BACK_PRIMARY_COLOR_NV 0x8C77
#endif
#ifndef GL_BACK_SECONDARY_COLOR_NV
#  define GL_BACK_SECONDARY_COLOR_NV 0x8C78
#endif
#ifndef GL_TEXTURE_COORD_NV
#  define GL_TEXTURE_COORD_NV 0x8C79
#endif
#ifndef GL_CLIP_DISTANCE_NV
#  define GL_CLIP_DISTANCE_NV 0x8C7A
#endif
#ifndef GL_VERTEX_ID_NV
#  define GL_VERTEX_ID_NV 0x8C7B
#endif
#ifndef GL_PRIMITIVE_ID_NV
#  define GL_PRIMITIVE_ID_NV 0x8C7C
#endif
#ifndef GL_GENERIC_ATTRIB_NV
#  define GL_GENERIC_ATTRIB_NV 0x8C7D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
#  define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#endif
#ifndef GL_ACTIVE_VARYINGS_NV
#  define GL_ACTIVE_VARYINGS_NV 0x8C81
#endif
#ifndef GL_ACTIVE_VARYING_MAX_LENGTH_NV
#  define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS_NV
#  define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#endif
#ifndef GL_TRANSFORM_FEEDBACK_RECORD_NV
#  define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
#endif
#ifndef GL_PRIMITIVES_GENERATED_NV
#  define GL_PRIMITIVES_GENERATED_NV 0x8C87
#endif
#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
#  define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#endif
#ifndef GL_RASTERIZER_DISCARD_NV
#  define GL_RASTERIZER_DISCARD_NV 0x8C89
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#endif
#ifndef GL_INTERLEAVED_ATTRIBS_NV
#  define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
#endif
#ifndef GL_SEPARATE_ATTRIBS_NV
#  define GL_SEPARATE_ATTRIBS_NV 0x8C8D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#endif
#ifndef GL_LAYER_NV
#  define GL_LAYER_NV 0x8DAA
#endif
#ifndef GL_NEXT_BUFFER_NV
#  define GL_NEXT_BUFFER_NV -2
#endif
#ifndef GL_SKIP_COMPONENTS4_NV
#  define GL_SKIP_COMPONENTS4_NV -3
#endif
#ifndef GL_SKIP_COMPONENTS3_NV
#  define GL_SKIP_COMPONENTS3_NV -4
#endif
#ifndef GL_SKIP_COMPONENTS2_NV
#  define GL_SKIP_COMPONENTS2_NV -5
#endif
#ifndef GL_SKIP_COMPONENTS1_NV
#  define GL_SKIP_COMPONENTS1_NV -6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXENDTRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
typedef void (APIENTRYP PFNGLUXBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
typedef void (APIENTRYP PFNGLUXACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
typedef GLint (APIENTRYP PFNGLUXGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
typedef void (APIENTRYP PFNGLUXGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
typedef void (APIENTRYP PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
extern PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC glBeginTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
extern PFNGLUXENDTRANSFORMFEEDBACKNVPROC glEndTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC glTransformFeedbackAttribsNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
extern PFNGLUXBINDBUFFERRANGENVPROC glBindBufferRangeNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
extern PFNGLUXBINDBUFFEROFFSETNVPROC glBindBufferOffsetNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
extern PFNGLUXBINDBUFFERBASENVPROC glBindBufferBaseNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
extern PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC glTransformFeedbackVaryingsNV;
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
extern PFNGLUXACTIVEVARYINGNVPROC glActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
extern PFNGLUXGETVARYINGLOCATIONNVPROC glGetVaryingLocationNV;
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
extern PFNGLUXGETACTIVEVARYINGNVPROC glGetActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
extern PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC glGetTransformFeedbackVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC glTransformFeedbackStreamAttribsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:01 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback__
#define __GLUX_GL_NV_transform_feedback__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BACK_PRIMARY_COLOR_NV
#  define GL_BACK_PRIMARY_COLOR_NV 0x8C77
#endif
#ifndef GL_BACK_SECONDARY_COLOR_NV
#  define GL_BACK_SECONDARY_COLOR_NV 0x8C78
#endif
#ifndef GL_TEXTURE_COORD_NV
#  define GL_TEXTURE_COORD_NV 0x8C79
#endif
#ifndef GL_CLIP_DISTANCE_NV
#  define GL_CLIP_DISTANCE_NV 0x8C7A
#endif
#ifndef GL_VERTEX_ID_NV
#  define GL_VERTEX_ID_NV 0x8C7B
#endif
#ifndef GL_PRIMITIVE_ID_NV
#  define GL_PRIMITIVE_ID_NV 0x8C7C
#endif
#ifndef GL_GENERIC_ATTRIB_NV
#  define GL_GENERIC_ATTRIB_NV 0x8C7D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
#  define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#endif
#ifndef GL_ACTIVE_VARYINGS_NV
#  define GL_ACTIVE_VARYINGS_NV 0x8C81
#endif
#ifndef GL_ACTIVE_VARYING_MAX_LENGTH_NV
#  define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS_NV
#  define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#endif
#ifndef GL_TRANSFORM_FEEDBACK_RECORD_NV
#  define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
#endif
#ifndef GL_PRIMITIVES_GENERATED_NV
#  define GL_PRIMITIVES_GENERATED_NV 0x8C87
#endif
#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
#  define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#endif
#ifndef GL_RASTERIZER_DISCARD_NV
#  define GL_RASTERIZER_DISCARD_NV 0x8C89
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#endif
#ifndef GL_INTERLEAVED_ATTRIBS_NV
#  define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
#endif
#ifndef GL_SEPARATE_ATTRIBS_NV
#  define GL_SEPARATE_ATTRIBS_NV 0x8C8D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#endif
#ifndef GL_LAYER_NV
#  define GL_LAYER_NV 0x8DAA
#endif
#ifndef GL_NEXT_BUFFER_NV
#  define GL_NEXT_BUFFER_NV -2
#endif
#ifndef GL_SKIP_COMPONENTS4_NV
#  define GL_SKIP_COMPONENTS4_NV -3
#endif
#ifndef GL_SKIP_COMPONENTS3_NV
#  define GL_SKIP_COMPONENTS3_NV -4
#endif
#ifndef GL_SKIP_COMPONENTS2_NV
#  define GL_SKIP_COMPONENTS2_NV -5
#endif
#ifndef GL_SKIP_COMPONENTS1_NV
#  define GL_SKIP_COMPONENTS1_NV -6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXENDTRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
typedef void (APIENTRYP PFNGLUXBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
typedef void (APIENTRYP PFNGLUXACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
typedef GLint (APIENTRYP PFNGLUXGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
typedef void (APIENTRYP PFNGLUXGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
typedef void (APIENTRYP PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
extern PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC glBeginTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
extern PFNGLUXENDTRANSFORMFEEDBACKNVPROC glEndTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC glTransformFeedbackAttribsNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
extern PFNGLUXBINDBUFFERRANGENVPROC glBindBufferRangeNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
extern PFNGLUXBINDBUFFEROFFSETNVPROC glBindBufferOffsetNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
extern PFNGLUXBINDBUFFERBASENVPROC glBindBufferBaseNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
extern PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC glTransformFeedbackVaryingsNV;
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
extern PFNGLUXACTIVEVARYINGNVPROC glActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
extern PFNGLUXGETVARYINGLOCATIONNVPROC glGetVaryingLocationNV;
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
extern PFNGLUXGETACTIVEVARYINGNVPROC glGetActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
extern PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC glGetTransformFeedbackVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC glTransformFeedbackStreamAttribsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:21 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback__
#define __GLUX_GL_NV_transform_feedback__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BACK_PRIMARY_COLOR_NV
#  define GL_BACK_PRIMARY_COLOR_NV 0x8C77
#endif
#ifndef GL_BACK_SECONDARY_COLOR_NV
#  define GL_BACK_SECONDARY_COLOR_NV 0x8C78
#endif
#ifndef GL_TEXTURE_COORD_NV
#  define GL_TEXTURE_COORD_NV 0x8C79
#endif
#ifndef GL_CLIP_DISTANCE_NV
#  define GL_CLIP_DISTANCE_NV 0x8C7A
#endif
#ifndef GL_VERTEX_ID_NV
#  define GL_VERTEX_ID_NV 0x8C7B
#endif
#ifndef GL_PRIMITIVE_ID_NV
#  define GL_PRIMITIVE_ID_NV 0x8C7C
#endif
#ifndef GL_GENERIC_ATTRIB_NV
#  define GL_GENERIC_ATTRIB_NV 0x8C7D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
#  define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#endif
#ifndef GL_ACTIVE_VARYINGS_NV
#  define GL_ACTIVE_VARYINGS_NV 0x8C81
#endif
#ifndef GL_ACTIVE_VARYING_MAX_LENGTH_NV
#  define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS_NV
#  define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#endif
#ifndef GL_TRANSFORM_FEEDBACK_RECORD_NV
#  define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
#endif
#ifndef GL_PRIMITIVES_GENERATED_NV
#  define GL_PRIMITIVES_GENERATED_NV 0x8C87
#endif
#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
#  define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#endif
#ifndef GL_RASTERIZER_DISCARD_NV
#  define GL_RASTERIZER_DISCARD_NV 0x8C89
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#endif
#ifndef GL_INTERLEAVED_ATTRIBS_NV
#  define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
#endif
#ifndef GL_SEPARATE_ATTRIBS_NV
#  define GL_SEPARATE_ATTRIBS_NV 0x8C8D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#endif
#ifndef GL_LAYER_NV
#  define GL_LAYER_NV 0x8DAA
#endif
#ifndef GL_NEXT_BUFFER_NV
#  define GL_NEXT_BUFFER_NV -2
#endif
#ifndef GL_SKIP_COMPONENTS4_NV
#  define GL_SKIP_COMPONENTS4_NV -3
#endif
#ifndef GL_SKIP_COMPONENTS3_NV
#  define GL_SKIP_COMPONENTS3_NV -4
#endif
#ifndef GL_SKIP_COMPONENTS2_NV
#  define GL_SKIP_COMPONENTS2_NV -5
#endif
#ifndef GL_SKIP_COMPONENTS1_NV
#  define GL_SKIP_COMPONENTS1_NV -6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXENDTRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
typedef void (APIENTRYP PFNGLUXBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
typedef void (APIENTRYP PFNGLUXACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
typedef GLint (APIENTRYP PFNGLUXGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
typedef void (APIENTRYP PFNGLUXGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
typedef void (APIENTRYP PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
extern PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC glBeginTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
extern PFNGLUXENDTRANSFORMFEEDBACKNVPROC glEndTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC glTransformFeedbackAttribsNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
extern PFNGLUXBINDBUFFERRANGENVPROC glBindBufferRangeNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
extern PFNGLUXBINDBUFFEROFFSETNVPROC glBindBufferOffsetNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
extern PFNGLUXBINDBUFFERBASENVPROC glBindBufferBaseNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
extern PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC glTransformFeedbackVaryingsNV;
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
extern PFNGLUXACTIVEVARYINGNVPROC glActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
extern PFNGLUXGETVARYINGLOCATIONNVPROC glGetVaryingLocationNV;
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
extern PFNGLUXGETACTIVEVARYINGNVPROC glGetActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
extern PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC glGetTransformFeedbackVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC glTransformFeedbackStreamAttribsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback__
#define __GLUX_GL_NV_transform_feedback__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BACK_PRIMARY_COLOR_NV
#  define GL_BACK_PRIMARY_COLOR_NV 0x8C77
#endif
#ifndef GL_BACK_SECONDARY_COLOR_NV
#  define GL_BACK_SECONDARY_COLOR_NV 0x8C78
#endif
#ifndef GL_TEXTURE_COORD_NV
#  define GL_TEXTURE_COORD_NV 0x8C79
#endif
#ifndef GL_CLIP_DISTANCE_NV
#  define GL_CLIP_DISTANCE_NV 0x8C7A
#endif
#ifndef GL_VERTEX_ID_NV
#  define GL_VERTEX_ID_NV 0x8C7B
#endif
#ifndef GL_PRIMITIVE_ID_NV
#  define GL_PRIMITIVE_ID_NV 0x8C7C
#endif
#ifndef GL_GENERIC_ATTRIB_NV
#  define GL_GENERIC_ATTRIB_NV 0x8C7D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
#  define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#endif
#ifndef GL_ACTIVE_VARYINGS_NV
#  define GL_ACTIVE_VARYINGS_NV 0x8C81
#endif
#ifndef GL_ACTIVE_VARYING_MAX_LENGTH_NV
#  define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS_NV
#  define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#endif
#ifndef GL_TRANSFORM_FEEDBACK_RECORD_NV
#  define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
#endif
#ifndef GL_PRIMITIVES_GENERATED_NV
#  define GL_PRIMITIVES_GENERATED_NV 0x8C87
#endif
#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
#  define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#endif
#ifndef GL_RASTERIZER_DISCARD_NV
#  define GL_RASTERIZER_DISCARD_NV 0x8C89
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#endif
#ifndef GL_INTERLEAVED_ATTRIBS_NV
#  define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
#endif
#ifndef GL_SEPARATE_ATTRIBS_NV
#  define GL_SEPARATE_ATTRIBS_NV 0x8C8D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#endif
#ifndef GL_LAYER_NV
#  define GL_LAYER_NV 0x8DAA
#endif
#ifndef GL_NEXT_BUFFER_NV
#  define GL_NEXT_BUFFER_NV -2
#endif
#ifndef GL_SKIP_COMPONENTS4_NV
#  define GL_SKIP_COMPONENTS4_NV -3
#endif
#ifndef GL_SKIP_COMPONENTS3_NV
#  define GL_SKIP_COMPONENTS3_NV -4
#endif
#ifndef GL_SKIP_COMPONENTS2_NV
#  define GL_SKIP_COMPONENTS2_NV -5
#endif
#ifndef GL_SKIP_COMPONENTS1_NV
#  define GL_SKIP_COMPONENTS1_NV -6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXENDTRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
typedef void (APIENTRYP PFNGLUXBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
typedef void (APIENTRYP PFNGLUXACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
typedef GLint (APIENTRYP PFNGLUXGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
typedef void (APIENTRYP PFNGLUXGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
typedef void (APIENTRYP PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
extern PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC glBeginTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
extern PFNGLUXENDTRANSFORMFEEDBACKNVPROC glEndTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC glTransformFeedbackAttribsNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
extern PFNGLUXBINDBUFFERRANGENVPROC glBindBufferRangeNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
extern PFNGLUXBINDBUFFEROFFSETNVPROC glBindBufferOffsetNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
extern PFNGLUXBINDBUFFERBASENVPROC glBindBufferBaseNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
extern PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC glTransformFeedbackVaryingsNV;
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
extern PFNGLUXACTIVEVARYINGNVPROC glActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
extern PFNGLUXGETVARYINGLOCATIONNVPROC glGetVaryingLocationNV;
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
extern PFNGLUXGETACTIVEVARYINGNVPROC glGetActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
extern PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC glGetTransformFeedbackVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC glTransformFeedbackStreamAttribsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:41:54 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback__
#define __GLUX_GL_NV_transform_feedback__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BACK_PRIMARY_COLOR_NV
#  define GL_BACK_PRIMARY_COLOR_NV 0x8C77
#endif
#ifndef GL_BACK_SECONDARY_COLOR_NV
#  define GL_BACK_SECONDARY_COLOR_NV 0x8C78
#endif
#ifndef GL_TEXTURE_COORD_NV
#  define GL_TEXTURE_COORD_NV 0x8C79
#endif
#ifndef GL_CLIP_DISTANCE_NV
#  define GL_CLIP_DISTANCE_NV 0x8C7A
#endif
#ifndef GL_VERTEX_ID_NV
#  define GL_VERTEX_ID_NV 0x8C7B
#endif
#ifndef GL_PRIMITIVE_ID_NV
#  define GL_PRIMITIVE_ID_NV 0x8C7C
#endif
#ifndef GL_GENERIC_ATTRIB_NV
#  define GL_GENERIC_ATTRIB_NV 0x8C7D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
#  define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#endif
#ifndef GL_ACTIVE_VARYINGS_NV
#  define GL_ACTIVE_VARYINGS_NV 0x8C81
#endif
#ifndef GL_ACTIVE_VARYING_MAX_LENGTH_NV
#  define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS_NV
#  define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#endif
#ifndef GL_TRANSFORM_FEEDBACK_RECORD_NV
#  define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
#endif
#ifndef GL_PRIMITIVES_GENERATED_NV
#  define GL_PRIMITIVES_GENERATED_NV 0x8C87
#endif
#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
#  define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#endif
#ifndef GL_RASTERIZER_DISCARD_NV
#  define GL_RASTERIZER_DISCARD_NV 0x8C89
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#endif
#ifndef GL_INTERLEAVED_ATTRIBS_NV
#  define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
#endif
#ifndef GL_SEPARATE_ATTRIBS_NV
#  define GL_SEPARATE_ATTRIBS_NV 0x8C8D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#endif
#ifndef GL_LAYER_NV
#  define GL_LAYER_NV 0x8DAA
#endif
#ifndef GL_NEXT_BUFFER_NV
#  define GL_NEXT_BUFFER_NV -2
#endif
#ifndef GL_SKIP_COMPONENTS4_NV
#  define GL_SKIP_COMPONENTS4_NV -3
#endif
#ifndef GL_SKIP_COMPONENTS3_NV
#  define GL_SKIP_COMPONENTS3_NV -4
#endif
#ifndef GL_SKIP_COMPONENTS2_NV
#  define GL_SKIP_COMPONENTS2_NV -5
#endif
#ifndef GL_SKIP_COMPONENTS1_NV
#  define GL_SKIP_COMPONENTS1_NV -6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXENDTRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
typedef void (APIENTRYP PFNGLUXBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
typedef void (APIENTRYP PFNGLUXACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
typedef GLint (APIENTRYP PFNGLUXGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
typedef void (APIENTRYP PFNGLUXGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
typedef void (APIENTRYP PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
extern PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC glBeginTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
extern PFNGLUXENDTRANSFORMFEEDBACKNVPROC glEndTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC glTransformFeedbackAttribsNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
extern PFNGLUXBINDBUFFERRANGENVPROC glBindBufferRangeNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
extern PFNGLUXBINDBUFFEROFFSETNVPROC glBindBufferOffsetNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
extern PFNGLUXBINDBUFFERBASENVPROC glBindBufferBaseNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
extern PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC glTransformFeedbackVaryingsNV;
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
extern PFNGLUXACTIVEVARYINGNVPROC glActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
extern PFNGLUXGETVARYINGLOCATIONNVPROC glGetVaryingLocationNV;
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
extern PFNGLUXGETACTIVEVARYINGNVPROC glGetActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
extern PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC glGetTransformFeedbackVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC glTransformFeedbackStreamAttribsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:33 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback__
#define __GLUX_GL_NV_transform_feedback__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BACK_PRIMARY_COLOR_NV
#  define GL_BACK_PRIMARY_COLOR_NV 0x8C77
#endif
#ifndef GL_BACK_SECONDARY_COLOR_NV
#  define GL_BACK_SECONDARY_COLOR_NV 0x8C78
#endif
#ifndef GL_TEXTURE_COORD_NV
#  define GL_TEXTURE_COORD_NV 0x8C79
#endif
#ifndef GL_CLIP_DISTANCE_NV
#  define GL_CLIP_DISTANCE_NV 0x8C7A
#endif
#ifndef GL_VERTEX_ID_NV
#  define GL_VERTEX_ID_NV 0x8C7B
#endif
#ifndef GL_PRIMITIVE_ID_NV
#  define GL_PRIMITIVE_ID_NV 0x8C7C
#endif
#ifndef GL_GENERIC_ATTRIB_NV
#  define GL_GENERIC_ATTRIB_NV 0x8C7D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
#  define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#endif
#ifndef GL_ACTIVE_VARYINGS_NV
#  define GL_ACTIVE_VARYINGS_NV 0x8C81
#endif
#ifndef GL_ACTIVE_VARYING_MAX_LENGTH_NV
#  define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS_NV
#  define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#endif
#ifndef GL_TRANSFORM_FEEDBACK_RECORD_NV
#  define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
#endif
#ifndef GL_PRIMITIVES_GENERATED_NV
#  define GL_PRIMITIVES_GENERATED_NV 0x8C87
#endif
#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
#  define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#endif
#ifndef GL_RASTERIZER_DISCARD_NV
#  define GL_RASTERIZER_DISCARD_NV 0x8C89
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#endif
#ifndef GL_INTERLEAVED_ATTRIBS_NV
#  define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
#endif
#ifndef GL_SEPARATE_ATTRIBS_NV
#  define GL_SEPARATE_ATTRIBS_NV 0x8C8D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#endif
#ifndef GL_LAYER_NV
#  define GL_LAYER_NV 0x8DAA
#endif
#ifndef GL_NEXT_BUFFER_NV
#  define GL_NEXT_BUFFER_NV -2
#endif
#ifndef GL_SKIP_COMPONENTS4_NV
#  define GL_SKIP_COMPONENTS4_NV -3
#endif
#ifndef GL_SKIP_COMPONENTS3_NV
#  define GL_SKIP_COMPONENTS3_NV -4
#endif
#ifndef GL_SKIP_COMPONENTS2_NV
#  define GL_SKIP_COMPONENTS2_NV -5
#endif
#ifndef GL_SKIP_COMPONENTS1_NV
#  define GL_SKIP_COMPONENTS1_NV -6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXENDTRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
typedef void (APIENTRYP PFNGLUXBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
typedef void (APIENTRYP PFNGLUXACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
typedef GLint (APIENTRYP PFNGLUXGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
typedef void (APIENTRYP PFNGLUXGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
typedef void (APIENTRYP PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
extern PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC glBeginTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
extern PFNGLUXENDTRANSFORMFEEDBACKNVPROC glEndTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC glTransformFeedbackAttribsNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
extern PFNGLUXBINDBUFFERRANGENVPROC glBindBufferRangeNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
extern PFNGLUXBINDBUFFEROFFSETNVPROC glBindBufferOffsetNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
extern PFNGLUXBINDBUFFERBASENVPROC glBindBufferBaseNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
extern PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC glTransformFeedbackVaryingsNV;
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
extern PFNGLUXACTIVEVARYINGNVPROC glActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
extern PFNGLUXGETVARYINGLOCATIONNVPROC glGetVaryingLocationNV;
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
extern PFNGLUXGETACTIVEVARYINGNVPROC glGetActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
extern PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC glGetTransformFeedbackVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC glTransformFeedbackStreamAttribsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:09:55 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback__
#define __GLUX_GL_NV_transform_feedback__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BACK_PRIMARY_COLOR_NV
#  define GL_BACK_PRIMARY_COLOR_NV 0x8C77
#endif
#ifndef GL_BACK_SECONDARY_COLOR_NV
#  define GL_BACK_SECONDARY_COLOR_NV 0x8C78
#endif
#ifndef GL_TEXTURE_COORD_NV
#  define GL_TEXTURE_COORD_NV 0x8C79
#endif
#ifndef GL_CLIP_DISTANCE_NV
#  define GL_CLIP_DISTANCE_NV 0x8C7A
#endif
#ifndef GL_VERTEX_ID_NV
#  define GL_VERTEX_ID_NV 0x8C7B
#endif
#ifndef GL_PRIMITIVE_ID_NV
#  define GL_PRIMITIVE_ID_NV 0x8C7C
#endif
#ifndef GL_GENERIC_ATTRIB_NV
#  define GL_GENERIC_ATTRIB_NV 0x8C7D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
#  define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#endif
#ifndef GL_ACTIVE_VARYINGS_NV
#  define GL_ACTIVE_VARYINGS_NV 0x8C81
#endif
#ifndef GL_ACTIVE_VARYING_MAX_LENGTH_NV
#  define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS_NV
#  define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#endif
#ifndef GL_TRANSFORM_FEEDBACK_RECORD_NV
#  define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
#endif
#ifndef GL_PRIMITIVES_GENERATED_NV
#  define GL_PRIMITIVES_GENERATED_NV 0x8C87
#endif
#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
#  define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#endif
#ifndef GL_RASTERIZER_DISCARD_NV
#  define GL_RASTERIZER_DISCARD_NV 0x8C89
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#endif
#ifndef GL_INTERLEAVED_ATTRIBS_NV
#  define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
#endif
#ifndef GL_SEPARATE_ATTRIBS_NV
#  define GL_SEPARATE_ATTRIBS_NV 0x8C8D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#endif
#ifndef GL_LAYER_NV
#  define GL_LAYER_NV 0x8DAA
#endif
#ifndef GL_NEXT_BUFFER_NV
#  define GL_NEXT_BUFFER_NV -2
#endif
#ifndef GL_SKIP_COMPONENTS4_NV
#  define GL_SKIP_COMPONENTS4_NV -3
#endif
#ifndef GL_SKIP_COMPONENTS3_NV
#  define GL_SKIP_COMPONENTS3_NV -4
#endif
#ifndef GL_SKIP_COMPONENTS2_NV
#  define GL_SKIP_COMPONENTS2_NV -5
#endif
#ifndef GL_SKIP_COMPONENTS1_NV
#  define GL_SKIP_COMPONENTS1_NV -6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXENDTRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
typedef void (APIENTRYP PFNGLUXBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
typedef void (APIENTRYP PFNGLUXACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
typedef GLint (APIENTRYP PFNGLUXGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
typedef void (APIENTRYP PFNGLUXGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
typedef void (APIENTRYP PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
extern PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC glBeginTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
extern PFNGLUXENDTRANSFORMFEEDBACKNVPROC glEndTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC glTransformFeedbackAttribsNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
extern PFNGLUXBINDBUFFERRANGENVPROC glBindBufferRangeNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
extern PFNGLUXBINDBUFFEROFFSETNVPROC glBindBufferOffsetNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
extern PFNGLUXBINDBUFFERBASENVPROC glBindBufferBaseNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
extern PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC glTransformFeedbackVaryingsNV;
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
extern PFNGLUXACTIVEVARYINGNVPROC glActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
extern PFNGLUXGETVARYINGLOCATIONNVPROC glGetVaryingLocationNV;
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
extern PFNGLUXGETACTIVEVARYINGNVPROC glGetActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
extern PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC glGetTransformFeedbackVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC glTransformFeedbackStreamAttribsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:19:56 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback__
#define __GLUX_GL_NV_transform_feedback__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BACK_PRIMARY_COLOR_NV
#  define GL_BACK_PRIMARY_COLOR_NV 0x8C77
#endif
#ifndef GL_BACK_SECONDARY_COLOR_NV
#  define GL_BACK_SECONDARY_COLOR_NV 0x8C78
#endif
#ifndef GL_TEXTURE_COORD_NV
#  define GL_TEXTURE_COORD_NV 0x8C79
#endif
#ifndef GL_CLIP_DISTANCE_NV
#  define GL_CLIP_DISTANCE_NV 0x8C7A
#endif
#ifndef GL_VERTEX_ID_NV
#  define GL_VERTEX_ID_NV 0x8C7B
#endif
#ifndef GL_PRIMITIVE_ID_NV
#  define GL_PRIMITIVE_ID_NV 0x8C7C
#endif
#ifndef GL_GENERIC_ATTRIB_NV
#  define GL_GENERIC_ATTRIB_NV 0x8C7D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
#  define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#endif
#ifndef GL_ACTIVE_VARYINGS_NV
#  define GL_ACTIVE_VARYINGS_NV 0x8C81
#endif
#ifndef GL_ACTIVE_VARYING_MAX_LENGTH_NV
#  define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS_NV
#  define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#endif
#ifndef GL_TRANSFORM_FEEDBACK_RECORD_NV
#  define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
#endif
#ifndef GL_PRIMITIVES_GENERATED_NV
#  define GL_PRIMITIVES_GENERATED_NV 0x8C87
#endif
#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
#  define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#endif
#ifndef GL_RASTERIZER_DISCARD_NV
#  define GL_RASTERIZER_DISCARD_NV 0x8C89
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#endif
#ifndef GL_INTERLEAVED_ATTRIBS_NV
#  define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
#endif
#ifndef GL_SEPARATE_ATTRIBS_NV
#  define GL_SEPARATE_ATTRIBS_NV 0x8C8D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#endif
#ifndef GL_LAYER_NV
#  define GL_LAYER_NV 0x8DAA
#endif
#ifndef GL_NEXT_BUFFER_NV
#  define GL_NEXT_BUFFER_NV -2
#endif
#ifndef GL_SKIP_COMPONENTS4_NV
#  define GL_SKIP_COMPONENTS4_NV -3
#endif
#ifndef GL_SKIP_COMPONENTS3_NV
#  define GL_SKIP_COMPONENTS3_NV -4
#endif
#ifndef GL_SKIP_COMPONENTS2_NV
#  define GL_SKIP_COMPONENTS2_NV -5
#endif
#ifndef GL_SKIP_COMPONENTS1_NV
#  define GL_SKIP_COMPONENTS1_NV -6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXENDTRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
typedef void (APIENTRYP PFNGLUXBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
typedef void (APIENTRYP PFNGLUXACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
typedef GLint (APIENTRYP PFNGLUXGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
typedef void (APIENTRYP PFNGLUXGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
typedef void (APIENTRYP PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
extern PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC glBeginTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
extern PFNGLUXENDTRANSFORMFEEDBACKNVPROC glEndTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC glTransformFeedbackAttribsNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
extern PFNGLUXBINDBUFFERRANGENVPROC glBindBufferRangeNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
extern PFNGLUXBINDBUFFEROFFSETNVPROC glBindBufferOffsetNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
extern PFNGLUXBINDBUFFERBASENVPROC glBindBufferBaseNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
extern PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC glTransformFeedbackVaryingsNV;
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
extern PFNGLUXACTIVEVARYINGNVPROC glActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
extern PFNGLUXGETVARYINGLOCATIONNVPROC glGetVaryingLocationNV;
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
extern PFNGLUXGETACTIVEVARYINGNVPROC glGetActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
extern PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC glGetTransformFeedbackVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC glTransformFeedbackStreamAttribsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:42:53 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback__
#define __GLUX_GL_NV_transform_feedback__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BACK_PRIMARY_COLOR_NV
#  define GL_BACK_PRIMARY_COLOR_NV 0x8C77
#endif
#ifndef GL_BACK_SECONDARY_COLOR_NV
#  define GL_BACK_SECONDARY_COLOR_NV 0x8C78
#endif
#ifndef GL_TEXTURE_COORD_NV
#  define GL_TEXTURE_COORD_NV 0x8C79
#endif
#ifndef GL_CLIP_DISTANCE_NV
#  define GL_CLIP_DISTANCE_NV 0x8C7A
#endif
#ifndef GL_VERTEX_ID_NV
#  define GL_VERTEX_ID_NV 0x8C7B
#endif
#ifndef GL_PRIMITIVE_ID_NV
#  define GL_PRIMITIVE_ID_NV 0x8C7C
#endif
#ifndef GL_GENERIC_ATTRIB_NV
#  define GL_GENERIC_ATTRIB_NV 0x8C7D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
#  define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#endif
#ifndef GL_ACTIVE_VARYINGS_NV
#  define GL_ACTIVE_VARYINGS_NV 0x8C81
#endif
#ifndef GL_ACTIVE_VARYING_MAX_LENGTH_NV
#  define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
#endif
#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS_NV
#  define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#endif
#ifndef GL_TRANSFORM_FEEDBACK_RECORD_NV
#  define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
#endif
#ifndef GL_PRIMITIVES_GENERATED_NV
#  define GL_PRIMITIVES_GENERATED_NV 0x8C87
#endif
#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
#  define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#endif
#ifndef GL_RASTERIZER_DISCARD_NV
#  define GL_RASTERIZER_DISCARD_NV 0x8C89
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#endif
#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
#  define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#endif
#ifndef GL_INTERLEAVED_ATTRIBS_NV
#  define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
#endif
#ifndef GL_SEPARATE_ATTRIBS_NV
#  define GL_SEPARATE_ATTRIBS_NV 0x8C8D
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#endif
#ifndef GL_LAYER_NV
#  define GL_LAYER_NV 0x8DAA
#endif
#ifndef GL_NEXT_BUFFER_NV
#  define GL_NEXT_BUFFER_NV -2
#endif
#ifndef GL_SKIP_COMPONENTS4_NV
#  define GL_SKIP_COMPONENTS4_NV -3
#endif
#ifndef GL_SKIP_COMPONENTS3_NV
#  define GL_SKIP_COMPONENTS3_NV -4
#endif
#ifndef GL_SKIP_COMPONENTS2_NV
#  define GL_SKIP_COMPONENTS2_NV -5
#endif
#ifndef GL_SKIP_COMPONENTS1_NV
#  define GL_SKIP_COMPONENTS1_NV -6
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXENDTRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
typedef void (APIENTRYP PFNGLUXBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
typedef void (APIENTRYP PFNGLUXBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
typedef void (APIENTRYP PFNGLUXACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
typedef GLint (APIENTRYP PFNGLUXGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
typedef void (APIENTRYP PFNGLUXGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
typedef void (APIENTRYP PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackNV
extern PFNGLUXBEGINTRANSFORMFEEDBACKNVPROC glBeginTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackNV
extern PFNGLUXENDTRANSFORMFEEDBACKNVPROC glEndTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKATTRIBSNVPROC glTransformFeedbackAttribsNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeNV
extern PFNGLUXBINDBUFFERRANGENVPROC glBindBufferRangeNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetNV
extern PFNGLUXBINDBUFFEROFFSETNVPROC glBindBufferOffsetNV;
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseNV
extern PFNGLUXBINDBUFFERBASENVPROC glBindBufferBaseNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsNV
extern PFNGLUXTRANSFORMFEEDBACKVARYINGSNVPROC glTransformFeedbackVaryingsNV;
#endif
#ifndef __GLUX__GLFCT_glActiveVaryingNV
extern PFNGLUXACTIVEVARYINGNVPROC glActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetVaryingLocationNV
extern PFNGLUXGETVARYINGLOCATIONNVPROC glGetVaryingLocationNV;
#endif
#ifndef __GLUX__GLFCT_glGetActiveVaryingNV
extern PFNGLUXGETACTIVEVARYINGNVPROC glGetActiveVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingNV
extern PFNGLUXGETTRANSFORMFEEDBACKVARYINGNVPROC glGetTransformFeedbackVaryingNV;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackStreamAttribsNV
extern PFNGLUXTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC glTransformFeedbackStreamAttribsNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
