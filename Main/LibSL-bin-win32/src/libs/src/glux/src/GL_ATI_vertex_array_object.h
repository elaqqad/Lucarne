
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:25 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ATI_vertex_array_object__
#define __GLUX_GL_ATI_vertex_array_object__

GLUX_NEW_PLUGIN(GL_ATI_vertex_array_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_STATIC_ATI
#  define GL_STATIC_ATI 0x8760
#endif
#ifndef GL_DYNAMIC_ATI
#  define GL_DYNAMIC_ATI 0x8761
#endif
#ifndef GL_PRESERVE_ATI
#  define GL_PRESERVE_ATI 0x8762
#endif
#ifndef GL_DISCARD_ATI
#  define GL_DISCARD_ATI 0x8763
#endif
#ifndef GL_OBJECT_BUFFER_SIZE_ATI
#  define GL_OBJECT_BUFFER_SIZE_ATI 0x8764
#endif
#ifndef GL_OBJECT_BUFFER_USAGE_ATI
#  define GL_OBJECT_BUFFER_USAGE_ATI 0x8765
#endif
#ifndef GL_ARRAY_OBJECT_BUFFER_ATI
#  define GL_ARRAY_OBJECT_BUFFER_ATI 0x8766
#endif
#ifndef GL_ARRAY_OBJECT_OFFSET_ATI
#  define GL_ARRAY_OBJECT_OFFSET_ATI 0x8767
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
typedef GLuint (APIENTRYP PFNGLUXNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
typedef GLboolean (APIENTRYP PFNGLUXISOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
typedef void (APIENTRYP PFNGLUXUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
typedef void (APIENTRYP PFNGLUXFREEOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
typedef void (APIENTRYP PFNGLUXARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
typedef void (APIENTRYP PFNGLUXVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
extern PFNGLUXNEWOBJECTBUFFERATIPROC glNewObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
extern PFNGLUXISOBJECTBUFFERATIPROC glIsObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
extern PFNGLUXUPDATEOBJECTBUFFERATIPROC glUpdateObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
extern PFNGLUXGETOBJECTBUFFERFVATIPROC glGetObjectBufferfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
extern PFNGLUXGETOBJECTBUFFERIVATIPROC glGetObjectBufferivATI;
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
extern PFNGLUXFREEOBJECTBUFFERATIPROC glFreeObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
extern PFNGLUXARRAYOBJECTATIPROC glArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
extern PFNGLUXGETARRAYOBJECTFVATIPROC glGetArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
extern PFNGLUXGETARRAYOBJECTIVATIPROC glGetArrayObjectivATI;
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
extern PFNGLUXVARIANTARRAYOBJECTATIPROC glVariantArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
extern PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC glGetVariantArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
extern PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC glGetVariantArrayObjectivATI;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:41 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ATI_vertex_array_object__
#define __GLUX_GL_ATI_vertex_array_object__

GLUX_NEW_PLUGIN(GL_ATI_vertex_array_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_STATIC_ATI
#  define GL_STATIC_ATI 0x8760
#endif
#ifndef GL_DYNAMIC_ATI
#  define GL_DYNAMIC_ATI 0x8761
#endif
#ifndef GL_PRESERVE_ATI
#  define GL_PRESERVE_ATI 0x8762
#endif
#ifndef GL_DISCARD_ATI
#  define GL_DISCARD_ATI 0x8763
#endif
#ifndef GL_OBJECT_BUFFER_SIZE_ATI
#  define GL_OBJECT_BUFFER_SIZE_ATI 0x8764
#endif
#ifndef GL_OBJECT_BUFFER_USAGE_ATI
#  define GL_OBJECT_BUFFER_USAGE_ATI 0x8765
#endif
#ifndef GL_ARRAY_OBJECT_BUFFER_ATI
#  define GL_ARRAY_OBJECT_BUFFER_ATI 0x8766
#endif
#ifndef GL_ARRAY_OBJECT_OFFSET_ATI
#  define GL_ARRAY_OBJECT_OFFSET_ATI 0x8767
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
typedef GLuint (APIENTRYP PFNGLUXNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
typedef GLboolean (APIENTRYP PFNGLUXISOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
typedef void (APIENTRYP PFNGLUXUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
typedef void (APIENTRYP PFNGLUXFREEOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
typedef void (APIENTRYP PFNGLUXARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
typedef void (APIENTRYP PFNGLUXVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
extern PFNGLUXNEWOBJECTBUFFERATIPROC glNewObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
extern PFNGLUXISOBJECTBUFFERATIPROC glIsObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
extern PFNGLUXUPDATEOBJECTBUFFERATIPROC glUpdateObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
extern PFNGLUXGETOBJECTBUFFERFVATIPROC glGetObjectBufferfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
extern PFNGLUXGETOBJECTBUFFERIVATIPROC glGetObjectBufferivATI;
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
extern PFNGLUXFREEOBJECTBUFFERATIPROC glFreeObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
extern PFNGLUXARRAYOBJECTATIPROC glArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
extern PFNGLUXGETARRAYOBJECTFVATIPROC glGetArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
extern PFNGLUXGETARRAYOBJECTIVATIPROC glGetArrayObjectivATI;
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
extern PFNGLUXVARIANTARRAYOBJECTATIPROC glVariantArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
extern PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC glGetVariantArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
extern PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC glGetVariantArrayObjectivATI;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:53 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ATI_vertex_array_object__
#define __GLUX_GL_ATI_vertex_array_object__

GLUX_NEW_PLUGIN(GL_ATI_vertex_array_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_STATIC_ATI
#  define GL_STATIC_ATI 0x8760
#endif
#ifndef GL_DYNAMIC_ATI
#  define GL_DYNAMIC_ATI 0x8761
#endif
#ifndef GL_PRESERVE_ATI
#  define GL_PRESERVE_ATI 0x8762
#endif
#ifndef GL_DISCARD_ATI
#  define GL_DISCARD_ATI 0x8763
#endif
#ifndef GL_OBJECT_BUFFER_SIZE_ATI
#  define GL_OBJECT_BUFFER_SIZE_ATI 0x8764
#endif
#ifndef GL_OBJECT_BUFFER_USAGE_ATI
#  define GL_OBJECT_BUFFER_USAGE_ATI 0x8765
#endif
#ifndef GL_ARRAY_OBJECT_BUFFER_ATI
#  define GL_ARRAY_OBJECT_BUFFER_ATI 0x8766
#endif
#ifndef GL_ARRAY_OBJECT_OFFSET_ATI
#  define GL_ARRAY_OBJECT_OFFSET_ATI 0x8767
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
typedef GLuint (APIENTRYP PFNGLUXNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
typedef GLboolean (APIENTRYP PFNGLUXISOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
typedef void (APIENTRYP PFNGLUXUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
typedef void (APIENTRYP PFNGLUXFREEOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
typedef void (APIENTRYP PFNGLUXARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
typedef void (APIENTRYP PFNGLUXVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
extern PFNGLUXNEWOBJECTBUFFERATIPROC glNewObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
extern PFNGLUXISOBJECTBUFFERATIPROC glIsObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
extern PFNGLUXUPDATEOBJECTBUFFERATIPROC glUpdateObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
extern PFNGLUXGETOBJECTBUFFERFVATIPROC glGetObjectBufferfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
extern PFNGLUXGETOBJECTBUFFERIVATIPROC glGetObjectBufferivATI;
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
extern PFNGLUXFREEOBJECTBUFFERATIPROC glFreeObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
extern PFNGLUXARRAYOBJECTATIPROC glArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
extern PFNGLUXGETARRAYOBJECTFVATIPROC glGetArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
extern PFNGLUXGETARRAYOBJECTIVATIPROC glGetArrayObjectivATI;
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
extern PFNGLUXVARIANTARRAYOBJECTATIPROC glVariantArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
extern PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC glGetVariantArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
extern PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC glGetVariantArrayObjectivATI;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:13 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ATI_vertex_array_object__
#define __GLUX_GL_ATI_vertex_array_object__

GLUX_NEW_PLUGIN(GL_ATI_vertex_array_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_STATIC_ATI
#  define GL_STATIC_ATI 0x8760
#endif
#ifndef GL_DYNAMIC_ATI
#  define GL_DYNAMIC_ATI 0x8761
#endif
#ifndef GL_PRESERVE_ATI
#  define GL_PRESERVE_ATI 0x8762
#endif
#ifndef GL_DISCARD_ATI
#  define GL_DISCARD_ATI 0x8763
#endif
#ifndef GL_OBJECT_BUFFER_SIZE_ATI
#  define GL_OBJECT_BUFFER_SIZE_ATI 0x8764
#endif
#ifndef GL_OBJECT_BUFFER_USAGE_ATI
#  define GL_OBJECT_BUFFER_USAGE_ATI 0x8765
#endif
#ifndef GL_ARRAY_OBJECT_BUFFER_ATI
#  define GL_ARRAY_OBJECT_BUFFER_ATI 0x8766
#endif
#ifndef GL_ARRAY_OBJECT_OFFSET_ATI
#  define GL_ARRAY_OBJECT_OFFSET_ATI 0x8767
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
typedef GLuint (APIENTRYP PFNGLUXNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
typedef GLboolean (APIENTRYP PFNGLUXISOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
typedef void (APIENTRYP PFNGLUXUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
typedef void (APIENTRYP PFNGLUXFREEOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
typedef void (APIENTRYP PFNGLUXARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
typedef void (APIENTRYP PFNGLUXVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
extern PFNGLUXNEWOBJECTBUFFERATIPROC glNewObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
extern PFNGLUXISOBJECTBUFFERATIPROC glIsObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
extern PFNGLUXUPDATEOBJECTBUFFERATIPROC glUpdateObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
extern PFNGLUXGETOBJECTBUFFERFVATIPROC glGetObjectBufferfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
extern PFNGLUXGETOBJECTBUFFERIVATIPROC glGetObjectBufferivATI;
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
extern PFNGLUXFREEOBJECTBUFFERATIPROC glFreeObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
extern PFNGLUXARRAYOBJECTATIPROC glArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
extern PFNGLUXGETARRAYOBJECTFVATIPROC glGetArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
extern PFNGLUXGETARRAYOBJECTIVATIPROC glGetArrayObjectivATI;
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
extern PFNGLUXVARIANTARRAYOBJECTATIPROC glVariantArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
extern PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC glGetVariantArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
extern PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC glGetVariantArrayObjectivATI;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:29 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ATI_vertex_array_object__
#define __GLUX_GL_ATI_vertex_array_object__

GLUX_NEW_PLUGIN(GL_ATI_vertex_array_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_STATIC_ATI
#  define GL_STATIC_ATI 0x8760
#endif
#ifndef GL_DYNAMIC_ATI
#  define GL_DYNAMIC_ATI 0x8761
#endif
#ifndef GL_PRESERVE_ATI
#  define GL_PRESERVE_ATI 0x8762
#endif
#ifndef GL_DISCARD_ATI
#  define GL_DISCARD_ATI 0x8763
#endif
#ifndef GL_OBJECT_BUFFER_SIZE_ATI
#  define GL_OBJECT_BUFFER_SIZE_ATI 0x8764
#endif
#ifndef GL_OBJECT_BUFFER_USAGE_ATI
#  define GL_OBJECT_BUFFER_USAGE_ATI 0x8765
#endif
#ifndef GL_ARRAY_OBJECT_BUFFER_ATI
#  define GL_ARRAY_OBJECT_BUFFER_ATI 0x8766
#endif
#ifndef GL_ARRAY_OBJECT_OFFSET_ATI
#  define GL_ARRAY_OBJECT_OFFSET_ATI 0x8767
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
typedef GLuint (APIENTRYP PFNGLUXNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
typedef GLboolean (APIENTRYP PFNGLUXISOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
typedef void (APIENTRYP PFNGLUXUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
typedef void (APIENTRYP PFNGLUXFREEOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
typedef void (APIENTRYP PFNGLUXARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
typedef void (APIENTRYP PFNGLUXVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
extern PFNGLUXNEWOBJECTBUFFERATIPROC glNewObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
extern PFNGLUXISOBJECTBUFFERATIPROC glIsObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
extern PFNGLUXUPDATEOBJECTBUFFERATIPROC glUpdateObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
extern PFNGLUXGETOBJECTBUFFERFVATIPROC glGetObjectBufferfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
extern PFNGLUXGETOBJECTBUFFERIVATIPROC glGetObjectBufferivATI;
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
extern PFNGLUXFREEOBJECTBUFFERATIPROC glFreeObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
extern PFNGLUXARRAYOBJECTATIPROC glArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
extern PFNGLUXGETARRAYOBJECTFVATIPROC glGetArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
extern PFNGLUXGETARRAYOBJECTIVATIPROC glGetArrayObjectivATI;
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
extern PFNGLUXVARIANTARRAYOBJECTATIPROC glVariantArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
extern PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC glGetVariantArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
extern PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC glGetVariantArrayObjectivATI;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:32 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ATI_vertex_array_object__
#define __GLUX_GL_ATI_vertex_array_object__

GLUX_NEW_PLUGIN(GL_ATI_vertex_array_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_STATIC_ATI
#  define GL_STATIC_ATI 0x8760
#endif
#ifndef GL_DYNAMIC_ATI
#  define GL_DYNAMIC_ATI 0x8761
#endif
#ifndef GL_PRESERVE_ATI
#  define GL_PRESERVE_ATI 0x8762
#endif
#ifndef GL_DISCARD_ATI
#  define GL_DISCARD_ATI 0x8763
#endif
#ifndef GL_OBJECT_BUFFER_SIZE_ATI
#  define GL_OBJECT_BUFFER_SIZE_ATI 0x8764
#endif
#ifndef GL_OBJECT_BUFFER_USAGE_ATI
#  define GL_OBJECT_BUFFER_USAGE_ATI 0x8765
#endif
#ifndef GL_ARRAY_OBJECT_BUFFER_ATI
#  define GL_ARRAY_OBJECT_BUFFER_ATI 0x8766
#endif
#ifndef GL_ARRAY_OBJECT_OFFSET_ATI
#  define GL_ARRAY_OBJECT_OFFSET_ATI 0x8767
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
typedef GLuint (APIENTRYP PFNGLUXNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
typedef GLboolean (APIENTRYP PFNGLUXISOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
typedef void (APIENTRYP PFNGLUXUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
typedef void (APIENTRYP PFNGLUXFREEOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
typedef void (APIENTRYP PFNGLUXARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
typedef void (APIENTRYP PFNGLUXVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
extern PFNGLUXNEWOBJECTBUFFERATIPROC glNewObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
extern PFNGLUXISOBJECTBUFFERATIPROC glIsObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
extern PFNGLUXUPDATEOBJECTBUFFERATIPROC glUpdateObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
extern PFNGLUXGETOBJECTBUFFERFVATIPROC glGetObjectBufferfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
extern PFNGLUXGETOBJECTBUFFERIVATIPROC glGetObjectBufferivATI;
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
extern PFNGLUXFREEOBJECTBUFFERATIPROC glFreeObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
extern PFNGLUXARRAYOBJECTATIPROC glArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
extern PFNGLUXGETARRAYOBJECTFVATIPROC glGetArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
extern PFNGLUXGETARRAYOBJECTIVATIPROC glGetArrayObjectivATI;
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
extern PFNGLUXVARIANTARRAYOBJECTATIPROC glVariantArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
extern PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC glGetVariantArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
extern PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC glGetVariantArrayObjectivATI;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:53 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ATI_vertex_array_object__
#define __GLUX_GL_ATI_vertex_array_object__

GLUX_NEW_PLUGIN(GL_ATI_vertex_array_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_STATIC_ATI
#  define GL_STATIC_ATI 0x8760
#endif
#ifndef GL_DYNAMIC_ATI
#  define GL_DYNAMIC_ATI 0x8761
#endif
#ifndef GL_PRESERVE_ATI
#  define GL_PRESERVE_ATI 0x8762
#endif
#ifndef GL_DISCARD_ATI
#  define GL_DISCARD_ATI 0x8763
#endif
#ifndef GL_OBJECT_BUFFER_SIZE_ATI
#  define GL_OBJECT_BUFFER_SIZE_ATI 0x8764
#endif
#ifndef GL_OBJECT_BUFFER_USAGE_ATI
#  define GL_OBJECT_BUFFER_USAGE_ATI 0x8765
#endif
#ifndef GL_ARRAY_OBJECT_BUFFER_ATI
#  define GL_ARRAY_OBJECT_BUFFER_ATI 0x8766
#endif
#ifndef GL_ARRAY_OBJECT_OFFSET_ATI
#  define GL_ARRAY_OBJECT_OFFSET_ATI 0x8767
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
typedef GLuint (APIENTRYP PFNGLUXNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
typedef GLboolean (APIENTRYP PFNGLUXISOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
typedef void (APIENTRYP PFNGLUXUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
typedef void (APIENTRYP PFNGLUXFREEOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
typedef void (APIENTRYP PFNGLUXARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
typedef void (APIENTRYP PFNGLUXVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
extern PFNGLUXNEWOBJECTBUFFERATIPROC glNewObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
extern PFNGLUXISOBJECTBUFFERATIPROC glIsObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
extern PFNGLUXUPDATEOBJECTBUFFERATIPROC glUpdateObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
extern PFNGLUXGETOBJECTBUFFERFVATIPROC glGetObjectBufferfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
extern PFNGLUXGETOBJECTBUFFERIVATIPROC glGetObjectBufferivATI;
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
extern PFNGLUXFREEOBJECTBUFFERATIPROC glFreeObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
extern PFNGLUXARRAYOBJECTATIPROC glArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
extern PFNGLUXGETARRAYOBJECTFVATIPROC glGetArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
extern PFNGLUXGETARRAYOBJECTIVATIPROC glGetArrayObjectivATI;
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
extern PFNGLUXVARIANTARRAYOBJECTATIPROC glVariantArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
extern PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC glGetVariantArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
extern PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC glGetVariantArrayObjectivATI;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:28:02 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ATI_vertex_array_object__
#define __GLUX_GL_ATI_vertex_array_object__

GLUX_NEW_PLUGIN(GL_ATI_vertex_array_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_STATIC_ATI
#  define GL_STATIC_ATI 0x8760
#endif
#ifndef GL_DYNAMIC_ATI
#  define GL_DYNAMIC_ATI 0x8761
#endif
#ifndef GL_PRESERVE_ATI
#  define GL_PRESERVE_ATI 0x8762
#endif
#ifndef GL_DISCARD_ATI
#  define GL_DISCARD_ATI 0x8763
#endif
#ifndef GL_OBJECT_BUFFER_SIZE_ATI
#  define GL_OBJECT_BUFFER_SIZE_ATI 0x8764
#endif
#ifndef GL_OBJECT_BUFFER_USAGE_ATI
#  define GL_OBJECT_BUFFER_USAGE_ATI 0x8765
#endif
#ifndef GL_ARRAY_OBJECT_BUFFER_ATI
#  define GL_ARRAY_OBJECT_BUFFER_ATI 0x8766
#endif
#ifndef GL_ARRAY_OBJECT_OFFSET_ATI
#  define GL_ARRAY_OBJECT_OFFSET_ATI 0x8767
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
typedef GLuint (APIENTRYP PFNGLUXNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
typedef GLboolean (APIENTRYP PFNGLUXISOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
typedef void (APIENTRYP PFNGLUXUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
typedef void (APIENTRYP PFNGLUXFREEOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
typedef void (APIENTRYP PFNGLUXARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
typedef void (APIENTRYP PFNGLUXVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
extern PFNGLUXNEWOBJECTBUFFERATIPROC glNewObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
extern PFNGLUXISOBJECTBUFFERATIPROC glIsObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
extern PFNGLUXUPDATEOBJECTBUFFERATIPROC glUpdateObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
extern PFNGLUXGETOBJECTBUFFERFVATIPROC glGetObjectBufferfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
extern PFNGLUXGETOBJECTBUFFERIVATIPROC glGetObjectBufferivATI;
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
extern PFNGLUXFREEOBJECTBUFFERATIPROC glFreeObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
extern PFNGLUXARRAYOBJECTATIPROC glArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
extern PFNGLUXGETARRAYOBJECTFVATIPROC glGetArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
extern PFNGLUXGETARRAYOBJECTIVATIPROC glGetArrayObjectivATI;
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
extern PFNGLUXVARIANTARRAYOBJECTATIPROC glVariantArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
extern PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC glGetVariantArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
extern PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC glGetVariantArrayObjectivATI;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:16:56 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ATI_vertex_array_object__
#define __GLUX_GL_ATI_vertex_array_object__

GLUX_NEW_PLUGIN(GL_ATI_vertex_array_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_STATIC_ATI
#  define GL_STATIC_ATI 0x8760
#endif
#ifndef GL_DYNAMIC_ATI
#  define GL_DYNAMIC_ATI 0x8761
#endif
#ifndef GL_PRESERVE_ATI
#  define GL_PRESERVE_ATI 0x8762
#endif
#ifndef GL_DISCARD_ATI
#  define GL_DISCARD_ATI 0x8763
#endif
#ifndef GL_OBJECT_BUFFER_SIZE_ATI
#  define GL_OBJECT_BUFFER_SIZE_ATI 0x8764
#endif
#ifndef GL_OBJECT_BUFFER_USAGE_ATI
#  define GL_OBJECT_BUFFER_USAGE_ATI 0x8765
#endif
#ifndef GL_ARRAY_OBJECT_BUFFER_ATI
#  define GL_ARRAY_OBJECT_BUFFER_ATI 0x8766
#endif
#ifndef GL_ARRAY_OBJECT_OFFSET_ATI
#  define GL_ARRAY_OBJECT_OFFSET_ATI 0x8767
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
typedef GLuint (APIENTRYP PFNGLUXNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
typedef GLboolean (APIENTRYP PFNGLUXISOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
typedef void (APIENTRYP PFNGLUXUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
typedef void (APIENTRYP PFNGLUXFREEOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
typedef void (APIENTRYP PFNGLUXARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
typedef void (APIENTRYP PFNGLUXVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
extern PFNGLUXNEWOBJECTBUFFERATIPROC glNewObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
extern PFNGLUXISOBJECTBUFFERATIPROC glIsObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
extern PFNGLUXUPDATEOBJECTBUFFERATIPROC glUpdateObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
extern PFNGLUXGETOBJECTBUFFERFVATIPROC glGetObjectBufferfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
extern PFNGLUXGETOBJECTBUFFERIVATIPROC glGetObjectBufferivATI;
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
extern PFNGLUXFREEOBJECTBUFFERATIPROC glFreeObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
extern PFNGLUXARRAYOBJECTATIPROC glArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
extern PFNGLUXGETARRAYOBJECTFVATIPROC glGetArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
extern PFNGLUXGETARRAYOBJECTIVATIPROC glGetArrayObjectivATI;
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
extern PFNGLUXVARIANTARRAYOBJECTATIPROC glVariantArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
extern PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC glGetVariantArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
extern PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC glGetVariantArrayObjectivATI;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ATI_vertex_array_object__
#define __GLUX_GL_ATI_vertex_array_object__

GLUX_NEW_PLUGIN(GL_ATI_vertex_array_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_STATIC_ATI
#  define GL_STATIC_ATI 0x8760
#endif
#ifndef GL_DYNAMIC_ATI
#  define GL_DYNAMIC_ATI 0x8761
#endif
#ifndef GL_PRESERVE_ATI
#  define GL_PRESERVE_ATI 0x8762
#endif
#ifndef GL_DISCARD_ATI
#  define GL_DISCARD_ATI 0x8763
#endif
#ifndef GL_OBJECT_BUFFER_SIZE_ATI
#  define GL_OBJECT_BUFFER_SIZE_ATI 0x8764
#endif
#ifndef GL_OBJECT_BUFFER_USAGE_ATI
#  define GL_OBJECT_BUFFER_USAGE_ATI 0x8765
#endif
#ifndef GL_ARRAY_OBJECT_BUFFER_ATI
#  define GL_ARRAY_OBJECT_BUFFER_ATI 0x8766
#endif
#ifndef GL_ARRAY_OBJECT_OFFSET_ATI
#  define GL_ARRAY_OBJECT_OFFSET_ATI 0x8767
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
typedef GLuint (APIENTRYP PFNGLUXNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
typedef GLboolean (APIENTRYP PFNGLUXISOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
typedef void (APIENTRYP PFNGLUXUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
typedef void (APIENTRYP PFNGLUXFREEOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
typedef void (APIENTRYP PFNGLUXARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
typedef void (APIENTRYP PFNGLUXVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
extern PFNGLUXNEWOBJECTBUFFERATIPROC glNewObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
extern PFNGLUXISOBJECTBUFFERATIPROC glIsObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
extern PFNGLUXUPDATEOBJECTBUFFERATIPROC glUpdateObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
extern PFNGLUXGETOBJECTBUFFERFVATIPROC glGetObjectBufferfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
extern PFNGLUXGETOBJECTBUFFERIVATIPROC glGetObjectBufferivATI;
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
extern PFNGLUXFREEOBJECTBUFFERATIPROC glFreeObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
extern PFNGLUXARRAYOBJECTATIPROC glArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
extern PFNGLUXGETARRAYOBJECTFVATIPROC glGetArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
extern PFNGLUXGETARRAYOBJECTIVATIPROC glGetArrayObjectivATI;
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
extern PFNGLUXVARIANTARRAYOBJECTATIPROC glVariantArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
extern PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC glGetVariantArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
extern PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC glGetVariantArrayObjectivATI;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:19 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ATI_vertex_array_object__
#define __GLUX_GL_ATI_vertex_array_object__

GLUX_NEW_PLUGIN(GL_ATI_vertex_array_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_STATIC_ATI
#  define GL_STATIC_ATI 0x8760
#endif
#ifndef GL_DYNAMIC_ATI
#  define GL_DYNAMIC_ATI 0x8761
#endif
#ifndef GL_PRESERVE_ATI
#  define GL_PRESERVE_ATI 0x8762
#endif
#ifndef GL_DISCARD_ATI
#  define GL_DISCARD_ATI 0x8763
#endif
#ifndef GL_OBJECT_BUFFER_SIZE_ATI
#  define GL_OBJECT_BUFFER_SIZE_ATI 0x8764
#endif
#ifndef GL_OBJECT_BUFFER_USAGE_ATI
#  define GL_OBJECT_BUFFER_USAGE_ATI 0x8765
#endif
#ifndef GL_ARRAY_OBJECT_BUFFER_ATI
#  define GL_ARRAY_OBJECT_BUFFER_ATI 0x8766
#endif
#ifndef GL_ARRAY_OBJECT_OFFSET_ATI
#  define GL_ARRAY_OBJECT_OFFSET_ATI 0x8767
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
typedef GLuint (APIENTRYP PFNGLUXNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
typedef GLboolean (APIENTRYP PFNGLUXISOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
typedef void (APIENTRYP PFNGLUXUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
typedef void (APIENTRYP PFNGLUXFREEOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
typedef void (APIENTRYP PFNGLUXARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
typedef void (APIENTRYP PFNGLUXVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
extern PFNGLUXNEWOBJECTBUFFERATIPROC glNewObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
extern PFNGLUXISOBJECTBUFFERATIPROC glIsObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
extern PFNGLUXUPDATEOBJECTBUFFERATIPROC glUpdateObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
extern PFNGLUXGETOBJECTBUFFERFVATIPROC glGetObjectBufferfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
extern PFNGLUXGETOBJECTBUFFERIVATIPROC glGetObjectBufferivATI;
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
extern PFNGLUXFREEOBJECTBUFFERATIPROC glFreeObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
extern PFNGLUXARRAYOBJECTATIPROC glArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
extern PFNGLUXGETARRAYOBJECTFVATIPROC glGetArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
extern PFNGLUXGETARRAYOBJECTIVATIPROC glGetArrayObjectivATI;
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
extern PFNGLUXVARIANTARRAYOBJECTATIPROC glVariantArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
extern PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC glGetVariantArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
extern PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC glGetVariantArrayObjectivATI;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:00 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ATI_vertex_array_object__
#define __GLUX_GL_ATI_vertex_array_object__

GLUX_NEW_PLUGIN(GL_ATI_vertex_array_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_STATIC_ATI
#  define GL_STATIC_ATI 0x8760
#endif
#ifndef GL_DYNAMIC_ATI
#  define GL_DYNAMIC_ATI 0x8761
#endif
#ifndef GL_PRESERVE_ATI
#  define GL_PRESERVE_ATI 0x8762
#endif
#ifndef GL_DISCARD_ATI
#  define GL_DISCARD_ATI 0x8763
#endif
#ifndef GL_OBJECT_BUFFER_SIZE_ATI
#  define GL_OBJECT_BUFFER_SIZE_ATI 0x8764
#endif
#ifndef GL_OBJECT_BUFFER_USAGE_ATI
#  define GL_OBJECT_BUFFER_USAGE_ATI 0x8765
#endif
#ifndef GL_ARRAY_OBJECT_BUFFER_ATI
#  define GL_ARRAY_OBJECT_BUFFER_ATI 0x8766
#endif
#ifndef GL_ARRAY_OBJECT_OFFSET_ATI
#  define GL_ARRAY_OBJECT_OFFSET_ATI 0x8767
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
typedef GLuint (APIENTRYP PFNGLUXNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
typedef GLboolean (APIENTRYP PFNGLUXISOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
typedef void (APIENTRYP PFNGLUXUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
typedef void (APIENTRYP PFNGLUXFREEOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
typedef void (APIENTRYP PFNGLUXARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
typedef void (APIENTRYP PFNGLUXVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
extern PFNGLUXNEWOBJECTBUFFERATIPROC glNewObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
extern PFNGLUXISOBJECTBUFFERATIPROC glIsObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
extern PFNGLUXUPDATEOBJECTBUFFERATIPROC glUpdateObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
extern PFNGLUXGETOBJECTBUFFERFVATIPROC glGetObjectBufferfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
extern PFNGLUXGETOBJECTBUFFERIVATIPROC glGetObjectBufferivATI;
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
extern PFNGLUXFREEOBJECTBUFFERATIPROC glFreeObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
extern PFNGLUXARRAYOBJECTATIPROC glArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
extern PFNGLUXGETARRAYOBJECTFVATIPROC glGetArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
extern PFNGLUXGETARRAYOBJECTIVATIPROC glGetArrayObjectivATI;
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
extern PFNGLUXVARIANTARRAYOBJECTATIPROC glVariantArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
extern PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC glGetVariantArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
extern PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC glGetVariantArrayObjectivATI;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:09 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ATI_vertex_array_object__
#define __GLUX_GL_ATI_vertex_array_object__

GLUX_NEW_PLUGIN(GL_ATI_vertex_array_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_STATIC_ATI
#  define GL_STATIC_ATI 0x8760
#endif
#ifndef GL_DYNAMIC_ATI
#  define GL_DYNAMIC_ATI 0x8761
#endif
#ifndef GL_PRESERVE_ATI
#  define GL_PRESERVE_ATI 0x8762
#endif
#ifndef GL_DISCARD_ATI
#  define GL_DISCARD_ATI 0x8763
#endif
#ifndef GL_OBJECT_BUFFER_SIZE_ATI
#  define GL_OBJECT_BUFFER_SIZE_ATI 0x8764
#endif
#ifndef GL_OBJECT_BUFFER_USAGE_ATI
#  define GL_OBJECT_BUFFER_USAGE_ATI 0x8765
#endif
#ifndef GL_ARRAY_OBJECT_BUFFER_ATI
#  define GL_ARRAY_OBJECT_BUFFER_ATI 0x8766
#endif
#ifndef GL_ARRAY_OBJECT_OFFSET_ATI
#  define GL_ARRAY_OBJECT_OFFSET_ATI 0x8767
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
typedef GLuint (APIENTRYP PFNGLUXNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
typedef GLboolean (APIENTRYP PFNGLUXISOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
typedef void (APIENTRYP PFNGLUXUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
typedef void (APIENTRYP PFNGLUXFREEOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
typedef void (APIENTRYP PFNGLUXARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
typedef void (APIENTRYP PFNGLUXVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
extern PFNGLUXNEWOBJECTBUFFERATIPROC glNewObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
extern PFNGLUXISOBJECTBUFFERATIPROC glIsObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
extern PFNGLUXUPDATEOBJECTBUFFERATIPROC glUpdateObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
extern PFNGLUXGETOBJECTBUFFERFVATIPROC glGetObjectBufferfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
extern PFNGLUXGETOBJECTBUFFERIVATIPROC glGetObjectBufferivATI;
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
extern PFNGLUXFREEOBJECTBUFFERATIPROC glFreeObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
extern PFNGLUXARRAYOBJECTATIPROC glArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
extern PFNGLUXGETARRAYOBJECTFVATIPROC glGetArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
extern PFNGLUXGETARRAYOBJECTIVATIPROC glGetArrayObjectivATI;
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
extern PFNGLUXVARIANTARRAYOBJECTATIPROC glVariantArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
extern PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC glGetVariantArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
extern PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC glGetVariantArrayObjectivATI;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:21 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ATI_vertex_array_object__
#define __GLUX_GL_ATI_vertex_array_object__

GLUX_NEW_PLUGIN(GL_ATI_vertex_array_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_STATIC_ATI
#  define GL_STATIC_ATI 0x8760
#endif
#ifndef GL_DYNAMIC_ATI
#  define GL_DYNAMIC_ATI 0x8761
#endif
#ifndef GL_PRESERVE_ATI
#  define GL_PRESERVE_ATI 0x8762
#endif
#ifndef GL_DISCARD_ATI
#  define GL_DISCARD_ATI 0x8763
#endif
#ifndef GL_OBJECT_BUFFER_SIZE_ATI
#  define GL_OBJECT_BUFFER_SIZE_ATI 0x8764
#endif
#ifndef GL_OBJECT_BUFFER_USAGE_ATI
#  define GL_OBJECT_BUFFER_USAGE_ATI 0x8765
#endif
#ifndef GL_ARRAY_OBJECT_BUFFER_ATI
#  define GL_ARRAY_OBJECT_BUFFER_ATI 0x8766
#endif
#ifndef GL_ARRAY_OBJECT_OFFSET_ATI
#  define GL_ARRAY_OBJECT_OFFSET_ATI 0x8767
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
typedef GLuint (APIENTRYP PFNGLUXNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
typedef GLboolean (APIENTRYP PFNGLUXISOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
typedef void (APIENTRYP PFNGLUXUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
typedef void (APIENTRYP PFNGLUXFREEOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
typedef void (APIENTRYP PFNGLUXARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
typedef void (APIENTRYP PFNGLUXVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
extern PFNGLUXNEWOBJECTBUFFERATIPROC glNewObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
extern PFNGLUXISOBJECTBUFFERATIPROC glIsObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
extern PFNGLUXUPDATEOBJECTBUFFERATIPROC glUpdateObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
extern PFNGLUXGETOBJECTBUFFERFVATIPROC glGetObjectBufferfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
extern PFNGLUXGETOBJECTBUFFERIVATIPROC glGetObjectBufferivATI;
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
extern PFNGLUXFREEOBJECTBUFFERATIPROC glFreeObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
extern PFNGLUXARRAYOBJECTATIPROC glArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
extern PFNGLUXGETARRAYOBJECTFVATIPROC glGetArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
extern PFNGLUXGETARRAYOBJECTIVATIPROC glGetArrayObjectivATI;
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
extern PFNGLUXVARIANTARRAYOBJECTATIPROC glVariantArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
extern PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC glGetVariantArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
extern PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC glGetVariantArrayObjectivATI;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:52:00 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ATI_vertex_array_object__
#define __GLUX_GL_ATI_vertex_array_object__

GLUX_NEW_PLUGIN(GL_ATI_vertex_array_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_STATIC_ATI
#  define GL_STATIC_ATI 0x8760
#endif
#ifndef GL_DYNAMIC_ATI
#  define GL_DYNAMIC_ATI 0x8761
#endif
#ifndef GL_PRESERVE_ATI
#  define GL_PRESERVE_ATI 0x8762
#endif
#ifndef GL_DISCARD_ATI
#  define GL_DISCARD_ATI 0x8763
#endif
#ifndef GL_OBJECT_BUFFER_SIZE_ATI
#  define GL_OBJECT_BUFFER_SIZE_ATI 0x8764
#endif
#ifndef GL_OBJECT_BUFFER_USAGE_ATI
#  define GL_OBJECT_BUFFER_USAGE_ATI 0x8765
#endif
#ifndef GL_ARRAY_OBJECT_BUFFER_ATI
#  define GL_ARRAY_OBJECT_BUFFER_ATI 0x8766
#endif
#ifndef GL_ARRAY_OBJECT_OFFSET_ATI
#  define GL_ARRAY_OBJECT_OFFSET_ATI 0x8767
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
typedef GLuint (APIENTRYP PFNGLUXNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
typedef GLboolean (APIENTRYP PFNGLUXISOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
typedef void (APIENTRYP PFNGLUXUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
typedef void (APIENTRYP PFNGLUXFREEOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
typedef void (APIENTRYP PFNGLUXARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
typedef void (APIENTRYP PFNGLUXVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
extern PFNGLUXNEWOBJECTBUFFERATIPROC glNewObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
extern PFNGLUXISOBJECTBUFFERATIPROC glIsObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
extern PFNGLUXUPDATEOBJECTBUFFERATIPROC glUpdateObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
extern PFNGLUXGETOBJECTBUFFERFVATIPROC glGetObjectBufferfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
extern PFNGLUXGETOBJECTBUFFERIVATIPROC glGetObjectBufferivATI;
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
extern PFNGLUXFREEOBJECTBUFFERATIPROC glFreeObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
extern PFNGLUXARRAYOBJECTATIPROC glArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
extern PFNGLUXGETARRAYOBJECTFVATIPROC glGetArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
extern PFNGLUXGETARRAYOBJECTIVATIPROC glGetArrayObjectivATI;
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
extern PFNGLUXVARIANTARRAYOBJECTATIPROC glVariantArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
extern PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC glGetVariantArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
extern PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC glGetVariantArrayObjectivATI;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ATI_vertex_array_object__
#define __GLUX_GL_ATI_vertex_array_object__

GLUX_NEW_PLUGIN(GL_ATI_vertex_array_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_STATIC_ATI
#  define GL_STATIC_ATI 0x8760
#endif
#ifndef GL_DYNAMIC_ATI
#  define GL_DYNAMIC_ATI 0x8761
#endif
#ifndef GL_PRESERVE_ATI
#  define GL_PRESERVE_ATI 0x8762
#endif
#ifndef GL_DISCARD_ATI
#  define GL_DISCARD_ATI 0x8763
#endif
#ifndef GL_OBJECT_BUFFER_SIZE_ATI
#  define GL_OBJECT_BUFFER_SIZE_ATI 0x8764
#endif
#ifndef GL_OBJECT_BUFFER_USAGE_ATI
#  define GL_OBJECT_BUFFER_USAGE_ATI 0x8765
#endif
#ifndef GL_ARRAY_OBJECT_BUFFER_ATI
#  define GL_ARRAY_OBJECT_BUFFER_ATI 0x8766
#endif
#ifndef GL_ARRAY_OBJECT_OFFSET_ATI
#  define GL_ARRAY_OBJECT_OFFSET_ATI 0x8767
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
typedef GLuint (APIENTRYP PFNGLUXNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
typedef GLboolean (APIENTRYP PFNGLUXISOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
typedef void (APIENTRYP PFNGLUXUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
typedef void (APIENTRYP PFNGLUXFREEOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
typedef void (APIENTRYP PFNGLUXARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
typedef void (APIENTRYP PFNGLUXVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
extern PFNGLUXNEWOBJECTBUFFERATIPROC glNewObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
extern PFNGLUXISOBJECTBUFFERATIPROC glIsObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
extern PFNGLUXUPDATEOBJECTBUFFERATIPROC glUpdateObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
extern PFNGLUXGETOBJECTBUFFERFVATIPROC glGetObjectBufferfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
extern PFNGLUXGETOBJECTBUFFERIVATIPROC glGetObjectBufferivATI;
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
extern PFNGLUXFREEOBJECTBUFFERATIPROC glFreeObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
extern PFNGLUXARRAYOBJECTATIPROC glArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
extern PFNGLUXGETARRAYOBJECTFVATIPROC glGetArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
extern PFNGLUXGETARRAYOBJECTIVATIPROC glGetArrayObjectivATI;
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
extern PFNGLUXVARIANTARRAYOBJECTATIPROC glVariantArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
extern PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC glGetVariantArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
extern PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC glGetVariantArrayObjectivATI;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:03 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ATI_vertex_array_object__
#define __GLUX_GL_ATI_vertex_array_object__

GLUX_NEW_PLUGIN(GL_ATI_vertex_array_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_STATIC_ATI
#  define GL_STATIC_ATI 0x8760
#endif
#ifndef GL_DYNAMIC_ATI
#  define GL_DYNAMIC_ATI 0x8761
#endif
#ifndef GL_PRESERVE_ATI
#  define GL_PRESERVE_ATI 0x8762
#endif
#ifndef GL_DISCARD_ATI
#  define GL_DISCARD_ATI 0x8763
#endif
#ifndef GL_OBJECT_BUFFER_SIZE_ATI
#  define GL_OBJECT_BUFFER_SIZE_ATI 0x8764
#endif
#ifndef GL_OBJECT_BUFFER_USAGE_ATI
#  define GL_OBJECT_BUFFER_USAGE_ATI 0x8765
#endif
#ifndef GL_ARRAY_OBJECT_BUFFER_ATI
#  define GL_ARRAY_OBJECT_BUFFER_ATI 0x8766
#endif
#ifndef GL_ARRAY_OBJECT_OFFSET_ATI
#  define GL_ARRAY_OBJECT_OFFSET_ATI 0x8767
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
typedef GLuint (APIENTRYP PFNGLUXNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
typedef GLboolean (APIENTRYP PFNGLUXISOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
typedef void (APIENTRYP PFNGLUXUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
typedef void (APIENTRYP PFNGLUXFREEOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
typedef void (APIENTRYP PFNGLUXARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
typedef void (APIENTRYP PFNGLUXVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
extern PFNGLUXNEWOBJECTBUFFERATIPROC glNewObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
extern PFNGLUXISOBJECTBUFFERATIPROC glIsObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
extern PFNGLUXUPDATEOBJECTBUFFERATIPROC glUpdateObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
extern PFNGLUXGETOBJECTBUFFERFVATIPROC glGetObjectBufferfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
extern PFNGLUXGETOBJECTBUFFERIVATIPROC glGetObjectBufferivATI;
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
extern PFNGLUXFREEOBJECTBUFFERATIPROC glFreeObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
extern PFNGLUXARRAYOBJECTATIPROC glArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
extern PFNGLUXGETARRAYOBJECTFVATIPROC glGetArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
extern PFNGLUXGETARRAYOBJECTIVATIPROC glGetArrayObjectivATI;
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
extern PFNGLUXVARIANTARRAYOBJECTATIPROC glVariantArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
extern PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC glGetVariantArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
extern PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC glGetVariantArrayObjectivATI;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:24 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ATI_vertex_array_object__
#define __GLUX_GL_ATI_vertex_array_object__

GLUX_NEW_PLUGIN(GL_ATI_vertex_array_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_STATIC_ATI
#  define GL_STATIC_ATI 0x8760
#endif
#ifndef GL_DYNAMIC_ATI
#  define GL_DYNAMIC_ATI 0x8761
#endif
#ifndef GL_PRESERVE_ATI
#  define GL_PRESERVE_ATI 0x8762
#endif
#ifndef GL_DISCARD_ATI
#  define GL_DISCARD_ATI 0x8763
#endif
#ifndef GL_OBJECT_BUFFER_SIZE_ATI
#  define GL_OBJECT_BUFFER_SIZE_ATI 0x8764
#endif
#ifndef GL_OBJECT_BUFFER_USAGE_ATI
#  define GL_OBJECT_BUFFER_USAGE_ATI 0x8765
#endif
#ifndef GL_ARRAY_OBJECT_BUFFER_ATI
#  define GL_ARRAY_OBJECT_BUFFER_ATI 0x8766
#endif
#ifndef GL_ARRAY_OBJECT_OFFSET_ATI
#  define GL_ARRAY_OBJECT_OFFSET_ATI 0x8767
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
typedef GLuint (APIENTRYP PFNGLUXNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
typedef GLboolean (APIENTRYP PFNGLUXISOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
typedef void (APIENTRYP PFNGLUXUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
typedef void (APIENTRYP PFNGLUXFREEOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
typedef void (APIENTRYP PFNGLUXARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
typedef void (APIENTRYP PFNGLUXVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
extern PFNGLUXNEWOBJECTBUFFERATIPROC glNewObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
extern PFNGLUXISOBJECTBUFFERATIPROC glIsObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
extern PFNGLUXUPDATEOBJECTBUFFERATIPROC glUpdateObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
extern PFNGLUXGETOBJECTBUFFERFVATIPROC glGetObjectBufferfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
extern PFNGLUXGETOBJECTBUFFERIVATIPROC glGetObjectBufferivATI;
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
extern PFNGLUXFREEOBJECTBUFFERATIPROC glFreeObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
extern PFNGLUXARRAYOBJECTATIPROC glArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
extern PFNGLUXGETARRAYOBJECTFVATIPROC glGetArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
extern PFNGLUXGETARRAYOBJECTIVATIPROC glGetArrayObjectivATI;
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
extern PFNGLUXVARIANTARRAYOBJECTATIPROC glVariantArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
extern PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC glGetVariantArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
extern PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC glGetVariantArrayObjectivATI;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ATI_vertex_array_object__
#define __GLUX_GL_ATI_vertex_array_object__

GLUX_NEW_PLUGIN(GL_ATI_vertex_array_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_STATIC_ATI
#  define GL_STATIC_ATI 0x8760
#endif
#ifndef GL_DYNAMIC_ATI
#  define GL_DYNAMIC_ATI 0x8761
#endif
#ifndef GL_PRESERVE_ATI
#  define GL_PRESERVE_ATI 0x8762
#endif
#ifndef GL_DISCARD_ATI
#  define GL_DISCARD_ATI 0x8763
#endif
#ifndef GL_OBJECT_BUFFER_SIZE_ATI
#  define GL_OBJECT_BUFFER_SIZE_ATI 0x8764
#endif
#ifndef GL_OBJECT_BUFFER_USAGE_ATI
#  define GL_OBJECT_BUFFER_USAGE_ATI 0x8765
#endif
#ifndef GL_ARRAY_OBJECT_BUFFER_ATI
#  define GL_ARRAY_OBJECT_BUFFER_ATI 0x8766
#endif
#ifndef GL_ARRAY_OBJECT_OFFSET_ATI
#  define GL_ARRAY_OBJECT_OFFSET_ATI 0x8767
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
typedef GLuint (APIENTRYP PFNGLUXNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
typedef GLboolean (APIENTRYP PFNGLUXISOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
typedef void (APIENTRYP PFNGLUXUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
typedef void (APIENTRYP PFNGLUXFREEOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
typedef void (APIENTRYP PFNGLUXARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
typedef void (APIENTRYP PFNGLUXVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
extern PFNGLUXNEWOBJECTBUFFERATIPROC glNewObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
extern PFNGLUXISOBJECTBUFFERATIPROC glIsObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
extern PFNGLUXUPDATEOBJECTBUFFERATIPROC glUpdateObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
extern PFNGLUXGETOBJECTBUFFERFVATIPROC glGetObjectBufferfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
extern PFNGLUXGETOBJECTBUFFERIVATIPROC glGetObjectBufferivATI;
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
extern PFNGLUXFREEOBJECTBUFFERATIPROC glFreeObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
extern PFNGLUXARRAYOBJECTATIPROC glArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
extern PFNGLUXGETARRAYOBJECTFVATIPROC glGetArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
extern PFNGLUXGETARRAYOBJECTIVATIPROC glGetArrayObjectivATI;
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
extern PFNGLUXVARIANTARRAYOBJECTATIPROC glVariantArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
extern PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC glGetVariantArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
extern PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC glGetVariantArrayObjectivATI;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:41:57 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ATI_vertex_array_object__
#define __GLUX_GL_ATI_vertex_array_object__

GLUX_NEW_PLUGIN(GL_ATI_vertex_array_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_STATIC_ATI
#  define GL_STATIC_ATI 0x8760
#endif
#ifndef GL_DYNAMIC_ATI
#  define GL_DYNAMIC_ATI 0x8761
#endif
#ifndef GL_PRESERVE_ATI
#  define GL_PRESERVE_ATI 0x8762
#endif
#ifndef GL_DISCARD_ATI
#  define GL_DISCARD_ATI 0x8763
#endif
#ifndef GL_OBJECT_BUFFER_SIZE_ATI
#  define GL_OBJECT_BUFFER_SIZE_ATI 0x8764
#endif
#ifndef GL_OBJECT_BUFFER_USAGE_ATI
#  define GL_OBJECT_BUFFER_USAGE_ATI 0x8765
#endif
#ifndef GL_ARRAY_OBJECT_BUFFER_ATI
#  define GL_ARRAY_OBJECT_BUFFER_ATI 0x8766
#endif
#ifndef GL_ARRAY_OBJECT_OFFSET_ATI
#  define GL_ARRAY_OBJECT_OFFSET_ATI 0x8767
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
typedef GLuint (APIENTRYP PFNGLUXNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
typedef GLboolean (APIENTRYP PFNGLUXISOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
typedef void (APIENTRYP PFNGLUXUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
typedef void (APIENTRYP PFNGLUXFREEOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
typedef void (APIENTRYP PFNGLUXARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
typedef void (APIENTRYP PFNGLUXVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
extern PFNGLUXNEWOBJECTBUFFERATIPROC glNewObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
extern PFNGLUXISOBJECTBUFFERATIPROC glIsObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
extern PFNGLUXUPDATEOBJECTBUFFERATIPROC glUpdateObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
extern PFNGLUXGETOBJECTBUFFERFVATIPROC glGetObjectBufferfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
extern PFNGLUXGETOBJECTBUFFERIVATIPROC glGetObjectBufferivATI;
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
extern PFNGLUXFREEOBJECTBUFFERATIPROC glFreeObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
extern PFNGLUXARRAYOBJECTATIPROC glArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
extern PFNGLUXGETARRAYOBJECTFVATIPROC glGetArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
extern PFNGLUXGETARRAYOBJECTIVATIPROC glGetArrayObjectivATI;
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
extern PFNGLUXVARIANTARRAYOBJECTATIPROC glVariantArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
extern PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC glGetVariantArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
extern PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC glGetVariantArrayObjectivATI;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:38 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ATI_vertex_array_object__
#define __GLUX_GL_ATI_vertex_array_object__

GLUX_NEW_PLUGIN(GL_ATI_vertex_array_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_STATIC_ATI
#  define GL_STATIC_ATI 0x8760
#endif
#ifndef GL_DYNAMIC_ATI
#  define GL_DYNAMIC_ATI 0x8761
#endif
#ifndef GL_PRESERVE_ATI
#  define GL_PRESERVE_ATI 0x8762
#endif
#ifndef GL_DISCARD_ATI
#  define GL_DISCARD_ATI 0x8763
#endif
#ifndef GL_OBJECT_BUFFER_SIZE_ATI
#  define GL_OBJECT_BUFFER_SIZE_ATI 0x8764
#endif
#ifndef GL_OBJECT_BUFFER_USAGE_ATI
#  define GL_OBJECT_BUFFER_USAGE_ATI 0x8765
#endif
#ifndef GL_ARRAY_OBJECT_BUFFER_ATI
#  define GL_ARRAY_OBJECT_BUFFER_ATI 0x8766
#endif
#ifndef GL_ARRAY_OBJECT_OFFSET_ATI
#  define GL_ARRAY_OBJECT_OFFSET_ATI 0x8767
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
typedef GLuint (APIENTRYP PFNGLUXNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
typedef GLboolean (APIENTRYP PFNGLUXISOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
typedef void (APIENTRYP PFNGLUXUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
typedef void (APIENTRYP PFNGLUXFREEOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
typedef void (APIENTRYP PFNGLUXARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
typedef void (APIENTRYP PFNGLUXVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
extern PFNGLUXNEWOBJECTBUFFERATIPROC glNewObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
extern PFNGLUXISOBJECTBUFFERATIPROC glIsObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
extern PFNGLUXUPDATEOBJECTBUFFERATIPROC glUpdateObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
extern PFNGLUXGETOBJECTBUFFERFVATIPROC glGetObjectBufferfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
extern PFNGLUXGETOBJECTBUFFERIVATIPROC glGetObjectBufferivATI;
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
extern PFNGLUXFREEOBJECTBUFFERATIPROC glFreeObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
extern PFNGLUXARRAYOBJECTATIPROC glArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
extern PFNGLUXGETARRAYOBJECTFVATIPROC glGetArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
extern PFNGLUXGETARRAYOBJECTIVATIPROC glGetArrayObjectivATI;
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
extern PFNGLUXVARIANTARRAYOBJECTATIPROC glVariantArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
extern PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC glGetVariantArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
extern PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC glGetVariantArrayObjectivATI;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:09:58 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ATI_vertex_array_object__
#define __GLUX_GL_ATI_vertex_array_object__

GLUX_NEW_PLUGIN(GL_ATI_vertex_array_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_STATIC_ATI
#  define GL_STATIC_ATI 0x8760
#endif
#ifndef GL_DYNAMIC_ATI
#  define GL_DYNAMIC_ATI 0x8761
#endif
#ifndef GL_PRESERVE_ATI
#  define GL_PRESERVE_ATI 0x8762
#endif
#ifndef GL_DISCARD_ATI
#  define GL_DISCARD_ATI 0x8763
#endif
#ifndef GL_OBJECT_BUFFER_SIZE_ATI
#  define GL_OBJECT_BUFFER_SIZE_ATI 0x8764
#endif
#ifndef GL_OBJECT_BUFFER_USAGE_ATI
#  define GL_OBJECT_BUFFER_USAGE_ATI 0x8765
#endif
#ifndef GL_ARRAY_OBJECT_BUFFER_ATI
#  define GL_ARRAY_OBJECT_BUFFER_ATI 0x8766
#endif
#ifndef GL_ARRAY_OBJECT_OFFSET_ATI
#  define GL_ARRAY_OBJECT_OFFSET_ATI 0x8767
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
typedef GLuint (APIENTRYP PFNGLUXNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
typedef GLboolean (APIENTRYP PFNGLUXISOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
typedef void (APIENTRYP PFNGLUXUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
typedef void (APIENTRYP PFNGLUXFREEOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
typedef void (APIENTRYP PFNGLUXARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
typedef void (APIENTRYP PFNGLUXVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
extern PFNGLUXNEWOBJECTBUFFERATIPROC glNewObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
extern PFNGLUXISOBJECTBUFFERATIPROC glIsObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
extern PFNGLUXUPDATEOBJECTBUFFERATIPROC glUpdateObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
extern PFNGLUXGETOBJECTBUFFERFVATIPROC glGetObjectBufferfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
extern PFNGLUXGETOBJECTBUFFERIVATIPROC glGetObjectBufferivATI;
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
extern PFNGLUXFREEOBJECTBUFFERATIPROC glFreeObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
extern PFNGLUXARRAYOBJECTATIPROC glArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
extern PFNGLUXGETARRAYOBJECTFVATIPROC glGetArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
extern PFNGLUXGETARRAYOBJECTIVATIPROC glGetArrayObjectivATI;
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
extern PFNGLUXVARIANTARRAYOBJECTATIPROC glVariantArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
extern PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC glGetVariantArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
extern PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC glGetVariantArrayObjectivATI;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:19:58 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ATI_vertex_array_object__
#define __GLUX_GL_ATI_vertex_array_object__

GLUX_NEW_PLUGIN(GL_ATI_vertex_array_object);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_STATIC_ATI
#  define GL_STATIC_ATI 0x8760
#endif
#ifndef GL_DYNAMIC_ATI
#  define GL_DYNAMIC_ATI 0x8761
#endif
#ifndef GL_PRESERVE_ATI
#  define GL_PRESERVE_ATI 0x8762
#endif
#ifndef GL_DISCARD_ATI
#  define GL_DISCARD_ATI 0x8763
#endif
#ifndef GL_OBJECT_BUFFER_SIZE_ATI
#  define GL_OBJECT_BUFFER_SIZE_ATI 0x8764
#endif
#ifndef GL_OBJECT_BUFFER_USAGE_ATI
#  define GL_OBJECT_BUFFER_USAGE_ATI 0x8765
#endif
#ifndef GL_ARRAY_OBJECT_BUFFER_ATI
#  define GL_ARRAY_OBJECT_BUFFER_ATI 0x8766
#endif
#ifndef GL_ARRAY_OBJECT_OFFSET_ATI
#  define GL_ARRAY_OBJECT_OFFSET_ATI 0x8767
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
typedef GLuint (APIENTRYP PFNGLUXNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
typedef GLboolean (APIENTRYP PFNGLUXISOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
typedef void (APIENTRYP PFNGLUXUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
typedef void (APIENTRYP PFNGLUXFREEOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
typedef void (APIENTRYP PFNGLUXARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
typedef void (APIENTRYP PFNGLUXVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
extern PFNGLUXNEWOBJECTBUFFERATIPROC glNewObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
extern PFNGLUXISOBJECTBUFFERATIPROC glIsObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
extern PFNGLUXUPDATEOBJECTBUFFERATIPROC glUpdateObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
extern PFNGLUXGETOBJECTBUFFERFVATIPROC glGetObjectBufferfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
extern PFNGLUXGETOBJECTBUFFERIVATIPROC glGetObjectBufferivATI;
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
extern PFNGLUXFREEOBJECTBUFFERATIPROC glFreeObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
extern PFNGLUXARRAYOBJECTATIPROC glArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
extern PFNGLUXGETARRAYOBJECTFVATIPROC glGetArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
extern PFNGLUXGETARRAYOBJECTIVATIPROC glGetArrayObjectivATI;
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
extern PFNGLUXVARIANTARRAYOBJECTATIPROC glVariantArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
extern PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC glGetVariantArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
extern PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC glGetVariantArrayObjectivATI;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:42:56 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ATI_vertex_array_object__
#define __GLUX_GL_ATI_vertex_array_object__

GLUX_NEW_PLUGIN(GL_ATI_vertex_array_object)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_STATIC_ATI
#  define GL_STATIC_ATI 0x8760
#endif
#ifndef GL_DYNAMIC_ATI
#  define GL_DYNAMIC_ATI 0x8761
#endif
#ifndef GL_PRESERVE_ATI
#  define GL_PRESERVE_ATI 0x8762
#endif
#ifndef GL_DISCARD_ATI
#  define GL_DISCARD_ATI 0x8763
#endif
#ifndef GL_OBJECT_BUFFER_SIZE_ATI
#  define GL_OBJECT_BUFFER_SIZE_ATI 0x8764
#endif
#ifndef GL_OBJECT_BUFFER_USAGE_ATI
#  define GL_OBJECT_BUFFER_USAGE_ATI 0x8765
#endif
#ifndef GL_ARRAY_OBJECT_BUFFER_ATI
#  define GL_ARRAY_OBJECT_BUFFER_ATI 0x8766
#endif
#ifndef GL_ARRAY_OBJECT_OFFSET_ATI
#  define GL_ARRAY_OBJECT_OFFSET_ATI 0x8767
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
typedef GLuint (APIENTRYP PFNGLUXNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
typedef GLboolean (APIENTRYP PFNGLUXISOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
typedef void (APIENTRYP PFNGLUXUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
typedef void (APIENTRYP PFNGLUXGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
typedef void (APIENTRYP PFNGLUXFREEOBJECTBUFFERATIPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
typedef void (APIENTRYP PFNGLUXARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
typedef void (APIENTRYP PFNGLUXVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
typedef void (APIENTRYP PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glNewObjectBufferATI
extern PFNGLUXNEWOBJECTBUFFERATIPROC glNewObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glIsObjectBufferATI
extern PFNGLUXISOBJECTBUFFERATIPROC glIsObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glUpdateObjectBufferATI
extern PFNGLUXUPDATEOBJECTBUFFERATIPROC glUpdateObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferfvATI
extern PFNGLUXGETOBJECTBUFFERFVATIPROC glGetObjectBufferfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetObjectBufferivATI
extern PFNGLUXGETOBJECTBUFFERIVATIPROC glGetObjectBufferivATI;
#endif
#ifndef __GLUX__GLFCT_glFreeObjectBufferATI
extern PFNGLUXFREEOBJECTBUFFERATIPROC glFreeObjectBufferATI;
#endif
#ifndef __GLUX__GLFCT_glArrayObjectATI
extern PFNGLUXARRAYOBJECTATIPROC glArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectfvATI
extern PFNGLUXGETARRAYOBJECTFVATIPROC glGetArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetArrayObjectivATI
extern PFNGLUXGETARRAYOBJECTIVATIPROC glGetArrayObjectivATI;
#endif
#ifndef __GLUX__GLFCT_glVariantArrayObjectATI
extern PFNGLUXVARIANTARRAYOBJECTATIPROC glVariantArrayObjectATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectfvATI
extern PFNGLUXGETVARIANTARRAYOBJECTFVATIPROC glGetVariantArrayObjectfvATI;
#endif
#ifndef __GLUX__GLFCT_glGetVariantArrayObjectivATI
extern PFNGLUXGETVARIANTARRAYOBJECTIVATIPROC glGetVariantArrayObjectivATI;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
