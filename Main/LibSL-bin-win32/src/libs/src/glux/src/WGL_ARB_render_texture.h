
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:25 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_ARB_render_texture__
#define __GLUX_WGL_ARB_render_texture__

GLUX_NEW_PLUGIN(WGL_ARB_render_texture);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_BIND_TO_TEXTURE_RGB_ARB
#  define WGL_BIND_TO_TEXTURE_RGB_ARB 0x2070
#endif
#ifndef WGL_BIND_TO_TEXTURE_RGBA_ARB
#  define WGL_BIND_TO_TEXTURE_RGBA_ARB 0x2071
#endif
#ifndef WGL_TEXTURE_FORMAT_ARB
#  define WGL_TEXTURE_FORMAT_ARB 0x2072
#endif
#ifndef WGL_TEXTURE_TARGET_ARB
#  define WGL_TEXTURE_TARGET_ARB 0x2073
#endif
#ifndef WGL_MIPMAP_TEXTURE_ARB
#  define WGL_MIPMAP_TEXTURE_ARB 0x2074
#endif
#ifndef WGL_TEXTURE_RGB_ARB
#  define WGL_TEXTURE_RGB_ARB 0x2075
#endif
#ifndef WGL_TEXTURE_RGBA_ARB
#  define WGL_TEXTURE_RGBA_ARB 0x2076
#endif
#ifndef WGL_NO_TEXTURE_ARB
#  define WGL_NO_TEXTURE_ARB 0x2077
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_ARB
#  define WGL_TEXTURE_CUBE_MAP_ARB 0x2078
#endif
#ifndef WGL_TEXTURE_1D_ARB
#  define WGL_TEXTURE_1D_ARB 0x2079
#endif
#ifndef WGL_TEXTURE_2D_ARB
#  define WGL_TEXTURE_2D_ARB 0x207A
#endif
#ifndef WGL_MIPMAP_LEVEL_ARB
#  define WGL_MIPMAP_LEVEL_ARB 0x207B
#endif
#ifndef WGL_CUBE_MAP_FACE_ARB
#  define WGL_CUBE_MAP_FACE_ARB 0x207C
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x207D
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x207E
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x207F
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x2080
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x2081
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x2082
#endif
#ifndef WGL_FRONT_LEFT_ARB
#  define WGL_FRONT_LEFT_ARB 0x2083
#endif
#ifndef WGL_FRONT_RIGHT_ARB
#  define WGL_FRONT_RIGHT_ARB 0x2084
#endif
#ifndef WGL_BACK_LEFT_ARB
#  define WGL_BACK_LEFT_ARB 0x2085
#endif
#ifndef WGL_BACK_RIGHT_ARB
#  define WGL_BACK_RIGHT_ARB 0x2086
#endif
#ifndef WGL_AUX0_ARB
#  define WGL_AUX0_ARB 0x2087
#endif
#ifndef WGL_AUX1_ARB
#  define WGL_AUX1_ARB 0x2088
#endif
#ifndef WGL_AUX2_ARB
#  define WGL_AUX2_ARB 0x2089
#endif
#ifndef WGL_AUX3_ARB
#  define WGL_AUX3_ARB 0x208A
#endif
#ifndef WGL_AUX4_ARB
#  define WGL_AUX4_ARB 0x208B
#endif
#ifndef WGL_AUX5_ARB
#  define WGL_AUX5_ARB 0x208C
#endif
#ifndef WGL_AUX6_ARB
#  define WGL_AUX6_ARB 0x208D
#endif
#ifndef WGL_AUX7_ARB
#  define WGL_AUX7_ARB 0x208E
#endif
#ifndef WGL_AUX8_ARB
#  define WGL_AUX8_ARB 0x208F
#endif
#ifndef WGL_AUX9_ARB
#  define WGL_AUX9_ARB 0x2090
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglBindTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
typedef BOOL (APIENTRYP PFNWGLUXSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttribList);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglBindTexImageARB
extern PFNWGLUXBINDTEXIMAGEARBPROC wglBindTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
extern PFNWGLUXRELEASETEXIMAGEARBPROC wglReleaseTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
extern PFNWGLUXSETPBUFFERATTRIBARBPROC wglSetPbufferAttribARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:40 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_ARB_render_texture__
#define __GLUX_WGL_ARB_render_texture__

GLUX_NEW_PLUGIN(WGL_ARB_render_texture);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_BIND_TO_TEXTURE_RGB_ARB
#  define WGL_BIND_TO_TEXTURE_RGB_ARB 0x2070
#endif
#ifndef WGL_BIND_TO_TEXTURE_RGBA_ARB
#  define WGL_BIND_TO_TEXTURE_RGBA_ARB 0x2071
#endif
#ifndef WGL_TEXTURE_FORMAT_ARB
#  define WGL_TEXTURE_FORMAT_ARB 0x2072
#endif
#ifndef WGL_TEXTURE_TARGET_ARB
#  define WGL_TEXTURE_TARGET_ARB 0x2073
#endif
#ifndef WGL_MIPMAP_TEXTURE_ARB
#  define WGL_MIPMAP_TEXTURE_ARB 0x2074
#endif
#ifndef WGL_TEXTURE_RGB_ARB
#  define WGL_TEXTURE_RGB_ARB 0x2075
#endif
#ifndef WGL_TEXTURE_RGBA_ARB
#  define WGL_TEXTURE_RGBA_ARB 0x2076
#endif
#ifndef WGL_NO_TEXTURE_ARB
#  define WGL_NO_TEXTURE_ARB 0x2077
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_ARB
#  define WGL_TEXTURE_CUBE_MAP_ARB 0x2078
#endif
#ifndef WGL_TEXTURE_1D_ARB
#  define WGL_TEXTURE_1D_ARB 0x2079
#endif
#ifndef WGL_TEXTURE_2D_ARB
#  define WGL_TEXTURE_2D_ARB 0x207A
#endif
#ifndef WGL_MIPMAP_LEVEL_ARB
#  define WGL_MIPMAP_LEVEL_ARB 0x207B
#endif
#ifndef WGL_CUBE_MAP_FACE_ARB
#  define WGL_CUBE_MAP_FACE_ARB 0x207C
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x207D
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x207E
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x207F
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x2080
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x2081
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x2082
#endif
#ifndef WGL_FRONT_LEFT_ARB
#  define WGL_FRONT_LEFT_ARB 0x2083
#endif
#ifndef WGL_FRONT_RIGHT_ARB
#  define WGL_FRONT_RIGHT_ARB 0x2084
#endif
#ifndef WGL_BACK_LEFT_ARB
#  define WGL_BACK_LEFT_ARB 0x2085
#endif
#ifndef WGL_BACK_RIGHT_ARB
#  define WGL_BACK_RIGHT_ARB 0x2086
#endif
#ifndef WGL_AUX0_ARB
#  define WGL_AUX0_ARB 0x2087
#endif
#ifndef WGL_AUX1_ARB
#  define WGL_AUX1_ARB 0x2088
#endif
#ifndef WGL_AUX2_ARB
#  define WGL_AUX2_ARB 0x2089
#endif
#ifndef WGL_AUX3_ARB
#  define WGL_AUX3_ARB 0x208A
#endif
#ifndef WGL_AUX4_ARB
#  define WGL_AUX4_ARB 0x208B
#endif
#ifndef WGL_AUX5_ARB
#  define WGL_AUX5_ARB 0x208C
#endif
#ifndef WGL_AUX6_ARB
#  define WGL_AUX6_ARB 0x208D
#endif
#ifndef WGL_AUX7_ARB
#  define WGL_AUX7_ARB 0x208E
#endif
#ifndef WGL_AUX8_ARB
#  define WGL_AUX8_ARB 0x208F
#endif
#ifndef WGL_AUX9_ARB
#  define WGL_AUX9_ARB 0x2090
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglBindTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
typedef BOOL (APIENTRYP PFNWGLUXSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttribList);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglBindTexImageARB
extern PFNWGLUXBINDTEXIMAGEARBPROC wglBindTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
extern PFNWGLUXRELEASETEXIMAGEARBPROC wglReleaseTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
extern PFNWGLUXSETPBUFFERATTRIBARBPROC wglSetPbufferAttribARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:53 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_ARB_render_texture__
#define __GLUX_WGL_ARB_render_texture__

GLUX_NEW_PLUGIN(WGL_ARB_render_texture);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_BIND_TO_TEXTURE_RGB_ARB
#  define WGL_BIND_TO_TEXTURE_RGB_ARB 0x2070
#endif
#ifndef WGL_BIND_TO_TEXTURE_RGBA_ARB
#  define WGL_BIND_TO_TEXTURE_RGBA_ARB 0x2071
#endif
#ifndef WGL_TEXTURE_FORMAT_ARB
#  define WGL_TEXTURE_FORMAT_ARB 0x2072
#endif
#ifndef WGL_TEXTURE_TARGET_ARB
#  define WGL_TEXTURE_TARGET_ARB 0x2073
#endif
#ifndef WGL_MIPMAP_TEXTURE_ARB
#  define WGL_MIPMAP_TEXTURE_ARB 0x2074
#endif
#ifndef WGL_TEXTURE_RGB_ARB
#  define WGL_TEXTURE_RGB_ARB 0x2075
#endif
#ifndef WGL_TEXTURE_RGBA_ARB
#  define WGL_TEXTURE_RGBA_ARB 0x2076
#endif
#ifndef WGL_NO_TEXTURE_ARB
#  define WGL_NO_TEXTURE_ARB 0x2077
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_ARB
#  define WGL_TEXTURE_CUBE_MAP_ARB 0x2078
#endif
#ifndef WGL_TEXTURE_1D_ARB
#  define WGL_TEXTURE_1D_ARB 0x2079
#endif
#ifndef WGL_TEXTURE_2D_ARB
#  define WGL_TEXTURE_2D_ARB 0x207A
#endif
#ifndef WGL_MIPMAP_LEVEL_ARB
#  define WGL_MIPMAP_LEVEL_ARB 0x207B
#endif
#ifndef WGL_CUBE_MAP_FACE_ARB
#  define WGL_CUBE_MAP_FACE_ARB 0x207C
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x207D
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x207E
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x207F
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x2080
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x2081
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x2082
#endif
#ifndef WGL_FRONT_LEFT_ARB
#  define WGL_FRONT_LEFT_ARB 0x2083
#endif
#ifndef WGL_FRONT_RIGHT_ARB
#  define WGL_FRONT_RIGHT_ARB 0x2084
#endif
#ifndef WGL_BACK_LEFT_ARB
#  define WGL_BACK_LEFT_ARB 0x2085
#endif
#ifndef WGL_BACK_RIGHT_ARB
#  define WGL_BACK_RIGHT_ARB 0x2086
#endif
#ifndef WGL_AUX0_ARB
#  define WGL_AUX0_ARB 0x2087
#endif
#ifndef WGL_AUX1_ARB
#  define WGL_AUX1_ARB 0x2088
#endif
#ifndef WGL_AUX2_ARB
#  define WGL_AUX2_ARB 0x2089
#endif
#ifndef WGL_AUX3_ARB
#  define WGL_AUX3_ARB 0x208A
#endif
#ifndef WGL_AUX4_ARB
#  define WGL_AUX4_ARB 0x208B
#endif
#ifndef WGL_AUX5_ARB
#  define WGL_AUX5_ARB 0x208C
#endif
#ifndef WGL_AUX6_ARB
#  define WGL_AUX6_ARB 0x208D
#endif
#ifndef WGL_AUX7_ARB
#  define WGL_AUX7_ARB 0x208E
#endif
#ifndef WGL_AUX8_ARB
#  define WGL_AUX8_ARB 0x208F
#endif
#ifndef WGL_AUX9_ARB
#  define WGL_AUX9_ARB 0x2090
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglBindTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
typedef BOOL (APIENTRYP PFNWGLUXSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttribList);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglBindTexImageARB
extern PFNWGLUXBINDTEXIMAGEARBPROC wglBindTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
extern PFNWGLUXRELEASETEXIMAGEARBPROC wglReleaseTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
extern PFNWGLUXSETPBUFFERATTRIBARBPROC wglSetPbufferAttribARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:13 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_ARB_render_texture__
#define __GLUX_WGL_ARB_render_texture__

GLUX_NEW_PLUGIN(WGL_ARB_render_texture);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_BIND_TO_TEXTURE_RGB_ARB
#  define WGL_BIND_TO_TEXTURE_RGB_ARB 0x2070
#endif
#ifndef WGL_BIND_TO_TEXTURE_RGBA_ARB
#  define WGL_BIND_TO_TEXTURE_RGBA_ARB 0x2071
#endif
#ifndef WGL_TEXTURE_FORMAT_ARB
#  define WGL_TEXTURE_FORMAT_ARB 0x2072
#endif
#ifndef WGL_TEXTURE_TARGET_ARB
#  define WGL_TEXTURE_TARGET_ARB 0x2073
#endif
#ifndef WGL_MIPMAP_TEXTURE_ARB
#  define WGL_MIPMAP_TEXTURE_ARB 0x2074
#endif
#ifndef WGL_TEXTURE_RGB_ARB
#  define WGL_TEXTURE_RGB_ARB 0x2075
#endif
#ifndef WGL_TEXTURE_RGBA_ARB
#  define WGL_TEXTURE_RGBA_ARB 0x2076
#endif
#ifndef WGL_NO_TEXTURE_ARB
#  define WGL_NO_TEXTURE_ARB 0x2077
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_ARB
#  define WGL_TEXTURE_CUBE_MAP_ARB 0x2078
#endif
#ifndef WGL_TEXTURE_1D_ARB
#  define WGL_TEXTURE_1D_ARB 0x2079
#endif
#ifndef WGL_TEXTURE_2D_ARB
#  define WGL_TEXTURE_2D_ARB 0x207A
#endif
#ifndef WGL_MIPMAP_LEVEL_ARB
#  define WGL_MIPMAP_LEVEL_ARB 0x207B
#endif
#ifndef WGL_CUBE_MAP_FACE_ARB
#  define WGL_CUBE_MAP_FACE_ARB 0x207C
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x207D
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x207E
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x207F
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x2080
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x2081
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x2082
#endif
#ifndef WGL_FRONT_LEFT_ARB
#  define WGL_FRONT_LEFT_ARB 0x2083
#endif
#ifndef WGL_FRONT_RIGHT_ARB
#  define WGL_FRONT_RIGHT_ARB 0x2084
#endif
#ifndef WGL_BACK_LEFT_ARB
#  define WGL_BACK_LEFT_ARB 0x2085
#endif
#ifndef WGL_BACK_RIGHT_ARB
#  define WGL_BACK_RIGHT_ARB 0x2086
#endif
#ifndef WGL_AUX0_ARB
#  define WGL_AUX0_ARB 0x2087
#endif
#ifndef WGL_AUX1_ARB
#  define WGL_AUX1_ARB 0x2088
#endif
#ifndef WGL_AUX2_ARB
#  define WGL_AUX2_ARB 0x2089
#endif
#ifndef WGL_AUX3_ARB
#  define WGL_AUX3_ARB 0x208A
#endif
#ifndef WGL_AUX4_ARB
#  define WGL_AUX4_ARB 0x208B
#endif
#ifndef WGL_AUX5_ARB
#  define WGL_AUX5_ARB 0x208C
#endif
#ifndef WGL_AUX6_ARB
#  define WGL_AUX6_ARB 0x208D
#endif
#ifndef WGL_AUX7_ARB
#  define WGL_AUX7_ARB 0x208E
#endif
#ifndef WGL_AUX8_ARB
#  define WGL_AUX8_ARB 0x208F
#endif
#ifndef WGL_AUX9_ARB
#  define WGL_AUX9_ARB 0x2090
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglBindTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
typedef BOOL (APIENTRYP PFNWGLUXSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttribList);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglBindTexImageARB
extern PFNWGLUXBINDTEXIMAGEARBPROC wglBindTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
extern PFNWGLUXRELEASETEXIMAGEARBPROC wglReleaseTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
extern PFNWGLUXSETPBUFFERATTRIBARBPROC wglSetPbufferAttribARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:28 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_ARB_render_texture__
#define __GLUX_WGL_ARB_render_texture__

GLUX_NEW_PLUGIN(WGL_ARB_render_texture);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_BIND_TO_TEXTURE_RGB_ARB
#  define WGL_BIND_TO_TEXTURE_RGB_ARB 0x2070
#endif
#ifndef WGL_BIND_TO_TEXTURE_RGBA_ARB
#  define WGL_BIND_TO_TEXTURE_RGBA_ARB 0x2071
#endif
#ifndef WGL_TEXTURE_FORMAT_ARB
#  define WGL_TEXTURE_FORMAT_ARB 0x2072
#endif
#ifndef WGL_TEXTURE_TARGET_ARB
#  define WGL_TEXTURE_TARGET_ARB 0x2073
#endif
#ifndef WGL_MIPMAP_TEXTURE_ARB
#  define WGL_MIPMAP_TEXTURE_ARB 0x2074
#endif
#ifndef WGL_TEXTURE_RGB_ARB
#  define WGL_TEXTURE_RGB_ARB 0x2075
#endif
#ifndef WGL_TEXTURE_RGBA_ARB
#  define WGL_TEXTURE_RGBA_ARB 0x2076
#endif
#ifndef WGL_NO_TEXTURE_ARB
#  define WGL_NO_TEXTURE_ARB 0x2077
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_ARB
#  define WGL_TEXTURE_CUBE_MAP_ARB 0x2078
#endif
#ifndef WGL_TEXTURE_1D_ARB
#  define WGL_TEXTURE_1D_ARB 0x2079
#endif
#ifndef WGL_TEXTURE_2D_ARB
#  define WGL_TEXTURE_2D_ARB 0x207A
#endif
#ifndef WGL_MIPMAP_LEVEL_ARB
#  define WGL_MIPMAP_LEVEL_ARB 0x207B
#endif
#ifndef WGL_CUBE_MAP_FACE_ARB
#  define WGL_CUBE_MAP_FACE_ARB 0x207C
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x207D
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x207E
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x207F
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x2080
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x2081
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x2082
#endif
#ifndef WGL_FRONT_LEFT_ARB
#  define WGL_FRONT_LEFT_ARB 0x2083
#endif
#ifndef WGL_FRONT_RIGHT_ARB
#  define WGL_FRONT_RIGHT_ARB 0x2084
#endif
#ifndef WGL_BACK_LEFT_ARB
#  define WGL_BACK_LEFT_ARB 0x2085
#endif
#ifndef WGL_BACK_RIGHT_ARB
#  define WGL_BACK_RIGHT_ARB 0x2086
#endif
#ifndef WGL_AUX0_ARB
#  define WGL_AUX0_ARB 0x2087
#endif
#ifndef WGL_AUX1_ARB
#  define WGL_AUX1_ARB 0x2088
#endif
#ifndef WGL_AUX2_ARB
#  define WGL_AUX2_ARB 0x2089
#endif
#ifndef WGL_AUX3_ARB
#  define WGL_AUX3_ARB 0x208A
#endif
#ifndef WGL_AUX4_ARB
#  define WGL_AUX4_ARB 0x208B
#endif
#ifndef WGL_AUX5_ARB
#  define WGL_AUX5_ARB 0x208C
#endif
#ifndef WGL_AUX6_ARB
#  define WGL_AUX6_ARB 0x208D
#endif
#ifndef WGL_AUX7_ARB
#  define WGL_AUX7_ARB 0x208E
#endif
#ifndef WGL_AUX8_ARB
#  define WGL_AUX8_ARB 0x208F
#endif
#ifndef WGL_AUX9_ARB
#  define WGL_AUX9_ARB 0x2090
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglBindTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
typedef BOOL (APIENTRYP PFNWGLUXSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttribList);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglBindTexImageARB
extern PFNWGLUXBINDTEXIMAGEARBPROC wglBindTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
extern PFNWGLUXRELEASETEXIMAGEARBPROC wglReleaseTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
extern PFNWGLUXSETPBUFFERATTRIBARBPROC wglSetPbufferAttribARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:32 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_ARB_render_texture__
#define __GLUX_WGL_ARB_render_texture__

GLUX_NEW_PLUGIN(WGL_ARB_render_texture);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_BIND_TO_TEXTURE_RGB_ARB
#  define WGL_BIND_TO_TEXTURE_RGB_ARB 0x2070
#endif
#ifndef WGL_BIND_TO_TEXTURE_RGBA_ARB
#  define WGL_BIND_TO_TEXTURE_RGBA_ARB 0x2071
#endif
#ifndef WGL_TEXTURE_FORMAT_ARB
#  define WGL_TEXTURE_FORMAT_ARB 0x2072
#endif
#ifndef WGL_TEXTURE_TARGET_ARB
#  define WGL_TEXTURE_TARGET_ARB 0x2073
#endif
#ifndef WGL_MIPMAP_TEXTURE_ARB
#  define WGL_MIPMAP_TEXTURE_ARB 0x2074
#endif
#ifndef WGL_TEXTURE_RGB_ARB
#  define WGL_TEXTURE_RGB_ARB 0x2075
#endif
#ifndef WGL_TEXTURE_RGBA_ARB
#  define WGL_TEXTURE_RGBA_ARB 0x2076
#endif
#ifndef WGL_NO_TEXTURE_ARB
#  define WGL_NO_TEXTURE_ARB 0x2077
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_ARB
#  define WGL_TEXTURE_CUBE_MAP_ARB 0x2078
#endif
#ifndef WGL_TEXTURE_1D_ARB
#  define WGL_TEXTURE_1D_ARB 0x2079
#endif
#ifndef WGL_TEXTURE_2D_ARB
#  define WGL_TEXTURE_2D_ARB 0x207A
#endif
#ifndef WGL_MIPMAP_LEVEL_ARB
#  define WGL_MIPMAP_LEVEL_ARB 0x207B
#endif
#ifndef WGL_CUBE_MAP_FACE_ARB
#  define WGL_CUBE_MAP_FACE_ARB 0x207C
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x207D
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x207E
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x207F
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x2080
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x2081
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x2082
#endif
#ifndef WGL_FRONT_LEFT_ARB
#  define WGL_FRONT_LEFT_ARB 0x2083
#endif
#ifndef WGL_FRONT_RIGHT_ARB
#  define WGL_FRONT_RIGHT_ARB 0x2084
#endif
#ifndef WGL_BACK_LEFT_ARB
#  define WGL_BACK_LEFT_ARB 0x2085
#endif
#ifndef WGL_BACK_RIGHT_ARB
#  define WGL_BACK_RIGHT_ARB 0x2086
#endif
#ifndef WGL_AUX0_ARB
#  define WGL_AUX0_ARB 0x2087
#endif
#ifndef WGL_AUX1_ARB
#  define WGL_AUX1_ARB 0x2088
#endif
#ifndef WGL_AUX2_ARB
#  define WGL_AUX2_ARB 0x2089
#endif
#ifndef WGL_AUX3_ARB
#  define WGL_AUX3_ARB 0x208A
#endif
#ifndef WGL_AUX4_ARB
#  define WGL_AUX4_ARB 0x208B
#endif
#ifndef WGL_AUX5_ARB
#  define WGL_AUX5_ARB 0x208C
#endif
#ifndef WGL_AUX6_ARB
#  define WGL_AUX6_ARB 0x208D
#endif
#ifndef WGL_AUX7_ARB
#  define WGL_AUX7_ARB 0x208E
#endif
#ifndef WGL_AUX8_ARB
#  define WGL_AUX8_ARB 0x208F
#endif
#ifndef WGL_AUX9_ARB
#  define WGL_AUX9_ARB 0x2090
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglBindTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
typedef BOOL (APIENTRYP PFNWGLUXSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttribList);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglBindTexImageARB
extern PFNWGLUXBINDTEXIMAGEARBPROC wglBindTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
extern PFNWGLUXRELEASETEXIMAGEARBPROC wglReleaseTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
extern PFNWGLUXSETPBUFFERATTRIBARBPROC wglSetPbufferAttribARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:52 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_ARB_render_texture__
#define __GLUX_WGL_ARB_render_texture__

GLUX_NEW_PLUGIN(WGL_ARB_render_texture);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_BIND_TO_TEXTURE_RGB_ARB
#  define WGL_BIND_TO_TEXTURE_RGB_ARB 0x2070
#endif
#ifndef WGL_BIND_TO_TEXTURE_RGBA_ARB
#  define WGL_BIND_TO_TEXTURE_RGBA_ARB 0x2071
#endif
#ifndef WGL_TEXTURE_FORMAT_ARB
#  define WGL_TEXTURE_FORMAT_ARB 0x2072
#endif
#ifndef WGL_TEXTURE_TARGET_ARB
#  define WGL_TEXTURE_TARGET_ARB 0x2073
#endif
#ifndef WGL_MIPMAP_TEXTURE_ARB
#  define WGL_MIPMAP_TEXTURE_ARB 0x2074
#endif
#ifndef WGL_TEXTURE_RGB_ARB
#  define WGL_TEXTURE_RGB_ARB 0x2075
#endif
#ifndef WGL_TEXTURE_RGBA_ARB
#  define WGL_TEXTURE_RGBA_ARB 0x2076
#endif
#ifndef WGL_NO_TEXTURE_ARB
#  define WGL_NO_TEXTURE_ARB 0x2077
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_ARB
#  define WGL_TEXTURE_CUBE_MAP_ARB 0x2078
#endif
#ifndef WGL_TEXTURE_1D_ARB
#  define WGL_TEXTURE_1D_ARB 0x2079
#endif
#ifndef WGL_TEXTURE_2D_ARB
#  define WGL_TEXTURE_2D_ARB 0x207A
#endif
#ifndef WGL_MIPMAP_LEVEL_ARB
#  define WGL_MIPMAP_LEVEL_ARB 0x207B
#endif
#ifndef WGL_CUBE_MAP_FACE_ARB
#  define WGL_CUBE_MAP_FACE_ARB 0x207C
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x207D
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x207E
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x207F
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x2080
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x2081
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x2082
#endif
#ifndef WGL_FRONT_LEFT_ARB
#  define WGL_FRONT_LEFT_ARB 0x2083
#endif
#ifndef WGL_FRONT_RIGHT_ARB
#  define WGL_FRONT_RIGHT_ARB 0x2084
#endif
#ifndef WGL_BACK_LEFT_ARB
#  define WGL_BACK_LEFT_ARB 0x2085
#endif
#ifndef WGL_BACK_RIGHT_ARB
#  define WGL_BACK_RIGHT_ARB 0x2086
#endif
#ifndef WGL_AUX0_ARB
#  define WGL_AUX0_ARB 0x2087
#endif
#ifndef WGL_AUX1_ARB
#  define WGL_AUX1_ARB 0x2088
#endif
#ifndef WGL_AUX2_ARB
#  define WGL_AUX2_ARB 0x2089
#endif
#ifndef WGL_AUX3_ARB
#  define WGL_AUX3_ARB 0x208A
#endif
#ifndef WGL_AUX4_ARB
#  define WGL_AUX4_ARB 0x208B
#endif
#ifndef WGL_AUX5_ARB
#  define WGL_AUX5_ARB 0x208C
#endif
#ifndef WGL_AUX6_ARB
#  define WGL_AUX6_ARB 0x208D
#endif
#ifndef WGL_AUX7_ARB
#  define WGL_AUX7_ARB 0x208E
#endif
#ifndef WGL_AUX8_ARB
#  define WGL_AUX8_ARB 0x208F
#endif
#ifndef WGL_AUX9_ARB
#  define WGL_AUX9_ARB 0x2090
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglBindTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
typedef BOOL (APIENTRYP PFNWGLUXSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttribList);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglBindTexImageARB
extern PFNWGLUXBINDTEXIMAGEARBPROC wglBindTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
extern PFNWGLUXRELEASETEXIMAGEARBPROC wglReleaseTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
extern PFNWGLUXSETPBUFFERATTRIBARBPROC wglSetPbufferAttribARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:27:59 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_ARB_render_texture__
#define __GLUX_WGL_ARB_render_texture__

GLUX_NEW_PLUGIN(WGL_ARB_render_texture);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_BIND_TO_TEXTURE_RGB_ARB
#  define WGL_BIND_TO_TEXTURE_RGB_ARB 0x2070
#endif
#ifndef WGL_BIND_TO_TEXTURE_RGBA_ARB
#  define WGL_BIND_TO_TEXTURE_RGBA_ARB 0x2071
#endif
#ifndef WGL_TEXTURE_FORMAT_ARB
#  define WGL_TEXTURE_FORMAT_ARB 0x2072
#endif
#ifndef WGL_TEXTURE_TARGET_ARB
#  define WGL_TEXTURE_TARGET_ARB 0x2073
#endif
#ifndef WGL_MIPMAP_TEXTURE_ARB
#  define WGL_MIPMAP_TEXTURE_ARB 0x2074
#endif
#ifndef WGL_TEXTURE_RGB_ARB
#  define WGL_TEXTURE_RGB_ARB 0x2075
#endif
#ifndef WGL_TEXTURE_RGBA_ARB
#  define WGL_TEXTURE_RGBA_ARB 0x2076
#endif
#ifndef WGL_NO_TEXTURE_ARB
#  define WGL_NO_TEXTURE_ARB 0x2077
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_ARB
#  define WGL_TEXTURE_CUBE_MAP_ARB 0x2078
#endif
#ifndef WGL_TEXTURE_1D_ARB
#  define WGL_TEXTURE_1D_ARB 0x2079
#endif
#ifndef WGL_TEXTURE_2D_ARB
#  define WGL_TEXTURE_2D_ARB 0x207A
#endif
#ifndef WGL_MIPMAP_LEVEL_ARB
#  define WGL_MIPMAP_LEVEL_ARB 0x207B
#endif
#ifndef WGL_CUBE_MAP_FACE_ARB
#  define WGL_CUBE_MAP_FACE_ARB 0x207C
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x207D
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x207E
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x207F
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x2080
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x2081
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x2082
#endif
#ifndef WGL_FRONT_LEFT_ARB
#  define WGL_FRONT_LEFT_ARB 0x2083
#endif
#ifndef WGL_FRONT_RIGHT_ARB
#  define WGL_FRONT_RIGHT_ARB 0x2084
#endif
#ifndef WGL_BACK_LEFT_ARB
#  define WGL_BACK_LEFT_ARB 0x2085
#endif
#ifndef WGL_BACK_RIGHT_ARB
#  define WGL_BACK_RIGHT_ARB 0x2086
#endif
#ifndef WGL_AUX0_ARB
#  define WGL_AUX0_ARB 0x2087
#endif
#ifndef WGL_AUX1_ARB
#  define WGL_AUX1_ARB 0x2088
#endif
#ifndef WGL_AUX2_ARB
#  define WGL_AUX2_ARB 0x2089
#endif
#ifndef WGL_AUX3_ARB
#  define WGL_AUX3_ARB 0x208A
#endif
#ifndef WGL_AUX4_ARB
#  define WGL_AUX4_ARB 0x208B
#endif
#ifndef WGL_AUX5_ARB
#  define WGL_AUX5_ARB 0x208C
#endif
#ifndef WGL_AUX6_ARB
#  define WGL_AUX6_ARB 0x208D
#endif
#ifndef WGL_AUX7_ARB
#  define WGL_AUX7_ARB 0x208E
#endif
#ifndef WGL_AUX8_ARB
#  define WGL_AUX8_ARB 0x208F
#endif
#ifndef WGL_AUX9_ARB
#  define WGL_AUX9_ARB 0x2090
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglBindTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
typedef BOOL (APIENTRYP PFNWGLUXSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttribList);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglBindTexImageARB
extern PFNWGLUXBINDTEXIMAGEARBPROC wglBindTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
extern PFNWGLUXRELEASETEXIMAGEARBPROC wglReleaseTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
extern PFNWGLUXSETPBUFFERATTRIBARBPROC wglSetPbufferAttribARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:16:56 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_ARB_render_texture__
#define __GLUX_WGL_ARB_render_texture__

GLUX_NEW_PLUGIN(WGL_ARB_render_texture);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_BIND_TO_TEXTURE_RGB_ARB
#  define WGL_BIND_TO_TEXTURE_RGB_ARB 0x2070
#endif
#ifndef WGL_BIND_TO_TEXTURE_RGBA_ARB
#  define WGL_BIND_TO_TEXTURE_RGBA_ARB 0x2071
#endif
#ifndef WGL_TEXTURE_FORMAT_ARB
#  define WGL_TEXTURE_FORMAT_ARB 0x2072
#endif
#ifndef WGL_TEXTURE_TARGET_ARB
#  define WGL_TEXTURE_TARGET_ARB 0x2073
#endif
#ifndef WGL_MIPMAP_TEXTURE_ARB
#  define WGL_MIPMAP_TEXTURE_ARB 0x2074
#endif
#ifndef WGL_TEXTURE_RGB_ARB
#  define WGL_TEXTURE_RGB_ARB 0x2075
#endif
#ifndef WGL_TEXTURE_RGBA_ARB
#  define WGL_TEXTURE_RGBA_ARB 0x2076
#endif
#ifndef WGL_NO_TEXTURE_ARB
#  define WGL_NO_TEXTURE_ARB 0x2077
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_ARB
#  define WGL_TEXTURE_CUBE_MAP_ARB 0x2078
#endif
#ifndef WGL_TEXTURE_1D_ARB
#  define WGL_TEXTURE_1D_ARB 0x2079
#endif
#ifndef WGL_TEXTURE_2D_ARB
#  define WGL_TEXTURE_2D_ARB 0x207A
#endif
#ifndef WGL_MIPMAP_LEVEL_ARB
#  define WGL_MIPMAP_LEVEL_ARB 0x207B
#endif
#ifndef WGL_CUBE_MAP_FACE_ARB
#  define WGL_CUBE_MAP_FACE_ARB 0x207C
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x207D
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x207E
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x207F
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x2080
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x2081
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x2082
#endif
#ifndef WGL_FRONT_LEFT_ARB
#  define WGL_FRONT_LEFT_ARB 0x2083
#endif
#ifndef WGL_FRONT_RIGHT_ARB
#  define WGL_FRONT_RIGHT_ARB 0x2084
#endif
#ifndef WGL_BACK_LEFT_ARB
#  define WGL_BACK_LEFT_ARB 0x2085
#endif
#ifndef WGL_BACK_RIGHT_ARB
#  define WGL_BACK_RIGHT_ARB 0x2086
#endif
#ifndef WGL_AUX0_ARB
#  define WGL_AUX0_ARB 0x2087
#endif
#ifndef WGL_AUX1_ARB
#  define WGL_AUX1_ARB 0x2088
#endif
#ifndef WGL_AUX2_ARB
#  define WGL_AUX2_ARB 0x2089
#endif
#ifndef WGL_AUX3_ARB
#  define WGL_AUX3_ARB 0x208A
#endif
#ifndef WGL_AUX4_ARB
#  define WGL_AUX4_ARB 0x208B
#endif
#ifndef WGL_AUX5_ARB
#  define WGL_AUX5_ARB 0x208C
#endif
#ifndef WGL_AUX6_ARB
#  define WGL_AUX6_ARB 0x208D
#endif
#ifndef WGL_AUX7_ARB
#  define WGL_AUX7_ARB 0x208E
#endif
#ifndef WGL_AUX8_ARB
#  define WGL_AUX8_ARB 0x208F
#endif
#ifndef WGL_AUX9_ARB
#  define WGL_AUX9_ARB 0x2090
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglBindTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
typedef BOOL (APIENTRYP PFNWGLUXSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttribList);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglBindTexImageARB
extern PFNWGLUXBINDTEXIMAGEARBPROC wglBindTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
extern PFNWGLUXRELEASETEXIMAGEARBPROC wglReleaseTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
extern PFNWGLUXSETPBUFFERATTRIBARBPROC wglSetPbufferAttribARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_ARB_render_texture__
#define __GLUX_WGL_ARB_render_texture__

GLUX_NEW_PLUGIN(WGL_ARB_render_texture);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_BIND_TO_TEXTURE_RGB_ARB
#  define WGL_BIND_TO_TEXTURE_RGB_ARB 0x2070
#endif
#ifndef WGL_BIND_TO_TEXTURE_RGBA_ARB
#  define WGL_BIND_TO_TEXTURE_RGBA_ARB 0x2071
#endif
#ifndef WGL_TEXTURE_FORMAT_ARB
#  define WGL_TEXTURE_FORMAT_ARB 0x2072
#endif
#ifndef WGL_TEXTURE_TARGET_ARB
#  define WGL_TEXTURE_TARGET_ARB 0x2073
#endif
#ifndef WGL_MIPMAP_TEXTURE_ARB
#  define WGL_MIPMAP_TEXTURE_ARB 0x2074
#endif
#ifndef WGL_TEXTURE_RGB_ARB
#  define WGL_TEXTURE_RGB_ARB 0x2075
#endif
#ifndef WGL_TEXTURE_RGBA_ARB
#  define WGL_TEXTURE_RGBA_ARB 0x2076
#endif
#ifndef WGL_NO_TEXTURE_ARB
#  define WGL_NO_TEXTURE_ARB 0x2077
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_ARB
#  define WGL_TEXTURE_CUBE_MAP_ARB 0x2078
#endif
#ifndef WGL_TEXTURE_1D_ARB
#  define WGL_TEXTURE_1D_ARB 0x2079
#endif
#ifndef WGL_TEXTURE_2D_ARB
#  define WGL_TEXTURE_2D_ARB 0x207A
#endif
#ifndef WGL_MIPMAP_LEVEL_ARB
#  define WGL_MIPMAP_LEVEL_ARB 0x207B
#endif
#ifndef WGL_CUBE_MAP_FACE_ARB
#  define WGL_CUBE_MAP_FACE_ARB 0x207C
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x207D
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x207E
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x207F
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x2080
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x2081
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x2082
#endif
#ifndef WGL_FRONT_LEFT_ARB
#  define WGL_FRONT_LEFT_ARB 0x2083
#endif
#ifndef WGL_FRONT_RIGHT_ARB
#  define WGL_FRONT_RIGHT_ARB 0x2084
#endif
#ifndef WGL_BACK_LEFT_ARB
#  define WGL_BACK_LEFT_ARB 0x2085
#endif
#ifndef WGL_BACK_RIGHT_ARB
#  define WGL_BACK_RIGHT_ARB 0x2086
#endif
#ifndef WGL_AUX0_ARB
#  define WGL_AUX0_ARB 0x2087
#endif
#ifndef WGL_AUX1_ARB
#  define WGL_AUX1_ARB 0x2088
#endif
#ifndef WGL_AUX2_ARB
#  define WGL_AUX2_ARB 0x2089
#endif
#ifndef WGL_AUX3_ARB
#  define WGL_AUX3_ARB 0x208A
#endif
#ifndef WGL_AUX4_ARB
#  define WGL_AUX4_ARB 0x208B
#endif
#ifndef WGL_AUX5_ARB
#  define WGL_AUX5_ARB 0x208C
#endif
#ifndef WGL_AUX6_ARB
#  define WGL_AUX6_ARB 0x208D
#endif
#ifndef WGL_AUX7_ARB
#  define WGL_AUX7_ARB 0x208E
#endif
#ifndef WGL_AUX8_ARB
#  define WGL_AUX8_ARB 0x208F
#endif
#ifndef WGL_AUX9_ARB
#  define WGL_AUX9_ARB 0x2090
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglBindTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
typedef BOOL (APIENTRYP PFNWGLUXSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttribList);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglBindTexImageARB
extern PFNWGLUXBINDTEXIMAGEARBPROC wglBindTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
extern PFNWGLUXRELEASETEXIMAGEARBPROC wglReleaseTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
extern PFNWGLUXSETPBUFFERATTRIBARBPROC wglSetPbufferAttribARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:19 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_ARB_render_texture__
#define __GLUX_WGL_ARB_render_texture__

GLUX_NEW_PLUGIN(WGL_ARB_render_texture);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_BIND_TO_TEXTURE_RGB_ARB
#  define WGL_BIND_TO_TEXTURE_RGB_ARB 0x2070
#endif
#ifndef WGL_BIND_TO_TEXTURE_RGBA_ARB
#  define WGL_BIND_TO_TEXTURE_RGBA_ARB 0x2071
#endif
#ifndef WGL_TEXTURE_FORMAT_ARB
#  define WGL_TEXTURE_FORMAT_ARB 0x2072
#endif
#ifndef WGL_TEXTURE_TARGET_ARB
#  define WGL_TEXTURE_TARGET_ARB 0x2073
#endif
#ifndef WGL_MIPMAP_TEXTURE_ARB
#  define WGL_MIPMAP_TEXTURE_ARB 0x2074
#endif
#ifndef WGL_TEXTURE_RGB_ARB
#  define WGL_TEXTURE_RGB_ARB 0x2075
#endif
#ifndef WGL_TEXTURE_RGBA_ARB
#  define WGL_TEXTURE_RGBA_ARB 0x2076
#endif
#ifndef WGL_NO_TEXTURE_ARB
#  define WGL_NO_TEXTURE_ARB 0x2077
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_ARB
#  define WGL_TEXTURE_CUBE_MAP_ARB 0x2078
#endif
#ifndef WGL_TEXTURE_1D_ARB
#  define WGL_TEXTURE_1D_ARB 0x2079
#endif
#ifndef WGL_TEXTURE_2D_ARB
#  define WGL_TEXTURE_2D_ARB 0x207A
#endif
#ifndef WGL_MIPMAP_LEVEL_ARB
#  define WGL_MIPMAP_LEVEL_ARB 0x207B
#endif
#ifndef WGL_CUBE_MAP_FACE_ARB
#  define WGL_CUBE_MAP_FACE_ARB 0x207C
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x207D
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x207E
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x207F
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x2080
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x2081
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x2082
#endif
#ifndef WGL_FRONT_LEFT_ARB
#  define WGL_FRONT_LEFT_ARB 0x2083
#endif
#ifndef WGL_FRONT_RIGHT_ARB
#  define WGL_FRONT_RIGHT_ARB 0x2084
#endif
#ifndef WGL_BACK_LEFT_ARB
#  define WGL_BACK_LEFT_ARB 0x2085
#endif
#ifndef WGL_BACK_RIGHT_ARB
#  define WGL_BACK_RIGHT_ARB 0x2086
#endif
#ifndef WGL_AUX0_ARB
#  define WGL_AUX0_ARB 0x2087
#endif
#ifndef WGL_AUX1_ARB
#  define WGL_AUX1_ARB 0x2088
#endif
#ifndef WGL_AUX2_ARB
#  define WGL_AUX2_ARB 0x2089
#endif
#ifndef WGL_AUX3_ARB
#  define WGL_AUX3_ARB 0x208A
#endif
#ifndef WGL_AUX4_ARB
#  define WGL_AUX4_ARB 0x208B
#endif
#ifndef WGL_AUX5_ARB
#  define WGL_AUX5_ARB 0x208C
#endif
#ifndef WGL_AUX6_ARB
#  define WGL_AUX6_ARB 0x208D
#endif
#ifndef WGL_AUX7_ARB
#  define WGL_AUX7_ARB 0x208E
#endif
#ifndef WGL_AUX8_ARB
#  define WGL_AUX8_ARB 0x208F
#endif
#ifndef WGL_AUX9_ARB
#  define WGL_AUX9_ARB 0x2090
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglBindTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
typedef BOOL (APIENTRYP PFNWGLUXSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttribList);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglBindTexImageARB
extern PFNWGLUXBINDTEXIMAGEARBPROC wglBindTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
extern PFNWGLUXRELEASETEXIMAGEARBPROC wglReleaseTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
extern PFNWGLUXSETPBUFFERATTRIBARBPROC wglSetPbufferAttribARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:00 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_ARB_render_texture__
#define __GLUX_WGL_ARB_render_texture__

GLUX_NEW_PLUGIN(WGL_ARB_render_texture);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_BIND_TO_TEXTURE_RGB_ARB
#  define WGL_BIND_TO_TEXTURE_RGB_ARB 0x2070
#endif
#ifndef WGL_BIND_TO_TEXTURE_RGBA_ARB
#  define WGL_BIND_TO_TEXTURE_RGBA_ARB 0x2071
#endif
#ifndef WGL_TEXTURE_FORMAT_ARB
#  define WGL_TEXTURE_FORMAT_ARB 0x2072
#endif
#ifndef WGL_TEXTURE_TARGET_ARB
#  define WGL_TEXTURE_TARGET_ARB 0x2073
#endif
#ifndef WGL_MIPMAP_TEXTURE_ARB
#  define WGL_MIPMAP_TEXTURE_ARB 0x2074
#endif
#ifndef WGL_TEXTURE_RGB_ARB
#  define WGL_TEXTURE_RGB_ARB 0x2075
#endif
#ifndef WGL_TEXTURE_RGBA_ARB
#  define WGL_TEXTURE_RGBA_ARB 0x2076
#endif
#ifndef WGL_NO_TEXTURE_ARB
#  define WGL_NO_TEXTURE_ARB 0x2077
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_ARB
#  define WGL_TEXTURE_CUBE_MAP_ARB 0x2078
#endif
#ifndef WGL_TEXTURE_1D_ARB
#  define WGL_TEXTURE_1D_ARB 0x2079
#endif
#ifndef WGL_TEXTURE_2D_ARB
#  define WGL_TEXTURE_2D_ARB 0x207A
#endif
#ifndef WGL_MIPMAP_LEVEL_ARB
#  define WGL_MIPMAP_LEVEL_ARB 0x207B
#endif
#ifndef WGL_CUBE_MAP_FACE_ARB
#  define WGL_CUBE_MAP_FACE_ARB 0x207C
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x207D
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x207E
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x207F
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x2080
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x2081
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x2082
#endif
#ifndef WGL_FRONT_LEFT_ARB
#  define WGL_FRONT_LEFT_ARB 0x2083
#endif
#ifndef WGL_FRONT_RIGHT_ARB
#  define WGL_FRONT_RIGHT_ARB 0x2084
#endif
#ifndef WGL_BACK_LEFT_ARB
#  define WGL_BACK_LEFT_ARB 0x2085
#endif
#ifndef WGL_BACK_RIGHT_ARB
#  define WGL_BACK_RIGHT_ARB 0x2086
#endif
#ifndef WGL_AUX0_ARB
#  define WGL_AUX0_ARB 0x2087
#endif
#ifndef WGL_AUX1_ARB
#  define WGL_AUX1_ARB 0x2088
#endif
#ifndef WGL_AUX2_ARB
#  define WGL_AUX2_ARB 0x2089
#endif
#ifndef WGL_AUX3_ARB
#  define WGL_AUX3_ARB 0x208A
#endif
#ifndef WGL_AUX4_ARB
#  define WGL_AUX4_ARB 0x208B
#endif
#ifndef WGL_AUX5_ARB
#  define WGL_AUX5_ARB 0x208C
#endif
#ifndef WGL_AUX6_ARB
#  define WGL_AUX6_ARB 0x208D
#endif
#ifndef WGL_AUX7_ARB
#  define WGL_AUX7_ARB 0x208E
#endif
#ifndef WGL_AUX8_ARB
#  define WGL_AUX8_ARB 0x208F
#endif
#ifndef WGL_AUX9_ARB
#  define WGL_AUX9_ARB 0x2090
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglBindTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
typedef BOOL (APIENTRYP PFNWGLUXSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttribList);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglBindTexImageARB
extern PFNWGLUXBINDTEXIMAGEARBPROC wglBindTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
extern PFNWGLUXRELEASETEXIMAGEARBPROC wglReleaseTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
extern PFNWGLUXSETPBUFFERATTRIBARBPROC wglSetPbufferAttribARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:08 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_ARB_render_texture__
#define __GLUX_WGL_ARB_render_texture__

GLUX_NEW_PLUGIN(WGL_ARB_render_texture);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_BIND_TO_TEXTURE_RGB_ARB
#  define WGL_BIND_TO_TEXTURE_RGB_ARB 0x2070
#endif
#ifndef WGL_BIND_TO_TEXTURE_RGBA_ARB
#  define WGL_BIND_TO_TEXTURE_RGBA_ARB 0x2071
#endif
#ifndef WGL_TEXTURE_FORMAT_ARB
#  define WGL_TEXTURE_FORMAT_ARB 0x2072
#endif
#ifndef WGL_TEXTURE_TARGET_ARB
#  define WGL_TEXTURE_TARGET_ARB 0x2073
#endif
#ifndef WGL_MIPMAP_TEXTURE_ARB
#  define WGL_MIPMAP_TEXTURE_ARB 0x2074
#endif
#ifndef WGL_TEXTURE_RGB_ARB
#  define WGL_TEXTURE_RGB_ARB 0x2075
#endif
#ifndef WGL_TEXTURE_RGBA_ARB
#  define WGL_TEXTURE_RGBA_ARB 0x2076
#endif
#ifndef WGL_NO_TEXTURE_ARB
#  define WGL_NO_TEXTURE_ARB 0x2077
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_ARB
#  define WGL_TEXTURE_CUBE_MAP_ARB 0x2078
#endif
#ifndef WGL_TEXTURE_1D_ARB
#  define WGL_TEXTURE_1D_ARB 0x2079
#endif
#ifndef WGL_TEXTURE_2D_ARB
#  define WGL_TEXTURE_2D_ARB 0x207A
#endif
#ifndef WGL_MIPMAP_LEVEL_ARB
#  define WGL_MIPMAP_LEVEL_ARB 0x207B
#endif
#ifndef WGL_CUBE_MAP_FACE_ARB
#  define WGL_CUBE_MAP_FACE_ARB 0x207C
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x207D
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x207E
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x207F
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x2080
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x2081
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x2082
#endif
#ifndef WGL_FRONT_LEFT_ARB
#  define WGL_FRONT_LEFT_ARB 0x2083
#endif
#ifndef WGL_FRONT_RIGHT_ARB
#  define WGL_FRONT_RIGHT_ARB 0x2084
#endif
#ifndef WGL_BACK_LEFT_ARB
#  define WGL_BACK_LEFT_ARB 0x2085
#endif
#ifndef WGL_BACK_RIGHT_ARB
#  define WGL_BACK_RIGHT_ARB 0x2086
#endif
#ifndef WGL_AUX0_ARB
#  define WGL_AUX0_ARB 0x2087
#endif
#ifndef WGL_AUX1_ARB
#  define WGL_AUX1_ARB 0x2088
#endif
#ifndef WGL_AUX2_ARB
#  define WGL_AUX2_ARB 0x2089
#endif
#ifndef WGL_AUX3_ARB
#  define WGL_AUX3_ARB 0x208A
#endif
#ifndef WGL_AUX4_ARB
#  define WGL_AUX4_ARB 0x208B
#endif
#ifndef WGL_AUX5_ARB
#  define WGL_AUX5_ARB 0x208C
#endif
#ifndef WGL_AUX6_ARB
#  define WGL_AUX6_ARB 0x208D
#endif
#ifndef WGL_AUX7_ARB
#  define WGL_AUX7_ARB 0x208E
#endif
#ifndef WGL_AUX8_ARB
#  define WGL_AUX8_ARB 0x208F
#endif
#ifndef WGL_AUX9_ARB
#  define WGL_AUX9_ARB 0x2090
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglBindTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
typedef BOOL (APIENTRYP PFNWGLUXSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttribList);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglBindTexImageARB
extern PFNWGLUXBINDTEXIMAGEARBPROC wglBindTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
extern PFNWGLUXRELEASETEXIMAGEARBPROC wglReleaseTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
extern PFNWGLUXSETPBUFFERATTRIBARBPROC wglSetPbufferAttribARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:20 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_ARB_render_texture__
#define __GLUX_WGL_ARB_render_texture__

GLUX_NEW_PLUGIN(WGL_ARB_render_texture);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_BIND_TO_TEXTURE_RGB_ARB
#  define WGL_BIND_TO_TEXTURE_RGB_ARB 0x2070
#endif
#ifndef WGL_BIND_TO_TEXTURE_RGBA_ARB
#  define WGL_BIND_TO_TEXTURE_RGBA_ARB 0x2071
#endif
#ifndef WGL_TEXTURE_FORMAT_ARB
#  define WGL_TEXTURE_FORMAT_ARB 0x2072
#endif
#ifndef WGL_TEXTURE_TARGET_ARB
#  define WGL_TEXTURE_TARGET_ARB 0x2073
#endif
#ifndef WGL_MIPMAP_TEXTURE_ARB
#  define WGL_MIPMAP_TEXTURE_ARB 0x2074
#endif
#ifndef WGL_TEXTURE_RGB_ARB
#  define WGL_TEXTURE_RGB_ARB 0x2075
#endif
#ifndef WGL_TEXTURE_RGBA_ARB
#  define WGL_TEXTURE_RGBA_ARB 0x2076
#endif
#ifndef WGL_NO_TEXTURE_ARB
#  define WGL_NO_TEXTURE_ARB 0x2077
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_ARB
#  define WGL_TEXTURE_CUBE_MAP_ARB 0x2078
#endif
#ifndef WGL_TEXTURE_1D_ARB
#  define WGL_TEXTURE_1D_ARB 0x2079
#endif
#ifndef WGL_TEXTURE_2D_ARB
#  define WGL_TEXTURE_2D_ARB 0x207A
#endif
#ifndef WGL_MIPMAP_LEVEL_ARB
#  define WGL_MIPMAP_LEVEL_ARB 0x207B
#endif
#ifndef WGL_CUBE_MAP_FACE_ARB
#  define WGL_CUBE_MAP_FACE_ARB 0x207C
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x207D
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x207E
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x207F
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x2080
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x2081
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x2082
#endif
#ifndef WGL_FRONT_LEFT_ARB
#  define WGL_FRONT_LEFT_ARB 0x2083
#endif
#ifndef WGL_FRONT_RIGHT_ARB
#  define WGL_FRONT_RIGHT_ARB 0x2084
#endif
#ifndef WGL_BACK_LEFT_ARB
#  define WGL_BACK_LEFT_ARB 0x2085
#endif
#ifndef WGL_BACK_RIGHT_ARB
#  define WGL_BACK_RIGHT_ARB 0x2086
#endif
#ifndef WGL_AUX0_ARB
#  define WGL_AUX0_ARB 0x2087
#endif
#ifndef WGL_AUX1_ARB
#  define WGL_AUX1_ARB 0x2088
#endif
#ifndef WGL_AUX2_ARB
#  define WGL_AUX2_ARB 0x2089
#endif
#ifndef WGL_AUX3_ARB
#  define WGL_AUX3_ARB 0x208A
#endif
#ifndef WGL_AUX4_ARB
#  define WGL_AUX4_ARB 0x208B
#endif
#ifndef WGL_AUX5_ARB
#  define WGL_AUX5_ARB 0x208C
#endif
#ifndef WGL_AUX6_ARB
#  define WGL_AUX6_ARB 0x208D
#endif
#ifndef WGL_AUX7_ARB
#  define WGL_AUX7_ARB 0x208E
#endif
#ifndef WGL_AUX8_ARB
#  define WGL_AUX8_ARB 0x208F
#endif
#ifndef WGL_AUX9_ARB
#  define WGL_AUX9_ARB 0x2090
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglBindTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
typedef BOOL (APIENTRYP PFNWGLUXSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttribList);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglBindTexImageARB
extern PFNWGLUXBINDTEXIMAGEARBPROC wglBindTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
extern PFNWGLUXRELEASETEXIMAGEARBPROC wglReleaseTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
extern PFNWGLUXSETPBUFFERATTRIBARBPROC wglSetPbufferAttribARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:51:59 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_ARB_render_texture__
#define __GLUX_WGL_ARB_render_texture__

GLUX_NEW_PLUGIN(WGL_ARB_render_texture);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_BIND_TO_TEXTURE_RGB_ARB
#  define WGL_BIND_TO_TEXTURE_RGB_ARB 0x2070
#endif
#ifndef WGL_BIND_TO_TEXTURE_RGBA_ARB
#  define WGL_BIND_TO_TEXTURE_RGBA_ARB 0x2071
#endif
#ifndef WGL_TEXTURE_FORMAT_ARB
#  define WGL_TEXTURE_FORMAT_ARB 0x2072
#endif
#ifndef WGL_TEXTURE_TARGET_ARB
#  define WGL_TEXTURE_TARGET_ARB 0x2073
#endif
#ifndef WGL_MIPMAP_TEXTURE_ARB
#  define WGL_MIPMAP_TEXTURE_ARB 0x2074
#endif
#ifndef WGL_TEXTURE_RGB_ARB
#  define WGL_TEXTURE_RGB_ARB 0x2075
#endif
#ifndef WGL_TEXTURE_RGBA_ARB
#  define WGL_TEXTURE_RGBA_ARB 0x2076
#endif
#ifndef WGL_NO_TEXTURE_ARB
#  define WGL_NO_TEXTURE_ARB 0x2077
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_ARB
#  define WGL_TEXTURE_CUBE_MAP_ARB 0x2078
#endif
#ifndef WGL_TEXTURE_1D_ARB
#  define WGL_TEXTURE_1D_ARB 0x2079
#endif
#ifndef WGL_TEXTURE_2D_ARB
#  define WGL_TEXTURE_2D_ARB 0x207A
#endif
#ifndef WGL_MIPMAP_LEVEL_ARB
#  define WGL_MIPMAP_LEVEL_ARB 0x207B
#endif
#ifndef WGL_CUBE_MAP_FACE_ARB
#  define WGL_CUBE_MAP_FACE_ARB 0x207C
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x207D
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x207E
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x207F
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x2080
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x2081
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x2082
#endif
#ifndef WGL_FRONT_LEFT_ARB
#  define WGL_FRONT_LEFT_ARB 0x2083
#endif
#ifndef WGL_FRONT_RIGHT_ARB
#  define WGL_FRONT_RIGHT_ARB 0x2084
#endif
#ifndef WGL_BACK_LEFT_ARB
#  define WGL_BACK_LEFT_ARB 0x2085
#endif
#ifndef WGL_BACK_RIGHT_ARB
#  define WGL_BACK_RIGHT_ARB 0x2086
#endif
#ifndef WGL_AUX0_ARB
#  define WGL_AUX0_ARB 0x2087
#endif
#ifndef WGL_AUX1_ARB
#  define WGL_AUX1_ARB 0x2088
#endif
#ifndef WGL_AUX2_ARB
#  define WGL_AUX2_ARB 0x2089
#endif
#ifndef WGL_AUX3_ARB
#  define WGL_AUX3_ARB 0x208A
#endif
#ifndef WGL_AUX4_ARB
#  define WGL_AUX4_ARB 0x208B
#endif
#ifndef WGL_AUX5_ARB
#  define WGL_AUX5_ARB 0x208C
#endif
#ifndef WGL_AUX6_ARB
#  define WGL_AUX6_ARB 0x208D
#endif
#ifndef WGL_AUX7_ARB
#  define WGL_AUX7_ARB 0x208E
#endif
#ifndef WGL_AUX8_ARB
#  define WGL_AUX8_ARB 0x208F
#endif
#ifndef WGL_AUX9_ARB
#  define WGL_AUX9_ARB 0x2090
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglBindTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
typedef BOOL (APIENTRYP PFNWGLUXSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttribList);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglBindTexImageARB
extern PFNWGLUXBINDTEXIMAGEARBPROC wglBindTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
extern PFNWGLUXRELEASETEXIMAGEARBPROC wglReleaseTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
extern PFNWGLUXSETPBUFFERATTRIBARBPROC wglSetPbufferAttribARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_ARB_render_texture__
#define __GLUX_WGL_ARB_render_texture__

GLUX_NEW_PLUGIN(WGL_ARB_render_texture);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_BIND_TO_TEXTURE_RGB_ARB
#  define WGL_BIND_TO_TEXTURE_RGB_ARB 0x2070
#endif
#ifndef WGL_BIND_TO_TEXTURE_RGBA_ARB
#  define WGL_BIND_TO_TEXTURE_RGBA_ARB 0x2071
#endif
#ifndef WGL_TEXTURE_FORMAT_ARB
#  define WGL_TEXTURE_FORMAT_ARB 0x2072
#endif
#ifndef WGL_TEXTURE_TARGET_ARB
#  define WGL_TEXTURE_TARGET_ARB 0x2073
#endif
#ifndef WGL_MIPMAP_TEXTURE_ARB
#  define WGL_MIPMAP_TEXTURE_ARB 0x2074
#endif
#ifndef WGL_TEXTURE_RGB_ARB
#  define WGL_TEXTURE_RGB_ARB 0x2075
#endif
#ifndef WGL_TEXTURE_RGBA_ARB
#  define WGL_TEXTURE_RGBA_ARB 0x2076
#endif
#ifndef WGL_NO_TEXTURE_ARB
#  define WGL_NO_TEXTURE_ARB 0x2077
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_ARB
#  define WGL_TEXTURE_CUBE_MAP_ARB 0x2078
#endif
#ifndef WGL_TEXTURE_1D_ARB
#  define WGL_TEXTURE_1D_ARB 0x2079
#endif
#ifndef WGL_TEXTURE_2D_ARB
#  define WGL_TEXTURE_2D_ARB 0x207A
#endif
#ifndef WGL_MIPMAP_LEVEL_ARB
#  define WGL_MIPMAP_LEVEL_ARB 0x207B
#endif
#ifndef WGL_CUBE_MAP_FACE_ARB
#  define WGL_CUBE_MAP_FACE_ARB 0x207C
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x207D
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x207E
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x207F
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x2080
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x2081
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x2082
#endif
#ifndef WGL_FRONT_LEFT_ARB
#  define WGL_FRONT_LEFT_ARB 0x2083
#endif
#ifndef WGL_FRONT_RIGHT_ARB
#  define WGL_FRONT_RIGHT_ARB 0x2084
#endif
#ifndef WGL_BACK_LEFT_ARB
#  define WGL_BACK_LEFT_ARB 0x2085
#endif
#ifndef WGL_BACK_RIGHT_ARB
#  define WGL_BACK_RIGHT_ARB 0x2086
#endif
#ifndef WGL_AUX0_ARB
#  define WGL_AUX0_ARB 0x2087
#endif
#ifndef WGL_AUX1_ARB
#  define WGL_AUX1_ARB 0x2088
#endif
#ifndef WGL_AUX2_ARB
#  define WGL_AUX2_ARB 0x2089
#endif
#ifndef WGL_AUX3_ARB
#  define WGL_AUX3_ARB 0x208A
#endif
#ifndef WGL_AUX4_ARB
#  define WGL_AUX4_ARB 0x208B
#endif
#ifndef WGL_AUX5_ARB
#  define WGL_AUX5_ARB 0x208C
#endif
#ifndef WGL_AUX6_ARB
#  define WGL_AUX6_ARB 0x208D
#endif
#ifndef WGL_AUX7_ARB
#  define WGL_AUX7_ARB 0x208E
#endif
#ifndef WGL_AUX8_ARB
#  define WGL_AUX8_ARB 0x208F
#endif
#ifndef WGL_AUX9_ARB
#  define WGL_AUX9_ARB 0x2090
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglBindTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
typedef BOOL (APIENTRYP PFNWGLUXSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttribList);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglBindTexImageARB
extern PFNWGLUXBINDTEXIMAGEARBPROC wglBindTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
extern PFNWGLUXRELEASETEXIMAGEARBPROC wglReleaseTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
extern PFNWGLUXSETPBUFFERATTRIBARBPROC wglSetPbufferAttribARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:03 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_ARB_render_texture__
#define __GLUX_WGL_ARB_render_texture__

GLUX_NEW_PLUGIN(WGL_ARB_render_texture);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_BIND_TO_TEXTURE_RGB_ARB
#  define WGL_BIND_TO_TEXTURE_RGB_ARB 0x2070
#endif
#ifndef WGL_BIND_TO_TEXTURE_RGBA_ARB
#  define WGL_BIND_TO_TEXTURE_RGBA_ARB 0x2071
#endif
#ifndef WGL_TEXTURE_FORMAT_ARB
#  define WGL_TEXTURE_FORMAT_ARB 0x2072
#endif
#ifndef WGL_TEXTURE_TARGET_ARB
#  define WGL_TEXTURE_TARGET_ARB 0x2073
#endif
#ifndef WGL_MIPMAP_TEXTURE_ARB
#  define WGL_MIPMAP_TEXTURE_ARB 0x2074
#endif
#ifndef WGL_TEXTURE_RGB_ARB
#  define WGL_TEXTURE_RGB_ARB 0x2075
#endif
#ifndef WGL_TEXTURE_RGBA_ARB
#  define WGL_TEXTURE_RGBA_ARB 0x2076
#endif
#ifndef WGL_NO_TEXTURE_ARB
#  define WGL_NO_TEXTURE_ARB 0x2077
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_ARB
#  define WGL_TEXTURE_CUBE_MAP_ARB 0x2078
#endif
#ifndef WGL_TEXTURE_1D_ARB
#  define WGL_TEXTURE_1D_ARB 0x2079
#endif
#ifndef WGL_TEXTURE_2D_ARB
#  define WGL_TEXTURE_2D_ARB 0x207A
#endif
#ifndef WGL_MIPMAP_LEVEL_ARB
#  define WGL_MIPMAP_LEVEL_ARB 0x207B
#endif
#ifndef WGL_CUBE_MAP_FACE_ARB
#  define WGL_CUBE_MAP_FACE_ARB 0x207C
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x207D
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x207E
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x207F
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x2080
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x2081
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x2082
#endif
#ifndef WGL_FRONT_LEFT_ARB
#  define WGL_FRONT_LEFT_ARB 0x2083
#endif
#ifndef WGL_FRONT_RIGHT_ARB
#  define WGL_FRONT_RIGHT_ARB 0x2084
#endif
#ifndef WGL_BACK_LEFT_ARB
#  define WGL_BACK_LEFT_ARB 0x2085
#endif
#ifndef WGL_BACK_RIGHT_ARB
#  define WGL_BACK_RIGHT_ARB 0x2086
#endif
#ifndef WGL_AUX0_ARB
#  define WGL_AUX0_ARB 0x2087
#endif
#ifndef WGL_AUX1_ARB
#  define WGL_AUX1_ARB 0x2088
#endif
#ifndef WGL_AUX2_ARB
#  define WGL_AUX2_ARB 0x2089
#endif
#ifndef WGL_AUX3_ARB
#  define WGL_AUX3_ARB 0x208A
#endif
#ifndef WGL_AUX4_ARB
#  define WGL_AUX4_ARB 0x208B
#endif
#ifndef WGL_AUX5_ARB
#  define WGL_AUX5_ARB 0x208C
#endif
#ifndef WGL_AUX6_ARB
#  define WGL_AUX6_ARB 0x208D
#endif
#ifndef WGL_AUX7_ARB
#  define WGL_AUX7_ARB 0x208E
#endif
#ifndef WGL_AUX8_ARB
#  define WGL_AUX8_ARB 0x208F
#endif
#ifndef WGL_AUX9_ARB
#  define WGL_AUX9_ARB 0x2090
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglBindTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
typedef BOOL (APIENTRYP PFNWGLUXSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttribList);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglBindTexImageARB
extern PFNWGLUXBINDTEXIMAGEARBPROC wglBindTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
extern PFNWGLUXRELEASETEXIMAGEARBPROC wglReleaseTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
extern PFNWGLUXSETPBUFFERATTRIBARBPROC wglSetPbufferAttribARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:23 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_ARB_render_texture__
#define __GLUX_WGL_ARB_render_texture__

GLUX_NEW_PLUGIN(WGL_ARB_render_texture);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_BIND_TO_TEXTURE_RGB_ARB
#  define WGL_BIND_TO_TEXTURE_RGB_ARB 0x2070
#endif
#ifndef WGL_BIND_TO_TEXTURE_RGBA_ARB
#  define WGL_BIND_TO_TEXTURE_RGBA_ARB 0x2071
#endif
#ifndef WGL_TEXTURE_FORMAT_ARB
#  define WGL_TEXTURE_FORMAT_ARB 0x2072
#endif
#ifndef WGL_TEXTURE_TARGET_ARB
#  define WGL_TEXTURE_TARGET_ARB 0x2073
#endif
#ifndef WGL_MIPMAP_TEXTURE_ARB
#  define WGL_MIPMAP_TEXTURE_ARB 0x2074
#endif
#ifndef WGL_TEXTURE_RGB_ARB
#  define WGL_TEXTURE_RGB_ARB 0x2075
#endif
#ifndef WGL_TEXTURE_RGBA_ARB
#  define WGL_TEXTURE_RGBA_ARB 0x2076
#endif
#ifndef WGL_NO_TEXTURE_ARB
#  define WGL_NO_TEXTURE_ARB 0x2077
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_ARB
#  define WGL_TEXTURE_CUBE_MAP_ARB 0x2078
#endif
#ifndef WGL_TEXTURE_1D_ARB
#  define WGL_TEXTURE_1D_ARB 0x2079
#endif
#ifndef WGL_TEXTURE_2D_ARB
#  define WGL_TEXTURE_2D_ARB 0x207A
#endif
#ifndef WGL_MIPMAP_LEVEL_ARB
#  define WGL_MIPMAP_LEVEL_ARB 0x207B
#endif
#ifndef WGL_CUBE_MAP_FACE_ARB
#  define WGL_CUBE_MAP_FACE_ARB 0x207C
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x207D
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x207E
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x207F
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x2080
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x2081
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x2082
#endif
#ifndef WGL_FRONT_LEFT_ARB
#  define WGL_FRONT_LEFT_ARB 0x2083
#endif
#ifndef WGL_FRONT_RIGHT_ARB
#  define WGL_FRONT_RIGHT_ARB 0x2084
#endif
#ifndef WGL_BACK_LEFT_ARB
#  define WGL_BACK_LEFT_ARB 0x2085
#endif
#ifndef WGL_BACK_RIGHT_ARB
#  define WGL_BACK_RIGHT_ARB 0x2086
#endif
#ifndef WGL_AUX0_ARB
#  define WGL_AUX0_ARB 0x2087
#endif
#ifndef WGL_AUX1_ARB
#  define WGL_AUX1_ARB 0x2088
#endif
#ifndef WGL_AUX2_ARB
#  define WGL_AUX2_ARB 0x2089
#endif
#ifndef WGL_AUX3_ARB
#  define WGL_AUX3_ARB 0x208A
#endif
#ifndef WGL_AUX4_ARB
#  define WGL_AUX4_ARB 0x208B
#endif
#ifndef WGL_AUX5_ARB
#  define WGL_AUX5_ARB 0x208C
#endif
#ifndef WGL_AUX6_ARB
#  define WGL_AUX6_ARB 0x208D
#endif
#ifndef WGL_AUX7_ARB
#  define WGL_AUX7_ARB 0x208E
#endif
#ifndef WGL_AUX8_ARB
#  define WGL_AUX8_ARB 0x208F
#endif
#ifndef WGL_AUX9_ARB
#  define WGL_AUX9_ARB 0x2090
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglBindTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
typedef BOOL (APIENTRYP PFNWGLUXSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttribList);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglBindTexImageARB
extern PFNWGLUXBINDTEXIMAGEARBPROC wglBindTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
extern PFNWGLUXRELEASETEXIMAGEARBPROC wglReleaseTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
extern PFNWGLUXSETPBUFFERATTRIBARBPROC wglSetPbufferAttribARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_ARB_render_texture__
#define __GLUX_WGL_ARB_render_texture__

GLUX_NEW_PLUGIN(WGL_ARB_render_texture);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_BIND_TO_TEXTURE_RGB_ARB
#  define WGL_BIND_TO_TEXTURE_RGB_ARB 0x2070
#endif
#ifndef WGL_BIND_TO_TEXTURE_RGBA_ARB
#  define WGL_BIND_TO_TEXTURE_RGBA_ARB 0x2071
#endif
#ifndef WGL_TEXTURE_FORMAT_ARB
#  define WGL_TEXTURE_FORMAT_ARB 0x2072
#endif
#ifndef WGL_TEXTURE_TARGET_ARB
#  define WGL_TEXTURE_TARGET_ARB 0x2073
#endif
#ifndef WGL_MIPMAP_TEXTURE_ARB
#  define WGL_MIPMAP_TEXTURE_ARB 0x2074
#endif
#ifndef WGL_TEXTURE_RGB_ARB
#  define WGL_TEXTURE_RGB_ARB 0x2075
#endif
#ifndef WGL_TEXTURE_RGBA_ARB
#  define WGL_TEXTURE_RGBA_ARB 0x2076
#endif
#ifndef WGL_NO_TEXTURE_ARB
#  define WGL_NO_TEXTURE_ARB 0x2077
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_ARB
#  define WGL_TEXTURE_CUBE_MAP_ARB 0x2078
#endif
#ifndef WGL_TEXTURE_1D_ARB
#  define WGL_TEXTURE_1D_ARB 0x2079
#endif
#ifndef WGL_TEXTURE_2D_ARB
#  define WGL_TEXTURE_2D_ARB 0x207A
#endif
#ifndef WGL_MIPMAP_LEVEL_ARB
#  define WGL_MIPMAP_LEVEL_ARB 0x207B
#endif
#ifndef WGL_CUBE_MAP_FACE_ARB
#  define WGL_CUBE_MAP_FACE_ARB 0x207C
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x207D
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x207E
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x207F
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x2080
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x2081
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x2082
#endif
#ifndef WGL_FRONT_LEFT_ARB
#  define WGL_FRONT_LEFT_ARB 0x2083
#endif
#ifndef WGL_FRONT_RIGHT_ARB
#  define WGL_FRONT_RIGHT_ARB 0x2084
#endif
#ifndef WGL_BACK_LEFT_ARB
#  define WGL_BACK_LEFT_ARB 0x2085
#endif
#ifndef WGL_BACK_RIGHT_ARB
#  define WGL_BACK_RIGHT_ARB 0x2086
#endif
#ifndef WGL_AUX0_ARB
#  define WGL_AUX0_ARB 0x2087
#endif
#ifndef WGL_AUX1_ARB
#  define WGL_AUX1_ARB 0x2088
#endif
#ifndef WGL_AUX2_ARB
#  define WGL_AUX2_ARB 0x2089
#endif
#ifndef WGL_AUX3_ARB
#  define WGL_AUX3_ARB 0x208A
#endif
#ifndef WGL_AUX4_ARB
#  define WGL_AUX4_ARB 0x208B
#endif
#ifndef WGL_AUX5_ARB
#  define WGL_AUX5_ARB 0x208C
#endif
#ifndef WGL_AUX6_ARB
#  define WGL_AUX6_ARB 0x208D
#endif
#ifndef WGL_AUX7_ARB
#  define WGL_AUX7_ARB 0x208E
#endif
#ifndef WGL_AUX8_ARB
#  define WGL_AUX8_ARB 0x208F
#endif
#ifndef WGL_AUX9_ARB
#  define WGL_AUX9_ARB 0x2090
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglBindTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
typedef BOOL (APIENTRYP PFNWGLUXSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttribList);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglBindTexImageARB
extern PFNWGLUXBINDTEXIMAGEARBPROC wglBindTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
extern PFNWGLUXRELEASETEXIMAGEARBPROC wglReleaseTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
extern PFNWGLUXSETPBUFFERATTRIBARBPROC wglSetPbufferAttribARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:41:57 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_ARB_render_texture__
#define __GLUX_WGL_ARB_render_texture__

GLUX_NEW_PLUGIN(WGL_ARB_render_texture);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_BIND_TO_TEXTURE_RGB_ARB
#  define WGL_BIND_TO_TEXTURE_RGB_ARB 0x2070
#endif
#ifndef WGL_BIND_TO_TEXTURE_RGBA_ARB
#  define WGL_BIND_TO_TEXTURE_RGBA_ARB 0x2071
#endif
#ifndef WGL_TEXTURE_FORMAT_ARB
#  define WGL_TEXTURE_FORMAT_ARB 0x2072
#endif
#ifndef WGL_TEXTURE_TARGET_ARB
#  define WGL_TEXTURE_TARGET_ARB 0x2073
#endif
#ifndef WGL_MIPMAP_TEXTURE_ARB
#  define WGL_MIPMAP_TEXTURE_ARB 0x2074
#endif
#ifndef WGL_TEXTURE_RGB_ARB
#  define WGL_TEXTURE_RGB_ARB 0x2075
#endif
#ifndef WGL_TEXTURE_RGBA_ARB
#  define WGL_TEXTURE_RGBA_ARB 0x2076
#endif
#ifndef WGL_NO_TEXTURE_ARB
#  define WGL_NO_TEXTURE_ARB 0x2077
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_ARB
#  define WGL_TEXTURE_CUBE_MAP_ARB 0x2078
#endif
#ifndef WGL_TEXTURE_1D_ARB
#  define WGL_TEXTURE_1D_ARB 0x2079
#endif
#ifndef WGL_TEXTURE_2D_ARB
#  define WGL_TEXTURE_2D_ARB 0x207A
#endif
#ifndef WGL_MIPMAP_LEVEL_ARB
#  define WGL_MIPMAP_LEVEL_ARB 0x207B
#endif
#ifndef WGL_CUBE_MAP_FACE_ARB
#  define WGL_CUBE_MAP_FACE_ARB 0x207C
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x207D
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x207E
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x207F
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x2080
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x2081
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x2082
#endif
#ifndef WGL_FRONT_LEFT_ARB
#  define WGL_FRONT_LEFT_ARB 0x2083
#endif
#ifndef WGL_FRONT_RIGHT_ARB
#  define WGL_FRONT_RIGHT_ARB 0x2084
#endif
#ifndef WGL_BACK_LEFT_ARB
#  define WGL_BACK_LEFT_ARB 0x2085
#endif
#ifndef WGL_BACK_RIGHT_ARB
#  define WGL_BACK_RIGHT_ARB 0x2086
#endif
#ifndef WGL_AUX0_ARB
#  define WGL_AUX0_ARB 0x2087
#endif
#ifndef WGL_AUX1_ARB
#  define WGL_AUX1_ARB 0x2088
#endif
#ifndef WGL_AUX2_ARB
#  define WGL_AUX2_ARB 0x2089
#endif
#ifndef WGL_AUX3_ARB
#  define WGL_AUX3_ARB 0x208A
#endif
#ifndef WGL_AUX4_ARB
#  define WGL_AUX4_ARB 0x208B
#endif
#ifndef WGL_AUX5_ARB
#  define WGL_AUX5_ARB 0x208C
#endif
#ifndef WGL_AUX6_ARB
#  define WGL_AUX6_ARB 0x208D
#endif
#ifndef WGL_AUX7_ARB
#  define WGL_AUX7_ARB 0x208E
#endif
#ifndef WGL_AUX8_ARB
#  define WGL_AUX8_ARB 0x208F
#endif
#ifndef WGL_AUX9_ARB
#  define WGL_AUX9_ARB 0x2090
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglBindTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
typedef BOOL (APIENTRYP PFNWGLUXSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttribList);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglBindTexImageARB
extern PFNWGLUXBINDTEXIMAGEARBPROC wglBindTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
extern PFNWGLUXRELEASETEXIMAGEARBPROC wglReleaseTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
extern PFNWGLUXSETPBUFFERATTRIBARBPROC wglSetPbufferAttribARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:38 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_ARB_render_texture__
#define __GLUX_WGL_ARB_render_texture__

GLUX_NEW_PLUGIN(WGL_ARB_render_texture);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_BIND_TO_TEXTURE_RGB_ARB
#  define WGL_BIND_TO_TEXTURE_RGB_ARB 0x2070
#endif
#ifndef WGL_BIND_TO_TEXTURE_RGBA_ARB
#  define WGL_BIND_TO_TEXTURE_RGBA_ARB 0x2071
#endif
#ifndef WGL_TEXTURE_FORMAT_ARB
#  define WGL_TEXTURE_FORMAT_ARB 0x2072
#endif
#ifndef WGL_TEXTURE_TARGET_ARB
#  define WGL_TEXTURE_TARGET_ARB 0x2073
#endif
#ifndef WGL_MIPMAP_TEXTURE_ARB
#  define WGL_MIPMAP_TEXTURE_ARB 0x2074
#endif
#ifndef WGL_TEXTURE_RGB_ARB
#  define WGL_TEXTURE_RGB_ARB 0x2075
#endif
#ifndef WGL_TEXTURE_RGBA_ARB
#  define WGL_TEXTURE_RGBA_ARB 0x2076
#endif
#ifndef WGL_NO_TEXTURE_ARB
#  define WGL_NO_TEXTURE_ARB 0x2077
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_ARB
#  define WGL_TEXTURE_CUBE_MAP_ARB 0x2078
#endif
#ifndef WGL_TEXTURE_1D_ARB
#  define WGL_TEXTURE_1D_ARB 0x2079
#endif
#ifndef WGL_TEXTURE_2D_ARB
#  define WGL_TEXTURE_2D_ARB 0x207A
#endif
#ifndef WGL_MIPMAP_LEVEL_ARB
#  define WGL_MIPMAP_LEVEL_ARB 0x207B
#endif
#ifndef WGL_CUBE_MAP_FACE_ARB
#  define WGL_CUBE_MAP_FACE_ARB 0x207C
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x207D
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x207E
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x207F
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x2080
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x2081
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x2082
#endif
#ifndef WGL_FRONT_LEFT_ARB
#  define WGL_FRONT_LEFT_ARB 0x2083
#endif
#ifndef WGL_FRONT_RIGHT_ARB
#  define WGL_FRONT_RIGHT_ARB 0x2084
#endif
#ifndef WGL_BACK_LEFT_ARB
#  define WGL_BACK_LEFT_ARB 0x2085
#endif
#ifndef WGL_BACK_RIGHT_ARB
#  define WGL_BACK_RIGHT_ARB 0x2086
#endif
#ifndef WGL_AUX0_ARB
#  define WGL_AUX0_ARB 0x2087
#endif
#ifndef WGL_AUX1_ARB
#  define WGL_AUX1_ARB 0x2088
#endif
#ifndef WGL_AUX2_ARB
#  define WGL_AUX2_ARB 0x2089
#endif
#ifndef WGL_AUX3_ARB
#  define WGL_AUX3_ARB 0x208A
#endif
#ifndef WGL_AUX4_ARB
#  define WGL_AUX4_ARB 0x208B
#endif
#ifndef WGL_AUX5_ARB
#  define WGL_AUX5_ARB 0x208C
#endif
#ifndef WGL_AUX6_ARB
#  define WGL_AUX6_ARB 0x208D
#endif
#ifndef WGL_AUX7_ARB
#  define WGL_AUX7_ARB 0x208E
#endif
#ifndef WGL_AUX8_ARB
#  define WGL_AUX8_ARB 0x208F
#endif
#ifndef WGL_AUX9_ARB
#  define WGL_AUX9_ARB 0x2090
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglBindTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
typedef BOOL (APIENTRYP PFNWGLUXSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttribList);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglBindTexImageARB
extern PFNWGLUXBINDTEXIMAGEARBPROC wglBindTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
extern PFNWGLUXRELEASETEXIMAGEARBPROC wglReleaseTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
extern PFNWGLUXSETPBUFFERATTRIBARBPROC wglSetPbufferAttribARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:09:57 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_ARB_render_texture__
#define __GLUX_WGL_ARB_render_texture__

GLUX_NEW_PLUGIN(WGL_ARB_render_texture);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_BIND_TO_TEXTURE_RGB_ARB
#  define WGL_BIND_TO_TEXTURE_RGB_ARB 0x2070
#endif
#ifndef WGL_BIND_TO_TEXTURE_RGBA_ARB
#  define WGL_BIND_TO_TEXTURE_RGBA_ARB 0x2071
#endif
#ifndef WGL_TEXTURE_FORMAT_ARB
#  define WGL_TEXTURE_FORMAT_ARB 0x2072
#endif
#ifndef WGL_TEXTURE_TARGET_ARB
#  define WGL_TEXTURE_TARGET_ARB 0x2073
#endif
#ifndef WGL_MIPMAP_TEXTURE_ARB
#  define WGL_MIPMAP_TEXTURE_ARB 0x2074
#endif
#ifndef WGL_TEXTURE_RGB_ARB
#  define WGL_TEXTURE_RGB_ARB 0x2075
#endif
#ifndef WGL_TEXTURE_RGBA_ARB
#  define WGL_TEXTURE_RGBA_ARB 0x2076
#endif
#ifndef WGL_NO_TEXTURE_ARB
#  define WGL_NO_TEXTURE_ARB 0x2077
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_ARB
#  define WGL_TEXTURE_CUBE_MAP_ARB 0x2078
#endif
#ifndef WGL_TEXTURE_1D_ARB
#  define WGL_TEXTURE_1D_ARB 0x2079
#endif
#ifndef WGL_TEXTURE_2D_ARB
#  define WGL_TEXTURE_2D_ARB 0x207A
#endif
#ifndef WGL_MIPMAP_LEVEL_ARB
#  define WGL_MIPMAP_LEVEL_ARB 0x207B
#endif
#ifndef WGL_CUBE_MAP_FACE_ARB
#  define WGL_CUBE_MAP_FACE_ARB 0x207C
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x207D
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x207E
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x207F
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x2080
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x2081
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x2082
#endif
#ifndef WGL_FRONT_LEFT_ARB
#  define WGL_FRONT_LEFT_ARB 0x2083
#endif
#ifndef WGL_FRONT_RIGHT_ARB
#  define WGL_FRONT_RIGHT_ARB 0x2084
#endif
#ifndef WGL_BACK_LEFT_ARB
#  define WGL_BACK_LEFT_ARB 0x2085
#endif
#ifndef WGL_BACK_RIGHT_ARB
#  define WGL_BACK_RIGHT_ARB 0x2086
#endif
#ifndef WGL_AUX0_ARB
#  define WGL_AUX0_ARB 0x2087
#endif
#ifndef WGL_AUX1_ARB
#  define WGL_AUX1_ARB 0x2088
#endif
#ifndef WGL_AUX2_ARB
#  define WGL_AUX2_ARB 0x2089
#endif
#ifndef WGL_AUX3_ARB
#  define WGL_AUX3_ARB 0x208A
#endif
#ifndef WGL_AUX4_ARB
#  define WGL_AUX4_ARB 0x208B
#endif
#ifndef WGL_AUX5_ARB
#  define WGL_AUX5_ARB 0x208C
#endif
#ifndef WGL_AUX6_ARB
#  define WGL_AUX6_ARB 0x208D
#endif
#ifndef WGL_AUX7_ARB
#  define WGL_AUX7_ARB 0x208E
#endif
#ifndef WGL_AUX8_ARB
#  define WGL_AUX8_ARB 0x208F
#endif
#ifndef WGL_AUX9_ARB
#  define WGL_AUX9_ARB 0x2090
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglBindTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
typedef BOOL (APIENTRYP PFNWGLUXSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttribList);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglBindTexImageARB
extern PFNWGLUXBINDTEXIMAGEARBPROC wglBindTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
extern PFNWGLUXRELEASETEXIMAGEARBPROC wglReleaseTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
extern PFNWGLUXSETPBUFFERATTRIBARBPROC wglSetPbufferAttribARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:19:58 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_ARB_render_texture__
#define __GLUX_WGL_ARB_render_texture__

GLUX_NEW_PLUGIN(WGL_ARB_render_texture);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_BIND_TO_TEXTURE_RGB_ARB
#  define WGL_BIND_TO_TEXTURE_RGB_ARB 0x2070
#endif
#ifndef WGL_BIND_TO_TEXTURE_RGBA_ARB
#  define WGL_BIND_TO_TEXTURE_RGBA_ARB 0x2071
#endif
#ifndef WGL_TEXTURE_FORMAT_ARB
#  define WGL_TEXTURE_FORMAT_ARB 0x2072
#endif
#ifndef WGL_TEXTURE_TARGET_ARB
#  define WGL_TEXTURE_TARGET_ARB 0x2073
#endif
#ifndef WGL_MIPMAP_TEXTURE_ARB
#  define WGL_MIPMAP_TEXTURE_ARB 0x2074
#endif
#ifndef WGL_TEXTURE_RGB_ARB
#  define WGL_TEXTURE_RGB_ARB 0x2075
#endif
#ifndef WGL_TEXTURE_RGBA_ARB
#  define WGL_TEXTURE_RGBA_ARB 0x2076
#endif
#ifndef WGL_NO_TEXTURE_ARB
#  define WGL_NO_TEXTURE_ARB 0x2077
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_ARB
#  define WGL_TEXTURE_CUBE_MAP_ARB 0x2078
#endif
#ifndef WGL_TEXTURE_1D_ARB
#  define WGL_TEXTURE_1D_ARB 0x2079
#endif
#ifndef WGL_TEXTURE_2D_ARB
#  define WGL_TEXTURE_2D_ARB 0x207A
#endif
#ifndef WGL_MIPMAP_LEVEL_ARB
#  define WGL_MIPMAP_LEVEL_ARB 0x207B
#endif
#ifndef WGL_CUBE_MAP_FACE_ARB
#  define WGL_CUBE_MAP_FACE_ARB 0x207C
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x207D
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x207E
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x207F
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x2080
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x2081
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x2082
#endif
#ifndef WGL_FRONT_LEFT_ARB
#  define WGL_FRONT_LEFT_ARB 0x2083
#endif
#ifndef WGL_FRONT_RIGHT_ARB
#  define WGL_FRONT_RIGHT_ARB 0x2084
#endif
#ifndef WGL_BACK_LEFT_ARB
#  define WGL_BACK_LEFT_ARB 0x2085
#endif
#ifndef WGL_BACK_RIGHT_ARB
#  define WGL_BACK_RIGHT_ARB 0x2086
#endif
#ifndef WGL_AUX0_ARB
#  define WGL_AUX0_ARB 0x2087
#endif
#ifndef WGL_AUX1_ARB
#  define WGL_AUX1_ARB 0x2088
#endif
#ifndef WGL_AUX2_ARB
#  define WGL_AUX2_ARB 0x2089
#endif
#ifndef WGL_AUX3_ARB
#  define WGL_AUX3_ARB 0x208A
#endif
#ifndef WGL_AUX4_ARB
#  define WGL_AUX4_ARB 0x208B
#endif
#ifndef WGL_AUX5_ARB
#  define WGL_AUX5_ARB 0x208C
#endif
#ifndef WGL_AUX6_ARB
#  define WGL_AUX6_ARB 0x208D
#endif
#ifndef WGL_AUX7_ARB
#  define WGL_AUX7_ARB 0x208E
#endif
#ifndef WGL_AUX8_ARB
#  define WGL_AUX8_ARB 0x208F
#endif
#ifndef WGL_AUX9_ARB
#  define WGL_AUX9_ARB 0x2090
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglBindTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
typedef BOOL (APIENTRYP PFNWGLUXSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttribList);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglBindTexImageARB
extern PFNWGLUXBINDTEXIMAGEARBPROC wglBindTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
extern PFNWGLUXRELEASETEXIMAGEARBPROC wglReleaseTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
extern PFNWGLUXSETPBUFFERATTRIBARBPROC wglSetPbufferAttribARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:42:56 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_ARB_render_texture__
#define __GLUX_WGL_ARB_render_texture__

GLUX_NEW_PLUGIN(WGL_ARB_render_texture)
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_BIND_TO_TEXTURE_RGB_ARB
#  define WGL_BIND_TO_TEXTURE_RGB_ARB 0x2070
#endif
#ifndef WGL_BIND_TO_TEXTURE_RGBA_ARB
#  define WGL_BIND_TO_TEXTURE_RGBA_ARB 0x2071
#endif
#ifndef WGL_TEXTURE_FORMAT_ARB
#  define WGL_TEXTURE_FORMAT_ARB 0x2072
#endif
#ifndef WGL_TEXTURE_TARGET_ARB
#  define WGL_TEXTURE_TARGET_ARB 0x2073
#endif
#ifndef WGL_MIPMAP_TEXTURE_ARB
#  define WGL_MIPMAP_TEXTURE_ARB 0x2074
#endif
#ifndef WGL_TEXTURE_RGB_ARB
#  define WGL_TEXTURE_RGB_ARB 0x2075
#endif
#ifndef WGL_TEXTURE_RGBA_ARB
#  define WGL_TEXTURE_RGBA_ARB 0x2076
#endif
#ifndef WGL_NO_TEXTURE_ARB
#  define WGL_NO_TEXTURE_ARB 0x2077
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_ARB
#  define WGL_TEXTURE_CUBE_MAP_ARB 0x2078
#endif
#ifndef WGL_TEXTURE_1D_ARB
#  define WGL_TEXTURE_1D_ARB 0x2079
#endif
#ifndef WGL_TEXTURE_2D_ARB
#  define WGL_TEXTURE_2D_ARB 0x207A
#endif
#ifndef WGL_MIPMAP_LEVEL_ARB
#  define WGL_MIPMAP_LEVEL_ARB 0x207B
#endif
#ifndef WGL_CUBE_MAP_FACE_ARB
#  define WGL_CUBE_MAP_FACE_ARB 0x207C
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x207D
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x207E
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x207F
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x2080
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x2081
#endif
#ifndef WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
#  define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x2082
#endif
#ifndef WGL_FRONT_LEFT_ARB
#  define WGL_FRONT_LEFT_ARB 0x2083
#endif
#ifndef WGL_FRONT_RIGHT_ARB
#  define WGL_FRONT_RIGHT_ARB 0x2084
#endif
#ifndef WGL_BACK_LEFT_ARB
#  define WGL_BACK_LEFT_ARB 0x2085
#endif
#ifndef WGL_BACK_RIGHT_ARB
#  define WGL_BACK_RIGHT_ARB 0x2086
#endif
#ifndef WGL_AUX0_ARB
#  define WGL_AUX0_ARB 0x2087
#endif
#ifndef WGL_AUX1_ARB
#  define WGL_AUX1_ARB 0x2088
#endif
#ifndef WGL_AUX2_ARB
#  define WGL_AUX2_ARB 0x2089
#endif
#ifndef WGL_AUX3_ARB
#  define WGL_AUX3_ARB 0x208A
#endif
#ifndef WGL_AUX4_ARB
#  define WGL_AUX4_ARB 0x208B
#endif
#ifndef WGL_AUX5_ARB
#  define WGL_AUX5_ARB 0x208C
#endif
#ifndef WGL_AUX6_ARB
#  define WGL_AUX6_ARB 0x208D
#endif
#ifndef WGL_AUX7_ARB
#  define WGL_AUX7_ARB 0x208E
#endif
#ifndef WGL_AUX8_ARB
#  define WGL_AUX8_ARB 0x208F
#endif
#ifndef WGL_AUX9_ARB
#  define WGL_AUX9_ARB 0x2090
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglBindTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
typedef BOOL (APIENTRYP PFNWGLUXRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
typedef BOOL (APIENTRYP PFNWGLUXSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttribList);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglBindTexImageARB
extern PFNWGLUXBINDTEXIMAGEARBPROC wglBindTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglReleaseTexImageARB
extern PFNWGLUXRELEASETEXIMAGEARBPROC wglReleaseTexImageARB;
#endif
#ifndef __GLUX__GLFCT_wglSetPbufferAttribARB
extern PFNWGLUXSETPBUFFERATTRIBARBPROC wglSetPbufferAttribARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------
