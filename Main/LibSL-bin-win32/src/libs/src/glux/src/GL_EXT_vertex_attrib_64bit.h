
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:27 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_vertex_attrib_64bit__
#define __GLUX_GL_EXT_vertex_attrib_64bit__

GLUX_NEW_PLUGIN(GL_EXT_vertex_attrib_64bit);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2_EXT
#  define GL_DOUBLE_VEC2_EXT 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3_EXT
#  define GL_DOUBLE_VEC3_EXT 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4_EXT
#  define GL_DOUBLE_VEC4_EXT 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2_EXT
#  define GL_DOUBLE_MAT2_EXT 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3_EXT
#  define GL_DOUBLE_MAT3_EXT 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4_EXT
#  define GL_DOUBLE_MAT4_EXT 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3_EXT
#  define GL_DOUBLE_MAT2x3_EXT 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4_EXT
#  define GL_DOUBLE_MAT2x4_EXT 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2_EXT
#  define GL_DOUBLE_MAT3x2_EXT 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4_EXT
#  define GL_DOUBLE_MAT3x4_EXT 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2_EXT
#  define GL_DOUBLE_MAT4x2_EXT 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3_EXT
#  define GL_DOUBLE_MAT4x3_EXT 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *params);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
extern PFNGLUXVERTEXATTRIBL1DEXTPROC glVertexAttribL1dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
extern PFNGLUXVERTEXATTRIBL2DEXTPROC glVertexAttribL2dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
extern PFNGLUXVERTEXATTRIBL3DEXTPROC glVertexAttribL3dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
extern PFNGLUXVERTEXATTRIBL4DEXTPROC glVertexAttribL4dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
extern PFNGLUXVERTEXATTRIBL1DVEXTPROC glVertexAttribL1dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
extern PFNGLUXVERTEXATTRIBL2DVEXTPROC glVertexAttribL2dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
extern PFNGLUXVERTEXATTRIBL3DVEXTPROC glVertexAttribL3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
extern PFNGLUXVERTEXATTRIBL4DVEXTPROC glVertexAttribL4dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
extern PFNGLUXVERTEXATTRIBLPOINTEREXTPROC glVertexAttribLPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
extern PFNGLUXGETVERTEXATTRIBLDVEXTPROC glGetVertexAttribLdvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC glVertexArrayVertexAttribLOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:45 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_vertex_attrib_64bit__
#define __GLUX_GL_EXT_vertex_attrib_64bit__

GLUX_NEW_PLUGIN(GL_EXT_vertex_attrib_64bit);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2_EXT
#  define GL_DOUBLE_VEC2_EXT 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3_EXT
#  define GL_DOUBLE_VEC3_EXT 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4_EXT
#  define GL_DOUBLE_VEC4_EXT 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2_EXT
#  define GL_DOUBLE_MAT2_EXT 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3_EXT
#  define GL_DOUBLE_MAT3_EXT 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4_EXT
#  define GL_DOUBLE_MAT4_EXT 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3_EXT
#  define GL_DOUBLE_MAT2x3_EXT 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4_EXT
#  define GL_DOUBLE_MAT2x4_EXT 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2_EXT
#  define GL_DOUBLE_MAT3x2_EXT 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4_EXT
#  define GL_DOUBLE_MAT3x4_EXT 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2_EXT
#  define GL_DOUBLE_MAT4x2_EXT 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3_EXT
#  define GL_DOUBLE_MAT4x3_EXT 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *params);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
extern PFNGLUXVERTEXATTRIBL1DEXTPROC glVertexAttribL1dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
extern PFNGLUXVERTEXATTRIBL2DEXTPROC glVertexAttribL2dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
extern PFNGLUXVERTEXATTRIBL3DEXTPROC glVertexAttribL3dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
extern PFNGLUXVERTEXATTRIBL4DEXTPROC glVertexAttribL4dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
extern PFNGLUXVERTEXATTRIBL1DVEXTPROC glVertexAttribL1dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
extern PFNGLUXVERTEXATTRIBL2DVEXTPROC glVertexAttribL2dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
extern PFNGLUXVERTEXATTRIBL3DVEXTPROC glVertexAttribL3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
extern PFNGLUXVERTEXATTRIBL4DVEXTPROC glVertexAttribL4dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
extern PFNGLUXVERTEXATTRIBLPOINTEREXTPROC glVertexAttribLPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
extern PFNGLUXGETVERTEXATTRIBLDVEXTPROC glGetVertexAttribLdvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC glVertexArrayVertexAttribLOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:54 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_vertex_attrib_64bit__
#define __GLUX_GL_EXT_vertex_attrib_64bit__

GLUX_NEW_PLUGIN(GL_EXT_vertex_attrib_64bit);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2_EXT
#  define GL_DOUBLE_VEC2_EXT 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3_EXT
#  define GL_DOUBLE_VEC3_EXT 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4_EXT
#  define GL_DOUBLE_VEC4_EXT 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2_EXT
#  define GL_DOUBLE_MAT2_EXT 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3_EXT
#  define GL_DOUBLE_MAT3_EXT 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4_EXT
#  define GL_DOUBLE_MAT4_EXT 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3_EXT
#  define GL_DOUBLE_MAT2x3_EXT 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4_EXT
#  define GL_DOUBLE_MAT2x4_EXT 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2_EXT
#  define GL_DOUBLE_MAT3x2_EXT 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4_EXT
#  define GL_DOUBLE_MAT3x4_EXT 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2_EXT
#  define GL_DOUBLE_MAT4x2_EXT 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3_EXT
#  define GL_DOUBLE_MAT4x3_EXT 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *params);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
extern PFNGLUXVERTEXATTRIBL1DEXTPROC glVertexAttribL1dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
extern PFNGLUXVERTEXATTRIBL2DEXTPROC glVertexAttribL2dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
extern PFNGLUXVERTEXATTRIBL3DEXTPROC glVertexAttribL3dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
extern PFNGLUXVERTEXATTRIBL4DEXTPROC glVertexAttribL4dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
extern PFNGLUXVERTEXATTRIBL1DVEXTPROC glVertexAttribL1dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
extern PFNGLUXVERTEXATTRIBL2DVEXTPROC glVertexAttribL2dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
extern PFNGLUXVERTEXATTRIBL3DVEXTPROC glVertexAttribL3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
extern PFNGLUXVERTEXATTRIBL4DVEXTPROC glVertexAttribL4dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
extern PFNGLUXVERTEXATTRIBLPOINTEREXTPROC glVertexAttribLPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
extern PFNGLUXGETVERTEXATTRIBLDVEXTPROC glGetVertexAttribLdvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC glVertexArrayVertexAttribLOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:13 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_vertex_attrib_64bit__
#define __GLUX_GL_EXT_vertex_attrib_64bit__

GLUX_NEW_PLUGIN(GL_EXT_vertex_attrib_64bit);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2_EXT
#  define GL_DOUBLE_VEC2_EXT 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3_EXT
#  define GL_DOUBLE_VEC3_EXT 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4_EXT
#  define GL_DOUBLE_VEC4_EXT 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2_EXT
#  define GL_DOUBLE_MAT2_EXT 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3_EXT
#  define GL_DOUBLE_MAT3_EXT 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4_EXT
#  define GL_DOUBLE_MAT4_EXT 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3_EXT
#  define GL_DOUBLE_MAT2x3_EXT 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4_EXT
#  define GL_DOUBLE_MAT2x4_EXT 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2_EXT
#  define GL_DOUBLE_MAT3x2_EXT 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4_EXT
#  define GL_DOUBLE_MAT3x4_EXT 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2_EXT
#  define GL_DOUBLE_MAT4x2_EXT 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3_EXT
#  define GL_DOUBLE_MAT4x3_EXT 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *params);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
extern PFNGLUXVERTEXATTRIBL1DEXTPROC glVertexAttribL1dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
extern PFNGLUXVERTEXATTRIBL2DEXTPROC glVertexAttribL2dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
extern PFNGLUXVERTEXATTRIBL3DEXTPROC glVertexAttribL3dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
extern PFNGLUXVERTEXATTRIBL4DEXTPROC glVertexAttribL4dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
extern PFNGLUXVERTEXATTRIBL1DVEXTPROC glVertexAttribL1dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
extern PFNGLUXVERTEXATTRIBL2DVEXTPROC glVertexAttribL2dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
extern PFNGLUXVERTEXATTRIBL3DVEXTPROC glVertexAttribL3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
extern PFNGLUXVERTEXATTRIBL4DVEXTPROC glVertexAttribL4dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
extern PFNGLUXVERTEXATTRIBLPOINTEREXTPROC glVertexAttribLPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
extern PFNGLUXGETVERTEXATTRIBLDVEXTPROC glGetVertexAttribLdvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC glVertexArrayVertexAttribLOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:30 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_vertex_attrib_64bit__
#define __GLUX_GL_EXT_vertex_attrib_64bit__

GLUX_NEW_PLUGIN(GL_EXT_vertex_attrib_64bit);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2_EXT
#  define GL_DOUBLE_VEC2_EXT 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3_EXT
#  define GL_DOUBLE_VEC3_EXT 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4_EXT
#  define GL_DOUBLE_VEC4_EXT 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2_EXT
#  define GL_DOUBLE_MAT2_EXT 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3_EXT
#  define GL_DOUBLE_MAT3_EXT 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4_EXT
#  define GL_DOUBLE_MAT4_EXT 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3_EXT
#  define GL_DOUBLE_MAT2x3_EXT 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4_EXT
#  define GL_DOUBLE_MAT2x4_EXT 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2_EXT
#  define GL_DOUBLE_MAT3x2_EXT 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4_EXT
#  define GL_DOUBLE_MAT3x4_EXT 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2_EXT
#  define GL_DOUBLE_MAT4x2_EXT 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3_EXT
#  define GL_DOUBLE_MAT4x3_EXT 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *params);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
extern PFNGLUXVERTEXATTRIBL1DEXTPROC glVertexAttribL1dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
extern PFNGLUXVERTEXATTRIBL2DEXTPROC glVertexAttribL2dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
extern PFNGLUXVERTEXATTRIBL3DEXTPROC glVertexAttribL3dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
extern PFNGLUXVERTEXATTRIBL4DEXTPROC glVertexAttribL4dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
extern PFNGLUXVERTEXATTRIBL1DVEXTPROC glVertexAttribL1dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
extern PFNGLUXVERTEXATTRIBL2DVEXTPROC glVertexAttribL2dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
extern PFNGLUXVERTEXATTRIBL3DVEXTPROC glVertexAttribL3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
extern PFNGLUXVERTEXATTRIBL4DVEXTPROC glVertexAttribL4dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
extern PFNGLUXVERTEXATTRIBLPOINTEREXTPROC glVertexAttribLPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
extern PFNGLUXGETVERTEXATTRIBLDVEXTPROC glGetVertexAttribLdvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC glVertexArrayVertexAttribLOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:33 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_vertex_attrib_64bit__
#define __GLUX_GL_EXT_vertex_attrib_64bit__

GLUX_NEW_PLUGIN(GL_EXT_vertex_attrib_64bit);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2_EXT
#  define GL_DOUBLE_VEC2_EXT 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3_EXT
#  define GL_DOUBLE_VEC3_EXT 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4_EXT
#  define GL_DOUBLE_VEC4_EXT 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2_EXT
#  define GL_DOUBLE_MAT2_EXT 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3_EXT
#  define GL_DOUBLE_MAT3_EXT 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4_EXT
#  define GL_DOUBLE_MAT4_EXT 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3_EXT
#  define GL_DOUBLE_MAT2x3_EXT 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4_EXT
#  define GL_DOUBLE_MAT2x4_EXT 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2_EXT
#  define GL_DOUBLE_MAT3x2_EXT 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4_EXT
#  define GL_DOUBLE_MAT3x4_EXT 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2_EXT
#  define GL_DOUBLE_MAT4x2_EXT 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3_EXT
#  define GL_DOUBLE_MAT4x3_EXT 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *params);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
extern PFNGLUXVERTEXATTRIBL1DEXTPROC glVertexAttribL1dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
extern PFNGLUXVERTEXATTRIBL2DEXTPROC glVertexAttribL2dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
extern PFNGLUXVERTEXATTRIBL3DEXTPROC glVertexAttribL3dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
extern PFNGLUXVERTEXATTRIBL4DEXTPROC glVertexAttribL4dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
extern PFNGLUXVERTEXATTRIBL1DVEXTPROC glVertexAttribL1dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
extern PFNGLUXVERTEXATTRIBL2DVEXTPROC glVertexAttribL2dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
extern PFNGLUXVERTEXATTRIBL3DVEXTPROC glVertexAttribL3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
extern PFNGLUXVERTEXATTRIBL4DVEXTPROC glVertexAttribL4dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
extern PFNGLUXVERTEXATTRIBLPOINTEREXTPROC glVertexAttribLPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
extern PFNGLUXGETVERTEXATTRIBLDVEXTPROC glGetVertexAttribLdvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC glVertexArrayVertexAttribLOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:55 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_vertex_attrib_64bit__
#define __GLUX_GL_EXT_vertex_attrib_64bit__

GLUX_NEW_PLUGIN(GL_EXT_vertex_attrib_64bit);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2_EXT
#  define GL_DOUBLE_VEC2_EXT 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3_EXT
#  define GL_DOUBLE_VEC3_EXT 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4_EXT
#  define GL_DOUBLE_VEC4_EXT 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2_EXT
#  define GL_DOUBLE_MAT2_EXT 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3_EXT
#  define GL_DOUBLE_MAT3_EXT 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4_EXT
#  define GL_DOUBLE_MAT4_EXT 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3_EXT
#  define GL_DOUBLE_MAT2x3_EXT 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4_EXT
#  define GL_DOUBLE_MAT2x4_EXT 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2_EXT
#  define GL_DOUBLE_MAT3x2_EXT 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4_EXT
#  define GL_DOUBLE_MAT3x4_EXT 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2_EXT
#  define GL_DOUBLE_MAT4x2_EXT 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3_EXT
#  define GL_DOUBLE_MAT4x3_EXT 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *params);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
extern PFNGLUXVERTEXATTRIBL1DEXTPROC glVertexAttribL1dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
extern PFNGLUXVERTEXATTRIBL2DEXTPROC glVertexAttribL2dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
extern PFNGLUXVERTEXATTRIBL3DEXTPROC glVertexAttribL3dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
extern PFNGLUXVERTEXATTRIBL4DEXTPROC glVertexAttribL4dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
extern PFNGLUXVERTEXATTRIBL1DVEXTPROC glVertexAttribL1dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
extern PFNGLUXVERTEXATTRIBL2DVEXTPROC glVertexAttribL2dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
extern PFNGLUXVERTEXATTRIBL3DVEXTPROC glVertexAttribL3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
extern PFNGLUXVERTEXATTRIBL4DVEXTPROC glVertexAttribL4dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
extern PFNGLUXVERTEXATTRIBLPOINTEREXTPROC glVertexAttribLPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
extern PFNGLUXGETVERTEXATTRIBLDVEXTPROC glGetVertexAttribLdvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC glVertexArrayVertexAttribLOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:28:04 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_vertex_attrib_64bit__
#define __GLUX_GL_EXT_vertex_attrib_64bit__

GLUX_NEW_PLUGIN(GL_EXT_vertex_attrib_64bit);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2_EXT
#  define GL_DOUBLE_VEC2_EXT 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3_EXT
#  define GL_DOUBLE_VEC3_EXT 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4_EXT
#  define GL_DOUBLE_VEC4_EXT 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2_EXT
#  define GL_DOUBLE_MAT2_EXT 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3_EXT
#  define GL_DOUBLE_MAT3_EXT 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4_EXT
#  define GL_DOUBLE_MAT4_EXT 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3_EXT
#  define GL_DOUBLE_MAT2x3_EXT 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4_EXT
#  define GL_DOUBLE_MAT2x4_EXT 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2_EXT
#  define GL_DOUBLE_MAT3x2_EXT 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4_EXT
#  define GL_DOUBLE_MAT3x4_EXT 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2_EXT
#  define GL_DOUBLE_MAT4x2_EXT 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3_EXT
#  define GL_DOUBLE_MAT4x3_EXT 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *params);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
extern PFNGLUXVERTEXATTRIBL1DEXTPROC glVertexAttribL1dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
extern PFNGLUXVERTEXATTRIBL2DEXTPROC glVertexAttribL2dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
extern PFNGLUXVERTEXATTRIBL3DEXTPROC glVertexAttribL3dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
extern PFNGLUXVERTEXATTRIBL4DEXTPROC glVertexAttribL4dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
extern PFNGLUXVERTEXATTRIBL1DVEXTPROC glVertexAttribL1dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
extern PFNGLUXVERTEXATTRIBL2DVEXTPROC glVertexAttribL2dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
extern PFNGLUXVERTEXATTRIBL3DVEXTPROC glVertexAttribL3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
extern PFNGLUXVERTEXATTRIBL4DVEXTPROC glVertexAttribL4dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
extern PFNGLUXVERTEXATTRIBLPOINTEREXTPROC glVertexAttribLPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
extern PFNGLUXGETVERTEXATTRIBLDVEXTPROC glGetVertexAttribLdvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC glVertexArrayVertexAttribLOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:16:59 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_vertex_attrib_64bit__
#define __GLUX_GL_EXT_vertex_attrib_64bit__

GLUX_NEW_PLUGIN(GL_EXT_vertex_attrib_64bit);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2_EXT
#  define GL_DOUBLE_VEC2_EXT 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3_EXT
#  define GL_DOUBLE_VEC3_EXT 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4_EXT
#  define GL_DOUBLE_VEC4_EXT 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2_EXT
#  define GL_DOUBLE_MAT2_EXT 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3_EXT
#  define GL_DOUBLE_MAT3_EXT 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4_EXT
#  define GL_DOUBLE_MAT4_EXT 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3_EXT
#  define GL_DOUBLE_MAT2x3_EXT 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4_EXT
#  define GL_DOUBLE_MAT2x4_EXT 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2_EXT
#  define GL_DOUBLE_MAT3x2_EXT 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4_EXT
#  define GL_DOUBLE_MAT3x4_EXT 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2_EXT
#  define GL_DOUBLE_MAT4x2_EXT 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3_EXT
#  define GL_DOUBLE_MAT4x3_EXT 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *params);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
extern PFNGLUXVERTEXATTRIBL1DEXTPROC glVertexAttribL1dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
extern PFNGLUXVERTEXATTRIBL2DEXTPROC glVertexAttribL2dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
extern PFNGLUXVERTEXATTRIBL3DEXTPROC glVertexAttribL3dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
extern PFNGLUXVERTEXATTRIBL4DEXTPROC glVertexAttribL4dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
extern PFNGLUXVERTEXATTRIBL1DVEXTPROC glVertexAttribL1dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
extern PFNGLUXVERTEXATTRIBL2DVEXTPROC glVertexAttribL2dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
extern PFNGLUXVERTEXATTRIBL3DVEXTPROC glVertexAttribL3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
extern PFNGLUXVERTEXATTRIBL4DVEXTPROC glVertexAttribL4dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
extern PFNGLUXVERTEXATTRIBLPOINTEREXTPROC glVertexAttribLPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
extern PFNGLUXGETVERTEXATTRIBLDVEXTPROC glGetVertexAttribLdvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC glVertexArrayVertexAttribLOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_vertex_attrib_64bit__
#define __GLUX_GL_EXT_vertex_attrib_64bit__

GLUX_NEW_PLUGIN(GL_EXT_vertex_attrib_64bit);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2_EXT
#  define GL_DOUBLE_VEC2_EXT 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3_EXT
#  define GL_DOUBLE_VEC3_EXT 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4_EXT
#  define GL_DOUBLE_VEC4_EXT 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2_EXT
#  define GL_DOUBLE_MAT2_EXT 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3_EXT
#  define GL_DOUBLE_MAT3_EXT 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4_EXT
#  define GL_DOUBLE_MAT4_EXT 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3_EXT
#  define GL_DOUBLE_MAT2x3_EXT 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4_EXT
#  define GL_DOUBLE_MAT2x4_EXT 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2_EXT
#  define GL_DOUBLE_MAT3x2_EXT 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4_EXT
#  define GL_DOUBLE_MAT3x4_EXT 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2_EXT
#  define GL_DOUBLE_MAT4x2_EXT 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3_EXT
#  define GL_DOUBLE_MAT4x3_EXT 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *params);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
extern PFNGLUXVERTEXATTRIBL1DEXTPROC glVertexAttribL1dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
extern PFNGLUXVERTEXATTRIBL2DEXTPROC glVertexAttribL2dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
extern PFNGLUXVERTEXATTRIBL3DEXTPROC glVertexAttribL3dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
extern PFNGLUXVERTEXATTRIBL4DEXTPROC glVertexAttribL4dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
extern PFNGLUXVERTEXATTRIBL1DVEXTPROC glVertexAttribL1dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
extern PFNGLUXVERTEXATTRIBL2DVEXTPROC glVertexAttribL2dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
extern PFNGLUXVERTEXATTRIBL3DVEXTPROC glVertexAttribL3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
extern PFNGLUXVERTEXATTRIBL4DVEXTPROC glVertexAttribL4dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
extern PFNGLUXVERTEXATTRIBLPOINTEREXTPROC glVertexAttribLPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
extern PFNGLUXGETVERTEXATTRIBLDVEXTPROC glGetVertexAttribLdvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC glVertexArrayVertexAttribLOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:21 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_vertex_attrib_64bit__
#define __GLUX_GL_EXT_vertex_attrib_64bit__

GLUX_NEW_PLUGIN(GL_EXT_vertex_attrib_64bit);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2_EXT
#  define GL_DOUBLE_VEC2_EXT 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3_EXT
#  define GL_DOUBLE_VEC3_EXT 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4_EXT
#  define GL_DOUBLE_VEC4_EXT 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2_EXT
#  define GL_DOUBLE_MAT2_EXT 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3_EXT
#  define GL_DOUBLE_MAT3_EXT 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4_EXT
#  define GL_DOUBLE_MAT4_EXT 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3_EXT
#  define GL_DOUBLE_MAT2x3_EXT 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4_EXT
#  define GL_DOUBLE_MAT2x4_EXT 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2_EXT
#  define GL_DOUBLE_MAT3x2_EXT 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4_EXT
#  define GL_DOUBLE_MAT3x4_EXT 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2_EXT
#  define GL_DOUBLE_MAT4x2_EXT 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3_EXT
#  define GL_DOUBLE_MAT4x3_EXT 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *params);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
extern PFNGLUXVERTEXATTRIBL1DEXTPROC glVertexAttribL1dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
extern PFNGLUXVERTEXATTRIBL2DEXTPROC glVertexAttribL2dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
extern PFNGLUXVERTEXATTRIBL3DEXTPROC glVertexAttribL3dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
extern PFNGLUXVERTEXATTRIBL4DEXTPROC glVertexAttribL4dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
extern PFNGLUXVERTEXATTRIBL1DVEXTPROC glVertexAttribL1dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
extern PFNGLUXVERTEXATTRIBL2DVEXTPROC glVertexAttribL2dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
extern PFNGLUXVERTEXATTRIBL3DVEXTPROC glVertexAttribL3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
extern PFNGLUXVERTEXATTRIBL4DVEXTPROC glVertexAttribL4dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
extern PFNGLUXVERTEXATTRIBLPOINTEREXTPROC glVertexAttribLPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
extern PFNGLUXGETVERTEXATTRIBLDVEXTPROC glGetVertexAttribLdvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC glVertexArrayVertexAttribLOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_vertex_attrib_64bit__
#define __GLUX_GL_EXT_vertex_attrib_64bit__

GLUX_NEW_PLUGIN(GL_EXT_vertex_attrib_64bit);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2_EXT
#  define GL_DOUBLE_VEC2_EXT 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3_EXT
#  define GL_DOUBLE_VEC3_EXT 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4_EXT
#  define GL_DOUBLE_VEC4_EXT 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2_EXT
#  define GL_DOUBLE_MAT2_EXT 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3_EXT
#  define GL_DOUBLE_MAT3_EXT 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4_EXT
#  define GL_DOUBLE_MAT4_EXT 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3_EXT
#  define GL_DOUBLE_MAT2x3_EXT 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4_EXT
#  define GL_DOUBLE_MAT2x4_EXT 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2_EXT
#  define GL_DOUBLE_MAT3x2_EXT 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4_EXT
#  define GL_DOUBLE_MAT3x4_EXT 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2_EXT
#  define GL_DOUBLE_MAT4x2_EXT 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3_EXT
#  define GL_DOUBLE_MAT4x3_EXT 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *params);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
extern PFNGLUXVERTEXATTRIBL1DEXTPROC glVertexAttribL1dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
extern PFNGLUXVERTEXATTRIBL2DEXTPROC glVertexAttribL2dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
extern PFNGLUXVERTEXATTRIBL3DEXTPROC glVertexAttribL3dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
extern PFNGLUXVERTEXATTRIBL4DEXTPROC glVertexAttribL4dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
extern PFNGLUXVERTEXATTRIBL1DVEXTPROC glVertexAttribL1dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
extern PFNGLUXVERTEXATTRIBL2DVEXTPROC glVertexAttribL2dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
extern PFNGLUXVERTEXATTRIBL3DVEXTPROC glVertexAttribL3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
extern PFNGLUXVERTEXATTRIBL4DVEXTPROC glVertexAttribL4dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
extern PFNGLUXVERTEXATTRIBLPOINTEREXTPROC glVertexAttribLPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
extern PFNGLUXGETVERTEXATTRIBLDVEXTPROC glGetVertexAttribLdvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC glVertexArrayVertexAttribLOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:09 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_vertex_attrib_64bit__
#define __GLUX_GL_EXT_vertex_attrib_64bit__

GLUX_NEW_PLUGIN(GL_EXT_vertex_attrib_64bit);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2_EXT
#  define GL_DOUBLE_VEC2_EXT 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3_EXT
#  define GL_DOUBLE_VEC3_EXT 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4_EXT
#  define GL_DOUBLE_VEC4_EXT 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2_EXT
#  define GL_DOUBLE_MAT2_EXT 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3_EXT
#  define GL_DOUBLE_MAT3_EXT 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4_EXT
#  define GL_DOUBLE_MAT4_EXT 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3_EXT
#  define GL_DOUBLE_MAT2x3_EXT 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4_EXT
#  define GL_DOUBLE_MAT2x4_EXT 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2_EXT
#  define GL_DOUBLE_MAT3x2_EXT 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4_EXT
#  define GL_DOUBLE_MAT3x4_EXT 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2_EXT
#  define GL_DOUBLE_MAT4x2_EXT 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3_EXT
#  define GL_DOUBLE_MAT4x3_EXT 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *params);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
extern PFNGLUXVERTEXATTRIBL1DEXTPROC glVertexAttribL1dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
extern PFNGLUXVERTEXATTRIBL2DEXTPROC glVertexAttribL2dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
extern PFNGLUXVERTEXATTRIBL3DEXTPROC glVertexAttribL3dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
extern PFNGLUXVERTEXATTRIBL4DEXTPROC glVertexAttribL4dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
extern PFNGLUXVERTEXATTRIBL1DVEXTPROC glVertexAttribL1dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
extern PFNGLUXVERTEXATTRIBL2DVEXTPROC glVertexAttribL2dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
extern PFNGLUXVERTEXATTRIBL3DVEXTPROC glVertexAttribL3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
extern PFNGLUXVERTEXATTRIBL4DVEXTPROC glVertexAttribL4dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
extern PFNGLUXVERTEXATTRIBLPOINTEREXTPROC glVertexAttribLPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
extern PFNGLUXGETVERTEXATTRIBLDVEXTPROC glGetVertexAttribLdvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC glVertexArrayVertexAttribLOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:23 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_vertex_attrib_64bit__
#define __GLUX_GL_EXT_vertex_attrib_64bit__

GLUX_NEW_PLUGIN(GL_EXT_vertex_attrib_64bit);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2_EXT
#  define GL_DOUBLE_VEC2_EXT 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3_EXT
#  define GL_DOUBLE_VEC3_EXT 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4_EXT
#  define GL_DOUBLE_VEC4_EXT 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2_EXT
#  define GL_DOUBLE_MAT2_EXT 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3_EXT
#  define GL_DOUBLE_MAT3_EXT 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4_EXT
#  define GL_DOUBLE_MAT4_EXT 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3_EXT
#  define GL_DOUBLE_MAT2x3_EXT 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4_EXT
#  define GL_DOUBLE_MAT2x4_EXT 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2_EXT
#  define GL_DOUBLE_MAT3x2_EXT 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4_EXT
#  define GL_DOUBLE_MAT3x4_EXT 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2_EXT
#  define GL_DOUBLE_MAT4x2_EXT 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3_EXT
#  define GL_DOUBLE_MAT4x3_EXT 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *params);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
extern PFNGLUXVERTEXATTRIBL1DEXTPROC glVertexAttribL1dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
extern PFNGLUXVERTEXATTRIBL2DEXTPROC glVertexAttribL2dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
extern PFNGLUXVERTEXATTRIBL3DEXTPROC glVertexAttribL3dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
extern PFNGLUXVERTEXATTRIBL4DEXTPROC glVertexAttribL4dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
extern PFNGLUXVERTEXATTRIBL1DVEXTPROC glVertexAttribL1dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
extern PFNGLUXVERTEXATTRIBL2DVEXTPROC glVertexAttribL2dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
extern PFNGLUXVERTEXATTRIBL3DVEXTPROC glVertexAttribL3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
extern PFNGLUXVERTEXATTRIBL4DVEXTPROC glVertexAttribL4dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
extern PFNGLUXVERTEXATTRIBLPOINTEREXTPROC glVertexAttribLPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
extern PFNGLUXGETVERTEXATTRIBLDVEXTPROC glGetVertexAttribLdvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC glVertexArrayVertexAttribLOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:52:03 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_vertex_attrib_64bit__
#define __GLUX_GL_EXT_vertex_attrib_64bit__

GLUX_NEW_PLUGIN(GL_EXT_vertex_attrib_64bit);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2_EXT
#  define GL_DOUBLE_VEC2_EXT 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3_EXT
#  define GL_DOUBLE_VEC3_EXT 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4_EXT
#  define GL_DOUBLE_VEC4_EXT 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2_EXT
#  define GL_DOUBLE_MAT2_EXT 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3_EXT
#  define GL_DOUBLE_MAT3_EXT 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4_EXT
#  define GL_DOUBLE_MAT4_EXT 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3_EXT
#  define GL_DOUBLE_MAT2x3_EXT 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4_EXT
#  define GL_DOUBLE_MAT2x4_EXT 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2_EXT
#  define GL_DOUBLE_MAT3x2_EXT 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4_EXT
#  define GL_DOUBLE_MAT3x4_EXT 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2_EXT
#  define GL_DOUBLE_MAT4x2_EXT 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3_EXT
#  define GL_DOUBLE_MAT4x3_EXT 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *params);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
extern PFNGLUXVERTEXATTRIBL1DEXTPROC glVertexAttribL1dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
extern PFNGLUXVERTEXATTRIBL2DEXTPROC glVertexAttribL2dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
extern PFNGLUXVERTEXATTRIBL3DEXTPROC glVertexAttribL3dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
extern PFNGLUXVERTEXATTRIBL4DEXTPROC glVertexAttribL4dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
extern PFNGLUXVERTEXATTRIBL1DVEXTPROC glVertexAttribL1dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
extern PFNGLUXVERTEXATTRIBL2DVEXTPROC glVertexAttribL2dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
extern PFNGLUXVERTEXATTRIBL3DVEXTPROC glVertexAttribL3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
extern PFNGLUXVERTEXATTRIBL4DVEXTPROC glVertexAttribL4dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
extern PFNGLUXVERTEXATTRIBLPOINTEREXTPROC glVertexAttribLPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
extern PFNGLUXGETVERTEXATTRIBLDVEXTPROC glGetVertexAttribLdvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC glVertexArrayVertexAttribLOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_vertex_attrib_64bit__
#define __GLUX_GL_EXT_vertex_attrib_64bit__

GLUX_NEW_PLUGIN(GL_EXT_vertex_attrib_64bit);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2_EXT
#  define GL_DOUBLE_VEC2_EXT 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3_EXT
#  define GL_DOUBLE_VEC3_EXT 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4_EXT
#  define GL_DOUBLE_VEC4_EXT 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2_EXT
#  define GL_DOUBLE_MAT2_EXT 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3_EXT
#  define GL_DOUBLE_MAT3_EXT 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4_EXT
#  define GL_DOUBLE_MAT4_EXT 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3_EXT
#  define GL_DOUBLE_MAT2x3_EXT 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4_EXT
#  define GL_DOUBLE_MAT2x4_EXT 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2_EXT
#  define GL_DOUBLE_MAT3x2_EXT 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4_EXT
#  define GL_DOUBLE_MAT3x4_EXT 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2_EXT
#  define GL_DOUBLE_MAT4x2_EXT 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3_EXT
#  define GL_DOUBLE_MAT4x3_EXT 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *params);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
extern PFNGLUXVERTEXATTRIBL1DEXTPROC glVertexAttribL1dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
extern PFNGLUXVERTEXATTRIBL2DEXTPROC glVertexAttribL2dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
extern PFNGLUXVERTEXATTRIBL3DEXTPROC glVertexAttribL3dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
extern PFNGLUXVERTEXATTRIBL4DEXTPROC glVertexAttribL4dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
extern PFNGLUXVERTEXATTRIBL1DVEXTPROC glVertexAttribL1dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
extern PFNGLUXVERTEXATTRIBL2DVEXTPROC glVertexAttribL2dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
extern PFNGLUXVERTEXATTRIBL3DVEXTPROC glVertexAttribL3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
extern PFNGLUXVERTEXATTRIBL4DVEXTPROC glVertexAttribL4dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
extern PFNGLUXVERTEXATTRIBLPOINTEREXTPROC glVertexAttribLPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
extern PFNGLUXGETVERTEXATTRIBLDVEXTPROC glGetVertexAttribLdvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC glVertexArrayVertexAttribLOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:05 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_vertex_attrib_64bit__
#define __GLUX_GL_EXT_vertex_attrib_64bit__

GLUX_NEW_PLUGIN(GL_EXT_vertex_attrib_64bit);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2_EXT
#  define GL_DOUBLE_VEC2_EXT 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3_EXT
#  define GL_DOUBLE_VEC3_EXT 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4_EXT
#  define GL_DOUBLE_VEC4_EXT 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2_EXT
#  define GL_DOUBLE_MAT2_EXT 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3_EXT
#  define GL_DOUBLE_MAT3_EXT 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4_EXT
#  define GL_DOUBLE_MAT4_EXT 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3_EXT
#  define GL_DOUBLE_MAT2x3_EXT 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4_EXT
#  define GL_DOUBLE_MAT2x4_EXT 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2_EXT
#  define GL_DOUBLE_MAT3x2_EXT 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4_EXT
#  define GL_DOUBLE_MAT3x4_EXT 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2_EXT
#  define GL_DOUBLE_MAT4x2_EXT 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3_EXT
#  define GL_DOUBLE_MAT4x3_EXT 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *params);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
extern PFNGLUXVERTEXATTRIBL1DEXTPROC glVertexAttribL1dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
extern PFNGLUXVERTEXATTRIBL2DEXTPROC glVertexAttribL2dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
extern PFNGLUXVERTEXATTRIBL3DEXTPROC glVertexAttribL3dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
extern PFNGLUXVERTEXATTRIBL4DEXTPROC glVertexAttribL4dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
extern PFNGLUXVERTEXATTRIBL1DVEXTPROC glVertexAttribL1dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
extern PFNGLUXVERTEXATTRIBL2DVEXTPROC glVertexAttribL2dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
extern PFNGLUXVERTEXATTRIBL3DVEXTPROC glVertexAttribL3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
extern PFNGLUXVERTEXATTRIBL4DVEXTPROC glVertexAttribL4dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
extern PFNGLUXVERTEXATTRIBLPOINTEREXTPROC glVertexAttribLPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
extern PFNGLUXGETVERTEXATTRIBLDVEXTPROC glGetVertexAttribLdvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC glVertexArrayVertexAttribLOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:26 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_vertex_attrib_64bit__
#define __GLUX_GL_EXT_vertex_attrib_64bit__

GLUX_NEW_PLUGIN(GL_EXT_vertex_attrib_64bit);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2_EXT
#  define GL_DOUBLE_VEC2_EXT 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3_EXT
#  define GL_DOUBLE_VEC3_EXT 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4_EXT
#  define GL_DOUBLE_VEC4_EXT 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2_EXT
#  define GL_DOUBLE_MAT2_EXT 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3_EXT
#  define GL_DOUBLE_MAT3_EXT 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4_EXT
#  define GL_DOUBLE_MAT4_EXT 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3_EXT
#  define GL_DOUBLE_MAT2x3_EXT 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4_EXT
#  define GL_DOUBLE_MAT2x4_EXT 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2_EXT
#  define GL_DOUBLE_MAT3x2_EXT 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4_EXT
#  define GL_DOUBLE_MAT3x4_EXT 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2_EXT
#  define GL_DOUBLE_MAT4x2_EXT 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3_EXT
#  define GL_DOUBLE_MAT4x3_EXT 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *params);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
extern PFNGLUXVERTEXATTRIBL1DEXTPROC glVertexAttribL1dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
extern PFNGLUXVERTEXATTRIBL2DEXTPROC glVertexAttribL2dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
extern PFNGLUXVERTEXATTRIBL3DEXTPROC glVertexAttribL3dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
extern PFNGLUXVERTEXATTRIBL4DEXTPROC glVertexAttribL4dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
extern PFNGLUXVERTEXATTRIBL1DVEXTPROC glVertexAttribL1dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
extern PFNGLUXVERTEXATTRIBL2DVEXTPROC glVertexAttribL2dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
extern PFNGLUXVERTEXATTRIBL3DVEXTPROC glVertexAttribL3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
extern PFNGLUXVERTEXATTRIBL4DVEXTPROC glVertexAttribL4dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
extern PFNGLUXVERTEXATTRIBLPOINTEREXTPROC glVertexAttribLPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
extern PFNGLUXGETVERTEXATTRIBLDVEXTPROC glGetVertexAttribLdvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC glVertexArrayVertexAttribLOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_vertex_attrib_64bit__
#define __GLUX_GL_EXT_vertex_attrib_64bit__

GLUX_NEW_PLUGIN(GL_EXT_vertex_attrib_64bit);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2_EXT
#  define GL_DOUBLE_VEC2_EXT 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3_EXT
#  define GL_DOUBLE_VEC3_EXT 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4_EXT
#  define GL_DOUBLE_VEC4_EXT 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2_EXT
#  define GL_DOUBLE_MAT2_EXT 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3_EXT
#  define GL_DOUBLE_MAT3_EXT 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4_EXT
#  define GL_DOUBLE_MAT4_EXT 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3_EXT
#  define GL_DOUBLE_MAT2x3_EXT 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4_EXT
#  define GL_DOUBLE_MAT2x4_EXT 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2_EXT
#  define GL_DOUBLE_MAT3x2_EXT 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4_EXT
#  define GL_DOUBLE_MAT3x4_EXT 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2_EXT
#  define GL_DOUBLE_MAT4x2_EXT 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3_EXT
#  define GL_DOUBLE_MAT4x3_EXT 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *params);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
extern PFNGLUXVERTEXATTRIBL1DEXTPROC glVertexAttribL1dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
extern PFNGLUXVERTEXATTRIBL2DEXTPROC glVertexAttribL2dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
extern PFNGLUXVERTEXATTRIBL3DEXTPROC glVertexAttribL3dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
extern PFNGLUXVERTEXATTRIBL4DEXTPROC glVertexAttribL4dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
extern PFNGLUXVERTEXATTRIBL1DVEXTPROC glVertexAttribL1dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
extern PFNGLUXVERTEXATTRIBL2DVEXTPROC glVertexAttribL2dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
extern PFNGLUXVERTEXATTRIBL3DVEXTPROC glVertexAttribL3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
extern PFNGLUXVERTEXATTRIBL4DVEXTPROC glVertexAttribL4dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
extern PFNGLUXVERTEXATTRIBLPOINTEREXTPROC glVertexAttribLPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
extern PFNGLUXGETVERTEXATTRIBLDVEXTPROC glGetVertexAttribLdvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC glVertexArrayVertexAttribLOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:42:00 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_vertex_attrib_64bit__
#define __GLUX_GL_EXT_vertex_attrib_64bit__

GLUX_NEW_PLUGIN(GL_EXT_vertex_attrib_64bit);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2_EXT
#  define GL_DOUBLE_VEC2_EXT 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3_EXT
#  define GL_DOUBLE_VEC3_EXT 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4_EXT
#  define GL_DOUBLE_VEC4_EXT 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2_EXT
#  define GL_DOUBLE_MAT2_EXT 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3_EXT
#  define GL_DOUBLE_MAT3_EXT 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4_EXT
#  define GL_DOUBLE_MAT4_EXT 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3_EXT
#  define GL_DOUBLE_MAT2x3_EXT 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4_EXT
#  define GL_DOUBLE_MAT2x4_EXT 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2_EXT
#  define GL_DOUBLE_MAT3x2_EXT 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4_EXT
#  define GL_DOUBLE_MAT3x4_EXT 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2_EXT
#  define GL_DOUBLE_MAT4x2_EXT 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3_EXT
#  define GL_DOUBLE_MAT4x3_EXT 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *params);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
extern PFNGLUXVERTEXATTRIBL1DEXTPROC glVertexAttribL1dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
extern PFNGLUXVERTEXATTRIBL2DEXTPROC glVertexAttribL2dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
extern PFNGLUXVERTEXATTRIBL3DEXTPROC glVertexAttribL3dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
extern PFNGLUXVERTEXATTRIBL4DEXTPROC glVertexAttribL4dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
extern PFNGLUXVERTEXATTRIBL1DVEXTPROC glVertexAttribL1dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
extern PFNGLUXVERTEXATTRIBL2DVEXTPROC glVertexAttribL2dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
extern PFNGLUXVERTEXATTRIBL3DVEXTPROC glVertexAttribL3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
extern PFNGLUXVERTEXATTRIBL4DVEXTPROC glVertexAttribL4dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
extern PFNGLUXVERTEXATTRIBLPOINTEREXTPROC glVertexAttribLPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
extern PFNGLUXGETVERTEXATTRIBLDVEXTPROC glGetVertexAttribLdvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC glVertexArrayVertexAttribLOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:41 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_vertex_attrib_64bit__
#define __GLUX_GL_EXT_vertex_attrib_64bit__

GLUX_NEW_PLUGIN(GL_EXT_vertex_attrib_64bit);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2_EXT
#  define GL_DOUBLE_VEC2_EXT 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3_EXT
#  define GL_DOUBLE_VEC3_EXT 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4_EXT
#  define GL_DOUBLE_VEC4_EXT 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2_EXT
#  define GL_DOUBLE_MAT2_EXT 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3_EXT
#  define GL_DOUBLE_MAT3_EXT 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4_EXT
#  define GL_DOUBLE_MAT4_EXT 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3_EXT
#  define GL_DOUBLE_MAT2x3_EXT 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4_EXT
#  define GL_DOUBLE_MAT2x4_EXT 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2_EXT
#  define GL_DOUBLE_MAT3x2_EXT 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4_EXT
#  define GL_DOUBLE_MAT3x4_EXT 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2_EXT
#  define GL_DOUBLE_MAT4x2_EXT 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3_EXT
#  define GL_DOUBLE_MAT4x3_EXT 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *params);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
extern PFNGLUXVERTEXATTRIBL1DEXTPROC glVertexAttribL1dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
extern PFNGLUXVERTEXATTRIBL2DEXTPROC glVertexAttribL2dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
extern PFNGLUXVERTEXATTRIBL3DEXTPROC glVertexAttribL3dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
extern PFNGLUXVERTEXATTRIBL4DEXTPROC glVertexAttribL4dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
extern PFNGLUXVERTEXATTRIBL1DVEXTPROC glVertexAttribL1dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
extern PFNGLUXVERTEXATTRIBL2DVEXTPROC glVertexAttribL2dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
extern PFNGLUXVERTEXATTRIBL3DVEXTPROC glVertexAttribL3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
extern PFNGLUXVERTEXATTRIBL4DVEXTPROC glVertexAttribL4dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
extern PFNGLUXVERTEXATTRIBLPOINTEREXTPROC glVertexAttribLPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
extern PFNGLUXGETVERTEXATTRIBLDVEXTPROC glGetVertexAttribLdvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC glVertexArrayVertexAttribLOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:10:00 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_vertex_attrib_64bit__
#define __GLUX_GL_EXT_vertex_attrib_64bit__

GLUX_NEW_PLUGIN(GL_EXT_vertex_attrib_64bit);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2_EXT
#  define GL_DOUBLE_VEC2_EXT 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3_EXT
#  define GL_DOUBLE_VEC3_EXT 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4_EXT
#  define GL_DOUBLE_VEC4_EXT 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2_EXT
#  define GL_DOUBLE_MAT2_EXT 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3_EXT
#  define GL_DOUBLE_MAT3_EXT 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4_EXT
#  define GL_DOUBLE_MAT4_EXT 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3_EXT
#  define GL_DOUBLE_MAT2x3_EXT 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4_EXT
#  define GL_DOUBLE_MAT2x4_EXT 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2_EXT
#  define GL_DOUBLE_MAT3x2_EXT 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4_EXT
#  define GL_DOUBLE_MAT3x4_EXT 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2_EXT
#  define GL_DOUBLE_MAT4x2_EXT 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3_EXT
#  define GL_DOUBLE_MAT4x3_EXT 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *params);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
extern PFNGLUXVERTEXATTRIBL1DEXTPROC glVertexAttribL1dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
extern PFNGLUXVERTEXATTRIBL2DEXTPROC glVertexAttribL2dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
extern PFNGLUXVERTEXATTRIBL3DEXTPROC glVertexAttribL3dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
extern PFNGLUXVERTEXATTRIBL4DEXTPROC glVertexAttribL4dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
extern PFNGLUXVERTEXATTRIBL1DVEXTPROC glVertexAttribL1dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
extern PFNGLUXVERTEXATTRIBL2DVEXTPROC glVertexAttribL2dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
extern PFNGLUXVERTEXATTRIBL3DVEXTPROC glVertexAttribL3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
extern PFNGLUXVERTEXATTRIBL4DVEXTPROC glVertexAttribL4dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
extern PFNGLUXVERTEXATTRIBLPOINTEREXTPROC glVertexAttribLPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
extern PFNGLUXGETVERTEXATTRIBLDVEXTPROC glGetVertexAttribLdvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC glVertexArrayVertexAttribLOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:20:01 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_vertex_attrib_64bit__
#define __GLUX_GL_EXT_vertex_attrib_64bit__

GLUX_NEW_PLUGIN(GL_EXT_vertex_attrib_64bit);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2_EXT
#  define GL_DOUBLE_VEC2_EXT 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3_EXT
#  define GL_DOUBLE_VEC3_EXT 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4_EXT
#  define GL_DOUBLE_VEC4_EXT 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2_EXT
#  define GL_DOUBLE_MAT2_EXT 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3_EXT
#  define GL_DOUBLE_MAT3_EXT 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4_EXT
#  define GL_DOUBLE_MAT4_EXT 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3_EXT
#  define GL_DOUBLE_MAT2x3_EXT 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4_EXT
#  define GL_DOUBLE_MAT2x4_EXT 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2_EXT
#  define GL_DOUBLE_MAT3x2_EXT 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4_EXT
#  define GL_DOUBLE_MAT3x4_EXT 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2_EXT
#  define GL_DOUBLE_MAT4x2_EXT 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3_EXT
#  define GL_DOUBLE_MAT4x3_EXT 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *params);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
extern PFNGLUXVERTEXATTRIBL1DEXTPROC glVertexAttribL1dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
extern PFNGLUXVERTEXATTRIBL2DEXTPROC glVertexAttribL2dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
extern PFNGLUXVERTEXATTRIBL3DEXTPROC glVertexAttribL3dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
extern PFNGLUXVERTEXATTRIBL4DEXTPROC glVertexAttribL4dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
extern PFNGLUXVERTEXATTRIBL1DVEXTPROC glVertexAttribL1dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
extern PFNGLUXVERTEXATTRIBL2DVEXTPROC glVertexAttribL2dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
extern PFNGLUXVERTEXATTRIBL3DVEXTPROC glVertexAttribL3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
extern PFNGLUXVERTEXATTRIBL4DVEXTPROC glVertexAttribL4dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
extern PFNGLUXVERTEXATTRIBLPOINTEREXTPROC glVertexAttribLPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
extern PFNGLUXGETVERTEXATTRIBLDVEXTPROC glGetVertexAttribLdvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC glVertexArrayVertexAttribLOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:42:59 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_vertex_attrib_64bit__
#define __GLUX_GL_EXT_vertex_attrib_64bit__

GLUX_NEW_PLUGIN(GL_EXT_vertex_attrib_64bit)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2_EXT
#  define GL_DOUBLE_VEC2_EXT 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3_EXT
#  define GL_DOUBLE_VEC3_EXT 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4_EXT
#  define GL_DOUBLE_VEC4_EXT 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2_EXT
#  define GL_DOUBLE_MAT2_EXT 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3_EXT
#  define GL_DOUBLE_MAT3_EXT 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4_EXT
#  define GL_DOUBLE_MAT4_EXT 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3_EXT
#  define GL_DOUBLE_MAT2x3_EXT 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4_EXT
#  define GL_DOUBLE_MAT2x4_EXT 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2_EXT
#  define GL_DOUBLE_MAT3x2_EXT 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4_EXT
#  define GL_DOUBLE_MAT3x4_EXT 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2_EXT
#  define GL_DOUBLE_MAT4x2_EXT 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3_EXT
#  define GL_DOUBLE_MAT4x3_EXT 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *params);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glVertexAttribL1dEXT
extern PFNGLUXVERTEXATTRIBL1DEXTPROC glVertexAttribL1dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dEXT
extern PFNGLUXVERTEXATTRIBL2DEXTPROC glVertexAttribL2dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dEXT
extern PFNGLUXVERTEXATTRIBL3DEXTPROC glVertexAttribL3dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dEXT
extern PFNGLUXVERTEXATTRIBL4DEXTPROC glVertexAttribL4dEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dvEXT
extern PFNGLUXVERTEXATTRIBL1DVEXTPROC glVertexAttribL1dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dvEXT
extern PFNGLUXVERTEXATTRIBL2DVEXTPROC glVertexAttribL2dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dvEXT
extern PFNGLUXVERTEXATTRIBL3DVEXTPROC glVertexAttribL3dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dvEXT
extern PFNGLUXVERTEXATTRIBL4DVEXTPROC glVertexAttribL4dvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointerEXT
extern PFNGLUXVERTEXATTRIBLPOINTEREXTPROC glVertexAttribLPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdvEXT
extern PFNGLUXGETVERTEXATTRIBLDVEXTPROC glGetVertexAttribLdvEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLOffsetEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC glVertexArrayVertexAttribLOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
