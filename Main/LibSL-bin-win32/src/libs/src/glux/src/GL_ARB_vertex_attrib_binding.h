
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:28 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_attrib_binding__
#define __GLUX_GL_ARB_vertex_attrib_binding__

GLUX_NEW_PLUGIN(GL_ARB_vertex_attrib_binding);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_BINDING
#  define GL_VERTEX_ATTRIB_BINDING 0x82D4
#endif
#ifndef GL_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#endif
#ifndef GL_VERTEX_BINDING_DIVISOR
#  define GL_VERTEX_BINDING_DIVISOR 0x82D6
#endif
#ifndef GL_VERTEX_BINDING_OFFSET
#  define GL_VERTEX_BINDING_OFFSET 0x82D7
#endif
#ifndef GL_VERTEX_BINDING_STRIDE
#  define GL_VERTEX_BINDING_STRIDE 0x82D8
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_BINDINGS
#  define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindVertexBuffer
typedef void (APIENTRYP PFNGLUXBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
typedef void (APIENTRYP PFNGLUXVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindVertexBuffer
extern PFNGLUXBINDVERTEXBUFFERPROC glBindVertexBuffer;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
extern PFNGLUXVERTEXATTRIBFORMATPROC glVertexAttribFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
extern PFNGLUXVERTEXATTRIBIFORMATPROC glVertexAttribIFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
extern PFNGLUXVERTEXATTRIBLFORMATPROC glVertexAttribLFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
extern PFNGLUXVERTEXATTRIBBINDINGPROC glVertexAttribBinding;
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
extern PFNGLUXVERTEXBINDINGDIVISORPROC glVertexBindingDivisor;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
extern PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC glVertexArrayBindVertexBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC glVertexArrayVertexAttribFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC glVertexArrayVertexAttribIFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC glVertexArrayVertexAttribLFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC glVertexArrayVertexAttribBindingEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
extern PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC glVertexArrayVertexBindingDivisorEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:47 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_attrib_binding__
#define __GLUX_GL_ARB_vertex_attrib_binding__

GLUX_NEW_PLUGIN(GL_ARB_vertex_attrib_binding);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_BINDING
#  define GL_VERTEX_ATTRIB_BINDING 0x82D4
#endif
#ifndef GL_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#endif
#ifndef GL_VERTEX_BINDING_DIVISOR
#  define GL_VERTEX_BINDING_DIVISOR 0x82D6
#endif
#ifndef GL_VERTEX_BINDING_OFFSET
#  define GL_VERTEX_BINDING_OFFSET 0x82D7
#endif
#ifndef GL_VERTEX_BINDING_STRIDE
#  define GL_VERTEX_BINDING_STRIDE 0x82D8
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_BINDINGS
#  define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindVertexBuffer
typedef void (APIENTRYP PFNGLUXBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
typedef void (APIENTRYP PFNGLUXVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindVertexBuffer
extern PFNGLUXBINDVERTEXBUFFERPROC glBindVertexBuffer;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
extern PFNGLUXVERTEXATTRIBFORMATPROC glVertexAttribFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
extern PFNGLUXVERTEXATTRIBIFORMATPROC glVertexAttribIFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
extern PFNGLUXVERTEXATTRIBLFORMATPROC glVertexAttribLFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
extern PFNGLUXVERTEXATTRIBBINDINGPROC glVertexAttribBinding;
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
extern PFNGLUXVERTEXBINDINGDIVISORPROC glVertexBindingDivisor;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
extern PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC glVertexArrayBindVertexBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC glVertexArrayVertexAttribFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC glVertexArrayVertexAttribIFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC glVertexArrayVertexAttribLFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC glVertexArrayVertexAttribBindingEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
extern PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC glVertexArrayVertexBindingDivisorEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:54 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_attrib_binding__
#define __GLUX_GL_ARB_vertex_attrib_binding__

GLUX_NEW_PLUGIN(GL_ARB_vertex_attrib_binding);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_BINDING
#  define GL_VERTEX_ATTRIB_BINDING 0x82D4
#endif
#ifndef GL_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#endif
#ifndef GL_VERTEX_BINDING_DIVISOR
#  define GL_VERTEX_BINDING_DIVISOR 0x82D6
#endif
#ifndef GL_VERTEX_BINDING_OFFSET
#  define GL_VERTEX_BINDING_OFFSET 0x82D7
#endif
#ifndef GL_VERTEX_BINDING_STRIDE
#  define GL_VERTEX_BINDING_STRIDE 0x82D8
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_BINDINGS
#  define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindVertexBuffer
typedef void (APIENTRYP PFNGLUXBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
typedef void (APIENTRYP PFNGLUXVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindVertexBuffer
extern PFNGLUXBINDVERTEXBUFFERPROC glBindVertexBuffer;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
extern PFNGLUXVERTEXATTRIBFORMATPROC glVertexAttribFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
extern PFNGLUXVERTEXATTRIBIFORMATPROC glVertexAttribIFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
extern PFNGLUXVERTEXATTRIBLFORMATPROC glVertexAttribLFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
extern PFNGLUXVERTEXATTRIBBINDINGPROC glVertexAttribBinding;
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
extern PFNGLUXVERTEXBINDINGDIVISORPROC glVertexBindingDivisor;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
extern PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC glVertexArrayBindVertexBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC glVertexArrayVertexAttribFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC glVertexArrayVertexAttribIFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC glVertexArrayVertexAttribLFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC glVertexArrayVertexAttribBindingEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
extern PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC glVertexArrayVertexBindingDivisorEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:14 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_attrib_binding__
#define __GLUX_GL_ARB_vertex_attrib_binding__

GLUX_NEW_PLUGIN(GL_ARB_vertex_attrib_binding);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_BINDING
#  define GL_VERTEX_ATTRIB_BINDING 0x82D4
#endif
#ifndef GL_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#endif
#ifndef GL_VERTEX_BINDING_DIVISOR
#  define GL_VERTEX_BINDING_DIVISOR 0x82D6
#endif
#ifndef GL_VERTEX_BINDING_OFFSET
#  define GL_VERTEX_BINDING_OFFSET 0x82D7
#endif
#ifndef GL_VERTEX_BINDING_STRIDE
#  define GL_VERTEX_BINDING_STRIDE 0x82D8
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_BINDINGS
#  define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindVertexBuffer
typedef void (APIENTRYP PFNGLUXBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
typedef void (APIENTRYP PFNGLUXVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindVertexBuffer
extern PFNGLUXBINDVERTEXBUFFERPROC glBindVertexBuffer;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
extern PFNGLUXVERTEXATTRIBFORMATPROC glVertexAttribFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
extern PFNGLUXVERTEXATTRIBIFORMATPROC glVertexAttribIFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
extern PFNGLUXVERTEXATTRIBLFORMATPROC glVertexAttribLFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
extern PFNGLUXVERTEXATTRIBBINDINGPROC glVertexAttribBinding;
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
extern PFNGLUXVERTEXBINDINGDIVISORPROC glVertexBindingDivisor;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
extern PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC glVertexArrayBindVertexBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC glVertexArrayVertexAttribFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC glVertexArrayVertexAttribIFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC glVertexArrayVertexAttribLFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC glVertexArrayVertexAttribBindingEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
extern PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC glVertexArrayVertexBindingDivisorEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:30 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_attrib_binding__
#define __GLUX_GL_ARB_vertex_attrib_binding__

GLUX_NEW_PLUGIN(GL_ARB_vertex_attrib_binding);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_BINDING
#  define GL_VERTEX_ATTRIB_BINDING 0x82D4
#endif
#ifndef GL_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#endif
#ifndef GL_VERTEX_BINDING_DIVISOR
#  define GL_VERTEX_BINDING_DIVISOR 0x82D6
#endif
#ifndef GL_VERTEX_BINDING_OFFSET
#  define GL_VERTEX_BINDING_OFFSET 0x82D7
#endif
#ifndef GL_VERTEX_BINDING_STRIDE
#  define GL_VERTEX_BINDING_STRIDE 0x82D8
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_BINDINGS
#  define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindVertexBuffer
typedef void (APIENTRYP PFNGLUXBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
typedef void (APIENTRYP PFNGLUXVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindVertexBuffer
extern PFNGLUXBINDVERTEXBUFFERPROC glBindVertexBuffer;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
extern PFNGLUXVERTEXATTRIBFORMATPROC glVertexAttribFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
extern PFNGLUXVERTEXATTRIBIFORMATPROC glVertexAttribIFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
extern PFNGLUXVERTEXATTRIBLFORMATPROC glVertexAttribLFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
extern PFNGLUXVERTEXATTRIBBINDINGPROC glVertexAttribBinding;
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
extern PFNGLUXVERTEXBINDINGDIVISORPROC glVertexBindingDivisor;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
extern PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC glVertexArrayBindVertexBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC glVertexArrayVertexAttribFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC glVertexArrayVertexAttribIFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC glVertexArrayVertexAttribLFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC glVertexArrayVertexAttribBindingEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
extern PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC glVertexArrayVertexBindingDivisorEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:33 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_attrib_binding__
#define __GLUX_GL_ARB_vertex_attrib_binding__

GLUX_NEW_PLUGIN(GL_ARB_vertex_attrib_binding);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_BINDING
#  define GL_VERTEX_ATTRIB_BINDING 0x82D4
#endif
#ifndef GL_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#endif
#ifndef GL_VERTEX_BINDING_DIVISOR
#  define GL_VERTEX_BINDING_DIVISOR 0x82D6
#endif
#ifndef GL_VERTEX_BINDING_OFFSET
#  define GL_VERTEX_BINDING_OFFSET 0x82D7
#endif
#ifndef GL_VERTEX_BINDING_STRIDE
#  define GL_VERTEX_BINDING_STRIDE 0x82D8
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_BINDINGS
#  define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindVertexBuffer
typedef void (APIENTRYP PFNGLUXBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
typedef void (APIENTRYP PFNGLUXVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindVertexBuffer
extern PFNGLUXBINDVERTEXBUFFERPROC glBindVertexBuffer;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
extern PFNGLUXVERTEXATTRIBFORMATPROC glVertexAttribFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
extern PFNGLUXVERTEXATTRIBIFORMATPROC glVertexAttribIFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
extern PFNGLUXVERTEXATTRIBLFORMATPROC glVertexAttribLFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
extern PFNGLUXVERTEXATTRIBBINDINGPROC glVertexAttribBinding;
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
extern PFNGLUXVERTEXBINDINGDIVISORPROC glVertexBindingDivisor;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
extern PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC glVertexArrayBindVertexBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC glVertexArrayVertexAttribFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC glVertexArrayVertexAttribIFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC glVertexArrayVertexAttribLFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC glVertexArrayVertexAttribBindingEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
extern PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC glVertexArrayVertexBindingDivisorEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:55 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_attrib_binding__
#define __GLUX_GL_ARB_vertex_attrib_binding__

GLUX_NEW_PLUGIN(GL_ARB_vertex_attrib_binding);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_BINDING
#  define GL_VERTEX_ATTRIB_BINDING 0x82D4
#endif
#ifndef GL_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#endif
#ifndef GL_VERTEX_BINDING_DIVISOR
#  define GL_VERTEX_BINDING_DIVISOR 0x82D6
#endif
#ifndef GL_VERTEX_BINDING_OFFSET
#  define GL_VERTEX_BINDING_OFFSET 0x82D7
#endif
#ifndef GL_VERTEX_BINDING_STRIDE
#  define GL_VERTEX_BINDING_STRIDE 0x82D8
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_BINDINGS
#  define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindVertexBuffer
typedef void (APIENTRYP PFNGLUXBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
typedef void (APIENTRYP PFNGLUXVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindVertexBuffer
extern PFNGLUXBINDVERTEXBUFFERPROC glBindVertexBuffer;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
extern PFNGLUXVERTEXATTRIBFORMATPROC glVertexAttribFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
extern PFNGLUXVERTEXATTRIBIFORMATPROC glVertexAttribIFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
extern PFNGLUXVERTEXATTRIBLFORMATPROC glVertexAttribLFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
extern PFNGLUXVERTEXATTRIBBINDINGPROC glVertexAttribBinding;
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
extern PFNGLUXVERTEXBINDINGDIVISORPROC glVertexBindingDivisor;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
extern PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC glVertexArrayBindVertexBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC glVertexArrayVertexAttribFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC glVertexArrayVertexAttribIFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC glVertexArrayVertexAttribLFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC glVertexArrayVertexAttribBindingEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
extern PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC glVertexArrayVertexBindingDivisorEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:29:07 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_attrib_binding__
#define __GLUX_GL_ARB_vertex_attrib_binding__

GLUX_NEW_PLUGIN(GL_ARB_vertex_attrib_binding);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_BINDING
#  define GL_VERTEX_ATTRIB_BINDING 0x82D4
#endif
#ifndef GL_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#endif
#ifndef GL_VERTEX_BINDING_DIVISOR
#  define GL_VERTEX_BINDING_DIVISOR 0x82D6
#endif
#ifndef GL_VERTEX_BINDING_OFFSET
#  define GL_VERTEX_BINDING_OFFSET 0x82D7
#endif
#ifndef GL_VERTEX_BINDING_STRIDE
#  define GL_VERTEX_BINDING_STRIDE 0x82D8
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_BINDINGS
#  define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindVertexBuffer
typedef void (APIENTRYP PFNGLUXBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
typedef void (APIENTRYP PFNGLUXVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindVertexBuffer
extern PFNGLUXBINDVERTEXBUFFERPROC glBindVertexBuffer;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
extern PFNGLUXVERTEXATTRIBFORMATPROC glVertexAttribFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
extern PFNGLUXVERTEXATTRIBIFORMATPROC glVertexAttribIFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
extern PFNGLUXVERTEXATTRIBLFORMATPROC glVertexAttribLFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
extern PFNGLUXVERTEXATTRIBBINDINGPROC glVertexAttribBinding;
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
extern PFNGLUXVERTEXBINDINGDIVISORPROC glVertexBindingDivisor;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
extern PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC glVertexArrayBindVertexBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC glVertexArrayVertexAttribFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC glVertexArrayVertexAttribIFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC glVertexArrayVertexAttribLFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC glVertexArrayVertexAttribBindingEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
extern PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC glVertexArrayVertexBindingDivisorEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:17:07 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_attrib_binding__
#define __GLUX_GL_ARB_vertex_attrib_binding__

GLUX_NEW_PLUGIN(GL_ARB_vertex_attrib_binding);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_BINDING
#  define GL_VERTEX_ATTRIB_BINDING 0x82D4
#endif
#ifndef GL_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#endif
#ifndef GL_VERTEX_BINDING_DIVISOR
#  define GL_VERTEX_BINDING_DIVISOR 0x82D6
#endif
#ifndef GL_VERTEX_BINDING_OFFSET
#  define GL_VERTEX_BINDING_OFFSET 0x82D7
#endif
#ifndef GL_VERTEX_BINDING_STRIDE
#  define GL_VERTEX_BINDING_STRIDE 0x82D8
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_BINDINGS
#  define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindVertexBuffer
typedef void (APIENTRYP PFNGLUXBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
typedef void (APIENTRYP PFNGLUXVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindVertexBuffer
extern PFNGLUXBINDVERTEXBUFFERPROC glBindVertexBuffer;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
extern PFNGLUXVERTEXATTRIBFORMATPROC glVertexAttribFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
extern PFNGLUXVERTEXATTRIBIFORMATPROC glVertexAttribIFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
extern PFNGLUXVERTEXATTRIBLFORMATPROC glVertexAttribLFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
extern PFNGLUXVERTEXATTRIBBINDINGPROC glVertexAttribBinding;
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
extern PFNGLUXVERTEXBINDINGDIVISORPROC glVertexBindingDivisor;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
extern PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC glVertexArrayBindVertexBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC glVertexArrayVertexAttribFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC glVertexArrayVertexAttribIFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC glVertexArrayVertexAttribLFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC glVertexArrayVertexAttribBindingEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
extern PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC glVertexArrayVertexBindingDivisorEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_attrib_binding__
#define __GLUX_GL_ARB_vertex_attrib_binding__

GLUX_NEW_PLUGIN(GL_ARB_vertex_attrib_binding);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_BINDING
#  define GL_VERTEX_ATTRIB_BINDING 0x82D4
#endif
#ifndef GL_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#endif
#ifndef GL_VERTEX_BINDING_DIVISOR
#  define GL_VERTEX_BINDING_DIVISOR 0x82D6
#endif
#ifndef GL_VERTEX_BINDING_OFFSET
#  define GL_VERTEX_BINDING_OFFSET 0x82D7
#endif
#ifndef GL_VERTEX_BINDING_STRIDE
#  define GL_VERTEX_BINDING_STRIDE 0x82D8
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_BINDINGS
#  define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindVertexBuffer
typedef void (APIENTRYP PFNGLUXBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
typedef void (APIENTRYP PFNGLUXVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindVertexBuffer
extern PFNGLUXBINDVERTEXBUFFERPROC glBindVertexBuffer;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
extern PFNGLUXVERTEXATTRIBFORMATPROC glVertexAttribFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
extern PFNGLUXVERTEXATTRIBIFORMATPROC glVertexAttribIFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
extern PFNGLUXVERTEXATTRIBLFORMATPROC glVertexAttribLFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
extern PFNGLUXVERTEXATTRIBBINDINGPROC glVertexAttribBinding;
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
extern PFNGLUXVERTEXBINDINGDIVISORPROC glVertexBindingDivisor;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
extern PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC glVertexArrayBindVertexBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC glVertexArrayVertexAttribFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC glVertexArrayVertexAttribIFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC glVertexArrayVertexAttribLFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC glVertexArrayVertexAttribBindingEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
extern PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC glVertexArrayVertexBindingDivisorEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:21 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_attrib_binding__
#define __GLUX_GL_ARB_vertex_attrib_binding__

GLUX_NEW_PLUGIN(GL_ARB_vertex_attrib_binding);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_BINDING
#  define GL_VERTEX_ATTRIB_BINDING 0x82D4
#endif
#ifndef GL_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#endif
#ifndef GL_VERTEX_BINDING_DIVISOR
#  define GL_VERTEX_BINDING_DIVISOR 0x82D6
#endif
#ifndef GL_VERTEX_BINDING_OFFSET
#  define GL_VERTEX_BINDING_OFFSET 0x82D7
#endif
#ifndef GL_VERTEX_BINDING_STRIDE
#  define GL_VERTEX_BINDING_STRIDE 0x82D8
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_BINDINGS
#  define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindVertexBuffer
typedef void (APIENTRYP PFNGLUXBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
typedef void (APIENTRYP PFNGLUXVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindVertexBuffer
extern PFNGLUXBINDVERTEXBUFFERPROC glBindVertexBuffer;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
extern PFNGLUXVERTEXATTRIBFORMATPROC glVertexAttribFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
extern PFNGLUXVERTEXATTRIBIFORMATPROC glVertexAttribIFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
extern PFNGLUXVERTEXATTRIBLFORMATPROC glVertexAttribLFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
extern PFNGLUXVERTEXATTRIBBINDINGPROC glVertexAttribBinding;
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
extern PFNGLUXVERTEXBINDINGDIVISORPROC glVertexBindingDivisor;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
extern PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC glVertexArrayBindVertexBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC glVertexArrayVertexAttribFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC glVertexArrayVertexAttribIFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC glVertexArrayVertexAttribLFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC glVertexArrayVertexAttribBindingEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
extern PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC glVertexArrayVertexBindingDivisorEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:02 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_attrib_binding__
#define __GLUX_GL_ARB_vertex_attrib_binding__

GLUX_NEW_PLUGIN(GL_ARB_vertex_attrib_binding);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_BINDING
#  define GL_VERTEX_ATTRIB_BINDING 0x82D4
#endif
#ifndef GL_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#endif
#ifndef GL_VERTEX_BINDING_DIVISOR
#  define GL_VERTEX_BINDING_DIVISOR 0x82D6
#endif
#ifndef GL_VERTEX_BINDING_OFFSET
#  define GL_VERTEX_BINDING_OFFSET 0x82D7
#endif
#ifndef GL_VERTEX_BINDING_STRIDE
#  define GL_VERTEX_BINDING_STRIDE 0x82D8
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_BINDINGS
#  define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindVertexBuffer
typedef void (APIENTRYP PFNGLUXBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
typedef void (APIENTRYP PFNGLUXVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindVertexBuffer
extern PFNGLUXBINDVERTEXBUFFERPROC glBindVertexBuffer;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
extern PFNGLUXVERTEXATTRIBFORMATPROC glVertexAttribFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
extern PFNGLUXVERTEXATTRIBIFORMATPROC glVertexAttribIFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
extern PFNGLUXVERTEXATTRIBLFORMATPROC glVertexAttribLFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
extern PFNGLUXVERTEXATTRIBBINDINGPROC glVertexAttribBinding;
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
extern PFNGLUXVERTEXBINDINGDIVISORPROC glVertexBindingDivisor;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
extern PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC glVertexArrayBindVertexBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC glVertexArrayVertexAttribFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC glVertexArrayVertexAttribIFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC glVertexArrayVertexAttribLFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC glVertexArrayVertexAttribBindingEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
extern PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC glVertexArrayVertexBindingDivisorEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:09 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_attrib_binding__
#define __GLUX_GL_ARB_vertex_attrib_binding__

GLUX_NEW_PLUGIN(GL_ARB_vertex_attrib_binding);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_BINDING
#  define GL_VERTEX_ATTRIB_BINDING 0x82D4
#endif
#ifndef GL_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#endif
#ifndef GL_VERTEX_BINDING_DIVISOR
#  define GL_VERTEX_BINDING_DIVISOR 0x82D6
#endif
#ifndef GL_VERTEX_BINDING_OFFSET
#  define GL_VERTEX_BINDING_OFFSET 0x82D7
#endif
#ifndef GL_VERTEX_BINDING_STRIDE
#  define GL_VERTEX_BINDING_STRIDE 0x82D8
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_BINDINGS
#  define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindVertexBuffer
typedef void (APIENTRYP PFNGLUXBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
typedef void (APIENTRYP PFNGLUXVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindVertexBuffer
extern PFNGLUXBINDVERTEXBUFFERPROC glBindVertexBuffer;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
extern PFNGLUXVERTEXATTRIBFORMATPROC glVertexAttribFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
extern PFNGLUXVERTEXATTRIBIFORMATPROC glVertexAttribIFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
extern PFNGLUXVERTEXATTRIBLFORMATPROC glVertexAttribLFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
extern PFNGLUXVERTEXATTRIBBINDINGPROC glVertexAttribBinding;
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
extern PFNGLUXVERTEXBINDINGDIVISORPROC glVertexBindingDivisor;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
extern PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC glVertexArrayBindVertexBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC glVertexArrayVertexAttribFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC glVertexArrayVertexAttribIFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC glVertexArrayVertexAttribLFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC glVertexArrayVertexAttribBindingEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
extern PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC glVertexArrayVertexBindingDivisorEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:24 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_attrib_binding__
#define __GLUX_GL_ARB_vertex_attrib_binding__

GLUX_NEW_PLUGIN(GL_ARB_vertex_attrib_binding);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_BINDING
#  define GL_VERTEX_ATTRIB_BINDING 0x82D4
#endif
#ifndef GL_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#endif
#ifndef GL_VERTEX_BINDING_DIVISOR
#  define GL_VERTEX_BINDING_DIVISOR 0x82D6
#endif
#ifndef GL_VERTEX_BINDING_OFFSET
#  define GL_VERTEX_BINDING_OFFSET 0x82D7
#endif
#ifndef GL_VERTEX_BINDING_STRIDE
#  define GL_VERTEX_BINDING_STRIDE 0x82D8
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_BINDINGS
#  define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindVertexBuffer
typedef void (APIENTRYP PFNGLUXBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
typedef void (APIENTRYP PFNGLUXVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindVertexBuffer
extern PFNGLUXBINDVERTEXBUFFERPROC glBindVertexBuffer;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
extern PFNGLUXVERTEXATTRIBFORMATPROC glVertexAttribFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
extern PFNGLUXVERTEXATTRIBIFORMATPROC glVertexAttribIFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
extern PFNGLUXVERTEXATTRIBLFORMATPROC glVertexAttribLFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
extern PFNGLUXVERTEXATTRIBBINDINGPROC glVertexAttribBinding;
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
extern PFNGLUXVERTEXBINDINGDIVISORPROC glVertexBindingDivisor;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
extern PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC glVertexArrayBindVertexBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC glVertexArrayVertexAttribFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC glVertexArrayVertexAttribIFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC glVertexArrayVertexAttribLFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC glVertexArrayVertexAttribBindingEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
extern PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC glVertexArrayVertexBindingDivisorEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:52:06 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_attrib_binding__
#define __GLUX_GL_ARB_vertex_attrib_binding__

GLUX_NEW_PLUGIN(GL_ARB_vertex_attrib_binding);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_BINDING
#  define GL_VERTEX_ATTRIB_BINDING 0x82D4
#endif
#ifndef GL_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#endif
#ifndef GL_VERTEX_BINDING_DIVISOR
#  define GL_VERTEX_BINDING_DIVISOR 0x82D6
#endif
#ifndef GL_VERTEX_BINDING_OFFSET
#  define GL_VERTEX_BINDING_OFFSET 0x82D7
#endif
#ifndef GL_VERTEX_BINDING_STRIDE
#  define GL_VERTEX_BINDING_STRIDE 0x82D8
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_BINDINGS
#  define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindVertexBuffer
typedef void (APIENTRYP PFNGLUXBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
typedef void (APIENTRYP PFNGLUXVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindVertexBuffer
extern PFNGLUXBINDVERTEXBUFFERPROC glBindVertexBuffer;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
extern PFNGLUXVERTEXATTRIBFORMATPROC glVertexAttribFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
extern PFNGLUXVERTEXATTRIBIFORMATPROC glVertexAttribIFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
extern PFNGLUXVERTEXATTRIBLFORMATPROC glVertexAttribLFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
extern PFNGLUXVERTEXATTRIBBINDINGPROC glVertexAttribBinding;
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
extern PFNGLUXVERTEXBINDINGDIVISORPROC glVertexBindingDivisor;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
extern PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC glVertexArrayBindVertexBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC glVertexArrayVertexAttribFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC glVertexArrayVertexAttribIFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC glVertexArrayVertexAttribLFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC glVertexArrayVertexAttribBindingEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
extern PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC glVertexArrayVertexBindingDivisorEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_attrib_binding__
#define __GLUX_GL_ARB_vertex_attrib_binding__

GLUX_NEW_PLUGIN(GL_ARB_vertex_attrib_binding);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_BINDING
#  define GL_VERTEX_ATTRIB_BINDING 0x82D4
#endif
#ifndef GL_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#endif
#ifndef GL_VERTEX_BINDING_DIVISOR
#  define GL_VERTEX_BINDING_DIVISOR 0x82D6
#endif
#ifndef GL_VERTEX_BINDING_OFFSET
#  define GL_VERTEX_BINDING_OFFSET 0x82D7
#endif
#ifndef GL_VERTEX_BINDING_STRIDE
#  define GL_VERTEX_BINDING_STRIDE 0x82D8
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_BINDINGS
#  define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindVertexBuffer
typedef void (APIENTRYP PFNGLUXBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
typedef void (APIENTRYP PFNGLUXVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindVertexBuffer
extern PFNGLUXBINDVERTEXBUFFERPROC glBindVertexBuffer;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
extern PFNGLUXVERTEXATTRIBFORMATPROC glVertexAttribFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
extern PFNGLUXVERTEXATTRIBIFORMATPROC glVertexAttribIFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
extern PFNGLUXVERTEXATTRIBLFORMATPROC glVertexAttribLFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
extern PFNGLUXVERTEXATTRIBBINDINGPROC glVertexAttribBinding;
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
extern PFNGLUXVERTEXBINDINGDIVISORPROC glVertexBindingDivisor;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
extern PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC glVertexArrayBindVertexBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC glVertexArrayVertexAttribFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC glVertexArrayVertexAttribIFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC glVertexArrayVertexAttribLFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC glVertexArrayVertexAttribBindingEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
extern PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC glVertexArrayVertexBindingDivisorEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:07 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_attrib_binding__
#define __GLUX_GL_ARB_vertex_attrib_binding__

GLUX_NEW_PLUGIN(GL_ARB_vertex_attrib_binding);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_BINDING
#  define GL_VERTEX_ATTRIB_BINDING 0x82D4
#endif
#ifndef GL_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#endif
#ifndef GL_VERTEX_BINDING_DIVISOR
#  define GL_VERTEX_BINDING_DIVISOR 0x82D6
#endif
#ifndef GL_VERTEX_BINDING_OFFSET
#  define GL_VERTEX_BINDING_OFFSET 0x82D7
#endif
#ifndef GL_VERTEX_BINDING_STRIDE
#  define GL_VERTEX_BINDING_STRIDE 0x82D8
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_BINDINGS
#  define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindVertexBuffer
typedef void (APIENTRYP PFNGLUXBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
typedef void (APIENTRYP PFNGLUXVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindVertexBuffer
extern PFNGLUXBINDVERTEXBUFFERPROC glBindVertexBuffer;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
extern PFNGLUXVERTEXATTRIBFORMATPROC glVertexAttribFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
extern PFNGLUXVERTEXATTRIBIFORMATPROC glVertexAttribIFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
extern PFNGLUXVERTEXATTRIBLFORMATPROC glVertexAttribLFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
extern PFNGLUXVERTEXATTRIBBINDINGPROC glVertexAttribBinding;
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
extern PFNGLUXVERTEXBINDINGDIVISORPROC glVertexBindingDivisor;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
extern PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC glVertexArrayBindVertexBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC glVertexArrayVertexAttribFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC glVertexArrayVertexAttribIFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC glVertexArrayVertexAttribLFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC glVertexArrayVertexAttribBindingEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
extern PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC glVertexArrayVertexBindingDivisorEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:28 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_attrib_binding__
#define __GLUX_GL_ARB_vertex_attrib_binding__

GLUX_NEW_PLUGIN(GL_ARB_vertex_attrib_binding);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_BINDING
#  define GL_VERTEX_ATTRIB_BINDING 0x82D4
#endif
#ifndef GL_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#endif
#ifndef GL_VERTEX_BINDING_DIVISOR
#  define GL_VERTEX_BINDING_DIVISOR 0x82D6
#endif
#ifndef GL_VERTEX_BINDING_OFFSET
#  define GL_VERTEX_BINDING_OFFSET 0x82D7
#endif
#ifndef GL_VERTEX_BINDING_STRIDE
#  define GL_VERTEX_BINDING_STRIDE 0x82D8
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_BINDINGS
#  define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindVertexBuffer
typedef void (APIENTRYP PFNGLUXBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
typedef void (APIENTRYP PFNGLUXVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindVertexBuffer
extern PFNGLUXBINDVERTEXBUFFERPROC glBindVertexBuffer;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
extern PFNGLUXVERTEXATTRIBFORMATPROC glVertexAttribFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
extern PFNGLUXVERTEXATTRIBIFORMATPROC glVertexAttribIFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
extern PFNGLUXVERTEXATTRIBLFORMATPROC glVertexAttribLFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
extern PFNGLUXVERTEXATTRIBBINDINGPROC glVertexAttribBinding;
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
extern PFNGLUXVERTEXBINDINGDIVISORPROC glVertexBindingDivisor;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
extern PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC glVertexArrayBindVertexBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC glVertexArrayVertexAttribFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC glVertexArrayVertexAttribIFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC glVertexArrayVertexAttribLFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC glVertexArrayVertexAttribBindingEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
extern PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC glVertexArrayVertexBindingDivisorEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_attrib_binding__
#define __GLUX_GL_ARB_vertex_attrib_binding__

GLUX_NEW_PLUGIN(GL_ARB_vertex_attrib_binding);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_BINDING
#  define GL_VERTEX_ATTRIB_BINDING 0x82D4
#endif
#ifndef GL_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#endif
#ifndef GL_VERTEX_BINDING_DIVISOR
#  define GL_VERTEX_BINDING_DIVISOR 0x82D6
#endif
#ifndef GL_VERTEX_BINDING_OFFSET
#  define GL_VERTEX_BINDING_OFFSET 0x82D7
#endif
#ifndef GL_VERTEX_BINDING_STRIDE
#  define GL_VERTEX_BINDING_STRIDE 0x82D8
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_BINDINGS
#  define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindVertexBuffer
typedef void (APIENTRYP PFNGLUXBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
typedef void (APIENTRYP PFNGLUXVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindVertexBuffer
extern PFNGLUXBINDVERTEXBUFFERPROC glBindVertexBuffer;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
extern PFNGLUXVERTEXATTRIBFORMATPROC glVertexAttribFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
extern PFNGLUXVERTEXATTRIBIFORMATPROC glVertexAttribIFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
extern PFNGLUXVERTEXATTRIBLFORMATPROC glVertexAttribLFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
extern PFNGLUXVERTEXATTRIBBINDINGPROC glVertexAttribBinding;
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
extern PFNGLUXVERTEXBINDINGDIVISORPROC glVertexBindingDivisor;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
extern PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC glVertexArrayBindVertexBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC glVertexArrayVertexAttribFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC glVertexArrayVertexAttribIFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC glVertexArrayVertexAttribLFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC glVertexArrayVertexAttribBindingEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
extern PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC glVertexArrayVertexBindingDivisorEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:42:02 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_attrib_binding__
#define __GLUX_GL_ARB_vertex_attrib_binding__

GLUX_NEW_PLUGIN(GL_ARB_vertex_attrib_binding);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_BINDING
#  define GL_VERTEX_ATTRIB_BINDING 0x82D4
#endif
#ifndef GL_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#endif
#ifndef GL_VERTEX_BINDING_DIVISOR
#  define GL_VERTEX_BINDING_DIVISOR 0x82D6
#endif
#ifndef GL_VERTEX_BINDING_OFFSET
#  define GL_VERTEX_BINDING_OFFSET 0x82D7
#endif
#ifndef GL_VERTEX_BINDING_STRIDE
#  define GL_VERTEX_BINDING_STRIDE 0x82D8
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_BINDINGS
#  define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindVertexBuffer
typedef void (APIENTRYP PFNGLUXBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
typedef void (APIENTRYP PFNGLUXVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindVertexBuffer
extern PFNGLUXBINDVERTEXBUFFERPROC glBindVertexBuffer;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
extern PFNGLUXVERTEXATTRIBFORMATPROC glVertexAttribFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
extern PFNGLUXVERTEXATTRIBIFORMATPROC glVertexAttribIFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
extern PFNGLUXVERTEXATTRIBLFORMATPROC glVertexAttribLFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
extern PFNGLUXVERTEXATTRIBBINDINGPROC glVertexAttribBinding;
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
extern PFNGLUXVERTEXBINDINGDIVISORPROC glVertexBindingDivisor;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
extern PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC glVertexArrayBindVertexBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC glVertexArrayVertexAttribFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC glVertexArrayVertexAttribIFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC glVertexArrayVertexAttribLFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC glVertexArrayVertexAttribBindingEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
extern PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC glVertexArrayVertexBindingDivisorEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:42 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_attrib_binding__
#define __GLUX_GL_ARB_vertex_attrib_binding__

GLUX_NEW_PLUGIN(GL_ARB_vertex_attrib_binding);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_BINDING
#  define GL_VERTEX_ATTRIB_BINDING 0x82D4
#endif
#ifndef GL_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#endif
#ifndef GL_VERTEX_BINDING_DIVISOR
#  define GL_VERTEX_BINDING_DIVISOR 0x82D6
#endif
#ifndef GL_VERTEX_BINDING_OFFSET
#  define GL_VERTEX_BINDING_OFFSET 0x82D7
#endif
#ifndef GL_VERTEX_BINDING_STRIDE
#  define GL_VERTEX_BINDING_STRIDE 0x82D8
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_BINDINGS
#  define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindVertexBuffer
typedef void (APIENTRYP PFNGLUXBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
typedef void (APIENTRYP PFNGLUXVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindVertexBuffer
extern PFNGLUXBINDVERTEXBUFFERPROC glBindVertexBuffer;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
extern PFNGLUXVERTEXATTRIBFORMATPROC glVertexAttribFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
extern PFNGLUXVERTEXATTRIBIFORMATPROC glVertexAttribIFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
extern PFNGLUXVERTEXATTRIBLFORMATPROC glVertexAttribLFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
extern PFNGLUXVERTEXATTRIBBINDINGPROC glVertexAttribBinding;
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
extern PFNGLUXVERTEXBINDINGDIVISORPROC glVertexBindingDivisor;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
extern PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC glVertexArrayBindVertexBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC glVertexArrayVertexAttribFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC glVertexArrayVertexAttribIFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC glVertexArrayVertexAttribLFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC glVertexArrayVertexAttribBindingEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
extern PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC glVertexArrayVertexBindingDivisorEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:10:01 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_attrib_binding__
#define __GLUX_GL_ARB_vertex_attrib_binding__

GLUX_NEW_PLUGIN(GL_ARB_vertex_attrib_binding);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_BINDING
#  define GL_VERTEX_ATTRIB_BINDING 0x82D4
#endif
#ifndef GL_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#endif
#ifndef GL_VERTEX_BINDING_DIVISOR
#  define GL_VERTEX_BINDING_DIVISOR 0x82D6
#endif
#ifndef GL_VERTEX_BINDING_OFFSET
#  define GL_VERTEX_BINDING_OFFSET 0x82D7
#endif
#ifndef GL_VERTEX_BINDING_STRIDE
#  define GL_VERTEX_BINDING_STRIDE 0x82D8
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_BINDINGS
#  define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindVertexBuffer
typedef void (APIENTRYP PFNGLUXBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
typedef void (APIENTRYP PFNGLUXVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindVertexBuffer
extern PFNGLUXBINDVERTEXBUFFERPROC glBindVertexBuffer;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
extern PFNGLUXVERTEXATTRIBFORMATPROC glVertexAttribFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
extern PFNGLUXVERTEXATTRIBIFORMATPROC glVertexAttribIFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
extern PFNGLUXVERTEXATTRIBLFORMATPROC glVertexAttribLFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
extern PFNGLUXVERTEXATTRIBBINDINGPROC glVertexAttribBinding;
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
extern PFNGLUXVERTEXBINDINGDIVISORPROC glVertexBindingDivisor;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
extern PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC glVertexArrayBindVertexBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC glVertexArrayVertexAttribFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC glVertexArrayVertexAttribIFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC glVertexArrayVertexAttribLFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC glVertexArrayVertexAttribBindingEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
extern PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC glVertexArrayVertexBindingDivisorEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:20:02 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_attrib_binding__
#define __GLUX_GL_ARB_vertex_attrib_binding__

GLUX_NEW_PLUGIN(GL_ARB_vertex_attrib_binding);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_BINDING
#  define GL_VERTEX_ATTRIB_BINDING 0x82D4
#endif
#ifndef GL_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#endif
#ifndef GL_VERTEX_BINDING_DIVISOR
#  define GL_VERTEX_BINDING_DIVISOR 0x82D6
#endif
#ifndef GL_VERTEX_BINDING_OFFSET
#  define GL_VERTEX_BINDING_OFFSET 0x82D7
#endif
#ifndef GL_VERTEX_BINDING_STRIDE
#  define GL_VERTEX_BINDING_STRIDE 0x82D8
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_BINDINGS
#  define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindVertexBuffer
typedef void (APIENTRYP PFNGLUXBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
typedef void (APIENTRYP PFNGLUXVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindVertexBuffer
extern PFNGLUXBINDVERTEXBUFFERPROC glBindVertexBuffer;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
extern PFNGLUXVERTEXATTRIBFORMATPROC glVertexAttribFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
extern PFNGLUXVERTEXATTRIBIFORMATPROC glVertexAttribIFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
extern PFNGLUXVERTEXATTRIBLFORMATPROC glVertexAttribLFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
extern PFNGLUXVERTEXATTRIBBINDINGPROC glVertexAttribBinding;
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
extern PFNGLUXVERTEXBINDINGDIVISORPROC glVertexBindingDivisor;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
extern PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC glVertexArrayBindVertexBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC glVertexArrayVertexAttribFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC glVertexArrayVertexAttribIFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC glVertexArrayVertexAttribLFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC glVertexArrayVertexAttribBindingEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
extern PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC glVertexArrayVertexBindingDivisorEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:43:03 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_vertex_attrib_binding__
#define __GLUX_GL_ARB_vertex_attrib_binding__

GLUX_NEW_PLUGIN(GL_ARB_vertex_attrib_binding)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_BINDING
#  define GL_VERTEX_ATTRIB_BINDING 0x82D4
#endif
#ifndef GL_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#endif
#ifndef GL_VERTEX_BINDING_DIVISOR
#  define GL_VERTEX_BINDING_DIVISOR 0x82D6
#endif
#ifndef GL_VERTEX_BINDING_OFFSET
#  define GL_VERTEX_BINDING_OFFSET 0x82D7
#endif
#ifndef GL_VERTEX_BINDING_STRIDE
#  define GL_VERTEX_BINDING_STRIDE 0x82D8
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
#  define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#endif
#ifndef GL_MAX_VERTEX_ATTRIB_BINDINGS
#  define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindVertexBuffer
typedef void (APIENTRYP PFNGLUXBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
typedef void (APIENTRYP PFNGLUXVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindVertexBuffer
extern PFNGLUXBINDVERTEXBUFFERPROC glBindVertexBuffer;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormat
extern PFNGLUXVERTEXATTRIBFORMATPROC glVertexAttribFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormat
extern PFNGLUXVERTEXATTRIBIFORMATPROC glVertexAttribIFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLFormat
extern PFNGLUXVERTEXATTRIBLFORMATPROC glVertexAttribLFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribBinding
extern PFNGLUXVERTEXATTRIBBINDINGPROC glVertexAttribBinding;
#endif
#ifndef __GLUX__GLFCT_glVertexBindingDivisor
extern PFNGLUXVERTEXBINDINGDIVISORPROC glVertexBindingDivisor;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindVertexBufferEXT
extern PFNGLUXVERTEXARRAYBINDVERTEXBUFFEREXTPROC glVertexArrayBindVertexBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBFORMATEXTPROC glVertexArrayVertexAttribFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribIFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC glVertexArrayVertexAttribIFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribLFormatEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC glVertexArrayVertexAttribLFormatEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexAttribBindingEXT
extern PFNGLUXVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC glVertexArrayVertexAttribBindingEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBindingDivisorEXT
extern PFNGLUXVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC glVertexArrayVertexBindingDivisorEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
