
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:28 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_gpu_shader_fp64__
#define __GLUX_GL_ARB_gpu_shader_fp64__

GLUX_NEW_PLUGIN(GL_ARB_gpu_shader_fp64);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2
#  define GL_DOUBLE_VEC2 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3
#  define GL_DOUBLE_VEC3 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4
#  define GL_DOUBLE_VEC4 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2
#  define GL_DOUBLE_MAT2 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3
#  define GL_DOUBLE_MAT3 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4
#  define GL_DOUBLE_MAT4 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3
#  define GL_DOUBLE_MAT2x3 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4
#  define GL_DOUBLE_MAT2x4 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2
#  define GL_DOUBLE_MAT3x2 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4
#  define GL_DOUBLE_MAT3x4 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2
#  define GL_DOUBLE_MAT4x2 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3
#  define GL_DOUBLE_MAT4x3 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniform1d
typedef void (APIENTRYP PFNGLUXUNIFORM1DPROC) (GLint location, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glUniform2d
typedef void (APIENTRYP PFNGLUXUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glUniform3d
typedef void (APIENTRYP PFNGLUXUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glUniform4d
typedef void (APIENTRYP PFNGLUXUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
typedef void (APIENTRYP PFNGLUXUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
typedef void (APIENTRYP PFNGLUXUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
typedef void (APIENTRYP PFNGLUXUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
typedef void (APIENTRYP PFNGLUXUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
typedef void (APIENTRYP PFNGLUXGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniform1d
extern PFNGLUXUNIFORM1DPROC glUniform1d;
#endif
#ifndef __GLUX__GLFCT_glUniform2d
extern PFNGLUXUNIFORM2DPROC glUniform2d;
#endif
#ifndef __GLUX__GLFCT_glUniform3d
extern PFNGLUXUNIFORM3DPROC glUniform3d;
#endif
#ifndef __GLUX__GLFCT_glUniform4d
extern PFNGLUXUNIFORM4DPROC glUniform4d;
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
extern PFNGLUXUNIFORM1DVPROC glUniform1dv;
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
extern PFNGLUXUNIFORM2DVPROC glUniform2dv;
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
extern PFNGLUXUNIFORM3DVPROC glUniform3dv;
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
extern PFNGLUXUNIFORM4DVPROC glUniform4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
extern PFNGLUXUNIFORMMATRIX2DVPROC glUniformMatrix2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
extern PFNGLUXUNIFORMMATRIX3DVPROC glUniformMatrix3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
extern PFNGLUXUNIFORMMATRIX4DVPROC glUniformMatrix4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
extern PFNGLUXUNIFORMMATRIX2X3DVPROC glUniformMatrix2x3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
extern PFNGLUXUNIFORMMATRIX2X4DVPROC glUniformMatrix2x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
extern PFNGLUXUNIFORMMATRIX3X2DVPROC glUniformMatrix3x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
extern PFNGLUXUNIFORMMATRIX3X4DVPROC glUniformMatrix3x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
extern PFNGLUXUNIFORMMATRIX4X2DVPROC glUniformMatrix4x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
extern PFNGLUXUNIFORMMATRIX4X3DVPROC glUniformMatrix4x3dv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
extern PFNGLUXGETUNIFORMDVPROC glGetUniformdv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:47 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_gpu_shader_fp64__
#define __GLUX_GL_ARB_gpu_shader_fp64__

GLUX_NEW_PLUGIN(GL_ARB_gpu_shader_fp64);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2
#  define GL_DOUBLE_VEC2 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3
#  define GL_DOUBLE_VEC3 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4
#  define GL_DOUBLE_VEC4 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2
#  define GL_DOUBLE_MAT2 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3
#  define GL_DOUBLE_MAT3 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4
#  define GL_DOUBLE_MAT4 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3
#  define GL_DOUBLE_MAT2x3 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4
#  define GL_DOUBLE_MAT2x4 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2
#  define GL_DOUBLE_MAT3x2 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4
#  define GL_DOUBLE_MAT3x4 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2
#  define GL_DOUBLE_MAT4x2 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3
#  define GL_DOUBLE_MAT4x3 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniform1d
typedef void (APIENTRYP PFNGLUXUNIFORM1DPROC) (GLint location, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glUniform2d
typedef void (APIENTRYP PFNGLUXUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glUniform3d
typedef void (APIENTRYP PFNGLUXUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glUniform4d
typedef void (APIENTRYP PFNGLUXUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
typedef void (APIENTRYP PFNGLUXUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
typedef void (APIENTRYP PFNGLUXUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
typedef void (APIENTRYP PFNGLUXUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
typedef void (APIENTRYP PFNGLUXUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
typedef void (APIENTRYP PFNGLUXGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniform1d
extern PFNGLUXUNIFORM1DPROC glUniform1d;
#endif
#ifndef __GLUX__GLFCT_glUniform2d
extern PFNGLUXUNIFORM2DPROC glUniform2d;
#endif
#ifndef __GLUX__GLFCT_glUniform3d
extern PFNGLUXUNIFORM3DPROC glUniform3d;
#endif
#ifndef __GLUX__GLFCT_glUniform4d
extern PFNGLUXUNIFORM4DPROC glUniform4d;
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
extern PFNGLUXUNIFORM1DVPROC glUniform1dv;
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
extern PFNGLUXUNIFORM2DVPROC glUniform2dv;
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
extern PFNGLUXUNIFORM3DVPROC glUniform3dv;
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
extern PFNGLUXUNIFORM4DVPROC glUniform4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
extern PFNGLUXUNIFORMMATRIX2DVPROC glUniformMatrix2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
extern PFNGLUXUNIFORMMATRIX3DVPROC glUniformMatrix3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
extern PFNGLUXUNIFORMMATRIX4DVPROC glUniformMatrix4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
extern PFNGLUXUNIFORMMATRIX2X3DVPROC glUniformMatrix2x3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
extern PFNGLUXUNIFORMMATRIX2X4DVPROC glUniformMatrix2x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
extern PFNGLUXUNIFORMMATRIX3X2DVPROC glUniformMatrix3x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
extern PFNGLUXUNIFORMMATRIX3X4DVPROC glUniformMatrix3x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
extern PFNGLUXUNIFORMMATRIX4X2DVPROC glUniformMatrix4x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
extern PFNGLUXUNIFORMMATRIX4X3DVPROC glUniformMatrix4x3dv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
extern PFNGLUXGETUNIFORMDVPROC glGetUniformdv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:54 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_gpu_shader_fp64__
#define __GLUX_GL_ARB_gpu_shader_fp64__

GLUX_NEW_PLUGIN(GL_ARB_gpu_shader_fp64);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2
#  define GL_DOUBLE_VEC2 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3
#  define GL_DOUBLE_VEC3 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4
#  define GL_DOUBLE_VEC4 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2
#  define GL_DOUBLE_MAT2 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3
#  define GL_DOUBLE_MAT3 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4
#  define GL_DOUBLE_MAT4 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3
#  define GL_DOUBLE_MAT2x3 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4
#  define GL_DOUBLE_MAT2x4 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2
#  define GL_DOUBLE_MAT3x2 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4
#  define GL_DOUBLE_MAT3x4 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2
#  define GL_DOUBLE_MAT4x2 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3
#  define GL_DOUBLE_MAT4x3 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniform1d
typedef void (APIENTRYP PFNGLUXUNIFORM1DPROC) (GLint location, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glUniform2d
typedef void (APIENTRYP PFNGLUXUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glUniform3d
typedef void (APIENTRYP PFNGLUXUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glUniform4d
typedef void (APIENTRYP PFNGLUXUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
typedef void (APIENTRYP PFNGLUXUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
typedef void (APIENTRYP PFNGLUXUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
typedef void (APIENTRYP PFNGLUXUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
typedef void (APIENTRYP PFNGLUXUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
typedef void (APIENTRYP PFNGLUXGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniform1d
extern PFNGLUXUNIFORM1DPROC glUniform1d;
#endif
#ifndef __GLUX__GLFCT_glUniform2d
extern PFNGLUXUNIFORM2DPROC glUniform2d;
#endif
#ifndef __GLUX__GLFCT_glUniform3d
extern PFNGLUXUNIFORM3DPROC glUniform3d;
#endif
#ifndef __GLUX__GLFCT_glUniform4d
extern PFNGLUXUNIFORM4DPROC glUniform4d;
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
extern PFNGLUXUNIFORM1DVPROC glUniform1dv;
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
extern PFNGLUXUNIFORM2DVPROC glUniform2dv;
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
extern PFNGLUXUNIFORM3DVPROC glUniform3dv;
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
extern PFNGLUXUNIFORM4DVPROC glUniform4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
extern PFNGLUXUNIFORMMATRIX2DVPROC glUniformMatrix2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
extern PFNGLUXUNIFORMMATRIX3DVPROC glUniformMatrix3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
extern PFNGLUXUNIFORMMATRIX4DVPROC glUniformMatrix4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
extern PFNGLUXUNIFORMMATRIX2X3DVPROC glUniformMatrix2x3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
extern PFNGLUXUNIFORMMATRIX2X4DVPROC glUniformMatrix2x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
extern PFNGLUXUNIFORMMATRIX3X2DVPROC glUniformMatrix3x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
extern PFNGLUXUNIFORMMATRIX3X4DVPROC glUniformMatrix3x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
extern PFNGLUXUNIFORMMATRIX4X2DVPROC glUniformMatrix4x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
extern PFNGLUXUNIFORMMATRIX4X3DVPROC glUniformMatrix4x3dv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
extern PFNGLUXGETUNIFORMDVPROC glGetUniformdv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:14 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_gpu_shader_fp64__
#define __GLUX_GL_ARB_gpu_shader_fp64__

GLUX_NEW_PLUGIN(GL_ARB_gpu_shader_fp64);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2
#  define GL_DOUBLE_VEC2 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3
#  define GL_DOUBLE_VEC3 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4
#  define GL_DOUBLE_VEC4 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2
#  define GL_DOUBLE_MAT2 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3
#  define GL_DOUBLE_MAT3 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4
#  define GL_DOUBLE_MAT4 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3
#  define GL_DOUBLE_MAT2x3 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4
#  define GL_DOUBLE_MAT2x4 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2
#  define GL_DOUBLE_MAT3x2 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4
#  define GL_DOUBLE_MAT3x4 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2
#  define GL_DOUBLE_MAT4x2 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3
#  define GL_DOUBLE_MAT4x3 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniform1d
typedef void (APIENTRYP PFNGLUXUNIFORM1DPROC) (GLint location, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glUniform2d
typedef void (APIENTRYP PFNGLUXUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glUniform3d
typedef void (APIENTRYP PFNGLUXUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glUniform4d
typedef void (APIENTRYP PFNGLUXUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
typedef void (APIENTRYP PFNGLUXUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
typedef void (APIENTRYP PFNGLUXUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
typedef void (APIENTRYP PFNGLUXUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
typedef void (APIENTRYP PFNGLUXUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
typedef void (APIENTRYP PFNGLUXGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniform1d
extern PFNGLUXUNIFORM1DPROC glUniform1d;
#endif
#ifndef __GLUX__GLFCT_glUniform2d
extern PFNGLUXUNIFORM2DPROC glUniform2d;
#endif
#ifndef __GLUX__GLFCT_glUniform3d
extern PFNGLUXUNIFORM3DPROC glUniform3d;
#endif
#ifndef __GLUX__GLFCT_glUniform4d
extern PFNGLUXUNIFORM4DPROC glUniform4d;
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
extern PFNGLUXUNIFORM1DVPROC glUniform1dv;
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
extern PFNGLUXUNIFORM2DVPROC glUniform2dv;
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
extern PFNGLUXUNIFORM3DVPROC glUniform3dv;
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
extern PFNGLUXUNIFORM4DVPROC glUniform4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
extern PFNGLUXUNIFORMMATRIX2DVPROC glUniformMatrix2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
extern PFNGLUXUNIFORMMATRIX3DVPROC glUniformMatrix3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
extern PFNGLUXUNIFORMMATRIX4DVPROC glUniformMatrix4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
extern PFNGLUXUNIFORMMATRIX2X3DVPROC glUniformMatrix2x3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
extern PFNGLUXUNIFORMMATRIX2X4DVPROC glUniformMatrix2x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
extern PFNGLUXUNIFORMMATRIX3X2DVPROC glUniformMatrix3x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
extern PFNGLUXUNIFORMMATRIX3X4DVPROC glUniformMatrix3x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
extern PFNGLUXUNIFORMMATRIX4X2DVPROC glUniformMatrix4x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
extern PFNGLUXUNIFORMMATRIX4X3DVPROC glUniformMatrix4x3dv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
extern PFNGLUXGETUNIFORMDVPROC glGetUniformdv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:31 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_gpu_shader_fp64__
#define __GLUX_GL_ARB_gpu_shader_fp64__

GLUX_NEW_PLUGIN(GL_ARB_gpu_shader_fp64);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2
#  define GL_DOUBLE_VEC2 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3
#  define GL_DOUBLE_VEC3 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4
#  define GL_DOUBLE_VEC4 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2
#  define GL_DOUBLE_MAT2 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3
#  define GL_DOUBLE_MAT3 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4
#  define GL_DOUBLE_MAT4 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3
#  define GL_DOUBLE_MAT2x3 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4
#  define GL_DOUBLE_MAT2x4 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2
#  define GL_DOUBLE_MAT3x2 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4
#  define GL_DOUBLE_MAT3x4 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2
#  define GL_DOUBLE_MAT4x2 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3
#  define GL_DOUBLE_MAT4x3 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniform1d
typedef void (APIENTRYP PFNGLUXUNIFORM1DPROC) (GLint location, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glUniform2d
typedef void (APIENTRYP PFNGLUXUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glUniform3d
typedef void (APIENTRYP PFNGLUXUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glUniform4d
typedef void (APIENTRYP PFNGLUXUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
typedef void (APIENTRYP PFNGLUXUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
typedef void (APIENTRYP PFNGLUXUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
typedef void (APIENTRYP PFNGLUXUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
typedef void (APIENTRYP PFNGLUXUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
typedef void (APIENTRYP PFNGLUXGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniform1d
extern PFNGLUXUNIFORM1DPROC glUniform1d;
#endif
#ifndef __GLUX__GLFCT_glUniform2d
extern PFNGLUXUNIFORM2DPROC glUniform2d;
#endif
#ifndef __GLUX__GLFCT_glUniform3d
extern PFNGLUXUNIFORM3DPROC glUniform3d;
#endif
#ifndef __GLUX__GLFCT_glUniform4d
extern PFNGLUXUNIFORM4DPROC glUniform4d;
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
extern PFNGLUXUNIFORM1DVPROC glUniform1dv;
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
extern PFNGLUXUNIFORM2DVPROC glUniform2dv;
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
extern PFNGLUXUNIFORM3DVPROC glUniform3dv;
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
extern PFNGLUXUNIFORM4DVPROC glUniform4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
extern PFNGLUXUNIFORMMATRIX2DVPROC glUniformMatrix2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
extern PFNGLUXUNIFORMMATRIX3DVPROC glUniformMatrix3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
extern PFNGLUXUNIFORMMATRIX4DVPROC glUniformMatrix4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
extern PFNGLUXUNIFORMMATRIX2X3DVPROC glUniformMatrix2x3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
extern PFNGLUXUNIFORMMATRIX2X4DVPROC glUniformMatrix2x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
extern PFNGLUXUNIFORMMATRIX3X2DVPROC glUniformMatrix3x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
extern PFNGLUXUNIFORMMATRIX3X4DVPROC glUniformMatrix3x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
extern PFNGLUXUNIFORMMATRIX4X2DVPROC glUniformMatrix4x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
extern PFNGLUXUNIFORMMATRIX4X3DVPROC glUniformMatrix4x3dv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
extern PFNGLUXGETUNIFORMDVPROC glGetUniformdv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:33 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_gpu_shader_fp64__
#define __GLUX_GL_ARB_gpu_shader_fp64__

GLUX_NEW_PLUGIN(GL_ARB_gpu_shader_fp64);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2
#  define GL_DOUBLE_VEC2 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3
#  define GL_DOUBLE_VEC3 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4
#  define GL_DOUBLE_VEC4 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2
#  define GL_DOUBLE_MAT2 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3
#  define GL_DOUBLE_MAT3 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4
#  define GL_DOUBLE_MAT4 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3
#  define GL_DOUBLE_MAT2x3 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4
#  define GL_DOUBLE_MAT2x4 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2
#  define GL_DOUBLE_MAT3x2 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4
#  define GL_DOUBLE_MAT3x4 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2
#  define GL_DOUBLE_MAT4x2 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3
#  define GL_DOUBLE_MAT4x3 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniform1d
typedef void (APIENTRYP PFNGLUXUNIFORM1DPROC) (GLint location, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glUniform2d
typedef void (APIENTRYP PFNGLUXUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glUniform3d
typedef void (APIENTRYP PFNGLUXUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glUniform4d
typedef void (APIENTRYP PFNGLUXUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
typedef void (APIENTRYP PFNGLUXUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
typedef void (APIENTRYP PFNGLUXUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
typedef void (APIENTRYP PFNGLUXUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
typedef void (APIENTRYP PFNGLUXUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
typedef void (APIENTRYP PFNGLUXGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniform1d
extern PFNGLUXUNIFORM1DPROC glUniform1d;
#endif
#ifndef __GLUX__GLFCT_glUniform2d
extern PFNGLUXUNIFORM2DPROC glUniform2d;
#endif
#ifndef __GLUX__GLFCT_glUniform3d
extern PFNGLUXUNIFORM3DPROC glUniform3d;
#endif
#ifndef __GLUX__GLFCT_glUniform4d
extern PFNGLUXUNIFORM4DPROC glUniform4d;
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
extern PFNGLUXUNIFORM1DVPROC glUniform1dv;
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
extern PFNGLUXUNIFORM2DVPROC glUniform2dv;
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
extern PFNGLUXUNIFORM3DVPROC glUniform3dv;
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
extern PFNGLUXUNIFORM4DVPROC glUniform4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
extern PFNGLUXUNIFORMMATRIX2DVPROC glUniformMatrix2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
extern PFNGLUXUNIFORMMATRIX3DVPROC glUniformMatrix3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
extern PFNGLUXUNIFORMMATRIX4DVPROC glUniformMatrix4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
extern PFNGLUXUNIFORMMATRIX2X3DVPROC glUniformMatrix2x3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
extern PFNGLUXUNIFORMMATRIX2X4DVPROC glUniformMatrix2x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
extern PFNGLUXUNIFORMMATRIX3X2DVPROC glUniformMatrix3x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
extern PFNGLUXUNIFORMMATRIX3X4DVPROC glUniformMatrix3x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
extern PFNGLUXUNIFORMMATRIX4X2DVPROC glUniformMatrix4x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
extern PFNGLUXUNIFORMMATRIX4X3DVPROC glUniformMatrix4x3dv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
extern PFNGLUXGETUNIFORMDVPROC glGetUniformdv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:55 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_gpu_shader_fp64__
#define __GLUX_GL_ARB_gpu_shader_fp64__

GLUX_NEW_PLUGIN(GL_ARB_gpu_shader_fp64);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2
#  define GL_DOUBLE_VEC2 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3
#  define GL_DOUBLE_VEC3 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4
#  define GL_DOUBLE_VEC4 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2
#  define GL_DOUBLE_MAT2 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3
#  define GL_DOUBLE_MAT3 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4
#  define GL_DOUBLE_MAT4 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3
#  define GL_DOUBLE_MAT2x3 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4
#  define GL_DOUBLE_MAT2x4 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2
#  define GL_DOUBLE_MAT3x2 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4
#  define GL_DOUBLE_MAT3x4 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2
#  define GL_DOUBLE_MAT4x2 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3
#  define GL_DOUBLE_MAT4x3 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniform1d
typedef void (APIENTRYP PFNGLUXUNIFORM1DPROC) (GLint location, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glUniform2d
typedef void (APIENTRYP PFNGLUXUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glUniform3d
typedef void (APIENTRYP PFNGLUXUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glUniform4d
typedef void (APIENTRYP PFNGLUXUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
typedef void (APIENTRYP PFNGLUXUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
typedef void (APIENTRYP PFNGLUXUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
typedef void (APIENTRYP PFNGLUXUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
typedef void (APIENTRYP PFNGLUXUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
typedef void (APIENTRYP PFNGLUXGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniform1d
extern PFNGLUXUNIFORM1DPROC glUniform1d;
#endif
#ifndef __GLUX__GLFCT_glUniform2d
extern PFNGLUXUNIFORM2DPROC glUniform2d;
#endif
#ifndef __GLUX__GLFCT_glUniform3d
extern PFNGLUXUNIFORM3DPROC glUniform3d;
#endif
#ifndef __GLUX__GLFCT_glUniform4d
extern PFNGLUXUNIFORM4DPROC glUniform4d;
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
extern PFNGLUXUNIFORM1DVPROC glUniform1dv;
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
extern PFNGLUXUNIFORM2DVPROC glUniform2dv;
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
extern PFNGLUXUNIFORM3DVPROC glUniform3dv;
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
extern PFNGLUXUNIFORM4DVPROC glUniform4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
extern PFNGLUXUNIFORMMATRIX2DVPROC glUniformMatrix2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
extern PFNGLUXUNIFORMMATRIX3DVPROC glUniformMatrix3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
extern PFNGLUXUNIFORMMATRIX4DVPROC glUniformMatrix4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
extern PFNGLUXUNIFORMMATRIX2X3DVPROC glUniformMatrix2x3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
extern PFNGLUXUNIFORMMATRIX2X4DVPROC glUniformMatrix2x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
extern PFNGLUXUNIFORMMATRIX3X2DVPROC glUniformMatrix3x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
extern PFNGLUXUNIFORMMATRIX3X4DVPROC glUniformMatrix3x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
extern PFNGLUXUNIFORMMATRIX4X2DVPROC glUniformMatrix4x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
extern PFNGLUXUNIFORMMATRIX4X3DVPROC glUniformMatrix4x3dv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
extern PFNGLUXGETUNIFORMDVPROC glGetUniformdv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:29:07 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_gpu_shader_fp64__
#define __GLUX_GL_ARB_gpu_shader_fp64__

GLUX_NEW_PLUGIN(GL_ARB_gpu_shader_fp64);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2
#  define GL_DOUBLE_VEC2 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3
#  define GL_DOUBLE_VEC3 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4
#  define GL_DOUBLE_VEC4 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2
#  define GL_DOUBLE_MAT2 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3
#  define GL_DOUBLE_MAT3 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4
#  define GL_DOUBLE_MAT4 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3
#  define GL_DOUBLE_MAT2x3 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4
#  define GL_DOUBLE_MAT2x4 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2
#  define GL_DOUBLE_MAT3x2 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4
#  define GL_DOUBLE_MAT3x4 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2
#  define GL_DOUBLE_MAT4x2 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3
#  define GL_DOUBLE_MAT4x3 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniform1d
typedef void (APIENTRYP PFNGLUXUNIFORM1DPROC) (GLint location, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glUniform2d
typedef void (APIENTRYP PFNGLUXUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glUniform3d
typedef void (APIENTRYP PFNGLUXUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glUniform4d
typedef void (APIENTRYP PFNGLUXUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
typedef void (APIENTRYP PFNGLUXUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
typedef void (APIENTRYP PFNGLUXUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
typedef void (APIENTRYP PFNGLUXUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
typedef void (APIENTRYP PFNGLUXUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
typedef void (APIENTRYP PFNGLUXGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniform1d
extern PFNGLUXUNIFORM1DPROC glUniform1d;
#endif
#ifndef __GLUX__GLFCT_glUniform2d
extern PFNGLUXUNIFORM2DPROC glUniform2d;
#endif
#ifndef __GLUX__GLFCT_glUniform3d
extern PFNGLUXUNIFORM3DPROC glUniform3d;
#endif
#ifndef __GLUX__GLFCT_glUniform4d
extern PFNGLUXUNIFORM4DPROC glUniform4d;
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
extern PFNGLUXUNIFORM1DVPROC glUniform1dv;
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
extern PFNGLUXUNIFORM2DVPROC glUniform2dv;
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
extern PFNGLUXUNIFORM3DVPROC glUniform3dv;
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
extern PFNGLUXUNIFORM4DVPROC glUniform4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
extern PFNGLUXUNIFORMMATRIX2DVPROC glUniformMatrix2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
extern PFNGLUXUNIFORMMATRIX3DVPROC glUniformMatrix3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
extern PFNGLUXUNIFORMMATRIX4DVPROC glUniformMatrix4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
extern PFNGLUXUNIFORMMATRIX2X3DVPROC glUniformMatrix2x3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
extern PFNGLUXUNIFORMMATRIX2X4DVPROC glUniformMatrix2x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
extern PFNGLUXUNIFORMMATRIX3X2DVPROC glUniformMatrix3x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
extern PFNGLUXUNIFORMMATRIX3X4DVPROC glUniformMatrix3x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
extern PFNGLUXUNIFORMMATRIX4X2DVPROC glUniformMatrix4x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
extern PFNGLUXUNIFORMMATRIX4X3DVPROC glUniformMatrix4x3dv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
extern PFNGLUXGETUNIFORMDVPROC glGetUniformdv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:17:08 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_gpu_shader_fp64__
#define __GLUX_GL_ARB_gpu_shader_fp64__

GLUX_NEW_PLUGIN(GL_ARB_gpu_shader_fp64);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2
#  define GL_DOUBLE_VEC2 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3
#  define GL_DOUBLE_VEC3 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4
#  define GL_DOUBLE_VEC4 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2
#  define GL_DOUBLE_MAT2 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3
#  define GL_DOUBLE_MAT3 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4
#  define GL_DOUBLE_MAT4 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3
#  define GL_DOUBLE_MAT2x3 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4
#  define GL_DOUBLE_MAT2x4 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2
#  define GL_DOUBLE_MAT3x2 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4
#  define GL_DOUBLE_MAT3x4 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2
#  define GL_DOUBLE_MAT4x2 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3
#  define GL_DOUBLE_MAT4x3 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniform1d
typedef void (APIENTRYP PFNGLUXUNIFORM1DPROC) (GLint location, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glUniform2d
typedef void (APIENTRYP PFNGLUXUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glUniform3d
typedef void (APIENTRYP PFNGLUXUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glUniform4d
typedef void (APIENTRYP PFNGLUXUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
typedef void (APIENTRYP PFNGLUXUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
typedef void (APIENTRYP PFNGLUXUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
typedef void (APIENTRYP PFNGLUXUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
typedef void (APIENTRYP PFNGLUXUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
typedef void (APIENTRYP PFNGLUXGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniform1d
extern PFNGLUXUNIFORM1DPROC glUniform1d;
#endif
#ifndef __GLUX__GLFCT_glUniform2d
extern PFNGLUXUNIFORM2DPROC glUniform2d;
#endif
#ifndef __GLUX__GLFCT_glUniform3d
extern PFNGLUXUNIFORM3DPROC glUniform3d;
#endif
#ifndef __GLUX__GLFCT_glUniform4d
extern PFNGLUXUNIFORM4DPROC glUniform4d;
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
extern PFNGLUXUNIFORM1DVPROC glUniform1dv;
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
extern PFNGLUXUNIFORM2DVPROC glUniform2dv;
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
extern PFNGLUXUNIFORM3DVPROC glUniform3dv;
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
extern PFNGLUXUNIFORM4DVPROC glUniform4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
extern PFNGLUXUNIFORMMATRIX2DVPROC glUniformMatrix2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
extern PFNGLUXUNIFORMMATRIX3DVPROC glUniformMatrix3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
extern PFNGLUXUNIFORMMATRIX4DVPROC glUniformMatrix4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
extern PFNGLUXUNIFORMMATRIX2X3DVPROC glUniformMatrix2x3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
extern PFNGLUXUNIFORMMATRIX2X4DVPROC glUniformMatrix2x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
extern PFNGLUXUNIFORMMATRIX3X2DVPROC glUniformMatrix3x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
extern PFNGLUXUNIFORMMATRIX3X4DVPROC glUniformMatrix3x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
extern PFNGLUXUNIFORMMATRIX4X2DVPROC glUniformMatrix4x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
extern PFNGLUXUNIFORMMATRIX4X3DVPROC glUniformMatrix4x3dv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
extern PFNGLUXGETUNIFORMDVPROC glGetUniformdv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_gpu_shader_fp64__
#define __GLUX_GL_ARB_gpu_shader_fp64__

GLUX_NEW_PLUGIN(GL_ARB_gpu_shader_fp64);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2
#  define GL_DOUBLE_VEC2 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3
#  define GL_DOUBLE_VEC3 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4
#  define GL_DOUBLE_VEC4 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2
#  define GL_DOUBLE_MAT2 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3
#  define GL_DOUBLE_MAT3 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4
#  define GL_DOUBLE_MAT4 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3
#  define GL_DOUBLE_MAT2x3 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4
#  define GL_DOUBLE_MAT2x4 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2
#  define GL_DOUBLE_MAT3x2 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4
#  define GL_DOUBLE_MAT3x4 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2
#  define GL_DOUBLE_MAT4x2 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3
#  define GL_DOUBLE_MAT4x3 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniform1d
typedef void (APIENTRYP PFNGLUXUNIFORM1DPROC) (GLint location, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glUniform2d
typedef void (APIENTRYP PFNGLUXUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glUniform3d
typedef void (APIENTRYP PFNGLUXUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glUniform4d
typedef void (APIENTRYP PFNGLUXUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
typedef void (APIENTRYP PFNGLUXUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
typedef void (APIENTRYP PFNGLUXUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
typedef void (APIENTRYP PFNGLUXUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
typedef void (APIENTRYP PFNGLUXUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
typedef void (APIENTRYP PFNGLUXGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniform1d
extern PFNGLUXUNIFORM1DPROC glUniform1d;
#endif
#ifndef __GLUX__GLFCT_glUniform2d
extern PFNGLUXUNIFORM2DPROC glUniform2d;
#endif
#ifndef __GLUX__GLFCT_glUniform3d
extern PFNGLUXUNIFORM3DPROC glUniform3d;
#endif
#ifndef __GLUX__GLFCT_glUniform4d
extern PFNGLUXUNIFORM4DPROC glUniform4d;
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
extern PFNGLUXUNIFORM1DVPROC glUniform1dv;
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
extern PFNGLUXUNIFORM2DVPROC glUniform2dv;
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
extern PFNGLUXUNIFORM3DVPROC glUniform3dv;
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
extern PFNGLUXUNIFORM4DVPROC glUniform4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
extern PFNGLUXUNIFORMMATRIX2DVPROC glUniformMatrix2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
extern PFNGLUXUNIFORMMATRIX3DVPROC glUniformMatrix3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
extern PFNGLUXUNIFORMMATRIX4DVPROC glUniformMatrix4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
extern PFNGLUXUNIFORMMATRIX2X3DVPROC glUniformMatrix2x3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
extern PFNGLUXUNIFORMMATRIX2X4DVPROC glUniformMatrix2x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
extern PFNGLUXUNIFORMMATRIX3X2DVPROC glUniformMatrix3x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
extern PFNGLUXUNIFORMMATRIX3X4DVPROC glUniformMatrix3x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
extern PFNGLUXUNIFORMMATRIX4X2DVPROC glUniformMatrix4x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
extern PFNGLUXUNIFORMMATRIX4X3DVPROC glUniformMatrix4x3dv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
extern PFNGLUXGETUNIFORMDVPROC glGetUniformdv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:22 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_gpu_shader_fp64__
#define __GLUX_GL_ARB_gpu_shader_fp64__

GLUX_NEW_PLUGIN(GL_ARB_gpu_shader_fp64);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2
#  define GL_DOUBLE_VEC2 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3
#  define GL_DOUBLE_VEC3 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4
#  define GL_DOUBLE_VEC4 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2
#  define GL_DOUBLE_MAT2 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3
#  define GL_DOUBLE_MAT3 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4
#  define GL_DOUBLE_MAT4 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3
#  define GL_DOUBLE_MAT2x3 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4
#  define GL_DOUBLE_MAT2x4 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2
#  define GL_DOUBLE_MAT3x2 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4
#  define GL_DOUBLE_MAT3x4 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2
#  define GL_DOUBLE_MAT4x2 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3
#  define GL_DOUBLE_MAT4x3 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniform1d
typedef void (APIENTRYP PFNGLUXUNIFORM1DPROC) (GLint location, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glUniform2d
typedef void (APIENTRYP PFNGLUXUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glUniform3d
typedef void (APIENTRYP PFNGLUXUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glUniform4d
typedef void (APIENTRYP PFNGLUXUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
typedef void (APIENTRYP PFNGLUXUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
typedef void (APIENTRYP PFNGLUXUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
typedef void (APIENTRYP PFNGLUXUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
typedef void (APIENTRYP PFNGLUXUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
typedef void (APIENTRYP PFNGLUXGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniform1d
extern PFNGLUXUNIFORM1DPROC glUniform1d;
#endif
#ifndef __GLUX__GLFCT_glUniform2d
extern PFNGLUXUNIFORM2DPROC glUniform2d;
#endif
#ifndef __GLUX__GLFCT_glUniform3d
extern PFNGLUXUNIFORM3DPROC glUniform3d;
#endif
#ifndef __GLUX__GLFCT_glUniform4d
extern PFNGLUXUNIFORM4DPROC glUniform4d;
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
extern PFNGLUXUNIFORM1DVPROC glUniform1dv;
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
extern PFNGLUXUNIFORM2DVPROC glUniform2dv;
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
extern PFNGLUXUNIFORM3DVPROC glUniform3dv;
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
extern PFNGLUXUNIFORM4DVPROC glUniform4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
extern PFNGLUXUNIFORMMATRIX2DVPROC glUniformMatrix2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
extern PFNGLUXUNIFORMMATRIX3DVPROC glUniformMatrix3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
extern PFNGLUXUNIFORMMATRIX4DVPROC glUniformMatrix4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
extern PFNGLUXUNIFORMMATRIX2X3DVPROC glUniformMatrix2x3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
extern PFNGLUXUNIFORMMATRIX2X4DVPROC glUniformMatrix2x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
extern PFNGLUXUNIFORMMATRIX3X2DVPROC glUniformMatrix3x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
extern PFNGLUXUNIFORMMATRIX3X4DVPROC glUniformMatrix3x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
extern PFNGLUXUNIFORMMATRIX4X2DVPROC glUniformMatrix4x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
extern PFNGLUXUNIFORMMATRIX4X3DVPROC glUniformMatrix4x3dv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
extern PFNGLUXGETUNIFORMDVPROC glGetUniformdv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:02 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_gpu_shader_fp64__
#define __GLUX_GL_ARB_gpu_shader_fp64__

GLUX_NEW_PLUGIN(GL_ARB_gpu_shader_fp64);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2
#  define GL_DOUBLE_VEC2 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3
#  define GL_DOUBLE_VEC3 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4
#  define GL_DOUBLE_VEC4 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2
#  define GL_DOUBLE_MAT2 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3
#  define GL_DOUBLE_MAT3 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4
#  define GL_DOUBLE_MAT4 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3
#  define GL_DOUBLE_MAT2x3 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4
#  define GL_DOUBLE_MAT2x4 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2
#  define GL_DOUBLE_MAT3x2 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4
#  define GL_DOUBLE_MAT3x4 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2
#  define GL_DOUBLE_MAT4x2 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3
#  define GL_DOUBLE_MAT4x3 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniform1d
typedef void (APIENTRYP PFNGLUXUNIFORM1DPROC) (GLint location, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glUniform2d
typedef void (APIENTRYP PFNGLUXUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glUniform3d
typedef void (APIENTRYP PFNGLUXUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glUniform4d
typedef void (APIENTRYP PFNGLUXUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
typedef void (APIENTRYP PFNGLUXUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
typedef void (APIENTRYP PFNGLUXUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
typedef void (APIENTRYP PFNGLUXUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
typedef void (APIENTRYP PFNGLUXUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
typedef void (APIENTRYP PFNGLUXGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniform1d
extern PFNGLUXUNIFORM1DPROC glUniform1d;
#endif
#ifndef __GLUX__GLFCT_glUniform2d
extern PFNGLUXUNIFORM2DPROC glUniform2d;
#endif
#ifndef __GLUX__GLFCT_glUniform3d
extern PFNGLUXUNIFORM3DPROC glUniform3d;
#endif
#ifndef __GLUX__GLFCT_glUniform4d
extern PFNGLUXUNIFORM4DPROC glUniform4d;
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
extern PFNGLUXUNIFORM1DVPROC glUniform1dv;
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
extern PFNGLUXUNIFORM2DVPROC glUniform2dv;
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
extern PFNGLUXUNIFORM3DVPROC glUniform3dv;
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
extern PFNGLUXUNIFORM4DVPROC glUniform4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
extern PFNGLUXUNIFORMMATRIX2DVPROC glUniformMatrix2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
extern PFNGLUXUNIFORMMATRIX3DVPROC glUniformMatrix3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
extern PFNGLUXUNIFORMMATRIX4DVPROC glUniformMatrix4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
extern PFNGLUXUNIFORMMATRIX2X3DVPROC glUniformMatrix2x3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
extern PFNGLUXUNIFORMMATRIX2X4DVPROC glUniformMatrix2x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
extern PFNGLUXUNIFORMMATRIX3X2DVPROC glUniformMatrix3x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
extern PFNGLUXUNIFORMMATRIX3X4DVPROC glUniformMatrix3x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
extern PFNGLUXUNIFORMMATRIX4X2DVPROC glUniformMatrix4x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
extern PFNGLUXUNIFORMMATRIX4X3DVPROC glUniformMatrix4x3dv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
extern PFNGLUXGETUNIFORMDVPROC glGetUniformdv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:09 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_gpu_shader_fp64__
#define __GLUX_GL_ARB_gpu_shader_fp64__

GLUX_NEW_PLUGIN(GL_ARB_gpu_shader_fp64);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2
#  define GL_DOUBLE_VEC2 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3
#  define GL_DOUBLE_VEC3 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4
#  define GL_DOUBLE_VEC4 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2
#  define GL_DOUBLE_MAT2 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3
#  define GL_DOUBLE_MAT3 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4
#  define GL_DOUBLE_MAT4 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3
#  define GL_DOUBLE_MAT2x3 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4
#  define GL_DOUBLE_MAT2x4 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2
#  define GL_DOUBLE_MAT3x2 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4
#  define GL_DOUBLE_MAT3x4 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2
#  define GL_DOUBLE_MAT4x2 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3
#  define GL_DOUBLE_MAT4x3 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniform1d
typedef void (APIENTRYP PFNGLUXUNIFORM1DPROC) (GLint location, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glUniform2d
typedef void (APIENTRYP PFNGLUXUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glUniform3d
typedef void (APIENTRYP PFNGLUXUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glUniform4d
typedef void (APIENTRYP PFNGLUXUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
typedef void (APIENTRYP PFNGLUXUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
typedef void (APIENTRYP PFNGLUXUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
typedef void (APIENTRYP PFNGLUXUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
typedef void (APIENTRYP PFNGLUXUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
typedef void (APIENTRYP PFNGLUXGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniform1d
extern PFNGLUXUNIFORM1DPROC glUniform1d;
#endif
#ifndef __GLUX__GLFCT_glUniform2d
extern PFNGLUXUNIFORM2DPROC glUniform2d;
#endif
#ifndef __GLUX__GLFCT_glUniform3d
extern PFNGLUXUNIFORM3DPROC glUniform3d;
#endif
#ifndef __GLUX__GLFCT_glUniform4d
extern PFNGLUXUNIFORM4DPROC glUniform4d;
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
extern PFNGLUXUNIFORM1DVPROC glUniform1dv;
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
extern PFNGLUXUNIFORM2DVPROC glUniform2dv;
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
extern PFNGLUXUNIFORM3DVPROC glUniform3dv;
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
extern PFNGLUXUNIFORM4DVPROC glUniform4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
extern PFNGLUXUNIFORMMATRIX2DVPROC glUniformMatrix2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
extern PFNGLUXUNIFORMMATRIX3DVPROC glUniformMatrix3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
extern PFNGLUXUNIFORMMATRIX4DVPROC glUniformMatrix4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
extern PFNGLUXUNIFORMMATRIX2X3DVPROC glUniformMatrix2x3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
extern PFNGLUXUNIFORMMATRIX2X4DVPROC glUniformMatrix2x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
extern PFNGLUXUNIFORMMATRIX3X2DVPROC glUniformMatrix3x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
extern PFNGLUXUNIFORMMATRIX3X4DVPROC glUniformMatrix3x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
extern PFNGLUXUNIFORMMATRIX4X2DVPROC glUniformMatrix4x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
extern PFNGLUXUNIFORMMATRIX4X3DVPROC glUniformMatrix4x3dv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
extern PFNGLUXGETUNIFORMDVPROC glGetUniformdv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_gpu_shader_fp64__
#define __GLUX_GL_ARB_gpu_shader_fp64__

GLUX_NEW_PLUGIN(GL_ARB_gpu_shader_fp64);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2
#  define GL_DOUBLE_VEC2 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3
#  define GL_DOUBLE_VEC3 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4
#  define GL_DOUBLE_VEC4 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2
#  define GL_DOUBLE_MAT2 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3
#  define GL_DOUBLE_MAT3 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4
#  define GL_DOUBLE_MAT4 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3
#  define GL_DOUBLE_MAT2x3 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4
#  define GL_DOUBLE_MAT2x4 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2
#  define GL_DOUBLE_MAT3x2 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4
#  define GL_DOUBLE_MAT3x4 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2
#  define GL_DOUBLE_MAT4x2 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3
#  define GL_DOUBLE_MAT4x3 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniform1d
typedef void (APIENTRYP PFNGLUXUNIFORM1DPROC) (GLint location, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glUniform2d
typedef void (APIENTRYP PFNGLUXUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glUniform3d
typedef void (APIENTRYP PFNGLUXUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glUniform4d
typedef void (APIENTRYP PFNGLUXUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
typedef void (APIENTRYP PFNGLUXUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
typedef void (APIENTRYP PFNGLUXUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
typedef void (APIENTRYP PFNGLUXUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
typedef void (APIENTRYP PFNGLUXUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
typedef void (APIENTRYP PFNGLUXGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniform1d
extern PFNGLUXUNIFORM1DPROC glUniform1d;
#endif
#ifndef __GLUX__GLFCT_glUniform2d
extern PFNGLUXUNIFORM2DPROC glUniform2d;
#endif
#ifndef __GLUX__GLFCT_glUniform3d
extern PFNGLUXUNIFORM3DPROC glUniform3d;
#endif
#ifndef __GLUX__GLFCT_glUniform4d
extern PFNGLUXUNIFORM4DPROC glUniform4d;
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
extern PFNGLUXUNIFORM1DVPROC glUniform1dv;
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
extern PFNGLUXUNIFORM2DVPROC glUniform2dv;
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
extern PFNGLUXUNIFORM3DVPROC glUniform3dv;
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
extern PFNGLUXUNIFORM4DVPROC glUniform4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
extern PFNGLUXUNIFORMMATRIX2DVPROC glUniformMatrix2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
extern PFNGLUXUNIFORMMATRIX3DVPROC glUniformMatrix3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
extern PFNGLUXUNIFORMMATRIX4DVPROC glUniformMatrix4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
extern PFNGLUXUNIFORMMATRIX2X3DVPROC glUniformMatrix2x3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
extern PFNGLUXUNIFORMMATRIX2X4DVPROC glUniformMatrix2x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
extern PFNGLUXUNIFORMMATRIX3X2DVPROC glUniformMatrix3x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
extern PFNGLUXUNIFORMMATRIX3X4DVPROC glUniformMatrix3x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
extern PFNGLUXUNIFORMMATRIX4X2DVPROC glUniformMatrix4x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
extern PFNGLUXUNIFORMMATRIX4X3DVPROC glUniformMatrix4x3dv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
extern PFNGLUXGETUNIFORMDVPROC glGetUniformdv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:52:08 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_gpu_shader_fp64__
#define __GLUX_GL_ARB_gpu_shader_fp64__

GLUX_NEW_PLUGIN(GL_ARB_gpu_shader_fp64);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2
#  define GL_DOUBLE_VEC2 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3
#  define GL_DOUBLE_VEC3 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4
#  define GL_DOUBLE_VEC4 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2
#  define GL_DOUBLE_MAT2 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3
#  define GL_DOUBLE_MAT3 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4
#  define GL_DOUBLE_MAT4 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3
#  define GL_DOUBLE_MAT2x3 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4
#  define GL_DOUBLE_MAT2x4 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2
#  define GL_DOUBLE_MAT3x2 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4
#  define GL_DOUBLE_MAT3x4 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2
#  define GL_DOUBLE_MAT4x2 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3
#  define GL_DOUBLE_MAT4x3 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniform1d
typedef void (APIENTRYP PFNGLUXUNIFORM1DPROC) (GLint location, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glUniform2d
typedef void (APIENTRYP PFNGLUXUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glUniform3d
typedef void (APIENTRYP PFNGLUXUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glUniform4d
typedef void (APIENTRYP PFNGLUXUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
typedef void (APIENTRYP PFNGLUXUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
typedef void (APIENTRYP PFNGLUXUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
typedef void (APIENTRYP PFNGLUXUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
typedef void (APIENTRYP PFNGLUXUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
typedef void (APIENTRYP PFNGLUXGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniform1d
extern PFNGLUXUNIFORM1DPROC glUniform1d;
#endif
#ifndef __GLUX__GLFCT_glUniform2d
extern PFNGLUXUNIFORM2DPROC glUniform2d;
#endif
#ifndef __GLUX__GLFCT_glUniform3d
extern PFNGLUXUNIFORM3DPROC glUniform3d;
#endif
#ifndef __GLUX__GLFCT_glUniform4d
extern PFNGLUXUNIFORM4DPROC glUniform4d;
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
extern PFNGLUXUNIFORM1DVPROC glUniform1dv;
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
extern PFNGLUXUNIFORM2DVPROC glUniform2dv;
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
extern PFNGLUXUNIFORM3DVPROC glUniform3dv;
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
extern PFNGLUXUNIFORM4DVPROC glUniform4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
extern PFNGLUXUNIFORMMATRIX2DVPROC glUniformMatrix2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
extern PFNGLUXUNIFORMMATRIX3DVPROC glUniformMatrix3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
extern PFNGLUXUNIFORMMATRIX4DVPROC glUniformMatrix4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
extern PFNGLUXUNIFORMMATRIX2X3DVPROC glUniformMatrix2x3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
extern PFNGLUXUNIFORMMATRIX2X4DVPROC glUniformMatrix2x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
extern PFNGLUXUNIFORMMATRIX3X2DVPROC glUniformMatrix3x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
extern PFNGLUXUNIFORMMATRIX3X4DVPROC glUniformMatrix3x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
extern PFNGLUXUNIFORMMATRIX4X2DVPROC glUniformMatrix4x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
extern PFNGLUXUNIFORMMATRIX4X3DVPROC glUniformMatrix4x3dv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
extern PFNGLUXGETUNIFORMDVPROC glGetUniformdv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_gpu_shader_fp64__
#define __GLUX_GL_ARB_gpu_shader_fp64__

GLUX_NEW_PLUGIN(GL_ARB_gpu_shader_fp64);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2
#  define GL_DOUBLE_VEC2 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3
#  define GL_DOUBLE_VEC3 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4
#  define GL_DOUBLE_VEC4 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2
#  define GL_DOUBLE_MAT2 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3
#  define GL_DOUBLE_MAT3 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4
#  define GL_DOUBLE_MAT4 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3
#  define GL_DOUBLE_MAT2x3 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4
#  define GL_DOUBLE_MAT2x4 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2
#  define GL_DOUBLE_MAT3x2 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4
#  define GL_DOUBLE_MAT3x4 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2
#  define GL_DOUBLE_MAT4x2 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3
#  define GL_DOUBLE_MAT4x3 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniform1d
typedef void (APIENTRYP PFNGLUXUNIFORM1DPROC) (GLint location, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glUniform2d
typedef void (APIENTRYP PFNGLUXUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glUniform3d
typedef void (APIENTRYP PFNGLUXUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glUniform4d
typedef void (APIENTRYP PFNGLUXUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
typedef void (APIENTRYP PFNGLUXUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
typedef void (APIENTRYP PFNGLUXUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
typedef void (APIENTRYP PFNGLUXUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
typedef void (APIENTRYP PFNGLUXUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
typedef void (APIENTRYP PFNGLUXGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniform1d
extern PFNGLUXUNIFORM1DPROC glUniform1d;
#endif
#ifndef __GLUX__GLFCT_glUniform2d
extern PFNGLUXUNIFORM2DPROC glUniform2d;
#endif
#ifndef __GLUX__GLFCT_glUniform3d
extern PFNGLUXUNIFORM3DPROC glUniform3d;
#endif
#ifndef __GLUX__GLFCT_glUniform4d
extern PFNGLUXUNIFORM4DPROC glUniform4d;
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
extern PFNGLUXUNIFORM1DVPROC glUniform1dv;
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
extern PFNGLUXUNIFORM2DVPROC glUniform2dv;
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
extern PFNGLUXUNIFORM3DVPROC glUniform3dv;
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
extern PFNGLUXUNIFORM4DVPROC glUniform4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
extern PFNGLUXUNIFORMMATRIX2DVPROC glUniformMatrix2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
extern PFNGLUXUNIFORMMATRIX3DVPROC glUniformMatrix3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
extern PFNGLUXUNIFORMMATRIX4DVPROC glUniformMatrix4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
extern PFNGLUXUNIFORMMATRIX2X3DVPROC glUniformMatrix2x3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
extern PFNGLUXUNIFORMMATRIX2X4DVPROC glUniformMatrix2x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
extern PFNGLUXUNIFORMMATRIX3X2DVPROC glUniformMatrix3x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
extern PFNGLUXUNIFORMMATRIX3X4DVPROC glUniformMatrix3x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
extern PFNGLUXUNIFORMMATRIX4X2DVPROC glUniformMatrix4x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
extern PFNGLUXUNIFORMMATRIX4X3DVPROC glUniformMatrix4x3dv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
extern PFNGLUXGETUNIFORMDVPROC glGetUniformdv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:09 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_gpu_shader_fp64__
#define __GLUX_GL_ARB_gpu_shader_fp64__

GLUX_NEW_PLUGIN(GL_ARB_gpu_shader_fp64);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2
#  define GL_DOUBLE_VEC2 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3
#  define GL_DOUBLE_VEC3 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4
#  define GL_DOUBLE_VEC4 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2
#  define GL_DOUBLE_MAT2 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3
#  define GL_DOUBLE_MAT3 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4
#  define GL_DOUBLE_MAT4 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3
#  define GL_DOUBLE_MAT2x3 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4
#  define GL_DOUBLE_MAT2x4 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2
#  define GL_DOUBLE_MAT3x2 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4
#  define GL_DOUBLE_MAT3x4 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2
#  define GL_DOUBLE_MAT4x2 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3
#  define GL_DOUBLE_MAT4x3 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniform1d
typedef void (APIENTRYP PFNGLUXUNIFORM1DPROC) (GLint location, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glUniform2d
typedef void (APIENTRYP PFNGLUXUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glUniform3d
typedef void (APIENTRYP PFNGLUXUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glUniform4d
typedef void (APIENTRYP PFNGLUXUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
typedef void (APIENTRYP PFNGLUXUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
typedef void (APIENTRYP PFNGLUXUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
typedef void (APIENTRYP PFNGLUXUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
typedef void (APIENTRYP PFNGLUXUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
typedef void (APIENTRYP PFNGLUXGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniform1d
extern PFNGLUXUNIFORM1DPROC glUniform1d;
#endif
#ifndef __GLUX__GLFCT_glUniform2d
extern PFNGLUXUNIFORM2DPROC glUniform2d;
#endif
#ifndef __GLUX__GLFCT_glUniform3d
extern PFNGLUXUNIFORM3DPROC glUniform3d;
#endif
#ifndef __GLUX__GLFCT_glUniform4d
extern PFNGLUXUNIFORM4DPROC glUniform4d;
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
extern PFNGLUXUNIFORM1DVPROC glUniform1dv;
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
extern PFNGLUXUNIFORM2DVPROC glUniform2dv;
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
extern PFNGLUXUNIFORM3DVPROC glUniform3dv;
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
extern PFNGLUXUNIFORM4DVPROC glUniform4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
extern PFNGLUXUNIFORMMATRIX2DVPROC glUniformMatrix2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
extern PFNGLUXUNIFORMMATRIX3DVPROC glUniformMatrix3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
extern PFNGLUXUNIFORMMATRIX4DVPROC glUniformMatrix4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
extern PFNGLUXUNIFORMMATRIX2X3DVPROC glUniformMatrix2x3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
extern PFNGLUXUNIFORMMATRIX2X4DVPROC glUniformMatrix2x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
extern PFNGLUXUNIFORMMATRIX3X2DVPROC glUniformMatrix3x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
extern PFNGLUXUNIFORMMATRIX3X4DVPROC glUniformMatrix3x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
extern PFNGLUXUNIFORMMATRIX4X2DVPROC glUniformMatrix4x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
extern PFNGLUXUNIFORMMATRIX4X3DVPROC glUniformMatrix4x3dv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
extern PFNGLUXGETUNIFORMDVPROC glGetUniformdv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:29 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_gpu_shader_fp64__
#define __GLUX_GL_ARB_gpu_shader_fp64__

GLUX_NEW_PLUGIN(GL_ARB_gpu_shader_fp64);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2
#  define GL_DOUBLE_VEC2 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3
#  define GL_DOUBLE_VEC3 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4
#  define GL_DOUBLE_VEC4 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2
#  define GL_DOUBLE_MAT2 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3
#  define GL_DOUBLE_MAT3 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4
#  define GL_DOUBLE_MAT4 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3
#  define GL_DOUBLE_MAT2x3 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4
#  define GL_DOUBLE_MAT2x4 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2
#  define GL_DOUBLE_MAT3x2 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4
#  define GL_DOUBLE_MAT3x4 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2
#  define GL_DOUBLE_MAT4x2 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3
#  define GL_DOUBLE_MAT4x3 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniform1d
typedef void (APIENTRYP PFNGLUXUNIFORM1DPROC) (GLint location, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glUniform2d
typedef void (APIENTRYP PFNGLUXUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glUniform3d
typedef void (APIENTRYP PFNGLUXUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glUniform4d
typedef void (APIENTRYP PFNGLUXUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
typedef void (APIENTRYP PFNGLUXUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
typedef void (APIENTRYP PFNGLUXUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
typedef void (APIENTRYP PFNGLUXUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
typedef void (APIENTRYP PFNGLUXUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
typedef void (APIENTRYP PFNGLUXGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniform1d
extern PFNGLUXUNIFORM1DPROC glUniform1d;
#endif
#ifndef __GLUX__GLFCT_glUniform2d
extern PFNGLUXUNIFORM2DPROC glUniform2d;
#endif
#ifndef __GLUX__GLFCT_glUniform3d
extern PFNGLUXUNIFORM3DPROC glUniform3d;
#endif
#ifndef __GLUX__GLFCT_glUniform4d
extern PFNGLUXUNIFORM4DPROC glUniform4d;
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
extern PFNGLUXUNIFORM1DVPROC glUniform1dv;
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
extern PFNGLUXUNIFORM2DVPROC glUniform2dv;
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
extern PFNGLUXUNIFORM3DVPROC glUniform3dv;
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
extern PFNGLUXUNIFORM4DVPROC glUniform4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
extern PFNGLUXUNIFORMMATRIX2DVPROC glUniformMatrix2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
extern PFNGLUXUNIFORMMATRIX3DVPROC glUniformMatrix3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
extern PFNGLUXUNIFORMMATRIX4DVPROC glUniformMatrix4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
extern PFNGLUXUNIFORMMATRIX2X3DVPROC glUniformMatrix2x3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
extern PFNGLUXUNIFORMMATRIX2X4DVPROC glUniformMatrix2x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
extern PFNGLUXUNIFORMMATRIX3X2DVPROC glUniformMatrix3x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
extern PFNGLUXUNIFORMMATRIX3X4DVPROC glUniformMatrix3x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
extern PFNGLUXUNIFORMMATRIX4X2DVPROC glUniformMatrix4x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
extern PFNGLUXUNIFORMMATRIX4X3DVPROC glUniformMatrix4x3dv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
extern PFNGLUXGETUNIFORMDVPROC glGetUniformdv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:26 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_gpu_shader_fp64__
#define __GLUX_GL_ARB_gpu_shader_fp64__

GLUX_NEW_PLUGIN(GL_ARB_gpu_shader_fp64);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2
#  define GL_DOUBLE_VEC2 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3
#  define GL_DOUBLE_VEC3 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4
#  define GL_DOUBLE_VEC4 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2
#  define GL_DOUBLE_MAT2 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3
#  define GL_DOUBLE_MAT3 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4
#  define GL_DOUBLE_MAT4 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3
#  define GL_DOUBLE_MAT2x3 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4
#  define GL_DOUBLE_MAT2x4 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2
#  define GL_DOUBLE_MAT3x2 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4
#  define GL_DOUBLE_MAT3x4 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2
#  define GL_DOUBLE_MAT4x2 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3
#  define GL_DOUBLE_MAT4x3 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniform1d
typedef void (APIENTRYP PFNGLUXUNIFORM1DPROC) (GLint location, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glUniform2d
typedef void (APIENTRYP PFNGLUXUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glUniform3d
typedef void (APIENTRYP PFNGLUXUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glUniform4d
typedef void (APIENTRYP PFNGLUXUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
typedef void (APIENTRYP PFNGLUXUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
typedef void (APIENTRYP PFNGLUXUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
typedef void (APIENTRYP PFNGLUXUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
typedef void (APIENTRYP PFNGLUXUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
typedef void (APIENTRYP PFNGLUXGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniform1d
extern PFNGLUXUNIFORM1DPROC glUniform1d;
#endif
#ifndef __GLUX__GLFCT_glUniform2d
extern PFNGLUXUNIFORM2DPROC glUniform2d;
#endif
#ifndef __GLUX__GLFCT_glUniform3d
extern PFNGLUXUNIFORM3DPROC glUniform3d;
#endif
#ifndef __GLUX__GLFCT_glUniform4d
extern PFNGLUXUNIFORM4DPROC glUniform4d;
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
extern PFNGLUXUNIFORM1DVPROC glUniform1dv;
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
extern PFNGLUXUNIFORM2DVPROC glUniform2dv;
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
extern PFNGLUXUNIFORM3DVPROC glUniform3dv;
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
extern PFNGLUXUNIFORM4DVPROC glUniform4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
extern PFNGLUXUNIFORMMATRIX2DVPROC glUniformMatrix2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
extern PFNGLUXUNIFORMMATRIX3DVPROC glUniformMatrix3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
extern PFNGLUXUNIFORMMATRIX4DVPROC glUniformMatrix4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
extern PFNGLUXUNIFORMMATRIX2X3DVPROC glUniformMatrix2x3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
extern PFNGLUXUNIFORMMATRIX2X4DVPROC glUniformMatrix2x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
extern PFNGLUXUNIFORMMATRIX3X2DVPROC glUniformMatrix3x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
extern PFNGLUXUNIFORMMATRIX3X4DVPROC glUniformMatrix3x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
extern PFNGLUXUNIFORMMATRIX4X2DVPROC glUniformMatrix4x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
extern PFNGLUXUNIFORMMATRIX4X3DVPROC glUniformMatrix4x3dv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
extern PFNGLUXGETUNIFORMDVPROC glGetUniformdv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:42:04 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_gpu_shader_fp64__
#define __GLUX_GL_ARB_gpu_shader_fp64__

GLUX_NEW_PLUGIN(GL_ARB_gpu_shader_fp64);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2
#  define GL_DOUBLE_VEC2 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3
#  define GL_DOUBLE_VEC3 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4
#  define GL_DOUBLE_VEC4 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2
#  define GL_DOUBLE_MAT2 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3
#  define GL_DOUBLE_MAT3 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4
#  define GL_DOUBLE_MAT4 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3
#  define GL_DOUBLE_MAT2x3 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4
#  define GL_DOUBLE_MAT2x4 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2
#  define GL_DOUBLE_MAT3x2 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4
#  define GL_DOUBLE_MAT3x4 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2
#  define GL_DOUBLE_MAT4x2 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3
#  define GL_DOUBLE_MAT4x3 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniform1d
typedef void (APIENTRYP PFNGLUXUNIFORM1DPROC) (GLint location, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glUniform2d
typedef void (APIENTRYP PFNGLUXUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glUniform3d
typedef void (APIENTRYP PFNGLUXUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glUniform4d
typedef void (APIENTRYP PFNGLUXUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
typedef void (APIENTRYP PFNGLUXUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
typedef void (APIENTRYP PFNGLUXUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
typedef void (APIENTRYP PFNGLUXUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
typedef void (APIENTRYP PFNGLUXUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
typedef void (APIENTRYP PFNGLUXGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniform1d
extern PFNGLUXUNIFORM1DPROC glUniform1d;
#endif
#ifndef __GLUX__GLFCT_glUniform2d
extern PFNGLUXUNIFORM2DPROC glUniform2d;
#endif
#ifndef __GLUX__GLFCT_glUniform3d
extern PFNGLUXUNIFORM3DPROC glUniform3d;
#endif
#ifndef __GLUX__GLFCT_glUniform4d
extern PFNGLUXUNIFORM4DPROC glUniform4d;
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
extern PFNGLUXUNIFORM1DVPROC glUniform1dv;
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
extern PFNGLUXUNIFORM2DVPROC glUniform2dv;
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
extern PFNGLUXUNIFORM3DVPROC glUniform3dv;
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
extern PFNGLUXUNIFORM4DVPROC glUniform4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
extern PFNGLUXUNIFORMMATRIX2DVPROC glUniformMatrix2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
extern PFNGLUXUNIFORMMATRIX3DVPROC glUniformMatrix3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
extern PFNGLUXUNIFORMMATRIX4DVPROC glUniformMatrix4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
extern PFNGLUXUNIFORMMATRIX2X3DVPROC glUniformMatrix2x3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
extern PFNGLUXUNIFORMMATRIX2X4DVPROC glUniformMatrix2x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
extern PFNGLUXUNIFORMMATRIX3X2DVPROC glUniformMatrix3x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
extern PFNGLUXUNIFORMMATRIX3X4DVPROC glUniformMatrix3x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
extern PFNGLUXUNIFORMMATRIX4X2DVPROC glUniformMatrix4x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
extern PFNGLUXUNIFORMMATRIX4X3DVPROC glUniformMatrix4x3dv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
extern PFNGLUXGETUNIFORMDVPROC glGetUniformdv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:43 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_gpu_shader_fp64__
#define __GLUX_GL_ARB_gpu_shader_fp64__

GLUX_NEW_PLUGIN(GL_ARB_gpu_shader_fp64);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2
#  define GL_DOUBLE_VEC2 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3
#  define GL_DOUBLE_VEC3 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4
#  define GL_DOUBLE_VEC4 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2
#  define GL_DOUBLE_MAT2 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3
#  define GL_DOUBLE_MAT3 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4
#  define GL_DOUBLE_MAT4 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3
#  define GL_DOUBLE_MAT2x3 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4
#  define GL_DOUBLE_MAT2x4 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2
#  define GL_DOUBLE_MAT3x2 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4
#  define GL_DOUBLE_MAT3x4 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2
#  define GL_DOUBLE_MAT4x2 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3
#  define GL_DOUBLE_MAT4x3 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniform1d
typedef void (APIENTRYP PFNGLUXUNIFORM1DPROC) (GLint location, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glUniform2d
typedef void (APIENTRYP PFNGLUXUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glUniform3d
typedef void (APIENTRYP PFNGLUXUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glUniform4d
typedef void (APIENTRYP PFNGLUXUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
typedef void (APIENTRYP PFNGLUXUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
typedef void (APIENTRYP PFNGLUXUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
typedef void (APIENTRYP PFNGLUXUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
typedef void (APIENTRYP PFNGLUXUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
typedef void (APIENTRYP PFNGLUXGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniform1d
extern PFNGLUXUNIFORM1DPROC glUniform1d;
#endif
#ifndef __GLUX__GLFCT_glUniform2d
extern PFNGLUXUNIFORM2DPROC glUniform2d;
#endif
#ifndef __GLUX__GLFCT_glUniform3d
extern PFNGLUXUNIFORM3DPROC glUniform3d;
#endif
#ifndef __GLUX__GLFCT_glUniform4d
extern PFNGLUXUNIFORM4DPROC glUniform4d;
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
extern PFNGLUXUNIFORM1DVPROC glUniform1dv;
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
extern PFNGLUXUNIFORM2DVPROC glUniform2dv;
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
extern PFNGLUXUNIFORM3DVPROC glUniform3dv;
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
extern PFNGLUXUNIFORM4DVPROC glUniform4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
extern PFNGLUXUNIFORMMATRIX2DVPROC glUniformMatrix2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
extern PFNGLUXUNIFORMMATRIX3DVPROC glUniformMatrix3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
extern PFNGLUXUNIFORMMATRIX4DVPROC glUniformMatrix4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
extern PFNGLUXUNIFORMMATRIX2X3DVPROC glUniformMatrix2x3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
extern PFNGLUXUNIFORMMATRIX2X4DVPROC glUniformMatrix2x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
extern PFNGLUXUNIFORMMATRIX3X2DVPROC glUniformMatrix3x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
extern PFNGLUXUNIFORMMATRIX3X4DVPROC glUniformMatrix3x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
extern PFNGLUXUNIFORMMATRIX4X2DVPROC glUniformMatrix4x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
extern PFNGLUXUNIFORMMATRIX4X3DVPROC glUniformMatrix4x3dv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
extern PFNGLUXGETUNIFORMDVPROC glGetUniformdv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:10:03 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_gpu_shader_fp64__
#define __GLUX_GL_ARB_gpu_shader_fp64__

GLUX_NEW_PLUGIN(GL_ARB_gpu_shader_fp64);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2
#  define GL_DOUBLE_VEC2 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3
#  define GL_DOUBLE_VEC3 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4
#  define GL_DOUBLE_VEC4 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2
#  define GL_DOUBLE_MAT2 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3
#  define GL_DOUBLE_MAT3 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4
#  define GL_DOUBLE_MAT4 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3
#  define GL_DOUBLE_MAT2x3 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4
#  define GL_DOUBLE_MAT2x4 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2
#  define GL_DOUBLE_MAT3x2 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4
#  define GL_DOUBLE_MAT3x4 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2
#  define GL_DOUBLE_MAT4x2 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3
#  define GL_DOUBLE_MAT4x3 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniform1d
typedef void (APIENTRYP PFNGLUXUNIFORM1DPROC) (GLint location, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glUniform2d
typedef void (APIENTRYP PFNGLUXUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glUniform3d
typedef void (APIENTRYP PFNGLUXUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glUniform4d
typedef void (APIENTRYP PFNGLUXUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
typedef void (APIENTRYP PFNGLUXUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
typedef void (APIENTRYP PFNGLUXUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
typedef void (APIENTRYP PFNGLUXUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
typedef void (APIENTRYP PFNGLUXUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
typedef void (APIENTRYP PFNGLUXGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniform1d
extern PFNGLUXUNIFORM1DPROC glUniform1d;
#endif
#ifndef __GLUX__GLFCT_glUniform2d
extern PFNGLUXUNIFORM2DPROC glUniform2d;
#endif
#ifndef __GLUX__GLFCT_glUniform3d
extern PFNGLUXUNIFORM3DPROC glUniform3d;
#endif
#ifndef __GLUX__GLFCT_glUniform4d
extern PFNGLUXUNIFORM4DPROC glUniform4d;
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
extern PFNGLUXUNIFORM1DVPROC glUniform1dv;
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
extern PFNGLUXUNIFORM2DVPROC glUniform2dv;
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
extern PFNGLUXUNIFORM3DVPROC glUniform3dv;
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
extern PFNGLUXUNIFORM4DVPROC glUniform4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
extern PFNGLUXUNIFORMMATRIX2DVPROC glUniformMatrix2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
extern PFNGLUXUNIFORMMATRIX3DVPROC glUniformMatrix3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
extern PFNGLUXUNIFORMMATRIX4DVPROC glUniformMatrix4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
extern PFNGLUXUNIFORMMATRIX2X3DVPROC glUniformMatrix2x3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
extern PFNGLUXUNIFORMMATRIX2X4DVPROC glUniformMatrix2x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
extern PFNGLUXUNIFORMMATRIX3X2DVPROC glUniformMatrix3x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
extern PFNGLUXUNIFORMMATRIX3X4DVPROC glUniformMatrix3x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
extern PFNGLUXUNIFORMMATRIX4X2DVPROC glUniformMatrix4x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
extern PFNGLUXUNIFORMMATRIX4X3DVPROC glUniformMatrix4x3dv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
extern PFNGLUXGETUNIFORMDVPROC glGetUniformdv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:20:03 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_gpu_shader_fp64__
#define __GLUX_GL_ARB_gpu_shader_fp64__

GLUX_NEW_PLUGIN(GL_ARB_gpu_shader_fp64);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2
#  define GL_DOUBLE_VEC2 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3
#  define GL_DOUBLE_VEC3 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4
#  define GL_DOUBLE_VEC4 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2
#  define GL_DOUBLE_MAT2 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3
#  define GL_DOUBLE_MAT3 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4
#  define GL_DOUBLE_MAT4 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3
#  define GL_DOUBLE_MAT2x3 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4
#  define GL_DOUBLE_MAT2x4 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2
#  define GL_DOUBLE_MAT3x2 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4
#  define GL_DOUBLE_MAT3x4 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2
#  define GL_DOUBLE_MAT4x2 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3
#  define GL_DOUBLE_MAT4x3 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniform1d
typedef void (APIENTRYP PFNGLUXUNIFORM1DPROC) (GLint location, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glUniform2d
typedef void (APIENTRYP PFNGLUXUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glUniform3d
typedef void (APIENTRYP PFNGLUXUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glUniform4d
typedef void (APIENTRYP PFNGLUXUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
typedef void (APIENTRYP PFNGLUXUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
typedef void (APIENTRYP PFNGLUXUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
typedef void (APIENTRYP PFNGLUXUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
typedef void (APIENTRYP PFNGLUXUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
typedef void (APIENTRYP PFNGLUXGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniform1d
extern PFNGLUXUNIFORM1DPROC glUniform1d;
#endif
#ifndef __GLUX__GLFCT_glUniform2d
extern PFNGLUXUNIFORM2DPROC glUniform2d;
#endif
#ifndef __GLUX__GLFCT_glUniform3d
extern PFNGLUXUNIFORM3DPROC glUniform3d;
#endif
#ifndef __GLUX__GLFCT_glUniform4d
extern PFNGLUXUNIFORM4DPROC glUniform4d;
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
extern PFNGLUXUNIFORM1DVPROC glUniform1dv;
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
extern PFNGLUXUNIFORM2DVPROC glUniform2dv;
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
extern PFNGLUXUNIFORM3DVPROC glUniform3dv;
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
extern PFNGLUXUNIFORM4DVPROC glUniform4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
extern PFNGLUXUNIFORMMATRIX2DVPROC glUniformMatrix2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
extern PFNGLUXUNIFORMMATRIX3DVPROC glUniformMatrix3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
extern PFNGLUXUNIFORMMATRIX4DVPROC glUniformMatrix4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
extern PFNGLUXUNIFORMMATRIX2X3DVPROC glUniformMatrix2x3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
extern PFNGLUXUNIFORMMATRIX2X4DVPROC glUniformMatrix2x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
extern PFNGLUXUNIFORMMATRIX3X2DVPROC glUniformMatrix3x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
extern PFNGLUXUNIFORMMATRIX3X4DVPROC glUniformMatrix3x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
extern PFNGLUXUNIFORMMATRIX4X2DVPROC glUniformMatrix4x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
extern PFNGLUXUNIFORMMATRIX4X3DVPROC glUniformMatrix4x3dv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
extern PFNGLUXGETUNIFORMDVPROC glGetUniformdv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:43:04 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_gpu_shader_fp64__
#define __GLUX_GL_ARB_gpu_shader_fp64__

GLUX_NEW_PLUGIN(GL_ARB_gpu_shader_fp64)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_DOUBLE_VEC2
#  define GL_DOUBLE_VEC2 0x8FFC
#endif
#ifndef GL_DOUBLE_VEC3
#  define GL_DOUBLE_VEC3 0x8FFD
#endif
#ifndef GL_DOUBLE_VEC4
#  define GL_DOUBLE_VEC4 0x8FFE
#endif
#ifndef GL_DOUBLE_MAT2
#  define GL_DOUBLE_MAT2 0x8F46
#endif
#ifndef GL_DOUBLE_MAT3
#  define GL_DOUBLE_MAT3 0x8F47
#endif
#ifndef GL_DOUBLE_MAT4
#  define GL_DOUBLE_MAT4 0x8F48
#endif
#ifndef GL_DOUBLE_MAT2x3
#  define GL_DOUBLE_MAT2x3 0x8F49
#endif
#ifndef GL_DOUBLE_MAT2x4
#  define GL_DOUBLE_MAT2x4 0x8F4A
#endif
#ifndef GL_DOUBLE_MAT3x2
#  define GL_DOUBLE_MAT3x2 0x8F4B
#endif
#ifndef GL_DOUBLE_MAT3x4
#  define GL_DOUBLE_MAT3x4 0x8F4C
#endif
#ifndef GL_DOUBLE_MAT4x2
#  define GL_DOUBLE_MAT4x2 0x8F4D
#endif
#ifndef GL_DOUBLE_MAT4x3
#  define GL_DOUBLE_MAT4x3 0x8F4E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniform1d
typedef void (APIENTRYP PFNGLUXUNIFORM1DPROC) (GLint location, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glUniform2d
typedef void (APIENTRYP PFNGLUXUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glUniform3d
typedef void (APIENTRYP PFNGLUXUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glUniform4d
typedef void (APIENTRYP PFNGLUXUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
typedef void (APIENTRYP PFNGLUXUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
typedef void (APIENTRYP PFNGLUXUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
typedef void (APIENTRYP PFNGLUXUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
typedef void (APIENTRYP PFNGLUXUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
typedef void (APIENTRYP PFNGLUXGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniform1d
extern PFNGLUXUNIFORM1DPROC glUniform1d;
#endif
#ifndef __GLUX__GLFCT_glUniform2d
extern PFNGLUXUNIFORM2DPROC glUniform2d;
#endif
#ifndef __GLUX__GLFCT_glUniform3d
extern PFNGLUXUNIFORM3DPROC glUniform3d;
#endif
#ifndef __GLUX__GLFCT_glUniform4d
extern PFNGLUXUNIFORM4DPROC glUniform4d;
#endif
#ifndef __GLUX__GLFCT_glUniform1dv
extern PFNGLUXUNIFORM1DVPROC glUniform1dv;
#endif
#ifndef __GLUX__GLFCT_glUniform2dv
extern PFNGLUXUNIFORM2DVPROC glUniform2dv;
#endif
#ifndef __GLUX__GLFCT_glUniform3dv
extern PFNGLUXUNIFORM3DVPROC glUniform3dv;
#endif
#ifndef __GLUX__GLFCT_glUniform4dv
extern PFNGLUXUNIFORM4DVPROC glUniform4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2dv
extern PFNGLUXUNIFORMMATRIX2DVPROC glUniformMatrix2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3dv
extern PFNGLUXUNIFORMMATRIX3DVPROC glUniformMatrix3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4dv
extern PFNGLUXUNIFORMMATRIX4DVPROC glUniformMatrix4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x3dv
extern PFNGLUXUNIFORMMATRIX2X3DVPROC glUniformMatrix2x3dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2x4dv
extern PFNGLUXUNIFORMMATRIX2X4DVPROC glUniformMatrix2x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x2dv
extern PFNGLUXUNIFORMMATRIX3X2DVPROC glUniformMatrix3x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3x4dv
extern PFNGLUXUNIFORMMATRIX3X4DVPROC glUniformMatrix3x4dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x2dv
extern PFNGLUXUNIFORMMATRIX4X2DVPROC glUniformMatrix4x2dv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4x3dv
extern PFNGLUXUNIFORMMATRIX4X3DVPROC glUniformMatrix4x3dv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformdv
extern PFNGLUXGETUNIFORMDVPROC glGetUniformdv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
