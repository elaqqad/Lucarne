
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:28 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_debug_output__
#define __GLUX_GL_AMD_debug_output__

GLUX_NEW_PLUGIN(GL_AMD_debug_output);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH_AMD
#  define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
#endif
#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
#endif
#ifndef GL_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
#endif
#ifndef GL_DEBUG_SEVERITY_HIGH_AMD
#  define GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
#endif
#ifndef GL_DEBUG_SEVERITY_MEDIUM_AMD
#  define GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
#endif
#ifndef GL_DEBUG_SEVERITY_LOW_AMD
#  define GL_DEBUG_SEVERITY_LOW_AMD 0x9148
#endif
#ifndef GL_DEBUG_CATEGORY_API_ERROR_AMD
#  define GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
#endif
#ifndef GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD
#  define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
#endif
#ifndef GL_DEBUG_CATEGORY_DEPRECATION_AMD
#  define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
#endif
#ifndef GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD
#  define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
#endif
#ifndef GL_DEBUG_CATEGORY_PERFORMANCE_AMD
#  define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
#endif
#ifndef GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD
#  define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
#endif
#ifndef GL_DEBUG_CATEGORY_APPLICATION_AMD
#  define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
#endif
#ifndef GL_DEBUG_CATEGORY_OTHER_AMD
#  define GL_DEBUG_CATEGORY_OTHER_AMD 0x9150
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, GLvoid *userParam);
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
typedef GLuint (APIENTRYP PFNGLUXGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
extern PFNGLUXDEBUGMESSAGEENABLEAMDPROC glDebugMessageEnableAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
extern PFNGLUXDEBUGMESSAGEINSERTAMDPROC glDebugMessageInsertAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
extern PFNGLUXDEBUGMESSAGECALLBACKAMDPROC glDebugMessageCallbackAMD;
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
extern PFNGLUXGETDEBUGMESSAGELOGAMDPROC glGetDebugMessageLogAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:47 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_debug_output__
#define __GLUX_GL_AMD_debug_output__

GLUX_NEW_PLUGIN(GL_AMD_debug_output);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH_AMD
#  define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
#endif
#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
#endif
#ifndef GL_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
#endif
#ifndef GL_DEBUG_SEVERITY_HIGH_AMD
#  define GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
#endif
#ifndef GL_DEBUG_SEVERITY_MEDIUM_AMD
#  define GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
#endif
#ifndef GL_DEBUG_SEVERITY_LOW_AMD
#  define GL_DEBUG_SEVERITY_LOW_AMD 0x9148
#endif
#ifndef GL_DEBUG_CATEGORY_API_ERROR_AMD
#  define GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
#endif
#ifndef GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD
#  define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
#endif
#ifndef GL_DEBUG_CATEGORY_DEPRECATION_AMD
#  define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
#endif
#ifndef GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD
#  define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
#endif
#ifndef GL_DEBUG_CATEGORY_PERFORMANCE_AMD
#  define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
#endif
#ifndef GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD
#  define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
#endif
#ifndef GL_DEBUG_CATEGORY_APPLICATION_AMD
#  define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
#endif
#ifndef GL_DEBUG_CATEGORY_OTHER_AMD
#  define GL_DEBUG_CATEGORY_OTHER_AMD 0x9150
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, GLvoid *userParam);
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
typedef GLuint (APIENTRYP PFNGLUXGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
extern PFNGLUXDEBUGMESSAGEENABLEAMDPROC glDebugMessageEnableAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
extern PFNGLUXDEBUGMESSAGEINSERTAMDPROC glDebugMessageInsertAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
extern PFNGLUXDEBUGMESSAGECALLBACKAMDPROC glDebugMessageCallbackAMD;
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
extern PFNGLUXGETDEBUGMESSAGELOGAMDPROC glGetDebugMessageLogAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:54 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_debug_output__
#define __GLUX_GL_AMD_debug_output__

GLUX_NEW_PLUGIN(GL_AMD_debug_output);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH_AMD
#  define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
#endif
#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
#endif
#ifndef GL_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
#endif
#ifndef GL_DEBUG_SEVERITY_HIGH_AMD
#  define GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
#endif
#ifndef GL_DEBUG_SEVERITY_MEDIUM_AMD
#  define GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
#endif
#ifndef GL_DEBUG_SEVERITY_LOW_AMD
#  define GL_DEBUG_SEVERITY_LOW_AMD 0x9148
#endif
#ifndef GL_DEBUG_CATEGORY_API_ERROR_AMD
#  define GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
#endif
#ifndef GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD
#  define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
#endif
#ifndef GL_DEBUG_CATEGORY_DEPRECATION_AMD
#  define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
#endif
#ifndef GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD
#  define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
#endif
#ifndef GL_DEBUG_CATEGORY_PERFORMANCE_AMD
#  define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
#endif
#ifndef GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD
#  define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
#endif
#ifndef GL_DEBUG_CATEGORY_APPLICATION_AMD
#  define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
#endif
#ifndef GL_DEBUG_CATEGORY_OTHER_AMD
#  define GL_DEBUG_CATEGORY_OTHER_AMD 0x9150
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, GLvoid *userParam);
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
typedef GLuint (APIENTRYP PFNGLUXGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
extern PFNGLUXDEBUGMESSAGEENABLEAMDPROC glDebugMessageEnableAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
extern PFNGLUXDEBUGMESSAGEINSERTAMDPROC glDebugMessageInsertAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
extern PFNGLUXDEBUGMESSAGECALLBACKAMDPROC glDebugMessageCallbackAMD;
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
extern PFNGLUXGETDEBUGMESSAGELOGAMDPROC glGetDebugMessageLogAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:14 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_debug_output__
#define __GLUX_GL_AMD_debug_output__

GLUX_NEW_PLUGIN(GL_AMD_debug_output);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH_AMD
#  define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
#endif
#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
#endif
#ifndef GL_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
#endif
#ifndef GL_DEBUG_SEVERITY_HIGH_AMD
#  define GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
#endif
#ifndef GL_DEBUG_SEVERITY_MEDIUM_AMD
#  define GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
#endif
#ifndef GL_DEBUG_SEVERITY_LOW_AMD
#  define GL_DEBUG_SEVERITY_LOW_AMD 0x9148
#endif
#ifndef GL_DEBUG_CATEGORY_API_ERROR_AMD
#  define GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
#endif
#ifndef GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD
#  define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
#endif
#ifndef GL_DEBUG_CATEGORY_DEPRECATION_AMD
#  define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
#endif
#ifndef GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD
#  define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
#endif
#ifndef GL_DEBUG_CATEGORY_PERFORMANCE_AMD
#  define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
#endif
#ifndef GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD
#  define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
#endif
#ifndef GL_DEBUG_CATEGORY_APPLICATION_AMD
#  define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
#endif
#ifndef GL_DEBUG_CATEGORY_OTHER_AMD
#  define GL_DEBUG_CATEGORY_OTHER_AMD 0x9150
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, GLvoid *userParam);
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
typedef GLuint (APIENTRYP PFNGLUXGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
extern PFNGLUXDEBUGMESSAGEENABLEAMDPROC glDebugMessageEnableAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
extern PFNGLUXDEBUGMESSAGEINSERTAMDPROC glDebugMessageInsertAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
extern PFNGLUXDEBUGMESSAGECALLBACKAMDPROC glDebugMessageCallbackAMD;
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
extern PFNGLUXGETDEBUGMESSAGELOGAMDPROC glGetDebugMessageLogAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:31 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_debug_output__
#define __GLUX_GL_AMD_debug_output__

GLUX_NEW_PLUGIN(GL_AMD_debug_output);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH_AMD
#  define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
#endif
#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
#endif
#ifndef GL_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
#endif
#ifndef GL_DEBUG_SEVERITY_HIGH_AMD
#  define GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
#endif
#ifndef GL_DEBUG_SEVERITY_MEDIUM_AMD
#  define GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
#endif
#ifndef GL_DEBUG_SEVERITY_LOW_AMD
#  define GL_DEBUG_SEVERITY_LOW_AMD 0x9148
#endif
#ifndef GL_DEBUG_CATEGORY_API_ERROR_AMD
#  define GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
#endif
#ifndef GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD
#  define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
#endif
#ifndef GL_DEBUG_CATEGORY_DEPRECATION_AMD
#  define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
#endif
#ifndef GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD
#  define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
#endif
#ifndef GL_DEBUG_CATEGORY_PERFORMANCE_AMD
#  define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
#endif
#ifndef GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD
#  define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
#endif
#ifndef GL_DEBUG_CATEGORY_APPLICATION_AMD
#  define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
#endif
#ifndef GL_DEBUG_CATEGORY_OTHER_AMD
#  define GL_DEBUG_CATEGORY_OTHER_AMD 0x9150
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, GLvoid *userParam);
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
typedef GLuint (APIENTRYP PFNGLUXGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
extern PFNGLUXDEBUGMESSAGEENABLEAMDPROC glDebugMessageEnableAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
extern PFNGLUXDEBUGMESSAGEINSERTAMDPROC glDebugMessageInsertAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
extern PFNGLUXDEBUGMESSAGECALLBACKAMDPROC glDebugMessageCallbackAMD;
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
extern PFNGLUXGETDEBUGMESSAGELOGAMDPROC glGetDebugMessageLogAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:33 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_debug_output__
#define __GLUX_GL_AMD_debug_output__

GLUX_NEW_PLUGIN(GL_AMD_debug_output);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH_AMD
#  define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
#endif
#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
#endif
#ifndef GL_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
#endif
#ifndef GL_DEBUG_SEVERITY_HIGH_AMD
#  define GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
#endif
#ifndef GL_DEBUG_SEVERITY_MEDIUM_AMD
#  define GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
#endif
#ifndef GL_DEBUG_SEVERITY_LOW_AMD
#  define GL_DEBUG_SEVERITY_LOW_AMD 0x9148
#endif
#ifndef GL_DEBUG_CATEGORY_API_ERROR_AMD
#  define GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
#endif
#ifndef GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD
#  define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
#endif
#ifndef GL_DEBUG_CATEGORY_DEPRECATION_AMD
#  define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
#endif
#ifndef GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD
#  define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
#endif
#ifndef GL_DEBUG_CATEGORY_PERFORMANCE_AMD
#  define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
#endif
#ifndef GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD
#  define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
#endif
#ifndef GL_DEBUG_CATEGORY_APPLICATION_AMD
#  define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
#endif
#ifndef GL_DEBUG_CATEGORY_OTHER_AMD
#  define GL_DEBUG_CATEGORY_OTHER_AMD 0x9150
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, GLvoid *userParam);
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
typedef GLuint (APIENTRYP PFNGLUXGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
extern PFNGLUXDEBUGMESSAGEENABLEAMDPROC glDebugMessageEnableAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
extern PFNGLUXDEBUGMESSAGEINSERTAMDPROC glDebugMessageInsertAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
extern PFNGLUXDEBUGMESSAGECALLBACKAMDPROC glDebugMessageCallbackAMD;
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
extern PFNGLUXGETDEBUGMESSAGELOGAMDPROC glGetDebugMessageLogAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:55 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_debug_output__
#define __GLUX_GL_AMD_debug_output__

GLUX_NEW_PLUGIN(GL_AMD_debug_output);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH_AMD
#  define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
#endif
#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
#endif
#ifndef GL_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
#endif
#ifndef GL_DEBUG_SEVERITY_HIGH_AMD
#  define GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
#endif
#ifndef GL_DEBUG_SEVERITY_MEDIUM_AMD
#  define GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
#endif
#ifndef GL_DEBUG_SEVERITY_LOW_AMD
#  define GL_DEBUG_SEVERITY_LOW_AMD 0x9148
#endif
#ifndef GL_DEBUG_CATEGORY_API_ERROR_AMD
#  define GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
#endif
#ifndef GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD
#  define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
#endif
#ifndef GL_DEBUG_CATEGORY_DEPRECATION_AMD
#  define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
#endif
#ifndef GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD
#  define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
#endif
#ifndef GL_DEBUG_CATEGORY_PERFORMANCE_AMD
#  define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
#endif
#ifndef GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD
#  define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
#endif
#ifndef GL_DEBUG_CATEGORY_APPLICATION_AMD
#  define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
#endif
#ifndef GL_DEBUG_CATEGORY_OTHER_AMD
#  define GL_DEBUG_CATEGORY_OTHER_AMD 0x9150
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, GLvoid *userParam);
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
typedef GLuint (APIENTRYP PFNGLUXGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
extern PFNGLUXDEBUGMESSAGEENABLEAMDPROC glDebugMessageEnableAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
extern PFNGLUXDEBUGMESSAGEINSERTAMDPROC glDebugMessageInsertAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
extern PFNGLUXDEBUGMESSAGECALLBACKAMDPROC glDebugMessageCallbackAMD;
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
extern PFNGLUXGETDEBUGMESSAGELOGAMDPROC glGetDebugMessageLogAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:29:07 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_debug_output__
#define __GLUX_GL_AMD_debug_output__

GLUX_NEW_PLUGIN(GL_AMD_debug_output);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH_AMD
#  define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
#endif
#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
#endif
#ifndef GL_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
#endif
#ifndef GL_DEBUG_SEVERITY_HIGH_AMD
#  define GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
#endif
#ifndef GL_DEBUG_SEVERITY_MEDIUM_AMD
#  define GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
#endif
#ifndef GL_DEBUG_SEVERITY_LOW_AMD
#  define GL_DEBUG_SEVERITY_LOW_AMD 0x9148
#endif
#ifndef GL_DEBUG_CATEGORY_API_ERROR_AMD
#  define GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
#endif
#ifndef GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD
#  define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
#endif
#ifndef GL_DEBUG_CATEGORY_DEPRECATION_AMD
#  define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
#endif
#ifndef GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD
#  define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
#endif
#ifndef GL_DEBUG_CATEGORY_PERFORMANCE_AMD
#  define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
#endif
#ifndef GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD
#  define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
#endif
#ifndef GL_DEBUG_CATEGORY_APPLICATION_AMD
#  define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
#endif
#ifndef GL_DEBUG_CATEGORY_OTHER_AMD
#  define GL_DEBUG_CATEGORY_OTHER_AMD 0x9150
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, GLvoid *userParam);
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
typedef GLuint (APIENTRYP PFNGLUXGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
extern PFNGLUXDEBUGMESSAGEENABLEAMDPROC glDebugMessageEnableAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
extern PFNGLUXDEBUGMESSAGEINSERTAMDPROC glDebugMessageInsertAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
extern PFNGLUXDEBUGMESSAGECALLBACKAMDPROC glDebugMessageCallbackAMD;
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
extern PFNGLUXGETDEBUGMESSAGELOGAMDPROC glGetDebugMessageLogAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:17:07 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_debug_output__
#define __GLUX_GL_AMD_debug_output__

GLUX_NEW_PLUGIN(GL_AMD_debug_output);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH_AMD
#  define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
#endif
#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
#endif
#ifndef GL_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
#endif
#ifndef GL_DEBUG_SEVERITY_HIGH_AMD
#  define GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
#endif
#ifndef GL_DEBUG_SEVERITY_MEDIUM_AMD
#  define GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
#endif
#ifndef GL_DEBUG_SEVERITY_LOW_AMD
#  define GL_DEBUG_SEVERITY_LOW_AMD 0x9148
#endif
#ifndef GL_DEBUG_CATEGORY_API_ERROR_AMD
#  define GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
#endif
#ifndef GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD
#  define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
#endif
#ifndef GL_DEBUG_CATEGORY_DEPRECATION_AMD
#  define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
#endif
#ifndef GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD
#  define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
#endif
#ifndef GL_DEBUG_CATEGORY_PERFORMANCE_AMD
#  define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
#endif
#ifndef GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD
#  define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
#endif
#ifndef GL_DEBUG_CATEGORY_APPLICATION_AMD
#  define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
#endif
#ifndef GL_DEBUG_CATEGORY_OTHER_AMD
#  define GL_DEBUG_CATEGORY_OTHER_AMD 0x9150
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, GLvoid *userParam);
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
typedef GLuint (APIENTRYP PFNGLUXGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
extern PFNGLUXDEBUGMESSAGEENABLEAMDPROC glDebugMessageEnableAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
extern PFNGLUXDEBUGMESSAGEINSERTAMDPROC glDebugMessageInsertAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
extern PFNGLUXDEBUGMESSAGECALLBACKAMDPROC glDebugMessageCallbackAMD;
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
extern PFNGLUXGETDEBUGMESSAGELOGAMDPROC glGetDebugMessageLogAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_debug_output__
#define __GLUX_GL_AMD_debug_output__

GLUX_NEW_PLUGIN(GL_AMD_debug_output);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH_AMD
#  define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
#endif
#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
#endif
#ifndef GL_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
#endif
#ifndef GL_DEBUG_SEVERITY_HIGH_AMD
#  define GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
#endif
#ifndef GL_DEBUG_SEVERITY_MEDIUM_AMD
#  define GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
#endif
#ifndef GL_DEBUG_SEVERITY_LOW_AMD
#  define GL_DEBUG_SEVERITY_LOW_AMD 0x9148
#endif
#ifndef GL_DEBUG_CATEGORY_API_ERROR_AMD
#  define GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
#endif
#ifndef GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD
#  define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
#endif
#ifndef GL_DEBUG_CATEGORY_DEPRECATION_AMD
#  define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
#endif
#ifndef GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD
#  define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
#endif
#ifndef GL_DEBUG_CATEGORY_PERFORMANCE_AMD
#  define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
#endif
#ifndef GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD
#  define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
#endif
#ifndef GL_DEBUG_CATEGORY_APPLICATION_AMD
#  define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
#endif
#ifndef GL_DEBUG_CATEGORY_OTHER_AMD
#  define GL_DEBUG_CATEGORY_OTHER_AMD 0x9150
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, GLvoid *userParam);
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
typedef GLuint (APIENTRYP PFNGLUXGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
extern PFNGLUXDEBUGMESSAGEENABLEAMDPROC glDebugMessageEnableAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
extern PFNGLUXDEBUGMESSAGEINSERTAMDPROC glDebugMessageInsertAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
extern PFNGLUXDEBUGMESSAGECALLBACKAMDPROC glDebugMessageCallbackAMD;
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
extern PFNGLUXGETDEBUGMESSAGELOGAMDPROC glGetDebugMessageLogAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:22 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_debug_output__
#define __GLUX_GL_AMD_debug_output__

GLUX_NEW_PLUGIN(GL_AMD_debug_output);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH_AMD
#  define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
#endif
#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
#endif
#ifndef GL_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
#endif
#ifndef GL_DEBUG_SEVERITY_HIGH_AMD
#  define GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
#endif
#ifndef GL_DEBUG_SEVERITY_MEDIUM_AMD
#  define GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
#endif
#ifndef GL_DEBUG_SEVERITY_LOW_AMD
#  define GL_DEBUG_SEVERITY_LOW_AMD 0x9148
#endif
#ifndef GL_DEBUG_CATEGORY_API_ERROR_AMD
#  define GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
#endif
#ifndef GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD
#  define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
#endif
#ifndef GL_DEBUG_CATEGORY_DEPRECATION_AMD
#  define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
#endif
#ifndef GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD
#  define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
#endif
#ifndef GL_DEBUG_CATEGORY_PERFORMANCE_AMD
#  define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
#endif
#ifndef GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD
#  define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
#endif
#ifndef GL_DEBUG_CATEGORY_APPLICATION_AMD
#  define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
#endif
#ifndef GL_DEBUG_CATEGORY_OTHER_AMD
#  define GL_DEBUG_CATEGORY_OTHER_AMD 0x9150
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, GLvoid *userParam);
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
typedef GLuint (APIENTRYP PFNGLUXGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
extern PFNGLUXDEBUGMESSAGEENABLEAMDPROC glDebugMessageEnableAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
extern PFNGLUXDEBUGMESSAGEINSERTAMDPROC glDebugMessageInsertAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
extern PFNGLUXDEBUGMESSAGECALLBACKAMDPROC glDebugMessageCallbackAMD;
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
extern PFNGLUXGETDEBUGMESSAGELOGAMDPROC glGetDebugMessageLogAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:02 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_debug_output__
#define __GLUX_GL_AMD_debug_output__

GLUX_NEW_PLUGIN(GL_AMD_debug_output);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH_AMD
#  define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
#endif
#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
#endif
#ifndef GL_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
#endif
#ifndef GL_DEBUG_SEVERITY_HIGH_AMD
#  define GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
#endif
#ifndef GL_DEBUG_SEVERITY_MEDIUM_AMD
#  define GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
#endif
#ifndef GL_DEBUG_SEVERITY_LOW_AMD
#  define GL_DEBUG_SEVERITY_LOW_AMD 0x9148
#endif
#ifndef GL_DEBUG_CATEGORY_API_ERROR_AMD
#  define GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
#endif
#ifndef GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD
#  define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
#endif
#ifndef GL_DEBUG_CATEGORY_DEPRECATION_AMD
#  define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
#endif
#ifndef GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD
#  define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
#endif
#ifndef GL_DEBUG_CATEGORY_PERFORMANCE_AMD
#  define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
#endif
#ifndef GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD
#  define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
#endif
#ifndef GL_DEBUG_CATEGORY_APPLICATION_AMD
#  define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
#endif
#ifndef GL_DEBUG_CATEGORY_OTHER_AMD
#  define GL_DEBUG_CATEGORY_OTHER_AMD 0x9150
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, GLvoid *userParam);
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
typedef GLuint (APIENTRYP PFNGLUXGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
extern PFNGLUXDEBUGMESSAGEENABLEAMDPROC glDebugMessageEnableAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
extern PFNGLUXDEBUGMESSAGEINSERTAMDPROC glDebugMessageInsertAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
extern PFNGLUXDEBUGMESSAGECALLBACKAMDPROC glDebugMessageCallbackAMD;
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
extern PFNGLUXGETDEBUGMESSAGELOGAMDPROC glGetDebugMessageLogAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:09 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_debug_output__
#define __GLUX_GL_AMD_debug_output__

GLUX_NEW_PLUGIN(GL_AMD_debug_output);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH_AMD
#  define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
#endif
#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
#endif
#ifndef GL_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
#endif
#ifndef GL_DEBUG_SEVERITY_HIGH_AMD
#  define GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
#endif
#ifndef GL_DEBUG_SEVERITY_MEDIUM_AMD
#  define GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
#endif
#ifndef GL_DEBUG_SEVERITY_LOW_AMD
#  define GL_DEBUG_SEVERITY_LOW_AMD 0x9148
#endif
#ifndef GL_DEBUG_CATEGORY_API_ERROR_AMD
#  define GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
#endif
#ifndef GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD
#  define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
#endif
#ifndef GL_DEBUG_CATEGORY_DEPRECATION_AMD
#  define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
#endif
#ifndef GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD
#  define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
#endif
#ifndef GL_DEBUG_CATEGORY_PERFORMANCE_AMD
#  define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
#endif
#ifndef GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD
#  define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
#endif
#ifndef GL_DEBUG_CATEGORY_APPLICATION_AMD
#  define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
#endif
#ifndef GL_DEBUG_CATEGORY_OTHER_AMD
#  define GL_DEBUG_CATEGORY_OTHER_AMD 0x9150
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, GLvoid *userParam);
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
typedef GLuint (APIENTRYP PFNGLUXGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
extern PFNGLUXDEBUGMESSAGEENABLEAMDPROC glDebugMessageEnableAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
extern PFNGLUXDEBUGMESSAGEINSERTAMDPROC glDebugMessageInsertAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
extern PFNGLUXDEBUGMESSAGECALLBACKAMDPROC glDebugMessageCallbackAMD;
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
extern PFNGLUXGETDEBUGMESSAGELOGAMDPROC glGetDebugMessageLogAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_debug_output__
#define __GLUX_GL_AMD_debug_output__

GLUX_NEW_PLUGIN(GL_AMD_debug_output);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH_AMD
#  define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
#endif
#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
#endif
#ifndef GL_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
#endif
#ifndef GL_DEBUG_SEVERITY_HIGH_AMD
#  define GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
#endif
#ifndef GL_DEBUG_SEVERITY_MEDIUM_AMD
#  define GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
#endif
#ifndef GL_DEBUG_SEVERITY_LOW_AMD
#  define GL_DEBUG_SEVERITY_LOW_AMD 0x9148
#endif
#ifndef GL_DEBUG_CATEGORY_API_ERROR_AMD
#  define GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
#endif
#ifndef GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD
#  define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
#endif
#ifndef GL_DEBUG_CATEGORY_DEPRECATION_AMD
#  define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
#endif
#ifndef GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD
#  define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
#endif
#ifndef GL_DEBUG_CATEGORY_PERFORMANCE_AMD
#  define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
#endif
#ifndef GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD
#  define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
#endif
#ifndef GL_DEBUG_CATEGORY_APPLICATION_AMD
#  define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
#endif
#ifndef GL_DEBUG_CATEGORY_OTHER_AMD
#  define GL_DEBUG_CATEGORY_OTHER_AMD 0x9150
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, GLvoid *userParam);
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
typedef GLuint (APIENTRYP PFNGLUXGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
extern PFNGLUXDEBUGMESSAGEENABLEAMDPROC glDebugMessageEnableAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
extern PFNGLUXDEBUGMESSAGEINSERTAMDPROC glDebugMessageInsertAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
extern PFNGLUXDEBUGMESSAGECALLBACKAMDPROC glDebugMessageCallbackAMD;
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
extern PFNGLUXGETDEBUGMESSAGELOGAMDPROC glGetDebugMessageLogAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:52:07 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_debug_output__
#define __GLUX_GL_AMD_debug_output__

GLUX_NEW_PLUGIN(GL_AMD_debug_output);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH_AMD
#  define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
#endif
#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
#endif
#ifndef GL_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
#endif
#ifndef GL_DEBUG_SEVERITY_HIGH_AMD
#  define GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
#endif
#ifndef GL_DEBUG_SEVERITY_MEDIUM_AMD
#  define GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
#endif
#ifndef GL_DEBUG_SEVERITY_LOW_AMD
#  define GL_DEBUG_SEVERITY_LOW_AMD 0x9148
#endif
#ifndef GL_DEBUG_CATEGORY_API_ERROR_AMD
#  define GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
#endif
#ifndef GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD
#  define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
#endif
#ifndef GL_DEBUG_CATEGORY_DEPRECATION_AMD
#  define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
#endif
#ifndef GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD
#  define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
#endif
#ifndef GL_DEBUG_CATEGORY_PERFORMANCE_AMD
#  define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
#endif
#ifndef GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD
#  define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
#endif
#ifndef GL_DEBUG_CATEGORY_APPLICATION_AMD
#  define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
#endif
#ifndef GL_DEBUG_CATEGORY_OTHER_AMD
#  define GL_DEBUG_CATEGORY_OTHER_AMD 0x9150
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, GLvoid *userParam);
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
typedef GLuint (APIENTRYP PFNGLUXGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
extern PFNGLUXDEBUGMESSAGEENABLEAMDPROC glDebugMessageEnableAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
extern PFNGLUXDEBUGMESSAGEINSERTAMDPROC glDebugMessageInsertAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
extern PFNGLUXDEBUGMESSAGECALLBACKAMDPROC glDebugMessageCallbackAMD;
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
extern PFNGLUXGETDEBUGMESSAGELOGAMDPROC glGetDebugMessageLogAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_debug_output__
#define __GLUX_GL_AMD_debug_output__

GLUX_NEW_PLUGIN(GL_AMD_debug_output);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH_AMD
#  define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
#endif
#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
#endif
#ifndef GL_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
#endif
#ifndef GL_DEBUG_SEVERITY_HIGH_AMD
#  define GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
#endif
#ifndef GL_DEBUG_SEVERITY_MEDIUM_AMD
#  define GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
#endif
#ifndef GL_DEBUG_SEVERITY_LOW_AMD
#  define GL_DEBUG_SEVERITY_LOW_AMD 0x9148
#endif
#ifndef GL_DEBUG_CATEGORY_API_ERROR_AMD
#  define GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
#endif
#ifndef GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD
#  define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
#endif
#ifndef GL_DEBUG_CATEGORY_DEPRECATION_AMD
#  define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
#endif
#ifndef GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD
#  define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
#endif
#ifndef GL_DEBUG_CATEGORY_PERFORMANCE_AMD
#  define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
#endif
#ifndef GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD
#  define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
#endif
#ifndef GL_DEBUG_CATEGORY_APPLICATION_AMD
#  define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
#endif
#ifndef GL_DEBUG_CATEGORY_OTHER_AMD
#  define GL_DEBUG_CATEGORY_OTHER_AMD 0x9150
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, GLvoid *userParam);
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
typedef GLuint (APIENTRYP PFNGLUXGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
extern PFNGLUXDEBUGMESSAGEENABLEAMDPROC glDebugMessageEnableAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
extern PFNGLUXDEBUGMESSAGEINSERTAMDPROC glDebugMessageInsertAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
extern PFNGLUXDEBUGMESSAGECALLBACKAMDPROC glDebugMessageCallbackAMD;
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
extern PFNGLUXGETDEBUGMESSAGELOGAMDPROC glGetDebugMessageLogAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:08 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_debug_output__
#define __GLUX_GL_AMD_debug_output__

GLUX_NEW_PLUGIN(GL_AMD_debug_output);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH_AMD
#  define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
#endif
#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
#endif
#ifndef GL_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
#endif
#ifndef GL_DEBUG_SEVERITY_HIGH_AMD
#  define GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
#endif
#ifndef GL_DEBUG_SEVERITY_MEDIUM_AMD
#  define GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
#endif
#ifndef GL_DEBUG_SEVERITY_LOW_AMD
#  define GL_DEBUG_SEVERITY_LOW_AMD 0x9148
#endif
#ifndef GL_DEBUG_CATEGORY_API_ERROR_AMD
#  define GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
#endif
#ifndef GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD
#  define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
#endif
#ifndef GL_DEBUG_CATEGORY_DEPRECATION_AMD
#  define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
#endif
#ifndef GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD
#  define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
#endif
#ifndef GL_DEBUG_CATEGORY_PERFORMANCE_AMD
#  define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
#endif
#ifndef GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD
#  define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
#endif
#ifndef GL_DEBUG_CATEGORY_APPLICATION_AMD
#  define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
#endif
#ifndef GL_DEBUG_CATEGORY_OTHER_AMD
#  define GL_DEBUG_CATEGORY_OTHER_AMD 0x9150
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, GLvoid *userParam);
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
typedef GLuint (APIENTRYP PFNGLUXGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
extern PFNGLUXDEBUGMESSAGEENABLEAMDPROC glDebugMessageEnableAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
extern PFNGLUXDEBUGMESSAGEINSERTAMDPROC glDebugMessageInsertAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
extern PFNGLUXDEBUGMESSAGECALLBACKAMDPROC glDebugMessageCallbackAMD;
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
extern PFNGLUXGETDEBUGMESSAGELOGAMDPROC glGetDebugMessageLogAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:28 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_debug_output__
#define __GLUX_GL_AMD_debug_output__

GLUX_NEW_PLUGIN(GL_AMD_debug_output);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH_AMD
#  define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
#endif
#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
#endif
#ifndef GL_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
#endif
#ifndef GL_DEBUG_SEVERITY_HIGH_AMD
#  define GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
#endif
#ifndef GL_DEBUG_SEVERITY_MEDIUM_AMD
#  define GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
#endif
#ifndef GL_DEBUG_SEVERITY_LOW_AMD
#  define GL_DEBUG_SEVERITY_LOW_AMD 0x9148
#endif
#ifndef GL_DEBUG_CATEGORY_API_ERROR_AMD
#  define GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
#endif
#ifndef GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD
#  define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
#endif
#ifndef GL_DEBUG_CATEGORY_DEPRECATION_AMD
#  define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
#endif
#ifndef GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD
#  define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
#endif
#ifndef GL_DEBUG_CATEGORY_PERFORMANCE_AMD
#  define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
#endif
#ifndef GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD
#  define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
#endif
#ifndef GL_DEBUG_CATEGORY_APPLICATION_AMD
#  define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
#endif
#ifndef GL_DEBUG_CATEGORY_OTHER_AMD
#  define GL_DEBUG_CATEGORY_OTHER_AMD 0x9150
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, GLvoid *userParam);
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
typedef GLuint (APIENTRYP PFNGLUXGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
extern PFNGLUXDEBUGMESSAGEENABLEAMDPROC glDebugMessageEnableAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
extern PFNGLUXDEBUGMESSAGEINSERTAMDPROC glDebugMessageInsertAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
extern PFNGLUXDEBUGMESSAGECALLBACKAMDPROC glDebugMessageCallbackAMD;
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
extern PFNGLUXGETDEBUGMESSAGELOGAMDPROC glGetDebugMessageLogAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_debug_output__
#define __GLUX_GL_AMD_debug_output__

GLUX_NEW_PLUGIN(GL_AMD_debug_output);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH_AMD
#  define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
#endif
#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
#endif
#ifndef GL_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
#endif
#ifndef GL_DEBUG_SEVERITY_HIGH_AMD
#  define GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
#endif
#ifndef GL_DEBUG_SEVERITY_MEDIUM_AMD
#  define GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
#endif
#ifndef GL_DEBUG_SEVERITY_LOW_AMD
#  define GL_DEBUG_SEVERITY_LOW_AMD 0x9148
#endif
#ifndef GL_DEBUG_CATEGORY_API_ERROR_AMD
#  define GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
#endif
#ifndef GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD
#  define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
#endif
#ifndef GL_DEBUG_CATEGORY_DEPRECATION_AMD
#  define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
#endif
#ifndef GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD
#  define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
#endif
#ifndef GL_DEBUG_CATEGORY_PERFORMANCE_AMD
#  define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
#endif
#ifndef GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD
#  define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
#endif
#ifndef GL_DEBUG_CATEGORY_APPLICATION_AMD
#  define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
#endif
#ifndef GL_DEBUG_CATEGORY_OTHER_AMD
#  define GL_DEBUG_CATEGORY_OTHER_AMD 0x9150
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, GLvoid *userParam);
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
typedef GLuint (APIENTRYP PFNGLUXGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
extern PFNGLUXDEBUGMESSAGEENABLEAMDPROC glDebugMessageEnableAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
extern PFNGLUXDEBUGMESSAGEINSERTAMDPROC glDebugMessageInsertAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
extern PFNGLUXDEBUGMESSAGECALLBACKAMDPROC glDebugMessageCallbackAMD;
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
extern PFNGLUXGETDEBUGMESSAGELOGAMDPROC glGetDebugMessageLogAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:42:03 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_debug_output__
#define __GLUX_GL_AMD_debug_output__

GLUX_NEW_PLUGIN(GL_AMD_debug_output);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH_AMD
#  define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
#endif
#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
#endif
#ifndef GL_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
#endif
#ifndef GL_DEBUG_SEVERITY_HIGH_AMD
#  define GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
#endif
#ifndef GL_DEBUG_SEVERITY_MEDIUM_AMD
#  define GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
#endif
#ifndef GL_DEBUG_SEVERITY_LOW_AMD
#  define GL_DEBUG_SEVERITY_LOW_AMD 0x9148
#endif
#ifndef GL_DEBUG_CATEGORY_API_ERROR_AMD
#  define GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
#endif
#ifndef GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD
#  define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
#endif
#ifndef GL_DEBUG_CATEGORY_DEPRECATION_AMD
#  define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
#endif
#ifndef GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD
#  define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
#endif
#ifndef GL_DEBUG_CATEGORY_PERFORMANCE_AMD
#  define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
#endif
#ifndef GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD
#  define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
#endif
#ifndef GL_DEBUG_CATEGORY_APPLICATION_AMD
#  define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
#endif
#ifndef GL_DEBUG_CATEGORY_OTHER_AMD
#  define GL_DEBUG_CATEGORY_OTHER_AMD 0x9150
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, GLvoid *userParam);
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
typedef GLuint (APIENTRYP PFNGLUXGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
extern PFNGLUXDEBUGMESSAGEENABLEAMDPROC glDebugMessageEnableAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
extern PFNGLUXDEBUGMESSAGEINSERTAMDPROC glDebugMessageInsertAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
extern PFNGLUXDEBUGMESSAGECALLBACKAMDPROC glDebugMessageCallbackAMD;
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
extern PFNGLUXGETDEBUGMESSAGELOGAMDPROC glGetDebugMessageLogAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:43 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_debug_output__
#define __GLUX_GL_AMD_debug_output__

GLUX_NEW_PLUGIN(GL_AMD_debug_output);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH_AMD
#  define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
#endif
#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
#endif
#ifndef GL_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
#endif
#ifndef GL_DEBUG_SEVERITY_HIGH_AMD
#  define GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
#endif
#ifndef GL_DEBUG_SEVERITY_MEDIUM_AMD
#  define GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
#endif
#ifndef GL_DEBUG_SEVERITY_LOW_AMD
#  define GL_DEBUG_SEVERITY_LOW_AMD 0x9148
#endif
#ifndef GL_DEBUG_CATEGORY_API_ERROR_AMD
#  define GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
#endif
#ifndef GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD
#  define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
#endif
#ifndef GL_DEBUG_CATEGORY_DEPRECATION_AMD
#  define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
#endif
#ifndef GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD
#  define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
#endif
#ifndef GL_DEBUG_CATEGORY_PERFORMANCE_AMD
#  define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
#endif
#ifndef GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD
#  define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
#endif
#ifndef GL_DEBUG_CATEGORY_APPLICATION_AMD
#  define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
#endif
#ifndef GL_DEBUG_CATEGORY_OTHER_AMD
#  define GL_DEBUG_CATEGORY_OTHER_AMD 0x9150
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, GLvoid *userParam);
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
typedef GLuint (APIENTRYP PFNGLUXGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
extern PFNGLUXDEBUGMESSAGEENABLEAMDPROC glDebugMessageEnableAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
extern PFNGLUXDEBUGMESSAGEINSERTAMDPROC glDebugMessageInsertAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
extern PFNGLUXDEBUGMESSAGECALLBACKAMDPROC glDebugMessageCallbackAMD;
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
extern PFNGLUXGETDEBUGMESSAGELOGAMDPROC glGetDebugMessageLogAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:10:02 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_debug_output__
#define __GLUX_GL_AMD_debug_output__

GLUX_NEW_PLUGIN(GL_AMD_debug_output);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH_AMD
#  define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
#endif
#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
#endif
#ifndef GL_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
#endif
#ifndef GL_DEBUG_SEVERITY_HIGH_AMD
#  define GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
#endif
#ifndef GL_DEBUG_SEVERITY_MEDIUM_AMD
#  define GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
#endif
#ifndef GL_DEBUG_SEVERITY_LOW_AMD
#  define GL_DEBUG_SEVERITY_LOW_AMD 0x9148
#endif
#ifndef GL_DEBUG_CATEGORY_API_ERROR_AMD
#  define GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
#endif
#ifndef GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD
#  define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
#endif
#ifndef GL_DEBUG_CATEGORY_DEPRECATION_AMD
#  define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
#endif
#ifndef GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD
#  define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
#endif
#ifndef GL_DEBUG_CATEGORY_PERFORMANCE_AMD
#  define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
#endif
#ifndef GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD
#  define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
#endif
#ifndef GL_DEBUG_CATEGORY_APPLICATION_AMD
#  define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
#endif
#ifndef GL_DEBUG_CATEGORY_OTHER_AMD
#  define GL_DEBUG_CATEGORY_OTHER_AMD 0x9150
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, GLvoid *userParam);
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
typedef GLuint (APIENTRYP PFNGLUXGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
extern PFNGLUXDEBUGMESSAGEENABLEAMDPROC glDebugMessageEnableAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
extern PFNGLUXDEBUGMESSAGEINSERTAMDPROC glDebugMessageInsertAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
extern PFNGLUXDEBUGMESSAGECALLBACKAMDPROC glDebugMessageCallbackAMD;
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
extern PFNGLUXGETDEBUGMESSAGELOGAMDPROC glGetDebugMessageLogAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:20:02 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_debug_output__
#define __GLUX_GL_AMD_debug_output__

GLUX_NEW_PLUGIN(GL_AMD_debug_output);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH_AMD
#  define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
#endif
#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
#endif
#ifndef GL_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
#endif
#ifndef GL_DEBUG_SEVERITY_HIGH_AMD
#  define GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
#endif
#ifndef GL_DEBUG_SEVERITY_MEDIUM_AMD
#  define GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
#endif
#ifndef GL_DEBUG_SEVERITY_LOW_AMD
#  define GL_DEBUG_SEVERITY_LOW_AMD 0x9148
#endif
#ifndef GL_DEBUG_CATEGORY_API_ERROR_AMD
#  define GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
#endif
#ifndef GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD
#  define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
#endif
#ifndef GL_DEBUG_CATEGORY_DEPRECATION_AMD
#  define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
#endif
#ifndef GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD
#  define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
#endif
#ifndef GL_DEBUG_CATEGORY_PERFORMANCE_AMD
#  define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
#endif
#ifndef GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD
#  define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
#endif
#ifndef GL_DEBUG_CATEGORY_APPLICATION_AMD
#  define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
#endif
#ifndef GL_DEBUG_CATEGORY_OTHER_AMD
#  define GL_DEBUG_CATEGORY_OTHER_AMD 0x9150
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, GLvoid *userParam);
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
typedef GLuint (APIENTRYP PFNGLUXGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
extern PFNGLUXDEBUGMESSAGEENABLEAMDPROC glDebugMessageEnableAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
extern PFNGLUXDEBUGMESSAGEINSERTAMDPROC glDebugMessageInsertAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
extern PFNGLUXDEBUGMESSAGECALLBACKAMDPROC glDebugMessageCallbackAMD;
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
extern PFNGLUXGETDEBUGMESSAGELOGAMDPROC glGetDebugMessageLogAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:43:03 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_debug_output__
#define __GLUX_GL_AMD_debug_output__

GLUX_NEW_PLUGIN(GL_AMD_debug_output)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH_AMD
#  define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
#endif
#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
#endif
#ifndef GL_DEBUG_LOGGED_MESSAGES_AMD
#  define GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
#endif
#ifndef GL_DEBUG_SEVERITY_HIGH_AMD
#  define GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
#endif
#ifndef GL_DEBUG_SEVERITY_MEDIUM_AMD
#  define GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
#endif
#ifndef GL_DEBUG_SEVERITY_LOW_AMD
#  define GL_DEBUG_SEVERITY_LOW_AMD 0x9148
#endif
#ifndef GL_DEBUG_CATEGORY_API_ERROR_AMD
#  define GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
#endif
#ifndef GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD
#  define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
#endif
#ifndef GL_DEBUG_CATEGORY_DEPRECATION_AMD
#  define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
#endif
#ifndef GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD
#  define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
#endif
#ifndef GL_DEBUG_CATEGORY_PERFORMANCE_AMD
#  define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
#endif
#ifndef GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD
#  define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
#endif
#ifndef GL_DEBUG_CATEGORY_APPLICATION_AMD
#  define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
#endif
#ifndef GL_DEBUG_CATEGORY_OTHER_AMD
#  define GL_DEBUG_CATEGORY_OTHER_AMD 0x9150
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, GLvoid *userParam);
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
typedef GLuint (APIENTRYP PFNGLUXGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDebugMessageEnableAMD
extern PFNGLUXDEBUGMESSAGEENABLEAMDPROC glDebugMessageEnableAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertAMD
extern PFNGLUXDEBUGMESSAGEINSERTAMDPROC glDebugMessageInsertAMD;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackAMD
extern PFNGLUXDEBUGMESSAGECALLBACKAMDPROC glDebugMessageCallbackAMD;
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogAMD
extern PFNGLUXGETDEBUGMESSAGELOGAMDPROC glGetDebugMessageLogAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
