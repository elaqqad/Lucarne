
// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:42 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_VERSION_1_4__
#define __GLUX_GL_VERSION_1_4__

GLUX_NEW_PLUGIN(GL_VERSION_1_4);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BLEND_DST_RGB
#  define GL_BLEND_DST_RGB 0x80C8
#endif
#ifndef GL_BLEND_SRC_RGB
#  define GL_BLEND_SRC_RGB 0x80C9
#endif
#ifndef GL_BLEND_DST_ALPHA
#  define GL_BLEND_DST_ALPHA 0x80CA
#endif
#ifndef GL_BLEND_SRC_ALPHA
#  define GL_BLEND_SRC_ALPHA 0x80CB
#endif
#ifndef GL_POINT_FADE_THRESHOLD_SIZE
#  define GL_POINT_FADE_THRESHOLD_SIZE 0x8128
#endif
#ifndef GL_DEPTH_COMPONENT16
#  define GL_DEPTH_COMPONENT16 0x81A5
#endif
#ifndef GL_DEPTH_COMPONENT24
#  define GL_DEPTH_COMPONENT24 0x81A6
#endif
#ifndef GL_DEPTH_COMPONENT32
#  define GL_DEPTH_COMPONENT32 0x81A7
#endif
#ifndef GL_MIRRORED_REPEAT
#  define GL_MIRRORED_REPEAT 0x8370
#endif
#ifndef GL_MAX_TEXTURE_LOD_BIAS
#  define GL_MAX_TEXTURE_LOD_BIAS 0x84FD
#endif
#ifndef GL_TEXTURE_LOD_BIAS
#  define GL_TEXTURE_LOD_BIAS 0x8501
#endif
#ifndef GL_INCR_WRAP
#  define GL_INCR_WRAP 0x8507
#endif
#ifndef GL_DECR_WRAP
#  define GL_DECR_WRAP 0x8508
#endif
#ifndef GL_TEXTURE_DEPTH_SIZE
#  define GL_TEXTURE_DEPTH_SIZE 0x884A
#endif
#ifndef GL_TEXTURE_COMPARE_MODE
#  define GL_TEXTURE_COMPARE_MODE 0x884C
#endif
#ifndef GL_TEXTURE_COMPARE_FUNC
#  define GL_TEXTURE_COMPARE_FUNC 0x884D
#endif
#ifndef GL_POINT_SIZE_MIN
#  define GL_POINT_SIZE_MIN 0x8126
#endif
#ifndef GL_POINT_SIZE_MAX
#  define GL_POINT_SIZE_MAX 0x8127
#endif
#ifndef GL_POINT_DISTANCE_ATTENUATION
#  define GL_POINT_DISTANCE_ATTENUATION 0x8129
#endif
#ifndef GL_GENERATE_MIPMAP
#  define GL_GENERATE_MIPMAP 0x8191
#endif
#ifndef GL_GENERATE_MIPMAP_HINT
#  define GL_GENERATE_MIPMAP_HINT 0x8192
#endif
#ifndef GL_FOG_COORDINATE_SOURCE
#  define GL_FOG_COORDINATE_SOURCE 0x8450
#endif
#ifndef GL_FOG_COORDINATE
#  define GL_FOG_COORDINATE 0x8451
#endif
#ifndef GL_FRAGMENT_DEPTH
#  define GL_FRAGMENT_DEPTH 0x8452
#endif
#ifndef GL_CURRENT_FOG_COORDINATE
#  define GL_CURRENT_FOG_COORDINATE 0x8453
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_TYPE
#  define GL_FOG_COORDINATE_ARRAY_TYPE 0x8454
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_STRIDE
#  define GL_FOG_COORDINATE_ARRAY_STRIDE 0x8455
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_POINTER
#  define GL_FOG_COORDINATE_ARRAY_POINTER 0x8456
#endif
#ifndef GL_FOG_COORDINATE_ARRAY
#  define GL_FOG_COORDINATE_ARRAY 0x8457
#endif
#ifndef GL_COLOR_SUM
#  define GL_COLOR_SUM 0x8458
#endif
#ifndef GL_CURRENT_SECONDARY_COLOR
#  define GL_CURRENT_SECONDARY_COLOR 0x8459
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_SIZE
#  define GL_SECONDARY_COLOR_ARRAY_SIZE 0x845A
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_TYPE
#  define GL_SECONDARY_COLOR_ARRAY_TYPE 0x845B
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_STRIDE
#  define GL_SECONDARY_COLOR_ARRAY_STRIDE 0x845C
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_POINTER
#  define GL_SECONDARY_COLOR_ARRAY_POINTER 0x845D
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY
#  define GL_SECONDARY_COLOR_ARRAY 0x845E
#endif
#ifndef GL_TEXTURE_FILTER_CONTROL
#  define GL_TEXTURE_FILTER_CONTROL 0x8500
#endif
#ifndef GL_DEPTH_TEXTURE_MODE
#  define GL_DEPTH_TEXTURE_MODE 0x884B
#endif
#ifndef GL_COMPARE_R_TO_TEXTURE
#  define GL_COMPARE_R_TO_TEXTURE 0x884E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBlendFuncSeparate
typedef void (APIENTRYP PFNGLUXBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawArrays
typedef void (APIENTRYP PFNGLUXMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElements
typedef void (APIENTRYP PFNGLUXMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei drawcount);
#endif
#ifndef __GLUX__GLFCT_glPointParameterf
typedef void (APIENTRYP PFNGLUXPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glPointParameterfv
typedef void (APIENTRYP PFNGLUXPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glPointParameteri
typedef void (APIENTRYP PFNGLUXPOINTPARAMETERIPROC) (GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glPointParameteriv
typedef void (APIENTRYP PFNGLUXPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glFogCoordf
typedef void (APIENTRYP PFNGLUXFOGCOORDFPROC) (GLfloat coord);
#endif
#ifndef __GLUX__GLFCT_glFogCoordfv
typedef void (APIENTRYP PFNGLUXFOGCOORDFVPROC) (const GLfloat *coord);
#endif
#ifndef __GLUX__GLFCT_glFogCoordd
typedef void (APIENTRYP PFNGLUXFOGCOORDDPROC) (GLdouble coord);
#endif
#ifndef __GLUX__GLFCT_glFogCoorddv
typedef void (APIENTRYP PFNGLUXFOGCOORDDVPROC) (const GLdouble *coord);
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointer
typedef void (APIENTRYP PFNGLUXFOGCOORDPOINTERPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3b
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3BPROC) (GLbyte red, GLbyte green, GLbyte blue);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3bv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3BVPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3d
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3DPROC) (GLdouble red, GLdouble green, GLdouble blue);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3dv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3DVPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3f
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3FPROC) (GLfloat red, GLfloat green, GLfloat blue);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3fv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3FVPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3i
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3IPROC) (GLint red, GLint green, GLint blue);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3iv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3IVPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3s
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3SPROC) (GLshort red, GLshort green, GLshort blue);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3sv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3SVPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3ub
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3UBPROC) (GLubyte red, GLubyte green, GLubyte blue);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3ubv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3UBVPROC) (const GLubyte *v);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3ui
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3UIPROC) (GLuint red, GLuint green, GLuint blue);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3uiv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3UIVPROC) (const GLuint *v);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3us
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3USPROC) (GLushort red, GLushort green, GLushort blue);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3usv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3USVPROC) (const GLushort *v);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointer
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORPOINTERPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glWindowPos2d
typedef void (APIENTRYP PFNGLUXWINDOWPOS2DPROC) (GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glWindowPos2dv
typedef void (APIENTRYP PFNGLUXWINDOWPOS2DVPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glWindowPos2f
typedef void (APIENTRYP PFNGLUXWINDOWPOS2FPROC) (GLfloat x, GLfloat y);
#endif
#ifndef __GLUX__GLFCT_glWindowPos2fv
typedef void (APIENTRYP PFNGLUXWINDOWPOS2FVPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glWindowPos2i
typedef void (APIENTRYP PFNGLUXWINDOWPOS2IPROC) (GLint x, GLint y);
#endif
#ifndef __GLUX__GLFCT_glWindowPos2iv
typedef void (APIENTRYP PFNGLUXWINDOWPOS2IVPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glWindowPos2s
typedef void (APIENTRYP PFNGLUXWINDOWPOS2SPROC) (GLshort x, GLshort y);
#endif
#ifndef __GLUX__GLFCT_glWindowPos2sv
typedef void (APIENTRYP PFNGLUXWINDOWPOS2SVPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glWindowPos3d
typedef void (APIENTRYP PFNGLUXWINDOWPOS3DPROC) (GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glWindowPos3dv
typedef void (APIENTRYP PFNGLUXWINDOWPOS3DVPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glWindowPos3f
typedef void (APIENTRYP PFNGLUXWINDOWPOS3FPROC) (GLfloat x, GLfloat y, GLfloat z);
#endif
#ifndef __GLUX__GLFCT_glWindowPos3fv
typedef void (APIENTRYP PFNGLUXWINDOWPOS3FVPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glWindowPos3i
typedef void (APIENTRYP PFNGLUXWINDOWPOS3IPROC) (GLint x, GLint y, GLint z);
#endif
#ifndef __GLUX__GLFCT_glWindowPos3iv
typedef void (APIENTRYP PFNGLUXWINDOWPOS3IVPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glWindowPos3s
typedef void (APIENTRYP PFNGLUXWINDOWPOS3SPROC) (GLshort x, GLshort y, GLshort z);
#endif
#ifndef __GLUX__GLFCT_glWindowPos3sv
typedef void (APIENTRYP PFNGLUXWINDOWPOS3SVPROC) (const GLshort *v);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBlendFuncSeparate
extern PFNGLUXBLENDFUNCSEPARATEPROC glBlendFuncSeparate;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawArrays
extern PFNGLUXMULTIDRAWARRAYSPROC glMultiDrawArrays;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElements
extern PFNGLUXMULTIDRAWELEMENTSPROC glMultiDrawElements;
#endif
#ifndef __GLUX__GLFCT_glPointParameterf
extern PFNGLUXPOINTPARAMETERFPROC glPointParameterf;
#endif
#ifndef __GLUX__GLFCT_glPointParameterfv
extern PFNGLUXPOINTPARAMETERFVPROC glPointParameterfv;
#endif
#ifndef __GLUX__GLFCT_glPointParameteri
extern PFNGLUXPOINTPARAMETERIPROC glPointParameteri;
#endif
#ifndef __GLUX__GLFCT_glPointParameteriv
extern PFNGLUXPOINTPARAMETERIVPROC glPointParameteriv;
#endif
#ifndef __GLUX__GLFCT_glFogCoordf
extern PFNGLUXFOGCOORDFPROC glFogCoordf;
#endif
#ifndef __GLUX__GLFCT_glFogCoordfv
extern PFNGLUXFOGCOORDFVPROC glFogCoordfv;
#endif
#ifndef __GLUX__GLFCT_glFogCoordd
extern PFNGLUXFOGCOORDDPROC glFogCoordd;
#endif
#ifndef __GLUX__GLFCT_glFogCoorddv
extern PFNGLUXFOGCOORDDVPROC glFogCoorddv;
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointer
extern PFNGLUXFOGCOORDPOINTERPROC glFogCoordPointer;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3b
extern PFNGLUXSECONDARYCOLOR3BPROC glSecondaryColor3b;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3bv
extern PFNGLUXSECONDARYCOLOR3BVPROC glSecondaryColor3bv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3d
extern PFNGLUXSECONDARYCOLOR3DPROC glSecondaryColor3d;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3dv
extern PFNGLUXSECONDARYCOLOR3DVPROC glSecondaryColor3dv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3f
extern PFNGLUXSECONDARYCOLOR3FPROC glSecondaryColor3f;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3fv
extern PFNGLUXSECONDARYCOLOR3FVPROC glSecondaryColor3fv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3i
extern PFNGLUXSECONDARYCOLOR3IPROC glSecondaryColor3i;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3iv
extern PFNGLUXSECONDARYCOLOR3IVPROC glSecondaryColor3iv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3s
extern PFNGLUXSECONDARYCOLOR3SPROC glSecondaryColor3s;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3sv
extern PFNGLUXSECONDARYCOLOR3SVPROC glSecondaryColor3sv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3ub
extern PFNGLUXSECONDARYCOLOR3UBPROC glSecondaryColor3ub;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3ubv
extern PFNGLUXSECONDARYCOLOR3UBVPROC glSecondaryColor3ubv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3ui
extern PFNGLUXSECONDARYCOLOR3UIPROC glSecondaryColor3ui;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3uiv
extern PFNGLUXSECONDARYCOLOR3UIVPROC glSecondaryColor3uiv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3us
extern PFNGLUXSECONDARYCOLOR3USPROC glSecondaryColor3us;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3usv
extern PFNGLUXSECONDARYCOLOR3USVPROC glSecondaryColor3usv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointer
extern PFNGLUXSECONDARYCOLORPOINTERPROC glSecondaryColorPointer;
#endif
#ifndef __GLUX__GLFCT_glWindowPos2d
extern PFNGLUXWINDOWPOS2DPROC glWindowPos2d;
#endif
#ifndef __GLUX__GLFCT_glWindowPos2dv
extern PFNGLUXWINDOWPOS2DVPROC glWindowPos2dv;
#endif
#ifndef __GLUX__GLFCT_glWindowPos2f
extern PFNGLUXWINDOWPOS2FPROC glWindowPos2f;
#endif
#ifndef __GLUX__GLFCT_glWindowPos2fv
extern PFNGLUXWINDOWPOS2FVPROC glWindowPos2fv;
#endif
#ifndef __GLUX__GLFCT_glWindowPos2i
extern PFNGLUXWINDOWPOS2IPROC glWindowPos2i;
#endif
#ifndef __GLUX__GLFCT_glWindowPos2iv
extern PFNGLUXWINDOWPOS2IVPROC glWindowPos2iv;
#endif
#ifndef __GLUX__GLFCT_glWindowPos2s
extern PFNGLUXWINDOWPOS2SPROC glWindowPos2s;
#endif
#ifndef __GLUX__GLFCT_glWindowPos2sv
extern PFNGLUXWINDOWPOS2SVPROC glWindowPos2sv;
#endif
#ifndef __GLUX__GLFCT_glWindowPos3d
extern PFNGLUXWINDOWPOS3DPROC glWindowPos3d;
#endif
#ifndef __GLUX__GLFCT_glWindowPos3dv
extern PFNGLUXWINDOWPOS3DVPROC glWindowPos3dv;
#endif
#ifndef __GLUX__GLFCT_glWindowPos3f
extern PFNGLUXWINDOWPOS3FPROC glWindowPos3f;
#endif
#ifndef __GLUX__GLFCT_glWindowPos3fv
extern PFNGLUXWINDOWPOS3FVPROC glWindowPos3fv;
#endif
#ifndef __GLUX__GLFCT_glWindowPos3i
extern PFNGLUXWINDOWPOS3IPROC glWindowPos3i;
#endif
#ifndef __GLUX__GLFCT_glWindowPos3iv
extern PFNGLUXWINDOWPOS3IVPROC glWindowPos3iv;
#endif
#ifndef __GLUX__GLFCT_glWindowPos3s
extern PFNGLUXWINDOWPOS3SPROC glWindowPos3s;
#endif
#ifndef __GLUX__GLFCT_glWindowPos3sv
extern PFNGLUXWINDOWPOS3SVPROC glWindowPos3sv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:10:01 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_VERSION_1_4__
#define __GLUX_GL_VERSION_1_4__

GLUX_NEW_PLUGIN(GL_VERSION_1_4);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BLEND_DST_RGB
#  define GL_BLEND_DST_RGB 0x80C8
#endif
#ifndef GL_BLEND_SRC_RGB
#  define GL_BLEND_SRC_RGB 0x80C9
#endif
#ifndef GL_BLEND_DST_ALPHA
#  define GL_BLEND_DST_ALPHA 0x80CA
#endif
#ifndef GL_BLEND_SRC_ALPHA
#  define GL_BLEND_SRC_ALPHA 0x80CB
#endif
#ifndef GL_POINT_FADE_THRESHOLD_SIZE
#  define GL_POINT_FADE_THRESHOLD_SIZE 0x8128
#endif
#ifndef GL_DEPTH_COMPONENT16
#  define GL_DEPTH_COMPONENT16 0x81A5
#endif
#ifndef GL_DEPTH_COMPONENT24
#  define GL_DEPTH_COMPONENT24 0x81A6
#endif
#ifndef GL_DEPTH_COMPONENT32
#  define GL_DEPTH_COMPONENT32 0x81A7
#endif
#ifndef GL_MIRRORED_REPEAT
#  define GL_MIRRORED_REPEAT 0x8370
#endif
#ifndef GL_MAX_TEXTURE_LOD_BIAS
#  define GL_MAX_TEXTURE_LOD_BIAS 0x84FD
#endif
#ifndef GL_TEXTURE_LOD_BIAS
#  define GL_TEXTURE_LOD_BIAS 0x8501
#endif
#ifndef GL_INCR_WRAP
#  define GL_INCR_WRAP 0x8507
#endif
#ifndef GL_DECR_WRAP
#  define GL_DECR_WRAP 0x8508
#endif
#ifndef GL_TEXTURE_DEPTH_SIZE
#  define GL_TEXTURE_DEPTH_SIZE 0x884A
#endif
#ifndef GL_TEXTURE_COMPARE_MODE
#  define GL_TEXTURE_COMPARE_MODE 0x884C
#endif
#ifndef GL_TEXTURE_COMPARE_FUNC
#  define GL_TEXTURE_COMPARE_FUNC 0x884D
#endif
#ifndef GL_POINT_SIZE_MIN
#  define GL_POINT_SIZE_MIN 0x8126
#endif
#ifndef GL_POINT_SIZE_MAX
#  define GL_POINT_SIZE_MAX 0x8127
#endif
#ifndef GL_POINT_DISTANCE_ATTENUATION
#  define GL_POINT_DISTANCE_ATTENUATION 0x8129
#endif
#ifndef GL_GENERATE_MIPMAP
#  define GL_GENERATE_MIPMAP 0x8191
#endif
#ifndef GL_GENERATE_MIPMAP_HINT
#  define GL_GENERATE_MIPMAP_HINT 0x8192
#endif
#ifndef GL_FOG_COORDINATE_SOURCE
#  define GL_FOG_COORDINATE_SOURCE 0x8450
#endif
#ifndef GL_FOG_COORDINATE
#  define GL_FOG_COORDINATE 0x8451
#endif
#ifndef GL_FRAGMENT_DEPTH
#  define GL_FRAGMENT_DEPTH 0x8452
#endif
#ifndef GL_CURRENT_FOG_COORDINATE
#  define GL_CURRENT_FOG_COORDINATE 0x8453
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_TYPE
#  define GL_FOG_COORDINATE_ARRAY_TYPE 0x8454
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_STRIDE
#  define GL_FOG_COORDINATE_ARRAY_STRIDE 0x8455
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_POINTER
#  define GL_FOG_COORDINATE_ARRAY_POINTER 0x8456
#endif
#ifndef GL_FOG_COORDINATE_ARRAY
#  define GL_FOG_COORDINATE_ARRAY 0x8457
#endif
#ifndef GL_COLOR_SUM
#  define GL_COLOR_SUM 0x8458
#endif
#ifndef GL_CURRENT_SECONDARY_COLOR
#  define GL_CURRENT_SECONDARY_COLOR 0x8459
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_SIZE
#  define GL_SECONDARY_COLOR_ARRAY_SIZE 0x845A
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_TYPE
#  define GL_SECONDARY_COLOR_ARRAY_TYPE 0x845B
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_STRIDE
#  define GL_SECONDARY_COLOR_ARRAY_STRIDE 0x845C
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_POINTER
#  define GL_SECONDARY_COLOR_ARRAY_POINTER 0x845D
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY
#  define GL_SECONDARY_COLOR_ARRAY 0x845E
#endif
#ifndef GL_TEXTURE_FILTER_CONTROL
#  define GL_TEXTURE_FILTER_CONTROL 0x8500
#endif
#ifndef GL_DEPTH_TEXTURE_MODE
#  define GL_DEPTH_TEXTURE_MODE 0x884B
#endif
#ifndef GL_COMPARE_R_TO_TEXTURE
#  define GL_COMPARE_R_TO_TEXTURE 0x884E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBlendFuncSeparate
typedef void (APIENTRYP PFNGLUXBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawArrays
typedef void (APIENTRYP PFNGLUXMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElements
typedef void (APIENTRYP PFNGLUXMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei drawcount);
#endif
#ifndef __GLUX__GLFCT_glPointParameterf
typedef void (APIENTRYP PFNGLUXPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glPointParameterfv
typedef void (APIENTRYP PFNGLUXPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glPointParameteri
typedef void (APIENTRYP PFNGLUXPOINTPARAMETERIPROC) (GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glPointParameteriv
typedef void (APIENTRYP PFNGLUXPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glFogCoordf
typedef void (APIENTRYP PFNGLUXFOGCOORDFPROC) (GLfloat coord);
#endif
#ifndef __GLUX__GLFCT_glFogCoordfv
typedef void (APIENTRYP PFNGLUXFOGCOORDFVPROC) (const GLfloat *coord);
#endif
#ifndef __GLUX__GLFCT_glFogCoordd
typedef void (APIENTRYP PFNGLUXFOGCOORDDPROC) (GLdouble coord);
#endif
#ifndef __GLUX__GLFCT_glFogCoorddv
typedef void (APIENTRYP PFNGLUXFOGCOORDDVPROC) (const GLdouble *coord);
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointer
typedef void (APIENTRYP PFNGLUXFOGCOORDPOINTERPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3b
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3BPROC) (GLbyte red, GLbyte green, GLbyte blue);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3bv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3BVPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3d
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3DPROC) (GLdouble red, GLdouble green, GLdouble blue);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3dv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3DVPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3f
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3FPROC) (GLfloat red, GLfloat green, GLfloat blue);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3fv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3FVPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3i
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3IPROC) (GLint red, GLint green, GLint blue);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3iv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3IVPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3s
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3SPROC) (GLshort red, GLshort green, GLshort blue);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3sv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3SVPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3ub
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3UBPROC) (GLubyte red, GLubyte green, GLubyte blue);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3ubv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3UBVPROC) (const GLubyte *v);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3ui
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3UIPROC) (GLuint red, GLuint green, GLuint blue);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3uiv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3UIVPROC) (const GLuint *v);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3us
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3USPROC) (GLushort red, GLushort green, GLushort blue);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3usv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3USVPROC) (const GLushort *v);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointer
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORPOINTERPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glWindowPos2d
typedef void (APIENTRYP PFNGLUXWINDOWPOS2DPROC) (GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glWindowPos2dv
typedef void (APIENTRYP PFNGLUXWINDOWPOS2DVPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glWindowPos2f
typedef void (APIENTRYP PFNGLUXWINDOWPOS2FPROC) (GLfloat x, GLfloat y);
#endif
#ifndef __GLUX__GLFCT_glWindowPos2fv
typedef void (APIENTRYP PFNGLUXWINDOWPOS2FVPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glWindowPos2i
typedef void (APIENTRYP PFNGLUXWINDOWPOS2IPROC) (GLint x, GLint y);
#endif
#ifndef __GLUX__GLFCT_glWindowPos2iv
typedef void (APIENTRYP PFNGLUXWINDOWPOS2IVPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glWindowPos2s
typedef void (APIENTRYP PFNGLUXWINDOWPOS2SPROC) (GLshort x, GLshort y);
#endif
#ifndef __GLUX__GLFCT_glWindowPos2sv
typedef void (APIENTRYP PFNGLUXWINDOWPOS2SVPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glWindowPos3d
typedef void (APIENTRYP PFNGLUXWINDOWPOS3DPROC) (GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glWindowPos3dv
typedef void (APIENTRYP PFNGLUXWINDOWPOS3DVPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glWindowPos3f
typedef void (APIENTRYP PFNGLUXWINDOWPOS3FPROC) (GLfloat x, GLfloat y, GLfloat z);
#endif
#ifndef __GLUX__GLFCT_glWindowPos3fv
typedef void (APIENTRYP PFNGLUXWINDOWPOS3FVPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glWindowPos3i
typedef void (APIENTRYP PFNGLUXWINDOWPOS3IPROC) (GLint x, GLint y, GLint z);
#endif
#ifndef __GLUX__GLFCT_glWindowPos3iv
typedef void (APIENTRYP PFNGLUXWINDOWPOS3IVPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glWindowPos3s
typedef void (APIENTRYP PFNGLUXWINDOWPOS3SPROC) (GLshort x, GLshort y, GLshort z);
#endif
#ifndef __GLUX__GLFCT_glWindowPos3sv
typedef void (APIENTRYP PFNGLUXWINDOWPOS3SVPROC) (const GLshort *v);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBlendFuncSeparate
extern PFNGLUXBLENDFUNCSEPARATEPROC glBlendFuncSeparate;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawArrays
extern PFNGLUXMULTIDRAWARRAYSPROC glMultiDrawArrays;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElements
extern PFNGLUXMULTIDRAWELEMENTSPROC glMultiDrawElements;
#endif
#ifndef __GLUX__GLFCT_glPointParameterf
extern PFNGLUXPOINTPARAMETERFPROC glPointParameterf;
#endif
#ifndef __GLUX__GLFCT_glPointParameterfv
extern PFNGLUXPOINTPARAMETERFVPROC glPointParameterfv;
#endif
#ifndef __GLUX__GLFCT_glPointParameteri
extern PFNGLUXPOINTPARAMETERIPROC glPointParameteri;
#endif
#ifndef __GLUX__GLFCT_glPointParameteriv
extern PFNGLUXPOINTPARAMETERIVPROC glPointParameteriv;
#endif
#ifndef __GLUX__GLFCT_glFogCoordf
extern PFNGLUXFOGCOORDFPROC glFogCoordf;
#endif
#ifndef __GLUX__GLFCT_glFogCoordfv
extern PFNGLUXFOGCOORDFVPROC glFogCoordfv;
#endif
#ifndef __GLUX__GLFCT_glFogCoordd
extern PFNGLUXFOGCOORDDPROC glFogCoordd;
#endif
#ifndef __GLUX__GLFCT_glFogCoorddv
extern PFNGLUXFOGCOORDDVPROC glFogCoorddv;
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointer
extern PFNGLUXFOGCOORDPOINTERPROC glFogCoordPointer;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3b
extern PFNGLUXSECONDARYCOLOR3BPROC glSecondaryColor3b;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3bv
extern PFNGLUXSECONDARYCOLOR3BVPROC glSecondaryColor3bv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3d
extern PFNGLUXSECONDARYCOLOR3DPROC glSecondaryColor3d;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3dv
extern PFNGLUXSECONDARYCOLOR3DVPROC glSecondaryColor3dv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3f
extern PFNGLUXSECONDARYCOLOR3FPROC glSecondaryColor3f;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3fv
extern PFNGLUXSECONDARYCOLOR3FVPROC glSecondaryColor3fv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3i
extern PFNGLUXSECONDARYCOLOR3IPROC glSecondaryColor3i;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3iv
extern PFNGLUXSECONDARYCOLOR3IVPROC glSecondaryColor3iv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3s
extern PFNGLUXSECONDARYCOLOR3SPROC glSecondaryColor3s;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3sv
extern PFNGLUXSECONDARYCOLOR3SVPROC glSecondaryColor3sv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3ub
extern PFNGLUXSECONDARYCOLOR3UBPROC glSecondaryColor3ub;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3ubv
extern PFNGLUXSECONDARYCOLOR3UBVPROC glSecondaryColor3ubv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3ui
extern PFNGLUXSECONDARYCOLOR3UIPROC glSecondaryColor3ui;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3uiv
extern PFNGLUXSECONDARYCOLOR3UIVPROC glSecondaryColor3uiv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3us
extern PFNGLUXSECONDARYCOLOR3USPROC glSecondaryColor3us;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3usv
extern PFNGLUXSECONDARYCOLOR3USVPROC glSecondaryColor3usv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointer
extern PFNGLUXSECONDARYCOLORPOINTERPROC glSecondaryColorPointer;
#endif
#ifndef __GLUX__GLFCT_glWindowPos2d
extern PFNGLUXWINDOWPOS2DPROC glWindowPos2d;
#endif
#ifndef __GLUX__GLFCT_glWindowPos2dv
extern PFNGLUXWINDOWPOS2DVPROC glWindowPos2dv;
#endif
#ifndef __GLUX__GLFCT_glWindowPos2f
extern PFNGLUXWINDOWPOS2FPROC glWindowPos2f;
#endif
#ifndef __GLUX__GLFCT_glWindowPos2fv
extern PFNGLUXWINDOWPOS2FVPROC glWindowPos2fv;
#endif
#ifndef __GLUX__GLFCT_glWindowPos2i
extern PFNGLUXWINDOWPOS2IPROC glWindowPos2i;
#endif
#ifndef __GLUX__GLFCT_glWindowPos2iv
extern PFNGLUXWINDOWPOS2IVPROC glWindowPos2iv;
#endif
#ifndef __GLUX__GLFCT_glWindowPos2s
extern PFNGLUXWINDOWPOS2SPROC glWindowPos2s;
#endif
#ifndef __GLUX__GLFCT_glWindowPos2sv
extern PFNGLUXWINDOWPOS2SVPROC glWindowPos2sv;
#endif
#ifndef __GLUX__GLFCT_glWindowPos3d
extern PFNGLUXWINDOWPOS3DPROC glWindowPos3d;
#endif
#ifndef __GLUX__GLFCT_glWindowPos3dv
extern PFNGLUXWINDOWPOS3DVPROC glWindowPos3dv;
#endif
#ifndef __GLUX__GLFCT_glWindowPos3f
extern PFNGLUXWINDOWPOS3FPROC glWindowPos3f;
#endif
#ifndef __GLUX__GLFCT_glWindowPos3fv
extern PFNGLUXWINDOWPOS3FVPROC glWindowPos3fv;
#endif
#ifndef __GLUX__GLFCT_glWindowPos3i
extern PFNGLUXWINDOWPOS3IPROC glWindowPos3i;
#endif
#ifndef __GLUX__GLFCT_glWindowPos3iv
extern PFNGLUXWINDOWPOS3IVPROC glWindowPos3iv;
#endif
#ifndef __GLUX__GLFCT_glWindowPos3s
extern PFNGLUXWINDOWPOS3SPROC glWindowPos3s;
#endif
#ifndef __GLUX__GLFCT_glWindowPos3sv
extern PFNGLUXWINDOWPOS3SVPROC glWindowPos3sv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:20:02 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_VERSION_1_4__
#define __GLUX_GL_VERSION_1_4__

GLUX_NEW_PLUGIN(GL_VERSION_1_4);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BLEND_DST_RGB
#  define GL_BLEND_DST_RGB 0x80C8
#endif
#ifndef GL_BLEND_SRC_RGB
#  define GL_BLEND_SRC_RGB 0x80C9
#endif
#ifndef GL_BLEND_DST_ALPHA
#  define GL_BLEND_DST_ALPHA 0x80CA
#endif
#ifndef GL_BLEND_SRC_ALPHA
#  define GL_BLEND_SRC_ALPHA 0x80CB
#endif
#ifndef GL_POINT_FADE_THRESHOLD_SIZE
#  define GL_POINT_FADE_THRESHOLD_SIZE 0x8128
#endif
#ifndef GL_DEPTH_COMPONENT16
#  define GL_DEPTH_COMPONENT16 0x81A5
#endif
#ifndef GL_DEPTH_COMPONENT24
#  define GL_DEPTH_COMPONENT24 0x81A6
#endif
#ifndef GL_DEPTH_COMPONENT32
#  define GL_DEPTH_COMPONENT32 0x81A7
#endif
#ifndef GL_MIRRORED_REPEAT
#  define GL_MIRRORED_REPEAT 0x8370
#endif
#ifndef GL_MAX_TEXTURE_LOD_BIAS
#  define GL_MAX_TEXTURE_LOD_BIAS 0x84FD
#endif
#ifndef GL_TEXTURE_LOD_BIAS
#  define GL_TEXTURE_LOD_BIAS 0x8501
#endif
#ifndef GL_INCR_WRAP
#  define GL_INCR_WRAP 0x8507
#endif
#ifndef GL_DECR_WRAP
#  define GL_DECR_WRAP 0x8508
#endif
#ifndef GL_TEXTURE_DEPTH_SIZE
#  define GL_TEXTURE_DEPTH_SIZE 0x884A
#endif
#ifndef GL_TEXTURE_COMPARE_MODE
#  define GL_TEXTURE_COMPARE_MODE 0x884C
#endif
#ifndef GL_TEXTURE_COMPARE_FUNC
#  define GL_TEXTURE_COMPARE_FUNC 0x884D
#endif
#ifndef GL_POINT_SIZE_MIN
#  define GL_POINT_SIZE_MIN 0x8126
#endif
#ifndef GL_POINT_SIZE_MAX
#  define GL_POINT_SIZE_MAX 0x8127
#endif
#ifndef GL_POINT_DISTANCE_ATTENUATION
#  define GL_POINT_DISTANCE_ATTENUATION 0x8129
#endif
#ifndef GL_GENERATE_MIPMAP
#  define GL_GENERATE_MIPMAP 0x8191
#endif
#ifndef GL_GENERATE_MIPMAP_HINT
#  define GL_GENERATE_MIPMAP_HINT 0x8192
#endif
#ifndef GL_FOG_COORDINATE_SOURCE
#  define GL_FOG_COORDINATE_SOURCE 0x8450
#endif
#ifndef GL_FOG_COORDINATE
#  define GL_FOG_COORDINATE 0x8451
#endif
#ifndef GL_FRAGMENT_DEPTH
#  define GL_FRAGMENT_DEPTH 0x8452
#endif
#ifndef GL_CURRENT_FOG_COORDINATE
#  define GL_CURRENT_FOG_COORDINATE 0x8453
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_TYPE
#  define GL_FOG_COORDINATE_ARRAY_TYPE 0x8454
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_STRIDE
#  define GL_FOG_COORDINATE_ARRAY_STRIDE 0x8455
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_POINTER
#  define GL_FOG_COORDINATE_ARRAY_POINTER 0x8456
#endif
#ifndef GL_FOG_COORDINATE_ARRAY
#  define GL_FOG_COORDINATE_ARRAY 0x8457
#endif
#ifndef GL_COLOR_SUM
#  define GL_COLOR_SUM 0x8458
#endif
#ifndef GL_CURRENT_SECONDARY_COLOR
#  define GL_CURRENT_SECONDARY_COLOR 0x8459
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_SIZE
#  define GL_SECONDARY_COLOR_ARRAY_SIZE 0x845A
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_TYPE
#  define GL_SECONDARY_COLOR_ARRAY_TYPE 0x845B
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_STRIDE
#  define GL_SECONDARY_COLOR_ARRAY_STRIDE 0x845C
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_POINTER
#  define GL_SECONDARY_COLOR_ARRAY_POINTER 0x845D
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY
#  define GL_SECONDARY_COLOR_ARRAY 0x845E
#endif
#ifndef GL_TEXTURE_FILTER_CONTROL
#  define GL_TEXTURE_FILTER_CONTROL 0x8500
#endif
#ifndef GL_DEPTH_TEXTURE_MODE
#  define GL_DEPTH_TEXTURE_MODE 0x884B
#endif
#ifndef GL_COMPARE_R_TO_TEXTURE
#  define GL_COMPARE_R_TO_TEXTURE 0x884E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBlendFuncSeparate
typedef void (APIENTRYP PFNGLUXBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawArrays
typedef void (APIENTRYP PFNGLUXMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElements
typedef void (APIENTRYP PFNGLUXMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei drawcount);
#endif
#ifndef __GLUX__GLFCT_glPointParameterf
typedef void (APIENTRYP PFNGLUXPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glPointParameterfv
typedef void (APIENTRYP PFNGLUXPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glPointParameteri
typedef void (APIENTRYP PFNGLUXPOINTPARAMETERIPROC) (GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glPointParameteriv
typedef void (APIENTRYP PFNGLUXPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glFogCoordf
typedef void (APIENTRYP PFNGLUXFOGCOORDFPROC) (GLfloat coord);
#endif
#ifndef __GLUX__GLFCT_glFogCoordfv
typedef void (APIENTRYP PFNGLUXFOGCOORDFVPROC) (const GLfloat *coord);
#endif
#ifndef __GLUX__GLFCT_glFogCoordd
typedef void (APIENTRYP PFNGLUXFOGCOORDDPROC) (GLdouble coord);
#endif
#ifndef __GLUX__GLFCT_glFogCoorddv
typedef void (APIENTRYP PFNGLUXFOGCOORDDVPROC) (const GLdouble *coord);
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointer
typedef void (APIENTRYP PFNGLUXFOGCOORDPOINTERPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3b
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3BPROC) (GLbyte red, GLbyte green, GLbyte blue);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3bv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3BVPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3d
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3DPROC) (GLdouble red, GLdouble green, GLdouble blue);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3dv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3DVPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3f
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3FPROC) (GLfloat red, GLfloat green, GLfloat blue);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3fv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3FVPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3i
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3IPROC) (GLint red, GLint green, GLint blue);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3iv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3IVPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3s
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3SPROC) (GLshort red, GLshort green, GLshort blue);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3sv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3SVPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3ub
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3UBPROC) (GLubyte red, GLubyte green, GLubyte blue);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3ubv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3UBVPROC) (const GLubyte *v);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3ui
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3UIPROC) (GLuint red, GLuint green, GLuint blue);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3uiv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3UIVPROC) (const GLuint *v);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3us
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3USPROC) (GLushort red, GLushort green, GLushort blue);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3usv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3USVPROC) (const GLushort *v);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointer
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORPOINTERPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glWindowPos2d
typedef void (APIENTRYP PFNGLUXWINDOWPOS2DPROC) (GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glWindowPos2dv
typedef void (APIENTRYP PFNGLUXWINDOWPOS2DVPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glWindowPos2f
typedef void (APIENTRYP PFNGLUXWINDOWPOS2FPROC) (GLfloat x, GLfloat y);
#endif
#ifndef __GLUX__GLFCT_glWindowPos2fv
typedef void (APIENTRYP PFNGLUXWINDOWPOS2FVPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glWindowPos2i
typedef void (APIENTRYP PFNGLUXWINDOWPOS2IPROC) (GLint x, GLint y);
#endif
#ifndef __GLUX__GLFCT_glWindowPos2iv
typedef void (APIENTRYP PFNGLUXWINDOWPOS2IVPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glWindowPos2s
typedef void (APIENTRYP PFNGLUXWINDOWPOS2SPROC) (GLshort x, GLshort y);
#endif
#ifndef __GLUX__GLFCT_glWindowPos2sv
typedef void (APIENTRYP PFNGLUXWINDOWPOS2SVPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glWindowPos3d
typedef void (APIENTRYP PFNGLUXWINDOWPOS3DPROC) (GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glWindowPos3dv
typedef void (APIENTRYP PFNGLUXWINDOWPOS3DVPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glWindowPos3f
typedef void (APIENTRYP PFNGLUXWINDOWPOS3FPROC) (GLfloat x, GLfloat y, GLfloat z);
#endif
#ifndef __GLUX__GLFCT_glWindowPos3fv
typedef void (APIENTRYP PFNGLUXWINDOWPOS3FVPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glWindowPos3i
typedef void (APIENTRYP PFNGLUXWINDOWPOS3IPROC) (GLint x, GLint y, GLint z);
#endif
#ifndef __GLUX__GLFCT_glWindowPos3iv
typedef void (APIENTRYP PFNGLUXWINDOWPOS3IVPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glWindowPos3s
typedef void (APIENTRYP PFNGLUXWINDOWPOS3SPROC) (GLshort x, GLshort y, GLshort z);
#endif
#ifndef __GLUX__GLFCT_glWindowPos3sv
typedef void (APIENTRYP PFNGLUXWINDOWPOS3SVPROC) (const GLshort *v);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBlendFuncSeparate
extern PFNGLUXBLENDFUNCSEPARATEPROC glBlendFuncSeparate;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawArrays
extern PFNGLUXMULTIDRAWARRAYSPROC glMultiDrawArrays;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElements
extern PFNGLUXMULTIDRAWELEMENTSPROC glMultiDrawElements;
#endif
#ifndef __GLUX__GLFCT_glPointParameterf
extern PFNGLUXPOINTPARAMETERFPROC glPointParameterf;
#endif
#ifndef __GLUX__GLFCT_glPointParameterfv
extern PFNGLUXPOINTPARAMETERFVPROC glPointParameterfv;
#endif
#ifndef __GLUX__GLFCT_glPointParameteri
extern PFNGLUXPOINTPARAMETERIPROC glPointParameteri;
#endif
#ifndef __GLUX__GLFCT_glPointParameteriv
extern PFNGLUXPOINTPARAMETERIVPROC glPointParameteriv;
#endif
#ifndef __GLUX__GLFCT_glFogCoordf
extern PFNGLUXFOGCOORDFPROC glFogCoordf;
#endif
#ifndef __GLUX__GLFCT_glFogCoordfv
extern PFNGLUXFOGCOORDFVPROC glFogCoordfv;
#endif
#ifndef __GLUX__GLFCT_glFogCoordd
extern PFNGLUXFOGCOORDDPROC glFogCoordd;
#endif
#ifndef __GLUX__GLFCT_glFogCoorddv
extern PFNGLUXFOGCOORDDVPROC glFogCoorddv;
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointer
extern PFNGLUXFOGCOORDPOINTERPROC glFogCoordPointer;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3b
extern PFNGLUXSECONDARYCOLOR3BPROC glSecondaryColor3b;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3bv
extern PFNGLUXSECONDARYCOLOR3BVPROC glSecondaryColor3bv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3d
extern PFNGLUXSECONDARYCOLOR3DPROC glSecondaryColor3d;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3dv
extern PFNGLUXSECONDARYCOLOR3DVPROC glSecondaryColor3dv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3f
extern PFNGLUXSECONDARYCOLOR3FPROC glSecondaryColor3f;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3fv
extern PFNGLUXSECONDARYCOLOR3FVPROC glSecondaryColor3fv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3i
extern PFNGLUXSECONDARYCOLOR3IPROC glSecondaryColor3i;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3iv
extern PFNGLUXSECONDARYCOLOR3IVPROC glSecondaryColor3iv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3s
extern PFNGLUXSECONDARYCOLOR3SPROC glSecondaryColor3s;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3sv
extern PFNGLUXSECONDARYCOLOR3SVPROC glSecondaryColor3sv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3ub
extern PFNGLUXSECONDARYCOLOR3UBPROC glSecondaryColor3ub;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3ubv
extern PFNGLUXSECONDARYCOLOR3UBVPROC glSecondaryColor3ubv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3ui
extern PFNGLUXSECONDARYCOLOR3UIPROC glSecondaryColor3ui;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3uiv
extern PFNGLUXSECONDARYCOLOR3UIVPROC glSecondaryColor3uiv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3us
extern PFNGLUXSECONDARYCOLOR3USPROC glSecondaryColor3us;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3usv
extern PFNGLUXSECONDARYCOLOR3USVPROC glSecondaryColor3usv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointer
extern PFNGLUXSECONDARYCOLORPOINTERPROC glSecondaryColorPointer;
#endif
#ifndef __GLUX__GLFCT_glWindowPos2d
extern PFNGLUXWINDOWPOS2DPROC glWindowPos2d;
#endif
#ifndef __GLUX__GLFCT_glWindowPos2dv
extern PFNGLUXWINDOWPOS2DVPROC glWindowPos2dv;
#endif
#ifndef __GLUX__GLFCT_glWindowPos2f
extern PFNGLUXWINDOWPOS2FPROC glWindowPos2f;
#endif
#ifndef __GLUX__GLFCT_glWindowPos2fv
extern PFNGLUXWINDOWPOS2FVPROC glWindowPos2fv;
#endif
#ifndef __GLUX__GLFCT_glWindowPos2i
extern PFNGLUXWINDOWPOS2IPROC glWindowPos2i;
#endif
#ifndef __GLUX__GLFCT_glWindowPos2iv
extern PFNGLUXWINDOWPOS2IVPROC glWindowPos2iv;
#endif
#ifndef __GLUX__GLFCT_glWindowPos2s
extern PFNGLUXWINDOWPOS2SPROC glWindowPos2s;
#endif
#ifndef __GLUX__GLFCT_glWindowPos2sv
extern PFNGLUXWINDOWPOS2SVPROC glWindowPos2sv;
#endif
#ifndef __GLUX__GLFCT_glWindowPos3d
extern PFNGLUXWINDOWPOS3DPROC glWindowPos3d;
#endif
#ifndef __GLUX__GLFCT_glWindowPos3dv
extern PFNGLUXWINDOWPOS3DVPROC glWindowPos3dv;
#endif
#ifndef __GLUX__GLFCT_glWindowPos3f
extern PFNGLUXWINDOWPOS3FPROC glWindowPos3f;
#endif
#ifndef __GLUX__GLFCT_glWindowPos3fv
extern PFNGLUXWINDOWPOS3FVPROC glWindowPos3fv;
#endif
#ifndef __GLUX__GLFCT_glWindowPos3i
extern PFNGLUXWINDOWPOS3IPROC glWindowPos3i;
#endif
#ifndef __GLUX__GLFCT_glWindowPos3iv
extern PFNGLUXWINDOWPOS3IVPROC glWindowPos3iv;
#endif
#ifndef __GLUX__GLFCT_glWindowPos3s
extern PFNGLUXWINDOWPOS3SPROC glWindowPos3s;
#endif
#ifndef __GLUX__GLFCT_glWindowPos3sv
extern PFNGLUXWINDOWPOS3SVPROC glWindowPos3sv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:43:01 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_VERSION_1_4__
#define __GLUX_GL_VERSION_1_4__

GLUX_NEW_PLUGIN(GL_VERSION_1_4)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BLEND_DST_RGB
#  define GL_BLEND_DST_RGB 0x80C8
#endif
#ifndef GL_BLEND_SRC_RGB
#  define GL_BLEND_SRC_RGB 0x80C9
#endif
#ifndef GL_BLEND_DST_ALPHA
#  define GL_BLEND_DST_ALPHA 0x80CA
#endif
#ifndef GL_BLEND_SRC_ALPHA
#  define GL_BLEND_SRC_ALPHA 0x80CB
#endif
#ifndef GL_POINT_FADE_THRESHOLD_SIZE
#  define GL_POINT_FADE_THRESHOLD_SIZE 0x8128
#endif
#ifndef GL_DEPTH_COMPONENT16
#  define GL_DEPTH_COMPONENT16 0x81A5
#endif
#ifndef GL_DEPTH_COMPONENT24
#  define GL_DEPTH_COMPONENT24 0x81A6
#endif
#ifndef GL_DEPTH_COMPONENT32
#  define GL_DEPTH_COMPONENT32 0x81A7
#endif
#ifndef GL_MIRRORED_REPEAT
#  define GL_MIRRORED_REPEAT 0x8370
#endif
#ifndef GL_MAX_TEXTURE_LOD_BIAS
#  define GL_MAX_TEXTURE_LOD_BIAS 0x84FD
#endif
#ifndef GL_TEXTURE_LOD_BIAS
#  define GL_TEXTURE_LOD_BIAS 0x8501
#endif
#ifndef GL_INCR_WRAP
#  define GL_INCR_WRAP 0x8507
#endif
#ifndef GL_DECR_WRAP
#  define GL_DECR_WRAP 0x8508
#endif
#ifndef GL_TEXTURE_DEPTH_SIZE
#  define GL_TEXTURE_DEPTH_SIZE 0x884A
#endif
#ifndef GL_TEXTURE_COMPARE_MODE
#  define GL_TEXTURE_COMPARE_MODE 0x884C
#endif
#ifndef GL_TEXTURE_COMPARE_FUNC
#  define GL_TEXTURE_COMPARE_FUNC 0x884D
#endif
#ifndef GL_POINT_SIZE_MIN
#  define GL_POINT_SIZE_MIN 0x8126
#endif
#ifndef GL_POINT_SIZE_MAX
#  define GL_POINT_SIZE_MAX 0x8127
#endif
#ifndef GL_POINT_DISTANCE_ATTENUATION
#  define GL_POINT_DISTANCE_ATTENUATION 0x8129
#endif
#ifndef GL_GENERATE_MIPMAP
#  define GL_GENERATE_MIPMAP 0x8191
#endif
#ifndef GL_GENERATE_MIPMAP_HINT
#  define GL_GENERATE_MIPMAP_HINT 0x8192
#endif
#ifndef GL_FOG_COORDINATE_SOURCE
#  define GL_FOG_COORDINATE_SOURCE 0x8450
#endif
#ifndef GL_FOG_COORDINATE
#  define GL_FOG_COORDINATE 0x8451
#endif
#ifndef GL_FRAGMENT_DEPTH
#  define GL_FRAGMENT_DEPTH 0x8452
#endif
#ifndef GL_CURRENT_FOG_COORDINATE
#  define GL_CURRENT_FOG_COORDINATE 0x8453
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_TYPE
#  define GL_FOG_COORDINATE_ARRAY_TYPE 0x8454
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_STRIDE
#  define GL_FOG_COORDINATE_ARRAY_STRIDE 0x8455
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_POINTER
#  define GL_FOG_COORDINATE_ARRAY_POINTER 0x8456
#endif
#ifndef GL_FOG_COORDINATE_ARRAY
#  define GL_FOG_COORDINATE_ARRAY 0x8457
#endif
#ifndef GL_COLOR_SUM
#  define GL_COLOR_SUM 0x8458
#endif
#ifndef GL_CURRENT_SECONDARY_COLOR
#  define GL_CURRENT_SECONDARY_COLOR 0x8459
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_SIZE
#  define GL_SECONDARY_COLOR_ARRAY_SIZE 0x845A
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_TYPE
#  define GL_SECONDARY_COLOR_ARRAY_TYPE 0x845B
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_STRIDE
#  define GL_SECONDARY_COLOR_ARRAY_STRIDE 0x845C
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_POINTER
#  define GL_SECONDARY_COLOR_ARRAY_POINTER 0x845D
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY
#  define GL_SECONDARY_COLOR_ARRAY 0x845E
#endif
#ifndef GL_TEXTURE_FILTER_CONTROL
#  define GL_TEXTURE_FILTER_CONTROL 0x8500
#endif
#ifndef GL_DEPTH_TEXTURE_MODE
#  define GL_DEPTH_TEXTURE_MODE 0x884B
#endif
#ifndef GL_COMPARE_R_TO_TEXTURE
#  define GL_COMPARE_R_TO_TEXTURE 0x884E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBlendFuncSeparate
typedef void (APIENTRYP PFNGLUXBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawArrays
typedef void (APIENTRYP PFNGLUXMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElements
typedef void (APIENTRYP PFNGLUXMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei drawcount);
#endif
#ifndef __GLUX__GLFCT_glPointParameterf
typedef void (APIENTRYP PFNGLUXPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glPointParameterfv
typedef void (APIENTRYP PFNGLUXPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glPointParameteri
typedef void (APIENTRYP PFNGLUXPOINTPARAMETERIPROC) (GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glPointParameteriv
typedef void (APIENTRYP PFNGLUXPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glFogCoordf
typedef void (APIENTRYP PFNGLUXFOGCOORDFPROC) (GLfloat coord);
#endif
#ifndef __GLUX__GLFCT_glFogCoordfv
typedef void (APIENTRYP PFNGLUXFOGCOORDFVPROC) (const GLfloat *coord);
#endif
#ifndef __GLUX__GLFCT_glFogCoordd
typedef void (APIENTRYP PFNGLUXFOGCOORDDPROC) (GLdouble coord);
#endif
#ifndef __GLUX__GLFCT_glFogCoorddv
typedef void (APIENTRYP PFNGLUXFOGCOORDDVPROC) (const GLdouble *coord);
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointer
typedef void (APIENTRYP PFNGLUXFOGCOORDPOINTERPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3b
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3BPROC) (GLbyte red, GLbyte green, GLbyte blue);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3bv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3BVPROC) (const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3d
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3DPROC) (GLdouble red, GLdouble green, GLdouble blue);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3dv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3DVPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3f
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3FPROC) (GLfloat red, GLfloat green, GLfloat blue);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3fv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3FVPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3i
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3IPROC) (GLint red, GLint green, GLint blue);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3iv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3IVPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3s
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3SPROC) (GLshort red, GLshort green, GLshort blue);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3sv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3SVPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3ub
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3UBPROC) (GLubyte red, GLubyte green, GLubyte blue);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3ubv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3UBVPROC) (const GLubyte *v);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3ui
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3UIPROC) (GLuint red, GLuint green, GLuint blue);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3uiv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3UIVPROC) (const GLuint *v);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3us
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3USPROC) (GLushort red, GLushort green, GLushort blue);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3usv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLOR3USVPROC) (const GLushort *v);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointer
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORPOINTERPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glWindowPos2d
typedef void (APIENTRYP PFNGLUXWINDOWPOS2DPROC) (GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glWindowPos2dv
typedef void (APIENTRYP PFNGLUXWINDOWPOS2DVPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glWindowPos2f
typedef void (APIENTRYP PFNGLUXWINDOWPOS2FPROC) (GLfloat x, GLfloat y);
#endif
#ifndef __GLUX__GLFCT_glWindowPos2fv
typedef void (APIENTRYP PFNGLUXWINDOWPOS2FVPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glWindowPos2i
typedef void (APIENTRYP PFNGLUXWINDOWPOS2IPROC) (GLint x, GLint y);
#endif
#ifndef __GLUX__GLFCT_glWindowPos2iv
typedef void (APIENTRYP PFNGLUXWINDOWPOS2IVPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glWindowPos2s
typedef void (APIENTRYP PFNGLUXWINDOWPOS2SPROC) (GLshort x, GLshort y);
#endif
#ifndef __GLUX__GLFCT_glWindowPos2sv
typedef void (APIENTRYP PFNGLUXWINDOWPOS2SVPROC) (const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glWindowPos3d
typedef void (APIENTRYP PFNGLUXWINDOWPOS3DPROC) (GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glWindowPos3dv
typedef void (APIENTRYP PFNGLUXWINDOWPOS3DVPROC) (const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glWindowPos3f
typedef void (APIENTRYP PFNGLUXWINDOWPOS3FPROC) (GLfloat x, GLfloat y, GLfloat z);
#endif
#ifndef __GLUX__GLFCT_glWindowPos3fv
typedef void (APIENTRYP PFNGLUXWINDOWPOS3FVPROC) (const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glWindowPos3i
typedef void (APIENTRYP PFNGLUXWINDOWPOS3IPROC) (GLint x, GLint y, GLint z);
#endif
#ifndef __GLUX__GLFCT_glWindowPos3iv
typedef void (APIENTRYP PFNGLUXWINDOWPOS3IVPROC) (const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glWindowPos3s
typedef void (APIENTRYP PFNGLUXWINDOWPOS3SPROC) (GLshort x, GLshort y, GLshort z);
#endif
#ifndef __GLUX__GLFCT_glWindowPos3sv
typedef void (APIENTRYP PFNGLUXWINDOWPOS3SVPROC) (const GLshort *v);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBlendFuncSeparate
extern PFNGLUXBLENDFUNCSEPARATEPROC glBlendFuncSeparate;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawArrays
extern PFNGLUXMULTIDRAWARRAYSPROC glMultiDrawArrays;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElements
extern PFNGLUXMULTIDRAWELEMENTSPROC glMultiDrawElements;
#endif
#ifndef __GLUX__GLFCT_glPointParameterf
extern PFNGLUXPOINTPARAMETERFPROC glPointParameterf;
#endif
#ifndef __GLUX__GLFCT_glPointParameterfv
extern PFNGLUXPOINTPARAMETERFVPROC glPointParameterfv;
#endif
#ifndef __GLUX__GLFCT_glPointParameteri
extern PFNGLUXPOINTPARAMETERIPROC glPointParameteri;
#endif
#ifndef __GLUX__GLFCT_glPointParameteriv
extern PFNGLUXPOINTPARAMETERIVPROC glPointParameteriv;
#endif
#ifndef __GLUX__GLFCT_glFogCoordf
extern PFNGLUXFOGCOORDFPROC glFogCoordf;
#endif
#ifndef __GLUX__GLFCT_glFogCoordfv
extern PFNGLUXFOGCOORDFVPROC glFogCoordfv;
#endif
#ifndef __GLUX__GLFCT_glFogCoordd
extern PFNGLUXFOGCOORDDPROC glFogCoordd;
#endif
#ifndef __GLUX__GLFCT_glFogCoorddv
extern PFNGLUXFOGCOORDDVPROC glFogCoorddv;
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointer
extern PFNGLUXFOGCOORDPOINTERPROC glFogCoordPointer;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3b
extern PFNGLUXSECONDARYCOLOR3BPROC glSecondaryColor3b;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3bv
extern PFNGLUXSECONDARYCOLOR3BVPROC glSecondaryColor3bv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3d
extern PFNGLUXSECONDARYCOLOR3DPROC glSecondaryColor3d;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3dv
extern PFNGLUXSECONDARYCOLOR3DVPROC glSecondaryColor3dv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3f
extern PFNGLUXSECONDARYCOLOR3FPROC glSecondaryColor3f;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3fv
extern PFNGLUXSECONDARYCOLOR3FVPROC glSecondaryColor3fv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3i
extern PFNGLUXSECONDARYCOLOR3IPROC glSecondaryColor3i;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3iv
extern PFNGLUXSECONDARYCOLOR3IVPROC glSecondaryColor3iv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3s
extern PFNGLUXSECONDARYCOLOR3SPROC glSecondaryColor3s;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3sv
extern PFNGLUXSECONDARYCOLOR3SVPROC glSecondaryColor3sv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3ub
extern PFNGLUXSECONDARYCOLOR3UBPROC glSecondaryColor3ub;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3ubv
extern PFNGLUXSECONDARYCOLOR3UBVPROC glSecondaryColor3ubv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3ui
extern PFNGLUXSECONDARYCOLOR3UIPROC glSecondaryColor3ui;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3uiv
extern PFNGLUXSECONDARYCOLOR3UIVPROC glSecondaryColor3uiv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3us
extern PFNGLUXSECONDARYCOLOR3USPROC glSecondaryColor3us;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColor3usv
extern PFNGLUXSECONDARYCOLOR3USVPROC glSecondaryColor3usv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointer
extern PFNGLUXSECONDARYCOLORPOINTERPROC glSecondaryColorPointer;
#endif
#ifndef __GLUX__GLFCT_glWindowPos2d
extern PFNGLUXWINDOWPOS2DPROC glWindowPos2d;
#endif
#ifndef __GLUX__GLFCT_glWindowPos2dv
extern PFNGLUXWINDOWPOS2DVPROC glWindowPos2dv;
#endif
#ifndef __GLUX__GLFCT_glWindowPos2f
extern PFNGLUXWINDOWPOS2FPROC glWindowPos2f;
#endif
#ifndef __GLUX__GLFCT_glWindowPos2fv
extern PFNGLUXWINDOWPOS2FVPROC glWindowPos2fv;
#endif
#ifndef __GLUX__GLFCT_glWindowPos2i
extern PFNGLUXWINDOWPOS2IPROC glWindowPos2i;
#endif
#ifndef __GLUX__GLFCT_glWindowPos2iv
extern PFNGLUXWINDOWPOS2IVPROC glWindowPos2iv;
#endif
#ifndef __GLUX__GLFCT_glWindowPos2s
extern PFNGLUXWINDOWPOS2SPROC glWindowPos2s;
#endif
#ifndef __GLUX__GLFCT_glWindowPos2sv
extern PFNGLUXWINDOWPOS2SVPROC glWindowPos2sv;
#endif
#ifndef __GLUX__GLFCT_glWindowPos3d
extern PFNGLUXWINDOWPOS3DPROC glWindowPos3d;
#endif
#ifndef __GLUX__GLFCT_glWindowPos3dv
extern PFNGLUXWINDOWPOS3DVPROC glWindowPos3dv;
#endif
#ifndef __GLUX__GLFCT_glWindowPos3f
extern PFNGLUXWINDOWPOS3FPROC glWindowPos3f;
#endif
#ifndef __GLUX__GLFCT_glWindowPos3fv
extern PFNGLUXWINDOWPOS3FVPROC glWindowPos3fv;
#endif
#ifndef __GLUX__GLFCT_glWindowPos3i
extern PFNGLUXWINDOWPOS3IPROC glWindowPos3i;
#endif
#ifndef __GLUX__GLFCT_glWindowPos3iv
extern PFNGLUXWINDOWPOS3IVPROC glWindowPos3iv;
#endif
#ifndef __GLUX__GLFCT_glWindowPos3s
extern PFNGLUXWINDOWPOS3SPROC glWindowPos3s;
#endif
#ifndef __GLUX__GLFCT_glWindowPos3sv
extern PFNGLUXWINDOWPOS3SVPROC glWindowPos3sv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
