
// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:40 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_VERSION_1_3__
#define __GLUX_GL_VERSION_1_3__

GLUX_NEW_PLUGIN(GL_VERSION_1_3);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TEXTURE0
#  define GL_TEXTURE0 0x84C0
#endif
#ifndef GL_TEXTURE1
#  define GL_TEXTURE1 0x84C1
#endif
#ifndef GL_TEXTURE2
#  define GL_TEXTURE2 0x84C2
#endif
#ifndef GL_TEXTURE3
#  define GL_TEXTURE3 0x84C3
#endif
#ifndef GL_TEXTURE4
#  define GL_TEXTURE4 0x84C4
#endif
#ifndef GL_TEXTURE5
#  define GL_TEXTURE5 0x84C5
#endif
#ifndef GL_TEXTURE6
#  define GL_TEXTURE6 0x84C6
#endif
#ifndef GL_TEXTURE7
#  define GL_TEXTURE7 0x84C7
#endif
#ifndef GL_TEXTURE8
#  define GL_TEXTURE8 0x84C8
#endif
#ifndef GL_TEXTURE9
#  define GL_TEXTURE9 0x84C9
#endif
#ifndef GL_TEXTURE10
#  define GL_TEXTURE10 0x84CA
#endif
#ifndef GL_TEXTURE11
#  define GL_TEXTURE11 0x84CB
#endif
#ifndef GL_TEXTURE12
#  define GL_TEXTURE12 0x84CC
#endif
#ifndef GL_TEXTURE13
#  define GL_TEXTURE13 0x84CD
#endif
#ifndef GL_TEXTURE14
#  define GL_TEXTURE14 0x84CE
#endif
#ifndef GL_TEXTURE15
#  define GL_TEXTURE15 0x84CF
#endif
#ifndef GL_TEXTURE16
#  define GL_TEXTURE16 0x84D0
#endif
#ifndef GL_TEXTURE17
#  define GL_TEXTURE17 0x84D1
#endif
#ifndef GL_TEXTURE18
#  define GL_TEXTURE18 0x84D2
#endif
#ifndef GL_TEXTURE19
#  define GL_TEXTURE19 0x84D3
#endif
#ifndef GL_TEXTURE20
#  define GL_TEXTURE20 0x84D4
#endif
#ifndef GL_TEXTURE21
#  define GL_TEXTURE21 0x84D5
#endif
#ifndef GL_TEXTURE22
#  define GL_TEXTURE22 0x84D6
#endif
#ifndef GL_TEXTURE23
#  define GL_TEXTURE23 0x84D7
#endif
#ifndef GL_TEXTURE24
#  define GL_TEXTURE24 0x84D8
#endif
#ifndef GL_TEXTURE25
#  define GL_TEXTURE25 0x84D9
#endif
#ifndef GL_TEXTURE26
#  define GL_TEXTURE26 0x84DA
#endif
#ifndef GL_TEXTURE27
#  define GL_TEXTURE27 0x84DB
#endif
#ifndef GL_TEXTURE28
#  define GL_TEXTURE28 0x84DC
#endif
#ifndef GL_TEXTURE29
#  define GL_TEXTURE29 0x84DD
#endif
#ifndef GL_TEXTURE30
#  define GL_TEXTURE30 0x84DE
#endif
#ifndef GL_TEXTURE31
#  define GL_TEXTURE31 0x84DF
#endif
#ifndef GL_ACTIVE_TEXTURE
#  define GL_ACTIVE_TEXTURE 0x84E0
#endif
#ifndef GL_MULTISAMPLE
#  define GL_MULTISAMPLE 0x809D
#endif
#ifndef GL_SAMPLE_ALPHA_TO_COVERAGE
#  define GL_SAMPLE_ALPHA_TO_COVERAGE 0x809E
#endif
#ifndef GL_SAMPLE_ALPHA_TO_ONE
#  define GL_SAMPLE_ALPHA_TO_ONE 0x809F
#endif
#ifndef GL_SAMPLE_COVERAGE
#  define GL_SAMPLE_COVERAGE 0x80A0
#endif
#ifndef GL_SAMPLE_BUFFERS
#  define GL_SAMPLE_BUFFERS 0x80A8
#endif
#ifndef GL_SAMPLES
#  define GL_SAMPLES 0x80A9
#endif
#ifndef GL_SAMPLE_COVERAGE_VALUE
#  define GL_SAMPLE_COVERAGE_VALUE 0x80AA
#endif
#ifndef GL_SAMPLE_COVERAGE_INVERT
#  define GL_SAMPLE_COVERAGE_INVERT 0x80AB
#endif
#ifndef GL_TEXTURE_CUBE_MAP
#  define GL_TEXTURE_CUBE_MAP 0x8513
#endif
#ifndef GL_TEXTURE_BINDING_CUBE_MAP
#  define GL_TEXTURE_BINDING_CUBE_MAP 0x8514
#endif
#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_X
#  define GL_TEXTURE_CUBE_MAP_POSITIVE_X 0x8515
#endif
#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_X
#  define GL_TEXTURE_CUBE_MAP_NEGATIVE_X 0x8516
#endif
#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_Y
#  define GL_TEXTURE_CUBE_MAP_POSITIVE_Y 0x8517
#endif
#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
#  define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y 0x8518
#endif
#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_Z
#  define GL_TEXTURE_CUBE_MAP_POSITIVE_Z 0x8519
#endif
#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
#  define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z 0x851A
#endif
#ifndef GL_PROXY_TEXTURE_CUBE_MAP
#  define GL_PROXY_TEXTURE_CUBE_MAP 0x851B
#endif
#ifndef GL_MAX_CUBE_MAP_TEXTURE_SIZE
#  define GL_MAX_CUBE_MAP_TEXTURE_SIZE 0x851C
#endif
#ifndef GL_COMPRESSED_RGB
#  define GL_COMPRESSED_RGB 0x84ED
#endif
#ifndef GL_COMPRESSED_RGBA
#  define GL_COMPRESSED_RGBA 0x84EE
#endif
#ifndef GL_TEXTURE_COMPRESSION_HINT
#  define GL_TEXTURE_COMPRESSION_HINT 0x84EF
#endif
#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE
#  define GL_TEXTURE_COMPRESSED_IMAGE_SIZE 0x86A0
#endif
#ifndef GL_TEXTURE_COMPRESSED
#  define GL_TEXTURE_COMPRESSED 0x86A1
#endif
#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS
#  define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2
#endif
#ifndef GL_COMPRESSED_TEXTURE_FORMATS
#  define GL_COMPRESSED_TEXTURE_FORMATS 0x86A3
#endif
#ifndef GL_CLAMP_TO_BORDER
#  define GL_CLAMP_TO_BORDER 0x812D
#endif
#ifndef GL_CLIENT_ACTIVE_TEXTURE
#  define GL_CLIENT_ACTIVE_TEXTURE 0x84E1
#endif
#ifndef GL_MAX_TEXTURE_UNITS
#  define GL_MAX_TEXTURE_UNITS 0x84E2
#endif
#ifndef GL_TRANSPOSE_MODELVIEW_MATRIX
#  define GL_TRANSPOSE_MODELVIEW_MATRIX 0x84E3
#endif
#ifndef GL_TRANSPOSE_PROJECTION_MATRIX
#  define GL_TRANSPOSE_PROJECTION_MATRIX 0x84E4
#endif
#ifndef GL_TRANSPOSE_TEXTURE_MATRIX
#  define GL_TRANSPOSE_TEXTURE_MATRIX 0x84E5
#endif
#ifndef GL_TRANSPOSE_COLOR_MATRIX
#  define GL_TRANSPOSE_COLOR_MATRIX 0x84E6
#endif
#ifndef GL_MULTISAMPLE_BIT
#  define GL_MULTISAMPLE_BIT 0x20000000
#endif
#ifndef GL_NORMAL_MAP
#  define GL_NORMAL_MAP 0x8511
#endif
#ifndef GL_REFLECTION_MAP
#  define GL_REFLECTION_MAP 0x8512
#endif
#ifndef GL_COMPRESSED_ALPHA
#  define GL_COMPRESSED_ALPHA 0x84E9
#endif
#ifndef GL_COMPRESSED_LUMINANCE
#  define GL_COMPRESSED_LUMINANCE 0x84EA
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ALPHA
#  define GL_COMPRESSED_LUMINANCE_ALPHA 0x84EB
#endif
#ifndef GL_COMPRESSED_INTENSITY
#  define GL_COMPRESSED_INTENSITY 0x84EC
#endif
#ifndef GL_COMBINE
#  define GL_COMBINE 0x8570
#endif
#ifndef GL_COMBINE_RGB
#  define GL_COMBINE_RGB 0x8571
#endif
#ifndef GL_COMBINE_ALPHA
#  define GL_COMBINE_ALPHA 0x8572
#endif
#ifndef GL_SOURCE0_RGB
#  define GL_SOURCE0_RGB 0x8580
#endif
#ifndef GL_SOURCE1_RGB
#  define GL_SOURCE1_RGB 0x8581
#endif
#ifndef GL_SOURCE2_RGB
#  define GL_SOURCE2_RGB 0x8582
#endif
#ifndef GL_SOURCE0_ALPHA
#  define GL_SOURCE0_ALPHA 0x8588
#endif
#ifndef GL_SOURCE1_ALPHA
#  define GL_SOURCE1_ALPHA 0x8589
#endif
#ifndef GL_SOURCE2_ALPHA
#  define GL_SOURCE2_ALPHA 0x858A
#endif
#ifndef GL_OPERAND0_RGB
#  define GL_OPERAND0_RGB 0x8590
#endif
#ifndef GL_OPERAND1_RGB
#  define GL_OPERAND1_RGB 0x8591
#endif
#ifndef GL_OPERAND2_RGB
#  define GL_OPERAND2_RGB 0x8592
#endif
#ifndef GL_OPERAND0_ALPHA
#  define GL_OPERAND0_ALPHA 0x8598
#endif
#ifndef GL_OPERAND1_ALPHA
#  define GL_OPERAND1_ALPHA 0x8599
#endif
#ifndef GL_OPERAND2_ALPHA
#  define GL_OPERAND2_ALPHA 0x859A
#endif
#ifndef GL_RGB_SCALE
#  define GL_RGB_SCALE 0x8573
#endif
#ifndef GL_ADD_SIGNED
#  define GL_ADD_SIGNED 0x8574
#endif
#ifndef GL_INTERPOLATE
#  define GL_INTERPOLATE 0x8575
#endif
#ifndef GL_SUBTRACT
#  define GL_SUBTRACT 0x84E7
#endif
#ifndef GL_CONSTANT
#  define GL_CONSTANT 0x8576
#endif
#ifndef GL_PRIMARY_COLOR
#  define GL_PRIMARY_COLOR 0x8577
#endif
#ifndef GL_PREVIOUS
#  define GL_PREVIOUS 0x8578
#endif
#ifndef GL_DOT3_RGB
#  define GL_DOT3_RGB 0x86AE
#endif
#ifndef GL_DOT3_RGBA
#  define GL_DOT3_RGBA 0x86AF
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glActiveTexture
typedef void (APIENTRYP PFNGLUXACTIVETEXTUREPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glSampleCoverage
typedef void (APIENTRYP PFNGLUXSAMPLECOVERAGEPROC) (GLfloat value, GLboolean invert);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage3D
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2D
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1D
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3D
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2D
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1D
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImage
typedef void (APIENTRYP PFNGLUXGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glClientActiveTexture
typedef void (APIENTRYP PFNGLUXCLIENTACTIVETEXTUREPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1d
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DPROC) (GLenum target, GLdouble s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DVPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1f
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FPROC) (GLenum target, GLfloat s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FVPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1i
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IPROC) (GLenum target, GLint s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IVPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1s
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SPROC) (GLenum target, GLshort s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SVPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2d
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DPROC) (GLenum target, GLdouble s, GLdouble t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DVPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2f
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FPROC) (GLenum target, GLfloat s, GLfloat t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FVPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2i
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IPROC) (GLenum target, GLint s, GLint t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IVPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2s
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SPROC) (GLenum target, GLshort s, GLshort t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SVPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3d
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DVPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3f
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FVPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3i
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IPROC) (GLenum target, GLint s, GLint t, GLint r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IVPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3s
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SVPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4d
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DVPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4f
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FVPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4i
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IVPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4s
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SVPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glLoadTransposeMatrixf
typedef void (APIENTRYP PFNGLUXLOADTRANSPOSEMATRIXFPROC) (const GLfloat *m);
#endif
#ifndef __GLUX__GLFCT_glLoadTransposeMatrixd
typedef void (APIENTRYP PFNGLUXLOADTRANSPOSEMATRIXDPROC) (const GLdouble *m);
#endif
#ifndef __GLUX__GLFCT_glMultTransposeMatrixf
typedef void (APIENTRYP PFNGLUXMULTTRANSPOSEMATRIXFPROC) (const GLfloat *m);
#endif
#ifndef __GLUX__GLFCT_glMultTransposeMatrixd
typedef void (APIENTRYP PFNGLUXMULTTRANSPOSEMATRIXDPROC) (const GLdouble *m);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glActiveTexture
extern PFNGLUXACTIVETEXTUREPROC glActiveTexture;
#endif
#ifndef __GLUX__GLFCT_glSampleCoverage
extern PFNGLUXSAMPLECOVERAGEPROC glSampleCoverage;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage3D
extern PFNGLUXCOMPRESSEDTEXIMAGE3DPROC glCompressedTexImage3D;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2D
extern PFNGLUXCOMPRESSEDTEXIMAGE2DPROC glCompressedTexImage2D;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1D
extern PFNGLUXCOMPRESSEDTEXIMAGE1DPROC glCompressedTexImage1D;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3D
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE3DPROC glCompressedTexSubImage3D;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2D
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE2DPROC glCompressedTexSubImage2D;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1D
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE1DPROC glCompressedTexSubImage1D;
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImage
extern PFNGLUXGETCOMPRESSEDTEXIMAGEPROC glGetCompressedTexImage;
#endif
#ifndef __GLUX__GLFCT_glClientActiveTexture
extern PFNGLUXCLIENTACTIVETEXTUREPROC glClientActiveTexture;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1d
extern PFNGLUXMULTITEXCOORD1DPROC glMultiTexCoord1d;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dv
extern PFNGLUXMULTITEXCOORD1DVPROC glMultiTexCoord1dv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1f
extern PFNGLUXMULTITEXCOORD1FPROC glMultiTexCoord1f;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fv
extern PFNGLUXMULTITEXCOORD1FVPROC glMultiTexCoord1fv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1i
extern PFNGLUXMULTITEXCOORD1IPROC glMultiTexCoord1i;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iv
extern PFNGLUXMULTITEXCOORD1IVPROC glMultiTexCoord1iv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1s
extern PFNGLUXMULTITEXCOORD1SPROC glMultiTexCoord1s;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sv
extern PFNGLUXMULTITEXCOORD1SVPROC glMultiTexCoord1sv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2d
extern PFNGLUXMULTITEXCOORD2DPROC glMultiTexCoord2d;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dv
extern PFNGLUXMULTITEXCOORD2DVPROC glMultiTexCoord2dv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2f
extern PFNGLUXMULTITEXCOORD2FPROC glMultiTexCoord2f;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fv
extern PFNGLUXMULTITEXCOORD2FVPROC glMultiTexCoord2fv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2i
extern PFNGLUXMULTITEXCOORD2IPROC glMultiTexCoord2i;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iv
extern PFNGLUXMULTITEXCOORD2IVPROC glMultiTexCoord2iv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2s
extern PFNGLUXMULTITEXCOORD2SPROC glMultiTexCoord2s;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sv
extern PFNGLUXMULTITEXCOORD2SVPROC glMultiTexCoord2sv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3d
extern PFNGLUXMULTITEXCOORD3DPROC glMultiTexCoord3d;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dv
extern PFNGLUXMULTITEXCOORD3DVPROC glMultiTexCoord3dv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3f
extern PFNGLUXMULTITEXCOORD3FPROC glMultiTexCoord3f;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fv
extern PFNGLUXMULTITEXCOORD3FVPROC glMultiTexCoord3fv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3i
extern PFNGLUXMULTITEXCOORD3IPROC glMultiTexCoord3i;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iv
extern PFNGLUXMULTITEXCOORD3IVPROC glMultiTexCoord3iv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3s
extern PFNGLUXMULTITEXCOORD3SPROC glMultiTexCoord3s;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sv
extern PFNGLUXMULTITEXCOORD3SVPROC glMultiTexCoord3sv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4d
extern PFNGLUXMULTITEXCOORD4DPROC glMultiTexCoord4d;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dv
extern PFNGLUXMULTITEXCOORD4DVPROC glMultiTexCoord4dv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4f
extern PFNGLUXMULTITEXCOORD4FPROC glMultiTexCoord4f;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fv
extern PFNGLUXMULTITEXCOORD4FVPROC glMultiTexCoord4fv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4i
extern PFNGLUXMULTITEXCOORD4IPROC glMultiTexCoord4i;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iv
extern PFNGLUXMULTITEXCOORD4IVPROC glMultiTexCoord4iv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4s
extern PFNGLUXMULTITEXCOORD4SPROC glMultiTexCoord4s;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sv
extern PFNGLUXMULTITEXCOORD4SVPROC glMultiTexCoord4sv;
#endif
#ifndef __GLUX__GLFCT_glLoadTransposeMatrixf
extern PFNGLUXLOADTRANSPOSEMATRIXFPROC glLoadTransposeMatrixf;
#endif
#ifndef __GLUX__GLFCT_glLoadTransposeMatrixd
extern PFNGLUXLOADTRANSPOSEMATRIXDPROC glLoadTransposeMatrixd;
#endif
#ifndef __GLUX__GLFCT_glMultTransposeMatrixf
extern PFNGLUXMULTTRANSPOSEMATRIXFPROC glMultTransposeMatrixf;
#endif
#ifndef __GLUX__GLFCT_glMultTransposeMatrixd
extern PFNGLUXMULTTRANSPOSEMATRIXDPROC glMultTransposeMatrixd;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:09:59 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_VERSION_1_3__
#define __GLUX_GL_VERSION_1_3__

GLUX_NEW_PLUGIN(GL_VERSION_1_3);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TEXTURE0
#  define GL_TEXTURE0 0x84C0
#endif
#ifndef GL_TEXTURE1
#  define GL_TEXTURE1 0x84C1
#endif
#ifndef GL_TEXTURE2
#  define GL_TEXTURE2 0x84C2
#endif
#ifndef GL_TEXTURE3
#  define GL_TEXTURE3 0x84C3
#endif
#ifndef GL_TEXTURE4
#  define GL_TEXTURE4 0x84C4
#endif
#ifndef GL_TEXTURE5
#  define GL_TEXTURE5 0x84C5
#endif
#ifndef GL_TEXTURE6
#  define GL_TEXTURE6 0x84C6
#endif
#ifndef GL_TEXTURE7
#  define GL_TEXTURE7 0x84C7
#endif
#ifndef GL_TEXTURE8
#  define GL_TEXTURE8 0x84C8
#endif
#ifndef GL_TEXTURE9
#  define GL_TEXTURE9 0x84C9
#endif
#ifndef GL_TEXTURE10
#  define GL_TEXTURE10 0x84CA
#endif
#ifndef GL_TEXTURE11
#  define GL_TEXTURE11 0x84CB
#endif
#ifndef GL_TEXTURE12
#  define GL_TEXTURE12 0x84CC
#endif
#ifndef GL_TEXTURE13
#  define GL_TEXTURE13 0x84CD
#endif
#ifndef GL_TEXTURE14
#  define GL_TEXTURE14 0x84CE
#endif
#ifndef GL_TEXTURE15
#  define GL_TEXTURE15 0x84CF
#endif
#ifndef GL_TEXTURE16
#  define GL_TEXTURE16 0x84D0
#endif
#ifndef GL_TEXTURE17
#  define GL_TEXTURE17 0x84D1
#endif
#ifndef GL_TEXTURE18
#  define GL_TEXTURE18 0x84D2
#endif
#ifndef GL_TEXTURE19
#  define GL_TEXTURE19 0x84D3
#endif
#ifndef GL_TEXTURE20
#  define GL_TEXTURE20 0x84D4
#endif
#ifndef GL_TEXTURE21
#  define GL_TEXTURE21 0x84D5
#endif
#ifndef GL_TEXTURE22
#  define GL_TEXTURE22 0x84D6
#endif
#ifndef GL_TEXTURE23
#  define GL_TEXTURE23 0x84D7
#endif
#ifndef GL_TEXTURE24
#  define GL_TEXTURE24 0x84D8
#endif
#ifndef GL_TEXTURE25
#  define GL_TEXTURE25 0x84D9
#endif
#ifndef GL_TEXTURE26
#  define GL_TEXTURE26 0x84DA
#endif
#ifndef GL_TEXTURE27
#  define GL_TEXTURE27 0x84DB
#endif
#ifndef GL_TEXTURE28
#  define GL_TEXTURE28 0x84DC
#endif
#ifndef GL_TEXTURE29
#  define GL_TEXTURE29 0x84DD
#endif
#ifndef GL_TEXTURE30
#  define GL_TEXTURE30 0x84DE
#endif
#ifndef GL_TEXTURE31
#  define GL_TEXTURE31 0x84DF
#endif
#ifndef GL_ACTIVE_TEXTURE
#  define GL_ACTIVE_TEXTURE 0x84E0
#endif
#ifndef GL_MULTISAMPLE
#  define GL_MULTISAMPLE 0x809D
#endif
#ifndef GL_SAMPLE_ALPHA_TO_COVERAGE
#  define GL_SAMPLE_ALPHA_TO_COVERAGE 0x809E
#endif
#ifndef GL_SAMPLE_ALPHA_TO_ONE
#  define GL_SAMPLE_ALPHA_TO_ONE 0x809F
#endif
#ifndef GL_SAMPLE_COVERAGE
#  define GL_SAMPLE_COVERAGE 0x80A0
#endif
#ifndef GL_SAMPLE_BUFFERS
#  define GL_SAMPLE_BUFFERS 0x80A8
#endif
#ifndef GL_SAMPLES
#  define GL_SAMPLES 0x80A9
#endif
#ifndef GL_SAMPLE_COVERAGE_VALUE
#  define GL_SAMPLE_COVERAGE_VALUE 0x80AA
#endif
#ifndef GL_SAMPLE_COVERAGE_INVERT
#  define GL_SAMPLE_COVERAGE_INVERT 0x80AB
#endif
#ifndef GL_TEXTURE_CUBE_MAP
#  define GL_TEXTURE_CUBE_MAP 0x8513
#endif
#ifndef GL_TEXTURE_BINDING_CUBE_MAP
#  define GL_TEXTURE_BINDING_CUBE_MAP 0x8514
#endif
#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_X
#  define GL_TEXTURE_CUBE_MAP_POSITIVE_X 0x8515
#endif
#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_X
#  define GL_TEXTURE_CUBE_MAP_NEGATIVE_X 0x8516
#endif
#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_Y
#  define GL_TEXTURE_CUBE_MAP_POSITIVE_Y 0x8517
#endif
#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
#  define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y 0x8518
#endif
#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_Z
#  define GL_TEXTURE_CUBE_MAP_POSITIVE_Z 0x8519
#endif
#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
#  define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z 0x851A
#endif
#ifndef GL_PROXY_TEXTURE_CUBE_MAP
#  define GL_PROXY_TEXTURE_CUBE_MAP 0x851B
#endif
#ifndef GL_MAX_CUBE_MAP_TEXTURE_SIZE
#  define GL_MAX_CUBE_MAP_TEXTURE_SIZE 0x851C
#endif
#ifndef GL_COMPRESSED_RGB
#  define GL_COMPRESSED_RGB 0x84ED
#endif
#ifndef GL_COMPRESSED_RGBA
#  define GL_COMPRESSED_RGBA 0x84EE
#endif
#ifndef GL_TEXTURE_COMPRESSION_HINT
#  define GL_TEXTURE_COMPRESSION_HINT 0x84EF
#endif
#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE
#  define GL_TEXTURE_COMPRESSED_IMAGE_SIZE 0x86A0
#endif
#ifndef GL_TEXTURE_COMPRESSED
#  define GL_TEXTURE_COMPRESSED 0x86A1
#endif
#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS
#  define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2
#endif
#ifndef GL_COMPRESSED_TEXTURE_FORMATS
#  define GL_COMPRESSED_TEXTURE_FORMATS 0x86A3
#endif
#ifndef GL_CLAMP_TO_BORDER
#  define GL_CLAMP_TO_BORDER 0x812D
#endif
#ifndef GL_CLIENT_ACTIVE_TEXTURE
#  define GL_CLIENT_ACTIVE_TEXTURE 0x84E1
#endif
#ifndef GL_MAX_TEXTURE_UNITS
#  define GL_MAX_TEXTURE_UNITS 0x84E2
#endif
#ifndef GL_TRANSPOSE_MODELVIEW_MATRIX
#  define GL_TRANSPOSE_MODELVIEW_MATRIX 0x84E3
#endif
#ifndef GL_TRANSPOSE_PROJECTION_MATRIX
#  define GL_TRANSPOSE_PROJECTION_MATRIX 0x84E4
#endif
#ifndef GL_TRANSPOSE_TEXTURE_MATRIX
#  define GL_TRANSPOSE_TEXTURE_MATRIX 0x84E5
#endif
#ifndef GL_TRANSPOSE_COLOR_MATRIX
#  define GL_TRANSPOSE_COLOR_MATRIX 0x84E6
#endif
#ifndef GL_MULTISAMPLE_BIT
#  define GL_MULTISAMPLE_BIT 0x20000000
#endif
#ifndef GL_NORMAL_MAP
#  define GL_NORMAL_MAP 0x8511
#endif
#ifndef GL_REFLECTION_MAP
#  define GL_REFLECTION_MAP 0x8512
#endif
#ifndef GL_COMPRESSED_ALPHA
#  define GL_COMPRESSED_ALPHA 0x84E9
#endif
#ifndef GL_COMPRESSED_LUMINANCE
#  define GL_COMPRESSED_LUMINANCE 0x84EA
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ALPHA
#  define GL_COMPRESSED_LUMINANCE_ALPHA 0x84EB
#endif
#ifndef GL_COMPRESSED_INTENSITY
#  define GL_COMPRESSED_INTENSITY 0x84EC
#endif
#ifndef GL_COMBINE
#  define GL_COMBINE 0x8570
#endif
#ifndef GL_COMBINE_RGB
#  define GL_COMBINE_RGB 0x8571
#endif
#ifndef GL_COMBINE_ALPHA
#  define GL_COMBINE_ALPHA 0x8572
#endif
#ifndef GL_SOURCE0_RGB
#  define GL_SOURCE0_RGB 0x8580
#endif
#ifndef GL_SOURCE1_RGB
#  define GL_SOURCE1_RGB 0x8581
#endif
#ifndef GL_SOURCE2_RGB
#  define GL_SOURCE2_RGB 0x8582
#endif
#ifndef GL_SOURCE0_ALPHA
#  define GL_SOURCE0_ALPHA 0x8588
#endif
#ifndef GL_SOURCE1_ALPHA
#  define GL_SOURCE1_ALPHA 0x8589
#endif
#ifndef GL_SOURCE2_ALPHA
#  define GL_SOURCE2_ALPHA 0x858A
#endif
#ifndef GL_OPERAND0_RGB
#  define GL_OPERAND0_RGB 0x8590
#endif
#ifndef GL_OPERAND1_RGB
#  define GL_OPERAND1_RGB 0x8591
#endif
#ifndef GL_OPERAND2_RGB
#  define GL_OPERAND2_RGB 0x8592
#endif
#ifndef GL_OPERAND0_ALPHA
#  define GL_OPERAND0_ALPHA 0x8598
#endif
#ifndef GL_OPERAND1_ALPHA
#  define GL_OPERAND1_ALPHA 0x8599
#endif
#ifndef GL_OPERAND2_ALPHA
#  define GL_OPERAND2_ALPHA 0x859A
#endif
#ifndef GL_RGB_SCALE
#  define GL_RGB_SCALE 0x8573
#endif
#ifndef GL_ADD_SIGNED
#  define GL_ADD_SIGNED 0x8574
#endif
#ifndef GL_INTERPOLATE
#  define GL_INTERPOLATE 0x8575
#endif
#ifndef GL_SUBTRACT
#  define GL_SUBTRACT 0x84E7
#endif
#ifndef GL_CONSTANT
#  define GL_CONSTANT 0x8576
#endif
#ifndef GL_PRIMARY_COLOR
#  define GL_PRIMARY_COLOR 0x8577
#endif
#ifndef GL_PREVIOUS
#  define GL_PREVIOUS 0x8578
#endif
#ifndef GL_DOT3_RGB
#  define GL_DOT3_RGB 0x86AE
#endif
#ifndef GL_DOT3_RGBA
#  define GL_DOT3_RGBA 0x86AF
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glActiveTexture
typedef void (APIENTRYP PFNGLUXACTIVETEXTUREPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glSampleCoverage
typedef void (APIENTRYP PFNGLUXSAMPLECOVERAGEPROC) (GLfloat value, GLboolean invert);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage3D
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2D
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1D
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3D
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2D
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1D
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImage
typedef void (APIENTRYP PFNGLUXGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glClientActiveTexture
typedef void (APIENTRYP PFNGLUXCLIENTACTIVETEXTUREPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1d
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DPROC) (GLenum target, GLdouble s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DVPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1f
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FPROC) (GLenum target, GLfloat s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FVPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1i
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IPROC) (GLenum target, GLint s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IVPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1s
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SPROC) (GLenum target, GLshort s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SVPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2d
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DPROC) (GLenum target, GLdouble s, GLdouble t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DVPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2f
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FPROC) (GLenum target, GLfloat s, GLfloat t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FVPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2i
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IPROC) (GLenum target, GLint s, GLint t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IVPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2s
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SPROC) (GLenum target, GLshort s, GLshort t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SVPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3d
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DVPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3f
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FVPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3i
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IPROC) (GLenum target, GLint s, GLint t, GLint r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IVPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3s
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SVPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4d
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DVPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4f
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FVPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4i
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IVPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4s
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SVPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glLoadTransposeMatrixf
typedef void (APIENTRYP PFNGLUXLOADTRANSPOSEMATRIXFPROC) (const GLfloat *m);
#endif
#ifndef __GLUX__GLFCT_glLoadTransposeMatrixd
typedef void (APIENTRYP PFNGLUXLOADTRANSPOSEMATRIXDPROC) (const GLdouble *m);
#endif
#ifndef __GLUX__GLFCT_glMultTransposeMatrixf
typedef void (APIENTRYP PFNGLUXMULTTRANSPOSEMATRIXFPROC) (const GLfloat *m);
#endif
#ifndef __GLUX__GLFCT_glMultTransposeMatrixd
typedef void (APIENTRYP PFNGLUXMULTTRANSPOSEMATRIXDPROC) (const GLdouble *m);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glActiveTexture
extern PFNGLUXACTIVETEXTUREPROC glActiveTexture;
#endif
#ifndef __GLUX__GLFCT_glSampleCoverage
extern PFNGLUXSAMPLECOVERAGEPROC glSampleCoverage;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage3D
extern PFNGLUXCOMPRESSEDTEXIMAGE3DPROC glCompressedTexImage3D;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2D
extern PFNGLUXCOMPRESSEDTEXIMAGE2DPROC glCompressedTexImage2D;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1D
extern PFNGLUXCOMPRESSEDTEXIMAGE1DPROC glCompressedTexImage1D;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3D
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE3DPROC glCompressedTexSubImage3D;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2D
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE2DPROC glCompressedTexSubImage2D;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1D
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE1DPROC glCompressedTexSubImage1D;
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImage
extern PFNGLUXGETCOMPRESSEDTEXIMAGEPROC glGetCompressedTexImage;
#endif
#ifndef __GLUX__GLFCT_glClientActiveTexture
extern PFNGLUXCLIENTACTIVETEXTUREPROC glClientActiveTexture;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1d
extern PFNGLUXMULTITEXCOORD1DPROC glMultiTexCoord1d;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dv
extern PFNGLUXMULTITEXCOORD1DVPROC glMultiTexCoord1dv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1f
extern PFNGLUXMULTITEXCOORD1FPROC glMultiTexCoord1f;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fv
extern PFNGLUXMULTITEXCOORD1FVPROC glMultiTexCoord1fv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1i
extern PFNGLUXMULTITEXCOORD1IPROC glMultiTexCoord1i;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iv
extern PFNGLUXMULTITEXCOORD1IVPROC glMultiTexCoord1iv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1s
extern PFNGLUXMULTITEXCOORD1SPROC glMultiTexCoord1s;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sv
extern PFNGLUXMULTITEXCOORD1SVPROC glMultiTexCoord1sv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2d
extern PFNGLUXMULTITEXCOORD2DPROC glMultiTexCoord2d;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dv
extern PFNGLUXMULTITEXCOORD2DVPROC glMultiTexCoord2dv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2f
extern PFNGLUXMULTITEXCOORD2FPROC glMultiTexCoord2f;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fv
extern PFNGLUXMULTITEXCOORD2FVPROC glMultiTexCoord2fv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2i
extern PFNGLUXMULTITEXCOORD2IPROC glMultiTexCoord2i;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iv
extern PFNGLUXMULTITEXCOORD2IVPROC glMultiTexCoord2iv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2s
extern PFNGLUXMULTITEXCOORD2SPROC glMultiTexCoord2s;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sv
extern PFNGLUXMULTITEXCOORD2SVPROC glMultiTexCoord2sv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3d
extern PFNGLUXMULTITEXCOORD3DPROC glMultiTexCoord3d;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dv
extern PFNGLUXMULTITEXCOORD3DVPROC glMultiTexCoord3dv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3f
extern PFNGLUXMULTITEXCOORD3FPROC glMultiTexCoord3f;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fv
extern PFNGLUXMULTITEXCOORD3FVPROC glMultiTexCoord3fv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3i
extern PFNGLUXMULTITEXCOORD3IPROC glMultiTexCoord3i;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iv
extern PFNGLUXMULTITEXCOORD3IVPROC glMultiTexCoord3iv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3s
extern PFNGLUXMULTITEXCOORD3SPROC glMultiTexCoord3s;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sv
extern PFNGLUXMULTITEXCOORD3SVPROC glMultiTexCoord3sv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4d
extern PFNGLUXMULTITEXCOORD4DPROC glMultiTexCoord4d;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dv
extern PFNGLUXMULTITEXCOORD4DVPROC glMultiTexCoord4dv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4f
extern PFNGLUXMULTITEXCOORD4FPROC glMultiTexCoord4f;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fv
extern PFNGLUXMULTITEXCOORD4FVPROC glMultiTexCoord4fv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4i
extern PFNGLUXMULTITEXCOORD4IPROC glMultiTexCoord4i;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iv
extern PFNGLUXMULTITEXCOORD4IVPROC glMultiTexCoord4iv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4s
extern PFNGLUXMULTITEXCOORD4SPROC glMultiTexCoord4s;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sv
extern PFNGLUXMULTITEXCOORD4SVPROC glMultiTexCoord4sv;
#endif
#ifndef __GLUX__GLFCT_glLoadTransposeMatrixf
extern PFNGLUXLOADTRANSPOSEMATRIXFPROC glLoadTransposeMatrixf;
#endif
#ifndef __GLUX__GLFCT_glLoadTransposeMatrixd
extern PFNGLUXLOADTRANSPOSEMATRIXDPROC glLoadTransposeMatrixd;
#endif
#ifndef __GLUX__GLFCT_glMultTransposeMatrixf
extern PFNGLUXMULTTRANSPOSEMATRIXFPROC glMultTransposeMatrixf;
#endif
#ifndef __GLUX__GLFCT_glMultTransposeMatrixd
extern PFNGLUXMULTTRANSPOSEMATRIXDPROC glMultTransposeMatrixd;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:20:00 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_VERSION_1_3__
#define __GLUX_GL_VERSION_1_3__

GLUX_NEW_PLUGIN(GL_VERSION_1_3);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TEXTURE0
#  define GL_TEXTURE0 0x84C0
#endif
#ifndef GL_TEXTURE1
#  define GL_TEXTURE1 0x84C1
#endif
#ifndef GL_TEXTURE2
#  define GL_TEXTURE2 0x84C2
#endif
#ifndef GL_TEXTURE3
#  define GL_TEXTURE3 0x84C3
#endif
#ifndef GL_TEXTURE4
#  define GL_TEXTURE4 0x84C4
#endif
#ifndef GL_TEXTURE5
#  define GL_TEXTURE5 0x84C5
#endif
#ifndef GL_TEXTURE6
#  define GL_TEXTURE6 0x84C6
#endif
#ifndef GL_TEXTURE7
#  define GL_TEXTURE7 0x84C7
#endif
#ifndef GL_TEXTURE8
#  define GL_TEXTURE8 0x84C8
#endif
#ifndef GL_TEXTURE9
#  define GL_TEXTURE9 0x84C9
#endif
#ifndef GL_TEXTURE10
#  define GL_TEXTURE10 0x84CA
#endif
#ifndef GL_TEXTURE11
#  define GL_TEXTURE11 0x84CB
#endif
#ifndef GL_TEXTURE12
#  define GL_TEXTURE12 0x84CC
#endif
#ifndef GL_TEXTURE13
#  define GL_TEXTURE13 0x84CD
#endif
#ifndef GL_TEXTURE14
#  define GL_TEXTURE14 0x84CE
#endif
#ifndef GL_TEXTURE15
#  define GL_TEXTURE15 0x84CF
#endif
#ifndef GL_TEXTURE16
#  define GL_TEXTURE16 0x84D0
#endif
#ifndef GL_TEXTURE17
#  define GL_TEXTURE17 0x84D1
#endif
#ifndef GL_TEXTURE18
#  define GL_TEXTURE18 0x84D2
#endif
#ifndef GL_TEXTURE19
#  define GL_TEXTURE19 0x84D3
#endif
#ifndef GL_TEXTURE20
#  define GL_TEXTURE20 0x84D4
#endif
#ifndef GL_TEXTURE21
#  define GL_TEXTURE21 0x84D5
#endif
#ifndef GL_TEXTURE22
#  define GL_TEXTURE22 0x84D6
#endif
#ifndef GL_TEXTURE23
#  define GL_TEXTURE23 0x84D7
#endif
#ifndef GL_TEXTURE24
#  define GL_TEXTURE24 0x84D8
#endif
#ifndef GL_TEXTURE25
#  define GL_TEXTURE25 0x84D9
#endif
#ifndef GL_TEXTURE26
#  define GL_TEXTURE26 0x84DA
#endif
#ifndef GL_TEXTURE27
#  define GL_TEXTURE27 0x84DB
#endif
#ifndef GL_TEXTURE28
#  define GL_TEXTURE28 0x84DC
#endif
#ifndef GL_TEXTURE29
#  define GL_TEXTURE29 0x84DD
#endif
#ifndef GL_TEXTURE30
#  define GL_TEXTURE30 0x84DE
#endif
#ifndef GL_TEXTURE31
#  define GL_TEXTURE31 0x84DF
#endif
#ifndef GL_ACTIVE_TEXTURE
#  define GL_ACTIVE_TEXTURE 0x84E0
#endif
#ifndef GL_MULTISAMPLE
#  define GL_MULTISAMPLE 0x809D
#endif
#ifndef GL_SAMPLE_ALPHA_TO_COVERAGE
#  define GL_SAMPLE_ALPHA_TO_COVERAGE 0x809E
#endif
#ifndef GL_SAMPLE_ALPHA_TO_ONE
#  define GL_SAMPLE_ALPHA_TO_ONE 0x809F
#endif
#ifndef GL_SAMPLE_COVERAGE
#  define GL_SAMPLE_COVERAGE 0x80A0
#endif
#ifndef GL_SAMPLE_BUFFERS
#  define GL_SAMPLE_BUFFERS 0x80A8
#endif
#ifndef GL_SAMPLES
#  define GL_SAMPLES 0x80A9
#endif
#ifndef GL_SAMPLE_COVERAGE_VALUE
#  define GL_SAMPLE_COVERAGE_VALUE 0x80AA
#endif
#ifndef GL_SAMPLE_COVERAGE_INVERT
#  define GL_SAMPLE_COVERAGE_INVERT 0x80AB
#endif
#ifndef GL_TEXTURE_CUBE_MAP
#  define GL_TEXTURE_CUBE_MAP 0x8513
#endif
#ifndef GL_TEXTURE_BINDING_CUBE_MAP
#  define GL_TEXTURE_BINDING_CUBE_MAP 0x8514
#endif
#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_X
#  define GL_TEXTURE_CUBE_MAP_POSITIVE_X 0x8515
#endif
#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_X
#  define GL_TEXTURE_CUBE_MAP_NEGATIVE_X 0x8516
#endif
#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_Y
#  define GL_TEXTURE_CUBE_MAP_POSITIVE_Y 0x8517
#endif
#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
#  define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y 0x8518
#endif
#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_Z
#  define GL_TEXTURE_CUBE_MAP_POSITIVE_Z 0x8519
#endif
#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
#  define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z 0x851A
#endif
#ifndef GL_PROXY_TEXTURE_CUBE_MAP
#  define GL_PROXY_TEXTURE_CUBE_MAP 0x851B
#endif
#ifndef GL_MAX_CUBE_MAP_TEXTURE_SIZE
#  define GL_MAX_CUBE_MAP_TEXTURE_SIZE 0x851C
#endif
#ifndef GL_COMPRESSED_RGB
#  define GL_COMPRESSED_RGB 0x84ED
#endif
#ifndef GL_COMPRESSED_RGBA
#  define GL_COMPRESSED_RGBA 0x84EE
#endif
#ifndef GL_TEXTURE_COMPRESSION_HINT
#  define GL_TEXTURE_COMPRESSION_HINT 0x84EF
#endif
#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE
#  define GL_TEXTURE_COMPRESSED_IMAGE_SIZE 0x86A0
#endif
#ifndef GL_TEXTURE_COMPRESSED
#  define GL_TEXTURE_COMPRESSED 0x86A1
#endif
#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS
#  define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2
#endif
#ifndef GL_COMPRESSED_TEXTURE_FORMATS
#  define GL_COMPRESSED_TEXTURE_FORMATS 0x86A3
#endif
#ifndef GL_CLAMP_TO_BORDER
#  define GL_CLAMP_TO_BORDER 0x812D
#endif
#ifndef GL_CLIENT_ACTIVE_TEXTURE
#  define GL_CLIENT_ACTIVE_TEXTURE 0x84E1
#endif
#ifndef GL_MAX_TEXTURE_UNITS
#  define GL_MAX_TEXTURE_UNITS 0x84E2
#endif
#ifndef GL_TRANSPOSE_MODELVIEW_MATRIX
#  define GL_TRANSPOSE_MODELVIEW_MATRIX 0x84E3
#endif
#ifndef GL_TRANSPOSE_PROJECTION_MATRIX
#  define GL_TRANSPOSE_PROJECTION_MATRIX 0x84E4
#endif
#ifndef GL_TRANSPOSE_TEXTURE_MATRIX
#  define GL_TRANSPOSE_TEXTURE_MATRIX 0x84E5
#endif
#ifndef GL_TRANSPOSE_COLOR_MATRIX
#  define GL_TRANSPOSE_COLOR_MATRIX 0x84E6
#endif
#ifndef GL_MULTISAMPLE_BIT
#  define GL_MULTISAMPLE_BIT 0x20000000
#endif
#ifndef GL_NORMAL_MAP
#  define GL_NORMAL_MAP 0x8511
#endif
#ifndef GL_REFLECTION_MAP
#  define GL_REFLECTION_MAP 0x8512
#endif
#ifndef GL_COMPRESSED_ALPHA
#  define GL_COMPRESSED_ALPHA 0x84E9
#endif
#ifndef GL_COMPRESSED_LUMINANCE
#  define GL_COMPRESSED_LUMINANCE 0x84EA
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ALPHA
#  define GL_COMPRESSED_LUMINANCE_ALPHA 0x84EB
#endif
#ifndef GL_COMPRESSED_INTENSITY
#  define GL_COMPRESSED_INTENSITY 0x84EC
#endif
#ifndef GL_COMBINE
#  define GL_COMBINE 0x8570
#endif
#ifndef GL_COMBINE_RGB
#  define GL_COMBINE_RGB 0x8571
#endif
#ifndef GL_COMBINE_ALPHA
#  define GL_COMBINE_ALPHA 0x8572
#endif
#ifndef GL_SOURCE0_RGB
#  define GL_SOURCE0_RGB 0x8580
#endif
#ifndef GL_SOURCE1_RGB
#  define GL_SOURCE1_RGB 0x8581
#endif
#ifndef GL_SOURCE2_RGB
#  define GL_SOURCE2_RGB 0x8582
#endif
#ifndef GL_SOURCE0_ALPHA
#  define GL_SOURCE0_ALPHA 0x8588
#endif
#ifndef GL_SOURCE1_ALPHA
#  define GL_SOURCE1_ALPHA 0x8589
#endif
#ifndef GL_SOURCE2_ALPHA
#  define GL_SOURCE2_ALPHA 0x858A
#endif
#ifndef GL_OPERAND0_RGB
#  define GL_OPERAND0_RGB 0x8590
#endif
#ifndef GL_OPERAND1_RGB
#  define GL_OPERAND1_RGB 0x8591
#endif
#ifndef GL_OPERAND2_RGB
#  define GL_OPERAND2_RGB 0x8592
#endif
#ifndef GL_OPERAND0_ALPHA
#  define GL_OPERAND0_ALPHA 0x8598
#endif
#ifndef GL_OPERAND1_ALPHA
#  define GL_OPERAND1_ALPHA 0x8599
#endif
#ifndef GL_OPERAND2_ALPHA
#  define GL_OPERAND2_ALPHA 0x859A
#endif
#ifndef GL_RGB_SCALE
#  define GL_RGB_SCALE 0x8573
#endif
#ifndef GL_ADD_SIGNED
#  define GL_ADD_SIGNED 0x8574
#endif
#ifndef GL_INTERPOLATE
#  define GL_INTERPOLATE 0x8575
#endif
#ifndef GL_SUBTRACT
#  define GL_SUBTRACT 0x84E7
#endif
#ifndef GL_CONSTANT
#  define GL_CONSTANT 0x8576
#endif
#ifndef GL_PRIMARY_COLOR
#  define GL_PRIMARY_COLOR 0x8577
#endif
#ifndef GL_PREVIOUS
#  define GL_PREVIOUS 0x8578
#endif
#ifndef GL_DOT3_RGB
#  define GL_DOT3_RGB 0x86AE
#endif
#ifndef GL_DOT3_RGBA
#  define GL_DOT3_RGBA 0x86AF
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glActiveTexture
typedef void (APIENTRYP PFNGLUXACTIVETEXTUREPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glSampleCoverage
typedef void (APIENTRYP PFNGLUXSAMPLECOVERAGEPROC) (GLfloat value, GLboolean invert);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage3D
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2D
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1D
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3D
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2D
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1D
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImage
typedef void (APIENTRYP PFNGLUXGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glClientActiveTexture
typedef void (APIENTRYP PFNGLUXCLIENTACTIVETEXTUREPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1d
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DPROC) (GLenum target, GLdouble s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DVPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1f
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FPROC) (GLenum target, GLfloat s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FVPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1i
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IPROC) (GLenum target, GLint s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IVPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1s
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SPROC) (GLenum target, GLshort s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SVPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2d
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DPROC) (GLenum target, GLdouble s, GLdouble t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DVPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2f
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FPROC) (GLenum target, GLfloat s, GLfloat t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FVPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2i
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IPROC) (GLenum target, GLint s, GLint t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IVPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2s
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SPROC) (GLenum target, GLshort s, GLshort t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SVPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3d
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DVPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3f
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FVPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3i
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IPROC) (GLenum target, GLint s, GLint t, GLint r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IVPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3s
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SVPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4d
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DVPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4f
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FVPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4i
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IVPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4s
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SVPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glLoadTransposeMatrixf
typedef void (APIENTRYP PFNGLUXLOADTRANSPOSEMATRIXFPROC) (const GLfloat *m);
#endif
#ifndef __GLUX__GLFCT_glLoadTransposeMatrixd
typedef void (APIENTRYP PFNGLUXLOADTRANSPOSEMATRIXDPROC) (const GLdouble *m);
#endif
#ifndef __GLUX__GLFCT_glMultTransposeMatrixf
typedef void (APIENTRYP PFNGLUXMULTTRANSPOSEMATRIXFPROC) (const GLfloat *m);
#endif
#ifndef __GLUX__GLFCT_glMultTransposeMatrixd
typedef void (APIENTRYP PFNGLUXMULTTRANSPOSEMATRIXDPROC) (const GLdouble *m);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glActiveTexture
extern PFNGLUXACTIVETEXTUREPROC glActiveTexture;
#endif
#ifndef __GLUX__GLFCT_glSampleCoverage
extern PFNGLUXSAMPLECOVERAGEPROC glSampleCoverage;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage3D
extern PFNGLUXCOMPRESSEDTEXIMAGE3DPROC glCompressedTexImage3D;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2D
extern PFNGLUXCOMPRESSEDTEXIMAGE2DPROC glCompressedTexImage2D;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1D
extern PFNGLUXCOMPRESSEDTEXIMAGE1DPROC glCompressedTexImage1D;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3D
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE3DPROC glCompressedTexSubImage3D;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2D
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE2DPROC glCompressedTexSubImage2D;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1D
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE1DPROC glCompressedTexSubImage1D;
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImage
extern PFNGLUXGETCOMPRESSEDTEXIMAGEPROC glGetCompressedTexImage;
#endif
#ifndef __GLUX__GLFCT_glClientActiveTexture
extern PFNGLUXCLIENTACTIVETEXTUREPROC glClientActiveTexture;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1d
extern PFNGLUXMULTITEXCOORD1DPROC glMultiTexCoord1d;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dv
extern PFNGLUXMULTITEXCOORD1DVPROC glMultiTexCoord1dv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1f
extern PFNGLUXMULTITEXCOORD1FPROC glMultiTexCoord1f;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fv
extern PFNGLUXMULTITEXCOORD1FVPROC glMultiTexCoord1fv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1i
extern PFNGLUXMULTITEXCOORD1IPROC glMultiTexCoord1i;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iv
extern PFNGLUXMULTITEXCOORD1IVPROC glMultiTexCoord1iv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1s
extern PFNGLUXMULTITEXCOORD1SPROC glMultiTexCoord1s;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sv
extern PFNGLUXMULTITEXCOORD1SVPROC glMultiTexCoord1sv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2d
extern PFNGLUXMULTITEXCOORD2DPROC glMultiTexCoord2d;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dv
extern PFNGLUXMULTITEXCOORD2DVPROC glMultiTexCoord2dv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2f
extern PFNGLUXMULTITEXCOORD2FPROC glMultiTexCoord2f;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fv
extern PFNGLUXMULTITEXCOORD2FVPROC glMultiTexCoord2fv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2i
extern PFNGLUXMULTITEXCOORD2IPROC glMultiTexCoord2i;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iv
extern PFNGLUXMULTITEXCOORD2IVPROC glMultiTexCoord2iv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2s
extern PFNGLUXMULTITEXCOORD2SPROC glMultiTexCoord2s;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sv
extern PFNGLUXMULTITEXCOORD2SVPROC glMultiTexCoord2sv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3d
extern PFNGLUXMULTITEXCOORD3DPROC glMultiTexCoord3d;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dv
extern PFNGLUXMULTITEXCOORD3DVPROC glMultiTexCoord3dv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3f
extern PFNGLUXMULTITEXCOORD3FPROC glMultiTexCoord3f;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fv
extern PFNGLUXMULTITEXCOORD3FVPROC glMultiTexCoord3fv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3i
extern PFNGLUXMULTITEXCOORD3IPROC glMultiTexCoord3i;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iv
extern PFNGLUXMULTITEXCOORD3IVPROC glMultiTexCoord3iv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3s
extern PFNGLUXMULTITEXCOORD3SPROC glMultiTexCoord3s;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sv
extern PFNGLUXMULTITEXCOORD3SVPROC glMultiTexCoord3sv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4d
extern PFNGLUXMULTITEXCOORD4DPROC glMultiTexCoord4d;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dv
extern PFNGLUXMULTITEXCOORD4DVPROC glMultiTexCoord4dv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4f
extern PFNGLUXMULTITEXCOORD4FPROC glMultiTexCoord4f;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fv
extern PFNGLUXMULTITEXCOORD4FVPROC glMultiTexCoord4fv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4i
extern PFNGLUXMULTITEXCOORD4IPROC glMultiTexCoord4i;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iv
extern PFNGLUXMULTITEXCOORD4IVPROC glMultiTexCoord4iv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4s
extern PFNGLUXMULTITEXCOORD4SPROC glMultiTexCoord4s;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sv
extern PFNGLUXMULTITEXCOORD4SVPROC glMultiTexCoord4sv;
#endif
#ifndef __GLUX__GLFCT_glLoadTransposeMatrixf
extern PFNGLUXLOADTRANSPOSEMATRIXFPROC glLoadTransposeMatrixf;
#endif
#ifndef __GLUX__GLFCT_glLoadTransposeMatrixd
extern PFNGLUXLOADTRANSPOSEMATRIXDPROC glLoadTransposeMatrixd;
#endif
#ifndef __GLUX__GLFCT_glMultTransposeMatrixf
extern PFNGLUXMULTTRANSPOSEMATRIXFPROC glMultTransposeMatrixf;
#endif
#ifndef __GLUX__GLFCT_glMultTransposeMatrixd
extern PFNGLUXMULTTRANSPOSEMATRIXDPROC glMultTransposeMatrixd;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:42:59 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_VERSION_1_3__
#define __GLUX_GL_VERSION_1_3__

GLUX_NEW_PLUGIN(GL_VERSION_1_3)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TEXTURE0
#  define GL_TEXTURE0 0x84C0
#endif
#ifndef GL_TEXTURE1
#  define GL_TEXTURE1 0x84C1
#endif
#ifndef GL_TEXTURE2
#  define GL_TEXTURE2 0x84C2
#endif
#ifndef GL_TEXTURE3
#  define GL_TEXTURE3 0x84C3
#endif
#ifndef GL_TEXTURE4
#  define GL_TEXTURE4 0x84C4
#endif
#ifndef GL_TEXTURE5
#  define GL_TEXTURE5 0x84C5
#endif
#ifndef GL_TEXTURE6
#  define GL_TEXTURE6 0x84C6
#endif
#ifndef GL_TEXTURE7
#  define GL_TEXTURE7 0x84C7
#endif
#ifndef GL_TEXTURE8
#  define GL_TEXTURE8 0x84C8
#endif
#ifndef GL_TEXTURE9
#  define GL_TEXTURE9 0x84C9
#endif
#ifndef GL_TEXTURE10
#  define GL_TEXTURE10 0x84CA
#endif
#ifndef GL_TEXTURE11
#  define GL_TEXTURE11 0x84CB
#endif
#ifndef GL_TEXTURE12
#  define GL_TEXTURE12 0x84CC
#endif
#ifndef GL_TEXTURE13
#  define GL_TEXTURE13 0x84CD
#endif
#ifndef GL_TEXTURE14
#  define GL_TEXTURE14 0x84CE
#endif
#ifndef GL_TEXTURE15
#  define GL_TEXTURE15 0x84CF
#endif
#ifndef GL_TEXTURE16
#  define GL_TEXTURE16 0x84D0
#endif
#ifndef GL_TEXTURE17
#  define GL_TEXTURE17 0x84D1
#endif
#ifndef GL_TEXTURE18
#  define GL_TEXTURE18 0x84D2
#endif
#ifndef GL_TEXTURE19
#  define GL_TEXTURE19 0x84D3
#endif
#ifndef GL_TEXTURE20
#  define GL_TEXTURE20 0x84D4
#endif
#ifndef GL_TEXTURE21
#  define GL_TEXTURE21 0x84D5
#endif
#ifndef GL_TEXTURE22
#  define GL_TEXTURE22 0x84D6
#endif
#ifndef GL_TEXTURE23
#  define GL_TEXTURE23 0x84D7
#endif
#ifndef GL_TEXTURE24
#  define GL_TEXTURE24 0x84D8
#endif
#ifndef GL_TEXTURE25
#  define GL_TEXTURE25 0x84D9
#endif
#ifndef GL_TEXTURE26
#  define GL_TEXTURE26 0x84DA
#endif
#ifndef GL_TEXTURE27
#  define GL_TEXTURE27 0x84DB
#endif
#ifndef GL_TEXTURE28
#  define GL_TEXTURE28 0x84DC
#endif
#ifndef GL_TEXTURE29
#  define GL_TEXTURE29 0x84DD
#endif
#ifndef GL_TEXTURE30
#  define GL_TEXTURE30 0x84DE
#endif
#ifndef GL_TEXTURE31
#  define GL_TEXTURE31 0x84DF
#endif
#ifndef GL_ACTIVE_TEXTURE
#  define GL_ACTIVE_TEXTURE 0x84E0
#endif
#ifndef GL_MULTISAMPLE
#  define GL_MULTISAMPLE 0x809D
#endif
#ifndef GL_SAMPLE_ALPHA_TO_COVERAGE
#  define GL_SAMPLE_ALPHA_TO_COVERAGE 0x809E
#endif
#ifndef GL_SAMPLE_ALPHA_TO_ONE
#  define GL_SAMPLE_ALPHA_TO_ONE 0x809F
#endif
#ifndef GL_SAMPLE_COVERAGE
#  define GL_SAMPLE_COVERAGE 0x80A0
#endif
#ifndef GL_SAMPLE_BUFFERS
#  define GL_SAMPLE_BUFFERS 0x80A8
#endif
#ifndef GL_SAMPLES
#  define GL_SAMPLES 0x80A9
#endif
#ifndef GL_SAMPLE_COVERAGE_VALUE
#  define GL_SAMPLE_COVERAGE_VALUE 0x80AA
#endif
#ifndef GL_SAMPLE_COVERAGE_INVERT
#  define GL_SAMPLE_COVERAGE_INVERT 0x80AB
#endif
#ifndef GL_TEXTURE_CUBE_MAP
#  define GL_TEXTURE_CUBE_MAP 0x8513
#endif
#ifndef GL_TEXTURE_BINDING_CUBE_MAP
#  define GL_TEXTURE_BINDING_CUBE_MAP 0x8514
#endif
#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_X
#  define GL_TEXTURE_CUBE_MAP_POSITIVE_X 0x8515
#endif
#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_X
#  define GL_TEXTURE_CUBE_MAP_NEGATIVE_X 0x8516
#endif
#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_Y
#  define GL_TEXTURE_CUBE_MAP_POSITIVE_Y 0x8517
#endif
#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
#  define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y 0x8518
#endif
#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_Z
#  define GL_TEXTURE_CUBE_MAP_POSITIVE_Z 0x8519
#endif
#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
#  define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z 0x851A
#endif
#ifndef GL_PROXY_TEXTURE_CUBE_MAP
#  define GL_PROXY_TEXTURE_CUBE_MAP 0x851B
#endif
#ifndef GL_MAX_CUBE_MAP_TEXTURE_SIZE
#  define GL_MAX_CUBE_MAP_TEXTURE_SIZE 0x851C
#endif
#ifndef GL_COMPRESSED_RGB
#  define GL_COMPRESSED_RGB 0x84ED
#endif
#ifndef GL_COMPRESSED_RGBA
#  define GL_COMPRESSED_RGBA 0x84EE
#endif
#ifndef GL_TEXTURE_COMPRESSION_HINT
#  define GL_TEXTURE_COMPRESSION_HINT 0x84EF
#endif
#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE
#  define GL_TEXTURE_COMPRESSED_IMAGE_SIZE 0x86A0
#endif
#ifndef GL_TEXTURE_COMPRESSED
#  define GL_TEXTURE_COMPRESSED 0x86A1
#endif
#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS
#  define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2
#endif
#ifndef GL_COMPRESSED_TEXTURE_FORMATS
#  define GL_COMPRESSED_TEXTURE_FORMATS 0x86A3
#endif
#ifndef GL_CLAMP_TO_BORDER
#  define GL_CLAMP_TO_BORDER 0x812D
#endif
#ifndef GL_CLIENT_ACTIVE_TEXTURE
#  define GL_CLIENT_ACTIVE_TEXTURE 0x84E1
#endif
#ifndef GL_MAX_TEXTURE_UNITS
#  define GL_MAX_TEXTURE_UNITS 0x84E2
#endif
#ifndef GL_TRANSPOSE_MODELVIEW_MATRIX
#  define GL_TRANSPOSE_MODELVIEW_MATRIX 0x84E3
#endif
#ifndef GL_TRANSPOSE_PROJECTION_MATRIX
#  define GL_TRANSPOSE_PROJECTION_MATRIX 0x84E4
#endif
#ifndef GL_TRANSPOSE_TEXTURE_MATRIX
#  define GL_TRANSPOSE_TEXTURE_MATRIX 0x84E5
#endif
#ifndef GL_TRANSPOSE_COLOR_MATRIX
#  define GL_TRANSPOSE_COLOR_MATRIX 0x84E6
#endif
#ifndef GL_MULTISAMPLE_BIT
#  define GL_MULTISAMPLE_BIT 0x20000000
#endif
#ifndef GL_NORMAL_MAP
#  define GL_NORMAL_MAP 0x8511
#endif
#ifndef GL_REFLECTION_MAP
#  define GL_REFLECTION_MAP 0x8512
#endif
#ifndef GL_COMPRESSED_ALPHA
#  define GL_COMPRESSED_ALPHA 0x84E9
#endif
#ifndef GL_COMPRESSED_LUMINANCE
#  define GL_COMPRESSED_LUMINANCE 0x84EA
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ALPHA
#  define GL_COMPRESSED_LUMINANCE_ALPHA 0x84EB
#endif
#ifndef GL_COMPRESSED_INTENSITY
#  define GL_COMPRESSED_INTENSITY 0x84EC
#endif
#ifndef GL_COMBINE
#  define GL_COMBINE 0x8570
#endif
#ifndef GL_COMBINE_RGB
#  define GL_COMBINE_RGB 0x8571
#endif
#ifndef GL_COMBINE_ALPHA
#  define GL_COMBINE_ALPHA 0x8572
#endif
#ifndef GL_SOURCE0_RGB
#  define GL_SOURCE0_RGB 0x8580
#endif
#ifndef GL_SOURCE1_RGB
#  define GL_SOURCE1_RGB 0x8581
#endif
#ifndef GL_SOURCE2_RGB
#  define GL_SOURCE2_RGB 0x8582
#endif
#ifndef GL_SOURCE0_ALPHA
#  define GL_SOURCE0_ALPHA 0x8588
#endif
#ifndef GL_SOURCE1_ALPHA
#  define GL_SOURCE1_ALPHA 0x8589
#endif
#ifndef GL_SOURCE2_ALPHA
#  define GL_SOURCE2_ALPHA 0x858A
#endif
#ifndef GL_OPERAND0_RGB
#  define GL_OPERAND0_RGB 0x8590
#endif
#ifndef GL_OPERAND1_RGB
#  define GL_OPERAND1_RGB 0x8591
#endif
#ifndef GL_OPERAND2_RGB
#  define GL_OPERAND2_RGB 0x8592
#endif
#ifndef GL_OPERAND0_ALPHA
#  define GL_OPERAND0_ALPHA 0x8598
#endif
#ifndef GL_OPERAND1_ALPHA
#  define GL_OPERAND1_ALPHA 0x8599
#endif
#ifndef GL_OPERAND2_ALPHA
#  define GL_OPERAND2_ALPHA 0x859A
#endif
#ifndef GL_RGB_SCALE
#  define GL_RGB_SCALE 0x8573
#endif
#ifndef GL_ADD_SIGNED
#  define GL_ADD_SIGNED 0x8574
#endif
#ifndef GL_INTERPOLATE
#  define GL_INTERPOLATE 0x8575
#endif
#ifndef GL_SUBTRACT
#  define GL_SUBTRACT 0x84E7
#endif
#ifndef GL_CONSTANT
#  define GL_CONSTANT 0x8576
#endif
#ifndef GL_PRIMARY_COLOR
#  define GL_PRIMARY_COLOR 0x8577
#endif
#ifndef GL_PREVIOUS
#  define GL_PREVIOUS 0x8578
#endif
#ifndef GL_DOT3_RGB
#  define GL_DOT3_RGB 0x86AE
#endif
#ifndef GL_DOT3_RGBA
#  define GL_DOT3_RGBA 0x86AF
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glActiveTexture
typedef void (APIENTRYP PFNGLUXACTIVETEXTUREPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glSampleCoverage
typedef void (APIENTRYP PFNGLUXSAMPLECOVERAGEPROC) (GLfloat value, GLboolean invert);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage3D
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2D
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1D
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3D
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2D
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1D
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImage
typedef void (APIENTRYP PFNGLUXGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, GLvoid *img);
#endif
#ifndef __GLUX__GLFCT_glClientActiveTexture
typedef void (APIENTRYP PFNGLUXCLIENTACTIVETEXTUREPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1d
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DPROC) (GLenum target, GLdouble s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DVPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1f
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FPROC) (GLenum target, GLfloat s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FVPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1i
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IPROC) (GLenum target, GLint s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IVPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1s
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SPROC) (GLenum target, GLshort s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SVPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2d
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DPROC) (GLenum target, GLdouble s, GLdouble t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DVPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2f
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FPROC) (GLenum target, GLfloat s, GLfloat t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FVPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2i
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IPROC) (GLenum target, GLint s, GLint t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IVPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2s
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SPROC) (GLenum target, GLshort s, GLshort t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SVPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3d
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DVPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3f
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FVPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3i
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IPROC) (GLenum target, GLint s, GLint t, GLint r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IVPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3s
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SVPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4d
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DVPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4f
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FVPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4i
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IVPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4s
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SVPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glLoadTransposeMatrixf
typedef void (APIENTRYP PFNGLUXLOADTRANSPOSEMATRIXFPROC) (const GLfloat *m);
#endif
#ifndef __GLUX__GLFCT_glLoadTransposeMatrixd
typedef void (APIENTRYP PFNGLUXLOADTRANSPOSEMATRIXDPROC) (const GLdouble *m);
#endif
#ifndef __GLUX__GLFCT_glMultTransposeMatrixf
typedef void (APIENTRYP PFNGLUXMULTTRANSPOSEMATRIXFPROC) (const GLfloat *m);
#endif
#ifndef __GLUX__GLFCT_glMultTransposeMatrixd
typedef void (APIENTRYP PFNGLUXMULTTRANSPOSEMATRIXDPROC) (const GLdouble *m);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glActiveTexture
extern PFNGLUXACTIVETEXTUREPROC glActiveTexture;
#endif
#ifndef __GLUX__GLFCT_glSampleCoverage
extern PFNGLUXSAMPLECOVERAGEPROC glSampleCoverage;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage3D
extern PFNGLUXCOMPRESSEDTEXIMAGE3DPROC glCompressedTexImage3D;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2D
extern PFNGLUXCOMPRESSEDTEXIMAGE2DPROC glCompressedTexImage2D;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1D
extern PFNGLUXCOMPRESSEDTEXIMAGE1DPROC glCompressedTexImage1D;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3D
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE3DPROC glCompressedTexSubImage3D;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2D
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE2DPROC glCompressedTexSubImage2D;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1D
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE1DPROC glCompressedTexSubImage1D;
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImage
extern PFNGLUXGETCOMPRESSEDTEXIMAGEPROC glGetCompressedTexImage;
#endif
#ifndef __GLUX__GLFCT_glClientActiveTexture
extern PFNGLUXCLIENTACTIVETEXTUREPROC glClientActiveTexture;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1d
extern PFNGLUXMULTITEXCOORD1DPROC glMultiTexCoord1d;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dv
extern PFNGLUXMULTITEXCOORD1DVPROC glMultiTexCoord1dv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1f
extern PFNGLUXMULTITEXCOORD1FPROC glMultiTexCoord1f;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fv
extern PFNGLUXMULTITEXCOORD1FVPROC glMultiTexCoord1fv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1i
extern PFNGLUXMULTITEXCOORD1IPROC glMultiTexCoord1i;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iv
extern PFNGLUXMULTITEXCOORD1IVPROC glMultiTexCoord1iv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1s
extern PFNGLUXMULTITEXCOORD1SPROC glMultiTexCoord1s;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sv
extern PFNGLUXMULTITEXCOORD1SVPROC glMultiTexCoord1sv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2d
extern PFNGLUXMULTITEXCOORD2DPROC glMultiTexCoord2d;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dv
extern PFNGLUXMULTITEXCOORD2DVPROC glMultiTexCoord2dv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2f
extern PFNGLUXMULTITEXCOORD2FPROC glMultiTexCoord2f;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fv
extern PFNGLUXMULTITEXCOORD2FVPROC glMultiTexCoord2fv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2i
extern PFNGLUXMULTITEXCOORD2IPROC glMultiTexCoord2i;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iv
extern PFNGLUXMULTITEXCOORD2IVPROC glMultiTexCoord2iv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2s
extern PFNGLUXMULTITEXCOORD2SPROC glMultiTexCoord2s;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sv
extern PFNGLUXMULTITEXCOORD2SVPROC glMultiTexCoord2sv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3d
extern PFNGLUXMULTITEXCOORD3DPROC glMultiTexCoord3d;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dv
extern PFNGLUXMULTITEXCOORD3DVPROC glMultiTexCoord3dv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3f
extern PFNGLUXMULTITEXCOORD3FPROC glMultiTexCoord3f;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fv
extern PFNGLUXMULTITEXCOORD3FVPROC glMultiTexCoord3fv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3i
extern PFNGLUXMULTITEXCOORD3IPROC glMultiTexCoord3i;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iv
extern PFNGLUXMULTITEXCOORD3IVPROC glMultiTexCoord3iv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3s
extern PFNGLUXMULTITEXCOORD3SPROC glMultiTexCoord3s;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sv
extern PFNGLUXMULTITEXCOORD3SVPROC glMultiTexCoord3sv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4d
extern PFNGLUXMULTITEXCOORD4DPROC glMultiTexCoord4d;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dv
extern PFNGLUXMULTITEXCOORD4DVPROC glMultiTexCoord4dv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4f
extern PFNGLUXMULTITEXCOORD4FPROC glMultiTexCoord4f;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fv
extern PFNGLUXMULTITEXCOORD4FVPROC glMultiTexCoord4fv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4i
extern PFNGLUXMULTITEXCOORD4IPROC glMultiTexCoord4i;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iv
extern PFNGLUXMULTITEXCOORD4IVPROC glMultiTexCoord4iv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4s
extern PFNGLUXMULTITEXCOORD4SPROC glMultiTexCoord4s;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sv
extern PFNGLUXMULTITEXCOORD4SVPROC glMultiTexCoord4sv;
#endif
#ifndef __GLUX__GLFCT_glLoadTransposeMatrixf
extern PFNGLUXLOADTRANSPOSEMATRIXFPROC glLoadTransposeMatrixf;
#endif
#ifndef __GLUX__GLFCT_glLoadTransposeMatrixd
extern PFNGLUXLOADTRANSPOSEMATRIXDPROC glLoadTransposeMatrixd;
#endif
#ifndef __GLUX__GLFCT_glMultTransposeMatrixf
extern PFNGLUXMULTTRANSPOSEMATRIXFPROC glMultTransposeMatrixf;
#endif
#ifndef __GLUX__GLFCT_glMultTransposeMatrixd
extern PFNGLUXMULTTRANSPOSEMATRIXDPROC glMultTransposeMatrixd;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
