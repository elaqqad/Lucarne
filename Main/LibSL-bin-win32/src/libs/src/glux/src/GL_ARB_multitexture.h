
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:24 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_multitexture__
#define __GLUX_GL_ARB_multitexture__

GLUX_NEW_PLUGIN(GL_ARB_multitexture);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TEXTURE0_ARB
#  define GL_TEXTURE0_ARB 0x84C0
#endif
#ifndef GL_TEXTURE1_ARB
#  define GL_TEXTURE1_ARB 0x84C1
#endif
#ifndef GL_TEXTURE2_ARB
#  define GL_TEXTURE2_ARB 0x84C2
#endif
#ifndef GL_TEXTURE3_ARB
#  define GL_TEXTURE3_ARB 0x84C3
#endif
#ifndef GL_TEXTURE4_ARB
#  define GL_TEXTURE4_ARB 0x84C4
#endif
#ifndef GL_TEXTURE5_ARB
#  define GL_TEXTURE5_ARB 0x84C5
#endif
#ifndef GL_TEXTURE6_ARB
#  define GL_TEXTURE6_ARB 0x84C6
#endif
#ifndef GL_TEXTURE7_ARB
#  define GL_TEXTURE7_ARB 0x84C7
#endif
#ifndef GL_TEXTURE8_ARB
#  define GL_TEXTURE8_ARB 0x84C8
#endif
#ifndef GL_TEXTURE9_ARB
#  define GL_TEXTURE9_ARB 0x84C9
#endif
#ifndef GL_TEXTURE10_ARB
#  define GL_TEXTURE10_ARB 0x84CA
#endif
#ifndef GL_TEXTURE11_ARB
#  define GL_TEXTURE11_ARB 0x84CB
#endif
#ifndef GL_TEXTURE12_ARB
#  define GL_TEXTURE12_ARB 0x84CC
#endif
#ifndef GL_TEXTURE13_ARB
#  define GL_TEXTURE13_ARB 0x84CD
#endif
#ifndef GL_TEXTURE14_ARB
#  define GL_TEXTURE14_ARB 0x84CE
#endif
#ifndef GL_TEXTURE15_ARB
#  define GL_TEXTURE15_ARB 0x84CF
#endif
#ifndef GL_TEXTURE16_ARB
#  define GL_TEXTURE16_ARB 0x84D0
#endif
#ifndef GL_TEXTURE17_ARB
#  define GL_TEXTURE17_ARB 0x84D1
#endif
#ifndef GL_TEXTURE18_ARB
#  define GL_TEXTURE18_ARB 0x84D2
#endif
#ifndef GL_TEXTURE19_ARB
#  define GL_TEXTURE19_ARB 0x84D3
#endif
#ifndef GL_TEXTURE20_ARB
#  define GL_TEXTURE20_ARB 0x84D4
#endif
#ifndef GL_TEXTURE21_ARB
#  define GL_TEXTURE21_ARB 0x84D5
#endif
#ifndef GL_TEXTURE22_ARB
#  define GL_TEXTURE22_ARB 0x84D6
#endif
#ifndef GL_TEXTURE23_ARB
#  define GL_TEXTURE23_ARB 0x84D7
#endif
#ifndef GL_TEXTURE24_ARB
#  define GL_TEXTURE24_ARB 0x84D8
#endif
#ifndef GL_TEXTURE25_ARB
#  define GL_TEXTURE25_ARB 0x84D9
#endif
#ifndef GL_TEXTURE26_ARB
#  define GL_TEXTURE26_ARB 0x84DA
#endif
#ifndef GL_TEXTURE27_ARB
#  define GL_TEXTURE27_ARB 0x84DB
#endif
#ifndef GL_TEXTURE28_ARB
#  define GL_TEXTURE28_ARB 0x84DC
#endif
#ifndef GL_TEXTURE29_ARB
#  define GL_TEXTURE29_ARB 0x84DD
#endif
#ifndef GL_TEXTURE30_ARB
#  define GL_TEXTURE30_ARB 0x84DE
#endif
#ifndef GL_TEXTURE31_ARB
#  define GL_TEXTURE31_ARB 0x84DF
#endif
#ifndef GL_ACTIVE_TEXTURE_ARB
#  define GL_ACTIVE_TEXTURE_ARB 0x84E0
#endif
#ifndef GL_CLIENT_ACTIVE_TEXTURE_ARB
#  define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
#endif
#ifndef GL_MAX_TEXTURE_UNITS_ARB
#  define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glActiveTextureARB
typedef void (APIENTRYP PFNGLUXACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
typedef void (APIENTRYP PFNGLUXCLIENTACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glActiveTextureARB
extern PFNGLUXACTIVETEXTUREARBPROC glActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
extern PFNGLUXCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
extern PFNGLUXMULTITEXCOORD1DARBPROC glMultiTexCoord1dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
extern PFNGLUXMULTITEXCOORD1DVARBPROC glMultiTexCoord1dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
extern PFNGLUXMULTITEXCOORD1FARBPROC glMultiTexCoord1fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
extern PFNGLUXMULTITEXCOORD1FVARBPROC glMultiTexCoord1fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
extern PFNGLUXMULTITEXCOORD1IARBPROC glMultiTexCoord1iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
extern PFNGLUXMULTITEXCOORD1IVARBPROC glMultiTexCoord1ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
extern PFNGLUXMULTITEXCOORD1SARBPROC glMultiTexCoord1sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
extern PFNGLUXMULTITEXCOORD1SVARBPROC glMultiTexCoord1svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
extern PFNGLUXMULTITEXCOORD2DARBPROC glMultiTexCoord2dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
extern PFNGLUXMULTITEXCOORD2DVARBPROC glMultiTexCoord2dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
extern PFNGLUXMULTITEXCOORD2FARBPROC glMultiTexCoord2fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
extern PFNGLUXMULTITEXCOORD2FVARBPROC glMultiTexCoord2fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
extern PFNGLUXMULTITEXCOORD2IARBPROC glMultiTexCoord2iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
extern PFNGLUXMULTITEXCOORD2IVARBPROC glMultiTexCoord2ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
extern PFNGLUXMULTITEXCOORD2SARBPROC glMultiTexCoord2sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
extern PFNGLUXMULTITEXCOORD2SVARBPROC glMultiTexCoord2svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
extern PFNGLUXMULTITEXCOORD3DARBPROC glMultiTexCoord3dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
extern PFNGLUXMULTITEXCOORD3DVARBPROC glMultiTexCoord3dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
extern PFNGLUXMULTITEXCOORD3FARBPROC glMultiTexCoord3fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
extern PFNGLUXMULTITEXCOORD3FVARBPROC glMultiTexCoord3fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
extern PFNGLUXMULTITEXCOORD3IARBPROC glMultiTexCoord3iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
extern PFNGLUXMULTITEXCOORD3IVARBPROC glMultiTexCoord3ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
extern PFNGLUXMULTITEXCOORD3SARBPROC glMultiTexCoord3sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
extern PFNGLUXMULTITEXCOORD3SVARBPROC glMultiTexCoord3svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
extern PFNGLUXMULTITEXCOORD4DARBPROC glMultiTexCoord4dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
extern PFNGLUXMULTITEXCOORD4DVARBPROC glMultiTexCoord4dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
extern PFNGLUXMULTITEXCOORD4FARBPROC glMultiTexCoord4fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
extern PFNGLUXMULTITEXCOORD4FVARBPROC glMultiTexCoord4fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
extern PFNGLUXMULTITEXCOORD4IARBPROC glMultiTexCoord4iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
extern PFNGLUXMULTITEXCOORD4IVARBPROC glMultiTexCoord4ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
extern PFNGLUXMULTITEXCOORD4SARBPROC glMultiTexCoord4sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
extern PFNGLUXMULTITEXCOORD4SVARBPROC glMultiTexCoord4svARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:38 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_multitexture__
#define __GLUX_GL_ARB_multitexture__

GLUX_NEW_PLUGIN(GL_ARB_multitexture);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TEXTURE0_ARB
#  define GL_TEXTURE0_ARB 0x84C0
#endif
#ifndef GL_TEXTURE1_ARB
#  define GL_TEXTURE1_ARB 0x84C1
#endif
#ifndef GL_TEXTURE2_ARB
#  define GL_TEXTURE2_ARB 0x84C2
#endif
#ifndef GL_TEXTURE3_ARB
#  define GL_TEXTURE3_ARB 0x84C3
#endif
#ifndef GL_TEXTURE4_ARB
#  define GL_TEXTURE4_ARB 0x84C4
#endif
#ifndef GL_TEXTURE5_ARB
#  define GL_TEXTURE5_ARB 0x84C5
#endif
#ifndef GL_TEXTURE6_ARB
#  define GL_TEXTURE6_ARB 0x84C6
#endif
#ifndef GL_TEXTURE7_ARB
#  define GL_TEXTURE7_ARB 0x84C7
#endif
#ifndef GL_TEXTURE8_ARB
#  define GL_TEXTURE8_ARB 0x84C8
#endif
#ifndef GL_TEXTURE9_ARB
#  define GL_TEXTURE9_ARB 0x84C9
#endif
#ifndef GL_TEXTURE10_ARB
#  define GL_TEXTURE10_ARB 0x84CA
#endif
#ifndef GL_TEXTURE11_ARB
#  define GL_TEXTURE11_ARB 0x84CB
#endif
#ifndef GL_TEXTURE12_ARB
#  define GL_TEXTURE12_ARB 0x84CC
#endif
#ifndef GL_TEXTURE13_ARB
#  define GL_TEXTURE13_ARB 0x84CD
#endif
#ifndef GL_TEXTURE14_ARB
#  define GL_TEXTURE14_ARB 0x84CE
#endif
#ifndef GL_TEXTURE15_ARB
#  define GL_TEXTURE15_ARB 0x84CF
#endif
#ifndef GL_TEXTURE16_ARB
#  define GL_TEXTURE16_ARB 0x84D0
#endif
#ifndef GL_TEXTURE17_ARB
#  define GL_TEXTURE17_ARB 0x84D1
#endif
#ifndef GL_TEXTURE18_ARB
#  define GL_TEXTURE18_ARB 0x84D2
#endif
#ifndef GL_TEXTURE19_ARB
#  define GL_TEXTURE19_ARB 0x84D3
#endif
#ifndef GL_TEXTURE20_ARB
#  define GL_TEXTURE20_ARB 0x84D4
#endif
#ifndef GL_TEXTURE21_ARB
#  define GL_TEXTURE21_ARB 0x84D5
#endif
#ifndef GL_TEXTURE22_ARB
#  define GL_TEXTURE22_ARB 0x84D6
#endif
#ifndef GL_TEXTURE23_ARB
#  define GL_TEXTURE23_ARB 0x84D7
#endif
#ifndef GL_TEXTURE24_ARB
#  define GL_TEXTURE24_ARB 0x84D8
#endif
#ifndef GL_TEXTURE25_ARB
#  define GL_TEXTURE25_ARB 0x84D9
#endif
#ifndef GL_TEXTURE26_ARB
#  define GL_TEXTURE26_ARB 0x84DA
#endif
#ifndef GL_TEXTURE27_ARB
#  define GL_TEXTURE27_ARB 0x84DB
#endif
#ifndef GL_TEXTURE28_ARB
#  define GL_TEXTURE28_ARB 0x84DC
#endif
#ifndef GL_TEXTURE29_ARB
#  define GL_TEXTURE29_ARB 0x84DD
#endif
#ifndef GL_TEXTURE30_ARB
#  define GL_TEXTURE30_ARB 0x84DE
#endif
#ifndef GL_TEXTURE31_ARB
#  define GL_TEXTURE31_ARB 0x84DF
#endif
#ifndef GL_ACTIVE_TEXTURE_ARB
#  define GL_ACTIVE_TEXTURE_ARB 0x84E0
#endif
#ifndef GL_CLIENT_ACTIVE_TEXTURE_ARB
#  define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
#endif
#ifndef GL_MAX_TEXTURE_UNITS_ARB
#  define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glActiveTextureARB
typedef void (APIENTRYP PFNGLUXACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
typedef void (APIENTRYP PFNGLUXCLIENTACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glActiveTextureARB
extern PFNGLUXACTIVETEXTUREARBPROC glActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
extern PFNGLUXCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
extern PFNGLUXMULTITEXCOORD1DARBPROC glMultiTexCoord1dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
extern PFNGLUXMULTITEXCOORD1DVARBPROC glMultiTexCoord1dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
extern PFNGLUXMULTITEXCOORD1FARBPROC glMultiTexCoord1fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
extern PFNGLUXMULTITEXCOORD1FVARBPROC glMultiTexCoord1fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
extern PFNGLUXMULTITEXCOORD1IARBPROC glMultiTexCoord1iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
extern PFNGLUXMULTITEXCOORD1IVARBPROC glMultiTexCoord1ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
extern PFNGLUXMULTITEXCOORD1SARBPROC glMultiTexCoord1sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
extern PFNGLUXMULTITEXCOORD1SVARBPROC glMultiTexCoord1svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
extern PFNGLUXMULTITEXCOORD2DARBPROC glMultiTexCoord2dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
extern PFNGLUXMULTITEXCOORD2DVARBPROC glMultiTexCoord2dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
extern PFNGLUXMULTITEXCOORD2FARBPROC glMultiTexCoord2fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
extern PFNGLUXMULTITEXCOORD2FVARBPROC glMultiTexCoord2fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
extern PFNGLUXMULTITEXCOORD2IARBPROC glMultiTexCoord2iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
extern PFNGLUXMULTITEXCOORD2IVARBPROC glMultiTexCoord2ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
extern PFNGLUXMULTITEXCOORD2SARBPROC glMultiTexCoord2sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
extern PFNGLUXMULTITEXCOORD2SVARBPROC glMultiTexCoord2svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
extern PFNGLUXMULTITEXCOORD3DARBPROC glMultiTexCoord3dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
extern PFNGLUXMULTITEXCOORD3DVARBPROC glMultiTexCoord3dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
extern PFNGLUXMULTITEXCOORD3FARBPROC glMultiTexCoord3fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
extern PFNGLUXMULTITEXCOORD3FVARBPROC glMultiTexCoord3fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
extern PFNGLUXMULTITEXCOORD3IARBPROC glMultiTexCoord3iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
extern PFNGLUXMULTITEXCOORD3IVARBPROC glMultiTexCoord3ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
extern PFNGLUXMULTITEXCOORD3SARBPROC glMultiTexCoord3sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
extern PFNGLUXMULTITEXCOORD3SVARBPROC glMultiTexCoord3svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
extern PFNGLUXMULTITEXCOORD4DARBPROC glMultiTexCoord4dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
extern PFNGLUXMULTITEXCOORD4DVARBPROC glMultiTexCoord4dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
extern PFNGLUXMULTITEXCOORD4FARBPROC glMultiTexCoord4fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
extern PFNGLUXMULTITEXCOORD4FVARBPROC glMultiTexCoord4fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
extern PFNGLUXMULTITEXCOORD4IARBPROC glMultiTexCoord4iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
extern PFNGLUXMULTITEXCOORD4IVARBPROC glMultiTexCoord4ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
extern PFNGLUXMULTITEXCOORD4SARBPROC glMultiTexCoord4sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
extern PFNGLUXMULTITEXCOORD4SVARBPROC glMultiTexCoord4svARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:53 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_multitexture__
#define __GLUX_GL_ARB_multitexture__

GLUX_NEW_PLUGIN(GL_ARB_multitexture);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TEXTURE0_ARB
#  define GL_TEXTURE0_ARB 0x84C0
#endif
#ifndef GL_TEXTURE1_ARB
#  define GL_TEXTURE1_ARB 0x84C1
#endif
#ifndef GL_TEXTURE2_ARB
#  define GL_TEXTURE2_ARB 0x84C2
#endif
#ifndef GL_TEXTURE3_ARB
#  define GL_TEXTURE3_ARB 0x84C3
#endif
#ifndef GL_TEXTURE4_ARB
#  define GL_TEXTURE4_ARB 0x84C4
#endif
#ifndef GL_TEXTURE5_ARB
#  define GL_TEXTURE5_ARB 0x84C5
#endif
#ifndef GL_TEXTURE6_ARB
#  define GL_TEXTURE6_ARB 0x84C6
#endif
#ifndef GL_TEXTURE7_ARB
#  define GL_TEXTURE7_ARB 0x84C7
#endif
#ifndef GL_TEXTURE8_ARB
#  define GL_TEXTURE8_ARB 0x84C8
#endif
#ifndef GL_TEXTURE9_ARB
#  define GL_TEXTURE9_ARB 0x84C9
#endif
#ifndef GL_TEXTURE10_ARB
#  define GL_TEXTURE10_ARB 0x84CA
#endif
#ifndef GL_TEXTURE11_ARB
#  define GL_TEXTURE11_ARB 0x84CB
#endif
#ifndef GL_TEXTURE12_ARB
#  define GL_TEXTURE12_ARB 0x84CC
#endif
#ifndef GL_TEXTURE13_ARB
#  define GL_TEXTURE13_ARB 0x84CD
#endif
#ifndef GL_TEXTURE14_ARB
#  define GL_TEXTURE14_ARB 0x84CE
#endif
#ifndef GL_TEXTURE15_ARB
#  define GL_TEXTURE15_ARB 0x84CF
#endif
#ifndef GL_TEXTURE16_ARB
#  define GL_TEXTURE16_ARB 0x84D0
#endif
#ifndef GL_TEXTURE17_ARB
#  define GL_TEXTURE17_ARB 0x84D1
#endif
#ifndef GL_TEXTURE18_ARB
#  define GL_TEXTURE18_ARB 0x84D2
#endif
#ifndef GL_TEXTURE19_ARB
#  define GL_TEXTURE19_ARB 0x84D3
#endif
#ifndef GL_TEXTURE20_ARB
#  define GL_TEXTURE20_ARB 0x84D4
#endif
#ifndef GL_TEXTURE21_ARB
#  define GL_TEXTURE21_ARB 0x84D5
#endif
#ifndef GL_TEXTURE22_ARB
#  define GL_TEXTURE22_ARB 0x84D6
#endif
#ifndef GL_TEXTURE23_ARB
#  define GL_TEXTURE23_ARB 0x84D7
#endif
#ifndef GL_TEXTURE24_ARB
#  define GL_TEXTURE24_ARB 0x84D8
#endif
#ifndef GL_TEXTURE25_ARB
#  define GL_TEXTURE25_ARB 0x84D9
#endif
#ifndef GL_TEXTURE26_ARB
#  define GL_TEXTURE26_ARB 0x84DA
#endif
#ifndef GL_TEXTURE27_ARB
#  define GL_TEXTURE27_ARB 0x84DB
#endif
#ifndef GL_TEXTURE28_ARB
#  define GL_TEXTURE28_ARB 0x84DC
#endif
#ifndef GL_TEXTURE29_ARB
#  define GL_TEXTURE29_ARB 0x84DD
#endif
#ifndef GL_TEXTURE30_ARB
#  define GL_TEXTURE30_ARB 0x84DE
#endif
#ifndef GL_TEXTURE31_ARB
#  define GL_TEXTURE31_ARB 0x84DF
#endif
#ifndef GL_ACTIVE_TEXTURE_ARB
#  define GL_ACTIVE_TEXTURE_ARB 0x84E0
#endif
#ifndef GL_CLIENT_ACTIVE_TEXTURE_ARB
#  define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
#endif
#ifndef GL_MAX_TEXTURE_UNITS_ARB
#  define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glActiveTextureARB
typedef void (APIENTRYP PFNGLUXACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
typedef void (APIENTRYP PFNGLUXCLIENTACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glActiveTextureARB
extern PFNGLUXACTIVETEXTUREARBPROC glActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
extern PFNGLUXCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
extern PFNGLUXMULTITEXCOORD1DARBPROC glMultiTexCoord1dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
extern PFNGLUXMULTITEXCOORD1DVARBPROC glMultiTexCoord1dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
extern PFNGLUXMULTITEXCOORD1FARBPROC glMultiTexCoord1fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
extern PFNGLUXMULTITEXCOORD1FVARBPROC glMultiTexCoord1fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
extern PFNGLUXMULTITEXCOORD1IARBPROC glMultiTexCoord1iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
extern PFNGLUXMULTITEXCOORD1IVARBPROC glMultiTexCoord1ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
extern PFNGLUXMULTITEXCOORD1SARBPROC glMultiTexCoord1sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
extern PFNGLUXMULTITEXCOORD1SVARBPROC glMultiTexCoord1svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
extern PFNGLUXMULTITEXCOORD2DARBPROC glMultiTexCoord2dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
extern PFNGLUXMULTITEXCOORD2DVARBPROC glMultiTexCoord2dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
extern PFNGLUXMULTITEXCOORD2FARBPROC glMultiTexCoord2fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
extern PFNGLUXMULTITEXCOORD2FVARBPROC glMultiTexCoord2fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
extern PFNGLUXMULTITEXCOORD2IARBPROC glMultiTexCoord2iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
extern PFNGLUXMULTITEXCOORD2IVARBPROC glMultiTexCoord2ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
extern PFNGLUXMULTITEXCOORD2SARBPROC glMultiTexCoord2sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
extern PFNGLUXMULTITEXCOORD2SVARBPROC glMultiTexCoord2svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
extern PFNGLUXMULTITEXCOORD3DARBPROC glMultiTexCoord3dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
extern PFNGLUXMULTITEXCOORD3DVARBPROC glMultiTexCoord3dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
extern PFNGLUXMULTITEXCOORD3FARBPROC glMultiTexCoord3fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
extern PFNGLUXMULTITEXCOORD3FVARBPROC glMultiTexCoord3fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
extern PFNGLUXMULTITEXCOORD3IARBPROC glMultiTexCoord3iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
extern PFNGLUXMULTITEXCOORD3IVARBPROC glMultiTexCoord3ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
extern PFNGLUXMULTITEXCOORD3SARBPROC glMultiTexCoord3sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
extern PFNGLUXMULTITEXCOORD3SVARBPROC glMultiTexCoord3svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
extern PFNGLUXMULTITEXCOORD4DARBPROC glMultiTexCoord4dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
extern PFNGLUXMULTITEXCOORD4DVARBPROC glMultiTexCoord4dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
extern PFNGLUXMULTITEXCOORD4FARBPROC glMultiTexCoord4fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
extern PFNGLUXMULTITEXCOORD4FVARBPROC glMultiTexCoord4fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
extern PFNGLUXMULTITEXCOORD4IARBPROC glMultiTexCoord4iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
extern PFNGLUXMULTITEXCOORD4IVARBPROC glMultiTexCoord4ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
extern PFNGLUXMULTITEXCOORD4SARBPROC glMultiTexCoord4sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
extern PFNGLUXMULTITEXCOORD4SVARBPROC glMultiTexCoord4svARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:13 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_multitexture__
#define __GLUX_GL_ARB_multitexture__

GLUX_NEW_PLUGIN(GL_ARB_multitexture);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TEXTURE0_ARB
#  define GL_TEXTURE0_ARB 0x84C0
#endif
#ifndef GL_TEXTURE1_ARB
#  define GL_TEXTURE1_ARB 0x84C1
#endif
#ifndef GL_TEXTURE2_ARB
#  define GL_TEXTURE2_ARB 0x84C2
#endif
#ifndef GL_TEXTURE3_ARB
#  define GL_TEXTURE3_ARB 0x84C3
#endif
#ifndef GL_TEXTURE4_ARB
#  define GL_TEXTURE4_ARB 0x84C4
#endif
#ifndef GL_TEXTURE5_ARB
#  define GL_TEXTURE5_ARB 0x84C5
#endif
#ifndef GL_TEXTURE6_ARB
#  define GL_TEXTURE6_ARB 0x84C6
#endif
#ifndef GL_TEXTURE7_ARB
#  define GL_TEXTURE7_ARB 0x84C7
#endif
#ifndef GL_TEXTURE8_ARB
#  define GL_TEXTURE8_ARB 0x84C8
#endif
#ifndef GL_TEXTURE9_ARB
#  define GL_TEXTURE9_ARB 0x84C9
#endif
#ifndef GL_TEXTURE10_ARB
#  define GL_TEXTURE10_ARB 0x84CA
#endif
#ifndef GL_TEXTURE11_ARB
#  define GL_TEXTURE11_ARB 0x84CB
#endif
#ifndef GL_TEXTURE12_ARB
#  define GL_TEXTURE12_ARB 0x84CC
#endif
#ifndef GL_TEXTURE13_ARB
#  define GL_TEXTURE13_ARB 0x84CD
#endif
#ifndef GL_TEXTURE14_ARB
#  define GL_TEXTURE14_ARB 0x84CE
#endif
#ifndef GL_TEXTURE15_ARB
#  define GL_TEXTURE15_ARB 0x84CF
#endif
#ifndef GL_TEXTURE16_ARB
#  define GL_TEXTURE16_ARB 0x84D0
#endif
#ifndef GL_TEXTURE17_ARB
#  define GL_TEXTURE17_ARB 0x84D1
#endif
#ifndef GL_TEXTURE18_ARB
#  define GL_TEXTURE18_ARB 0x84D2
#endif
#ifndef GL_TEXTURE19_ARB
#  define GL_TEXTURE19_ARB 0x84D3
#endif
#ifndef GL_TEXTURE20_ARB
#  define GL_TEXTURE20_ARB 0x84D4
#endif
#ifndef GL_TEXTURE21_ARB
#  define GL_TEXTURE21_ARB 0x84D5
#endif
#ifndef GL_TEXTURE22_ARB
#  define GL_TEXTURE22_ARB 0x84D6
#endif
#ifndef GL_TEXTURE23_ARB
#  define GL_TEXTURE23_ARB 0x84D7
#endif
#ifndef GL_TEXTURE24_ARB
#  define GL_TEXTURE24_ARB 0x84D8
#endif
#ifndef GL_TEXTURE25_ARB
#  define GL_TEXTURE25_ARB 0x84D9
#endif
#ifndef GL_TEXTURE26_ARB
#  define GL_TEXTURE26_ARB 0x84DA
#endif
#ifndef GL_TEXTURE27_ARB
#  define GL_TEXTURE27_ARB 0x84DB
#endif
#ifndef GL_TEXTURE28_ARB
#  define GL_TEXTURE28_ARB 0x84DC
#endif
#ifndef GL_TEXTURE29_ARB
#  define GL_TEXTURE29_ARB 0x84DD
#endif
#ifndef GL_TEXTURE30_ARB
#  define GL_TEXTURE30_ARB 0x84DE
#endif
#ifndef GL_TEXTURE31_ARB
#  define GL_TEXTURE31_ARB 0x84DF
#endif
#ifndef GL_ACTIVE_TEXTURE_ARB
#  define GL_ACTIVE_TEXTURE_ARB 0x84E0
#endif
#ifndef GL_CLIENT_ACTIVE_TEXTURE_ARB
#  define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
#endif
#ifndef GL_MAX_TEXTURE_UNITS_ARB
#  define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glActiveTextureARB
typedef void (APIENTRYP PFNGLUXACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
typedef void (APIENTRYP PFNGLUXCLIENTACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glActiveTextureARB
extern PFNGLUXACTIVETEXTUREARBPROC glActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
extern PFNGLUXCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
extern PFNGLUXMULTITEXCOORD1DARBPROC glMultiTexCoord1dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
extern PFNGLUXMULTITEXCOORD1DVARBPROC glMultiTexCoord1dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
extern PFNGLUXMULTITEXCOORD1FARBPROC glMultiTexCoord1fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
extern PFNGLUXMULTITEXCOORD1FVARBPROC glMultiTexCoord1fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
extern PFNGLUXMULTITEXCOORD1IARBPROC glMultiTexCoord1iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
extern PFNGLUXMULTITEXCOORD1IVARBPROC glMultiTexCoord1ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
extern PFNGLUXMULTITEXCOORD1SARBPROC glMultiTexCoord1sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
extern PFNGLUXMULTITEXCOORD1SVARBPROC glMultiTexCoord1svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
extern PFNGLUXMULTITEXCOORD2DARBPROC glMultiTexCoord2dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
extern PFNGLUXMULTITEXCOORD2DVARBPROC glMultiTexCoord2dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
extern PFNGLUXMULTITEXCOORD2FARBPROC glMultiTexCoord2fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
extern PFNGLUXMULTITEXCOORD2FVARBPROC glMultiTexCoord2fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
extern PFNGLUXMULTITEXCOORD2IARBPROC glMultiTexCoord2iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
extern PFNGLUXMULTITEXCOORD2IVARBPROC glMultiTexCoord2ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
extern PFNGLUXMULTITEXCOORD2SARBPROC glMultiTexCoord2sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
extern PFNGLUXMULTITEXCOORD2SVARBPROC glMultiTexCoord2svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
extern PFNGLUXMULTITEXCOORD3DARBPROC glMultiTexCoord3dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
extern PFNGLUXMULTITEXCOORD3DVARBPROC glMultiTexCoord3dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
extern PFNGLUXMULTITEXCOORD3FARBPROC glMultiTexCoord3fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
extern PFNGLUXMULTITEXCOORD3FVARBPROC glMultiTexCoord3fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
extern PFNGLUXMULTITEXCOORD3IARBPROC glMultiTexCoord3iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
extern PFNGLUXMULTITEXCOORD3IVARBPROC glMultiTexCoord3ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
extern PFNGLUXMULTITEXCOORD3SARBPROC glMultiTexCoord3sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
extern PFNGLUXMULTITEXCOORD3SVARBPROC glMultiTexCoord3svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
extern PFNGLUXMULTITEXCOORD4DARBPROC glMultiTexCoord4dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
extern PFNGLUXMULTITEXCOORD4DVARBPROC glMultiTexCoord4dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
extern PFNGLUXMULTITEXCOORD4FARBPROC glMultiTexCoord4fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
extern PFNGLUXMULTITEXCOORD4FVARBPROC glMultiTexCoord4fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
extern PFNGLUXMULTITEXCOORD4IARBPROC glMultiTexCoord4iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
extern PFNGLUXMULTITEXCOORD4IVARBPROC glMultiTexCoord4ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
extern PFNGLUXMULTITEXCOORD4SARBPROC glMultiTexCoord4sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
extern PFNGLUXMULTITEXCOORD4SVARBPROC glMultiTexCoord4svARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:27 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_multitexture__
#define __GLUX_GL_ARB_multitexture__

GLUX_NEW_PLUGIN(GL_ARB_multitexture);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TEXTURE0_ARB
#  define GL_TEXTURE0_ARB 0x84C0
#endif
#ifndef GL_TEXTURE1_ARB
#  define GL_TEXTURE1_ARB 0x84C1
#endif
#ifndef GL_TEXTURE2_ARB
#  define GL_TEXTURE2_ARB 0x84C2
#endif
#ifndef GL_TEXTURE3_ARB
#  define GL_TEXTURE3_ARB 0x84C3
#endif
#ifndef GL_TEXTURE4_ARB
#  define GL_TEXTURE4_ARB 0x84C4
#endif
#ifndef GL_TEXTURE5_ARB
#  define GL_TEXTURE5_ARB 0x84C5
#endif
#ifndef GL_TEXTURE6_ARB
#  define GL_TEXTURE6_ARB 0x84C6
#endif
#ifndef GL_TEXTURE7_ARB
#  define GL_TEXTURE7_ARB 0x84C7
#endif
#ifndef GL_TEXTURE8_ARB
#  define GL_TEXTURE8_ARB 0x84C8
#endif
#ifndef GL_TEXTURE9_ARB
#  define GL_TEXTURE9_ARB 0x84C9
#endif
#ifndef GL_TEXTURE10_ARB
#  define GL_TEXTURE10_ARB 0x84CA
#endif
#ifndef GL_TEXTURE11_ARB
#  define GL_TEXTURE11_ARB 0x84CB
#endif
#ifndef GL_TEXTURE12_ARB
#  define GL_TEXTURE12_ARB 0x84CC
#endif
#ifndef GL_TEXTURE13_ARB
#  define GL_TEXTURE13_ARB 0x84CD
#endif
#ifndef GL_TEXTURE14_ARB
#  define GL_TEXTURE14_ARB 0x84CE
#endif
#ifndef GL_TEXTURE15_ARB
#  define GL_TEXTURE15_ARB 0x84CF
#endif
#ifndef GL_TEXTURE16_ARB
#  define GL_TEXTURE16_ARB 0x84D0
#endif
#ifndef GL_TEXTURE17_ARB
#  define GL_TEXTURE17_ARB 0x84D1
#endif
#ifndef GL_TEXTURE18_ARB
#  define GL_TEXTURE18_ARB 0x84D2
#endif
#ifndef GL_TEXTURE19_ARB
#  define GL_TEXTURE19_ARB 0x84D3
#endif
#ifndef GL_TEXTURE20_ARB
#  define GL_TEXTURE20_ARB 0x84D4
#endif
#ifndef GL_TEXTURE21_ARB
#  define GL_TEXTURE21_ARB 0x84D5
#endif
#ifndef GL_TEXTURE22_ARB
#  define GL_TEXTURE22_ARB 0x84D6
#endif
#ifndef GL_TEXTURE23_ARB
#  define GL_TEXTURE23_ARB 0x84D7
#endif
#ifndef GL_TEXTURE24_ARB
#  define GL_TEXTURE24_ARB 0x84D8
#endif
#ifndef GL_TEXTURE25_ARB
#  define GL_TEXTURE25_ARB 0x84D9
#endif
#ifndef GL_TEXTURE26_ARB
#  define GL_TEXTURE26_ARB 0x84DA
#endif
#ifndef GL_TEXTURE27_ARB
#  define GL_TEXTURE27_ARB 0x84DB
#endif
#ifndef GL_TEXTURE28_ARB
#  define GL_TEXTURE28_ARB 0x84DC
#endif
#ifndef GL_TEXTURE29_ARB
#  define GL_TEXTURE29_ARB 0x84DD
#endif
#ifndef GL_TEXTURE30_ARB
#  define GL_TEXTURE30_ARB 0x84DE
#endif
#ifndef GL_TEXTURE31_ARB
#  define GL_TEXTURE31_ARB 0x84DF
#endif
#ifndef GL_ACTIVE_TEXTURE_ARB
#  define GL_ACTIVE_TEXTURE_ARB 0x84E0
#endif
#ifndef GL_CLIENT_ACTIVE_TEXTURE_ARB
#  define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
#endif
#ifndef GL_MAX_TEXTURE_UNITS_ARB
#  define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glActiveTextureARB
typedef void (APIENTRYP PFNGLUXACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
typedef void (APIENTRYP PFNGLUXCLIENTACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glActiveTextureARB
extern PFNGLUXACTIVETEXTUREARBPROC glActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
extern PFNGLUXCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
extern PFNGLUXMULTITEXCOORD1DARBPROC glMultiTexCoord1dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
extern PFNGLUXMULTITEXCOORD1DVARBPROC glMultiTexCoord1dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
extern PFNGLUXMULTITEXCOORD1FARBPROC glMultiTexCoord1fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
extern PFNGLUXMULTITEXCOORD1FVARBPROC glMultiTexCoord1fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
extern PFNGLUXMULTITEXCOORD1IARBPROC glMultiTexCoord1iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
extern PFNGLUXMULTITEXCOORD1IVARBPROC glMultiTexCoord1ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
extern PFNGLUXMULTITEXCOORD1SARBPROC glMultiTexCoord1sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
extern PFNGLUXMULTITEXCOORD1SVARBPROC glMultiTexCoord1svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
extern PFNGLUXMULTITEXCOORD2DARBPROC glMultiTexCoord2dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
extern PFNGLUXMULTITEXCOORD2DVARBPROC glMultiTexCoord2dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
extern PFNGLUXMULTITEXCOORD2FARBPROC glMultiTexCoord2fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
extern PFNGLUXMULTITEXCOORD2FVARBPROC glMultiTexCoord2fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
extern PFNGLUXMULTITEXCOORD2IARBPROC glMultiTexCoord2iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
extern PFNGLUXMULTITEXCOORD2IVARBPROC glMultiTexCoord2ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
extern PFNGLUXMULTITEXCOORD2SARBPROC glMultiTexCoord2sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
extern PFNGLUXMULTITEXCOORD2SVARBPROC glMultiTexCoord2svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
extern PFNGLUXMULTITEXCOORD3DARBPROC glMultiTexCoord3dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
extern PFNGLUXMULTITEXCOORD3DVARBPROC glMultiTexCoord3dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
extern PFNGLUXMULTITEXCOORD3FARBPROC glMultiTexCoord3fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
extern PFNGLUXMULTITEXCOORD3FVARBPROC glMultiTexCoord3fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
extern PFNGLUXMULTITEXCOORD3IARBPROC glMultiTexCoord3iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
extern PFNGLUXMULTITEXCOORD3IVARBPROC glMultiTexCoord3ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
extern PFNGLUXMULTITEXCOORD3SARBPROC glMultiTexCoord3sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
extern PFNGLUXMULTITEXCOORD3SVARBPROC glMultiTexCoord3svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
extern PFNGLUXMULTITEXCOORD4DARBPROC glMultiTexCoord4dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
extern PFNGLUXMULTITEXCOORD4DVARBPROC glMultiTexCoord4dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
extern PFNGLUXMULTITEXCOORD4FARBPROC glMultiTexCoord4fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
extern PFNGLUXMULTITEXCOORD4FVARBPROC glMultiTexCoord4fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
extern PFNGLUXMULTITEXCOORD4IARBPROC glMultiTexCoord4iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
extern PFNGLUXMULTITEXCOORD4IVARBPROC glMultiTexCoord4ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
extern PFNGLUXMULTITEXCOORD4SARBPROC glMultiTexCoord4sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
extern PFNGLUXMULTITEXCOORD4SVARBPROC glMultiTexCoord4svARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:32 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_multitexture__
#define __GLUX_GL_ARB_multitexture__

GLUX_NEW_PLUGIN(GL_ARB_multitexture);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TEXTURE0_ARB
#  define GL_TEXTURE0_ARB 0x84C0
#endif
#ifndef GL_TEXTURE1_ARB
#  define GL_TEXTURE1_ARB 0x84C1
#endif
#ifndef GL_TEXTURE2_ARB
#  define GL_TEXTURE2_ARB 0x84C2
#endif
#ifndef GL_TEXTURE3_ARB
#  define GL_TEXTURE3_ARB 0x84C3
#endif
#ifndef GL_TEXTURE4_ARB
#  define GL_TEXTURE4_ARB 0x84C4
#endif
#ifndef GL_TEXTURE5_ARB
#  define GL_TEXTURE5_ARB 0x84C5
#endif
#ifndef GL_TEXTURE6_ARB
#  define GL_TEXTURE6_ARB 0x84C6
#endif
#ifndef GL_TEXTURE7_ARB
#  define GL_TEXTURE7_ARB 0x84C7
#endif
#ifndef GL_TEXTURE8_ARB
#  define GL_TEXTURE8_ARB 0x84C8
#endif
#ifndef GL_TEXTURE9_ARB
#  define GL_TEXTURE9_ARB 0x84C9
#endif
#ifndef GL_TEXTURE10_ARB
#  define GL_TEXTURE10_ARB 0x84CA
#endif
#ifndef GL_TEXTURE11_ARB
#  define GL_TEXTURE11_ARB 0x84CB
#endif
#ifndef GL_TEXTURE12_ARB
#  define GL_TEXTURE12_ARB 0x84CC
#endif
#ifndef GL_TEXTURE13_ARB
#  define GL_TEXTURE13_ARB 0x84CD
#endif
#ifndef GL_TEXTURE14_ARB
#  define GL_TEXTURE14_ARB 0x84CE
#endif
#ifndef GL_TEXTURE15_ARB
#  define GL_TEXTURE15_ARB 0x84CF
#endif
#ifndef GL_TEXTURE16_ARB
#  define GL_TEXTURE16_ARB 0x84D0
#endif
#ifndef GL_TEXTURE17_ARB
#  define GL_TEXTURE17_ARB 0x84D1
#endif
#ifndef GL_TEXTURE18_ARB
#  define GL_TEXTURE18_ARB 0x84D2
#endif
#ifndef GL_TEXTURE19_ARB
#  define GL_TEXTURE19_ARB 0x84D3
#endif
#ifndef GL_TEXTURE20_ARB
#  define GL_TEXTURE20_ARB 0x84D4
#endif
#ifndef GL_TEXTURE21_ARB
#  define GL_TEXTURE21_ARB 0x84D5
#endif
#ifndef GL_TEXTURE22_ARB
#  define GL_TEXTURE22_ARB 0x84D6
#endif
#ifndef GL_TEXTURE23_ARB
#  define GL_TEXTURE23_ARB 0x84D7
#endif
#ifndef GL_TEXTURE24_ARB
#  define GL_TEXTURE24_ARB 0x84D8
#endif
#ifndef GL_TEXTURE25_ARB
#  define GL_TEXTURE25_ARB 0x84D9
#endif
#ifndef GL_TEXTURE26_ARB
#  define GL_TEXTURE26_ARB 0x84DA
#endif
#ifndef GL_TEXTURE27_ARB
#  define GL_TEXTURE27_ARB 0x84DB
#endif
#ifndef GL_TEXTURE28_ARB
#  define GL_TEXTURE28_ARB 0x84DC
#endif
#ifndef GL_TEXTURE29_ARB
#  define GL_TEXTURE29_ARB 0x84DD
#endif
#ifndef GL_TEXTURE30_ARB
#  define GL_TEXTURE30_ARB 0x84DE
#endif
#ifndef GL_TEXTURE31_ARB
#  define GL_TEXTURE31_ARB 0x84DF
#endif
#ifndef GL_ACTIVE_TEXTURE_ARB
#  define GL_ACTIVE_TEXTURE_ARB 0x84E0
#endif
#ifndef GL_CLIENT_ACTIVE_TEXTURE_ARB
#  define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
#endif
#ifndef GL_MAX_TEXTURE_UNITS_ARB
#  define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glActiveTextureARB
typedef void (APIENTRYP PFNGLUXACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
typedef void (APIENTRYP PFNGLUXCLIENTACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glActiveTextureARB
extern PFNGLUXACTIVETEXTUREARBPROC glActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
extern PFNGLUXCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
extern PFNGLUXMULTITEXCOORD1DARBPROC glMultiTexCoord1dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
extern PFNGLUXMULTITEXCOORD1DVARBPROC glMultiTexCoord1dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
extern PFNGLUXMULTITEXCOORD1FARBPROC glMultiTexCoord1fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
extern PFNGLUXMULTITEXCOORD1FVARBPROC glMultiTexCoord1fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
extern PFNGLUXMULTITEXCOORD1IARBPROC glMultiTexCoord1iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
extern PFNGLUXMULTITEXCOORD1IVARBPROC glMultiTexCoord1ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
extern PFNGLUXMULTITEXCOORD1SARBPROC glMultiTexCoord1sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
extern PFNGLUXMULTITEXCOORD1SVARBPROC glMultiTexCoord1svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
extern PFNGLUXMULTITEXCOORD2DARBPROC glMultiTexCoord2dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
extern PFNGLUXMULTITEXCOORD2DVARBPROC glMultiTexCoord2dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
extern PFNGLUXMULTITEXCOORD2FARBPROC glMultiTexCoord2fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
extern PFNGLUXMULTITEXCOORD2FVARBPROC glMultiTexCoord2fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
extern PFNGLUXMULTITEXCOORD2IARBPROC glMultiTexCoord2iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
extern PFNGLUXMULTITEXCOORD2IVARBPROC glMultiTexCoord2ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
extern PFNGLUXMULTITEXCOORD2SARBPROC glMultiTexCoord2sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
extern PFNGLUXMULTITEXCOORD2SVARBPROC glMultiTexCoord2svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
extern PFNGLUXMULTITEXCOORD3DARBPROC glMultiTexCoord3dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
extern PFNGLUXMULTITEXCOORD3DVARBPROC glMultiTexCoord3dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
extern PFNGLUXMULTITEXCOORD3FARBPROC glMultiTexCoord3fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
extern PFNGLUXMULTITEXCOORD3FVARBPROC glMultiTexCoord3fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
extern PFNGLUXMULTITEXCOORD3IARBPROC glMultiTexCoord3iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
extern PFNGLUXMULTITEXCOORD3IVARBPROC glMultiTexCoord3ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
extern PFNGLUXMULTITEXCOORD3SARBPROC glMultiTexCoord3sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
extern PFNGLUXMULTITEXCOORD3SVARBPROC glMultiTexCoord3svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
extern PFNGLUXMULTITEXCOORD4DARBPROC glMultiTexCoord4dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
extern PFNGLUXMULTITEXCOORD4DVARBPROC glMultiTexCoord4dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
extern PFNGLUXMULTITEXCOORD4FARBPROC glMultiTexCoord4fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
extern PFNGLUXMULTITEXCOORD4FVARBPROC glMultiTexCoord4fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
extern PFNGLUXMULTITEXCOORD4IARBPROC glMultiTexCoord4iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
extern PFNGLUXMULTITEXCOORD4IVARBPROC glMultiTexCoord4ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
extern PFNGLUXMULTITEXCOORD4SARBPROC glMultiTexCoord4sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
extern PFNGLUXMULTITEXCOORD4SVARBPROC glMultiTexCoord4svARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:49 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_multitexture__
#define __GLUX_GL_ARB_multitexture__

GLUX_NEW_PLUGIN(GL_ARB_multitexture);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TEXTURE0_ARB
#  define GL_TEXTURE0_ARB 0x84C0
#endif
#ifndef GL_TEXTURE1_ARB
#  define GL_TEXTURE1_ARB 0x84C1
#endif
#ifndef GL_TEXTURE2_ARB
#  define GL_TEXTURE2_ARB 0x84C2
#endif
#ifndef GL_TEXTURE3_ARB
#  define GL_TEXTURE3_ARB 0x84C3
#endif
#ifndef GL_TEXTURE4_ARB
#  define GL_TEXTURE4_ARB 0x84C4
#endif
#ifndef GL_TEXTURE5_ARB
#  define GL_TEXTURE5_ARB 0x84C5
#endif
#ifndef GL_TEXTURE6_ARB
#  define GL_TEXTURE6_ARB 0x84C6
#endif
#ifndef GL_TEXTURE7_ARB
#  define GL_TEXTURE7_ARB 0x84C7
#endif
#ifndef GL_TEXTURE8_ARB
#  define GL_TEXTURE8_ARB 0x84C8
#endif
#ifndef GL_TEXTURE9_ARB
#  define GL_TEXTURE9_ARB 0x84C9
#endif
#ifndef GL_TEXTURE10_ARB
#  define GL_TEXTURE10_ARB 0x84CA
#endif
#ifndef GL_TEXTURE11_ARB
#  define GL_TEXTURE11_ARB 0x84CB
#endif
#ifndef GL_TEXTURE12_ARB
#  define GL_TEXTURE12_ARB 0x84CC
#endif
#ifndef GL_TEXTURE13_ARB
#  define GL_TEXTURE13_ARB 0x84CD
#endif
#ifndef GL_TEXTURE14_ARB
#  define GL_TEXTURE14_ARB 0x84CE
#endif
#ifndef GL_TEXTURE15_ARB
#  define GL_TEXTURE15_ARB 0x84CF
#endif
#ifndef GL_TEXTURE16_ARB
#  define GL_TEXTURE16_ARB 0x84D0
#endif
#ifndef GL_TEXTURE17_ARB
#  define GL_TEXTURE17_ARB 0x84D1
#endif
#ifndef GL_TEXTURE18_ARB
#  define GL_TEXTURE18_ARB 0x84D2
#endif
#ifndef GL_TEXTURE19_ARB
#  define GL_TEXTURE19_ARB 0x84D3
#endif
#ifndef GL_TEXTURE20_ARB
#  define GL_TEXTURE20_ARB 0x84D4
#endif
#ifndef GL_TEXTURE21_ARB
#  define GL_TEXTURE21_ARB 0x84D5
#endif
#ifndef GL_TEXTURE22_ARB
#  define GL_TEXTURE22_ARB 0x84D6
#endif
#ifndef GL_TEXTURE23_ARB
#  define GL_TEXTURE23_ARB 0x84D7
#endif
#ifndef GL_TEXTURE24_ARB
#  define GL_TEXTURE24_ARB 0x84D8
#endif
#ifndef GL_TEXTURE25_ARB
#  define GL_TEXTURE25_ARB 0x84D9
#endif
#ifndef GL_TEXTURE26_ARB
#  define GL_TEXTURE26_ARB 0x84DA
#endif
#ifndef GL_TEXTURE27_ARB
#  define GL_TEXTURE27_ARB 0x84DB
#endif
#ifndef GL_TEXTURE28_ARB
#  define GL_TEXTURE28_ARB 0x84DC
#endif
#ifndef GL_TEXTURE29_ARB
#  define GL_TEXTURE29_ARB 0x84DD
#endif
#ifndef GL_TEXTURE30_ARB
#  define GL_TEXTURE30_ARB 0x84DE
#endif
#ifndef GL_TEXTURE31_ARB
#  define GL_TEXTURE31_ARB 0x84DF
#endif
#ifndef GL_ACTIVE_TEXTURE_ARB
#  define GL_ACTIVE_TEXTURE_ARB 0x84E0
#endif
#ifndef GL_CLIENT_ACTIVE_TEXTURE_ARB
#  define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
#endif
#ifndef GL_MAX_TEXTURE_UNITS_ARB
#  define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glActiveTextureARB
typedef void (APIENTRYP PFNGLUXACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
typedef void (APIENTRYP PFNGLUXCLIENTACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glActiveTextureARB
extern PFNGLUXACTIVETEXTUREARBPROC glActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
extern PFNGLUXCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
extern PFNGLUXMULTITEXCOORD1DARBPROC glMultiTexCoord1dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
extern PFNGLUXMULTITEXCOORD1DVARBPROC glMultiTexCoord1dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
extern PFNGLUXMULTITEXCOORD1FARBPROC glMultiTexCoord1fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
extern PFNGLUXMULTITEXCOORD1FVARBPROC glMultiTexCoord1fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
extern PFNGLUXMULTITEXCOORD1IARBPROC glMultiTexCoord1iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
extern PFNGLUXMULTITEXCOORD1IVARBPROC glMultiTexCoord1ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
extern PFNGLUXMULTITEXCOORD1SARBPROC glMultiTexCoord1sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
extern PFNGLUXMULTITEXCOORD1SVARBPROC glMultiTexCoord1svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
extern PFNGLUXMULTITEXCOORD2DARBPROC glMultiTexCoord2dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
extern PFNGLUXMULTITEXCOORD2DVARBPROC glMultiTexCoord2dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
extern PFNGLUXMULTITEXCOORD2FARBPROC glMultiTexCoord2fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
extern PFNGLUXMULTITEXCOORD2FVARBPROC glMultiTexCoord2fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
extern PFNGLUXMULTITEXCOORD2IARBPROC glMultiTexCoord2iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
extern PFNGLUXMULTITEXCOORD2IVARBPROC glMultiTexCoord2ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
extern PFNGLUXMULTITEXCOORD2SARBPROC glMultiTexCoord2sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
extern PFNGLUXMULTITEXCOORD2SVARBPROC glMultiTexCoord2svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
extern PFNGLUXMULTITEXCOORD3DARBPROC glMultiTexCoord3dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
extern PFNGLUXMULTITEXCOORD3DVARBPROC glMultiTexCoord3dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
extern PFNGLUXMULTITEXCOORD3FARBPROC glMultiTexCoord3fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
extern PFNGLUXMULTITEXCOORD3FVARBPROC glMultiTexCoord3fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
extern PFNGLUXMULTITEXCOORD3IARBPROC glMultiTexCoord3iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
extern PFNGLUXMULTITEXCOORD3IVARBPROC glMultiTexCoord3ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
extern PFNGLUXMULTITEXCOORD3SARBPROC glMultiTexCoord3sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
extern PFNGLUXMULTITEXCOORD3SVARBPROC glMultiTexCoord3svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
extern PFNGLUXMULTITEXCOORD4DARBPROC glMultiTexCoord4dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
extern PFNGLUXMULTITEXCOORD4DVARBPROC glMultiTexCoord4dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
extern PFNGLUXMULTITEXCOORD4FARBPROC glMultiTexCoord4fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
extern PFNGLUXMULTITEXCOORD4FVARBPROC glMultiTexCoord4fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
extern PFNGLUXMULTITEXCOORD4IARBPROC glMultiTexCoord4iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
extern PFNGLUXMULTITEXCOORD4IVARBPROC glMultiTexCoord4ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
extern PFNGLUXMULTITEXCOORD4SARBPROC glMultiTexCoord4sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
extern PFNGLUXMULTITEXCOORD4SVARBPROC glMultiTexCoord4svARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:25:02 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_multitexture__
#define __GLUX_GL_ARB_multitexture__

GLUX_NEW_PLUGIN(GL_ARB_multitexture);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TEXTURE0_ARB
#  define GL_TEXTURE0_ARB 0x84C0
#endif
#ifndef GL_TEXTURE1_ARB
#  define GL_TEXTURE1_ARB 0x84C1
#endif
#ifndef GL_TEXTURE2_ARB
#  define GL_TEXTURE2_ARB 0x84C2
#endif
#ifndef GL_TEXTURE3_ARB
#  define GL_TEXTURE3_ARB 0x84C3
#endif
#ifndef GL_TEXTURE4_ARB
#  define GL_TEXTURE4_ARB 0x84C4
#endif
#ifndef GL_TEXTURE5_ARB
#  define GL_TEXTURE5_ARB 0x84C5
#endif
#ifndef GL_TEXTURE6_ARB
#  define GL_TEXTURE6_ARB 0x84C6
#endif
#ifndef GL_TEXTURE7_ARB
#  define GL_TEXTURE7_ARB 0x84C7
#endif
#ifndef GL_TEXTURE8_ARB
#  define GL_TEXTURE8_ARB 0x84C8
#endif
#ifndef GL_TEXTURE9_ARB
#  define GL_TEXTURE9_ARB 0x84C9
#endif
#ifndef GL_TEXTURE10_ARB
#  define GL_TEXTURE10_ARB 0x84CA
#endif
#ifndef GL_TEXTURE11_ARB
#  define GL_TEXTURE11_ARB 0x84CB
#endif
#ifndef GL_TEXTURE12_ARB
#  define GL_TEXTURE12_ARB 0x84CC
#endif
#ifndef GL_TEXTURE13_ARB
#  define GL_TEXTURE13_ARB 0x84CD
#endif
#ifndef GL_TEXTURE14_ARB
#  define GL_TEXTURE14_ARB 0x84CE
#endif
#ifndef GL_TEXTURE15_ARB
#  define GL_TEXTURE15_ARB 0x84CF
#endif
#ifndef GL_TEXTURE16_ARB
#  define GL_TEXTURE16_ARB 0x84D0
#endif
#ifndef GL_TEXTURE17_ARB
#  define GL_TEXTURE17_ARB 0x84D1
#endif
#ifndef GL_TEXTURE18_ARB
#  define GL_TEXTURE18_ARB 0x84D2
#endif
#ifndef GL_TEXTURE19_ARB
#  define GL_TEXTURE19_ARB 0x84D3
#endif
#ifndef GL_TEXTURE20_ARB
#  define GL_TEXTURE20_ARB 0x84D4
#endif
#ifndef GL_TEXTURE21_ARB
#  define GL_TEXTURE21_ARB 0x84D5
#endif
#ifndef GL_TEXTURE22_ARB
#  define GL_TEXTURE22_ARB 0x84D6
#endif
#ifndef GL_TEXTURE23_ARB
#  define GL_TEXTURE23_ARB 0x84D7
#endif
#ifndef GL_TEXTURE24_ARB
#  define GL_TEXTURE24_ARB 0x84D8
#endif
#ifndef GL_TEXTURE25_ARB
#  define GL_TEXTURE25_ARB 0x84D9
#endif
#ifndef GL_TEXTURE26_ARB
#  define GL_TEXTURE26_ARB 0x84DA
#endif
#ifndef GL_TEXTURE27_ARB
#  define GL_TEXTURE27_ARB 0x84DB
#endif
#ifndef GL_TEXTURE28_ARB
#  define GL_TEXTURE28_ARB 0x84DC
#endif
#ifndef GL_TEXTURE29_ARB
#  define GL_TEXTURE29_ARB 0x84DD
#endif
#ifndef GL_TEXTURE30_ARB
#  define GL_TEXTURE30_ARB 0x84DE
#endif
#ifndef GL_TEXTURE31_ARB
#  define GL_TEXTURE31_ARB 0x84DF
#endif
#ifndef GL_ACTIVE_TEXTURE_ARB
#  define GL_ACTIVE_TEXTURE_ARB 0x84E0
#endif
#ifndef GL_CLIENT_ACTIVE_TEXTURE_ARB
#  define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
#endif
#ifndef GL_MAX_TEXTURE_UNITS_ARB
#  define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glActiveTextureARB
typedef void (APIENTRYP PFNGLUXACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
typedef void (APIENTRYP PFNGLUXCLIENTACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glActiveTextureARB
extern PFNGLUXACTIVETEXTUREARBPROC glActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
extern PFNGLUXCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
extern PFNGLUXMULTITEXCOORD1DARBPROC glMultiTexCoord1dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
extern PFNGLUXMULTITEXCOORD1DVARBPROC glMultiTexCoord1dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
extern PFNGLUXMULTITEXCOORD1FARBPROC glMultiTexCoord1fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
extern PFNGLUXMULTITEXCOORD1FVARBPROC glMultiTexCoord1fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
extern PFNGLUXMULTITEXCOORD1IARBPROC glMultiTexCoord1iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
extern PFNGLUXMULTITEXCOORD1IVARBPROC glMultiTexCoord1ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
extern PFNGLUXMULTITEXCOORD1SARBPROC glMultiTexCoord1sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
extern PFNGLUXMULTITEXCOORD1SVARBPROC glMultiTexCoord1svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
extern PFNGLUXMULTITEXCOORD2DARBPROC glMultiTexCoord2dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
extern PFNGLUXMULTITEXCOORD2DVARBPROC glMultiTexCoord2dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
extern PFNGLUXMULTITEXCOORD2FARBPROC glMultiTexCoord2fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
extern PFNGLUXMULTITEXCOORD2FVARBPROC glMultiTexCoord2fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
extern PFNGLUXMULTITEXCOORD2IARBPROC glMultiTexCoord2iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
extern PFNGLUXMULTITEXCOORD2IVARBPROC glMultiTexCoord2ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
extern PFNGLUXMULTITEXCOORD2SARBPROC glMultiTexCoord2sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
extern PFNGLUXMULTITEXCOORD2SVARBPROC glMultiTexCoord2svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
extern PFNGLUXMULTITEXCOORD3DARBPROC glMultiTexCoord3dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
extern PFNGLUXMULTITEXCOORD3DVARBPROC glMultiTexCoord3dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
extern PFNGLUXMULTITEXCOORD3FARBPROC glMultiTexCoord3fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
extern PFNGLUXMULTITEXCOORD3FVARBPROC glMultiTexCoord3fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
extern PFNGLUXMULTITEXCOORD3IARBPROC glMultiTexCoord3iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
extern PFNGLUXMULTITEXCOORD3IVARBPROC glMultiTexCoord3ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
extern PFNGLUXMULTITEXCOORD3SARBPROC glMultiTexCoord3sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
extern PFNGLUXMULTITEXCOORD3SVARBPROC glMultiTexCoord3svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
extern PFNGLUXMULTITEXCOORD4DARBPROC glMultiTexCoord4dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
extern PFNGLUXMULTITEXCOORD4DVARBPROC glMultiTexCoord4dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
extern PFNGLUXMULTITEXCOORD4FARBPROC glMultiTexCoord4fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
extern PFNGLUXMULTITEXCOORD4FVARBPROC glMultiTexCoord4fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
extern PFNGLUXMULTITEXCOORD4IARBPROC glMultiTexCoord4iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
extern PFNGLUXMULTITEXCOORD4IVARBPROC glMultiTexCoord4ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
extern PFNGLUXMULTITEXCOORD4SARBPROC glMultiTexCoord4sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
extern PFNGLUXMULTITEXCOORD4SVARBPROC glMultiTexCoord4svARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:27:54 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_multitexture__
#define __GLUX_GL_ARB_multitexture__

GLUX_NEW_PLUGIN(GL_ARB_multitexture);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TEXTURE0_ARB
#  define GL_TEXTURE0_ARB 0x84C0
#endif
#ifndef GL_TEXTURE1_ARB
#  define GL_TEXTURE1_ARB 0x84C1
#endif
#ifndef GL_TEXTURE2_ARB
#  define GL_TEXTURE2_ARB 0x84C2
#endif
#ifndef GL_TEXTURE3_ARB
#  define GL_TEXTURE3_ARB 0x84C3
#endif
#ifndef GL_TEXTURE4_ARB
#  define GL_TEXTURE4_ARB 0x84C4
#endif
#ifndef GL_TEXTURE5_ARB
#  define GL_TEXTURE5_ARB 0x84C5
#endif
#ifndef GL_TEXTURE6_ARB
#  define GL_TEXTURE6_ARB 0x84C6
#endif
#ifndef GL_TEXTURE7_ARB
#  define GL_TEXTURE7_ARB 0x84C7
#endif
#ifndef GL_TEXTURE8_ARB
#  define GL_TEXTURE8_ARB 0x84C8
#endif
#ifndef GL_TEXTURE9_ARB
#  define GL_TEXTURE9_ARB 0x84C9
#endif
#ifndef GL_TEXTURE10_ARB
#  define GL_TEXTURE10_ARB 0x84CA
#endif
#ifndef GL_TEXTURE11_ARB
#  define GL_TEXTURE11_ARB 0x84CB
#endif
#ifndef GL_TEXTURE12_ARB
#  define GL_TEXTURE12_ARB 0x84CC
#endif
#ifndef GL_TEXTURE13_ARB
#  define GL_TEXTURE13_ARB 0x84CD
#endif
#ifndef GL_TEXTURE14_ARB
#  define GL_TEXTURE14_ARB 0x84CE
#endif
#ifndef GL_TEXTURE15_ARB
#  define GL_TEXTURE15_ARB 0x84CF
#endif
#ifndef GL_TEXTURE16_ARB
#  define GL_TEXTURE16_ARB 0x84D0
#endif
#ifndef GL_TEXTURE17_ARB
#  define GL_TEXTURE17_ARB 0x84D1
#endif
#ifndef GL_TEXTURE18_ARB
#  define GL_TEXTURE18_ARB 0x84D2
#endif
#ifndef GL_TEXTURE19_ARB
#  define GL_TEXTURE19_ARB 0x84D3
#endif
#ifndef GL_TEXTURE20_ARB
#  define GL_TEXTURE20_ARB 0x84D4
#endif
#ifndef GL_TEXTURE21_ARB
#  define GL_TEXTURE21_ARB 0x84D5
#endif
#ifndef GL_TEXTURE22_ARB
#  define GL_TEXTURE22_ARB 0x84D6
#endif
#ifndef GL_TEXTURE23_ARB
#  define GL_TEXTURE23_ARB 0x84D7
#endif
#ifndef GL_TEXTURE24_ARB
#  define GL_TEXTURE24_ARB 0x84D8
#endif
#ifndef GL_TEXTURE25_ARB
#  define GL_TEXTURE25_ARB 0x84D9
#endif
#ifndef GL_TEXTURE26_ARB
#  define GL_TEXTURE26_ARB 0x84DA
#endif
#ifndef GL_TEXTURE27_ARB
#  define GL_TEXTURE27_ARB 0x84DB
#endif
#ifndef GL_TEXTURE28_ARB
#  define GL_TEXTURE28_ARB 0x84DC
#endif
#ifndef GL_TEXTURE29_ARB
#  define GL_TEXTURE29_ARB 0x84DD
#endif
#ifndef GL_TEXTURE30_ARB
#  define GL_TEXTURE30_ARB 0x84DE
#endif
#ifndef GL_TEXTURE31_ARB
#  define GL_TEXTURE31_ARB 0x84DF
#endif
#ifndef GL_ACTIVE_TEXTURE_ARB
#  define GL_ACTIVE_TEXTURE_ARB 0x84E0
#endif
#ifndef GL_CLIENT_ACTIVE_TEXTURE_ARB
#  define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
#endif
#ifndef GL_MAX_TEXTURE_UNITS_ARB
#  define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glActiveTextureARB
typedef void (APIENTRYP PFNGLUXACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
typedef void (APIENTRYP PFNGLUXCLIENTACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glActiveTextureARB
extern PFNGLUXACTIVETEXTUREARBPROC glActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
extern PFNGLUXCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
extern PFNGLUXMULTITEXCOORD1DARBPROC glMultiTexCoord1dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
extern PFNGLUXMULTITEXCOORD1DVARBPROC glMultiTexCoord1dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
extern PFNGLUXMULTITEXCOORD1FARBPROC glMultiTexCoord1fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
extern PFNGLUXMULTITEXCOORD1FVARBPROC glMultiTexCoord1fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
extern PFNGLUXMULTITEXCOORD1IARBPROC glMultiTexCoord1iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
extern PFNGLUXMULTITEXCOORD1IVARBPROC glMultiTexCoord1ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
extern PFNGLUXMULTITEXCOORD1SARBPROC glMultiTexCoord1sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
extern PFNGLUXMULTITEXCOORD1SVARBPROC glMultiTexCoord1svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
extern PFNGLUXMULTITEXCOORD2DARBPROC glMultiTexCoord2dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
extern PFNGLUXMULTITEXCOORD2DVARBPROC glMultiTexCoord2dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
extern PFNGLUXMULTITEXCOORD2FARBPROC glMultiTexCoord2fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
extern PFNGLUXMULTITEXCOORD2FVARBPROC glMultiTexCoord2fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
extern PFNGLUXMULTITEXCOORD2IARBPROC glMultiTexCoord2iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
extern PFNGLUXMULTITEXCOORD2IVARBPROC glMultiTexCoord2ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
extern PFNGLUXMULTITEXCOORD2SARBPROC glMultiTexCoord2sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
extern PFNGLUXMULTITEXCOORD2SVARBPROC glMultiTexCoord2svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
extern PFNGLUXMULTITEXCOORD3DARBPROC glMultiTexCoord3dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
extern PFNGLUXMULTITEXCOORD3DVARBPROC glMultiTexCoord3dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
extern PFNGLUXMULTITEXCOORD3FARBPROC glMultiTexCoord3fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
extern PFNGLUXMULTITEXCOORD3FVARBPROC glMultiTexCoord3fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
extern PFNGLUXMULTITEXCOORD3IARBPROC glMultiTexCoord3iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
extern PFNGLUXMULTITEXCOORD3IVARBPROC glMultiTexCoord3ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
extern PFNGLUXMULTITEXCOORD3SARBPROC glMultiTexCoord3sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
extern PFNGLUXMULTITEXCOORD3SVARBPROC glMultiTexCoord3svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
extern PFNGLUXMULTITEXCOORD4DARBPROC glMultiTexCoord4dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
extern PFNGLUXMULTITEXCOORD4DVARBPROC glMultiTexCoord4dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
extern PFNGLUXMULTITEXCOORD4FARBPROC glMultiTexCoord4fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
extern PFNGLUXMULTITEXCOORD4FVARBPROC glMultiTexCoord4fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
extern PFNGLUXMULTITEXCOORD4IARBPROC glMultiTexCoord4iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
extern PFNGLUXMULTITEXCOORD4IVARBPROC glMultiTexCoord4ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
extern PFNGLUXMULTITEXCOORD4SARBPROC glMultiTexCoord4sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
extern PFNGLUXMULTITEXCOORD4SVARBPROC glMultiTexCoord4svARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:16:54 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_multitexture__
#define __GLUX_GL_ARB_multitexture__

GLUX_NEW_PLUGIN(GL_ARB_multitexture);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TEXTURE0_ARB
#  define GL_TEXTURE0_ARB 0x84C0
#endif
#ifndef GL_TEXTURE1_ARB
#  define GL_TEXTURE1_ARB 0x84C1
#endif
#ifndef GL_TEXTURE2_ARB
#  define GL_TEXTURE2_ARB 0x84C2
#endif
#ifndef GL_TEXTURE3_ARB
#  define GL_TEXTURE3_ARB 0x84C3
#endif
#ifndef GL_TEXTURE4_ARB
#  define GL_TEXTURE4_ARB 0x84C4
#endif
#ifndef GL_TEXTURE5_ARB
#  define GL_TEXTURE5_ARB 0x84C5
#endif
#ifndef GL_TEXTURE6_ARB
#  define GL_TEXTURE6_ARB 0x84C6
#endif
#ifndef GL_TEXTURE7_ARB
#  define GL_TEXTURE7_ARB 0x84C7
#endif
#ifndef GL_TEXTURE8_ARB
#  define GL_TEXTURE8_ARB 0x84C8
#endif
#ifndef GL_TEXTURE9_ARB
#  define GL_TEXTURE9_ARB 0x84C9
#endif
#ifndef GL_TEXTURE10_ARB
#  define GL_TEXTURE10_ARB 0x84CA
#endif
#ifndef GL_TEXTURE11_ARB
#  define GL_TEXTURE11_ARB 0x84CB
#endif
#ifndef GL_TEXTURE12_ARB
#  define GL_TEXTURE12_ARB 0x84CC
#endif
#ifndef GL_TEXTURE13_ARB
#  define GL_TEXTURE13_ARB 0x84CD
#endif
#ifndef GL_TEXTURE14_ARB
#  define GL_TEXTURE14_ARB 0x84CE
#endif
#ifndef GL_TEXTURE15_ARB
#  define GL_TEXTURE15_ARB 0x84CF
#endif
#ifndef GL_TEXTURE16_ARB
#  define GL_TEXTURE16_ARB 0x84D0
#endif
#ifndef GL_TEXTURE17_ARB
#  define GL_TEXTURE17_ARB 0x84D1
#endif
#ifndef GL_TEXTURE18_ARB
#  define GL_TEXTURE18_ARB 0x84D2
#endif
#ifndef GL_TEXTURE19_ARB
#  define GL_TEXTURE19_ARB 0x84D3
#endif
#ifndef GL_TEXTURE20_ARB
#  define GL_TEXTURE20_ARB 0x84D4
#endif
#ifndef GL_TEXTURE21_ARB
#  define GL_TEXTURE21_ARB 0x84D5
#endif
#ifndef GL_TEXTURE22_ARB
#  define GL_TEXTURE22_ARB 0x84D6
#endif
#ifndef GL_TEXTURE23_ARB
#  define GL_TEXTURE23_ARB 0x84D7
#endif
#ifndef GL_TEXTURE24_ARB
#  define GL_TEXTURE24_ARB 0x84D8
#endif
#ifndef GL_TEXTURE25_ARB
#  define GL_TEXTURE25_ARB 0x84D9
#endif
#ifndef GL_TEXTURE26_ARB
#  define GL_TEXTURE26_ARB 0x84DA
#endif
#ifndef GL_TEXTURE27_ARB
#  define GL_TEXTURE27_ARB 0x84DB
#endif
#ifndef GL_TEXTURE28_ARB
#  define GL_TEXTURE28_ARB 0x84DC
#endif
#ifndef GL_TEXTURE29_ARB
#  define GL_TEXTURE29_ARB 0x84DD
#endif
#ifndef GL_TEXTURE30_ARB
#  define GL_TEXTURE30_ARB 0x84DE
#endif
#ifndef GL_TEXTURE31_ARB
#  define GL_TEXTURE31_ARB 0x84DF
#endif
#ifndef GL_ACTIVE_TEXTURE_ARB
#  define GL_ACTIVE_TEXTURE_ARB 0x84E0
#endif
#ifndef GL_CLIENT_ACTIVE_TEXTURE_ARB
#  define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
#endif
#ifndef GL_MAX_TEXTURE_UNITS_ARB
#  define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glActiveTextureARB
typedef void (APIENTRYP PFNGLUXACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
typedef void (APIENTRYP PFNGLUXCLIENTACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glActiveTextureARB
extern PFNGLUXACTIVETEXTUREARBPROC glActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
extern PFNGLUXCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
extern PFNGLUXMULTITEXCOORD1DARBPROC glMultiTexCoord1dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
extern PFNGLUXMULTITEXCOORD1DVARBPROC glMultiTexCoord1dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
extern PFNGLUXMULTITEXCOORD1FARBPROC glMultiTexCoord1fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
extern PFNGLUXMULTITEXCOORD1FVARBPROC glMultiTexCoord1fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
extern PFNGLUXMULTITEXCOORD1IARBPROC glMultiTexCoord1iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
extern PFNGLUXMULTITEXCOORD1IVARBPROC glMultiTexCoord1ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
extern PFNGLUXMULTITEXCOORD1SARBPROC glMultiTexCoord1sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
extern PFNGLUXMULTITEXCOORD1SVARBPROC glMultiTexCoord1svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
extern PFNGLUXMULTITEXCOORD2DARBPROC glMultiTexCoord2dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
extern PFNGLUXMULTITEXCOORD2DVARBPROC glMultiTexCoord2dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
extern PFNGLUXMULTITEXCOORD2FARBPROC glMultiTexCoord2fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
extern PFNGLUXMULTITEXCOORD2FVARBPROC glMultiTexCoord2fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
extern PFNGLUXMULTITEXCOORD2IARBPROC glMultiTexCoord2iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
extern PFNGLUXMULTITEXCOORD2IVARBPROC glMultiTexCoord2ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
extern PFNGLUXMULTITEXCOORD2SARBPROC glMultiTexCoord2sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
extern PFNGLUXMULTITEXCOORD2SVARBPROC glMultiTexCoord2svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
extern PFNGLUXMULTITEXCOORD3DARBPROC glMultiTexCoord3dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
extern PFNGLUXMULTITEXCOORD3DVARBPROC glMultiTexCoord3dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
extern PFNGLUXMULTITEXCOORD3FARBPROC glMultiTexCoord3fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
extern PFNGLUXMULTITEXCOORD3FVARBPROC glMultiTexCoord3fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
extern PFNGLUXMULTITEXCOORD3IARBPROC glMultiTexCoord3iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
extern PFNGLUXMULTITEXCOORD3IVARBPROC glMultiTexCoord3ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
extern PFNGLUXMULTITEXCOORD3SARBPROC glMultiTexCoord3sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
extern PFNGLUXMULTITEXCOORD3SVARBPROC glMultiTexCoord3svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
extern PFNGLUXMULTITEXCOORD4DARBPROC glMultiTexCoord4dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
extern PFNGLUXMULTITEXCOORD4DVARBPROC glMultiTexCoord4dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
extern PFNGLUXMULTITEXCOORD4FARBPROC glMultiTexCoord4fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
extern PFNGLUXMULTITEXCOORD4FVARBPROC glMultiTexCoord4fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
extern PFNGLUXMULTITEXCOORD4IARBPROC glMultiTexCoord4iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
extern PFNGLUXMULTITEXCOORD4IVARBPROC glMultiTexCoord4ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
extern PFNGLUXMULTITEXCOORD4SARBPROC glMultiTexCoord4sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
extern PFNGLUXMULTITEXCOORD4SVARBPROC glMultiTexCoord4svARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_multitexture__
#define __GLUX_GL_ARB_multitexture__

GLUX_NEW_PLUGIN(GL_ARB_multitexture);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TEXTURE0_ARB
#  define GL_TEXTURE0_ARB 0x84C0
#endif
#ifndef GL_TEXTURE1_ARB
#  define GL_TEXTURE1_ARB 0x84C1
#endif
#ifndef GL_TEXTURE2_ARB
#  define GL_TEXTURE2_ARB 0x84C2
#endif
#ifndef GL_TEXTURE3_ARB
#  define GL_TEXTURE3_ARB 0x84C3
#endif
#ifndef GL_TEXTURE4_ARB
#  define GL_TEXTURE4_ARB 0x84C4
#endif
#ifndef GL_TEXTURE5_ARB
#  define GL_TEXTURE5_ARB 0x84C5
#endif
#ifndef GL_TEXTURE6_ARB
#  define GL_TEXTURE6_ARB 0x84C6
#endif
#ifndef GL_TEXTURE7_ARB
#  define GL_TEXTURE7_ARB 0x84C7
#endif
#ifndef GL_TEXTURE8_ARB
#  define GL_TEXTURE8_ARB 0x84C8
#endif
#ifndef GL_TEXTURE9_ARB
#  define GL_TEXTURE9_ARB 0x84C9
#endif
#ifndef GL_TEXTURE10_ARB
#  define GL_TEXTURE10_ARB 0x84CA
#endif
#ifndef GL_TEXTURE11_ARB
#  define GL_TEXTURE11_ARB 0x84CB
#endif
#ifndef GL_TEXTURE12_ARB
#  define GL_TEXTURE12_ARB 0x84CC
#endif
#ifndef GL_TEXTURE13_ARB
#  define GL_TEXTURE13_ARB 0x84CD
#endif
#ifndef GL_TEXTURE14_ARB
#  define GL_TEXTURE14_ARB 0x84CE
#endif
#ifndef GL_TEXTURE15_ARB
#  define GL_TEXTURE15_ARB 0x84CF
#endif
#ifndef GL_TEXTURE16_ARB
#  define GL_TEXTURE16_ARB 0x84D0
#endif
#ifndef GL_TEXTURE17_ARB
#  define GL_TEXTURE17_ARB 0x84D1
#endif
#ifndef GL_TEXTURE18_ARB
#  define GL_TEXTURE18_ARB 0x84D2
#endif
#ifndef GL_TEXTURE19_ARB
#  define GL_TEXTURE19_ARB 0x84D3
#endif
#ifndef GL_TEXTURE20_ARB
#  define GL_TEXTURE20_ARB 0x84D4
#endif
#ifndef GL_TEXTURE21_ARB
#  define GL_TEXTURE21_ARB 0x84D5
#endif
#ifndef GL_TEXTURE22_ARB
#  define GL_TEXTURE22_ARB 0x84D6
#endif
#ifndef GL_TEXTURE23_ARB
#  define GL_TEXTURE23_ARB 0x84D7
#endif
#ifndef GL_TEXTURE24_ARB
#  define GL_TEXTURE24_ARB 0x84D8
#endif
#ifndef GL_TEXTURE25_ARB
#  define GL_TEXTURE25_ARB 0x84D9
#endif
#ifndef GL_TEXTURE26_ARB
#  define GL_TEXTURE26_ARB 0x84DA
#endif
#ifndef GL_TEXTURE27_ARB
#  define GL_TEXTURE27_ARB 0x84DB
#endif
#ifndef GL_TEXTURE28_ARB
#  define GL_TEXTURE28_ARB 0x84DC
#endif
#ifndef GL_TEXTURE29_ARB
#  define GL_TEXTURE29_ARB 0x84DD
#endif
#ifndef GL_TEXTURE30_ARB
#  define GL_TEXTURE30_ARB 0x84DE
#endif
#ifndef GL_TEXTURE31_ARB
#  define GL_TEXTURE31_ARB 0x84DF
#endif
#ifndef GL_ACTIVE_TEXTURE_ARB
#  define GL_ACTIVE_TEXTURE_ARB 0x84E0
#endif
#ifndef GL_CLIENT_ACTIVE_TEXTURE_ARB
#  define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
#endif
#ifndef GL_MAX_TEXTURE_UNITS_ARB
#  define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glActiveTextureARB
typedef void (APIENTRYP PFNGLUXACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
typedef void (APIENTRYP PFNGLUXCLIENTACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glActiveTextureARB
extern PFNGLUXACTIVETEXTUREARBPROC glActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
extern PFNGLUXCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
extern PFNGLUXMULTITEXCOORD1DARBPROC glMultiTexCoord1dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
extern PFNGLUXMULTITEXCOORD1DVARBPROC glMultiTexCoord1dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
extern PFNGLUXMULTITEXCOORD1FARBPROC glMultiTexCoord1fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
extern PFNGLUXMULTITEXCOORD1FVARBPROC glMultiTexCoord1fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
extern PFNGLUXMULTITEXCOORD1IARBPROC glMultiTexCoord1iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
extern PFNGLUXMULTITEXCOORD1IVARBPROC glMultiTexCoord1ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
extern PFNGLUXMULTITEXCOORD1SARBPROC glMultiTexCoord1sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
extern PFNGLUXMULTITEXCOORD1SVARBPROC glMultiTexCoord1svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
extern PFNGLUXMULTITEXCOORD2DARBPROC glMultiTexCoord2dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
extern PFNGLUXMULTITEXCOORD2DVARBPROC glMultiTexCoord2dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
extern PFNGLUXMULTITEXCOORD2FARBPROC glMultiTexCoord2fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
extern PFNGLUXMULTITEXCOORD2FVARBPROC glMultiTexCoord2fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
extern PFNGLUXMULTITEXCOORD2IARBPROC glMultiTexCoord2iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
extern PFNGLUXMULTITEXCOORD2IVARBPROC glMultiTexCoord2ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
extern PFNGLUXMULTITEXCOORD2SARBPROC glMultiTexCoord2sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
extern PFNGLUXMULTITEXCOORD2SVARBPROC glMultiTexCoord2svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
extern PFNGLUXMULTITEXCOORD3DARBPROC glMultiTexCoord3dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
extern PFNGLUXMULTITEXCOORD3DVARBPROC glMultiTexCoord3dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
extern PFNGLUXMULTITEXCOORD3FARBPROC glMultiTexCoord3fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
extern PFNGLUXMULTITEXCOORD3FVARBPROC glMultiTexCoord3fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
extern PFNGLUXMULTITEXCOORD3IARBPROC glMultiTexCoord3iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
extern PFNGLUXMULTITEXCOORD3IVARBPROC glMultiTexCoord3ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
extern PFNGLUXMULTITEXCOORD3SARBPROC glMultiTexCoord3sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
extern PFNGLUXMULTITEXCOORD3SVARBPROC glMultiTexCoord3svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
extern PFNGLUXMULTITEXCOORD4DARBPROC glMultiTexCoord4dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
extern PFNGLUXMULTITEXCOORD4DVARBPROC glMultiTexCoord4dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
extern PFNGLUXMULTITEXCOORD4FARBPROC glMultiTexCoord4fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
extern PFNGLUXMULTITEXCOORD4FVARBPROC glMultiTexCoord4fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
extern PFNGLUXMULTITEXCOORD4IARBPROC glMultiTexCoord4iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
extern PFNGLUXMULTITEXCOORD4IVARBPROC glMultiTexCoord4ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
extern PFNGLUXMULTITEXCOORD4SARBPROC glMultiTexCoord4sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
extern PFNGLUXMULTITEXCOORD4SVARBPROC glMultiTexCoord4svARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:18 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_multitexture__
#define __GLUX_GL_ARB_multitexture__

GLUX_NEW_PLUGIN(GL_ARB_multitexture);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TEXTURE0_ARB
#  define GL_TEXTURE0_ARB 0x84C0
#endif
#ifndef GL_TEXTURE1_ARB
#  define GL_TEXTURE1_ARB 0x84C1
#endif
#ifndef GL_TEXTURE2_ARB
#  define GL_TEXTURE2_ARB 0x84C2
#endif
#ifndef GL_TEXTURE3_ARB
#  define GL_TEXTURE3_ARB 0x84C3
#endif
#ifndef GL_TEXTURE4_ARB
#  define GL_TEXTURE4_ARB 0x84C4
#endif
#ifndef GL_TEXTURE5_ARB
#  define GL_TEXTURE5_ARB 0x84C5
#endif
#ifndef GL_TEXTURE6_ARB
#  define GL_TEXTURE6_ARB 0x84C6
#endif
#ifndef GL_TEXTURE7_ARB
#  define GL_TEXTURE7_ARB 0x84C7
#endif
#ifndef GL_TEXTURE8_ARB
#  define GL_TEXTURE8_ARB 0x84C8
#endif
#ifndef GL_TEXTURE9_ARB
#  define GL_TEXTURE9_ARB 0x84C9
#endif
#ifndef GL_TEXTURE10_ARB
#  define GL_TEXTURE10_ARB 0x84CA
#endif
#ifndef GL_TEXTURE11_ARB
#  define GL_TEXTURE11_ARB 0x84CB
#endif
#ifndef GL_TEXTURE12_ARB
#  define GL_TEXTURE12_ARB 0x84CC
#endif
#ifndef GL_TEXTURE13_ARB
#  define GL_TEXTURE13_ARB 0x84CD
#endif
#ifndef GL_TEXTURE14_ARB
#  define GL_TEXTURE14_ARB 0x84CE
#endif
#ifndef GL_TEXTURE15_ARB
#  define GL_TEXTURE15_ARB 0x84CF
#endif
#ifndef GL_TEXTURE16_ARB
#  define GL_TEXTURE16_ARB 0x84D0
#endif
#ifndef GL_TEXTURE17_ARB
#  define GL_TEXTURE17_ARB 0x84D1
#endif
#ifndef GL_TEXTURE18_ARB
#  define GL_TEXTURE18_ARB 0x84D2
#endif
#ifndef GL_TEXTURE19_ARB
#  define GL_TEXTURE19_ARB 0x84D3
#endif
#ifndef GL_TEXTURE20_ARB
#  define GL_TEXTURE20_ARB 0x84D4
#endif
#ifndef GL_TEXTURE21_ARB
#  define GL_TEXTURE21_ARB 0x84D5
#endif
#ifndef GL_TEXTURE22_ARB
#  define GL_TEXTURE22_ARB 0x84D6
#endif
#ifndef GL_TEXTURE23_ARB
#  define GL_TEXTURE23_ARB 0x84D7
#endif
#ifndef GL_TEXTURE24_ARB
#  define GL_TEXTURE24_ARB 0x84D8
#endif
#ifndef GL_TEXTURE25_ARB
#  define GL_TEXTURE25_ARB 0x84D9
#endif
#ifndef GL_TEXTURE26_ARB
#  define GL_TEXTURE26_ARB 0x84DA
#endif
#ifndef GL_TEXTURE27_ARB
#  define GL_TEXTURE27_ARB 0x84DB
#endif
#ifndef GL_TEXTURE28_ARB
#  define GL_TEXTURE28_ARB 0x84DC
#endif
#ifndef GL_TEXTURE29_ARB
#  define GL_TEXTURE29_ARB 0x84DD
#endif
#ifndef GL_TEXTURE30_ARB
#  define GL_TEXTURE30_ARB 0x84DE
#endif
#ifndef GL_TEXTURE31_ARB
#  define GL_TEXTURE31_ARB 0x84DF
#endif
#ifndef GL_ACTIVE_TEXTURE_ARB
#  define GL_ACTIVE_TEXTURE_ARB 0x84E0
#endif
#ifndef GL_CLIENT_ACTIVE_TEXTURE_ARB
#  define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
#endif
#ifndef GL_MAX_TEXTURE_UNITS_ARB
#  define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glActiveTextureARB
typedef void (APIENTRYP PFNGLUXACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
typedef void (APIENTRYP PFNGLUXCLIENTACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glActiveTextureARB
extern PFNGLUXACTIVETEXTUREARBPROC glActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
extern PFNGLUXCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
extern PFNGLUXMULTITEXCOORD1DARBPROC glMultiTexCoord1dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
extern PFNGLUXMULTITEXCOORD1DVARBPROC glMultiTexCoord1dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
extern PFNGLUXMULTITEXCOORD1FARBPROC glMultiTexCoord1fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
extern PFNGLUXMULTITEXCOORD1FVARBPROC glMultiTexCoord1fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
extern PFNGLUXMULTITEXCOORD1IARBPROC glMultiTexCoord1iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
extern PFNGLUXMULTITEXCOORD1IVARBPROC glMultiTexCoord1ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
extern PFNGLUXMULTITEXCOORD1SARBPROC glMultiTexCoord1sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
extern PFNGLUXMULTITEXCOORD1SVARBPROC glMultiTexCoord1svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
extern PFNGLUXMULTITEXCOORD2DARBPROC glMultiTexCoord2dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
extern PFNGLUXMULTITEXCOORD2DVARBPROC glMultiTexCoord2dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
extern PFNGLUXMULTITEXCOORD2FARBPROC glMultiTexCoord2fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
extern PFNGLUXMULTITEXCOORD2FVARBPROC glMultiTexCoord2fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
extern PFNGLUXMULTITEXCOORD2IARBPROC glMultiTexCoord2iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
extern PFNGLUXMULTITEXCOORD2IVARBPROC glMultiTexCoord2ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
extern PFNGLUXMULTITEXCOORD2SARBPROC glMultiTexCoord2sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
extern PFNGLUXMULTITEXCOORD2SVARBPROC glMultiTexCoord2svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
extern PFNGLUXMULTITEXCOORD3DARBPROC glMultiTexCoord3dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
extern PFNGLUXMULTITEXCOORD3DVARBPROC glMultiTexCoord3dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
extern PFNGLUXMULTITEXCOORD3FARBPROC glMultiTexCoord3fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
extern PFNGLUXMULTITEXCOORD3FVARBPROC glMultiTexCoord3fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
extern PFNGLUXMULTITEXCOORD3IARBPROC glMultiTexCoord3iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
extern PFNGLUXMULTITEXCOORD3IVARBPROC glMultiTexCoord3ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
extern PFNGLUXMULTITEXCOORD3SARBPROC glMultiTexCoord3sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
extern PFNGLUXMULTITEXCOORD3SVARBPROC glMultiTexCoord3svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
extern PFNGLUXMULTITEXCOORD4DARBPROC glMultiTexCoord4dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
extern PFNGLUXMULTITEXCOORD4DVARBPROC glMultiTexCoord4dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
extern PFNGLUXMULTITEXCOORD4FARBPROC glMultiTexCoord4fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
extern PFNGLUXMULTITEXCOORD4FVARBPROC glMultiTexCoord4fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
extern PFNGLUXMULTITEXCOORD4IARBPROC glMultiTexCoord4iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
extern PFNGLUXMULTITEXCOORD4IVARBPROC glMultiTexCoord4ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
extern PFNGLUXMULTITEXCOORD4SARBPROC glMultiTexCoord4sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
extern PFNGLUXMULTITEXCOORD4SVARBPROC glMultiTexCoord4svARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:36:59 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_multitexture__
#define __GLUX_GL_ARB_multitexture__

GLUX_NEW_PLUGIN(GL_ARB_multitexture);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TEXTURE0_ARB
#  define GL_TEXTURE0_ARB 0x84C0
#endif
#ifndef GL_TEXTURE1_ARB
#  define GL_TEXTURE1_ARB 0x84C1
#endif
#ifndef GL_TEXTURE2_ARB
#  define GL_TEXTURE2_ARB 0x84C2
#endif
#ifndef GL_TEXTURE3_ARB
#  define GL_TEXTURE3_ARB 0x84C3
#endif
#ifndef GL_TEXTURE4_ARB
#  define GL_TEXTURE4_ARB 0x84C4
#endif
#ifndef GL_TEXTURE5_ARB
#  define GL_TEXTURE5_ARB 0x84C5
#endif
#ifndef GL_TEXTURE6_ARB
#  define GL_TEXTURE6_ARB 0x84C6
#endif
#ifndef GL_TEXTURE7_ARB
#  define GL_TEXTURE7_ARB 0x84C7
#endif
#ifndef GL_TEXTURE8_ARB
#  define GL_TEXTURE8_ARB 0x84C8
#endif
#ifndef GL_TEXTURE9_ARB
#  define GL_TEXTURE9_ARB 0x84C9
#endif
#ifndef GL_TEXTURE10_ARB
#  define GL_TEXTURE10_ARB 0x84CA
#endif
#ifndef GL_TEXTURE11_ARB
#  define GL_TEXTURE11_ARB 0x84CB
#endif
#ifndef GL_TEXTURE12_ARB
#  define GL_TEXTURE12_ARB 0x84CC
#endif
#ifndef GL_TEXTURE13_ARB
#  define GL_TEXTURE13_ARB 0x84CD
#endif
#ifndef GL_TEXTURE14_ARB
#  define GL_TEXTURE14_ARB 0x84CE
#endif
#ifndef GL_TEXTURE15_ARB
#  define GL_TEXTURE15_ARB 0x84CF
#endif
#ifndef GL_TEXTURE16_ARB
#  define GL_TEXTURE16_ARB 0x84D0
#endif
#ifndef GL_TEXTURE17_ARB
#  define GL_TEXTURE17_ARB 0x84D1
#endif
#ifndef GL_TEXTURE18_ARB
#  define GL_TEXTURE18_ARB 0x84D2
#endif
#ifndef GL_TEXTURE19_ARB
#  define GL_TEXTURE19_ARB 0x84D3
#endif
#ifndef GL_TEXTURE20_ARB
#  define GL_TEXTURE20_ARB 0x84D4
#endif
#ifndef GL_TEXTURE21_ARB
#  define GL_TEXTURE21_ARB 0x84D5
#endif
#ifndef GL_TEXTURE22_ARB
#  define GL_TEXTURE22_ARB 0x84D6
#endif
#ifndef GL_TEXTURE23_ARB
#  define GL_TEXTURE23_ARB 0x84D7
#endif
#ifndef GL_TEXTURE24_ARB
#  define GL_TEXTURE24_ARB 0x84D8
#endif
#ifndef GL_TEXTURE25_ARB
#  define GL_TEXTURE25_ARB 0x84D9
#endif
#ifndef GL_TEXTURE26_ARB
#  define GL_TEXTURE26_ARB 0x84DA
#endif
#ifndef GL_TEXTURE27_ARB
#  define GL_TEXTURE27_ARB 0x84DB
#endif
#ifndef GL_TEXTURE28_ARB
#  define GL_TEXTURE28_ARB 0x84DC
#endif
#ifndef GL_TEXTURE29_ARB
#  define GL_TEXTURE29_ARB 0x84DD
#endif
#ifndef GL_TEXTURE30_ARB
#  define GL_TEXTURE30_ARB 0x84DE
#endif
#ifndef GL_TEXTURE31_ARB
#  define GL_TEXTURE31_ARB 0x84DF
#endif
#ifndef GL_ACTIVE_TEXTURE_ARB
#  define GL_ACTIVE_TEXTURE_ARB 0x84E0
#endif
#ifndef GL_CLIENT_ACTIVE_TEXTURE_ARB
#  define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
#endif
#ifndef GL_MAX_TEXTURE_UNITS_ARB
#  define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glActiveTextureARB
typedef void (APIENTRYP PFNGLUXACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
typedef void (APIENTRYP PFNGLUXCLIENTACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glActiveTextureARB
extern PFNGLUXACTIVETEXTUREARBPROC glActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
extern PFNGLUXCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
extern PFNGLUXMULTITEXCOORD1DARBPROC glMultiTexCoord1dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
extern PFNGLUXMULTITEXCOORD1DVARBPROC glMultiTexCoord1dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
extern PFNGLUXMULTITEXCOORD1FARBPROC glMultiTexCoord1fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
extern PFNGLUXMULTITEXCOORD1FVARBPROC glMultiTexCoord1fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
extern PFNGLUXMULTITEXCOORD1IARBPROC glMultiTexCoord1iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
extern PFNGLUXMULTITEXCOORD1IVARBPROC glMultiTexCoord1ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
extern PFNGLUXMULTITEXCOORD1SARBPROC glMultiTexCoord1sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
extern PFNGLUXMULTITEXCOORD1SVARBPROC glMultiTexCoord1svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
extern PFNGLUXMULTITEXCOORD2DARBPROC glMultiTexCoord2dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
extern PFNGLUXMULTITEXCOORD2DVARBPROC glMultiTexCoord2dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
extern PFNGLUXMULTITEXCOORD2FARBPROC glMultiTexCoord2fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
extern PFNGLUXMULTITEXCOORD2FVARBPROC glMultiTexCoord2fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
extern PFNGLUXMULTITEXCOORD2IARBPROC glMultiTexCoord2iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
extern PFNGLUXMULTITEXCOORD2IVARBPROC glMultiTexCoord2ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
extern PFNGLUXMULTITEXCOORD2SARBPROC glMultiTexCoord2sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
extern PFNGLUXMULTITEXCOORD2SVARBPROC glMultiTexCoord2svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
extern PFNGLUXMULTITEXCOORD3DARBPROC glMultiTexCoord3dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
extern PFNGLUXMULTITEXCOORD3DVARBPROC glMultiTexCoord3dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
extern PFNGLUXMULTITEXCOORD3FARBPROC glMultiTexCoord3fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
extern PFNGLUXMULTITEXCOORD3FVARBPROC glMultiTexCoord3fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
extern PFNGLUXMULTITEXCOORD3IARBPROC glMultiTexCoord3iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
extern PFNGLUXMULTITEXCOORD3IVARBPROC glMultiTexCoord3ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
extern PFNGLUXMULTITEXCOORD3SARBPROC glMultiTexCoord3sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
extern PFNGLUXMULTITEXCOORD3SVARBPROC glMultiTexCoord3svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
extern PFNGLUXMULTITEXCOORD4DARBPROC glMultiTexCoord4dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
extern PFNGLUXMULTITEXCOORD4DVARBPROC glMultiTexCoord4dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
extern PFNGLUXMULTITEXCOORD4FARBPROC glMultiTexCoord4fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
extern PFNGLUXMULTITEXCOORD4FVARBPROC glMultiTexCoord4fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
extern PFNGLUXMULTITEXCOORD4IARBPROC glMultiTexCoord4iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
extern PFNGLUXMULTITEXCOORD4IVARBPROC glMultiTexCoord4ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
extern PFNGLUXMULTITEXCOORD4SARBPROC glMultiTexCoord4sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
extern PFNGLUXMULTITEXCOORD4SVARBPROC glMultiTexCoord4svARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:08 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_multitexture__
#define __GLUX_GL_ARB_multitexture__

GLUX_NEW_PLUGIN(GL_ARB_multitexture);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TEXTURE0_ARB
#  define GL_TEXTURE0_ARB 0x84C0
#endif
#ifndef GL_TEXTURE1_ARB
#  define GL_TEXTURE1_ARB 0x84C1
#endif
#ifndef GL_TEXTURE2_ARB
#  define GL_TEXTURE2_ARB 0x84C2
#endif
#ifndef GL_TEXTURE3_ARB
#  define GL_TEXTURE3_ARB 0x84C3
#endif
#ifndef GL_TEXTURE4_ARB
#  define GL_TEXTURE4_ARB 0x84C4
#endif
#ifndef GL_TEXTURE5_ARB
#  define GL_TEXTURE5_ARB 0x84C5
#endif
#ifndef GL_TEXTURE6_ARB
#  define GL_TEXTURE6_ARB 0x84C6
#endif
#ifndef GL_TEXTURE7_ARB
#  define GL_TEXTURE7_ARB 0x84C7
#endif
#ifndef GL_TEXTURE8_ARB
#  define GL_TEXTURE8_ARB 0x84C8
#endif
#ifndef GL_TEXTURE9_ARB
#  define GL_TEXTURE9_ARB 0x84C9
#endif
#ifndef GL_TEXTURE10_ARB
#  define GL_TEXTURE10_ARB 0x84CA
#endif
#ifndef GL_TEXTURE11_ARB
#  define GL_TEXTURE11_ARB 0x84CB
#endif
#ifndef GL_TEXTURE12_ARB
#  define GL_TEXTURE12_ARB 0x84CC
#endif
#ifndef GL_TEXTURE13_ARB
#  define GL_TEXTURE13_ARB 0x84CD
#endif
#ifndef GL_TEXTURE14_ARB
#  define GL_TEXTURE14_ARB 0x84CE
#endif
#ifndef GL_TEXTURE15_ARB
#  define GL_TEXTURE15_ARB 0x84CF
#endif
#ifndef GL_TEXTURE16_ARB
#  define GL_TEXTURE16_ARB 0x84D0
#endif
#ifndef GL_TEXTURE17_ARB
#  define GL_TEXTURE17_ARB 0x84D1
#endif
#ifndef GL_TEXTURE18_ARB
#  define GL_TEXTURE18_ARB 0x84D2
#endif
#ifndef GL_TEXTURE19_ARB
#  define GL_TEXTURE19_ARB 0x84D3
#endif
#ifndef GL_TEXTURE20_ARB
#  define GL_TEXTURE20_ARB 0x84D4
#endif
#ifndef GL_TEXTURE21_ARB
#  define GL_TEXTURE21_ARB 0x84D5
#endif
#ifndef GL_TEXTURE22_ARB
#  define GL_TEXTURE22_ARB 0x84D6
#endif
#ifndef GL_TEXTURE23_ARB
#  define GL_TEXTURE23_ARB 0x84D7
#endif
#ifndef GL_TEXTURE24_ARB
#  define GL_TEXTURE24_ARB 0x84D8
#endif
#ifndef GL_TEXTURE25_ARB
#  define GL_TEXTURE25_ARB 0x84D9
#endif
#ifndef GL_TEXTURE26_ARB
#  define GL_TEXTURE26_ARB 0x84DA
#endif
#ifndef GL_TEXTURE27_ARB
#  define GL_TEXTURE27_ARB 0x84DB
#endif
#ifndef GL_TEXTURE28_ARB
#  define GL_TEXTURE28_ARB 0x84DC
#endif
#ifndef GL_TEXTURE29_ARB
#  define GL_TEXTURE29_ARB 0x84DD
#endif
#ifndef GL_TEXTURE30_ARB
#  define GL_TEXTURE30_ARB 0x84DE
#endif
#ifndef GL_TEXTURE31_ARB
#  define GL_TEXTURE31_ARB 0x84DF
#endif
#ifndef GL_ACTIVE_TEXTURE_ARB
#  define GL_ACTIVE_TEXTURE_ARB 0x84E0
#endif
#ifndef GL_CLIENT_ACTIVE_TEXTURE_ARB
#  define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
#endif
#ifndef GL_MAX_TEXTURE_UNITS_ARB
#  define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glActiveTextureARB
typedef void (APIENTRYP PFNGLUXACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
typedef void (APIENTRYP PFNGLUXCLIENTACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glActiveTextureARB
extern PFNGLUXACTIVETEXTUREARBPROC glActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
extern PFNGLUXCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
extern PFNGLUXMULTITEXCOORD1DARBPROC glMultiTexCoord1dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
extern PFNGLUXMULTITEXCOORD1DVARBPROC glMultiTexCoord1dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
extern PFNGLUXMULTITEXCOORD1FARBPROC glMultiTexCoord1fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
extern PFNGLUXMULTITEXCOORD1FVARBPROC glMultiTexCoord1fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
extern PFNGLUXMULTITEXCOORD1IARBPROC glMultiTexCoord1iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
extern PFNGLUXMULTITEXCOORD1IVARBPROC glMultiTexCoord1ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
extern PFNGLUXMULTITEXCOORD1SARBPROC glMultiTexCoord1sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
extern PFNGLUXMULTITEXCOORD1SVARBPROC glMultiTexCoord1svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
extern PFNGLUXMULTITEXCOORD2DARBPROC glMultiTexCoord2dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
extern PFNGLUXMULTITEXCOORD2DVARBPROC glMultiTexCoord2dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
extern PFNGLUXMULTITEXCOORD2FARBPROC glMultiTexCoord2fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
extern PFNGLUXMULTITEXCOORD2FVARBPROC glMultiTexCoord2fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
extern PFNGLUXMULTITEXCOORD2IARBPROC glMultiTexCoord2iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
extern PFNGLUXMULTITEXCOORD2IVARBPROC glMultiTexCoord2ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
extern PFNGLUXMULTITEXCOORD2SARBPROC glMultiTexCoord2sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
extern PFNGLUXMULTITEXCOORD2SVARBPROC glMultiTexCoord2svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
extern PFNGLUXMULTITEXCOORD3DARBPROC glMultiTexCoord3dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
extern PFNGLUXMULTITEXCOORD3DVARBPROC glMultiTexCoord3dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
extern PFNGLUXMULTITEXCOORD3FARBPROC glMultiTexCoord3fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
extern PFNGLUXMULTITEXCOORD3FVARBPROC glMultiTexCoord3fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
extern PFNGLUXMULTITEXCOORD3IARBPROC glMultiTexCoord3iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
extern PFNGLUXMULTITEXCOORD3IVARBPROC glMultiTexCoord3ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
extern PFNGLUXMULTITEXCOORD3SARBPROC glMultiTexCoord3sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
extern PFNGLUXMULTITEXCOORD3SVARBPROC glMultiTexCoord3svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
extern PFNGLUXMULTITEXCOORD4DARBPROC glMultiTexCoord4dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
extern PFNGLUXMULTITEXCOORD4DVARBPROC glMultiTexCoord4dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
extern PFNGLUXMULTITEXCOORD4FARBPROC glMultiTexCoord4fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
extern PFNGLUXMULTITEXCOORD4FVARBPROC glMultiTexCoord4fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
extern PFNGLUXMULTITEXCOORD4IARBPROC glMultiTexCoord4iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
extern PFNGLUXMULTITEXCOORD4IVARBPROC glMultiTexCoord4ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
extern PFNGLUXMULTITEXCOORD4SARBPROC glMultiTexCoord4sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
extern PFNGLUXMULTITEXCOORD4SVARBPROC glMultiTexCoord4svARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:19 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_multitexture__
#define __GLUX_GL_ARB_multitexture__

GLUX_NEW_PLUGIN(GL_ARB_multitexture);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TEXTURE0_ARB
#  define GL_TEXTURE0_ARB 0x84C0
#endif
#ifndef GL_TEXTURE1_ARB
#  define GL_TEXTURE1_ARB 0x84C1
#endif
#ifndef GL_TEXTURE2_ARB
#  define GL_TEXTURE2_ARB 0x84C2
#endif
#ifndef GL_TEXTURE3_ARB
#  define GL_TEXTURE3_ARB 0x84C3
#endif
#ifndef GL_TEXTURE4_ARB
#  define GL_TEXTURE4_ARB 0x84C4
#endif
#ifndef GL_TEXTURE5_ARB
#  define GL_TEXTURE5_ARB 0x84C5
#endif
#ifndef GL_TEXTURE6_ARB
#  define GL_TEXTURE6_ARB 0x84C6
#endif
#ifndef GL_TEXTURE7_ARB
#  define GL_TEXTURE7_ARB 0x84C7
#endif
#ifndef GL_TEXTURE8_ARB
#  define GL_TEXTURE8_ARB 0x84C8
#endif
#ifndef GL_TEXTURE9_ARB
#  define GL_TEXTURE9_ARB 0x84C9
#endif
#ifndef GL_TEXTURE10_ARB
#  define GL_TEXTURE10_ARB 0x84CA
#endif
#ifndef GL_TEXTURE11_ARB
#  define GL_TEXTURE11_ARB 0x84CB
#endif
#ifndef GL_TEXTURE12_ARB
#  define GL_TEXTURE12_ARB 0x84CC
#endif
#ifndef GL_TEXTURE13_ARB
#  define GL_TEXTURE13_ARB 0x84CD
#endif
#ifndef GL_TEXTURE14_ARB
#  define GL_TEXTURE14_ARB 0x84CE
#endif
#ifndef GL_TEXTURE15_ARB
#  define GL_TEXTURE15_ARB 0x84CF
#endif
#ifndef GL_TEXTURE16_ARB
#  define GL_TEXTURE16_ARB 0x84D0
#endif
#ifndef GL_TEXTURE17_ARB
#  define GL_TEXTURE17_ARB 0x84D1
#endif
#ifndef GL_TEXTURE18_ARB
#  define GL_TEXTURE18_ARB 0x84D2
#endif
#ifndef GL_TEXTURE19_ARB
#  define GL_TEXTURE19_ARB 0x84D3
#endif
#ifndef GL_TEXTURE20_ARB
#  define GL_TEXTURE20_ARB 0x84D4
#endif
#ifndef GL_TEXTURE21_ARB
#  define GL_TEXTURE21_ARB 0x84D5
#endif
#ifndef GL_TEXTURE22_ARB
#  define GL_TEXTURE22_ARB 0x84D6
#endif
#ifndef GL_TEXTURE23_ARB
#  define GL_TEXTURE23_ARB 0x84D7
#endif
#ifndef GL_TEXTURE24_ARB
#  define GL_TEXTURE24_ARB 0x84D8
#endif
#ifndef GL_TEXTURE25_ARB
#  define GL_TEXTURE25_ARB 0x84D9
#endif
#ifndef GL_TEXTURE26_ARB
#  define GL_TEXTURE26_ARB 0x84DA
#endif
#ifndef GL_TEXTURE27_ARB
#  define GL_TEXTURE27_ARB 0x84DB
#endif
#ifndef GL_TEXTURE28_ARB
#  define GL_TEXTURE28_ARB 0x84DC
#endif
#ifndef GL_TEXTURE29_ARB
#  define GL_TEXTURE29_ARB 0x84DD
#endif
#ifndef GL_TEXTURE30_ARB
#  define GL_TEXTURE30_ARB 0x84DE
#endif
#ifndef GL_TEXTURE31_ARB
#  define GL_TEXTURE31_ARB 0x84DF
#endif
#ifndef GL_ACTIVE_TEXTURE_ARB
#  define GL_ACTIVE_TEXTURE_ARB 0x84E0
#endif
#ifndef GL_CLIENT_ACTIVE_TEXTURE_ARB
#  define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
#endif
#ifndef GL_MAX_TEXTURE_UNITS_ARB
#  define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glActiveTextureARB
typedef void (APIENTRYP PFNGLUXACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
typedef void (APIENTRYP PFNGLUXCLIENTACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glActiveTextureARB
extern PFNGLUXACTIVETEXTUREARBPROC glActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
extern PFNGLUXCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
extern PFNGLUXMULTITEXCOORD1DARBPROC glMultiTexCoord1dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
extern PFNGLUXMULTITEXCOORD1DVARBPROC glMultiTexCoord1dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
extern PFNGLUXMULTITEXCOORD1FARBPROC glMultiTexCoord1fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
extern PFNGLUXMULTITEXCOORD1FVARBPROC glMultiTexCoord1fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
extern PFNGLUXMULTITEXCOORD1IARBPROC glMultiTexCoord1iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
extern PFNGLUXMULTITEXCOORD1IVARBPROC glMultiTexCoord1ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
extern PFNGLUXMULTITEXCOORD1SARBPROC glMultiTexCoord1sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
extern PFNGLUXMULTITEXCOORD1SVARBPROC glMultiTexCoord1svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
extern PFNGLUXMULTITEXCOORD2DARBPROC glMultiTexCoord2dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
extern PFNGLUXMULTITEXCOORD2DVARBPROC glMultiTexCoord2dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
extern PFNGLUXMULTITEXCOORD2FARBPROC glMultiTexCoord2fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
extern PFNGLUXMULTITEXCOORD2FVARBPROC glMultiTexCoord2fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
extern PFNGLUXMULTITEXCOORD2IARBPROC glMultiTexCoord2iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
extern PFNGLUXMULTITEXCOORD2IVARBPROC glMultiTexCoord2ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
extern PFNGLUXMULTITEXCOORD2SARBPROC glMultiTexCoord2sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
extern PFNGLUXMULTITEXCOORD2SVARBPROC glMultiTexCoord2svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
extern PFNGLUXMULTITEXCOORD3DARBPROC glMultiTexCoord3dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
extern PFNGLUXMULTITEXCOORD3DVARBPROC glMultiTexCoord3dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
extern PFNGLUXMULTITEXCOORD3FARBPROC glMultiTexCoord3fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
extern PFNGLUXMULTITEXCOORD3FVARBPROC glMultiTexCoord3fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
extern PFNGLUXMULTITEXCOORD3IARBPROC glMultiTexCoord3iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
extern PFNGLUXMULTITEXCOORD3IVARBPROC glMultiTexCoord3ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
extern PFNGLUXMULTITEXCOORD3SARBPROC glMultiTexCoord3sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
extern PFNGLUXMULTITEXCOORD3SVARBPROC glMultiTexCoord3svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
extern PFNGLUXMULTITEXCOORD4DARBPROC glMultiTexCoord4dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
extern PFNGLUXMULTITEXCOORD4DVARBPROC glMultiTexCoord4dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
extern PFNGLUXMULTITEXCOORD4FARBPROC glMultiTexCoord4fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
extern PFNGLUXMULTITEXCOORD4FVARBPROC glMultiTexCoord4fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
extern PFNGLUXMULTITEXCOORD4IARBPROC glMultiTexCoord4iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
extern PFNGLUXMULTITEXCOORD4IVARBPROC glMultiTexCoord4ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
extern PFNGLUXMULTITEXCOORD4SARBPROC glMultiTexCoord4sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
extern PFNGLUXMULTITEXCOORD4SVARBPROC glMultiTexCoord4svARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:51:57 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_multitexture__
#define __GLUX_GL_ARB_multitexture__

GLUX_NEW_PLUGIN(GL_ARB_multitexture);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TEXTURE0_ARB
#  define GL_TEXTURE0_ARB 0x84C0
#endif
#ifndef GL_TEXTURE1_ARB
#  define GL_TEXTURE1_ARB 0x84C1
#endif
#ifndef GL_TEXTURE2_ARB
#  define GL_TEXTURE2_ARB 0x84C2
#endif
#ifndef GL_TEXTURE3_ARB
#  define GL_TEXTURE3_ARB 0x84C3
#endif
#ifndef GL_TEXTURE4_ARB
#  define GL_TEXTURE4_ARB 0x84C4
#endif
#ifndef GL_TEXTURE5_ARB
#  define GL_TEXTURE5_ARB 0x84C5
#endif
#ifndef GL_TEXTURE6_ARB
#  define GL_TEXTURE6_ARB 0x84C6
#endif
#ifndef GL_TEXTURE7_ARB
#  define GL_TEXTURE7_ARB 0x84C7
#endif
#ifndef GL_TEXTURE8_ARB
#  define GL_TEXTURE8_ARB 0x84C8
#endif
#ifndef GL_TEXTURE9_ARB
#  define GL_TEXTURE9_ARB 0x84C9
#endif
#ifndef GL_TEXTURE10_ARB
#  define GL_TEXTURE10_ARB 0x84CA
#endif
#ifndef GL_TEXTURE11_ARB
#  define GL_TEXTURE11_ARB 0x84CB
#endif
#ifndef GL_TEXTURE12_ARB
#  define GL_TEXTURE12_ARB 0x84CC
#endif
#ifndef GL_TEXTURE13_ARB
#  define GL_TEXTURE13_ARB 0x84CD
#endif
#ifndef GL_TEXTURE14_ARB
#  define GL_TEXTURE14_ARB 0x84CE
#endif
#ifndef GL_TEXTURE15_ARB
#  define GL_TEXTURE15_ARB 0x84CF
#endif
#ifndef GL_TEXTURE16_ARB
#  define GL_TEXTURE16_ARB 0x84D0
#endif
#ifndef GL_TEXTURE17_ARB
#  define GL_TEXTURE17_ARB 0x84D1
#endif
#ifndef GL_TEXTURE18_ARB
#  define GL_TEXTURE18_ARB 0x84D2
#endif
#ifndef GL_TEXTURE19_ARB
#  define GL_TEXTURE19_ARB 0x84D3
#endif
#ifndef GL_TEXTURE20_ARB
#  define GL_TEXTURE20_ARB 0x84D4
#endif
#ifndef GL_TEXTURE21_ARB
#  define GL_TEXTURE21_ARB 0x84D5
#endif
#ifndef GL_TEXTURE22_ARB
#  define GL_TEXTURE22_ARB 0x84D6
#endif
#ifndef GL_TEXTURE23_ARB
#  define GL_TEXTURE23_ARB 0x84D7
#endif
#ifndef GL_TEXTURE24_ARB
#  define GL_TEXTURE24_ARB 0x84D8
#endif
#ifndef GL_TEXTURE25_ARB
#  define GL_TEXTURE25_ARB 0x84D9
#endif
#ifndef GL_TEXTURE26_ARB
#  define GL_TEXTURE26_ARB 0x84DA
#endif
#ifndef GL_TEXTURE27_ARB
#  define GL_TEXTURE27_ARB 0x84DB
#endif
#ifndef GL_TEXTURE28_ARB
#  define GL_TEXTURE28_ARB 0x84DC
#endif
#ifndef GL_TEXTURE29_ARB
#  define GL_TEXTURE29_ARB 0x84DD
#endif
#ifndef GL_TEXTURE30_ARB
#  define GL_TEXTURE30_ARB 0x84DE
#endif
#ifndef GL_TEXTURE31_ARB
#  define GL_TEXTURE31_ARB 0x84DF
#endif
#ifndef GL_ACTIVE_TEXTURE_ARB
#  define GL_ACTIVE_TEXTURE_ARB 0x84E0
#endif
#ifndef GL_CLIENT_ACTIVE_TEXTURE_ARB
#  define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
#endif
#ifndef GL_MAX_TEXTURE_UNITS_ARB
#  define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glActiveTextureARB
typedef void (APIENTRYP PFNGLUXACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
typedef void (APIENTRYP PFNGLUXCLIENTACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glActiveTextureARB
extern PFNGLUXACTIVETEXTUREARBPROC glActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
extern PFNGLUXCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
extern PFNGLUXMULTITEXCOORD1DARBPROC glMultiTexCoord1dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
extern PFNGLUXMULTITEXCOORD1DVARBPROC glMultiTexCoord1dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
extern PFNGLUXMULTITEXCOORD1FARBPROC glMultiTexCoord1fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
extern PFNGLUXMULTITEXCOORD1FVARBPROC glMultiTexCoord1fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
extern PFNGLUXMULTITEXCOORD1IARBPROC glMultiTexCoord1iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
extern PFNGLUXMULTITEXCOORD1IVARBPROC glMultiTexCoord1ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
extern PFNGLUXMULTITEXCOORD1SARBPROC glMultiTexCoord1sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
extern PFNGLUXMULTITEXCOORD1SVARBPROC glMultiTexCoord1svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
extern PFNGLUXMULTITEXCOORD2DARBPROC glMultiTexCoord2dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
extern PFNGLUXMULTITEXCOORD2DVARBPROC glMultiTexCoord2dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
extern PFNGLUXMULTITEXCOORD2FARBPROC glMultiTexCoord2fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
extern PFNGLUXMULTITEXCOORD2FVARBPROC glMultiTexCoord2fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
extern PFNGLUXMULTITEXCOORD2IARBPROC glMultiTexCoord2iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
extern PFNGLUXMULTITEXCOORD2IVARBPROC glMultiTexCoord2ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
extern PFNGLUXMULTITEXCOORD2SARBPROC glMultiTexCoord2sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
extern PFNGLUXMULTITEXCOORD2SVARBPROC glMultiTexCoord2svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
extern PFNGLUXMULTITEXCOORD3DARBPROC glMultiTexCoord3dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
extern PFNGLUXMULTITEXCOORD3DVARBPROC glMultiTexCoord3dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
extern PFNGLUXMULTITEXCOORD3FARBPROC glMultiTexCoord3fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
extern PFNGLUXMULTITEXCOORD3FVARBPROC glMultiTexCoord3fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
extern PFNGLUXMULTITEXCOORD3IARBPROC glMultiTexCoord3iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
extern PFNGLUXMULTITEXCOORD3IVARBPROC glMultiTexCoord3ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
extern PFNGLUXMULTITEXCOORD3SARBPROC glMultiTexCoord3sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
extern PFNGLUXMULTITEXCOORD3SVARBPROC glMultiTexCoord3svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
extern PFNGLUXMULTITEXCOORD4DARBPROC glMultiTexCoord4dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
extern PFNGLUXMULTITEXCOORD4DVARBPROC glMultiTexCoord4dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
extern PFNGLUXMULTITEXCOORD4FARBPROC glMultiTexCoord4fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
extern PFNGLUXMULTITEXCOORD4FVARBPROC glMultiTexCoord4fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
extern PFNGLUXMULTITEXCOORD4IARBPROC glMultiTexCoord4iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
extern PFNGLUXMULTITEXCOORD4IVARBPROC glMultiTexCoord4ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
extern PFNGLUXMULTITEXCOORD4SARBPROC glMultiTexCoord4sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
extern PFNGLUXMULTITEXCOORD4SVARBPROC glMultiTexCoord4svARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_multitexture__
#define __GLUX_GL_ARB_multitexture__

GLUX_NEW_PLUGIN(GL_ARB_multitexture);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TEXTURE0_ARB
#  define GL_TEXTURE0_ARB 0x84C0
#endif
#ifndef GL_TEXTURE1_ARB
#  define GL_TEXTURE1_ARB 0x84C1
#endif
#ifndef GL_TEXTURE2_ARB
#  define GL_TEXTURE2_ARB 0x84C2
#endif
#ifndef GL_TEXTURE3_ARB
#  define GL_TEXTURE3_ARB 0x84C3
#endif
#ifndef GL_TEXTURE4_ARB
#  define GL_TEXTURE4_ARB 0x84C4
#endif
#ifndef GL_TEXTURE5_ARB
#  define GL_TEXTURE5_ARB 0x84C5
#endif
#ifndef GL_TEXTURE6_ARB
#  define GL_TEXTURE6_ARB 0x84C6
#endif
#ifndef GL_TEXTURE7_ARB
#  define GL_TEXTURE7_ARB 0x84C7
#endif
#ifndef GL_TEXTURE8_ARB
#  define GL_TEXTURE8_ARB 0x84C8
#endif
#ifndef GL_TEXTURE9_ARB
#  define GL_TEXTURE9_ARB 0x84C9
#endif
#ifndef GL_TEXTURE10_ARB
#  define GL_TEXTURE10_ARB 0x84CA
#endif
#ifndef GL_TEXTURE11_ARB
#  define GL_TEXTURE11_ARB 0x84CB
#endif
#ifndef GL_TEXTURE12_ARB
#  define GL_TEXTURE12_ARB 0x84CC
#endif
#ifndef GL_TEXTURE13_ARB
#  define GL_TEXTURE13_ARB 0x84CD
#endif
#ifndef GL_TEXTURE14_ARB
#  define GL_TEXTURE14_ARB 0x84CE
#endif
#ifndef GL_TEXTURE15_ARB
#  define GL_TEXTURE15_ARB 0x84CF
#endif
#ifndef GL_TEXTURE16_ARB
#  define GL_TEXTURE16_ARB 0x84D0
#endif
#ifndef GL_TEXTURE17_ARB
#  define GL_TEXTURE17_ARB 0x84D1
#endif
#ifndef GL_TEXTURE18_ARB
#  define GL_TEXTURE18_ARB 0x84D2
#endif
#ifndef GL_TEXTURE19_ARB
#  define GL_TEXTURE19_ARB 0x84D3
#endif
#ifndef GL_TEXTURE20_ARB
#  define GL_TEXTURE20_ARB 0x84D4
#endif
#ifndef GL_TEXTURE21_ARB
#  define GL_TEXTURE21_ARB 0x84D5
#endif
#ifndef GL_TEXTURE22_ARB
#  define GL_TEXTURE22_ARB 0x84D6
#endif
#ifndef GL_TEXTURE23_ARB
#  define GL_TEXTURE23_ARB 0x84D7
#endif
#ifndef GL_TEXTURE24_ARB
#  define GL_TEXTURE24_ARB 0x84D8
#endif
#ifndef GL_TEXTURE25_ARB
#  define GL_TEXTURE25_ARB 0x84D9
#endif
#ifndef GL_TEXTURE26_ARB
#  define GL_TEXTURE26_ARB 0x84DA
#endif
#ifndef GL_TEXTURE27_ARB
#  define GL_TEXTURE27_ARB 0x84DB
#endif
#ifndef GL_TEXTURE28_ARB
#  define GL_TEXTURE28_ARB 0x84DC
#endif
#ifndef GL_TEXTURE29_ARB
#  define GL_TEXTURE29_ARB 0x84DD
#endif
#ifndef GL_TEXTURE30_ARB
#  define GL_TEXTURE30_ARB 0x84DE
#endif
#ifndef GL_TEXTURE31_ARB
#  define GL_TEXTURE31_ARB 0x84DF
#endif
#ifndef GL_ACTIVE_TEXTURE_ARB
#  define GL_ACTIVE_TEXTURE_ARB 0x84E0
#endif
#ifndef GL_CLIENT_ACTIVE_TEXTURE_ARB
#  define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
#endif
#ifndef GL_MAX_TEXTURE_UNITS_ARB
#  define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glActiveTextureARB
typedef void (APIENTRYP PFNGLUXACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
typedef void (APIENTRYP PFNGLUXCLIENTACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glActiveTextureARB
extern PFNGLUXACTIVETEXTUREARBPROC glActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
extern PFNGLUXCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
extern PFNGLUXMULTITEXCOORD1DARBPROC glMultiTexCoord1dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
extern PFNGLUXMULTITEXCOORD1DVARBPROC glMultiTexCoord1dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
extern PFNGLUXMULTITEXCOORD1FARBPROC glMultiTexCoord1fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
extern PFNGLUXMULTITEXCOORD1FVARBPROC glMultiTexCoord1fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
extern PFNGLUXMULTITEXCOORD1IARBPROC glMultiTexCoord1iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
extern PFNGLUXMULTITEXCOORD1IVARBPROC glMultiTexCoord1ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
extern PFNGLUXMULTITEXCOORD1SARBPROC glMultiTexCoord1sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
extern PFNGLUXMULTITEXCOORD1SVARBPROC glMultiTexCoord1svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
extern PFNGLUXMULTITEXCOORD2DARBPROC glMultiTexCoord2dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
extern PFNGLUXMULTITEXCOORD2DVARBPROC glMultiTexCoord2dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
extern PFNGLUXMULTITEXCOORD2FARBPROC glMultiTexCoord2fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
extern PFNGLUXMULTITEXCOORD2FVARBPROC glMultiTexCoord2fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
extern PFNGLUXMULTITEXCOORD2IARBPROC glMultiTexCoord2iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
extern PFNGLUXMULTITEXCOORD2IVARBPROC glMultiTexCoord2ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
extern PFNGLUXMULTITEXCOORD2SARBPROC glMultiTexCoord2sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
extern PFNGLUXMULTITEXCOORD2SVARBPROC glMultiTexCoord2svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
extern PFNGLUXMULTITEXCOORD3DARBPROC glMultiTexCoord3dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
extern PFNGLUXMULTITEXCOORD3DVARBPROC glMultiTexCoord3dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
extern PFNGLUXMULTITEXCOORD3FARBPROC glMultiTexCoord3fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
extern PFNGLUXMULTITEXCOORD3FVARBPROC glMultiTexCoord3fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
extern PFNGLUXMULTITEXCOORD3IARBPROC glMultiTexCoord3iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
extern PFNGLUXMULTITEXCOORD3IVARBPROC glMultiTexCoord3ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
extern PFNGLUXMULTITEXCOORD3SARBPROC glMultiTexCoord3sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
extern PFNGLUXMULTITEXCOORD3SVARBPROC glMultiTexCoord3svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
extern PFNGLUXMULTITEXCOORD4DARBPROC glMultiTexCoord4dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
extern PFNGLUXMULTITEXCOORD4DVARBPROC glMultiTexCoord4dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
extern PFNGLUXMULTITEXCOORD4FARBPROC glMultiTexCoord4fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
extern PFNGLUXMULTITEXCOORD4FVARBPROC glMultiTexCoord4fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
extern PFNGLUXMULTITEXCOORD4IARBPROC glMultiTexCoord4iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
extern PFNGLUXMULTITEXCOORD4IVARBPROC glMultiTexCoord4ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
extern PFNGLUXMULTITEXCOORD4SARBPROC glMultiTexCoord4sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
extern PFNGLUXMULTITEXCOORD4SVARBPROC glMultiTexCoord4svARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:01 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_multitexture__
#define __GLUX_GL_ARB_multitexture__

GLUX_NEW_PLUGIN(GL_ARB_multitexture);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TEXTURE0_ARB
#  define GL_TEXTURE0_ARB 0x84C0
#endif
#ifndef GL_TEXTURE1_ARB
#  define GL_TEXTURE1_ARB 0x84C1
#endif
#ifndef GL_TEXTURE2_ARB
#  define GL_TEXTURE2_ARB 0x84C2
#endif
#ifndef GL_TEXTURE3_ARB
#  define GL_TEXTURE3_ARB 0x84C3
#endif
#ifndef GL_TEXTURE4_ARB
#  define GL_TEXTURE4_ARB 0x84C4
#endif
#ifndef GL_TEXTURE5_ARB
#  define GL_TEXTURE5_ARB 0x84C5
#endif
#ifndef GL_TEXTURE6_ARB
#  define GL_TEXTURE6_ARB 0x84C6
#endif
#ifndef GL_TEXTURE7_ARB
#  define GL_TEXTURE7_ARB 0x84C7
#endif
#ifndef GL_TEXTURE8_ARB
#  define GL_TEXTURE8_ARB 0x84C8
#endif
#ifndef GL_TEXTURE9_ARB
#  define GL_TEXTURE9_ARB 0x84C9
#endif
#ifndef GL_TEXTURE10_ARB
#  define GL_TEXTURE10_ARB 0x84CA
#endif
#ifndef GL_TEXTURE11_ARB
#  define GL_TEXTURE11_ARB 0x84CB
#endif
#ifndef GL_TEXTURE12_ARB
#  define GL_TEXTURE12_ARB 0x84CC
#endif
#ifndef GL_TEXTURE13_ARB
#  define GL_TEXTURE13_ARB 0x84CD
#endif
#ifndef GL_TEXTURE14_ARB
#  define GL_TEXTURE14_ARB 0x84CE
#endif
#ifndef GL_TEXTURE15_ARB
#  define GL_TEXTURE15_ARB 0x84CF
#endif
#ifndef GL_TEXTURE16_ARB
#  define GL_TEXTURE16_ARB 0x84D0
#endif
#ifndef GL_TEXTURE17_ARB
#  define GL_TEXTURE17_ARB 0x84D1
#endif
#ifndef GL_TEXTURE18_ARB
#  define GL_TEXTURE18_ARB 0x84D2
#endif
#ifndef GL_TEXTURE19_ARB
#  define GL_TEXTURE19_ARB 0x84D3
#endif
#ifndef GL_TEXTURE20_ARB
#  define GL_TEXTURE20_ARB 0x84D4
#endif
#ifndef GL_TEXTURE21_ARB
#  define GL_TEXTURE21_ARB 0x84D5
#endif
#ifndef GL_TEXTURE22_ARB
#  define GL_TEXTURE22_ARB 0x84D6
#endif
#ifndef GL_TEXTURE23_ARB
#  define GL_TEXTURE23_ARB 0x84D7
#endif
#ifndef GL_TEXTURE24_ARB
#  define GL_TEXTURE24_ARB 0x84D8
#endif
#ifndef GL_TEXTURE25_ARB
#  define GL_TEXTURE25_ARB 0x84D9
#endif
#ifndef GL_TEXTURE26_ARB
#  define GL_TEXTURE26_ARB 0x84DA
#endif
#ifndef GL_TEXTURE27_ARB
#  define GL_TEXTURE27_ARB 0x84DB
#endif
#ifndef GL_TEXTURE28_ARB
#  define GL_TEXTURE28_ARB 0x84DC
#endif
#ifndef GL_TEXTURE29_ARB
#  define GL_TEXTURE29_ARB 0x84DD
#endif
#ifndef GL_TEXTURE30_ARB
#  define GL_TEXTURE30_ARB 0x84DE
#endif
#ifndef GL_TEXTURE31_ARB
#  define GL_TEXTURE31_ARB 0x84DF
#endif
#ifndef GL_ACTIVE_TEXTURE_ARB
#  define GL_ACTIVE_TEXTURE_ARB 0x84E0
#endif
#ifndef GL_CLIENT_ACTIVE_TEXTURE_ARB
#  define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
#endif
#ifndef GL_MAX_TEXTURE_UNITS_ARB
#  define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glActiveTextureARB
typedef void (APIENTRYP PFNGLUXACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
typedef void (APIENTRYP PFNGLUXCLIENTACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glActiveTextureARB
extern PFNGLUXACTIVETEXTUREARBPROC glActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
extern PFNGLUXCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
extern PFNGLUXMULTITEXCOORD1DARBPROC glMultiTexCoord1dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
extern PFNGLUXMULTITEXCOORD1DVARBPROC glMultiTexCoord1dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
extern PFNGLUXMULTITEXCOORD1FARBPROC glMultiTexCoord1fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
extern PFNGLUXMULTITEXCOORD1FVARBPROC glMultiTexCoord1fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
extern PFNGLUXMULTITEXCOORD1IARBPROC glMultiTexCoord1iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
extern PFNGLUXMULTITEXCOORD1IVARBPROC glMultiTexCoord1ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
extern PFNGLUXMULTITEXCOORD1SARBPROC glMultiTexCoord1sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
extern PFNGLUXMULTITEXCOORD1SVARBPROC glMultiTexCoord1svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
extern PFNGLUXMULTITEXCOORD2DARBPROC glMultiTexCoord2dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
extern PFNGLUXMULTITEXCOORD2DVARBPROC glMultiTexCoord2dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
extern PFNGLUXMULTITEXCOORD2FARBPROC glMultiTexCoord2fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
extern PFNGLUXMULTITEXCOORD2FVARBPROC glMultiTexCoord2fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
extern PFNGLUXMULTITEXCOORD2IARBPROC glMultiTexCoord2iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
extern PFNGLUXMULTITEXCOORD2IVARBPROC glMultiTexCoord2ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
extern PFNGLUXMULTITEXCOORD2SARBPROC glMultiTexCoord2sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
extern PFNGLUXMULTITEXCOORD2SVARBPROC glMultiTexCoord2svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
extern PFNGLUXMULTITEXCOORD3DARBPROC glMultiTexCoord3dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
extern PFNGLUXMULTITEXCOORD3DVARBPROC glMultiTexCoord3dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
extern PFNGLUXMULTITEXCOORD3FARBPROC glMultiTexCoord3fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
extern PFNGLUXMULTITEXCOORD3FVARBPROC glMultiTexCoord3fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
extern PFNGLUXMULTITEXCOORD3IARBPROC glMultiTexCoord3iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
extern PFNGLUXMULTITEXCOORD3IVARBPROC glMultiTexCoord3ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
extern PFNGLUXMULTITEXCOORD3SARBPROC glMultiTexCoord3sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
extern PFNGLUXMULTITEXCOORD3SVARBPROC glMultiTexCoord3svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
extern PFNGLUXMULTITEXCOORD4DARBPROC glMultiTexCoord4dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
extern PFNGLUXMULTITEXCOORD4DVARBPROC glMultiTexCoord4dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
extern PFNGLUXMULTITEXCOORD4FARBPROC glMultiTexCoord4fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
extern PFNGLUXMULTITEXCOORD4FVARBPROC glMultiTexCoord4fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
extern PFNGLUXMULTITEXCOORD4IARBPROC glMultiTexCoord4iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
extern PFNGLUXMULTITEXCOORD4IVARBPROC glMultiTexCoord4ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
extern PFNGLUXMULTITEXCOORD4SARBPROC glMultiTexCoord4sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
extern PFNGLUXMULTITEXCOORD4SVARBPROC glMultiTexCoord4svARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:21 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_multitexture__
#define __GLUX_GL_ARB_multitexture__

GLUX_NEW_PLUGIN(GL_ARB_multitexture);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TEXTURE0_ARB
#  define GL_TEXTURE0_ARB 0x84C0
#endif
#ifndef GL_TEXTURE1_ARB
#  define GL_TEXTURE1_ARB 0x84C1
#endif
#ifndef GL_TEXTURE2_ARB
#  define GL_TEXTURE2_ARB 0x84C2
#endif
#ifndef GL_TEXTURE3_ARB
#  define GL_TEXTURE3_ARB 0x84C3
#endif
#ifndef GL_TEXTURE4_ARB
#  define GL_TEXTURE4_ARB 0x84C4
#endif
#ifndef GL_TEXTURE5_ARB
#  define GL_TEXTURE5_ARB 0x84C5
#endif
#ifndef GL_TEXTURE6_ARB
#  define GL_TEXTURE6_ARB 0x84C6
#endif
#ifndef GL_TEXTURE7_ARB
#  define GL_TEXTURE7_ARB 0x84C7
#endif
#ifndef GL_TEXTURE8_ARB
#  define GL_TEXTURE8_ARB 0x84C8
#endif
#ifndef GL_TEXTURE9_ARB
#  define GL_TEXTURE9_ARB 0x84C9
#endif
#ifndef GL_TEXTURE10_ARB
#  define GL_TEXTURE10_ARB 0x84CA
#endif
#ifndef GL_TEXTURE11_ARB
#  define GL_TEXTURE11_ARB 0x84CB
#endif
#ifndef GL_TEXTURE12_ARB
#  define GL_TEXTURE12_ARB 0x84CC
#endif
#ifndef GL_TEXTURE13_ARB
#  define GL_TEXTURE13_ARB 0x84CD
#endif
#ifndef GL_TEXTURE14_ARB
#  define GL_TEXTURE14_ARB 0x84CE
#endif
#ifndef GL_TEXTURE15_ARB
#  define GL_TEXTURE15_ARB 0x84CF
#endif
#ifndef GL_TEXTURE16_ARB
#  define GL_TEXTURE16_ARB 0x84D0
#endif
#ifndef GL_TEXTURE17_ARB
#  define GL_TEXTURE17_ARB 0x84D1
#endif
#ifndef GL_TEXTURE18_ARB
#  define GL_TEXTURE18_ARB 0x84D2
#endif
#ifndef GL_TEXTURE19_ARB
#  define GL_TEXTURE19_ARB 0x84D3
#endif
#ifndef GL_TEXTURE20_ARB
#  define GL_TEXTURE20_ARB 0x84D4
#endif
#ifndef GL_TEXTURE21_ARB
#  define GL_TEXTURE21_ARB 0x84D5
#endif
#ifndef GL_TEXTURE22_ARB
#  define GL_TEXTURE22_ARB 0x84D6
#endif
#ifndef GL_TEXTURE23_ARB
#  define GL_TEXTURE23_ARB 0x84D7
#endif
#ifndef GL_TEXTURE24_ARB
#  define GL_TEXTURE24_ARB 0x84D8
#endif
#ifndef GL_TEXTURE25_ARB
#  define GL_TEXTURE25_ARB 0x84D9
#endif
#ifndef GL_TEXTURE26_ARB
#  define GL_TEXTURE26_ARB 0x84DA
#endif
#ifndef GL_TEXTURE27_ARB
#  define GL_TEXTURE27_ARB 0x84DB
#endif
#ifndef GL_TEXTURE28_ARB
#  define GL_TEXTURE28_ARB 0x84DC
#endif
#ifndef GL_TEXTURE29_ARB
#  define GL_TEXTURE29_ARB 0x84DD
#endif
#ifndef GL_TEXTURE30_ARB
#  define GL_TEXTURE30_ARB 0x84DE
#endif
#ifndef GL_TEXTURE31_ARB
#  define GL_TEXTURE31_ARB 0x84DF
#endif
#ifndef GL_ACTIVE_TEXTURE_ARB
#  define GL_ACTIVE_TEXTURE_ARB 0x84E0
#endif
#ifndef GL_CLIENT_ACTIVE_TEXTURE_ARB
#  define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
#endif
#ifndef GL_MAX_TEXTURE_UNITS_ARB
#  define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glActiveTextureARB
typedef void (APIENTRYP PFNGLUXACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
typedef void (APIENTRYP PFNGLUXCLIENTACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glActiveTextureARB
extern PFNGLUXACTIVETEXTUREARBPROC glActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
extern PFNGLUXCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
extern PFNGLUXMULTITEXCOORD1DARBPROC glMultiTexCoord1dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
extern PFNGLUXMULTITEXCOORD1DVARBPROC glMultiTexCoord1dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
extern PFNGLUXMULTITEXCOORD1FARBPROC glMultiTexCoord1fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
extern PFNGLUXMULTITEXCOORD1FVARBPROC glMultiTexCoord1fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
extern PFNGLUXMULTITEXCOORD1IARBPROC glMultiTexCoord1iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
extern PFNGLUXMULTITEXCOORD1IVARBPROC glMultiTexCoord1ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
extern PFNGLUXMULTITEXCOORD1SARBPROC glMultiTexCoord1sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
extern PFNGLUXMULTITEXCOORD1SVARBPROC glMultiTexCoord1svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
extern PFNGLUXMULTITEXCOORD2DARBPROC glMultiTexCoord2dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
extern PFNGLUXMULTITEXCOORD2DVARBPROC glMultiTexCoord2dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
extern PFNGLUXMULTITEXCOORD2FARBPROC glMultiTexCoord2fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
extern PFNGLUXMULTITEXCOORD2FVARBPROC glMultiTexCoord2fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
extern PFNGLUXMULTITEXCOORD2IARBPROC glMultiTexCoord2iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
extern PFNGLUXMULTITEXCOORD2IVARBPROC glMultiTexCoord2ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
extern PFNGLUXMULTITEXCOORD2SARBPROC glMultiTexCoord2sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
extern PFNGLUXMULTITEXCOORD2SVARBPROC glMultiTexCoord2svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
extern PFNGLUXMULTITEXCOORD3DARBPROC glMultiTexCoord3dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
extern PFNGLUXMULTITEXCOORD3DVARBPROC glMultiTexCoord3dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
extern PFNGLUXMULTITEXCOORD3FARBPROC glMultiTexCoord3fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
extern PFNGLUXMULTITEXCOORD3FVARBPROC glMultiTexCoord3fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
extern PFNGLUXMULTITEXCOORD3IARBPROC glMultiTexCoord3iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
extern PFNGLUXMULTITEXCOORD3IVARBPROC glMultiTexCoord3ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
extern PFNGLUXMULTITEXCOORD3SARBPROC glMultiTexCoord3sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
extern PFNGLUXMULTITEXCOORD3SVARBPROC glMultiTexCoord3svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
extern PFNGLUXMULTITEXCOORD4DARBPROC glMultiTexCoord4dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
extern PFNGLUXMULTITEXCOORD4DVARBPROC glMultiTexCoord4dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
extern PFNGLUXMULTITEXCOORD4FARBPROC glMultiTexCoord4fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
extern PFNGLUXMULTITEXCOORD4FVARBPROC glMultiTexCoord4fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
extern PFNGLUXMULTITEXCOORD4IARBPROC glMultiTexCoord4iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
extern PFNGLUXMULTITEXCOORD4IVARBPROC glMultiTexCoord4ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
extern PFNGLUXMULTITEXCOORD4SARBPROC glMultiTexCoord4sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
extern PFNGLUXMULTITEXCOORD4SVARBPROC glMultiTexCoord4svARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_multitexture__
#define __GLUX_GL_ARB_multitexture__

GLUX_NEW_PLUGIN(GL_ARB_multitexture);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TEXTURE0_ARB
#  define GL_TEXTURE0_ARB 0x84C0
#endif
#ifndef GL_TEXTURE1_ARB
#  define GL_TEXTURE1_ARB 0x84C1
#endif
#ifndef GL_TEXTURE2_ARB
#  define GL_TEXTURE2_ARB 0x84C2
#endif
#ifndef GL_TEXTURE3_ARB
#  define GL_TEXTURE3_ARB 0x84C3
#endif
#ifndef GL_TEXTURE4_ARB
#  define GL_TEXTURE4_ARB 0x84C4
#endif
#ifndef GL_TEXTURE5_ARB
#  define GL_TEXTURE5_ARB 0x84C5
#endif
#ifndef GL_TEXTURE6_ARB
#  define GL_TEXTURE6_ARB 0x84C6
#endif
#ifndef GL_TEXTURE7_ARB
#  define GL_TEXTURE7_ARB 0x84C7
#endif
#ifndef GL_TEXTURE8_ARB
#  define GL_TEXTURE8_ARB 0x84C8
#endif
#ifndef GL_TEXTURE9_ARB
#  define GL_TEXTURE9_ARB 0x84C9
#endif
#ifndef GL_TEXTURE10_ARB
#  define GL_TEXTURE10_ARB 0x84CA
#endif
#ifndef GL_TEXTURE11_ARB
#  define GL_TEXTURE11_ARB 0x84CB
#endif
#ifndef GL_TEXTURE12_ARB
#  define GL_TEXTURE12_ARB 0x84CC
#endif
#ifndef GL_TEXTURE13_ARB
#  define GL_TEXTURE13_ARB 0x84CD
#endif
#ifndef GL_TEXTURE14_ARB
#  define GL_TEXTURE14_ARB 0x84CE
#endif
#ifndef GL_TEXTURE15_ARB
#  define GL_TEXTURE15_ARB 0x84CF
#endif
#ifndef GL_TEXTURE16_ARB
#  define GL_TEXTURE16_ARB 0x84D0
#endif
#ifndef GL_TEXTURE17_ARB
#  define GL_TEXTURE17_ARB 0x84D1
#endif
#ifndef GL_TEXTURE18_ARB
#  define GL_TEXTURE18_ARB 0x84D2
#endif
#ifndef GL_TEXTURE19_ARB
#  define GL_TEXTURE19_ARB 0x84D3
#endif
#ifndef GL_TEXTURE20_ARB
#  define GL_TEXTURE20_ARB 0x84D4
#endif
#ifndef GL_TEXTURE21_ARB
#  define GL_TEXTURE21_ARB 0x84D5
#endif
#ifndef GL_TEXTURE22_ARB
#  define GL_TEXTURE22_ARB 0x84D6
#endif
#ifndef GL_TEXTURE23_ARB
#  define GL_TEXTURE23_ARB 0x84D7
#endif
#ifndef GL_TEXTURE24_ARB
#  define GL_TEXTURE24_ARB 0x84D8
#endif
#ifndef GL_TEXTURE25_ARB
#  define GL_TEXTURE25_ARB 0x84D9
#endif
#ifndef GL_TEXTURE26_ARB
#  define GL_TEXTURE26_ARB 0x84DA
#endif
#ifndef GL_TEXTURE27_ARB
#  define GL_TEXTURE27_ARB 0x84DB
#endif
#ifndef GL_TEXTURE28_ARB
#  define GL_TEXTURE28_ARB 0x84DC
#endif
#ifndef GL_TEXTURE29_ARB
#  define GL_TEXTURE29_ARB 0x84DD
#endif
#ifndef GL_TEXTURE30_ARB
#  define GL_TEXTURE30_ARB 0x84DE
#endif
#ifndef GL_TEXTURE31_ARB
#  define GL_TEXTURE31_ARB 0x84DF
#endif
#ifndef GL_ACTIVE_TEXTURE_ARB
#  define GL_ACTIVE_TEXTURE_ARB 0x84E0
#endif
#ifndef GL_CLIENT_ACTIVE_TEXTURE_ARB
#  define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
#endif
#ifndef GL_MAX_TEXTURE_UNITS_ARB
#  define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glActiveTextureARB
typedef void (APIENTRYP PFNGLUXACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
typedef void (APIENTRYP PFNGLUXCLIENTACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glActiveTextureARB
extern PFNGLUXACTIVETEXTUREARBPROC glActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
extern PFNGLUXCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
extern PFNGLUXMULTITEXCOORD1DARBPROC glMultiTexCoord1dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
extern PFNGLUXMULTITEXCOORD1DVARBPROC glMultiTexCoord1dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
extern PFNGLUXMULTITEXCOORD1FARBPROC glMultiTexCoord1fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
extern PFNGLUXMULTITEXCOORD1FVARBPROC glMultiTexCoord1fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
extern PFNGLUXMULTITEXCOORD1IARBPROC glMultiTexCoord1iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
extern PFNGLUXMULTITEXCOORD1IVARBPROC glMultiTexCoord1ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
extern PFNGLUXMULTITEXCOORD1SARBPROC glMultiTexCoord1sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
extern PFNGLUXMULTITEXCOORD1SVARBPROC glMultiTexCoord1svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
extern PFNGLUXMULTITEXCOORD2DARBPROC glMultiTexCoord2dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
extern PFNGLUXMULTITEXCOORD2DVARBPROC glMultiTexCoord2dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
extern PFNGLUXMULTITEXCOORD2FARBPROC glMultiTexCoord2fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
extern PFNGLUXMULTITEXCOORD2FVARBPROC glMultiTexCoord2fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
extern PFNGLUXMULTITEXCOORD2IARBPROC glMultiTexCoord2iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
extern PFNGLUXMULTITEXCOORD2IVARBPROC glMultiTexCoord2ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
extern PFNGLUXMULTITEXCOORD2SARBPROC glMultiTexCoord2sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
extern PFNGLUXMULTITEXCOORD2SVARBPROC glMultiTexCoord2svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
extern PFNGLUXMULTITEXCOORD3DARBPROC glMultiTexCoord3dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
extern PFNGLUXMULTITEXCOORD3DVARBPROC glMultiTexCoord3dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
extern PFNGLUXMULTITEXCOORD3FARBPROC glMultiTexCoord3fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
extern PFNGLUXMULTITEXCOORD3FVARBPROC glMultiTexCoord3fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
extern PFNGLUXMULTITEXCOORD3IARBPROC glMultiTexCoord3iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
extern PFNGLUXMULTITEXCOORD3IVARBPROC glMultiTexCoord3ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
extern PFNGLUXMULTITEXCOORD3SARBPROC glMultiTexCoord3sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
extern PFNGLUXMULTITEXCOORD3SVARBPROC glMultiTexCoord3svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
extern PFNGLUXMULTITEXCOORD4DARBPROC glMultiTexCoord4dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
extern PFNGLUXMULTITEXCOORD4DVARBPROC glMultiTexCoord4dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
extern PFNGLUXMULTITEXCOORD4FARBPROC glMultiTexCoord4fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
extern PFNGLUXMULTITEXCOORD4FVARBPROC glMultiTexCoord4fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
extern PFNGLUXMULTITEXCOORD4IARBPROC glMultiTexCoord4iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
extern PFNGLUXMULTITEXCOORD4IVARBPROC glMultiTexCoord4ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
extern PFNGLUXMULTITEXCOORD4SARBPROC glMultiTexCoord4sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
extern PFNGLUXMULTITEXCOORD4SVARBPROC glMultiTexCoord4svARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:41:55 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_multitexture__
#define __GLUX_GL_ARB_multitexture__

GLUX_NEW_PLUGIN(GL_ARB_multitexture);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TEXTURE0_ARB
#  define GL_TEXTURE0_ARB 0x84C0
#endif
#ifndef GL_TEXTURE1_ARB
#  define GL_TEXTURE1_ARB 0x84C1
#endif
#ifndef GL_TEXTURE2_ARB
#  define GL_TEXTURE2_ARB 0x84C2
#endif
#ifndef GL_TEXTURE3_ARB
#  define GL_TEXTURE3_ARB 0x84C3
#endif
#ifndef GL_TEXTURE4_ARB
#  define GL_TEXTURE4_ARB 0x84C4
#endif
#ifndef GL_TEXTURE5_ARB
#  define GL_TEXTURE5_ARB 0x84C5
#endif
#ifndef GL_TEXTURE6_ARB
#  define GL_TEXTURE6_ARB 0x84C6
#endif
#ifndef GL_TEXTURE7_ARB
#  define GL_TEXTURE7_ARB 0x84C7
#endif
#ifndef GL_TEXTURE8_ARB
#  define GL_TEXTURE8_ARB 0x84C8
#endif
#ifndef GL_TEXTURE9_ARB
#  define GL_TEXTURE9_ARB 0x84C9
#endif
#ifndef GL_TEXTURE10_ARB
#  define GL_TEXTURE10_ARB 0x84CA
#endif
#ifndef GL_TEXTURE11_ARB
#  define GL_TEXTURE11_ARB 0x84CB
#endif
#ifndef GL_TEXTURE12_ARB
#  define GL_TEXTURE12_ARB 0x84CC
#endif
#ifndef GL_TEXTURE13_ARB
#  define GL_TEXTURE13_ARB 0x84CD
#endif
#ifndef GL_TEXTURE14_ARB
#  define GL_TEXTURE14_ARB 0x84CE
#endif
#ifndef GL_TEXTURE15_ARB
#  define GL_TEXTURE15_ARB 0x84CF
#endif
#ifndef GL_TEXTURE16_ARB
#  define GL_TEXTURE16_ARB 0x84D0
#endif
#ifndef GL_TEXTURE17_ARB
#  define GL_TEXTURE17_ARB 0x84D1
#endif
#ifndef GL_TEXTURE18_ARB
#  define GL_TEXTURE18_ARB 0x84D2
#endif
#ifndef GL_TEXTURE19_ARB
#  define GL_TEXTURE19_ARB 0x84D3
#endif
#ifndef GL_TEXTURE20_ARB
#  define GL_TEXTURE20_ARB 0x84D4
#endif
#ifndef GL_TEXTURE21_ARB
#  define GL_TEXTURE21_ARB 0x84D5
#endif
#ifndef GL_TEXTURE22_ARB
#  define GL_TEXTURE22_ARB 0x84D6
#endif
#ifndef GL_TEXTURE23_ARB
#  define GL_TEXTURE23_ARB 0x84D7
#endif
#ifndef GL_TEXTURE24_ARB
#  define GL_TEXTURE24_ARB 0x84D8
#endif
#ifndef GL_TEXTURE25_ARB
#  define GL_TEXTURE25_ARB 0x84D9
#endif
#ifndef GL_TEXTURE26_ARB
#  define GL_TEXTURE26_ARB 0x84DA
#endif
#ifndef GL_TEXTURE27_ARB
#  define GL_TEXTURE27_ARB 0x84DB
#endif
#ifndef GL_TEXTURE28_ARB
#  define GL_TEXTURE28_ARB 0x84DC
#endif
#ifndef GL_TEXTURE29_ARB
#  define GL_TEXTURE29_ARB 0x84DD
#endif
#ifndef GL_TEXTURE30_ARB
#  define GL_TEXTURE30_ARB 0x84DE
#endif
#ifndef GL_TEXTURE31_ARB
#  define GL_TEXTURE31_ARB 0x84DF
#endif
#ifndef GL_ACTIVE_TEXTURE_ARB
#  define GL_ACTIVE_TEXTURE_ARB 0x84E0
#endif
#ifndef GL_CLIENT_ACTIVE_TEXTURE_ARB
#  define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
#endif
#ifndef GL_MAX_TEXTURE_UNITS_ARB
#  define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glActiveTextureARB
typedef void (APIENTRYP PFNGLUXACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
typedef void (APIENTRYP PFNGLUXCLIENTACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glActiveTextureARB
extern PFNGLUXACTIVETEXTUREARBPROC glActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
extern PFNGLUXCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
extern PFNGLUXMULTITEXCOORD1DARBPROC glMultiTexCoord1dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
extern PFNGLUXMULTITEXCOORD1DVARBPROC glMultiTexCoord1dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
extern PFNGLUXMULTITEXCOORD1FARBPROC glMultiTexCoord1fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
extern PFNGLUXMULTITEXCOORD1FVARBPROC glMultiTexCoord1fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
extern PFNGLUXMULTITEXCOORD1IARBPROC glMultiTexCoord1iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
extern PFNGLUXMULTITEXCOORD1IVARBPROC glMultiTexCoord1ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
extern PFNGLUXMULTITEXCOORD1SARBPROC glMultiTexCoord1sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
extern PFNGLUXMULTITEXCOORD1SVARBPROC glMultiTexCoord1svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
extern PFNGLUXMULTITEXCOORD2DARBPROC glMultiTexCoord2dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
extern PFNGLUXMULTITEXCOORD2DVARBPROC glMultiTexCoord2dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
extern PFNGLUXMULTITEXCOORD2FARBPROC glMultiTexCoord2fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
extern PFNGLUXMULTITEXCOORD2FVARBPROC glMultiTexCoord2fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
extern PFNGLUXMULTITEXCOORD2IARBPROC glMultiTexCoord2iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
extern PFNGLUXMULTITEXCOORD2IVARBPROC glMultiTexCoord2ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
extern PFNGLUXMULTITEXCOORD2SARBPROC glMultiTexCoord2sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
extern PFNGLUXMULTITEXCOORD2SVARBPROC glMultiTexCoord2svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
extern PFNGLUXMULTITEXCOORD3DARBPROC glMultiTexCoord3dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
extern PFNGLUXMULTITEXCOORD3DVARBPROC glMultiTexCoord3dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
extern PFNGLUXMULTITEXCOORD3FARBPROC glMultiTexCoord3fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
extern PFNGLUXMULTITEXCOORD3FVARBPROC glMultiTexCoord3fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
extern PFNGLUXMULTITEXCOORD3IARBPROC glMultiTexCoord3iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
extern PFNGLUXMULTITEXCOORD3IVARBPROC glMultiTexCoord3ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
extern PFNGLUXMULTITEXCOORD3SARBPROC glMultiTexCoord3sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
extern PFNGLUXMULTITEXCOORD3SVARBPROC glMultiTexCoord3svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
extern PFNGLUXMULTITEXCOORD4DARBPROC glMultiTexCoord4dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
extern PFNGLUXMULTITEXCOORD4DVARBPROC glMultiTexCoord4dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
extern PFNGLUXMULTITEXCOORD4FARBPROC glMultiTexCoord4fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
extern PFNGLUXMULTITEXCOORD4FVARBPROC glMultiTexCoord4fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
extern PFNGLUXMULTITEXCOORD4IARBPROC glMultiTexCoord4iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
extern PFNGLUXMULTITEXCOORD4IVARBPROC glMultiTexCoord4ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
extern PFNGLUXMULTITEXCOORD4SARBPROC glMultiTexCoord4sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
extern PFNGLUXMULTITEXCOORD4SVARBPROC glMultiTexCoord4svARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:34 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_multitexture__
#define __GLUX_GL_ARB_multitexture__

GLUX_NEW_PLUGIN(GL_ARB_multitexture);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TEXTURE0_ARB
#  define GL_TEXTURE0_ARB 0x84C0
#endif
#ifndef GL_TEXTURE1_ARB
#  define GL_TEXTURE1_ARB 0x84C1
#endif
#ifndef GL_TEXTURE2_ARB
#  define GL_TEXTURE2_ARB 0x84C2
#endif
#ifndef GL_TEXTURE3_ARB
#  define GL_TEXTURE3_ARB 0x84C3
#endif
#ifndef GL_TEXTURE4_ARB
#  define GL_TEXTURE4_ARB 0x84C4
#endif
#ifndef GL_TEXTURE5_ARB
#  define GL_TEXTURE5_ARB 0x84C5
#endif
#ifndef GL_TEXTURE6_ARB
#  define GL_TEXTURE6_ARB 0x84C6
#endif
#ifndef GL_TEXTURE7_ARB
#  define GL_TEXTURE7_ARB 0x84C7
#endif
#ifndef GL_TEXTURE8_ARB
#  define GL_TEXTURE8_ARB 0x84C8
#endif
#ifndef GL_TEXTURE9_ARB
#  define GL_TEXTURE9_ARB 0x84C9
#endif
#ifndef GL_TEXTURE10_ARB
#  define GL_TEXTURE10_ARB 0x84CA
#endif
#ifndef GL_TEXTURE11_ARB
#  define GL_TEXTURE11_ARB 0x84CB
#endif
#ifndef GL_TEXTURE12_ARB
#  define GL_TEXTURE12_ARB 0x84CC
#endif
#ifndef GL_TEXTURE13_ARB
#  define GL_TEXTURE13_ARB 0x84CD
#endif
#ifndef GL_TEXTURE14_ARB
#  define GL_TEXTURE14_ARB 0x84CE
#endif
#ifndef GL_TEXTURE15_ARB
#  define GL_TEXTURE15_ARB 0x84CF
#endif
#ifndef GL_TEXTURE16_ARB
#  define GL_TEXTURE16_ARB 0x84D0
#endif
#ifndef GL_TEXTURE17_ARB
#  define GL_TEXTURE17_ARB 0x84D1
#endif
#ifndef GL_TEXTURE18_ARB
#  define GL_TEXTURE18_ARB 0x84D2
#endif
#ifndef GL_TEXTURE19_ARB
#  define GL_TEXTURE19_ARB 0x84D3
#endif
#ifndef GL_TEXTURE20_ARB
#  define GL_TEXTURE20_ARB 0x84D4
#endif
#ifndef GL_TEXTURE21_ARB
#  define GL_TEXTURE21_ARB 0x84D5
#endif
#ifndef GL_TEXTURE22_ARB
#  define GL_TEXTURE22_ARB 0x84D6
#endif
#ifndef GL_TEXTURE23_ARB
#  define GL_TEXTURE23_ARB 0x84D7
#endif
#ifndef GL_TEXTURE24_ARB
#  define GL_TEXTURE24_ARB 0x84D8
#endif
#ifndef GL_TEXTURE25_ARB
#  define GL_TEXTURE25_ARB 0x84D9
#endif
#ifndef GL_TEXTURE26_ARB
#  define GL_TEXTURE26_ARB 0x84DA
#endif
#ifndef GL_TEXTURE27_ARB
#  define GL_TEXTURE27_ARB 0x84DB
#endif
#ifndef GL_TEXTURE28_ARB
#  define GL_TEXTURE28_ARB 0x84DC
#endif
#ifndef GL_TEXTURE29_ARB
#  define GL_TEXTURE29_ARB 0x84DD
#endif
#ifndef GL_TEXTURE30_ARB
#  define GL_TEXTURE30_ARB 0x84DE
#endif
#ifndef GL_TEXTURE31_ARB
#  define GL_TEXTURE31_ARB 0x84DF
#endif
#ifndef GL_ACTIVE_TEXTURE_ARB
#  define GL_ACTIVE_TEXTURE_ARB 0x84E0
#endif
#ifndef GL_CLIENT_ACTIVE_TEXTURE_ARB
#  define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
#endif
#ifndef GL_MAX_TEXTURE_UNITS_ARB
#  define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glActiveTextureARB
typedef void (APIENTRYP PFNGLUXACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
typedef void (APIENTRYP PFNGLUXCLIENTACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glActiveTextureARB
extern PFNGLUXACTIVETEXTUREARBPROC glActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
extern PFNGLUXCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
extern PFNGLUXMULTITEXCOORD1DARBPROC glMultiTexCoord1dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
extern PFNGLUXMULTITEXCOORD1DVARBPROC glMultiTexCoord1dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
extern PFNGLUXMULTITEXCOORD1FARBPROC glMultiTexCoord1fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
extern PFNGLUXMULTITEXCOORD1FVARBPROC glMultiTexCoord1fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
extern PFNGLUXMULTITEXCOORD1IARBPROC glMultiTexCoord1iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
extern PFNGLUXMULTITEXCOORD1IVARBPROC glMultiTexCoord1ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
extern PFNGLUXMULTITEXCOORD1SARBPROC glMultiTexCoord1sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
extern PFNGLUXMULTITEXCOORD1SVARBPROC glMultiTexCoord1svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
extern PFNGLUXMULTITEXCOORD2DARBPROC glMultiTexCoord2dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
extern PFNGLUXMULTITEXCOORD2DVARBPROC glMultiTexCoord2dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
extern PFNGLUXMULTITEXCOORD2FARBPROC glMultiTexCoord2fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
extern PFNGLUXMULTITEXCOORD2FVARBPROC glMultiTexCoord2fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
extern PFNGLUXMULTITEXCOORD2IARBPROC glMultiTexCoord2iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
extern PFNGLUXMULTITEXCOORD2IVARBPROC glMultiTexCoord2ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
extern PFNGLUXMULTITEXCOORD2SARBPROC glMultiTexCoord2sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
extern PFNGLUXMULTITEXCOORD2SVARBPROC glMultiTexCoord2svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
extern PFNGLUXMULTITEXCOORD3DARBPROC glMultiTexCoord3dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
extern PFNGLUXMULTITEXCOORD3DVARBPROC glMultiTexCoord3dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
extern PFNGLUXMULTITEXCOORD3FARBPROC glMultiTexCoord3fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
extern PFNGLUXMULTITEXCOORD3FVARBPROC glMultiTexCoord3fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
extern PFNGLUXMULTITEXCOORD3IARBPROC glMultiTexCoord3iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
extern PFNGLUXMULTITEXCOORD3IVARBPROC glMultiTexCoord3ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
extern PFNGLUXMULTITEXCOORD3SARBPROC glMultiTexCoord3sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
extern PFNGLUXMULTITEXCOORD3SVARBPROC glMultiTexCoord3svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
extern PFNGLUXMULTITEXCOORD4DARBPROC glMultiTexCoord4dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
extern PFNGLUXMULTITEXCOORD4DVARBPROC glMultiTexCoord4dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
extern PFNGLUXMULTITEXCOORD4FARBPROC glMultiTexCoord4fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
extern PFNGLUXMULTITEXCOORD4FVARBPROC glMultiTexCoord4fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
extern PFNGLUXMULTITEXCOORD4IARBPROC glMultiTexCoord4iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
extern PFNGLUXMULTITEXCOORD4IVARBPROC glMultiTexCoord4ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
extern PFNGLUXMULTITEXCOORD4SARBPROC glMultiTexCoord4sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
extern PFNGLUXMULTITEXCOORD4SVARBPROC glMultiTexCoord4svARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:09:55 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_multitexture__
#define __GLUX_GL_ARB_multitexture__

GLUX_NEW_PLUGIN(GL_ARB_multitexture);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TEXTURE0_ARB
#  define GL_TEXTURE0_ARB 0x84C0
#endif
#ifndef GL_TEXTURE1_ARB
#  define GL_TEXTURE1_ARB 0x84C1
#endif
#ifndef GL_TEXTURE2_ARB
#  define GL_TEXTURE2_ARB 0x84C2
#endif
#ifndef GL_TEXTURE3_ARB
#  define GL_TEXTURE3_ARB 0x84C3
#endif
#ifndef GL_TEXTURE4_ARB
#  define GL_TEXTURE4_ARB 0x84C4
#endif
#ifndef GL_TEXTURE5_ARB
#  define GL_TEXTURE5_ARB 0x84C5
#endif
#ifndef GL_TEXTURE6_ARB
#  define GL_TEXTURE6_ARB 0x84C6
#endif
#ifndef GL_TEXTURE7_ARB
#  define GL_TEXTURE7_ARB 0x84C7
#endif
#ifndef GL_TEXTURE8_ARB
#  define GL_TEXTURE8_ARB 0x84C8
#endif
#ifndef GL_TEXTURE9_ARB
#  define GL_TEXTURE9_ARB 0x84C9
#endif
#ifndef GL_TEXTURE10_ARB
#  define GL_TEXTURE10_ARB 0x84CA
#endif
#ifndef GL_TEXTURE11_ARB
#  define GL_TEXTURE11_ARB 0x84CB
#endif
#ifndef GL_TEXTURE12_ARB
#  define GL_TEXTURE12_ARB 0x84CC
#endif
#ifndef GL_TEXTURE13_ARB
#  define GL_TEXTURE13_ARB 0x84CD
#endif
#ifndef GL_TEXTURE14_ARB
#  define GL_TEXTURE14_ARB 0x84CE
#endif
#ifndef GL_TEXTURE15_ARB
#  define GL_TEXTURE15_ARB 0x84CF
#endif
#ifndef GL_TEXTURE16_ARB
#  define GL_TEXTURE16_ARB 0x84D0
#endif
#ifndef GL_TEXTURE17_ARB
#  define GL_TEXTURE17_ARB 0x84D1
#endif
#ifndef GL_TEXTURE18_ARB
#  define GL_TEXTURE18_ARB 0x84D2
#endif
#ifndef GL_TEXTURE19_ARB
#  define GL_TEXTURE19_ARB 0x84D3
#endif
#ifndef GL_TEXTURE20_ARB
#  define GL_TEXTURE20_ARB 0x84D4
#endif
#ifndef GL_TEXTURE21_ARB
#  define GL_TEXTURE21_ARB 0x84D5
#endif
#ifndef GL_TEXTURE22_ARB
#  define GL_TEXTURE22_ARB 0x84D6
#endif
#ifndef GL_TEXTURE23_ARB
#  define GL_TEXTURE23_ARB 0x84D7
#endif
#ifndef GL_TEXTURE24_ARB
#  define GL_TEXTURE24_ARB 0x84D8
#endif
#ifndef GL_TEXTURE25_ARB
#  define GL_TEXTURE25_ARB 0x84D9
#endif
#ifndef GL_TEXTURE26_ARB
#  define GL_TEXTURE26_ARB 0x84DA
#endif
#ifndef GL_TEXTURE27_ARB
#  define GL_TEXTURE27_ARB 0x84DB
#endif
#ifndef GL_TEXTURE28_ARB
#  define GL_TEXTURE28_ARB 0x84DC
#endif
#ifndef GL_TEXTURE29_ARB
#  define GL_TEXTURE29_ARB 0x84DD
#endif
#ifndef GL_TEXTURE30_ARB
#  define GL_TEXTURE30_ARB 0x84DE
#endif
#ifndef GL_TEXTURE31_ARB
#  define GL_TEXTURE31_ARB 0x84DF
#endif
#ifndef GL_ACTIVE_TEXTURE_ARB
#  define GL_ACTIVE_TEXTURE_ARB 0x84E0
#endif
#ifndef GL_CLIENT_ACTIVE_TEXTURE_ARB
#  define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
#endif
#ifndef GL_MAX_TEXTURE_UNITS_ARB
#  define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glActiveTextureARB
typedef void (APIENTRYP PFNGLUXACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
typedef void (APIENTRYP PFNGLUXCLIENTACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glActiveTextureARB
extern PFNGLUXACTIVETEXTUREARBPROC glActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
extern PFNGLUXCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
extern PFNGLUXMULTITEXCOORD1DARBPROC glMultiTexCoord1dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
extern PFNGLUXMULTITEXCOORD1DVARBPROC glMultiTexCoord1dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
extern PFNGLUXMULTITEXCOORD1FARBPROC glMultiTexCoord1fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
extern PFNGLUXMULTITEXCOORD1FVARBPROC glMultiTexCoord1fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
extern PFNGLUXMULTITEXCOORD1IARBPROC glMultiTexCoord1iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
extern PFNGLUXMULTITEXCOORD1IVARBPROC glMultiTexCoord1ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
extern PFNGLUXMULTITEXCOORD1SARBPROC glMultiTexCoord1sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
extern PFNGLUXMULTITEXCOORD1SVARBPROC glMultiTexCoord1svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
extern PFNGLUXMULTITEXCOORD2DARBPROC glMultiTexCoord2dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
extern PFNGLUXMULTITEXCOORD2DVARBPROC glMultiTexCoord2dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
extern PFNGLUXMULTITEXCOORD2FARBPROC glMultiTexCoord2fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
extern PFNGLUXMULTITEXCOORD2FVARBPROC glMultiTexCoord2fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
extern PFNGLUXMULTITEXCOORD2IARBPROC glMultiTexCoord2iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
extern PFNGLUXMULTITEXCOORD2IVARBPROC glMultiTexCoord2ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
extern PFNGLUXMULTITEXCOORD2SARBPROC glMultiTexCoord2sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
extern PFNGLUXMULTITEXCOORD2SVARBPROC glMultiTexCoord2svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
extern PFNGLUXMULTITEXCOORD3DARBPROC glMultiTexCoord3dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
extern PFNGLUXMULTITEXCOORD3DVARBPROC glMultiTexCoord3dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
extern PFNGLUXMULTITEXCOORD3FARBPROC glMultiTexCoord3fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
extern PFNGLUXMULTITEXCOORD3FVARBPROC glMultiTexCoord3fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
extern PFNGLUXMULTITEXCOORD3IARBPROC glMultiTexCoord3iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
extern PFNGLUXMULTITEXCOORD3IVARBPROC glMultiTexCoord3ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
extern PFNGLUXMULTITEXCOORD3SARBPROC glMultiTexCoord3sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
extern PFNGLUXMULTITEXCOORD3SVARBPROC glMultiTexCoord3svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
extern PFNGLUXMULTITEXCOORD4DARBPROC glMultiTexCoord4dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
extern PFNGLUXMULTITEXCOORD4DVARBPROC glMultiTexCoord4dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
extern PFNGLUXMULTITEXCOORD4FARBPROC glMultiTexCoord4fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
extern PFNGLUXMULTITEXCOORD4FVARBPROC glMultiTexCoord4fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
extern PFNGLUXMULTITEXCOORD4IARBPROC glMultiTexCoord4iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
extern PFNGLUXMULTITEXCOORD4IVARBPROC glMultiTexCoord4ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
extern PFNGLUXMULTITEXCOORD4SARBPROC glMultiTexCoord4sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
extern PFNGLUXMULTITEXCOORD4SVARBPROC glMultiTexCoord4svARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:19:56 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_multitexture__
#define __GLUX_GL_ARB_multitexture__

GLUX_NEW_PLUGIN(GL_ARB_multitexture);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TEXTURE0_ARB
#  define GL_TEXTURE0_ARB 0x84C0
#endif
#ifndef GL_TEXTURE1_ARB
#  define GL_TEXTURE1_ARB 0x84C1
#endif
#ifndef GL_TEXTURE2_ARB
#  define GL_TEXTURE2_ARB 0x84C2
#endif
#ifndef GL_TEXTURE3_ARB
#  define GL_TEXTURE3_ARB 0x84C3
#endif
#ifndef GL_TEXTURE4_ARB
#  define GL_TEXTURE4_ARB 0x84C4
#endif
#ifndef GL_TEXTURE5_ARB
#  define GL_TEXTURE5_ARB 0x84C5
#endif
#ifndef GL_TEXTURE6_ARB
#  define GL_TEXTURE6_ARB 0x84C6
#endif
#ifndef GL_TEXTURE7_ARB
#  define GL_TEXTURE7_ARB 0x84C7
#endif
#ifndef GL_TEXTURE8_ARB
#  define GL_TEXTURE8_ARB 0x84C8
#endif
#ifndef GL_TEXTURE9_ARB
#  define GL_TEXTURE9_ARB 0x84C9
#endif
#ifndef GL_TEXTURE10_ARB
#  define GL_TEXTURE10_ARB 0x84CA
#endif
#ifndef GL_TEXTURE11_ARB
#  define GL_TEXTURE11_ARB 0x84CB
#endif
#ifndef GL_TEXTURE12_ARB
#  define GL_TEXTURE12_ARB 0x84CC
#endif
#ifndef GL_TEXTURE13_ARB
#  define GL_TEXTURE13_ARB 0x84CD
#endif
#ifndef GL_TEXTURE14_ARB
#  define GL_TEXTURE14_ARB 0x84CE
#endif
#ifndef GL_TEXTURE15_ARB
#  define GL_TEXTURE15_ARB 0x84CF
#endif
#ifndef GL_TEXTURE16_ARB
#  define GL_TEXTURE16_ARB 0x84D0
#endif
#ifndef GL_TEXTURE17_ARB
#  define GL_TEXTURE17_ARB 0x84D1
#endif
#ifndef GL_TEXTURE18_ARB
#  define GL_TEXTURE18_ARB 0x84D2
#endif
#ifndef GL_TEXTURE19_ARB
#  define GL_TEXTURE19_ARB 0x84D3
#endif
#ifndef GL_TEXTURE20_ARB
#  define GL_TEXTURE20_ARB 0x84D4
#endif
#ifndef GL_TEXTURE21_ARB
#  define GL_TEXTURE21_ARB 0x84D5
#endif
#ifndef GL_TEXTURE22_ARB
#  define GL_TEXTURE22_ARB 0x84D6
#endif
#ifndef GL_TEXTURE23_ARB
#  define GL_TEXTURE23_ARB 0x84D7
#endif
#ifndef GL_TEXTURE24_ARB
#  define GL_TEXTURE24_ARB 0x84D8
#endif
#ifndef GL_TEXTURE25_ARB
#  define GL_TEXTURE25_ARB 0x84D9
#endif
#ifndef GL_TEXTURE26_ARB
#  define GL_TEXTURE26_ARB 0x84DA
#endif
#ifndef GL_TEXTURE27_ARB
#  define GL_TEXTURE27_ARB 0x84DB
#endif
#ifndef GL_TEXTURE28_ARB
#  define GL_TEXTURE28_ARB 0x84DC
#endif
#ifndef GL_TEXTURE29_ARB
#  define GL_TEXTURE29_ARB 0x84DD
#endif
#ifndef GL_TEXTURE30_ARB
#  define GL_TEXTURE30_ARB 0x84DE
#endif
#ifndef GL_TEXTURE31_ARB
#  define GL_TEXTURE31_ARB 0x84DF
#endif
#ifndef GL_ACTIVE_TEXTURE_ARB
#  define GL_ACTIVE_TEXTURE_ARB 0x84E0
#endif
#ifndef GL_CLIENT_ACTIVE_TEXTURE_ARB
#  define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
#endif
#ifndef GL_MAX_TEXTURE_UNITS_ARB
#  define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glActiveTextureARB
typedef void (APIENTRYP PFNGLUXACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
typedef void (APIENTRYP PFNGLUXCLIENTACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glActiveTextureARB
extern PFNGLUXACTIVETEXTUREARBPROC glActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
extern PFNGLUXCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
extern PFNGLUXMULTITEXCOORD1DARBPROC glMultiTexCoord1dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
extern PFNGLUXMULTITEXCOORD1DVARBPROC glMultiTexCoord1dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
extern PFNGLUXMULTITEXCOORD1FARBPROC glMultiTexCoord1fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
extern PFNGLUXMULTITEXCOORD1FVARBPROC glMultiTexCoord1fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
extern PFNGLUXMULTITEXCOORD1IARBPROC glMultiTexCoord1iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
extern PFNGLUXMULTITEXCOORD1IVARBPROC glMultiTexCoord1ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
extern PFNGLUXMULTITEXCOORD1SARBPROC glMultiTexCoord1sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
extern PFNGLUXMULTITEXCOORD1SVARBPROC glMultiTexCoord1svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
extern PFNGLUXMULTITEXCOORD2DARBPROC glMultiTexCoord2dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
extern PFNGLUXMULTITEXCOORD2DVARBPROC glMultiTexCoord2dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
extern PFNGLUXMULTITEXCOORD2FARBPROC glMultiTexCoord2fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
extern PFNGLUXMULTITEXCOORD2FVARBPROC glMultiTexCoord2fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
extern PFNGLUXMULTITEXCOORD2IARBPROC glMultiTexCoord2iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
extern PFNGLUXMULTITEXCOORD2IVARBPROC glMultiTexCoord2ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
extern PFNGLUXMULTITEXCOORD2SARBPROC glMultiTexCoord2sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
extern PFNGLUXMULTITEXCOORD2SVARBPROC glMultiTexCoord2svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
extern PFNGLUXMULTITEXCOORD3DARBPROC glMultiTexCoord3dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
extern PFNGLUXMULTITEXCOORD3DVARBPROC glMultiTexCoord3dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
extern PFNGLUXMULTITEXCOORD3FARBPROC glMultiTexCoord3fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
extern PFNGLUXMULTITEXCOORD3FVARBPROC glMultiTexCoord3fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
extern PFNGLUXMULTITEXCOORD3IARBPROC glMultiTexCoord3iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
extern PFNGLUXMULTITEXCOORD3IVARBPROC glMultiTexCoord3ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
extern PFNGLUXMULTITEXCOORD3SARBPROC glMultiTexCoord3sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
extern PFNGLUXMULTITEXCOORD3SVARBPROC glMultiTexCoord3svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
extern PFNGLUXMULTITEXCOORD4DARBPROC glMultiTexCoord4dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
extern PFNGLUXMULTITEXCOORD4DVARBPROC glMultiTexCoord4dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
extern PFNGLUXMULTITEXCOORD4FARBPROC glMultiTexCoord4fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
extern PFNGLUXMULTITEXCOORD4FVARBPROC glMultiTexCoord4fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
extern PFNGLUXMULTITEXCOORD4IARBPROC glMultiTexCoord4iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
extern PFNGLUXMULTITEXCOORD4IVARBPROC glMultiTexCoord4ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
extern PFNGLUXMULTITEXCOORD4SARBPROC glMultiTexCoord4sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
extern PFNGLUXMULTITEXCOORD4SVARBPROC glMultiTexCoord4svARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:42:54 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_multitexture__
#define __GLUX_GL_ARB_multitexture__

GLUX_NEW_PLUGIN(GL_ARB_multitexture)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TEXTURE0_ARB
#  define GL_TEXTURE0_ARB 0x84C0
#endif
#ifndef GL_TEXTURE1_ARB
#  define GL_TEXTURE1_ARB 0x84C1
#endif
#ifndef GL_TEXTURE2_ARB
#  define GL_TEXTURE2_ARB 0x84C2
#endif
#ifndef GL_TEXTURE3_ARB
#  define GL_TEXTURE3_ARB 0x84C3
#endif
#ifndef GL_TEXTURE4_ARB
#  define GL_TEXTURE4_ARB 0x84C4
#endif
#ifndef GL_TEXTURE5_ARB
#  define GL_TEXTURE5_ARB 0x84C5
#endif
#ifndef GL_TEXTURE6_ARB
#  define GL_TEXTURE6_ARB 0x84C6
#endif
#ifndef GL_TEXTURE7_ARB
#  define GL_TEXTURE7_ARB 0x84C7
#endif
#ifndef GL_TEXTURE8_ARB
#  define GL_TEXTURE8_ARB 0x84C8
#endif
#ifndef GL_TEXTURE9_ARB
#  define GL_TEXTURE9_ARB 0x84C9
#endif
#ifndef GL_TEXTURE10_ARB
#  define GL_TEXTURE10_ARB 0x84CA
#endif
#ifndef GL_TEXTURE11_ARB
#  define GL_TEXTURE11_ARB 0x84CB
#endif
#ifndef GL_TEXTURE12_ARB
#  define GL_TEXTURE12_ARB 0x84CC
#endif
#ifndef GL_TEXTURE13_ARB
#  define GL_TEXTURE13_ARB 0x84CD
#endif
#ifndef GL_TEXTURE14_ARB
#  define GL_TEXTURE14_ARB 0x84CE
#endif
#ifndef GL_TEXTURE15_ARB
#  define GL_TEXTURE15_ARB 0x84CF
#endif
#ifndef GL_TEXTURE16_ARB
#  define GL_TEXTURE16_ARB 0x84D0
#endif
#ifndef GL_TEXTURE17_ARB
#  define GL_TEXTURE17_ARB 0x84D1
#endif
#ifndef GL_TEXTURE18_ARB
#  define GL_TEXTURE18_ARB 0x84D2
#endif
#ifndef GL_TEXTURE19_ARB
#  define GL_TEXTURE19_ARB 0x84D3
#endif
#ifndef GL_TEXTURE20_ARB
#  define GL_TEXTURE20_ARB 0x84D4
#endif
#ifndef GL_TEXTURE21_ARB
#  define GL_TEXTURE21_ARB 0x84D5
#endif
#ifndef GL_TEXTURE22_ARB
#  define GL_TEXTURE22_ARB 0x84D6
#endif
#ifndef GL_TEXTURE23_ARB
#  define GL_TEXTURE23_ARB 0x84D7
#endif
#ifndef GL_TEXTURE24_ARB
#  define GL_TEXTURE24_ARB 0x84D8
#endif
#ifndef GL_TEXTURE25_ARB
#  define GL_TEXTURE25_ARB 0x84D9
#endif
#ifndef GL_TEXTURE26_ARB
#  define GL_TEXTURE26_ARB 0x84DA
#endif
#ifndef GL_TEXTURE27_ARB
#  define GL_TEXTURE27_ARB 0x84DB
#endif
#ifndef GL_TEXTURE28_ARB
#  define GL_TEXTURE28_ARB 0x84DC
#endif
#ifndef GL_TEXTURE29_ARB
#  define GL_TEXTURE29_ARB 0x84DD
#endif
#ifndef GL_TEXTURE30_ARB
#  define GL_TEXTURE30_ARB 0x84DE
#endif
#ifndef GL_TEXTURE31_ARB
#  define GL_TEXTURE31_ARB 0x84DF
#endif
#ifndef GL_ACTIVE_TEXTURE_ARB
#  define GL_ACTIVE_TEXTURE_ARB 0x84E0
#endif
#ifndef GL_CLIENT_ACTIVE_TEXTURE_ARB
#  define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
#endif
#ifndef GL_MAX_TEXTURE_UNITS_ARB
#  define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glActiveTextureARB
typedef void (APIENTRYP PFNGLUXACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
typedef void (APIENTRYP PFNGLUXCLIENTACTIVETEXTUREARBPROC) (GLenum texture);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glActiveTextureARB
extern PFNGLUXACTIVETEXTUREARBPROC glActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glClientActiveTextureARB
extern PFNGLUXCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dARB
extern PFNGLUXMULTITEXCOORD1DARBPROC glMultiTexCoord1dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1dvARB
extern PFNGLUXMULTITEXCOORD1DVARBPROC glMultiTexCoord1dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fARB
extern PFNGLUXMULTITEXCOORD1FARBPROC glMultiTexCoord1fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1fvARB
extern PFNGLUXMULTITEXCOORD1FVARBPROC glMultiTexCoord1fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1iARB
extern PFNGLUXMULTITEXCOORD1IARBPROC glMultiTexCoord1iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1ivARB
extern PFNGLUXMULTITEXCOORD1IVARBPROC glMultiTexCoord1ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1sARB
extern PFNGLUXMULTITEXCOORD1SARBPROC glMultiTexCoord1sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1svARB
extern PFNGLUXMULTITEXCOORD1SVARBPROC glMultiTexCoord1svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dARB
extern PFNGLUXMULTITEXCOORD2DARBPROC glMultiTexCoord2dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2dvARB
extern PFNGLUXMULTITEXCOORD2DVARBPROC glMultiTexCoord2dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fARB
extern PFNGLUXMULTITEXCOORD2FARBPROC glMultiTexCoord2fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2fvARB
extern PFNGLUXMULTITEXCOORD2FVARBPROC glMultiTexCoord2fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2iARB
extern PFNGLUXMULTITEXCOORD2IARBPROC glMultiTexCoord2iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2ivARB
extern PFNGLUXMULTITEXCOORD2IVARBPROC glMultiTexCoord2ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2sARB
extern PFNGLUXMULTITEXCOORD2SARBPROC glMultiTexCoord2sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2svARB
extern PFNGLUXMULTITEXCOORD2SVARBPROC glMultiTexCoord2svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dARB
extern PFNGLUXMULTITEXCOORD3DARBPROC glMultiTexCoord3dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3dvARB
extern PFNGLUXMULTITEXCOORD3DVARBPROC glMultiTexCoord3dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fARB
extern PFNGLUXMULTITEXCOORD3FARBPROC glMultiTexCoord3fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3fvARB
extern PFNGLUXMULTITEXCOORD3FVARBPROC glMultiTexCoord3fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3iARB
extern PFNGLUXMULTITEXCOORD3IARBPROC glMultiTexCoord3iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3ivARB
extern PFNGLUXMULTITEXCOORD3IVARBPROC glMultiTexCoord3ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3sARB
extern PFNGLUXMULTITEXCOORD3SARBPROC glMultiTexCoord3sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3svARB
extern PFNGLUXMULTITEXCOORD3SVARBPROC glMultiTexCoord3svARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dARB
extern PFNGLUXMULTITEXCOORD4DARBPROC glMultiTexCoord4dARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4dvARB
extern PFNGLUXMULTITEXCOORD4DVARBPROC glMultiTexCoord4dvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fARB
extern PFNGLUXMULTITEXCOORD4FARBPROC glMultiTexCoord4fARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4fvARB
extern PFNGLUXMULTITEXCOORD4FVARBPROC glMultiTexCoord4fvARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4iARB
extern PFNGLUXMULTITEXCOORD4IARBPROC glMultiTexCoord4iARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4ivARB
extern PFNGLUXMULTITEXCOORD4IVARBPROC glMultiTexCoord4ivARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4sARB
extern PFNGLUXMULTITEXCOORD4SARBPROC glMultiTexCoord4sARB;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4svARB
extern PFNGLUXMULTITEXCOORD4SVARBPROC glMultiTexCoord4svARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
