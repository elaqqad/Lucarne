
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:29 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_I3D_image_buffer__
#define __GLUX_WGL_I3D_image_buffer__

GLUX_NEW_PLUGIN(WGL_I3D_image_buffer);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_IMAGE_BUFFER_MIN_ACCESS_I3D
#  define WGL_IMAGE_BUFFER_MIN_ACCESS_I3D 0x00000001
#endif
#ifndef WGL_IMAGE_BUFFER_LOCK_I3D
#  define WGL_IMAGE_BUFFER_LOCK_I3D 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
typedef LPVOID (APIENTRYP PFNWGLUXCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
typedef BOOL (APIENTRYP PFNWGLUXDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, UINT count);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
extern PFNWGLUXCREATEIMAGEBUFFERI3DPROC wglCreateImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
extern PFNWGLUXDESTROYIMAGEBUFFERI3DPROC wglDestroyImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
extern PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC wglAssociateImageBufferEventsI3D;
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
extern PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC wglReleaseImageBufferEventsI3D;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:48 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_I3D_image_buffer__
#define __GLUX_WGL_I3D_image_buffer__

GLUX_NEW_PLUGIN(WGL_I3D_image_buffer);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_IMAGE_BUFFER_MIN_ACCESS_I3D
#  define WGL_IMAGE_BUFFER_MIN_ACCESS_I3D 0x00000001
#endif
#ifndef WGL_IMAGE_BUFFER_LOCK_I3D
#  define WGL_IMAGE_BUFFER_LOCK_I3D 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
typedef LPVOID (APIENTRYP PFNWGLUXCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
typedef BOOL (APIENTRYP PFNWGLUXDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, UINT count);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
extern PFNWGLUXCREATEIMAGEBUFFERI3DPROC wglCreateImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
extern PFNWGLUXDESTROYIMAGEBUFFERI3DPROC wglDestroyImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
extern PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC wglAssociateImageBufferEventsI3D;
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
extern PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC wglReleaseImageBufferEventsI3D;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:54 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_I3D_image_buffer__
#define __GLUX_WGL_I3D_image_buffer__

GLUX_NEW_PLUGIN(WGL_I3D_image_buffer);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_IMAGE_BUFFER_MIN_ACCESS_I3D
#  define WGL_IMAGE_BUFFER_MIN_ACCESS_I3D 0x00000001
#endif
#ifndef WGL_IMAGE_BUFFER_LOCK_I3D
#  define WGL_IMAGE_BUFFER_LOCK_I3D 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
typedef LPVOID (APIENTRYP PFNWGLUXCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
typedef BOOL (APIENTRYP PFNWGLUXDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, UINT count);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
extern PFNWGLUXCREATEIMAGEBUFFERI3DPROC wglCreateImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
extern PFNWGLUXDESTROYIMAGEBUFFERI3DPROC wglDestroyImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
extern PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC wglAssociateImageBufferEventsI3D;
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
extern PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC wglReleaseImageBufferEventsI3D;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:14 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_I3D_image_buffer__
#define __GLUX_WGL_I3D_image_buffer__

GLUX_NEW_PLUGIN(WGL_I3D_image_buffer);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_IMAGE_BUFFER_MIN_ACCESS_I3D
#  define WGL_IMAGE_BUFFER_MIN_ACCESS_I3D 0x00000001
#endif
#ifndef WGL_IMAGE_BUFFER_LOCK_I3D
#  define WGL_IMAGE_BUFFER_LOCK_I3D 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
typedef LPVOID (APIENTRYP PFNWGLUXCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
typedef BOOL (APIENTRYP PFNWGLUXDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, UINT count);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
extern PFNWGLUXCREATEIMAGEBUFFERI3DPROC wglCreateImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
extern PFNWGLUXDESTROYIMAGEBUFFERI3DPROC wglDestroyImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
extern PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC wglAssociateImageBufferEventsI3D;
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
extern PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC wglReleaseImageBufferEventsI3D;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:31 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_I3D_image_buffer__
#define __GLUX_WGL_I3D_image_buffer__

GLUX_NEW_PLUGIN(WGL_I3D_image_buffer);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_IMAGE_BUFFER_MIN_ACCESS_I3D
#  define WGL_IMAGE_BUFFER_MIN_ACCESS_I3D 0x00000001
#endif
#ifndef WGL_IMAGE_BUFFER_LOCK_I3D
#  define WGL_IMAGE_BUFFER_LOCK_I3D 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
typedef LPVOID (APIENTRYP PFNWGLUXCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
typedef BOOL (APIENTRYP PFNWGLUXDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, UINT count);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
extern PFNWGLUXCREATEIMAGEBUFFERI3DPROC wglCreateImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
extern PFNWGLUXDESTROYIMAGEBUFFERI3DPROC wglDestroyImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
extern PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC wglAssociateImageBufferEventsI3D;
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
extern PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC wglReleaseImageBufferEventsI3D;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:33 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_I3D_image_buffer__
#define __GLUX_WGL_I3D_image_buffer__

GLUX_NEW_PLUGIN(WGL_I3D_image_buffer);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_IMAGE_BUFFER_MIN_ACCESS_I3D
#  define WGL_IMAGE_BUFFER_MIN_ACCESS_I3D 0x00000001
#endif
#ifndef WGL_IMAGE_BUFFER_LOCK_I3D
#  define WGL_IMAGE_BUFFER_LOCK_I3D 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
typedef LPVOID (APIENTRYP PFNWGLUXCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
typedef BOOL (APIENTRYP PFNWGLUXDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, UINT count);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
extern PFNWGLUXCREATEIMAGEBUFFERI3DPROC wglCreateImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
extern PFNWGLUXDESTROYIMAGEBUFFERI3DPROC wglDestroyImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
extern PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC wglAssociateImageBufferEventsI3D;
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
extern PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC wglReleaseImageBufferEventsI3D;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:56 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_I3D_image_buffer__
#define __GLUX_WGL_I3D_image_buffer__

GLUX_NEW_PLUGIN(WGL_I3D_image_buffer);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_IMAGE_BUFFER_MIN_ACCESS_I3D
#  define WGL_IMAGE_BUFFER_MIN_ACCESS_I3D 0x00000001
#endif
#ifndef WGL_IMAGE_BUFFER_LOCK_I3D
#  define WGL_IMAGE_BUFFER_LOCK_I3D 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
typedef LPVOID (APIENTRYP PFNWGLUXCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
typedef BOOL (APIENTRYP PFNWGLUXDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, UINT count);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
extern PFNWGLUXCREATEIMAGEBUFFERI3DPROC wglCreateImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
extern PFNWGLUXDESTROYIMAGEBUFFERI3DPROC wglDestroyImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
extern PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC wglAssociateImageBufferEventsI3D;
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
extern PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC wglReleaseImageBufferEventsI3D;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:29:07 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_I3D_image_buffer__
#define __GLUX_WGL_I3D_image_buffer__

GLUX_NEW_PLUGIN(WGL_I3D_image_buffer);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_IMAGE_BUFFER_MIN_ACCESS_I3D
#  define WGL_IMAGE_BUFFER_MIN_ACCESS_I3D 0x00000001
#endif
#ifndef WGL_IMAGE_BUFFER_LOCK_I3D
#  define WGL_IMAGE_BUFFER_LOCK_I3D 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
typedef LPVOID (APIENTRYP PFNWGLUXCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
typedef BOOL (APIENTRYP PFNWGLUXDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, UINT count);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
extern PFNWGLUXCREATEIMAGEBUFFERI3DPROC wglCreateImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
extern PFNWGLUXDESTROYIMAGEBUFFERI3DPROC wglDestroyImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
extern PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC wglAssociateImageBufferEventsI3D;
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
extern PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC wglReleaseImageBufferEventsI3D;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:17:08 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_I3D_image_buffer__
#define __GLUX_WGL_I3D_image_buffer__

GLUX_NEW_PLUGIN(WGL_I3D_image_buffer);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_IMAGE_BUFFER_MIN_ACCESS_I3D
#  define WGL_IMAGE_BUFFER_MIN_ACCESS_I3D 0x00000001
#endif
#ifndef WGL_IMAGE_BUFFER_LOCK_I3D
#  define WGL_IMAGE_BUFFER_LOCK_I3D 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
typedef LPVOID (APIENTRYP PFNWGLUXCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
typedef BOOL (APIENTRYP PFNWGLUXDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, UINT count);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
extern PFNWGLUXCREATEIMAGEBUFFERI3DPROC wglCreateImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
extern PFNWGLUXDESTROYIMAGEBUFFERI3DPROC wglDestroyImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
extern PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC wglAssociateImageBufferEventsI3D;
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
extern PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC wglReleaseImageBufferEventsI3D;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_I3D_image_buffer__
#define __GLUX_WGL_I3D_image_buffer__

GLUX_NEW_PLUGIN(WGL_I3D_image_buffer);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_IMAGE_BUFFER_MIN_ACCESS_I3D
#  define WGL_IMAGE_BUFFER_MIN_ACCESS_I3D 0x00000001
#endif
#ifndef WGL_IMAGE_BUFFER_LOCK_I3D
#  define WGL_IMAGE_BUFFER_LOCK_I3D 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
typedef LPVOID (APIENTRYP PFNWGLUXCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
typedef BOOL (APIENTRYP PFNWGLUXDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, UINT count);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
extern PFNWGLUXCREATEIMAGEBUFFERI3DPROC wglCreateImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
extern PFNWGLUXDESTROYIMAGEBUFFERI3DPROC wglDestroyImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
extern PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC wglAssociateImageBufferEventsI3D;
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
extern PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC wglReleaseImageBufferEventsI3D;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:23 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_I3D_image_buffer__
#define __GLUX_WGL_I3D_image_buffer__

GLUX_NEW_PLUGIN(WGL_I3D_image_buffer);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_IMAGE_BUFFER_MIN_ACCESS_I3D
#  define WGL_IMAGE_BUFFER_MIN_ACCESS_I3D 0x00000001
#endif
#ifndef WGL_IMAGE_BUFFER_LOCK_I3D
#  define WGL_IMAGE_BUFFER_LOCK_I3D 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
typedef LPVOID (APIENTRYP PFNWGLUXCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
typedef BOOL (APIENTRYP PFNWGLUXDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, UINT count);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
extern PFNWGLUXCREATEIMAGEBUFFERI3DPROC wglCreateImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
extern PFNWGLUXDESTROYIMAGEBUFFERI3DPROC wglDestroyImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
extern PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC wglAssociateImageBufferEventsI3D;
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
extern PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC wglReleaseImageBufferEventsI3D;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:02 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_I3D_image_buffer__
#define __GLUX_WGL_I3D_image_buffer__

GLUX_NEW_PLUGIN(WGL_I3D_image_buffer);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_IMAGE_BUFFER_MIN_ACCESS_I3D
#  define WGL_IMAGE_BUFFER_MIN_ACCESS_I3D 0x00000001
#endif
#ifndef WGL_IMAGE_BUFFER_LOCK_I3D
#  define WGL_IMAGE_BUFFER_LOCK_I3D 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
typedef LPVOID (APIENTRYP PFNWGLUXCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
typedef BOOL (APIENTRYP PFNWGLUXDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, UINT count);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
extern PFNWGLUXCREATEIMAGEBUFFERI3DPROC wglCreateImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
extern PFNWGLUXDESTROYIMAGEBUFFERI3DPROC wglDestroyImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
extern PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC wglAssociateImageBufferEventsI3D;
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
extern PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC wglReleaseImageBufferEventsI3D;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:09 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_I3D_image_buffer__
#define __GLUX_WGL_I3D_image_buffer__

GLUX_NEW_PLUGIN(WGL_I3D_image_buffer);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_IMAGE_BUFFER_MIN_ACCESS_I3D
#  define WGL_IMAGE_BUFFER_MIN_ACCESS_I3D 0x00000001
#endif
#ifndef WGL_IMAGE_BUFFER_LOCK_I3D
#  define WGL_IMAGE_BUFFER_LOCK_I3D 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
typedef LPVOID (APIENTRYP PFNWGLUXCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
typedef BOOL (APIENTRYP PFNWGLUXDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, UINT count);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
extern PFNWGLUXCREATEIMAGEBUFFERI3DPROC wglCreateImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
extern PFNWGLUXDESTROYIMAGEBUFFERI3DPROC wglDestroyImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
extern PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC wglAssociateImageBufferEventsI3D;
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
extern PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC wglReleaseImageBufferEventsI3D;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:26 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_I3D_image_buffer__
#define __GLUX_WGL_I3D_image_buffer__

GLUX_NEW_PLUGIN(WGL_I3D_image_buffer);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_IMAGE_BUFFER_MIN_ACCESS_I3D
#  define WGL_IMAGE_BUFFER_MIN_ACCESS_I3D 0x00000001
#endif
#ifndef WGL_IMAGE_BUFFER_LOCK_I3D
#  define WGL_IMAGE_BUFFER_LOCK_I3D 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
typedef LPVOID (APIENTRYP PFNWGLUXCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
typedef BOOL (APIENTRYP PFNWGLUXDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, UINT count);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
extern PFNWGLUXCREATEIMAGEBUFFERI3DPROC wglCreateImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
extern PFNWGLUXDESTROYIMAGEBUFFERI3DPROC wglDestroyImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
extern PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC wglAssociateImageBufferEventsI3D;
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
extern PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC wglReleaseImageBufferEventsI3D;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:52:09 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_I3D_image_buffer__
#define __GLUX_WGL_I3D_image_buffer__

GLUX_NEW_PLUGIN(WGL_I3D_image_buffer);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_IMAGE_BUFFER_MIN_ACCESS_I3D
#  define WGL_IMAGE_BUFFER_MIN_ACCESS_I3D 0x00000001
#endif
#ifndef WGL_IMAGE_BUFFER_LOCK_I3D
#  define WGL_IMAGE_BUFFER_LOCK_I3D 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
typedef LPVOID (APIENTRYP PFNWGLUXCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
typedef BOOL (APIENTRYP PFNWGLUXDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, UINT count);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
extern PFNWGLUXCREATEIMAGEBUFFERI3DPROC wglCreateImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
extern PFNWGLUXDESTROYIMAGEBUFFERI3DPROC wglDestroyImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
extern PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC wglAssociateImageBufferEventsI3D;
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
extern PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC wglReleaseImageBufferEventsI3D;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:52 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_I3D_image_buffer__
#define __GLUX_WGL_I3D_image_buffer__

GLUX_NEW_PLUGIN(WGL_I3D_image_buffer);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_IMAGE_BUFFER_MIN_ACCESS_I3D
#  define WGL_IMAGE_BUFFER_MIN_ACCESS_I3D 0x00000001
#endif
#ifndef WGL_IMAGE_BUFFER_LOCK_I3D
#  define WGL_IMAGE_BUFFER_LOCK_I3D 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
typedef LPVOID (APIENTRYP PFNWGLUXCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
typedef BOOL (APIENTRYP PFNWGLUXDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, UINT count);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
extern PFNWGLUXCREATEIMAGEBUFFERI3DPROC wglCreateImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
extern PFNWGLUXDESTROYIMAGEBUFFERI3DPROC wglDestroyImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
extern PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC wglAssociateImageBufferEventsI3D;
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
extern PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC wglReleaseImageBufferEventsI3D;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:11 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_I3D_image_buffer__
#define __GLUX_WGL_I3D_image_buffer__

GLUX_NEW_PLUGIN(WGL_I3D_image_buffer);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_IMAGE_BUFFER_MIN_ACCESS_I3D
#  define WGL_IMAGE_BUFFER_MIN_ACCESS_I3D 0x00000001
#endif
#ifndef WGL_IMAGE_BUFFER_LOCK_I3D
#  define WGL_IMAGE_BUFFER_LOCK_I3D 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
typedef LPVOID (APIENTRYP PFNWGLUXCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
typedef BOOL (APIENTRYP PFNWGLUXDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, UINT count);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
extern PFNWGLUXCREATEIMAGEBUFFERI3DPROC wglCreateImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
extern PFNWGLUXDESTROYIMAGEBUFFERI3DPROC wglDestroyImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
extern PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC wglAssociateImageBufferEventsI3D;
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
extern PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC wglReleaseImageBufferEventsI3D;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:30 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_I3D_image_buffer__
#define __GLUX_WGL_I3D_image_buffer__

GLUX_NEW_PLUGIN(WGL_I3D_image_buffer);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_IMAGE_BUFFER_MIN_ACCESS_I3D
#  define WGL_IMAGE_BUFFER_MIN_ACCESS_I3D 0x00000001
#endif
#ifndef WGL_IMAGE_BUFFER_LOCK_I3D
#  define WGL_IMAGE_BUFFER_LOCK_I3D 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
typedef LPVOID (APIENTRYP PFNWGLUXCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
typedef BOOL (APIENTRYP PFNWGLUXDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, UINT count);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
extern PFNWGLUXCREATEIMAGEBUFFERI3DPROC wglCreateImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
extern PFNWGLUXDESTROYIMAGEBUFFERI3DPROC wglDestroyImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
extern PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC wglAssociateImageBufferEventsI3D;
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
extern PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC wglReleaseImageBufferEventsI3D;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:26 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_I3D_image_buffer__
#define __GLUX_WGL_I3D_image_buffer__

GLUX_NEW_PLUGIN(WGL_I3D_image_buffer);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_IMAGE_BUFFER_MIN_ACCESS_I3D
#  define WGL_IMAGE_BUFFER_MIN_ACCESS_I3D 0x00000001
#endif
#ifndef WGL_IMAGE_BUFFER_LOCK_I3D
#  define WGL_IMAGE_BUFFER_LOCK_I3D 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
typedef LPVOID (APIENTRYP PFNWGLUXCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
typedef BOOL (APIENTRYP PFNWGLUXDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, UINT count);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
extern PFNWGLUXCREATEIMAGEBUFFERI3DPROC wglCreateImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
extern PFNWGLUXDESTROYIMAGEBUFFERI3DPROC wglDestroyImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
extern PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC wglAssociateImageBufferEventsI3D;
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
extern PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC wglReleaseImageBufferEventsI3D;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:42:05 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_I3D_image_buffer__
#define __GLUX_WGL_I3D_image_buffer__

GLUX_NEW_PLUGIN(WGL_I3D_image_buffer);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_IMAGE_BUFFER_MIN_ACCESS_I3D
#  define WGL_IMAGE_BUFFER_MIN_ACCESS_I3D 0x00000001
#endif
#ifndef WGL_IMAGE_BUFFER_LOCK_I3D
#  define WGL_IMAGE_BUFFER_LOCK_I3D 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
typedef LPVOID (APIENTRYP PFNWGLUXCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
typedef BOOL (APIENTRYP PFNWGLUXDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, UINT count);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
extern PFNWGLUXCREATEIMAGEBUFFERI3DPROC wglCreateImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
extern PFNWGLUXDESTROYIMAGEBUFFERI3DPROC wglDestroyImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
extern PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC wglAssociateImageBufferEventsI3D;
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
extern PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC wglReleaseImageBufferEventsI3D;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:44 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_I3D_image_buffer__
#define __GLUX_WGL_I3D_image_buffer__

GLUX_NEW_PLUGIN(WGL_I3D_image_buffer);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_IMAGE_BUFFER_MIN_ACCESS_I3D
#  define WGL_IMAGE_BUFFER_MIN_ACCESS_I3D 0x00000001
#endif
#ifndef WGL_IMAGE_BUFFER_LOCK_I3D
#  define WGL_IMAGE_BUFFER_LOCK_I3D 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
typedef LPVOID (APIENTRYP PFNWGLUXCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
typedef BOOL (APIENTRYP PFNWGLUXDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, UINT count);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
extern PFNWGLUXCREATEIMAGEBUFFERI3DPROC wglCreateImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
extern PFNWGLUXDESTROYIMAGEBUFFERI3DPROC wglDestroyImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
extern PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC wglAssociateImageBufferEventsI3D;
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
extern PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC wglReleaseImageBufferEventsI3D;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:10:03 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_I3D_image_buffer__
#define __GLUX_WGL_I3D_image_buffer__

GLUX_NEW_PLUGIN(WGL_I3D_image_buffer);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_IMAGE_BUFFER_MIN_ACCESS_I3D
#  define WGL_IMAGE_BUFFER_MIN_ACCESS_I3D 0x00000001
#endif
#ifndef WGL_IMAGE_BUFFER_LOCK_I3D
#  define WGL_IMAGE_BUFFER_LOCK_I3D 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
typedef LPVOID (APIENTRYP PFNWGLUXCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
typedef BOOL (APIENTRYP PFNWGLUXDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, UINT count);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
extern PFNWGLUXCREATEIMAGEBUFFERI3DPROC wglCreateImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
extern PFNWGLUXDESTROYIMAGEBUFFERI3DPROC wglDestroyImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
extern PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC wglAssociateImageBufferEventsI3D;
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
extern PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC wglReleaseImageBufferEventsI3D;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:20:04 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_I3D_image_buffer__
#define __GLUX_WGL_I3D_image_buffer__

GLUX_NEW_PLUGIN(WGL_I3D_image_buffer);
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_IMAGE_BUFFER_MIN_ACCESS_I3D
#  define WGL_IMAGE_BUFFER_MIN_ACCESS_I3D 0x00000001
#endif
#ifndef WGL_IMAGE_BUFFER_LOCK_I3D
#  define WGL_IMAGE_BUFFER_LOCK_I3D 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
typedef LPVOID (APIENTRYP PFNWGLUXCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
typedef BOOL (APIENTRYP PFNWGLUXDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, UINT count);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
extern PFNWGLUXCREATEIMAGEBUFFERI3DPROC wglCreateImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
extern PFNWGLUXDESTROYIMAGEBUFFERI3DPROC wglDestroyImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
extern PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC wglAssociateImageBufferEventsI3D;
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
extern PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC wglReleaseImageBufferEventsI3D;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:43:05 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_WGL_I3D_image_buffer__
#define __GLUX_WGL_I3D_image_buffer__

GLUX_NEW_PLUGIN(WGL_I3D_image_buffer)
// --------------------------------------------------------
#ifdef WIN32
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef WGL_IMAGE_BUFFER_MIN_ACCESS_I3D
#  define WGL_IMAGE_BUFFER_MIN_ACCESS_I3D 0x00000001
#endif
#ifndef WGL_IMAGE_BUFFER_LOCK_I3D
#  define WGL_IMAGE_BUFFER_LOCK_I3D 0x00000002
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
typedef LPVOID (APIENTRYP PFNWGLUXCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
typedef BOOL (APIENTRYP PFNWGLUXDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
typedef BOOL (APIENTRYP PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, UINT count);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_wglCreateImageBufferI3D
extern PFNWGLUXCREATEIMAGEBUFFERI3DPROC wglCreateImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglDestroyImageBufferI3D
extern PFNWGLUXDESTROYIMAGEBUFFERI3DPROC wglDestroyImageBufferI3D;
#endif
#ifndef __GLUX__GLFCT_wglAssociateImageBufferEventsI3D
extern PFNWGLUXASSOCIATEIMAGEBUFFEREVENTSI3DPROC wglAssociateImageBufferEventsI3D;
#endif
#ifndef __GLUX__GLFCT_wglReleaseImageBufferEventsI3D
extern PFNWGLUXRELEASEIMAGEBUFFEREVENTSI3DPROC wglReleaseImageBufferEventsI3D;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------
