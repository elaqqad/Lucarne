
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:27 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback2__
#define __GLUX_GL_NV_transform_feedback2__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TRANSFORM_FEEDBACK_NV
#  define GL_TRANSFORM_FEEDBACK_NV 0x8E22
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BINDING_NV 0x8E25
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
typedef GLboolean (APIENTRYP PFNGLUXISTRANSFORMFEEDBACKNVPROC) (GLuint id);
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
extern PFNGLUXBINDTRANSFORMFEEDBACKNVPROC glBindTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
extern PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC glDeleteTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
extern PFNGLUXGENTRANSFORMFEEDBACKSNVPROC glGenTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
extern PFNGLUXISTRANSFORMFEEDBACKNVPROC glIsTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
extern PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC glPauseTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
extern PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC glResumeTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
extern PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC glDrawTransformFeedbackNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:45 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback2__
#define __GLUX_GL_NV_transform_feedback2__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TRANSFORM_FEEDBACK_NV
#  define GL_TRANSFORM_FEEDBACK_NV 0x8E22
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BINDING_NV 0x8E25
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
typedef GLboolean (APIENTRYP PFNGLUXISTRANSFORMFEEDBACKNVPROC) (GLuint id);
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
extern PFNGLUXBINDTRANSFORMFEEDBACKNVPROC glBindTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
extern PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC glDeleteTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
extern PFNGLUXGENTRANSFORMFEEDBACKSNVPROC glGenTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
extern PFNGLUXISTRANSFORMFEEDBACKNVPROC glIsTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
extern PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC glPauseTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
extern PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC glResumeTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
extern PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC glDrawTransformFeedbackNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:54 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback2__
#define __GLUX_GL_NV_transform_feedback2__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TRANSFORM_FEEDBACK_NV
#  define GL_TRANSFORM_FEEDBACK_NV 0x8E22
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BINDING_NV 0x8E25
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
typedef GLboolean (APIENTRYP PFNGLUXISTRANSFORMFEEDBACKNVPROC) (GLuint id);
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
extern PFNGLUXBINDTRANSFORMFEEDBACKNVPROC glBindTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
extern PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC glDeleteTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
extern PFNGLUXGENTRANSFORMFEEDBACKSNVPROC glGenTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
extern PFNGLUXISTRANSFORMFEEDBACKNVPROC glIsTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
extern PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC glPauseTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
extern PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC glResumeTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
extern PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC glDrawTransformFeedbackNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:13 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback2__
#define __GLUX_GL_NV_transform_feedback2__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TRANSFORM_FEEDBACK_NV
#  define GL_TRANSFORM_FEEDBACK_NV 0x8E22
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BINDING_NV 0x8E25
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
typedef GLboolean (APIENTRYP PFNGLUXISTRANSFORMFEEDBACKNVPROC) (GLuint id);
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
extern PFNGLUXBINDTRANSFORMFEEDBACKNVPROC glBindTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
extern PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC glDeleteTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
extern PFNGLUXGENTRANSFORMFEEDBACKSNVPROC glGenTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
extern PFNGLUXISTRANSFORMFEEDBACKNVPROC glIsTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
extern PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC glPauseTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
extern PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC glResumeTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
extern PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC glDrawTransformFeedbackNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:30 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback2__
#define __GLUX_GL_NV_transform_feedback2__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TRANSFORM_FEEDBACK_NV
#  define GL_TRANSFORM_FEEDBACK_NV 0x8E22
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BINDING_NV 0x8E25
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
typedef GLboolean (APIENTRYP PFNGLUXISTRANSFORMFEEDBACKNVPROC) (GLuint id);
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
extern PFNGLUXBINDTRANSFORMFEEDBACKNVPROC glBindTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
extern PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC glDeleteTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
extern PFNGLUXGENTRANSFORMFEEDBACKSNVPROC glGenTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
extern PFNGLUXISTRANSFORMFEEDBACKNVPROC glIsTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
extern PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC glPauseTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
extern PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC glResumeTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
extern PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC glDrawTransformFeedbackNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:33 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback2__
#define __GLUX_GL_NV_transform_feedback2__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TRANSFORM_FEEDBACK_NV
#  define GL_TRANSFORM_FEEDBACK_NV 0x8E22
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BINDING_NV 0x8E25
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
typedef GLboolean (APIENTRYP PFNGLUXISTRANSFORMFEEDBACKNVPROC) (GLuint id);
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
extern PFNGLUXBINDTRANSFORMFEEDBACKNVPROC glBindTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
extern PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC glDeleteTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
extern PFNGLUXGENTRANSFORMFEEDBACKSNVPROC glGenTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
extern PFNGLUXISTRANSFORMFEEDBACKNVPROC glIsTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
extern PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC glPauseTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
extern PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC glResumeTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
extern PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC glDrawTransformFeedbackNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:55 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback2__
#define __GLUX_GL_NV_transform_feedback2__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TRANSFORM_FEEDBACK_NV
#  define GL_TRANSFORM_FEEDBACK_NV 0x8E22
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BINDING_NV 0x8E25
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
typedef GLboolean (APIENTRYP PFNGLUXISTRANSFORMFEEDBACKNVPROC) (GLuint id);
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
extern PFNGLUXBINDTRANSFORMFEEDBACKNVPROC glBindTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
extern PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC glDeleteTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
extern PFNGLUXGENTRANSFORMFEEDBACKSNVPROC glGenTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
extern PFNGLUXISTRANSFORMFEEDBACKNVPROC glIsTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
extern PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC glPauseTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
extern PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC glResumeTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
extern PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC glDrawTransformFeedbackNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:28:04 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback2__
#define __GLUX_GL_NV_transform_feedback2__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TRANSFORM_FEEDBACK_NV
#  define GL_TRANSFORM_FEEDBACK_NV 0x8E22
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BINDING_NV 0x8E25
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
typedef GLboolean (APIENTRYP PFNGLUXISTRANSFORMFEEDBACKNVPROC) (GLuint id);
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
extern PFNGLUXBINDTRANSFORMFEEDBACKNVPROC glBindTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
extern PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC glDeleteTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
extern PFNGLUXGENTRANSFORMFEEDBACKSNVPROC glGenTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
extern PFNGLUXISTRANSFORMFEEDBACKNVPROC glIsTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
extern PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC glPauseTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
extern PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC glResumeTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
extern PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC glDrawTransformFeedbackNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:16:59 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback2__
#define __GLUX_GL_NV_transform_feedback2__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TRANSFORM_FEEDBACK_NV
#  define GL_TRANSFORM_FEEDBACK_NV 0x8E22
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BINDING_NV 0x8E25
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
typedef GLboolean (APIENTRYP PFNGLUXISTRANSFORMFEEDBACKNVPROC) (GLuint id);
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
extern PFNGLUXBINDTRANSFORMFEEDBACKNVPROC glBindTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
extern PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC glDeleteTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
extern PFNGLUXGENTRANSFORMFEEDBACKSNVPROC glGenTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
extern PFNGLUXISTRANSFORMFEEDBACKNVPROC glIsTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
extern PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC glPauseTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
extern PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC glResumeTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
extern PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC glDrawTransformFeedbackNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback2__
#define __GLUX_GL_NV_transform_feedback2__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TRANSFORM_FEEDBACK_NV
#  define GL_TRANSFORM_FEEDBACK_NV 0x8E22
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BINDING_NV 0x8E25
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
typedef GLboolean (APIENTRYP PFNGLUXISTRANSFORMFEEDBACKNVPROC) (GLuint id);
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
extern PFNGLUXBINDTRANSFORMFEEDBACKNVPROC glBindTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
extern PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC glDeleteTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
extern PFNGLUXGENTRANSFORMFEEDBACKSNVPROC glGenTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
extern PFNGLUXISTRANSFORMFEEDBACKNVPROC glIsTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
extern PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC glPauseTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
extern PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC glResumeTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
extern PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC glDrawTransformFeedbackNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:21 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback2__
#define __GLUX_GL_NV_transform_feedback2__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TRANSFORM_FEEDBACK_NV
#  define GL_TRANSFORM_FEEDBACK_NV 0x8E22
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BINDING_NV 0x8E25
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
typedef GLboolean (APIENTRYP PFNGLUXISTRANSFORMFEEDBACKNVPROC) (GLuint id);
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
extern PFNGLUXBINDTRANSFORMFEEDBACKNVPROC glBindTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
extern PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC glDeleteTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
extern PFNGLUXGENTRANSFORMFEEDBACKSNVPROC glGenTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
extern PFNGLUXISTRANSFORMFEEDBACKNVPROC glIsTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
extern PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC glPauseTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
extern PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC glResumeTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
extern PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC glDrawTransformFeedbackNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback2__
#define __GLUX_GL_NV_transform_feedback2__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TRANSFORM_FEEDBACK_NV
#  define GL_TRANSFORM_FEEDBACK_NV 0x8E22
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BINDING_NV 0x8E25
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
typedef GLboolean (APIENTRYP PFNGLUXISTRANSFORMFEEDBACKNVPROC) (GLuint id);
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
extern PFNGLUXBINDTRANSFORMFEEDBACKNVPROC glBindTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
extern PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC glDeleteTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
extern PFNGLUXGENTRANSFORMFEEDBACKSNVPROC glGenTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
extern PFNGLUXISTRANSFORMFEEDBACKNVPROC glIsTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
extern PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC glPauseTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
extern PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC glResumeTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
extern PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC glDrawTransformFeedbackNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:09 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback2__
#define __GLUX_GL_NV_transform_feedback2__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TRANSFORM_FEEDBACK_NV
#  define GL_TRANSFORM_FEEDBACK_NV 0x8E22
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BINDING_NV 0x8E25
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
typedef GLboolean (APIENTRYP PFNGLUXISTRANSFORMFEEDBACKNVPROC) (GLuint id);
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
extern PFNGLUXBINDTRANSFORMFEEDBACKNVPROC glBindTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
extern PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC glDeleteTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
extern PFNGLUXGENTRANSFORMFEEDBACKSNVPROC glGenTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
extern PFNGLUXISTRANSFORMFEEDBACKNVPROC glIsTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
extern PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC glPauseTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
extern PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC glResumeTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
extern PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC glDrawTransformFeedbackNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:23 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback2__
#define __GLUX_GL_NV_transform_feedback2__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TRANSFORM_FEEDBACK_NV
#  define GL_TRANSFORM_FEEDBACK_NV 0x8E22
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BINDING_NV 0x8E25
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
typedef GLboolean (APIENTRYP PFNGLUXISTRANSFORMFEEDBACKNVPROC) (GLuint id);
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
extern PFNGLUXBINDTRANSFORMFEEDBACKNVPROC glBindTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
extern PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC glDeleteTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
extern PFNGLUXGENTRANSFORMFEEDBACKSNVPROC glGenTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
extern PFNGLUXISTRANSFORMFEEDBACKNVPROC glIsTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
extern PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC glPauseTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
extern PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC glResumeTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
extern PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC glDrawTransformFeedbackNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:52:03 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback2__
#define __GLUX_GL_NV_transform_feedback2__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TRANSFORM_FEEDBACK_NV
#  define GL_TRANSFORM_FEEDBACK_NV 0x8E22
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BINDING_NV 0x8E25
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
typedef GLboolean (APIENTRYP PFNGLUXISTRANSFORMFEEDBACKNVPROC) (GLuint id);
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
extern PFNGLUXBINDTRANSFORMFEEDBACKNVPROC glBindTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
extern PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC glDeleteTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
extern PFNGLUXGENTRANSFORMFEEDBACKSNVPROC glGenTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
extern PFNGLUXISTRANSFORMFEEDBACKNVPROC glIsTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
extern PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC glPauseTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
extern PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC glResumeTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
extern PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC glDrawTransformFeedbackNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback2__
#define __GLUX_GL_NV_transform_feedback2__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TRANSFORM_FEEDBACK_NV
#  define GL_TRANSFORM_FEEDBACK_NV 0x8E22
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BINDING_NV 0x8E25
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
typedef GLboolean (APIENTRYP PFNGLUXISTRANSFORMFEEDBACKNVPROC) (GLuint id);
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
extern PFNGLUXBINDTRANSFORMFEEDBACKNVPROC glBindTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
extern PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC glDeleteTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
extern PFNGLUXGENTRANSFORMFEEDBACKSNVPROC glGenTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
extern PFNGLUXISTRANSFORMFEEDBACKNVPROC glIsTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
extern PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC glPauseTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
extern PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC glResumeTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
extern PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC glDrawTransformFeedbackNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:05 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback2__
#define __GLUX_GL_NV_transform_feedback2__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TRANSFORM_FEEDBACK_NV
#  define GL_TRANSFORM_FEEDBACK_NV 0x8E22
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BINDING_NV 0x8E25
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
typedef GLboolean (APIENTRYP PFNGLUXISTRANSFORMFEEDBACKNVPROC) (GLuint id);
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
extern PFNGLUXBINDTRANSFORMFEEDBACKNVPROC glBindTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
extern PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC glDeleteTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
extern PFNGLUXGENTRANSFORMFEEDBACKSNVPROC glGenTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
extern PFNGLUXISTRANSFORMFEEDBACKNVPROC glIsTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
extern PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC glPauseTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
extern PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC glResumeTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
extern PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC glDrawTransformFeedbackNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:26 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback2__
#define __GLUX_GL_NV_transform_feedback2__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TRANSFORM_FEEDBACK_NV
#  define GL_TRANSFORM_FEEDBACK_NV 0x8E22
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BINDING_NV 0x8E25
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
typedef GLboolean (APIENTRYP PFNGLUXISTRANSFORMFEEDBACKNVPROC) (GLuint id);
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
extern PFNGLUXBINDTRANSFORMFEEDBACKNVPROC glBindTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
extern PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC glDeleteTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
extern PFNGLUXGENTRANSFORMFEEDBACKSNVPROC glGenTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
extern PFNGLUXISTRANSFORMFEEDBACKNVPROC glIsTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
extern PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC glPauseTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
extern PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC glResumeTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
extern PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC glDrawTransformFeedbackNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback2__
#define __GLUX_GL_NV_transform_feedback2__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TRANSFORM_FEEDBACK_NV
#  define GL_TRANSFORM_FEEDBACK_NV 0x8E22
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BINDING_NV 0x8E25
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
typedef GLboolean (APIENTRYP PFNGLUXISTRANSFORMFEEDBACKNVPROC) (GLuint id);
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
extern PFNGLUXBINDTRANSFORMFEEDBACKNVPROC glBindTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
extern PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC glDeleteTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
extern PFNGLUXGENTRANSFORMFEEDBACKSNVPROC glGenTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
extern PFNGLUXISTRANSFORMFEEDBACKNVPROC glIsTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
extern PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC glPauseTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
extern PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC glResumeTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
extern PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC glDrawTransformFeedbackNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:42:00 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback2__
#define __GLUX_GL_NV_transform_feedback2__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TRANSFORM_FEEDBACK_NV
#  define GL_TRANSFORM_FEEDBACK_NV 0x8E22
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BINDING_NV 0x8E25
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
typedef GLboolean (APIENTRYP PFNGLUXISTRANSFORMFEEDBACKNVPROC) (GLuint id);
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
extern PFNGLUXBINDTRANSFORMFEEDBACKNVPROC glBindTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
extern PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC glDeleteTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
extern PFNGLUXGENTRANSFORMFEEDBACKSNVPROC glGenTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
extern PFNGLUXISTRANSFORMFEEDBACKNVPROC glIsTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
extern PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC glPauseTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
extern PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC glResumeTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
extern PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC glDrawTransformFeedbackNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:40 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback2__
#define __GLUX_GL_NV_transform_feedback2__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TRANSFORM_FEEDBACK_NV
#  define GL_TRANSFORM_FEEDBACK_NV 0x8E22
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BINDING_NV 0x8E25
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
typedef GLboolean (APIENTRYP PFNGLUXISTRANSFORMFEEDBACKNVPROC) (GLuint id);
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
extern PFNGLUXBINDTRANSFORMFEEDBACKNVPROC glBindTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
extern PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC glDeleteTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
extern PFNGLUXGENTRANSFORMFEEDBACKSNVPROC glGenTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
extern PFNGLUXISTRANSFORMFEEDBACKNVPROC glIsTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
extern PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC glPauseTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
extern PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC glResumeTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
extern PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC glDrawTransformFeedbackNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:10:00 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback2__
#define __GLUX_GL_NV_transform_feedback2__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TRANSFORM_FEEDBACK_NV
#  define GL_TRANSFORM_FEEDBACK_NV 0x8E22
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BINDING_NV 0x8E25
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
typedef GLboolean (APIENTRYP PFNGLUXISTRANSFORMFEEDBACKNVPROC) (GLuint id);
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
extern PFNGLUXBINDTRANSFORMFEEDBACKNVPROC glBindTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
extern PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC glDeleteTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
extern PFNGLUXGENTRANSFORMFEEDBACKSNVPROC glGenTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
extern PFNGLUXISTRANSFORMFEEDBACKNVPROC glIsTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
extern PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC glPauseTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
extern PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC glResumeTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
extern PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC glDrawTransformFeedbackNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:20:00 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback2__
#define __GLUX_GL_NV_transform_feedback2__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback2);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TRANSFORM_FEEDBACK_NV
#  define GL_TRANSFORM_FEEDBACK_NV 0x8E22
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BINDING_NV 0x8E25
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
typedef GLboolean (APIENTRYP PFNGLUXISTRANSFORMFEEDBACKNVPROC) (GLuint id);
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
extern PFNGLUXBINDTRANSFORMFEEDBACKNVPROC glBindTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
extern PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC glDeleteTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
extern PFNGLUXGENTRANSFORMFEEDBACKSNVPROC glGenTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
extern PFNGLUXISTRANSFORMFEEDBACKNVPROC glIsTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
extern PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC glPauseTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
extern PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC glResumeTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
extern PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC glDrawTransformFeedbackNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:42:59 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_transform_feedback2__
#define __GLUX_GL_NV_transform_feedback2__

GLUX_NEW_PLUGIN(GL_NV_transform_feedback2)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_TRANSFORM_FEEDBACK_NV
#  define GL_TRANSFORM_FEEDBACK_NV 0x8E22
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
#  define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
#endif
#ifndef GL_TRANSFORM_FEEDBACK_BINDING_NV
#  define GL_TRANSFORM_FEEDBACK_BINDING_NV 0x8E25
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
typedef void (APIENTRYP PFNGLUXGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
typedef GLboolean (APIENTRYP PFNGLUXISTRANSFORMFEEDBACKNVPROC) (GLuint id);
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
typedef void (APIENTRYP PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindTransformFeedbackNV
extern PFNGLUXBINDTRANSFORMFEEDBACKNVPROC glBindTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDeleteTransformFeedbacksNV
extern PFNGLUXDELETETRANSFORMFEEDBACKSNVPROC glDeleteTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glGenTransformFeedbacksNV
extern PFNGLUXGENTRANSFORMFEEDBACKSNVPROC glGenTransformFeedbacksNV;
#endif
#ifndef __GLUX__GLFCT_glIsTransformFeedbackNV
extern PFNGLUXISTRANSFORMFEEDBACKNVPROC glIsTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glPauseTransformFeedbackNV
extern PFNGLUXPAUSETRANSFORMFEEDBACKNVPROC glPauseTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glResumeTransformFeedbackNV
extern PFNGLUXRESUMETRANSFORMFEEDBACKNVPROC glResumeTransformFeedbackNV;
#endif
#ifndef __GLUX__GLFCT_glDrawTransformFeedbackNV
extern PFNGLUXDRAWTRANSFORMFEEDBACKNVPROC glDrawTransformFeedbackNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
