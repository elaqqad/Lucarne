
// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:34 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_VERSION_2_0__
#define __GLUX_GL_VERSION_2_0__

GLUX_NEW_PLUGIN(GL_VERSION_2_0);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BLEND_EQUATION_RGB
#  define GL_BLEND_EQUATION_RGB 0x8009
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_ENABLED
#  define GL_VERTEX_ATTRIB_ARRAY_ENABLED 0x8622
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_SIZE
#  define GL_VERTEX_ATTRIB_ARRAY_SIZE 0x8623
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_STRIDE
#  define GL_VERTEX_ATTRIB_ARRAY_STRIDE 0x8624
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_TYPE
#  define GL_VERTEX_ATTRIB_ARRAY_TYPE 0x8625
#endif
#ifndef GL_CURRENT_VERTEX_ATTRIB
#  define GL_CURRENT_VERTEX_ATTRIB 0x8626
#endif
#ifndef GL_VERTEX_PROGRAM_POINT_SIZE
#  define GL_VERTEX_PROGRAM_POINT_SIZE 0x8642
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_POINTER
#  define GL_VERTEX_ATTRIB_ARRAY_POINTER 0x8645
#endif
#ifndef GL_STENCIL_BACK_FUNC
#  define GL_STENCIL_BACK_FUNC 0x8800
#endif
#ifndef GL_STENCIL_BACK_FAIL
#  define GL_STENCIL_BACK_FAIL 0x8801
#endif
#ifndef GL_STENCIL_BACK_PASS_DEPTH_FAIL
#  define GL_STENCIL_BACK_PASS_DEPTH_FAIL 0x8802
#endif
#ifndef GL_STENCIL_BACK_PASS_DEPTH_PASS
#  define GL_STENCIL_BACK_PASS_DEPTH_PASS 0x8803
#endif
#ifndef GL_MAX_DRAW_BUFFERS
#  define GL_MAX_DRAW_BUFFERS 0x8824
#endif
#ifndef GL_DRAW_BUFFER0
#  define GL_DRAW_BUFFER0 0x8825
#endif
#ifndef GL_DRAW_BUFFER1
#  define GL_DRAW_BUFFER1 0x8826
#endif
#ifndef GL_DRAW_BUFFER2
#  define GL_DRAW_BUFFER2 0x8827
#endif
#ifndef GL_DRAW_BUFFER3
#  define GL_DRAW_BUFFER3 0x8828
#endif
#ifndef GL_DRAW_BUFFER4
#  define GL_DRAW_BUFFER4 0x8829
#endif
#ifndef GL_DRAW_BUFFER5
#  define GL_DRAW_BUFFER5 0x882A
#endif
#ifndef GL_DRAW_BUFFER6
#  define GL_DRAW_BUFFER6 0x882B
#endif
#ifndef GL_DRAW_BUFFER7
#  define GL_DRAW_BUFFER7 0x882C
#endif
#ifndef GL_DRAW_BUFFER8
#  define GL_DRAW_BUFFER8 0x882D
#endif
#ifndef GL_DRAW_BUFFER9
#  define GL_DRAW_BUFFER9 0x882E
#endif
#ifndef GL_DRAW_BUFFER10
#  define GL_DRAW_BUFFER10 0x882F
#endif
#ifndef GL_DRAW_BUFFER11
#  define GL_DRAW_BUFFER11 0x8830
#endif
#ifndef GL_DRAW_BUFFER12
#  define GL_DRAW_BUFFER12 0x8831
#endif
#ifndef GL_DRAW_BUFFER13
#  define GL_DRAW_BUFFER13 0x8832
#endif
#ifndef GL_DRAW_BUFFER14
#  define GL_DRAW_BUFFER14 0x8833
#endif
#ifndef GL_DRAW_BUFFER15
#  define GL_DRAW_BUFFER15 0x8834
#endif
#ifndef GL_BLEND_EQUATION_ALPHA
#  define GL_BLEND_EQUATION_ALPHA 0x883D
#endif
#ifndef GL_MAX_VERTEX_ATTRIBS
#  define GL_MAX_VERTEX_ATTRIBS 0x8869
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
#  define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED 0x886A
#endif
#ifndef GL_MAX_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TEXTURE_IMAGE_UNITS 0x8872
#endif
#ifndef GL_FRAGMENT_SHADER
#  define GL_FRAGMENT_SHADER 0x8B30
#endif
#ifndef GL_VERTEX_SHADER
#  define GL_VERTEX_SHADER 0x8B31
#endif
#ifndef GL_MAX_FRAGMENT_UNIFORM_COMPONENTS
#  define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS 0x8B49
#endif
#ifndef GL_MAX_VERTEX_UNIFORM_COMPONENTS
#  define GL_MAX_VERTEX_UNIFORM_COMPONENTS 0x8B4A
#endif
#ifndef GL_MAX_VARYING_FLOATS
#  define GL_MAX_VARYING_FLOATS 0x8B4B
#endif
#ifndef GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
#  define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS 0x8B4C
#endif
#ifndef GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
#  define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS 0x8B4D
#endif
#ifndef GL_SHADER_TYPE
#  define GL_SHADER_TYPE 0x8B4F
#endif
#ifndef GL_FLOAT_VEC2
#  define GL_FLOAT_VEC2 0x8B50
#endif
#ifndef GL_FLOAT_VEC3
#  define GL_FLOAT_VEC3 0x8B51
#endif
#ifndef GL_FLOAT_VEC4
#  define GL_FLOAT_VEC4 0x8B52
#endif
#ifndef GL_INT_VEC2
#  define GL_INT_VEC2 0x8B53
#endif
#ifndef GL_INT_VEC3
#  define GL_INT_VEC3 0x8B54
#endif
#ifndef GL_INT_VEC4
#  define GL_INT_VEC4 0x8B55
#endif
#ifndef GL_BOOL
#  define GL_BOOL 0x8B56
#endif
#ifndef GL_BOOL_VEC2
#  define GL_BOOL_VEC2 0x8B57
#endif
#ifndef GL_BOOL_VEC3
#  define GL_BOOL_VEC3 0x8B58
#endif
#ifndef GL_BOOL_VEC4
#  define GL_BOOL_VEC4 0x8B59
#endif
#ifndef GL_FLOAT_MAT2
#  define GL_FLOAT_MAT2 0x8B5A
#endif
#ifndef GL_FLOAT_MAT3
#  define GL_FLOAT_MAT3 0x8B5B
#endif
#ifndef GL_FLOAT_MAT4
#  define GL_FLOAT_MAT4 0x8B5C
#endif
#ifndef GL_SAMPLER_1D
#  define GL_SAMPLER_1D 0x8B5D
#endif
#ifndef GL_SAMPLER_2D
#  define GL_SAMPLER_2D 0x8B5E
#endif
#ifndef GL_SAMPLER_3D
#  define GL_SAMPLER_3D 0x8B5F
#endif
#ifndef GL_SAMPLER_CUBE
#  define GL_SAMPLER_CUBE 0x8B60
#endif
#ifndef GL_SAMPLER_1D_SHADOW
#  define GL_SAMPLER_1D_SHADOW 0x8B61
#endif
#ifndef GL_SAMPLER_2D_SHADOW
#  define GL_SAMPLER_2D_SHADOW 0x8B62
#endif
#ifndef GL_DELETE_STATUS
#  define GL_DELETE_STATUS 0x8B80
#endif
#ifndef GL_COMPILE_STATUS
#  define GL_COMPILE_STATUS 0x8B81
#endif
#ifndef GL_LINK_STATUS
#  define GL_LINK_STATUS 0x8B82
#endif
#ifndef GL_VALIDATE_STATUS
#  define GL_VALIDATE_STATUS 0x8B83
#endif
#ifndef GL_INFO_LOG_LENGTH
#  define GL_INFO_LOG_LENGTH 0x8B84
#endif
#ifndef GL_ATTACHED_SHADERS
#  define GL_ATTACHED_SHADERS 0x8B85
#endif
#ifndef GL_ACTIVE_UNIFORMS
#  define GL_ACTIVE_UNIFORMS 0x8B86
#endif
#ifndef GL_ACTIVE_UNIFORM_MAX_LENGTH
#  define GL_ACTIVE_UNIFORM_MAX_LENGTH 0x8B87
#endif
#ifndef GL_SHADER_SOURCE_LENGTH
#  define GL_SHADER_SOURCE_LENGTH 0x8B88
#endif
#ifndef GL_ACTIVE_ATTRIBUTES
#  define GL_ACTIVE_ATTRIBUTES 0x8B89
#endif
#ifndef GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
#  define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH 0x8B8A
#endif
#ifndef GL_FRAGMENT_SHADER_DERIVATIVE_HINT
#  define GL_FRAGMENT_SHADER_DERIVATIVE_HINT 0x8B8B
#endif
#ifndef GL_SHADING_LANGUAGE_VERSION
#  define GL_SHADING_LANGUAGE_VERSION 0x8B8C
#endif
#ifndef GL_CURRENT_PROGRAM
#  define GL_CURRENT_PROGRAM 0x8B8D
#endif
#ifndef GL_POINT_SPRITE_COORD_ORIGIN
#  define GL_POINT_SPRITE_COORD_ORIGIN 0x8CA0
#endif
#ifndef GL_LOWER_LEFT
#  define GL_LOWER_LEFT 0x8CA1
#endif
#ifndef GL_UPPER_LEFT
#  define GL_UPPER_LEFT 0x8CA2
#endif
#ifndef GL_STENCIL_BACK_REF
#  define GL_STENCIL_BACK_REF 0x8CA3
#endif
#ifndef GL_STENCIL_BACK_VALUE_MASK
#  define GL_STENCIL_BACK_VALUE_MASK 0x8CA4
#endif
#ifndef GL_STENCIL_BACK_WRITEMASK
#  define GL_STENCIL_BACK_WRITEMASK 0x8CA5
#endif
#ifndef GL_VERTEX_PROGRAM_TWO_SIDE
#  define GL_VERTEX_PROGRAM_TWO_SIDE 0x8643
#endif
#ifndef GL_POINT_SPRITE
#  define GL_POINT_SPRITE 0x8861
#endif
#ifndef GL_COORD_REPLACE
#  define GL_COORD_REPLACE 0x8862
#endif
#ifndef GL_MAX_TEXTURE_COORDS
#  define GL_MAX_TEXTURE_COORDS 0x8871
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBlendEquationSeparate
typedef void (APIENTRYP PFNGLUXBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);
#endif
#ifndef __GLUX__GLFCT_glDrawBuffers
typedef void (APIENTRYP PFNGLUXDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);
#endif
#ifndef __GLUX__GLFCT_glStencilOpSeparate
typedef void (APIENTRYP PFNGLUXSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
#endif
#ifndef __GLUX__GLFCT_glStencilFuncSeparate
typedef void (APIENTRYP PFNGLUXSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLuint mask);
#endif
#ifndef __GLUX__GLFCT_glStencilMaskSeparate
typedef void (APIENTRYP PFNGLUXSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);
#endif
#ifndef __GLUX__GLFCT_glAttachShader
typedef void (APIENTRYP PFNGLUXATTACHSHADERPROC) (GLuint program, GLuint shader);
#endif
#ifndef __GLUX__GLFCT_glBindAttribLocation
typedef void (APIENTRYP PFNGLUXBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glCompileShader
typedef void (APIENTRYP PFNGLUXCOMPILESHADERPROC) (GLuint shader);
#endif
#ifndef __GLUX__GLFCT_glCreateProgram
typedef GLuint (APIENTRYP PFNGLUXCREATEPROGRAMPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glCreateShader
typedef GLuint (APIENTRYP PFNGLUXCREATESHADERPROC) (GLenum type);
#endif
#ifndef __GLUX__GLFCT_glDeleteProgram
typedef void (APIENTRYP PFNGLUXDELETEPROGRAMPROC) (GLuint program);
#endif
#ifndef __GLUX__GLFCT_glDeleteShader
typedef void (APIENTRYP PFNGLUXDELETESHADERPROC) (GLuint shader);
#endif
#ifndef __GLUX__GLFCT_glDetachShader
typedef void (APIENTRYP PFNGLUXDETACHSHADERPROC) (GLuint program, GLuint shader);
#endif
#ifndef __GLUX__GLFCT_glDisableVertexAttribArray
typedef void (APIENTRYP PFNGLUXDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);
#endif
#ifndef __GLUX__GLFCT_glEnableVertexAttribArray
typedef void (APIENTRYP PFNGLUXENABLEVERTEXATTRIBARRAYPROC) (GLuint index);
#endif
#ifndef __GLUX__GLFCT_glGetActiveAttrib
typedef void (APIENTRYP PFNGLUXGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveUniform
typedef void (APIENTRYP PFNGLUXGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetAttachedShaders
typedef void (APIENTRYP PFNGLUXGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *obj);
#endif
#ifndef __GLUX__GLFCT_glGetAttribLocation
typedef GLint (APIENTRYP PFNGLUXGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramInfoLog
typedef void (APIENTRYP PFNGLUXGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
#endif
#ifndef __GLUX__GLFCT_glGetShaderiv
typedef void (APIENTRYP PFNGLUXGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetShaderInfoLog
typedef void (APIENTRYP PFNGLUXGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
#endif
#ifndef __GLUX__GLFCT_glGetShaderSource
typedef void (APIENTRYP PFNGLUXGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
#endif
#ifndef __GLUX__GLFCT_glGetUniformLocation
typedef GLint (APIENTRYP PFNGLUXGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetUniformfv
typedef void (APIENTRYP PFNGLUXGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetUniformiv
typedef void (APIENTRYP PFNGLUXGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribdv
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *params);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribfv
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribiv
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribPointerv
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, GLvoid* *pointer);
#endif
#ifndef __GLUX__GLFCT_glIsProgram
typedef GLboolean (APIENTRYP PFNGLUXISPROGRAMPROC) (GLuint program);
#endif
#ifndef __GLUX__GLFCT_glIsShader
typedef GLboolean (APIENTRYP PFNGLUXISSHADERPROC) (GLuint shader);
#endif
#ifndef __GLUX__GLFCT_glLinkProgram
typedef void (APIENTRYP PFNGLUXLINKPROGRAMPROC) (GLuint program);
#endif
#ifndef __GLUX__GLFCT_glShaderSource
typedef void (APIENTRYP PFNGLUXSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar* const *string, const GLint *length);
#endif
#ifndef __GLUX__GLFCT_glUseProgram
typedef void (APIENTRYP PFNGLUXUSEPROGRAMPROC) (GLuint program);
#endif
#ifndef __GLUX__GLFCT_glUniform1f
typedef void (APIENTRYP PFNGLUXUNIFORM1FPROC) (GLint location, GLfloat v0);
#endif
#ifndef __GLUX__GLFCT_glUniform2f
typedef void (APIENTRYP PFNGLUXUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);
#endif
#ifndef __GLUX__GLFCT_glUniform3f
typedef void (APIENTRYP PFNGLUXUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
#endif
#ifndef __GLUX__GLFCT_glUniform4f
typedef void (APIENTRYP PFNGLUXUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
#endif
#ifndef __GLUX__GLFCT_glUniform1i
typedef void (APIENTRYP PFNGLUXUNIFORM1IPROC) (GLint location, GLint v0);
#endif
#ifndef __GLUX__GLFCT_glUniform2i
typedef void (APIENTRYP PFNGLUXUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);
#endif
#ifndef __GLUX__GLFCT_glUniform3i
typedef void (APIENTRYP PFNGLUXUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);
#endif
#ifndef __GLUX__GLFCT_glUniform4i
typedef void (APIENTRYP PFNGLUXUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
#endif
#ifndef __GLUX__GLFCT_glUniform1fv
typedef void (APIENTRYP PFNGLUXUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2fv
typedef void (APIENTRYP PFNGLUXUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3fv
typedef void (APIENTRYP PFNGLUXUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4fv
typedef void (APIENTRYP PFNGLUXUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glUniform1iv
typedef void (APIENTRYP PFNGLUXUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2iv
typedef void (APIENTRYP PFNGLUXUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3iv
typedef void (APIENTRYP PFNGLUXUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4iv
typedef void (APIENTRYP PFNGLUXUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2fv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3fv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4fv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glValidateProgram
typedef void (APIENTRYP PFNGLUXVALIDATEPROGRAMPROC) (GLuint program);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1d
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1dv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1f
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1fv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1s
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB1SPROC) (GLuint index, GLshort x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1sv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2d
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2dv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2f
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2fv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2s
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2sv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3d
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3dv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3f
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3fv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3s
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3sv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nbv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Niv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nsv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nub
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nubv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nuiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nusv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4bv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4d
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4dv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4f
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4fv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4iv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4s
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4sv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4ubv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4usv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribPointer
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBlendEquationSeparate
extern PFNGLUXBLENDEQUATIONSEPARATEPROC glBlendEquationSeparate;
#endif
#ifndef __GLUX__GLFCT_glDrawBuffers
extern PFNGLUXDRAWBUFFERSPROC glDrawBuffers;
#endif
#ifndef __GLUX__GLFCT_glStencilOpSeparate
extern PFNGLUXSTENCILOPSEPARATEPROC glStencilOpSeparate;
#endif
#ifndef __GLUX__GLFCT_glStencilFuncSeparate
extern PFNGLUXSTENCILFUNCSEPARATEPROC glStencilFuncSeparate;
#endif
#ifndef __GLUX__GLFCT_glStencilMaskSeparate
extern PFNGLUXSTENCILMASKSEPARATEPROC glStencilMaskSeparate;
#endif
#ifndef __GLUX__GLFCT_glAttachShader
extern PFNGLUXATTACHSHADERPROC glAttachShader;
#endif
#ifndef __GLUX__GLFCT_glBindAttribLocation
extern PFNGLUXBINDATTRIBLOCATIONPROC glBindAttribLocation;
#endif
#ifndef __GLUX__GLFCT_glCompileShader
extern PFNGLUXCOMPILESHADERPROC glCompileShader;
#endif
#ifndef __GLUX__GLFCT_glCreateProgram
extern PFNGLUXCREATEPROGRAMPROC glCreateProgram;
#endif
#ifndef __GLUX__GLFCT_glCreateShader
extern PFNGLUXCREATESHADERPROC glCreateShader;
#endif
#ifndef __GLUX__GLFCT_glDeleteProgram
extern PFNGLUXDELETEPROGRAMPROC glDeleteProgram;
#endif
#ifndef __GLUX__GLFCT_glDeleteShader
extern PFNGLUXDELETESHADERPROC glDeleteShader;
#endif
#ifndef __GLUX__GLFCT_glDetachShader
extern PFNGLUXDETACHSHADERPROC glDetachShader;
#endif
#ifndef __GLUX__GLFCT_glDisableVertexAttribArray
extern PFNGLUXDISABLEVERTEXATTRIBARRAYPROC glDisableVertexAttribArray;
#endif
#ifndef __GLUX__GLFCT_glEnableVertexAttribArray
extern PFNGLUXENABLEVERTEXATTRIBARRAYPROC glEnableVertexAttribArray;
#endif
#ifndef __GLUX__GLFCT_glGetActiveAttrib
extern PFNGLUXGETACTIVEATTRIBPROC glGetActiveAttrib;
#endif
#ifndef __GLUX__GLFCT_glGetActiveUniform
extern PFNGLUXGETACTIVEUNIFORMPROC glGetActiveUniform;
#endif
#ifndef __GLUX__GLFCT_glGetAttachedShaders
extern PFNGLUXGETATTACHEDSHADERSPROC glGetAttachedShaders;
#endif
#ifndef __GLUX__GLFCT_glGetAttribLocation
extern PFNGLUXGETATTRIBLOCATIONPROC glGetAttribLocation;
#endif
#ifndef __GLUX__GLFCT_glGetProgramiv
extern PFNGLUXGETPROGRAMIVPROC glGetProgramiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramInfoLog
extern PFNGLUXGETPROGRAMINFOLOGPROC glGetProgramInfoLog;
#endif
#ifndef __GLUX__GLFCT_glGetShaderiv
extern PFNGLUXGETSHADERIVPROC glGetShaderiv;
#endif
#ifndef __GLUX__GLFCT_glGetShaderInfoLog
extern PFNGLUXGETSHADERINFOLOGPROC glGetShaderInfoLog;
#endif
#ifndef __GLUX__GLFCT_glGetShaderSource
extern PFNGLUXGETSHADERSOURCEPROC glGetShaderSource;
#endif
#ifndef __GLUX__GLFCT_glGetUniformLocation
extern PFNGLUXGETUNIFORMLOCATIONPROC glGetUniformLocation;
#endif
#ifndef __GLUX__GLFCT_glGetUniformfv
extern PFNGLUXGETUNIFORMFVPROC glGetUniformfv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformiv
extern PFNGLUXGETUNIFORMIVPROC glGetUniformiv;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribdv
extern PFNGLUXGETVERTEXATTRIBDVPROC glGetVertexAttribdv;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribfv
extern PFNGLUXGETVERTEXATTRIBFVPROC glGetVertexAttribfv;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribiv
extern PFNGLUXGETVERTEXATTRIBIVPROC glGetVertexAttribiv;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribPointerv
extern PFNGLUXGETVERTEXATTRIBPOINTERVPROC glGetVertexAttribPointerv;
#endif
#ifndef __GLUX__GLFCT_glIsProgram
extern PFNGLUXISPROGRAMPROC glIsProgram;
#endif
#ifndef __GLUX__GLFCT_glIsShader
extern PFNGLUXISSHADERPROC glIsShader;
#endif
#ifndef __GLUX__GLFCT_glLinkProgram
extern PFNGLUXLINKPROGRAMPROC glLinkProgram;
#endif
#ifndef __GLUX__GLFCT_glShaderSource
extern PFNGLUXSHADERSOURCEPROC glShaderSource;
#endif
#ifndef __GLUX__GLFCT_glUseProgram
extern PFNGLUXUSEPROGRAMPROC glUseProgram;
#endif
#ifndef __GLUX__GLFCT_glUniform1f
extern PFNGLUXUNIFORM1FPROC glUniform1f;
#endif
#ifndef __GLUX__GLFCT_glUniform2f
extern PFNGLUXUNIFORM2FPROC glUniform2f;
#endif
#ifndef __GLUX__GLFCT_glUniform3f
extern PFNGLUXUNIFORM3FPROC glUniform3f;
#endif
#ifndef __GLUX__GLFCT_glUniform4f
extern PFNGLUXUNIFORM4FPROC glUniform4f;
#endif
#ifndef __GLUX__GLFCT_glUniform1i
extern PFNGLUXUNIFORM1IPROC glUniform1i;
#endif
#ifndef __GLUX__GLFCT_glUniform2i
extern PFNGLUXUNIFORM2IPROC glUniform2i;
#endif
#ifndef __GLUX__GLFCT_glUniform3i
extern PFNGLUXUNIFORM3IPROC glUniform3i;
#endif
#ifndef __GLUX__GLFCT_glUniform4i
extern PFNGLUXUNIFORM4IPROC glUniform4i;
#endif
#ifndef __GLUX__GLFCT_glUniform1fv
extern PFNGLUXUNIFORM1FVPROC glUniform1fv;
#endif
#ifndef __GLUX__GLFCT_glUniform2fv
extern PFNGLUXUNIFORM2FVPROC glUniform2fv;
#endif
#ifndef __GLUX__GLFCT_glUniform3fv
extern PFNGLUXUNIFORM3FVPROC glUniform3fv;
#endif
#ifndef __GLUX__GLFCT_glUniform4fv
extern PFNGLUXUNIFORM4FVPROC glUniform4fv;
#endif
#ifndef __GLUX__GLFCT_glUniform1iv
extern PFNGLUXUNIFORM1IVPROC glUniform1iv;
#endif
#ifndef __GLUX__GLFCT_glUniform2iv
extern PFNGLUXUNIFORM2IVPROC glUniform2iv;
#endif
#ifndef __GLUX__GLFCT_glUniform3iv
extern PFNGLUXUNIFORM3IVPROC glUniform3iv;
#endif
#ifndef __GLUX__GLFCT_glUniform4iv
extern PFNGLUXUNIFORM4IVPROC glUniform4iv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2fv
extern PFNGLUXUNIFORMMATRIX2FVPROC glUniformMatrix2fv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3fv
extern PFNGLUXUNIFORMMATRIX3FVPROC glUniformMatrix3fv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4fv
extern PFNGLUXUNIFORMMATRIX4FVPROC glUniformMatrix4fv;
#endif
#ifndef __GLUX__GLFCT_glValidateProgram
extern PFNGLUXVALIDATEPROGRAMPROC glValidateProgram;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1d
extern PFNGLUXVERTEXATTRIB1DPROC glVertexAttrib1d;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1dv
extern PFNGLUXVERTEXATTRIB1DVPROC glVertexAttrib1dv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1f
extern PFNGLUXVERTEXATTRIB1FPROC glVertexAttrib1f;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1fv
extern PFNGLUXVERTEXATTRIB1FVPROC glVertexAttrib1fv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1s
extern PFNGLUXVERTEXATTRIB1SPROC glVertexAttrib1s;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1sv
extern PFNGLUXVERTEXATTRIB1SVPROC glVertexAttrib1sv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2d
extern PFNGLUXVERTEXATTRIB2DPROC glVertexAttrib2d;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2dv
extern PFNGLUXVERTEXATTRIB2DVPROC glVertexAttrib2dv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2f
extern PFNGLUXVERTEXATTRIB2FPROC glVertexAttrib2f;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2fv
extern PFNGLUXVERTEXATTRIB2FVPROC glVertexAttrib2fv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2s
extern PFNGLUXVERTEXATTRIB2SPROC glVertexAttrib2s;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2sv
extern PFNGLUXVERTEXATTRIB2SVPROC glVertexAttrib2sv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3d
extern PFNGLUXVERTEXATTRIB3DPROC glVertexAttrib3d;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3dv
extern PFNGLUXVERTEXATTRIB3DVPROC glVertexAttrib3dv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3f
extern PFNGLUXVERTEXATTRIB3FPROC glVertexAttrib3f;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3fv
extern PFNGLUXVERTEXATTRIB3FVPROC glVertexAttrib3fv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3s
extern PFNGLUXVERTEXATTRIB3SPROC glVertexAttrib3s;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3sv
extern PFNGLUXVERTEXATTRIB3SVPROC glVertexAttrib3sv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nbv
extern PFNGLUXVERTEXATTRIB4NBVPROC glVertexAttrib4Nbv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Niv
extern PFNGLUXVERTEXATTRIB4NIVPROC glVertexAttrib4Niv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nsv
extern PFNGLUXVERTEXATTRIB4NSVPROC glVertexAttrib4Nsv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nub
extern PFNGLUXVERTEXATTRIB4NUBPROC glVertexAttrib4Nub;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nubv
extern PFNGLUXVERTEXATTRIB4NUBVPROC glVertexAttrib4Nubv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nuiv
extern PFNGLUXVERTEXATTRIB4NUIVPROC glVertexAttrib4Nuiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nusv
extern PFNGLUXVERTEXATTRIB4NUSVPROC glVertexAttrib4Nusv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4bv
extern PFNGLUXVERTEXATTRIB4BVPROC glVertexAttrib4bv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4d
extern PFNGLUXVERTEXATTRIB4DPROC glVertexAttrib4d;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4dv
extern PFNGLUXVERTEXATTRIB4DVPROC glVertexAttrib4dv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4f
extern PFNGLUXVERTEXATTRIB4FPROC glVertexAttrib4f;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4fv
extern PFNGLUXVERTEXATTRIB4FVPROC glVertexAttrib4fv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4iv
extern PFNGLUXVERTEXATTRIB4IVPROC glVertexAttrib4iv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4s
extern PFNGLUXVERTEXATTRIB4SPROC glVertexAttrib4s;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4sv
extern PFNGLUXVERTEXATTRIB4SVPROC glVertexAttrib4sv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4ubv
extern PFNGLUXVERTEXATTRIB4UBVPROC glVertexAttrib4ubv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4uiv
extern PFNGLUXVERTEXATTRIB4UIVPROC glVertexAttrib4uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4usv
extern PFNGLUXVERTEXATTRIB4USVPROC glVertexAttrib4usv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribPointer
extern PFNGLUXVERTEXATTRIBPOINTERPROC glVertexAttribPointer;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:09:55 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_VERSION_2_0__
#define __GLUX_GL_VERSION_2_0__

GLUX_NEW_PLUGIN(GL_VERSION_2_0);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BLEND_EQUATION_RGB
#  define GL_BLEND_EQUATION_RGB 0x8009
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_ENABLED
#  define GL_VERTEX_ATTRIB_ARRAY_ENABLED 0x8622
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_SIZE
#  define GL_VERTEX_ATTRIB_ARRAY_SIZE 0x8623
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_STRIDE
#  define GL_VERTEX_ATTRIB_ARRAY_STRIDE 0x8624
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_TYPE
#  define GL_VERTEX_ATTRIB_ARRAY_TYPE 0x8625
#endif
#ifndef GL_CURRENT_VERTEX_ATTRIB
#  define GL_CURRENT_VERTEX_ATTRIB 0x8626
#endif
#ifndef GL_VERTEX_PROGRAM_POINT_SIZE
#  define GL_VERTEX_PROGRAM_POINT_SIZE 0x8642
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_POINTER
#  define GL_VERTEX_ATTRIB_ARRAY_POINTER 0x8645
#endif
#ifndef GL_STENCIL_BACK_FUNC
#  define GL_STENCIL_BACK_FUNC 0x8800
#endif
#ifndef GL_STENCIL_BACK_FAIL
#  define GL_STENCIL_BACK_FAIL 0x8801
#endif
#ifndef GL_STENCIL_BACK_PASS_DEPTH_FAIL
#  define GL_STENCIL_BACK_PASS_DEPTH_FAIL 0x8802
#endif
#ifndef GL_STENCIL_BACK_PASS_DEPTH_PASS
#  define GL_STENCIL_BACK_PASS_DEPTH_PASS 0x8803
#endif
#ifndef GL_MAX_DRAW_BUFFERS
#  define GL_MAX_DRAW_BUFFERS 0x8824
#endif
#ifndef GL_DRAW_BUFFER0
#  define GL_DRAW_BUFFER0 0x8825
#endif
#ifndef GL_DRAW_BUFFER1
#  define GL_DRAW_BUFFER1 0x8826
#endif
#ifndef GL_DRAW_BUFFER2
#  define GL_DRAW_BUFFER2 0x8827
#endif
#ifndef GL_DRAW_BUFFER3
#  define GL_DRAW_BUFFER3 0x8828
#endif
#ifndef GL_DRAW_BUFFER4
#  define GL_DRAW_BUFFER4 0x8829
#endif
#ifndef GL_DRAW_BUFFER5
#  define GL_DRAW_BUFFER5 0x882A
#endif
#ifndef GL_DRAW_BUFFER6
#  define GL_DRAW_BUFFER6 0x882B
#endif
#ifndef GL_DRAW_BUFFER7
#  define GL_DRAW_BUFFER7 0x882C
#endif
#ifndef GL_DRAW_BUFFER8
#  define GL_DRAW_BUFFER8 0x882D
#endif
#ifndef GL_DRAW_BUFFER9
#  define GL_DRAW_BUFFER9 0x882E
#endif
#ifndef GL_DRAW_BUFFER10
#  define GL_DRAW_BUFFER10 0x882F
#endif
#ifndef GL_DRAW_BUFFER11
#  define GL_DRAW_BUFFER11 0x8830
#endif
#ifndef GL_DRAW_BUFFER12
#  define GL_DRAW_BUFFER12 0x8831
#endif
#ifndef GL_DRAW_BUFFER13
#  define GL_DRAW_BUFFER13 0x8832
#endif
#ifndef GL_DRAW_BUFFER14
#  define GL_DRAW_BUFFER14 0x8833
#endif
#ifndef GL_DRAW_BUFFER15
#  define GL_DRAW_BUFFER15 0x8834
#endif
#ifndef GL_BLEND_EQUATION_ALPHA
#  define GL_BLEND_EQUATION_ALPHA 0x883D
#endif
#ifndef GL_MAX_VERTEX_ATTRIBS
#  define GL_MAX_VERTEX_ATTRIBS 0x8869
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
#  define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED 0x886A
#endif
#ifndef GL_MAX_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TEXTURE_IMAGE_UNITS 0x8872
#endif
#ifndef GL_FRAGMENT_SHADER
#  define GL_FRAGMENT_SHADER 0x8B30
#endif
#ifndef GL_VERTEX_SHADER
#  define GL_VERTEX_SHADER 0x8B31
#endif
#ifndef GL_MAX_FRAGMENT_UNIFORM_COMPONENTS
#  define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS 0x8B49
#endif
#ifndef GL_MAX_VERTEX_UNIFORM_COMPONENTS
#  define GL_MAX_VERTEX_UNIFORM_COMPONENTS 0x8B4A
#endif
#ifndef GL_MAX_VARYING_FLOATS
#  define GL_MAX_VARYING_FLOATS 0x8B4B
#endif
#ifndef GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
#  define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS 0x8B4C
#endif
#ifndef GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
#  define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS 0x8B4D
#endif
#ifndef GL_SHADER_TYPE
#  define GL_SHADER_TYPE 0x8B4F
#endif
#ifndef GL_FLOAT_VEC2
#  define GL_FLOAT_VEC2 0x8B50
#endif
#ifndef GL_FLOAT_VEC3
#  define GL_FLOAT_VEC3 0x8B51
#endif
#ifndef GL_FLOAT_VEC4
#  define GL_FLOAT_VEC4 0x8B52
#endif
#ifndef GL_INT_VEC2
#  define GL_INT_VEC2 0x8B53
#endif
#ifndef GL_INT_VEC3
#  define GL_INT_VEC3 0x8B54
#endif
#ifndef GL_INT_VEC4
#  define GL_INT_VEC4 0x8B55
#endif
#ifndef GL_BOOL
#  define GL_BOOL 0x8B56
#endif
#ifndef GL_BOOL_VEC2
#  define GL_BOOL_VEC2 0x8B57
#endif
#ifndef GL_BOOL_VEC3
#  define GL_BOOL_VEC3 0x8B58
#endif
#ifndef GL_BOOL_VEC4
#  define GL_BOOL_VEC4 0x8B59
#endif
#ifndef GL_FLOAT_MAT2
#  define GL_FLOAT_MAT2 0x8B5A
#endif
#ifndef GL_FLOAT_MAT3
#  define GL_FLOAT_MAT3 0x8B5B
#endif
#ifndef GL_FLOAT_MAT4
#  define GL_FLOAT_MAT4 0x8B5C
#endif
#ifndef GL_SAMPLER_1D
#  define GL_SAMPLER_1D 0x8B5D
#endif
#ifndef GL_SAMPLER_2D
#  define GL_SAMPLER_2D 0x8B5E
#endif
#ifndef GL_SAMPLER_3D
#  define GL_SAMPLER_3D 0x8B5F
#endif
#ifndef GL_SAMPLER_CUBE
#  define GL_SAMPLER_CUBE 0x8B60
#endif
#ifndef GL_SAMPLER_1D_SHADOW
#  define GL_SAMPLER_1D_SHADOW 0x8B61
#endif
#ifndef GL_SAMPLER_2D_SHADOW
#  define GL_SAMPLER_2D_SHADOW 0x8B62
#endif
#ifndef GL_DELETE_STATUS
#  define GL_DELETE_STATUS 0x8B80
#endif
#ifndef GL_COMPILE_STATUS
#  define GL_COMPILE_STATUS 0x8B81
#endif
#ifndef GL_LINK_STATUS
#  define GL_LINK_STATUS 0x8B82
#endif
#ifndef GL_VALIDATE_STATUS
#  define GL_VALIDATE_STATUS 0x8B83
#endif
#ifndef GL_INFO_LOG_LENGTH
#  define GL_INFO_LOG_LENGTH 0x8B84
#endif
#ifndef GL_ATTACHED_SHADERS
#  define GL_ATTACHED_SHADERS 0x8B85
#endif
#ifndef GL_ACTIVE_UNIFORMS
#  define GL_ACTIVE_UNIFORMS 0x8B86
#endif
#ifndef GL_ACTIVE_UNIFORM_MAX_LENGTH
#  define GL_ACTIVE_UNIFORM_MAX_LENGTH 0x8B87
#endif
#ifndef GL_SHADER_SOURCE_LENGTH
#  define GL_SHADER_SOURCE_LENGTH 0x8B88
#endif
#ifndef GL_ACTIVE_ATTRIBUTES
#  define GL_ACTIVE_ATTRIBUTES 0x8B89
#endif
#ifndef GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
#  define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH 0x8B8A
#endif
#ifndef GL_FRAGMENT_SHADER_DERIVATIVE_HINT
#  define GL_FRAGMENT_SHADER_DERIVATIVE_HINT 0x8B8B
#endif
#ifndef GL_SHADING_LANGUAGE_VERSION
#  define GL_SHADING_LANGUAGE_VERSION 0x8B8C
#endif
#ifndef GL_CURRENT_PROGRAM
#  define GL_CURRENT_PROGRAM 0x8B8D
#endif
#ifndef GL_POINT_SPRITE_COORD_ORIGIN
#  define GL_POINT_SPRITE_COORD_ORIGIN 0x8CA0
#endif
#ifndef GL_LOWER_LEFT
#  define GL_LOWER_LEFT 0x8CA1
#endif
#ifndef GL_UPPER_LEFT
#  define GL_UPPER_LEFT 0x8CA2
#endif
#ifndef GL_STENCIL_BACK_REF
#  define GL_STENCIL_BACK_REF 0x8CA3
#endif
#ifndef GL_STENCIL_BACK_VALUE_MASK
#  define GL_STENCIL_BACK_VALUE_MASK 0x8CA4
#endif
#ifndef GL_STENCIL_BACK_WRITEMASK
#  define GL_STENCIL_BACK_WRITEMASK 0x8CA5
#endif
#ifndef GL_VERTEX_PROGRAM_TWO_SIDE
#  define GL_VERTEX_PROGRAM_TWO_SIDE 0x8643
#endif
#ifndef GL_POINT_SPRITE
#  define GL_POINT_SPRITE 0x8861
#endif
#ifndef GL_COORD_REPLACE
#  define GL_COORD_REPLACE 0x8862
#endif
#ifndef GL_MAX_TEXTURE_COORDS
#  define GL_MAX_TEXTURE_COORDS 0x8871
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBlendEquationSeparate
typedef void (APIENTRYP PFNGLUXBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);
#endif
#ifndef __GLUX__GLFCT_glDrawBuffers
typedef void (APIENTRYP PFNGLUXDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);
#endif
#ifndef __GLUX__GLFCT_glStencilOpSeparate
typedef void (APIENTRYP PFNGLUXSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
#endif
#ifndef __GLUX__GLFCT_glStencilFuncSeparate
typedef void (APIENTRYP PFNGLUXSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLuint mask);
#endif
#ifndef __GLUX__GLFCT_glStencilMaskSeparate
typedef void (APIENTRYP PFNGLUXSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);
#endif
#ifndef __GLUX__GLFCT_glAttachShader
typedef void (APIENTRYP PFNGLUXATTACHSHADERPROC) (GLuint program, GLuint shader);
#endif
#ifndef __GLUX__GLFCT_glBindAttribLocation
typedef void (APIENTRYP PFNGLUXBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glCompileShader
typedef void (APIENTRYP PFNGLUXCOMPILESHADERPROC) (GLuint shader);
#endif
#ifndef __GLUX__GLFCT_glCreateProgram
typedef GLuint (APIENTRYP PFNGLUXCREATEPROGRAMPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glCreateShader
typedef GLuint (APIENTRYP PFNGLUXCREATESHADERPROC) (GLenum type);
#endif
#ifndef __GLUX__GLFCT_glDeleteProgram
typedef void (APIENTRYP PFNGLUXDELETEPROGRAMPROC) (GLuint program);
#endif
#ifndef __GLUX__GLFCT_glDeleteShader
typedef void (APIENTRYP PFNGLUXDELETESHADERPROC) (GLuint shader);
#endif
#ifndef __GLUX__GLFCT_glDetachShader
typedef void (APIENTRYP PFNGLUXDETACHSHADERPROC) (GLuint program, GLuint shader);
#endif
#ifndef __GLUX__GLFCT_glDisableVertexAttribArray
typedef void (APIENTRYP PFNGLUXDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);
#endif
#ifndef __GLUX__GLFCT_glEnableVertexAttribArray
typedef void (APIENTRYP PFNGLUXENABLEVERTEXATTRIBARRAYPROC) (GLuint index);
#endif
#ifndef __GLUX__GLFCT_glGetActiveAttrib
typedef void (APIENTRYP PFNGLUXGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveUniform
typedef void (APIENTRYP PFNGLUXGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetAttachedShaders
typedef void (APIENTRYP PFNGLUXGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *obj);
#endif
#ifndef __GLUX__GLFCT_glGetAttribLocation
typedef GLint (APIENTRYP PFNGLUXGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramInfoLog
typedef void (APIENTRYP PFNGLUXGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
#endif
#ifndef __GLUX__GLFCT_glGetShaderiv
typedef void (APIENTRYP PFNGLUXGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetShaderInfoLog
typedef void (APIENTRYP PFNGLUXGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
#endif
#ifndef __GLUX__GLFCT_glGetShaderSource
typedef void (APIENTRYP PFNGLUXGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
#endif
#ifndef __GLUX__GLFCT_glGetUniformLocation
typedef GLint (APIENTRYP PFNGLUXGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetUniformfv
typedef void (APIENTRYP PFNGLUXGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetUniformiv
typedef void (APIENTRYP PFNGLUXGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribdv
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *params);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribfv
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribiv
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribPointerv
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, GLvoid* *pointer);
#endif
#ifndef __GLUX__GLFCT_glIsProgram
typedef GLboolean (APIENTRYP PFNGLUXISPROGRAMPROC) (GLuint program);
#endif
#ifndef __GLUX__GLFCT_glIsShader
typedef GLboolean (APIENTRYP PFNGLUXISSHADERPROC) (GLuint shader);
#endif
#ifndef __GLUX__GLFCT_glLinkProgram
typedef void (APIENTRYP PFNGLUXLINKPROGRAMPROC) (GLuint program);
#endif
#ifndef __GLUX__GLFCT_glShaderSource
typedef void (APIENTRYP PFNGLUXSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar* const *string, const GLint *length);
#endif
#ifndef __GLUX__GLFCT_glUseProgram
typedef void (APIENTRYP PFNGLUXUSEPROGRAMPROC) (GLuint program);
#endif
#ifndef __GLUX__GLFCT_glUniform1f
typedef void (APIENTRYP PFNGLUXUNIFORM1FPROC) (GLint location, GLfloat v0);
#endif
#ifndef __GLUX__GLFCT_glUniform2f
typedef void (APIENTRYP PFNGLUXUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);
#endif
#ifndef __GLUX__GLFCT_glUniform3f
typedef void (APIENTRYP PFNGLUXUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
#endif
#ifndef __GLUX__GLFCT_glUniform4f
typedef void (APIENTRYP PFNGLUXUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
#endif
#ifndef __GLUX__GLFCT_glUniform1i
typedef void (APIENTRYP PFNGLUXUNIFORM1IPROC) (GLint location, GLint v0);
#endif
#ifndef __GLUX__GLFCT_glUniform2i
typedef void (APIENTRYP PFNGLUXUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);
#endif
#ifndef __GLUX__GLFCT_glUniform3i
typedef void (APIENTRYP PFNGLUXUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);
#endif
#ifndef __GLUX__GLFCT_glUniform4i
typedef void (APIENTRYP PFNGLUXUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
#endif
#ifndef __GLUX__GLFCT_glUniform1fv
typedef void (APIENTRYP PFNGLUXUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2fv
typedef void (APIENTRYP PFNGLUXUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3fv
typedef void (APIENTRYP PFNGLUXUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4fv
typedef void (APIENTRYP PFNGLUXUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glUniform1iv
typedef void (APIENTRYP PFNGLUXUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2iv
typedef void (APIENTRYP PFNGLUXUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3iv
typedef void (APIENTRYP PFNGLUXUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4iv
typedef void (APIENTRYP PFNGLUXUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2fv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3fv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4fv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glValidateProgram
typedef void (APIENTRYP PFNGLUXVALIDATEPROGRAMPROC) (GLuint program);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1d
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1dv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1f
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1fv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1s
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB1SPROC) (GLuint index, GLshort x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1sv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2d
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2dv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2f
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2fv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2s
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2sv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3d
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3dv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3f
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3fv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3s
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3sv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nbv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Niv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nsv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nub
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nubv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nuiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nusv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4bv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4d
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4dv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4f
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4fv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4iv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4s
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4sv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4ubv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4usv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribPointer
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBlendEquationSeparate
extern PFNGLUXBLENDEQUATIONSEPARATEPROC glBlendEquationSeparate;
#endif
#ifndef __GLUX__GLFCT_glDrawBuffers
extern PFNGLUXDRAWBUFFERSPROC glDrawBuffers;
#endif
#ifndef __GLUX__GLFCT_glStencilOpSeparate
extern PFNGLUXSTENCILOPSEPARATEPROC glStencilOpSeparate;
#endif
#ifndef __GLUX__GLFCT_glStencilFuncSeparate
extern PFNGLUXSTENCILFUNCSEPARATEPROC glStencilFuncSeparate;
#endif
#ifndef __GLUX__GLFCT_glStencilMaskSeparate
extern PFNGLUXSTENCILMASKSEPARATEPROC glStencilMaskSeparate;
#endif
#ifndef __GLUX__GLFCT_glAttachShader
extern PFNGLUXATTACHSHADERPROC glAttachShader;
#endif
#ifndef __GLUX__GLFCT_glBindAttribLocation
extern PFNGLUXBINDATTRIBLOCATIONPROC glBindAttribLocation;
#endif
#ifndef __GLUX__GLFCT_glCompileShader
extern PFNGLUXCOMPILESHADERPROC glCompileShader;
#endif
#ifndef __GLUX__GLFCT_glCreateProgram
extern PFNGLUXCREATEPROGRAMPROC glCreateProgram;
#endif
#ifndef __GLUX__GLFCT_glCreateShader
extern PFNGLUXCREATESHADERPROC glCreateShader;
#endif
#ifndef __GLUX__GLFCT_glDeleteProgram
extern PFNGLUXDELETEPROGRAMPROC glDeleteProgram;
#endif
#ifndef __GLUX__GLFCT_glDeleteShader
extern PFNGLUXDELETESHADERPROC glDeleteShader;
#endif
#ifndef __GLUX__GLFCT_glDetachShader
extern PFNGLUXDETACHSHADERPROC glDetachShader;
#endif
#ifndef __GLUX__GLFCT_glDisableVertexAttribArray
extern PFNGLUXDISABLEVERTEXATTRIBARRAYPROC glDisableVertexAttribArray;
#endif
#ifndef __GLUX__GLFCT_glEnableVertexAttribArray
extern PFNGLUXENABLEVERTEXATTRIBARRAYPROC glEnableVertexAttribArray;
#endif
#ifndef __GLUX__GLFCT_glGetActiveAttrib
extern PFNGLUXGETACTIVEATTRIBPROC glGetActiveAttrib;
#endif
#ifndef __GLUX__GLFCT_glGetActiveUniform
extern PFNGLUXGETACTIVEUNIFORMPROC glGetActiveUniform;
#endif
#ifndef __GLUX__GLFCT_glGetAttachedShaders
extern PFNGLUXGETATTACHEDSHADERSPROC glGetAttachedShaders;
#endif
#ifndef __GLUX__GLFCT_glGetAttribLocation
extern PFNGLUXGETATTRIBLOCATIONPROC glGetAttribLocation;
#endif
#ifndef __GLUX__GLFCT_glGetProgramiv
extern PFNGLUXGETPROGRAMIVPROC glGetProgramiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramInfoLog
extern PFNGLUXGETPROGRAMINFOLOGPROC glGetProgramInfoLog;
#endif
#ifndef __GLUX__GLFCT_glGetShaderiv
extern PFNGLUXGETSHADERIVPROC glGetShaderiv;
#endif
#ifndef __GLUX__GLFCT_glGetShaderInfoLog
extern PFNGLUXGETSHADERINFOLOGPROC glGetShaderInfoLog;
#endif
#ifndef __GLUX__GLFCT_glGetShaderSource
extern PFNGLUXGETSHADERSOURCEPROC glGetShaderSource;
#endif
#ifndef __GLUX__GLFCT_glGetUniformLocation
extern PFNGLUXGETUNIFORMLOCATIONPROC glGetUniformLocation;
#endif
#ifndef __GLUX__GLFCT_glGetUniformfv
extern PFNGLUXGETUNIFORMFVPROC glGetUniformfv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformiv
extern PFNGLUXGETUNIFORMIVPROC glGetUniformiv;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribdv
extern PFNGLUXGETVERTEXATTRIBDVPROC glGetVertexAttribdv;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribfv
extern PFNGLUXGETVERTEXATTRIBFVPROC glGetVertexAttribfv;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribiv
extern PFNGLUXGETVERTEXATTRIBIVPROC glGetVertexAttribiv;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribPointerv
extern PFNGLUXGETVERTEXATTRIBPOINTERVPROC glGetVertexAttribPointerv;
#endif
#ifndef __GLUX__GLFCT_glIsProgram
extern PFNGLUXISPROGRAMPROC glIsProgram;
#endif
#ifndef __GLUX__GLFCT_glIsShader
extern PFNGLUXISSHADERPROC glIsShader;
#endif
#ifndef __GLUX__GLFCT_glLinkProgram
extern PFNGLUXLINKPROGRAMPROC glLinkProgram;
#endif
#ifndef __GLUX__GLFCT_glShaderSource
extern PFNGLUXSHADERSOURCEPROC glShaderSource;
#endif
#ifndef __GLUX__GLFCT_glUseProgram
extern PFNGLUXUSEPROGRAMPROC glUseProgram;
#endif
#ifndef __GLUX__GLFCT_glUniform1f
extern PFNGLUXUNIFORM1FPROC glUniform1f;
#endif
#ifndef __GLUX__GLFCT_glUniform2f
extern PFNGLUXUNIFORM2FPROC glUniform2f;
#endif
#ifndef __GLUX__GLFCT_glUniform3f
extern PFNGLUXUNIFORM3FPROC glUniform3f;
#endif
#ifndef __GLUX__GLFCT_glUniform4f
extern PFNGLUXUNIFORM4FPROC glUniform4f;
#endif
#ifndef __GLUX__GLFCT_glUniform1i
extern PFNGLUXUNIFORM1IPROC glUniform1i;
#endif
#ifndef __GLUX__GLFCT_glUniform2i
extern PFNGLUXUNIFORM2IPROC glUniform2i;
#endif
#ifndef __GLUX__GLFCT_glUniform3i
extern PFNGLUXUNIFORM3IPROC glUniform3i;
#endif
#ifndef __GLUX__GLFCT_glUniform4i
extern PFNGLUXUNIFORM4IPROC glUniform4i;
#endif
#ifndef __GLUX__GLFCT_glUniform1fv
extern PFNGLUXUNIFORM1FVPROC glUniform1fv;
#endif
#ifndef __GLUX__GLFCT_glUniform2fv
extern PFNGLUXUNIFORM2FVPROC glUniform2fv;
#endif
#ifndef __GLUX__GLFCT_glUniform3fv
extern PFNGLUXUNIFORM3FVPROC glUniform3fv;
#endif
#ifndef __GLUX__GLFCT_glUniform4fv
extern PFNGLUXUNIFORM4FVPROC glUniform4fv;
#endif
#ifndef __GLUX__GLFCT_glUniform1iv
extern PFNGLUXUNIFORM1IVPROC glUniform1iv;
#endif
#ifndef __GLUX__GLFCT_glUniform2iv
extern PFNGLUXUNIFORM2IVPROC glUniform2iv;
#endif
#ifndef __GLUX__GLFCT_glUniform3iv
extern PFNGLUXUNIFORM3IVPROC glUniform3iv;
#endif
#ifndef __GLUX__GLFCT_glUniform4iv
extern PFNGLUXUNIFORM4IVPROC glUniform4iv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2fv
extern PFNGLUXUNIFORMMATRIX2FVPROC glUniformMatrix2fv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3fv
extern PFNGLUXUNIFORMMATRIX3FVPROC glUniformMatrix3fv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4fv
extern PFNGLUXUNIFORMMATRIX4FVPROC glUniformMatrix4fv;
#endif
#ifndef __GLUX__GLFCT_glValidateProgram
extern PFNGLUXVALIDATEPROGRAMPROC glValidateProgram;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1d
extern PFNGLUXVERTEXATTRIB1DPROC glVertexAttrib1d;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1dv
extern PFNGLUXVERTEXATTRIB1DVPROC glVertexAttrib1dv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1f
extern PFNGLUXVERTEXATTRIB1FPROC glVertexAttrib1f;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1fv
extern PFNGLUXVERTEXATTRIB1FVPROC glVertexAttrib1fv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1s
extern PFNGLUXVERTEXATTRIB1SPROC glVertexAttrib1s;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1sv
extern PFNGLUXVERTEXATTRIB1SVPROC glVertexAttrib1sv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2d
extern PFNGLUXVERTEXATTRIB2DPROC glVertexAttrib2d;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2dv
extern PFNGLUXVERTEXATTRIB2DVPROC glVertexAttrib2dv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2f
extern PFNGLUXVERTEXATTRIB2FPROC glVertexAttrib2f;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2fv
extern PFNGLUXVERTEXATTRIB2FVPROC glVertexAttrib2fv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2s
extern PFNGLUXVERTEXATTRIB2SPROC glVertexAttrib2s;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2sv
extern PFNGLUXVERTEXATTRIB2SVPROC glVertexAttrib2sv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3d
extern PFNGLUXVERTEXATTRIB3DPROC glVertexAttrib3d;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3dv
extern PFNGLUXVERTEXATTRIB3DVPROC glVertexAttrib3dv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3f
extern PFNGLUXVERTEXATTRIB3FPROC glVertexAttrib3f;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3fv
extern PFNGLUXVERTEXATTRIB3FVPROC glVertexAttrib3fv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3s
extern PFNGLUXVERTEXATTRIB3SPROC glVertexAttrib3s;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3sv
extern PFNGLUXVERTEXATTRIB3SVPROC glVertexAttrib3sv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nbv
extern PFNGLUXVERTEXATTRIB4NBVPROC glVertexAttrib4Nbv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Niv
extern PFNGLUXVERTEXATTRIB4NIVPROC glVertexAttrib4Niv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nsv
extern PFNGLUXVERTEXATTRIB4NSVPROC glVertexAttrib4Nsv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nub
extern PFNGLUXVERTEXATTRIB4NUBPROC glVertexAttrib4Nub;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nubv
extern PFNGLUXVERTEXATTRIB4NUBVPROC glVertexAttrib4Nubv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nuiv
extern PFNGLUXVERTEXATTRIB4NUIVPROC glVertexAttrib4Nuiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nusv
extern PFNGLUXVERTEXATTRIB4NUSVPROC glVertexAttrib4Nusv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4bv
extern PFNGLUXVERTEXATTRIB4BVPROC glVertexAttrib4bv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4d
extern PFNGLUXVERTEXATTRIB4DPROC glVertexAttrib4d;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4dv
extern PFNGLUXVERTEXATTRIB4DVPROC glVertexAttrib4dv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4f
extern PFNGLUXVERTEXATTRIB4FPROC glVertexAttrib4f;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4fv
extern PFNGLUXVERTEXATTRIB4FVPROC glVertexAttrib4fv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4iv
extern PFNGLUXVERTEXATTRIB4IVPROC glVertexAttrib4iv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4s
extern PFNGLUXVERTEXATTRIB4SPROC glVertexAttrib4s;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4sv
extern PFNGLUXVERTEXATTRIB4SVPROC glVertexAttrib4sv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4ubv
extern PFNGLUXVERTEXATTRIB4UBVPROC glVertexAttrib4ubv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4uiv
extern PFNGLUXVERTEXATTRIB4UIVPROC glVertexAttrib4uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4usv
extern PFNGLUXVERTEXATTRIB4USVPROC glVertexAttrib4usv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribPointer
extern PFNGLUXVERTEXATTRIBPOINTERPROC glVertexAttribPointer;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:19:56 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_VERSION_2_0__
#define __GLUX_GL_VERSION_2_0__

GLUX_NEW_PLUGIN(GL_VERSION_2_0);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BLEND_EQUATION_RGB
#  define GL_BLEND_EQUATION_RGB 0x8009
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_ENABLED
#  define GL_VERTEX_ATTRIB_ARRAY_ENABLED 0x8622
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_SIZE
#  define GL_VERTEX_ATTRIB_ARRAY_SIZE 0x8623
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_STRIDE
#  define GL_VERTEX_ATTRIB_ARRAY_STRIDE 0x8624
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_TYPE
#  define GL_VERTEX_ATTRIB_ARRAY_TYPE 0x8625
#endif
#ifndef GL_CURRENT_VERTEX_ATTRIB
#  define GL_CURRENT_VERTEX_ATTRIB 0x8626
#endif
#ifndef GL_VERTEX_PROGRAM_POINT_SIZE
#  define GL_VERTEX_PROGRAM_POINT_SIZE 0x8642
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_POINTER
#  define GL_VERTEX_ATTRIB_ARRAY_POINTER 0x8645
#endif
#ifndef GL_STENCIL_BACK_FUNC
#  define GL_STENCIL_BACK_FUNC 0x8800
#endif
#ifndef GL_STENCIL_BACK_FAIL
#  define GL_STENCIL_BACK_FAIL 0x8801
#endif
#ifndef GL_STENCIL_BACK_PASS_DEPTH_FAIL
#  define GL_STENCIL_BACK_PASS_DEPTH_FAIL 0x8802
#endif
#ifndef GL_STENCIL_BACK_PASS_DEPTH_PASS
#  define GL_STENCIL_BACK_PASS_DEPTH_PASS 0x8803
#endif
#ifndef GL_MAX_DRAW_BUFFERS
#  define GL_MAX_DRAW_BUFFERS 0x8824
#endif
#ifndef GL_DRAW_BUFFER0
#  define GL_DRAW_BUFFER0 0x8825
#endif
#ifndef GL_DRAW_BUFFER1
#  define GL_DRAW_BUFFER1 0x8826
#endif
#ifndef GL_DRAW_BUFFER2
#  define GL_DRAW_BUFFER2 0x8827
#endif
#ifndef GL_DRAW_BUFFER3
#  define GL_DRAW_BUFFER3 0x8828
#endif
#ifndef GL_DRAW_BUFFER4
#  define GL_DRAW_BUFFER4 0x8829
#endif
#ifndef GL_DRAW_BUFFER5
#  define GL_DRAW_BUFFER5 0x882A
#endif
#ifndef GL_DRAW_BUFFER6
#  define GL_DRAW_BUFFER6 0x882B
#endif
#ifndef GL_DRAW_BUFFER7
#  define GL_DRAW_BUFFER7 0x882C
#endif
#ifndef GL_DRAW_BUFFER8
#  define GL_DRAW_BUFFER8 0x882D
#endif
#ifndef GL_DRAW_BUFFER9
#  define GL_DRAW_BUFFER9 0x882E
#endif
#ifndef GL_DRAW_BUFFER10
#  define GL_DRAW_BUFFER10 0x882F
#endif
#ifndef GL_DRAW_BUFFER11
#  define GL_DRAW_BUFFER11 0x8830
#endif
#ifndef GL_DRAW_BUFFER12
#  define GL_DRAW_BUFFER12 0x8831
#endif
#ifndef GL_DRAW_BUFFER13
#  define GL_DRAW_BUFFER13 0x8832
#endif
#ifndef GL_DRAW_BUFFER14
#  define GL_DRAW_BUFFER14 0x8833
#endif
#ifndef GL_DRAW_BUFFER15
#  define GL_DRAW_BUFFER15 0x8834
#endif
#ifndef GL_BLEND_EQUATION_ALPHA
#  define GL_BLEND_EQUATION_ALPHA 0x883D
#endif
#ifndef GL_MAX_VERTEX_ATTRIBS
#  define GL_MAX_VERTEX_ATTRIBS 0x8869
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
#  define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED 0x886A
#endif
#ifndef GL_MAX_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TEXTURE_IMAGE_UNITS 0x8872
#endif
#ifndef GL_FRAGMENT_SHADER
#  define GL_FRAGMENT_SHADER 0x8B30
#endif
#ifndef GL_VERTEX_SHADER
#  define GL_VERTEX_SHADER 0x8B31
#endif
#ifndef GL_MAX_FRAGMENT_UNIFORM_COMPONENTS
#  define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS 0x8B49
#endif
#ifndef GL_MAX_VERTEX_UNIFORM_COMPONENTS
#  define GL_MAX_VERTEX_UNIFORM_COMPONENTS 0x8B4A
#endif
#ifndef GL_MAX_VARYING_FLOATS
#  define GL_MAX_VARYING_FLOATS 0x8B4B
#endif
#ifndef GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
#  define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS 0x8B4C
#endif
#ifndef GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
#  define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS 0x8B4D
#endif
#ifndef GL_SHADER_TYPE
#  define GL_SHADER_TYPE 0x8B4F
#endif
#ifndef GL_FLOAT_VEC2
#  define GL_FLOAT_VEC2 0x8B50
#endif
#ifndef GL_FLOAT_VEC3
#  define GL_FLOAT_VEC3 0x8B51
#endif
#ifndef GL_FLOAT_VEC4
#  define GL_FLOAT_VEC4 0x8B52
#endif
#ifndef GL_INT_VEC2
#  define GL_INT_VEC2 0x8B53
#endif
#ifndef GL_INT_VEC3
#  define GL_INT_VEC3 0x8B54
#endif
#ifndef GL_INT_VEC4
#  define GL_INT_VEC4 0x8B55
#endif
#ifndef GL_BOOL
#  define GL_BOOL 0x8B56
#endif
#ifndef GL_BOOL_VEC2
#  define GL_BOOL_VEC2 0x8B57
#endif
#ifndef GL_BOOL_VEC3
#  define GL_BOOL_VEC3 0x8B58
#endif
#ifndef GL_BOOL_VEC4
#  define GL_BOOL_VEC4 0x8B59
#endif
#ifndef GL_FLOAT_MAT2
#  define GL_FLOAT_MAT2 0x8B5A
#endif
#ifndef GL_FLOAT_MAT3
#  define GL_FLOAT_MAT3 0x8B5B
#endif
#ifndef GL_FLOAT_MAT4
#  define GL_FLOAT_MAT4 0x8B5C
#endif
#ifndef GL_SAMPLER_1D
#  define GL_SAMPLER_1D 0x8B5D
#endif
#ifndef GL_SAMPLER_2D
#  define GL_SAMPLER_2D 0x8B5E
#endif
#ifndef GL_SAMPLER_3D
#  define GL_SAMPLER_3D 0x8B5F
#endif
#ifndef GL_SAMPLER_CUBE
#  define GL_SAMPLER_CUBE 0x8B60
#endif
#ifndef GL_SAMPLER_1D_SHADOW
#  define GL_SAMPLER_1D_SHADOW 0x8B61
#endif
#ifndef GL_SAMPLER_2D_SHADOW
#  define GL_SAMPLER_2D_SHADOW 0x8B62
#endif
#ifndef GL_DELETE_STATUS
#  define GL_DELETE_STATUS 0x8B80
#endif
#ifndef GL_COMPILE_STATUS
#  define GL_COMPILE_STATUS 0x8B81
#endif
#ifndef GL_LINK_STATUS
#  define GL_LINK_STATUS 0x8B82
#endif
#ifndef GL_VALIDATE_STATUS
#  define GL_VALIDATE_STATUS 0x8B83
#endif
#ifndef GL_INFO_LOG_LENGTH
#  define GL_INFO_LOG_LENGTH 0x8B84
#endif
#ifndef GL_ATTACHED_SHADERS
#  define GL_ATTACHED_SHADERS 0x8B85
#endif
#ifndef GL_ACTIVE_UNIFORMS
#  define GL_ACTIVE_UNIFORMS 0x8B86
#endif
#ifndef GL_ACTIVE_UNIFORM_MAX_LENGTH
#  define GL_ACTIVE_UNIFORM_MAX_LENGTH 0x8B87
#endif
#ifndef GL_SHADER_SOURCE_LENGTH
#  define GL_SHADER_SOURCE_LENGTH 0x8B88
#endif
#ifndef GL_ACTIVE_ATTRIBUTES
#  define GL_ACTIVE_ATTRIBUTES 0x8B89
#endif
#ifndef GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
#  define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH 0x8B8A
#endif
#ifndef GL_FRAGMENT_SHADER_DERIVATIVE_HINT
#  define GL_FRAGMENT_SHADER_DERIVATIVE_HINT 0x8B8B
#endif
#ifndef GL_SHADING_LANGUAGE_VERSION
#  define GL_SHADING_LANGUAGE_VERSION 0x8B8C
#endif
#ifndef GL_CURRENT_PROGRAM
#  define GL_CURRENT_PROGRAM 0x8B8D
#endif
#ifndef GL_POINT_SPRITE_COORD_ORIGIN
#  define GL_POINT_SPRITE_COORD_ORIGIN 0x8CA0
#endif
#ifndef GL_LOWER_LEFT
#  define GL_LOWER_LEFT 0x8CA1
#endif
#ifndef GL_UPPER_LEFT
#  define GL_UPPER_LEFT 0x8CA2
#endif
#ifndef GL_STENCIL_BACK_REF
#  define GL_STENCIL_BACK_REF 0x8CA3
#endif
#ifndef GL_STENCIL_BACK_VALUE_MASK
#  define GL_STENCIL_BACK_VALUE_MASK 0x8CA4
#endif
#ifndef GL_STENCIL_BACK_WRITEMASK
#  define GL_STENCIL_BACK_WRITEMASK 0x8CA5
#endif
#ifndef GL_VERTEX_PROGRAM_TWO_SIDE
#  define GL_VERTEX_PROGRAM_TWO_SIDE 0x8643
#endif
#ifndef GL_POINT_SPRITE
#  define GL_POINT_SPRITE 0x8861
#endif
#ifndef GL_COORD_REPLACE
#  define GL_COORD_REPLACE 0x8862
#endif
#ifndef GL_MAX_TEXTURE_COORDS
#  define GL_MAX_TEXTURE_COORDS 0x8871
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBlendEquationSeparate
typedef void (APIENTRYP PFNGLUXBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);
#endif
#ifndef __GLUX__GLFCT_glDrawBuffers
typedef void (APIENTRYP PFNGLUXDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);
#endif
#ifndef __GLUX__GLFCT_glStencilOpSeparate
typedef void (APIENTRYP PFNGLUXSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
#endif
#ifndef __GLUX__GLFCT_glStencilFuncSeparate
typedef void (APIENTRYP PFNGLUXSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLuint mask);
#endif
#ifndef __GLUX__GLFCT_glStencilMaskSeparate
typedef void (APIENTRYP PFNGLUXSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);
#endif
#ifndef __GLUX__GLFCT_glAttachShader
typedef void (APIENTRYP PFNGLUXATTACHSHADERPROC) (GLuint program, GLuint shader);
#endif
#ifndef __GLUX__GLFCT_glBindAttribLocation
typedef void (APIENTRYP PFNGLUXBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glCompileShader
typedef void (APIENTRYP PFNGLUXCOMPILESHADERPROC) (GLuint shader);
#endif
#ifndef __GLUX__GLFCT_glCreateProgram
typedef GLuint (APIENTRYP PFNGLUXCREATEPROGRAMPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glCreateShader
typedef GLuint (APIENTRYP PFNGLUXCREATESHADERPROC) (GLenum type);
#endif
#ifndef __GLUX__GLFCT_glDeleteProgram
typedef void (APIENTRYP PFNGLUXDELETEPROGRAMPROC) (GLuint program);
#endif
#ifndef __GLUX__GLFCT_glDeleteShader
typedef void (APIENTRYP PFNGLUXDELETESHADERPROC) (GLuint shader);
#endif
#ifndef __GLUX__GLFCT_glDetachShader
typedef void (APIENTRYP PFNGLUXDETACHSHADERPROC) (GLuint program, GLuint shader);
#endif
#ifndef __GLUX__GLFCT_glDisableVertexAttribArray
typedef void (APIENTRYP PFNGLUXDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);
#endif
#ifndef __GLUX__GLFCT_glEnableVertexAttribArray
typedef void (APIENTRYP PFNGLUXENABLEVERTEXATTRIBARRAYPROC) (GLuint index);
#endif
#ifndef __GLUX__GLFCT_glGetActiveAttrib
typedef void (APIENTRYP PFNGLUXGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveUniform
typedef void (APIENTRYP PFNGLUXGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetAttachedShaders
typedef void (APIENTRYP PFNGLUXGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *obj);
#endif
#ifndef __GLUX__GLFCT_glGetAttribLocation
typedef GLint (APIENTRYP PFNGLUXGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramInfoLog
typedef void (APIENTRYP PFNGLUXGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
#endif
#ifndef __GLUX__GLFCT_glGetShaderiv
typedef void (APIENTRYP PFNGLUXGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetShaderInfoLog
typedef void (APIENTRYP PFNGLUXGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
#endif
#ifndef __GLUX__GLFCT_glGetShaderSource
typedef void (APIENTRYP PFNGLUXGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
#endif
#ifndef __GLUX__GLFCT_glGetUniformLocation
typedef GLint (APIENTRYP PFNGLUXGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetUniformfv
typedef void (APIENTRYP PFNGLUXGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetUniformiv
typedef void (APIENTRYP PFNGLUXGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribdv
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *params);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribfv
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribiv
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribPointerv
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, GLvoid* *pointer);
#endif
#ifndef __GLUX__GLFCT_glIsProgram
typedef GLboolean (APIENTRYP PFNGLUXISPROGRAMPROC) (GLuint program);
#endif
#ifndef __GLUX__GLFCT_glIsShader
typedef GLboolean (APIENTRYP PFNGLUXISSHADERPROC) (GLuint shader);
#endif
#ifndef __GLUX__GLFCT_glLinkProgram
typedef void (APIENTRYP PFNGLUXLINKPROGRAMPROC) (GLuint program);
#endif
#ifndef __GLUX__GLFCT_glShaderSource
typedef void (APIENTRYP PFNGLUXSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar* const *string, const GLint *length);
#endif
#ifndef __GLUX__GLFCT_glUseProgram
typedef void (APIENTRYP PFNGLUXUSEPROGRAMPROC) (GLuint program);
#endif
#ifndef __GLUX__GLFCT_glUniform1f
typedef void (APIENTRYP PFNGLUXUNIFORM1FPROC) (GLint location, GLfloat v0);
#endif
#ifndef __GLUX__GLFCT_glUniform2f
typedef void (APIENTRYP PFNGLUXUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);
#endif
#ifndef __GLUX__GLFCT_glUniform3f
typedef void (APIENTRYP PFNGLUXUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
#endif
#ifndef __GLUX__GLFCT_glUniform4f
typedef void (APIENTRYP PFNGLUXUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
#endif
#ifndef __GLUX__GLFCT_glUniform1i
typedef void (APIENTRYP PFNGLUXUNIFORM1IPROC) (GLint location, GLint v0);
#endif
#ifndef __GLUX__GLFCT_glUniform2i
typedef void (APIENTRYP PFNGLUXUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);
#endif
#ifndef __GLUX__GLFCT_glUniform3i
typedef void (APIENTRYP PFNGLUXUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);
#endif
#ifndef __GLUX__GLFCT_glUniform4i
typedef void (APIENTRYP PFNGLUXUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
#endif
#ifndef __GLUX__GLFCT_glUniform1fv
typedef void (APIENTRYP PFNGLUXUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2fv
typedef void (APIENTRYP PFNGLUXUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3fv
typedef void (APIENTRYP PFNGLUXUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4fv
typedef void (APIENTRYP PFNGLUXUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glUniform1iv
typedef void (APIENTRYP PFNGLUXUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2iv
typedef void (APIENTRYP PFNGLUXUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3iv
typedef void (APIENTRYP PFNGLUXUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4iv
typedef void (APIENTRYP PFNGLUXUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2fv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3fv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4fv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glValidateProgram
typedef void (APIENTRYP PFNGLUXVALIDATEPROGRAMPROC) (GLuint program);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1d
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1dv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1f
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1fv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1s
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB1SPROC) (GLuint index, GLshort x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1sv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2d
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2dv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2f
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2fv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2s
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2sv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3d
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3dv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3f
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3fv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3s
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3sv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nbv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Niv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nsv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nub
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nubv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nuiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nusv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4bv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4d
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4dv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4f
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4fv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4iv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4s
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4sv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4ubv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4usv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribPointer
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBlendEquationSeparate
extern PFNGLUXBLENDEQUATIONSEPARATEPROC glBlendEquationSeparate;
#endif
#ifndef __GLUX__GLFCT_glDrawBuffers
extern PFNGLUXDRAWBUFFERSPROC glDrawBuffers;
#endif
#ifndef __GLUX__GLFCT_glStencilOpSeparate
extern PFNGLUXSTENCILOPSEPARATEPROC glStencilOpSeparate;
#endif
#ifndef __GLUX__GLFCT_glStencilFuncSeparate
extern PFNGLUXSTENCILFUNCSEPARATEPROC glStencilFuncSeparate;
#endif
#ifndef __GLUX__GLFCT_glStencilMaskSeparate
extern PFNGLUXSTENCILMASKSEPARATEPROC glStencilMaskSeparate;
#endif
#ifndef __GLUX__GLFCT_glAttachShader
extern PFNGLUXATTACHSHADERPROC glAttachShader;
#endif
#ifndef __GLUX__GLFCT_glBindAttribLocation
extern PFNGLUXBINDATTRIBLOCATIONPROC glBindAttribLocation;
#endif
#ifndef __GLUX__GLFCT_glCompileShader
extern PFNGLUXCOMPILESHADERPROC glCompileShader;
#endif
#ifndef __GLUX__GLFCT_glCreateProgram
extern PFNGLUXCREATEPROGRAMPROC glCreateProgram;
#endif
#ifndef __GLUX__GLFCT_glCreateShader
extern PFNGLUXCREATESHADERPROC glCreateShader;
#endif
#ifndef __GLUX__GLFCT_glDeleteProgram
extern PFNGLUXDELETEPROGRAMPROC glDeleteProgram;
#endif
#ifndef __GLUX__GLFCT_glDeleteShader
extern PFNGLUXDELETESHADERPROC glDeleteShader;
#endif
#ifndef __GLUX__GLFCT_glDetachShader
extern PFNGLUXDETACHSHADERPROC glDetachShader;
#endif
#ifndef __GLUX__GLFCT_glDisableVertexAttribArray
extern PFNGLUXDISABLEVERTEXATTRIBARRAYPROC glDisableVertexAttribArray;
#endif
#ifndef __GLUX__GLFCT_glEnableVertexAttribArray
extern PFNGLUXENABLEVERTEXATTRIBARRAYPROC glEnableVertexAttribArray;
#endif
#ifndef __GLUX__GLFCT_glGetActiveAttrib
extern PFNGLUXGETACTIVEATTRIBPROC glGetActiveAttrib;
#endif
#ifndef __GLUX__GLFCT_glGetActiveUniform
extern PFNGLUXGETACTIVEUNIFORMPROC glGetActiveUniform;
#endif
#ifndef __GLUX__GLFCT_glGetAttachedShaders
extern PFNGLUXGETATTACHEDSHADERSPROC glGetAttachedShaders;
#endif
#ifndef __GLUX__GLFCT_glGetAttribLocation
extern PFNGLUXGETATTRIBLOCATIONPROC glGetAttribLocation;
#endif
#ifndef __GLUX__GLFCT_glGetProgramiv
extern PFNGLUXGETPROGRAMIVPROC glGetProgramiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramInfoLog
extern PFNGLUXGETPROGRAMINFOLOGPROC glGetProgramInfoLog;
#endif
#ifndef __GLUX__GLFCT_glGetShaderiv
extern PFNGLUXGETSHADERIVPROC glGetShaderiv;
#endif
#ifndef __GLUX__GLFCT_glGetShaderInfoLog
extern PFNGLUXGETSHADERINFOLOGPROC glGetShaderInfoLog;
#endif
#ifndef __GLUX__GLFCT_glGetShaderSource
extern PFNGLUXGETSHADERSOURCEPROC glGetShaderSource;
#endif
#ifndef __GLUX__GLFCT_glGetUniformLocation
extern PFNGLUXGETUNIFORMLOCATIONPROC glGetUniformLocation;
#endif
#ifndef __GLUX__GLFCT_glGetUniformfv
extern PFNGLUXGETUNIFORMFVPROC glGetUniformfv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformiv
extern PFNGLUXGETUNIFORMIVPROC glGetUniformiv;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribdv
extern PFNGLUXGETVERTEXATTRIBDVPROC glGetVertexAttribdv;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribfv
extern PFNGLUXGETVERTEXATTRIBFVPROC glGetVertexAttribfv;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribiv
extern PFNGLUXGETVERTEXATTRIBIVPROC glGetVertexAttribiv;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribPointerv
extern PFNGLUXGETVERTEXATTRIBPOINTERVPROC glGetVertexAttribPointerv;
#endif
#ifndef __GLUX__GLFCT_glIsProgram
extern PFNGLUXISPROGRAMPROC glIsProgram;
#endif
#ifndef __GLUX__GLFCT_glIsShader
extern PFNGLUXISSHADERPROC glIsShader;
#endif
#ifndef __GLUX__GLFCT_glLinkProgram
extern PFNGLUXLINKPROGRAMPROC glLinkProgram;
#endif
#ifndef __GLUX__GLFCT_glShaderSource
extern PFNGLUXSHADERSOURCEPROC glShaderSource;
#endif
#ifndef __GLUX__GLFCT_glUseProgram
extern PFNGLUXUSEPROGRAMPROC glUseProgram;
#endif
#ifndef __GLUX__GLFCT_glUniform1f
extern PFNGLUXUNIFORM1FPROC glUniform1f;
#endif
#ifndef __GLUX__GLFCT_glUniform2f
extern PFNGLUXUNIFORM2FPROC glUniform2f;
#endif
#ifndef __GLUX__GLFCT_glUniform3f
extern PFNGLUXUNIFORM3FPROC glUniform3f;
#endif
#ifndef __GLUX__GLFCT_glUniform4f
extern PFNGLUXUNIFORM4FPROC glUniform4f;
#endif
#ifndef __GLUX__GLFCT_glUniform1i
extern PFNGLUXUNIFORM1IPROC glUniform1i;
#endif
#ifndef __GLUX__GLFCT_glUniform2i
extern PFNGLUXUNIFORM2IPROC glUniform2i;
#endif
#ifndef __GLUX__GLFCT_glUniform3i
extern PFNGLUXUNIFORM3IPROC glUniform3i;
#endif
#ifndef __GLUX__GLFCT_glUniform4i
extern PFNGLUXUNIFORM4IPROC glUniform4i;
#endif
#ifndef __GLUX__GLFCT_glUniform1fv
extern PFNGLUXUNIFORM1FVPROC glUniform1fv;
#endif
#ifndef __GLUX__GLFCT_glUniform2fv
extern PFNGLUXUNIFORM2FVPROC glUniform2fv;
#endif
#ifndef __GLUX__GLFCT_glUniform3fv
extern PFNGLUXUNIFORM3FVPROC glUniform3fv;
#endif
#ifndef __GLUX__GLFCT_glUniform4fv
extern PFNGLUXUNIFORM4FVPROC glUniform4fv;
#endif
#ifndef __GLUX__GLFCT_glUniform1iv
extern PFNGLUXUNIFORM1IVPROC glUniform1iv;
#endif
#ifndef __GLUX__GLFCT_glUniform2iv
extern PFNGLUXUNIFORM2IVPROC glUniform2iv;
#endif
#ifndef __GLUX__GLFCT_glUniform3iv
extern PFNGLUXUNIFORM3IVPROC glUniform3iv;
#endif
#ifndef __GLUX__GLFCT_glUniform4iv
extern PFNGLUXUNIFORM4IVPROC glUniform4iv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2fv
extern PFNGLUXUNIFORMMATRIX2FVPROC glUniformMatrix2fv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3fv
extern PFNGLUXUNIFORMMATRIX3FVPROC glUniformMatrix3fv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4fv
extern PFNGLUXUNIFORMMATRIX4FVPROC glUniformMatrix4fv;
#endif
#ifndef __GLUX__GLFCT_glValidateProgram
extern PFNGLUXVALIDATEPROGRAMPROC glValidateProgram;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1d
extern PFNGLUXVERTEXATTRIB1DPROC glVertexAttrib1d;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1dv
extern PFNGLUXVERTEXATTRIB1DVPROC glVertexAttrib1dv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1f
extern PFNGLUXVERTEXATTRIB1FPROC glVertexAttrib1f;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1fv
extern PFNGLUXVERTEXATTRIB1FVPROC glVertexAttrib1fv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1s
extern PFNGLUXVERTEXATTRIB1SPROC glVertexAttrib1s;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1sv
extern PFNGLUXVERTEXATTRIB1SVPROC glVertexAttrib1sv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2d
extern PFNGLUXVERTEXATTRIB2DPROC glVertexAttrib2d;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2dv
extern PFNGLUXVERTEXATTRIB2DVPROC glVertexAttrib2dv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2f
extern PFNGLUXVERTEXATTRIB2FPROC glVertexAttrib2f;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2fv
extern PFNGLUXVERTEXATTRIB2FVPROC glVertexAttrib2fv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2s
extern PFNGLUXVERTEXATTRIB2SPROC glVertexAttrib2s;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2sv
extern PFNGLUXVERTEXATTRIB2SVPROC glVertexAttrib2sv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3d
extern PFNGLUXVERTEXATTRIB3DPROC glVertexAttrib3d;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3dv
extern PFNGLUXVERTEXATTRIB3DVPROC glVertexAttrib3dv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3f
extern PFNGLUXVERTEXATTRIB3FPROC glVertexAttrib3f;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3fv
extern PFNGLUXVERTEXATTRIB3FVPROC glVertexAttrib3fv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3s
extern PFNGLUXVERTEXATTRIB3SPROC glVertexAttrib3s;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3sv
extern PFNGLUXVERTEXATTRIB3SVPROC glVertexAttrib3sv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nbv
extern PFNGLUXVERTEXATTRIB4NBVPROC glVertexAttrib4Nbv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Niv
extern PFNGLUXVERTEXATTRIB4NIVPROC glVertexAttrib4Niv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nsv
extern PFNGLUXVERTEXATTRIB4NSVPROC glVertexAttrib4Nsv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nub
extern PFNGLUXVERTEXATTRIB4NUBPROC glVertexAttrib4Nub;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nubv
extern PFNGLUXVERTEXATTRIB4NUBVPROC glVertexAttrib4Nubv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nuiv
extern PFNGLUXVERTEXATTRIB4NUIVPROC glVertexAttrib4Nuiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nusv
extern PFNGLUXVERTEXATTRIB4NUSVPROC glVertexAttrib4Nusv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4bv
extern PFNGLUXVERTEXATTRIB4BVPROC glVertexAttrib4bv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4d
extern PFNGLUXVERTEXATTRIB4DPROC glVertexAttrib4d;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4dv
extern PFNGLUXVERTEXATTRIB4DVPROC glVertexAttrib4dv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4f
extern PFNGLUXVERTEXATTRIB4FPROC glVertexAttrib4f;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4fv
extern PFNGLUXVERTEXATTRIB4FVPROC glVertexAttrib4fv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4iv
extern PFNGLUXVERTEXATTRIB4IVPROC glVertexAttrib4iv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4s
extern PFNGLUXVERTEXATTRIB4SPROC glVertexAttrib4s;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4sv
extern PFNGLUXVERTEXATTRIB4SVPROC glVertexAttrib4sv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4ubv
extern PFNGLUXVERTEXATTRIB4UBVPROC glVertexAttrib4ubv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4uiv
extern PFNGLUXVERTEXATTRIB4UIVPROC glVertexAttrib4uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4usv
extern PFNGLUXVERTEXATTRIB4USVPROC glVertexAttrib4usv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribPointer
extern PFNGLUXVERTEXATTRIBPOINTERPROC glVertexAttribPointer;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:42:54 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_VERSION_2_0__
#define __GLUX_GL_VERSION_2_0__

GLUX_NEW_PLUGIN(GL_VERSION_2_0)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_BLEND_EQUATION_RGB
#  define GL_BLEND_EQUATION_RGB 0x8009
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_ENABLED
#  define GL_VERTEX_ATTRIB_ARRAY_ENABLED 0x8622
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_SIZE
#  define GL_VERTEX_ATTRIB_ARRAY_SIZE 0x8623
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_STRIDE
#  define GL_VERTEX_ATTRIB_ARRAY_STRIDE 0x8624
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_TYPE
#  define GL_VERTEX_ATTRIB_ARRAY_TYPE 0x8625
#endif
#ifndef GL_CURRENT_VERTEX_ATTRIB
#  define GL_CURRENT_VERTEX_ATTRIB 0x8626
#endif
#ifndef GL_VERTEX_PROGRAM_POINT_SIZE
#  define GL_VERTEX_PROGRAM_POINT_SIZE 0x8642
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_POINTER
#  define GL_VERTEX_ATTRIB_ARRAY_POINTER 0x8645
#endif
#ifndef GL_STENCIL_BACK_FUNC
#  define GL_STENCIL_BACK_FUNC 0x8800
#endif
#ifndef GL_STENCIL_BACK_FAIL
#  define GL_STENCIL_BACK_FAIL 0x8801
#endif
#ifndef GL_STENCIL_BACK_PASS_DEPTH_FAIL
#  define GL_STENCIL_BACK_PASS_DEPTH_FAIL 0x8802
#endif
#ifndef GL_STENCIL_BACK_PASS_DEPTH_PASS
#  define GL_STENCIL_BACK_PASS_DEPTH_PASS 0x8803
#endif
#ifndef GL_MAX_DRAW_BUFFERS
#  define GL_MAX_DRAW_BUFFERS 0x8824
#endif
#ifndef GL_DRAW_BUFFER0
#  define GL_DRAW_BUFFER0 0x8825
#endif
#ifndef GL_DRAW_BUFFER1
#  define GL_DRAW_BUFFER1 0x8826
#endif
#ifndef GL_DRAW_BUFFER2
#  define GL_DRAW_BUFFER2 0x8827
#endif
#ifndef GL_DRAW_BUFFER3
#  define GL_DRAW_BUFFER3 0x8828
#endif
#ifndef GL_DRAW_BUFFER4
#  define GL_DRAW_BUFFER4 0x8829
#endif
#ifndef GL_DRAW_BUFFER5
#  define GL_DRAW_BUFFER5 0x882A
#endif
#ifndef GL_DRAW_BUFFER6
#  define GL_DRAW_BUFFER6 0x882B
#endif
#ifndef GL_DRAW_BUFFER7
#  define GL_DRAW_BUFFER7 0x882C
#endif
#ifndef GL_DRAW_BUFFER8
#  define GL_DRAW_BUFFER8 0x882D
#endif
#ifndef GL_DRAW_BUFFER9
#  define GL_DRAW_BUFFER9 0x882E
#endif
#ifndef GL_DRAW_BUFFER10
#  define GL_DRAW_BUFFER10 0x882F
#endif
#ifndef GL_DRAW_BUFFER11
#  define GL_DRAW_BUFFER11 0x8830
#endif
#ifndef GL_DRAW_BUFFER12
#  define GL_DRAW_BUFFER12 0x8831
#endif
#ifndef GL_DRAW_BUFFER13
#  define GL_DRAW_BUFFER13 0x8832
#endif
#ifndef GL_DRAW_BUFFER14
#  define GL_DRAW_BUFFER14 0x8833
#endif
#ifndef GL_DRAW_BUFFER15
#  define GL_DRAW_BUFFER15 0x8834
#endif
#ifndef GL_BLEND_EQUATION_ALPHA
#  define GL_BLEND_EQUATION_ALPHA 0x883D
#endif
#ifndef GL_MAX_VERTEX_ATTRIBS
#  define GL_MAX_VERTEX_ATTRIBS 0x8869
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
#  define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED 0x886A
#endif
#ifndef GL_MAX_TEXTURE_IMAGE_UNITS
#  define GL_MAX_TEXTURE_IMAGE_UNITS 0x8872
#endif
#ifndef GL_FRAGMENT_SHADER
#  define GL_FRAGMENT_SHADER 0x8B30
#endif
#ifndef GL_VERTEX_SHADER
#  define GL_VERTEX_SHADER 0x8B31
#endif
#ifndef GL_MAX_FRAGMENT_UNIFORM_COMPONENTS
#  define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS 0x8B49
#endif
#ifndef GL_MAX_VERTEX_UNIFORM_COMPONENTS
#  define GL_MAX_VERTEX_UNIFORM_COMPONENTS 0x8B4A
#endif
#ifndef GL_MAX_VARYING_FLOATS
#  define GL_MAX_VARYING_FLOATS 0x8B4B
#endif
#ifndef GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
#  define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS 0x8B4C
#endif
#ifndef GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
#  define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS 0x8B4D
#endif
#ifndef GL_SHADER_TYPE
#  define GL_SHADER_TYPE 0x8B4F
#endif
#ifndef GL_FLOAT_VEC2
#  define GL_FLOAT_VEC2 0x8B50
#endif
#ifndef GL_FLOAT_VEC3
#  define GL_FLOAT_VEC3 0x8B51
#endif
#ifndef GL_FLOAT_VEC4
#  define GL_FLOAT_VEC4 0x8B52
#endif
#ifndef GL_INT_VEC2
#  define GL_INT_VEC2 0x8B53
#endif
#ifndef GL_INT_VEC3
#  define GL_INT_VEC3 0x8B54
#endif
#ifndef GL_INT_VEC4
#  define GL_INT_VEC4 0x8B55
#endif
#ifndef GL_BOOL
#  define GL_BOOL 0x8B56
#endif
#ifndef GL_BOOL_VEC2
#  define GL_BOOL_VEC2 0x8B57
#endif
#ifndef GL_BOOL_VEC3
#  define GL_BOOL_VEC3 0x8B58
#endif
#ifndef GL_BOOL_VEC4
#  define GL_BOOL_VEC4 0x8B59
#endif
#ifndef GL_FLOAT_MAT2
#  define GL_FLOAT_MAT2 0x8B5A
#endif
#ifndef GL_FLOAT_MAT3
#  define GL_FLOAT_MAT3 0x8B5B
#endif
#ifndef GL_FLOAT_MAT4
#  define GL_FLOAT_MAT4 0x8B5C
#endif
#ifndef GL_SAMPLER_1D
#  define GL_SAMPLER_1D 0x8B5D
#endif
#ifndef GL_SAMPLER_2D
#  define GL_SAMPLER_2D 0x8B5E
#endif
#ifndef GL_SAMPLER_3D
#  define GL_SAMPLER_3D 0x8B5F
#endif
#ifndef GL_SAMPLER_CUBE
#  define GL_SAMPLER_CUBE 0x8B60
#endif
#ifndef GL_SAMPLER_1D_SHADOW
#  define GL_SAMPLER_1D_SHADOW 0x8B61
#endif
#ifndef GL_SAMPLER_2D_SHADOW
#  define GL_SAMPLER_2D_SHADOW 0x8B62
#endif
#ifndef GL_DELETE_STATUS
#  define GL_DELETE_STATUS 0x8B80
#endif
#ifndef GL_COMPILE_STATUS
#  define GL_COMPILE_STATUS 0x8B81
#endif
#ifndef GL_LINK_STATUS
#  define GL_LINK_STATUS 0x8B82
#endif
#ifndef GL_VALIDATE_STATUS
#  define GL_VALIDATE_STATUS 0x8B83
#endif
#ifndef GL_INFO_LOG_LENGTH
#  define GL_INFO_LOG_LENGTH 0x8B84
#endif
#ifndef GL_ATTACHED_SHADERS
#  define GL_ATTACHED_SHADERS 0x8B85
#endif
#ifndef GL_ACTIVE_UNIFORMS
#  define GL_ACTIVE_UNIFORMS 0x8B86
#endif
#ifndef GL_ACTIVE_UNIFORM_MAX_LENGTH
#  define GL_ACTIVE_UNIFORM_MAX_LENGTH 0x8B87
#endif
#ifndef GL_SHADER_SOURCE_LENGTH
#  define GL_SHADER_SOURCE_LENGTH 0x8B88
#endif
#ifndef GL_ACTIVE_ATTRIBUTES
#  define GL_ACTIVE_ATTRIBUTES 0x8B89
#endif
#ifndef GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
#  define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH 0x8B8A
#endif
#ifndef GL_FRAGMENT_SHADER_DERIVATIVE_HINT
#  define GL_FRAGMENT_SHADER_DERIVATIVE_HINT 0x8B8B
#endif
#ifndef GL_SHADING_LANGUAGE_VERSION
#  define GL_SHADING_LANGUAGE_VERSION 0x8B8C
#endif
#ifndef GL_CURRENT_PROGRAM
#  define GL_CURRENT_PROGRAM 0x8B8D
#endif
#ifndef GL_POINT_SPRITE_COORD_ORIGIN
#  define GL_POINT_SPRITE_COORD_ORIGIN 0x8CA0
#endif
#ifndef GL_LOWER_LEFT
#  define GL_LOWER_LEFT 0x8CA1
#endif
#ifndef GL_UPPER_LEFT
#  define GL_UPPER_LEFT 0x8CA2
#endif
#ifndef GL_STENCIL_BACK_REF
#  define GL_STENCIL_BACK_REF 0x8CA3
#endif
#ifndef GL_STENCIL_BACK_VALUE_MASK
#  define GL_STENCIL_BACK_VALUE_MASK 0x8CA4
#endif
#ifndef GL_STENCIL_BACK_WRITEMASK
#  define GL_STENCIL_BACK_WRITEMASK 0x8CA5
#endif
#ifndef GL_VERTEX_PROGRAM_TWO_SIDE
#  define GL_VERTEX_PROGRAM_TWO_SIDE 0x8643
#endif
#ifndef GL_POINT_SPRITE
#  define GL_POINT_SPRITE 0x8861
#endif
#ifndef GL_COORD_REPLACE
#  define GL_COORD_REPLACE 0x8862
#endif
#ifndef GL_MAX_TEXTURE_COORDS
#  define GL_MAX_TEXTURE_COORDS 0x8871
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBlendEquationSeparate
typedef void (APIENTRYP PFNGLUXBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);
#endif
#ifndef __GLUX__GLFCT_glDrawBuffers
typedef void (APIENTRYP PFNGLUXDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);
#endif
#ifndef __GLUX__GLFCT_glStencilOpSeparate
typedef void (APIENTRYP PFNGLUXSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
#endif
#ifndef __GLUX__GLFCT_glStencilFuncSeparate
typedef void (APIENTRYP PFNGLUXSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLuint mask);
#endif
#ifndef __GLUX__GLFCT_glStencilMaskSeparate
typedef void (APIENTRYP PFNGLUXSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);
#endif
#ifndef __GLUX__GLFCT_glAttachShader
typedef void (APIENTRYP PFNGLUXATTACHSHADERPROC) (GLuint program, GLuint shader);
#endif
#ifndef __GLUX__GLFCT_glBindAttribLocation
typedef void (APIENTRYP PFNGLUXBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glCompileShader
typedef void (APIENTRYP PFNGLUXCOMPILESHADERPROC) (GLuint shader);
#endif
#ifndef __GLUX__GLFCT_glCreateProgram
typedef GLuint (APIENTRYP PFNGLUXCREATEPROGRAMPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glCreateShader
typedef GLuint (APIENTRYP PFNGLUXCREATESHADERPROC) (GLenum type);
#endif
#ifndef __GLUX__GLFCT_glDeleteProgram
typedef void (APIENTRYP PFNGLUXDELETEPROGRAMPROC) (GLuint program);
#endif
#ifndef __GLUX__GLFCT_glDeleteShader
typedef void (APIENTRYP PFNGLUXDELETESHADERPROC) (GLuint shader);
#endif
#ifndef __GLUX__GLFCT_glDetachShader
typedef void (APIENTRYP PFNGLUXDETACHSHADERPROC) (GLuint program, GLuint shader);
#endif
#ifndef __GLUX__GLFCT_glDisableVertexAttribArray
typedef void (APIENTRYP PFNGLUXDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);
#endif
#ifndef __GLUX__GLFCT_glEnableVertexAttribArray
typedef void (APIENTRYP PFNGLUXENABLEVERTEXATTRIBARRAYPROC) (GLuint index);
#endif
#ifndef __GLUX__GLFCT_glGetActiveAttrib
typedef void (APIENTRYP PFNGLUXGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveUniform
typedef void (APIENTRYP PFNGLUXGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetAttachedShaders
typedef void (APIENTRYP PFNGLUXGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *obj);
#endif
#ifndef __GLUX__GLFCT_glGetAttribLocation
typedef GLint (APIENTRYP PFNGLUXGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetProgramiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramInfoLog
typedef void (APIENTRYP PFNGLUXGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
#endif
#ifndef __GLUX__GLFCT_glGetShaderiv
typedef void (APIENTRYP PFNGLUXGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetShaderInfoLog
typedef void (APIENTRYP PFNGLUXGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
#endif
#ifndef __GLUX__GLFCT_glGetShaderSource
typedef void (APIENTRYP PFNGLUXGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
#endif
#ifndef __GLUX__GLFCT_glGetUniformLocation
typedef GLint (APIENTRYP PFNGLUXGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetUniformfv
typedef void (APIENTRYP PFNGLUXGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetUniformiv
typedef void (APIENTRYP PFNGLUXGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribdv
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *params);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribfv
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribiv
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribPointerv
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, GLvoid* *pointer);
#endif
#ifndef __GLUX__GLFCT_glIsProgram
typedef GLboolean (APIENTRYP PFNGLUXISPROGRAMPROC) (GLuint program);
#endif
#ifndef __GLUX__GLFCT_glIsShader
typedef GLboolean (APIENTRYP PFNGLUXISSHADERPROC) (GLuint shader);
#endif
#ifndef __GLUX__GLFCT_glLinkProgram
typedef void (APIENTRYP PFNGLUXLINKPROGRAMPROC) (GLuint program);
#endif
#ifndef __GLUX__GLFCT_glShaderSource
typedef void (APIENTRYP PFNGLUXSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar* const *string, const GLint *length);
#endif
#ifndef __GLUX__GLFCT_glUseProgram
typedef void (APIENTRYP PFNGLUXUSEPROGRAMPROC) (GLuint program);
#endif
#ifndef __GLUX__GLFCT_glUniform1f
typedef void (APIENTRYP PFNGLUXUNIFORM1FPROC) (GLint location, GLfloat v0);
#endif
#ifndef __GLUX__GLFCT_glUniform2f
typedef void (APIENTRYP PFNGLUXUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);
#endif
#ifndef __GLUX__GLFCT_glUniform3f
typedef void (APIENTRYP PFNGLUXUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
#endif
#ifndef __GLUX__GLFCT_glUniform4f
typedef void (APIENTRYP PFNGLUXUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
#endif
#ifndef __GLUX__GLFCT_glUniform1i
typedef void (APIENTRYP PFNGLUXUNIFORM1IPROC) (GLint location, GLint v0);
#endif
#ifndef __GLUX__GLFCT_glUniform2i
typedef void (APIENTRYP PFNGLUXUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);
#endif
#ifndef __GLUX__GLFCT_glUniform3i
typedef void (APIENTRYP PFNGLUXUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);
#endif
#ifndef __GLUX__GLFCT_glUniform4i
typedef void (APIENTRYP PFNGLUXUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
#endif
#ifndef __GLUX__GLFCT_glUniform1fv
typedef void (APIENTRYP PFNGLUXUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2fv
typedef void (APIENTRYP PFNGLUXUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3fv
typedef void (APIENTRYP PFNGLUXUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4fv
typedef void (APIENTRYP PFNGLUXUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glUniform1iv
typedef void (APIENTRYP PFNGLUXUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2iv
typedef void (APIENTRYP PFNGLUXUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3iv
typedef void (APIENTRYP PFNGLUXUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4iv
typedef void (APIENTRYP PFNGLUXUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2fv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3fv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4fv
typedef void (APIENTRYP PFNGLUXUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glValidateProgram
typedef void (APIENTRYP PFNGLUXVALIDATEPROGRAMPROC) (GLuint program);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1d
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1dv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1f
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1fv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1s
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB1SPROC) (GLuint index, GLshort x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1sv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2d
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2dv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2f
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2fv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2s
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2sv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3d
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3dv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3f
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3fv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3s
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3sv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nbv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Niv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nsv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nub
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nubv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nuiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nusv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4bv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4d
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4dv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4f
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4fv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4iv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4s
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4sv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4ubv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4usv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribPointer
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBlendEquationSeparate
extern PFNGLUXBLENDEQUATIONSEPARATEPROC glBlendEquationSeparate;
#endif
#ifndef __GLUX__GLFCT_glDrawBuffers
extern PFNGLUXDRAWBUFFERSPROC glDrawBuffers;
#endif
#ifndef __GLUX__GLFCT_glStencilOpSeparate
extern PFNGLUXSTENCILOPSEPARATEPROC glStencilOpSeparate;
#endif
#ifndef __GLUX__GLFCT_glStencilFuncSeparate
extern PFNGLUXSTENCILFUNCSEPARATEPROC glStencilFuncSeparate;
#endif
#ifndef __GLUX__GLFCT_glStencilMaskSeparate
extern PFNGLUXSTENCILMASKSEPARATEPROC glStencilMaskSeparate;
#endif
#ifndef __GLUX__GLFCT_glAttachShader
extern PFNGLUXATTACHSHADERPROC glAttachShader;
#endif
#ifndef __GLUX__GLFCT_glBindAttribLocation
extern PFNGLUXBINDATTRIBLOCATIONPROC glBindAttribLocation;
#endif
#ifndef __GLUX__GLFCT_glCompileShader
extern PFNGLUXCOMPILESHADERPROC glCompileShader;
#endif
#ifndef __GLUX__GLFCT_glCreateProgram
extern PFNGLUXCREATEPROGRAMPROC glCreateProgram;
#endif
#ifndef __GLUX__GLFCT_glCreateShader
extern PFNGLUXCREATESHADERPROC glCreateShader;
#endif
#ifndef __GLUX__GLFCT_glDeleteProgram
extern PFNGLUXDELETEPROGRAMPROC glDeleteProgram;
#endif
#ifndef __GLUX__GLFCT_glDeleteShader
extern PFNGLUXDELETESHADERPROC glDeleteShader;
#endif
#ifndef __GLUX__GLFCT_glDetachShader
extern PFNGLUXDETACHSHADERPROC glDetachShader;
#endif
#ifndef __GLUX__GLFCT_glDisableVertexAttribArray
extern PFNGLUXDISABLEVERTEXATTRIBARRAYPROC glDisableVertexAttribArray;
#endif
#ifndef __GLUX__GLFCT_glEnableVertexAttribArray
extern PFNGLUXENABLEVERTEXATTRIBARRAYPROC glEnableVertexAttribArray;
#endif
#ifndef __GLUX__GLFCT_glGetActiveAttrib
extern PFNGLUXGETACTIVEATTRIBPROC glGetActiveAttrib;
#endif
#ifndef __GLUX__GLFCT_glGetActiveUniform
extern PFNGLUXGETACTIVEUNIFORMPROC glGetActiveUniform;
#endif
#ifndef __GLUX__GLFCT_glGetAttachedShaders
extern PFNGLUXGETATTACHEDSHADERSPROC glGetAttachedShaders;
#endif
#ifndef __GLUX__GLFCT_glGetAttribLocation
extern PFNGLUXGETATTRIBLOCATIONPROC glGetAttribLocation;
#endif
#ifndef __GLUX__GLFCT_glGetProgramiv
extern PFNGLUXGETPROGRAMIVPROC glGetProgramiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramInfoLog
extern PFNGLUXGETPROGRAMINFOLOGPROC glGetProgramInfoLog;
#endif
#ifndef __GLUX__GLFCT_glGetShaderiv
extern PFNGLUXGETSHADERIVPROC glGetShaderiv;
#endif
#ifndef __GLUX__GLFCT_glGetShaderInfoLog
extern PFNGLUXGETSHADERINFOLOGPROC glGetShaderInfoLog;
#endif
#ifndef __GLUX__GLFCT_glGetShaderSource
extern PFNGLUXGETSHADERSOURCEPROC glGetShaderSource;
#endif
#ifndef __GLUX__GLFCT_glGetUniformLocation
extern PFNGLUXGETUNIFORMLOCATIONPROC glGetUniformLocation;
#endif
#ifndef __GLUX__GLFCT_glGetUniformfv
extern PFNGLUXGETUNIFORMFVPROC glGetUniformfv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformiv
extern PFNGLUXGETUNIFORMIVPROC glGetUniformiv;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribdv
extern PFNGLUXGETVERTEXATTRIBDVPROC glGetVertexAttribdv;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribfv
extern PFNGLUXGETVERTEXATTRIBFVPROC glGetVertexAttribfv;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribiv
extern PFNGLUXGETVERTEXATTRIBIVPROC glGetVertexAttribiv;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribPointerv
extern PFNGLUXGETVERTEXATTRIBPOINTERVPROC glGetVertexAttribPointerv;
#endif
#ifndef __GLUX__GLFCT_glIsProgram
extern PFNGLUXISPROGRAMPROC glIsProgram;
#endif
#ifndef __GLUX__GLFCT_glIsShader
extern PFNGLUXISSHADERPROC glIsShader;
#endif
#ifndef __GLUX__GLFCT_glLinkProgram
extern PFNGLUXLINKPROGRAMPROC glLinkProgram;
#endif
#ifndef __GLUX__GLFCT_glShaderSource
extern PFNGLUXSHADERSOURCEPROC glShaderSource;
#endif
#ifndef __GLUX__GLFCT_glUseProgram
extern PFNGLUXUSEPROGRAMPROC glUseProgram;
#endif
#ifndef __GLUX__GLFCT_glUniform1f
extern PFNGLUXUNIFORM1FPROC glUniform1f;
#endif
#ifndef __GLUX__GLFCT_glUniform2f
extern PFNGLUXUNIFORM2FPROC glUniform2f;
#endif
#ifndef __GLUX__GLFCT_glUniform3f
extern PFNGLUXUNIFORM3FPROC glUniform3f;
#endif
#ifndef __GLUX__GLFCT_glUniform4f
extern PFNGLUXUNIFORM4FPROC glUniform4f;
#endif
#ifndef __GLUX__GLFCT_glUniform1i
extern PFNGLUXUNIFORM1IPROC glUniform1i;
#endif
#ifndef __GLUX__GLFCT_glUniform2i
extern PFNGLUXUNIFORM2IPROC glUniform2i;
#endif
#ifndef __GLUX__GLFCT_glUniform3i
extern PFNGLUXUNIFORM3IPROC glUniform3i;
#endif
#ifndef __GLUX__GLFCT_glUniform4i
extern PFNGLUXUNIFORM4IPROC glUniform4i;
#endif
#ifndef __GLUX__GLFCT_glUniform1fv
extern PFNGLUXUNIFORM1FVPROC glUniform1fv;
#endif
#ifndef __GLUX__GLFCT_glUniform2fv
extern PFNGLUXUNIFORM2FVPROC glUniform2fv;
#endif
#ifndef __GLUX__GLFCT_glUniform3fv
extern PFNGLUXUNIFORM3FVPROC glUniform3fv;
#endif
#ifndef __GLUX__GLFCT_glUniform4fv
extern PFNGLUXUNIFORM4FVPROC glUniform4fv;
#endif
#ifndef __GLUX__GLFCT_glUniform1iv
extern PFNGLUXUNIFORM1IVPROC glUniform1iv;
#endif
#ifndef __GLUX__GLFCT_glUniform2iv
extern PFNGLUXUNIFORM2IVPROC glUniform2iv;
#endif
#ifndef __GLUX__GLFCT_glUniform3iv
extern PFNGLUXUNIFORM3IVPROC glUniform3iv;
#endif
#ifndef __GLUX__GLFCT_glUniform4iv
extern PFNGLUXUNIFORM4IVPROC glUniform4iv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix2fv
extern PFNGLUXUNIFORMMATRIX2FVPROC glUniformMatrix2fv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix3fv
extern PFNGLUXUNIFORMMATRIX3FVPROC glUniformMatrix3fv;
#endif
#ifndef __GLUX__GLFCT_glUniformMatrix4fv
extern PFNGLUXUNIFORMMATRIX4FVPROC glUniformMatrix4fv;
#endif
#ifndef __GLUX__GLFCT_glValidateProgram
extern PFNGLUXVALIDATEPROGRAMPROC glValidateProgram;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1d
extern PFNGLUXVERTEXATTRIB1DPROC glVertexAttrib1d;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1dv
extern PFNGLUXVERTEXATTRIB1DVPROC glVertexAttrib1dv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1f
extern PFNGLUXVERTEXATTRIB1FPROC glVertexAttrib1f;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1fv
extern PFNGLUXVERTEXATTRIB1FVPROC glVertexAttrib1fv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1s
extern PFNGLUXVERTEXATTRIB1SPROC glVertexAttrib1s;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib1sv
extern PFNGLUXVERTEXATTRIB1SVPROC glVertexAttrib1sv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2d
extern PFNGLUXVERTEXATTRIB2DPROC glVertexAttrib2d;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2dv
extern PFNGLUXVERTEXATTRIB2DVPROC glVertexAttrib2dv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2f
extern PFNGLUXVERTEXATTRIB2FPROC glVertexAttrib2f;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2fv
extern PFNGLUXVERTEXATTRIB2FVPROC glVertexAttrib2fv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2s
extern PFNGLUXVERTEXATTRIB2SPROC glVertexAttrib2s;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib2sv
extern PFNGLUXVERTEXATTRIB2SVPROC glVertexAttrib2sv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3d
extern PFNGLUXVERTEXATTRIB3DPROC glVertexAttrib3d;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3dv
extern PFNGLUXVERTEXATTRIB3DVPROC glVertexAttrib3dv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3f
extern PFNGLUXVERTEXATTRIB3FPROC glVertexAttrib3f;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3fv
extern PFNGLUXVERTEXATTRIB3FVPROC glVertexAttrib3fv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3s
extern PFNGLUXVERTEXATTRIB3SPROC glVertexAttrib3s;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib3sv
extern PFNGLUXVERTEXATTRIB3SVPROC glVertexAttrib3sv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nbv
extern PFNGLUXVERTEXATTRIB4NBVPROC glVertexAttrib4Nbv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Niv
extern PFNGLUXVERTEXATTRIB4NIVPROC glVertexAttrib4Niv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nsv
extern PFNGLUXVERTEXATTRIB4NSVPROC glVertexAttrib4Nsv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nub
extern PFNGLUXVERTEXATTRIB4NUBPROC glVertexAttrib4Nub;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nubv
extern PFNGLUXVERTEXATTRIB4NUBVPROC glVertexAttrib4Nubv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nuiv
extern PFNGLUXVERTEXATTRIB4NUIVPROC glVertexAttrib4Nuiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4Nusv
extern PFNGLUXVERTEXATTRIB4NUSVPROC glVertexAttrib4Nusv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4bv
extern PFNGLUXVERTEXATTRIB4BVPROC glVertexAttrib4bv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4d
extern PFNGLUXVERTEXATTRIB4DPROC glVertexAttrib4d;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4dv
extern PFNGLUXVERTEXATTRIB4DVPROC glVertexAttrib4dv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4f
extern PFNGLUXVERTEXATTRIB4FPROC glVertexAttrib4f;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4fv
extern PFNGLUXVERTEXATTRIB4FVPROC glVertexAttrib4fv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4iv
extern PFNGLUXVERTEXATTRIB4IVPROC glVertexAttrib4iv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4s
extern PFNGLUXVERTEXATTRIB4SPROC glVertexAttrib4s;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4sv
extern PFNGLUXVERTEXATTRIB4SVPROC glVertexAttrib4sv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4ubv
extern PFNGLUXVERTEXATTRIB4UBVPROC glVertexAttrib4ubv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4uiv
extern PFNGLUXVERTEXATTRIB4UIVPROC glVertexAttrib4uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttrib4usv
extern PFNGLUXVERTEXATTRIB4USVPROC glVertexAttrib4usv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribPointer
extern PFNGLUXVERTEXATTRIBPOINTERPROC glVertexAttribPointer;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
