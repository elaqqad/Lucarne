
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:25 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_IBM_vertex_array_lists__
#define __GLUX_GL_IBM_vertex_array_lists__

GLUX_NEW_PLUGIN(GL_IBM_vertex_array_lists);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ARRAY_LIST_IBM
#  define GL_VERTEX_ARRAY_LIST_IBM 103070
#endif
#ifndef GL_NORMAL_ARRAY_LIST_IBM
#  define GL_NORMAL_ARRAY_LIST_IBM 103071
#endif
#ifndef GL_COLOR_ARRAY_LIST_IBM
#  define GL_COLOR_ARRAY_LIST_IBM 103072
#endif
#ifndef GL_INDEX_ARRAY_LIST_IBM
#  define GL_INDEX_ARRAY_LIST_IBM 103073
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_IBM 103074
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_IBM 103075
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_IBM 103076
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
#endif
#ifndef GL_VERTEX_ARRAY_LIST_STRIDE_IBM
#  define GL_VERTEX_ARRAY_LIST_STRIDE_IBM 103080
#endif
#ifndef GL_NORMAL_ARRAY_LIST_STRIDE_IBM
#  define GL_NORMAL_ARRAY_LIST_STRIDE_IBM 103081
#endif
#ifndef GL_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_COLOR_ARRAY_LIST_STRIDE_IBM 103082
#endif
#ifndef GL_INDEX_ARRAY_LIST_STRIDE_IBM
#  define GL_INDEX_ARRAY_LIST_STRIDE_IBM 103083
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glColorPointerListIBM
typedef void (APIENTRYP PFNGLUXCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
typedef void (APIENTRYP PFNGLUXEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
typedef void (APIENTRYP PFNGLUXINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
typedef void (APIENTRYP PFNGLUXNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
typedef void (APIENTRYP PFNGLUXVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glColorPointerListIBM
extern PFNGLUXCOLORPOINTERLISTIBMPROC glColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
extern PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC glSecondaryColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
extern PFNGLUXEDGEFLAGPOINTERLISTIBMPROC glEdgeFlagPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
extern PFNGLUXFOGCOORDPOINTERLISTIBMPROC glFogCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
extern PFNGLUXINDEXPOINTERLISTIBMPROC glIndexPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
extern PFNGLUXNORMALPOINTERLISTIBMPROC glNormalPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
extern PFNGLUXTEXCOORDPOINTERLISTIBMPROC glTexCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
extern PFNGLUXVERTEXPOINTERLISTIBMPROC glVertexPointerListIBM;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:43 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_IBM_vertex_array_lists__
#define __GLUX_GL_IBM_vertex_array_lists__

GLUX_NEW_PLUGIN(GL_IBM_vertex_array_lists);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ARRAY_LIST_IBM
#  define GL_VERTEX_ARRAY_LIST_IBM 103070
#endif
#ifndef GL_NORMAL_ARRAY_LIST_IBM
#  define GL_NORMAL_ARRAY_LIST_IBM 103071
#endif
#ifndef GL_COLOR_ARRAY_LIST_IBM
#  define GL_COLOR_ARRAY_LIST_IBM 103072
#endif
#ifndef GL_INDEX_ARRAY_LIST_IBM
#  define GL_INDEX_ARRAY_LIST_IBM 103073
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_IBM 103074
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_IBM 103075
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_IBM 103076
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
#endif
#ifndef GL_VERTEX_ARRAY_LIST_STRIDE_IBM
#  define GL_VERTEX_ARRAY_LIST_STRIDE_IBM 103080
#endif
#ifndef GL_NORMAL_ARRAY_LIST_STRIDE_IBM
#  define GL_NORMAL_ARRAY_LIST_STRIDE_IBM 103081
#endif
#ifndef GL_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_COLOR_ARRAY_LIST_STRIDE_IBM 103082
#endif
#ifndef GL_INDEX_ARRAY_LIST_STRIDE_IBM
#  define GL_INDEX_ARRAY_LIST_STRIDE_IBM 103083
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glColorPointerListIBM
typedef void (APIENTRYP PFNGLUXCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
typedef void (APIENTRYP PFNGLUXEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
typedef void (APIENTRYP PFNGLUXINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
typedef void (APIENTRYP PFNGLUXNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
typedef void (APIENTRYP PFNGLUXVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glColorPointerListIBM
extern PFNGLUXCOLORPOINTERLISTIBMPROC glColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
extern PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC glSecondaryColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
extern PFNGLUXEDGEFLAGPOINTERLISTIBMPROC glEdgeFlagPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
extern PFNGLUXFOGCOORDPOINTERLISTIBMPROC glFogCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
extern PFNGLUXINDEXPOINTERLISTIBMPROC glIndexPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
extern PFNGLUXNORMALPOINTERLISTIBMPROC glNormalPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
extern PFNGLUXTEXCOORDPOINTERLISTIBMPROC glTexCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
extern PFNGLUXVERTEXPOINTERLISTIBMPROC glVertexPointerListIBM;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:53 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_IBM_vertex_array_lists__
#define __GLUX_GL_IBM_vertex_array_lists__

GLUX_NEW_PLUGIN(GL_IBM_vertex_array_lists);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ARRAY_LIST_IBM
#  define GL_VERTEX_ARRAY_LIST_IBM 103070
#endif
#ifndef GL_NORMAL_ARRAY_LIST_IBM
#  define GL_NORMAL_ARRAY_LIST_IBM 103071
#endif
#ifndef GL_COLOR_ARRAY_LIST_IBM
#  define GL_COLOR_ARRAY_LIST_IBM 103072
#endif
#ifndef GL_INDEX_ARRAY_LIST_IBM
#  define GL_INDEX_ARRAY_LIST_IBM 103073
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_IBM 103074
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_IBM 103075
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_IBM 103076
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
#endif
#ifndef GL_VERTEX_ARRAY_LIST_STRIDE_IBM
#  define GL_VERTEX_ARRAY_LIST_STRIDE_IBM 103080
#endif
#ifndef GL_NORMAL_ARRAY_LIST_STRIDE_IBM
#  define GL_NORMAL_ARRAY_LIST_STRIDE_IBM 103081
#endif
#ifndef GL_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_COLOR_ARRAY_LIST_STRIDE_IBM 103082
#endif
#ifndef GL_INDEX_ARRAY_LIST_STRIDE_IBM
#  define GL_INDEX_ARRAY_LIST_STRIDE_IBM 103083
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glColorPointerListIBM
typedef void (APIENTRYP PFNGLUXCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
typedef void (APIENTRYP PFNGLUXEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
typedef void (APIENTRYP PFNGLUXINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
typedef void (APIENTRYP PFNGLUXNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
typedef void (APIENTRYP PFNGLUXVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glColorPointerListIBM
extern PFNGLUXCOLORPOINTERLISTIBMPROC glColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
extern PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC glSecondaryColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
extern PFNGLUXEDGEFLAGPOINTERLISTIBMPROC glEdgeFlagPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
extern PFNGLUXFOGCOORDPOINTERLISTIBMPROC glFogCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
extern PFNGLUXINDEXPOINTERLISTIBMPROC glIndexPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
extern PFNGLUXNORMALPOINTERLISTIBMPROC glNormalPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
extern PFNGLUXTEXCOORDPOINTERLISTIBMPROC glTexCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
extern PFNGLUXVERTEXPOINTERLISTIBMPROC glVertexPointerListIBM;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:13 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_IBM_vertex_array_lists__
#define __GLUX_GL_IBM_vertex_array_lists__

GLUX_NEW_PLUGIN(GL_IBM_vertex_array_lists);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ARRAY_LIST_IBM
#  define GL_VERTEX_ARRAY_LIST_IBM 103070
#endif
#ifndef GL_NORMAL_ARRAY_LIST_IBM
#  define GL_NORMAL_ARRAY_LIST_IBM 103071
#endif
#ifndef GL_COLOR_ARRAY_LIST_IBM
#  define GL_COLOR_ARRAY_LIST_IBM 103072
#endif
#ifndef GL_INDEX_ARRAY_LIST_IBM
#  define GL_INDEX_ARRAY_LIST_IBM 103073
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_IBM 103074
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_IBM 103075
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_IBM 103076
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
#endif
#ifndef GL_VERTEX_ARRAY_LIST_STRIDE_IBM
#  define GL_VERTEX_ARRAY_LIST_STRIDE_IBM 103080
#endif
#ifndef GL_NORMAL_ARRAY_LIST_STRIDE_IBM
#  define GL_NORMAL_ARRAY_LIST_STRIDE_IBM 103081
#endif
#ifndef GL_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_COLOR_ARRAY_LIST_STRIDE_IBM 103082
#endif
#ifndef GL_INDEX_ARRAY_LIST_STRIDE_IBM
#  define GL_INDEX_ARRAY_LIST_STRIDE_IBM 103083
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glColorPointerListIBM
typedef void (APIENTRYP PFNGLUXCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
typedef void (APIENTRYP PFNGLUXEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
typedef void (APIENTRYP PFNGLUXINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
typedef void (APIENTRYP PFNGLUXNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
typedef void (APIENTRYP PFNGLUXVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glColorPointerListIBM
extern PFNGLUXCOLORPOINTERLISTIBMPROC glColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
extern PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC glSecondaryColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
extern PFNGLUXEDGEFLAGPOINTERLISTIBMPROC glEdgeFlagPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
extern PFNGLUXFOGCOORDPOINTERLISTIBMPROC glFogCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
extern PFNGLUXINDEXPOINTERLISTIBMPROC glIndexPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
extern PFNGLUXNORMALPOINTERLISTIBMPROC glNormalPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
extern PFNGLUXTEXCOORDPOINTERLISTIBMPROC glTexCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
extern PFNGLUXVERTEXPOINTERLISTIBMPROC glVertexPointerListIBM;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:29 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_IBM_vertex_array_lists__
#define __GLUX_GL_IBM_vertex_array_lists__

GLUX_NEW_PLUGIN(GL_IBM_vertex_array_lists);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ARRAY_LIST_IBM
#  define GL_VERTEX_ARRAY_LIST_IBM 103070
#endif
#ifndef GL_NORMAL_ARRAY_LIST_IBM
#  define GL_NORMAL_ARRAY_LIST_IBM 103071
#endif
#ifndef GL_COLOR_ARRAY_LIST_IBM
#  define GL_COLOR_ARRAY_LIST_IBM 103072
#endif
#ifndef GL_INDEX_ARRAY_LIST_IBM
#  define GL_INDEX_ARRAY_LIST_IBM 103073
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_IBM 103074
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_IBM 103075
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_IBM 103076
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
#endif
#ifndef GL_VERTEX_ARRAY_LIST_STRIDE_IBM
#  define GL_VERTEX_ARRAY_LIST_STRIDE_IBM 103080
#endif
#ifndef GL_NORMAL_ARRAY_LIST_STRIDE_IBM
#  define GL_NORMAL_ARRAY_LIST_STRIDE_IBM 103081
#endif
#ifndef GL_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_COLOR_ARRAY_LIST_STRIDE_IBM 103082
#endif
#ifndef GL_INDEX_ARRAY_LIST_STRIDE_IBM
#  define GL_INDEX_ARRAY_LIST_STRIDE_IBM 103083
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glColorPointerListIBM
typedef void (APIENTRYP PFNGLUXCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
typedef void (APIENTRYP PFNGLUXEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
typedef void (APIENTRYP PFNGLUXINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
typedef void (APIENTRYP PFNGLUXNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
typedef void (APIENTRYP PFNGLUXVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glColorPointerListIBM
extern PFNGLUXCOLORPOINTERLISTIBMPROC glColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
extern PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC glSecondaryColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
extern PFNGLUXEDGEFLAGPOINTERLISTIBMPROC glEdgeFlagPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
extern PFNGLUXFOGCOORDPOINTERLISTIBMPROC glFogCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
extern PFNGLUXINDEXPOINTERLISTIBMPROC glIndexPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
extern PFNGLUXNORMALPOINTERLISTIBMPROC glNormalPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
extern PFNGLUXTEXCOORDPOINTERLISTIBMPROC glTexCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
extern PFNGLUXVERTEXPOINTERLISTIBMPROC glVertexPointerListIBM;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:32 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_IBM_vertex_array_lists__
#define __GLUX_GL_IBM_vertex_array_lists__

GLUX_NEW_PLUGIN(GL_IBM_vertex_array_lists);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ARRAY_LIST_IBM
#  define GL_VERTEX_ARRAY_LIST_IBM 103070
#endif
#ifndef GL_NORMAL_ARRAY_LIST_IBM
#  define GL_NORMAL_ARRAY_LIST_IBM 103071
#endif
#ifndef GL_COLOR_ARRAY_LIST_IBM
#  define GL_COLOR_ARRAY_LIST_IBM 103072
#endif
#ifndef GL_INDEX_ARRAY_LIST_IBM
#  define GL_INDEX_ARRAY_LIST_IBM 103073
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_IBM 103074
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_IBM 103075
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_IBM 103076
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
#endif
#ifndef GL_VERTEX_ARRAY_LIST_STRIDE_IBM
#  define GL_VERTEX_ARRAY_LIST_STRIDE_IBM 103080
#endif
#ifndef GL_NORMAL_ARRAY_LIST_STRIDE_IBM
#  define GL_NORMAL_ARRAY_LIST_STRIDE_IBM 103081
#endif
#ifndef GL_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_COLOR_ARRAY_LIST_STRIDE_IBM 103082
#endif
#ifndef GL_INDEX_ARRAY_LIST_STRIDE_IBM
#  define GL_INDEX_ARRAY_LIST_STRIDE_IBM 103083
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glColorPointerListIBM
typedef void (APIENTRYP PFNGLUXCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
typedef void (APIENTRYP PFNGLUXEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
typedef void (APIENTRYP PFNGLUXINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
typedef void (APIENTRYP PFNGLUXNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
typedef void (APIENTRYP PFNGLUXVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glColorPointerListIBM
extern PFNGLUXCOLORPOINTERLISTIBMPROC glColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
extern PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC glSecondaryColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
extern PFNGLUXEDGEFLAGPOINTERLISTIBMPROC glEdgeFlagPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
extern PFNGLUXFOGCOORDPOINTERLISTIBMPROC glFogCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
extern PFNGLUXINDEXPOINTERLISTIBMPROC glIndexPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
extern PFNGLUXNORMALPOINTERLISTIBMPROC glNormalPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
extern PFNGLUXTEXCOORDPOINTERLISTIBMPROC glTexCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
extern PFNGLUXVERTEXPOINTERLISTIBMPROC glVertexPointerListIBM;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:54 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_IBM_vertex_array_lists__
#define __GLUX_GL_IBM_vertex_array_lists__

GLUX_NEW_PLUGIN(GL_IBM_vertex_array_lists);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ARRAY_LIST_IBM
#  define GL_VERTEX_ARRAY_LIST_IBM 103070
#endif
#ifndef GL_NORMAL_ARRAY_LIST_IBM
#  define GL_NORMAL_ARRAY_LIST_IBM 103071
#endif
#ifndef GL_COLOR_ARRAY_LIST_IBM
#  define GL_COLOR_ARRAY_LIST_IBM 103072
#endif
#ifndef GL_INDEX_ARRAY_LIST_IBM
#  define GL_INDEX_ARRAY_LIST_IBM 103073
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_IBM 103074
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_IBM 103075
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_IBM 103076
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
#endif
#ifndef GL_VERTEX_ARRAY_LIST_STRIDE_IBM
#  define GL_VERTEX_ARRAY_LIST_STRIDE_IBM 103080
#endif
#ifndef GL_NORMAL_ARRAY_LIST_STRIDE_IBM
#  define GL_NORMAL_ARRAY_LIST_STRIDE_IBM 103081
#endif
#ifndef GL_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_COLOR_ARRAY_LIST_STRIDE_IBM 103082
#endif
#ifndef GL_INDEX_ARRAY_LIST_STRIDE_IBM
#  define GL_INDEX_ARRAY_LIST_STRIDE_IBM 103083
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glColorPointerListIBM
typedef void (APIENTRYP PFNGLUXCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
typedef void (APIENTRYP PFNGLUXEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
typedef void (APIENTRYP PFNGLUXINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
typedef void (APIENTRYP PFNGLUXNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
typedef void (APIENTRYP PFNGLUXVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glColorPointerListIBM
extern PFNGLUXCOLORPOINTERLISTIBMPROC glColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
extern PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC glSecondaryColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
extern PFNGLUXEDGEFLAGPOINTERLISTIBMPROC glEdgeFlagPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
extern PFNGLUXFOGCOORDPOINTERLISTIBMPROC glFogCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
extern PFNGLUXINDEXPOINTERLISTIBMPROC glIndexPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
extern PFNGLUXNORMALPOINTERLISTIBMPROC glNormalPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
extern PFNGLUXTEXCOORDPOINTERLISTIBMPROC glTexCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
extern PFNGLUXVERTEXPOINTERLISTIBMPROC glVertexPointerListIBM;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:28:04 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_IBM_vertex_array_lists__
#define __GLUX_GL_IBM_vertex_array_lists__

GLUX_NEW_PLUGIN(GL_IBM_vertex_array_lists);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ARRAY_LIST_IBM
#  define GL_VERTEX_ARRAY_LIST_IBM 103070
#endif
#ifndef GL_NORMAL_ARRAY_LIST_IBM
#  define GL_NORMAL_ARRAY_LIST_IBM 103071
#endif
#ifndef GL_COLOR_ARRAY_LIST_IBM
#  define GL_COLOR_ARRAY_LIST_IBM 103072
#endif
#ifndef GL_INDEX_ARRAY_LIST_IBM
#  define GL_INDEX_ARRAY_LIST_IBM 103073
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_IBM 103074
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_IBM 103075
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_IBM 103076
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
#endif
#ifndef GL_VERTEX_ARRAY_LIST_STRIDE_IBM
#  define GL_VERTEX_ARRAY_LIST_STRIDE_IBM 103080
#endif
#ifndef GL_NORMAL_ARRAY_LIST_STRIDE_IBM
#  define GL_NORMAL_ARRAY_LIST_STRIDE_IBM 103081
#endif
#ifndef GL_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_COLOR_ARRAY_LIST_STRIDE_IBM 103082
#endif
#ifndef GL_INDEX_ARRAY_LIST_STRIDE_IBM
#  define GL_INDEX_ARRAY_LIST_STRIDE_IBM 103083
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glColorPointerListIBM
typedef void (APIENTRYP PFNGLUXCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
typedef void (APIENTRYP PFNGLUXEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
typedef void (APIENTRYP PFNGLUXINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
typedef void (APIENTRYP PFNGLUXNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
typedef void (APIENTRYP PFNGLUXVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glColorPointerListIBM
extern PFNGLUXCOLORPOINTERLISTIBMPROC glColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
extern PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC glSecondaryColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
extern PFNGLUXEDGEFLAGPOINTERLISTIBMPROC glEdgeFlagPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
extern PFNGLUXFOGCOORDPOINTERLISTIBMPROC glFogCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
extern PFNGLUXINDEXPOINTERLISTIBMPROC glIndexPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
extern PFNGLUXNORMALPOINTERLISTIBMPROC glNormalPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
extern PFNGLUXTEXCOORDPOINTERLISTIBMPROC glTexCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
extern PFNGLUXVERTEXPOINTERLISTIBMPROC glVertexPointerListIBM;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:16:58 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_IBM_vertex_array_lists__
#define __GLUX_GL_IBM_vertex_array_lists__

GLUX_NEW_PLUGIN(GL_IBM_vertex_array_lists);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ARRAY_LIST_IBM
#  define GL_VERTEX_ARRAY_LIST_IBM 103070
#endif
#ifndef GL_NORMAL_ARRAY_LIST_IBM
#  define GL_NORMAL_ARRAY_LIST_IBM 103071
#endif
#ifndef GL_COLOR_ARRAY_LIST_IBM
#  define GL_COLOR_ARRAY_LIST_IBM 103072
#endif
#ifndef GL_INDEX_ARRAY_LIST_IBM
#  define GL_INDEX_ARRAY_LIST_IBM 103073
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_IBM 103074
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_IBM 103075
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_IBM 103076
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
#endif
#ifndef GL_VERTEX_ARRAY_LIST_STRIDE_IBM
#  define GL_VERTEX_ARRAY_LIST_STRIDE_IBM 103080
#endif
#ifndef GL_NORMAL_ARRAY_LIST_STRIDE_IBM
#  define GL_NORMAL_ARRAY_LIST_STRIDE_IBM 103081
#endif
#ifndef GL_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_COLOR_ARRAY_LIST_STRIDE_IBM 103082
#endif
#ifndef GL_INDEX_ARRAY_LIST_STRIDE_IBM
#  define GL_INDEX_ARRAY_LIST_STRIDE_IBM 103083
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glColorPointerListIBM
typedef void (APIENTRYP PFNGLUXCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
typedef void (APIENTRYP PFNGLUXEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
typedef void (APIENTRYP PFNGLUXINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
typedef void (APIENTRYP PFNGLUXNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
typedef void (APIENTRYP PFNGLUXVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glColorPointerListIBM
extern PFNGLUXCOLORPOINTERLISTIBMPROC glColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
extern PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC glSecondaryColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
extern PFNGLUXEDGEFLAGPOINTERLISTIBMPROC glEdgeFlagPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
extern PFNGLUXFOGCOORDPOINTERLISTIBMPROC glFogCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
extern PFNGLUXINDEXPOINTERLISTIBMPROC glIndexPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
extern PFNGLUXNORMALPOINTERLISTIBMPROC glNormalPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
extern PFNGLUXTEXCOORDPOINTERLISTIBMPROC glTexCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
extern PFNGLUXVERTEXPOINTERLISTIBMPROC glVertexPointerListIBM;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_IBM_vertex_array_lists__
#define __GLUX_GL_IBM_vertex_array_lists__

GLUX_NEW_PLUGIN(GL_IBM_vertex_array_lists);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ARRAY_LIST_IBM
#  define GL_VERTEX_ARRAY_LIST_IBM 103070
#endif
#ifndef GL_NORMAL_ARRAY_LIST_IBM
#  define GL_NORMAL_ARRAY_LIST_IBM 103071
#endif
#ifndef GL_COLOR_ARRAY_LIST_IBM
#  define GL_COLOR_ARRAY_LIST_IBM 103072
#endif
#ifndef GL_INDEX_ARRAY_LIST_IBM
#  define GL_INDEX_ARRAY_LIST_IBM 103073
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_IBM 103074
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_IBM 103075
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_IBM 103076
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
#endif
#ifndef GL_VERTEX_ARRAY_LIST_STRIDE_IBM
#  define GL_VERTEX_ARRAY_LIST_STRIDE_IBM 103080
#endif
#ifndef GL_NORMAL_ARRAY_LIST_STRIDE_IBM
#  define GL_NORMAL_ARRAY_LIST_STRIDE_IBM 103081
#endif
#ifndef GL_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_COLOR_ARRAY_LIST_STRIDE_IBM 103082
#endif
#ifndef GL_INDEX_ARRAY_LIST_STRIDE_IBM
#  define GL_INDEX_ARRAY_LIST_STRIDE_IBM 103083
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glColorPointerListIBM
typedef void (APIENTRYP PFNGLUXCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
typedef void (APIENTRYP PFNGLUXEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
typedef void (APIENTRYP PFNGLUXINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
typedef void (APIENTRYP PFNGLUXNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
typedef void (APIENTRYP PFNGLUXVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glColorPointerListIBM
extern PFNGLUXCOLORPOINTERLISTIBMPROC glColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
extern PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC glSecondaryColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
extern PFNGLUXEDGEFLAGPOINTERLISTIBMPROC glEdgeFlagPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
extern PFNGLUXFOGCOORDPOINTERLISTIBMPROC glFogCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
extern PFNGLUXINDEXPOINTERLISTIBMPROC glIndexPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
extern PFNGLUXNORMALPOINTERLISTIBMPROC glNormalPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
extern PFNGLUXTEXCOORDPOINTERLISTIBMPROC glTexCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
extern PFNGLUXVERTEXPOINTERLISTIBMPROC glVertexPointerListIBM;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:20 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_IBM_vertex_array_lists__
#define __GLUX_GL_IBM_vertex_array_lists__

GLUX_NEW_PLUGIN(GL_IBM_vertex_array_lists);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ARRAY_LIST_IBM
#  define GL_VERTEX_ARRAY_LIST_IBM 103070
#endif
#ifndef GL_NORMAL_ARRAY_LIST_IBM
#  define GL_NORMAL_ARRAY_LIST_IBM 103071
#endif
#ifndef GL_COLOR_ARRAY_LIST_IBM
#  define GL_COLOR_ARRAY_LIST_IBM 103072
#endif
#ifndef GL_INDEX_ARRAY_LIST_IBM
#  define GL_INDEX_ARRAY_LIST_IBM 103073
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_IBM 103074
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_IBM 103075
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_IBM 103076
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
#endif
#ifndef GL_VERTEX_ARRAY_LIST_STRIDE_IBM
#  define GL_VERTEX_ARRAY_LIST_STRIDE_IBM 103080
#endif
#ifndef GL_NORMAL_ARRAY_LIST_STRIDE_IBM
#  define GL_NORMAL_ARRAY_LIST_STRIDE_IBM 103081
#endif
#ifndef GL_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_COLOR_ARRAY_LIST_STRIDE_IBM 103082
#endif
#ifndef GL_INDEX_ARRAY_LIST_STRIDE_IBM
#  define GL_INDEX_ARRAY_LIST_STRIDE_IBM 103083
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glColorPointerListIBM
typedef void (APIENTRYP PFNGLUXCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
typedef void (APIENTRYP PFNGLUXEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
typedef void (APIENTRYP PFNGLUXINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
typedef void (APIENTRYP PFNGLUXNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
typedef void (APIENTRYP PFNGLUXVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glColorPointerListIBM
extern PFNGLUXCOLORPOINTERLISTIBMPROC glColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
extern PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC glSecondaryColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
extern PFNGLUXEDGEFLAGPOINTERLISTIBMPROC glEdgeFlagPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
extern PFNGLUXFOGCOORDPOINTERLISTIBMPROC glFogCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
extern PFNGLUXINDEXPOINTERLISTIBMPROC glIndexPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
extern PFNGLUXNORMALPOINTERLISTIBMPROC glNormalPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
extern PFNGLUXTEXCOORDPOINTERLISTIBMPROC glTexCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
extern PFNGLUXVERTEXPOINTERLISTIBMPROC glVertexPointerListIBM;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:00 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_IBM_vertex_array_lists__
#define __GLUX_GL_IBM_vertex_array_lists__

GLUX_NEW_PLUGIN(GL_IBM_vertex_array_lists);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ARRAY_LIST_IBM
#  define GL_VERTEX_ARRAY_LIST_IBM 103070
#endif
#ifndef GL_NORMAL_ARRAY_LIST_IBM
#  define GL_NORMAL_ARRAY_LIST_IBM 103071
#endif
#ifndef GL_COLOR_ARRAY_LIST_IBM
#  define GL_COLOR_ARRAY_LIST_IBM 103072
#endif
#ifndef GL_INDEX_ARRAY_LIST_IBM
#  define GL_INDEX_ARRAY_LIST_IBM 103073
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_IBM 103074
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_IBM 103075
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_IBM 103076
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
#endif
#ifndef GL_VERTEX_ARRAY_LIST_STRIDE_IBM
#  define GL_VERTEX_ARRAY_LIST_STRIDE_IBM 103080
#endif
#ifndef GL_NORMAL_ARRAY_LIST_STRIDE_IBM
#  define GL_NORMAL_ARRAY_LIST_STRIDE_IBM 103081
#endif
#ifndef GL_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_COLOR_ARRAY_LIST_STRIDE_IBM 103082
#endif
#ifndef GL_INDEX_ARRAY_LIST_STRIDE_IBM
#  define GL_INDEX_ARRAY_LIST_STRIDE_IBM 103083
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glColorPointerListIBM
typedef void (APIENTRYP PFNGLUXCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
typedef void (APIENTRYP PFNGLUXEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
typedef void (APIENTRYP PFNGLUXINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
typedef void (APIENTRYP PFNGLUXNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
typedef void (APIENTRYP PFNGLUXVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glColorPointerListIBM
extern PFNGLUXCOLORPOINTERLISTIBMPROC glColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
extern PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC glSecondaryColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
extern PFNGLUXEDGEFLAGPOINTERLISTIBMPROC glEdgeFlagPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
extern PFNGLUXFOGCOORDPOINTERLISTIBMPROC glFogCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
extern PFNGLUXINDEXPOINTERLISTIBMPROC glIndexPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
extern PFNGLUXNORMALPOINTERLISTIBMPROC glNormalPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
extern PFNGLUXTEXCOORDPOINTERLISTIBMPROC glTexCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
extern PFNGLUXVERTEXPOINTERLISTIBMPROC glVertexPointerListIBM;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:09 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_IBM_vertex_array_lists__
#define __GLUX_GL_IBM_vertex_array_lists__

GLUX_NEW_PLUGIN(GL_IBM_vertex_array_lists);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ARRAY_LIST_IBM
#  define GL_VERTEX_ARRAY_LIST_IBM 103070
#endif
#ifndef GL_NORMAL_ARRAY_LIST_IBM
#  define GL_NORMAL_ARRAY_LIST_IBM 103071
#endif
#ifndef GL_COLOR_ARRAY_LIST_IBM
#  define GL_COLOR_ARRAY_LIST_IBM 103072
#endif
#ifndef GL_INDEX_ARRAY_LIST_IBM
#  define GL_INDEX_ARRAY_LIST_IBM 103073
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_IBM 103074
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_IBM 103075
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_IBM 103076
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
#endif
#ifndef GL_VERTEX_ARRAY_LIST_STRIDE_IBM
#  define GL_VERTEX_ARRAY_LIST_STRIDE_IBM 103080
#endif
#ifndef GL_NORMAL_ARRAY_LIST_STRIDE_IBM
#  define GL_NORMAL_ARRAY_LIST_STRIDE_IBM 103081
#endif
#ifndef GL_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_COLOR_ARRAY_LIST_STRIDE_IBM 103082
#endif
#ifndef GL_INDEX_ARRAY_LIST_STRIDE_IBM
#  define GL_INDEX_ARRAY_LIST_STRIDE_IBM 103083
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glColorPointerListIBM
typedef void (APIENTRYP PFNGLUXCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
typedef void (APIENTRYP PFNGLUXEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
typedef void (APIENTRYP PFNGLUXINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
typedef void (APIENTRYP PFNGLUXNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
typedef void (APIENTRYP PFNGLUXVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glColorPointerListIBM
extern PFNGLUXCOLORPOINTERLISTIBMPROC glColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
extern PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC glSecondaryColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
extern PFNGLUXEDGEFLAGPOINTERLISTIBMPROC glEdgeFlagPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
extern PFNGLUXFOGCOORDPOINTERLISTIBMPROC glFogCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
extern PFNGLUXINDEXPOINTERLISTIBMPROC glIndexPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
extern PFNGLUXNORMALPOINTERLISTIBMPROC glNormalPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
extern PFNGLUXTEXCOORDPOINTERLISTIBMPROC glTexCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
extern PFNGLUXVERTEXPOINTERLISTIBMPROC glVertexPointerListIBM;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:22 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_IBM_vertex_array_lists__
#define __GLUX_GL_IBM_vertex_array_lists__

GLUX_NEW_PLUGIN(GL_IBM_vertex_array_lists);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ARRAY_LIST_IBM
#  define GL_VERTEX_ARRAY_LIST_IBM 103070
#endif
#ifndef GL_NORMAL_ARRAY_LIST_IBM
#  define GL_NORMAL_ARRAY_LIST_IBM 103071
#endif
#ifndef GL_COLOR_ARRAY_LIST_IBM
#  define GL_COLOR_ARRAY_LIST_IBM 103072
#endif
#ifndef GL_INDEX_ARRAY_LIST_IBM
#  define GL_INDEX_ARRAY_LIST_IBM 103073
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_IBM 103074
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_IBM 103075
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_IBM 103076
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
#endif
#ifndef GL_VERTEX_ARRAY_LIST_STRIDE_IBM
#  define GL_VERTEX_ARRAY_LIST_STRIDE_IBM 103080
#endif
#ifndef GL_NORMAL_ARRAY_LIST_STRIDE_IBM
#  define GL_NORMAL_ARRAY_LIST_STRIDE_IBM 103081
#endif
#ifndef GL_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_COLOR_ARRAY_LIST_STRIDE_IBM 103082
#endif
#ifndef GL_INDEX_ARRAY_LIST_STRIDE_IBM
#  define GL_INDEX_ARRAY_LIST_STRIDE_IBM 103083
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glColorPointerListIBM
typedef void (APIENTRYP PFNGLUXCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
typedef void (APIENTRYP PFNGLUXEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
typedef void (APIENTRYP PFNGLUXINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
typedef void (APIENTRYP PFNGLUXNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
typedef void (APIENTRYP PFNGLUXVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glColorPointerListIBM
extern PFNGLUXCOLORPOINTERLISTIBMPROC glColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
extern PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC glSecondaryColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
extern PFNGLUXEDGEFLAGPOINTERLISTIBMPROC glEdgeFlagPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
extern PFNGLUXFOGCOORDPOINTERLISTIBMPROC glFogCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
extern PFNGLUXINDEXPOINTERLISTIBMPROC glIndexPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
extern PFNGLUXNORMALPOINTERLISTIBMPROC glNormalPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
extern PFNGLUXTEXCOORDPOINTERLISTIBMPROC glTexCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
extern PFNGLUXVERTEXPOINTERLISTIBMPROC glVertexPointerListIBM;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:52:02 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_IBM_vertex_array_lists__
#define __GLUX_GL_IBM_vertex_array_lists__

GLUX_NEW_PLUGIN(GL_IBM_vertex_array_lists);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ARRAY_LIST_IBM
#  define GL_VERTEX_ARRAY_LIST_IBM 103070
#endif
#ifndef GL_NORMAL_ARRAY_LIST_IBM
#  define GL_NORMAL_ARRAY_LIST_IBM 103071
#endif
#ifndef GL_COLOR_ARRAY_LIST_IBM
#  define GL_COLOR_ARRAY_LIST_IBM 103072
#endif
#ifndef GL_INDEX_ARRAY_LIST_IBM
#  define GL_INDEX_ARRAY_LIST_IBM 103073
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_IBM 103074
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_IBM 103075
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_IBM 103076
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
#endif
#ifndef GL_VERTEX_ARRAY_LIST_STRIDE_IBM
#  define GL_VERTEX_ARRAY_LIST_STRIDE_IBM 103080
#endif
#ifndef GL_NORMAL_ARRAY_LIST_STRIDE_IBM
#  define GL_NORMAL_ARRAY_LIST_STRIDE_IBM 103081
#endif
#ifndef GL_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_COLOR_ARRAY_LIST_STRIDE_IBM 103082
#endif
#ifndef GL_INDEX_ARRAY_LIST_STRIDE_IBM
#  define GL_INDEX_ARRAY_LIST_STRIDE_IBM 103083
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glColorPointerListIBM
typedef void (APIENTRYP PFNGLUXCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
typedef void (APIENTRYP PFNGLUXEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
typedef void (APIENTRYP PFNGLUXINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
typedef void (APIENTRYP PFNGLUXNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
typedef void (APIENTRYP PFNGLUXVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glColorPointerListIBM
extern PFNGLUXCOLORPOINTERLISTIBMPROC glColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
extern PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC glSecondaryColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
extern PFNGLUXEDGEFLAGPOINTERLISTIBMPROC glEdgeFlagPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
extern PFNGLUXFOGCOORDPOINTERLISTIBMPROC glFogCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
extern PFNGLUXINDEXPOINTERLISTIBMPROC glIndexPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
extern PFNGLUXNORMALPOINTERLISTIBMPROC glNormalPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
extern PFNGLUXTEXCOORDPOINTERLISTIBMPROC glTexCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
extern PFNGLUXVERTEXPOINTERLISTIBMPROC glVertexPointerListIBM;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_IBM_vertex_array_lists__
#define __GLUX_GL_IBM_vertex_array_lists__

GLUX_NEW_PLUGIN(GL_IBM_vertex_array_lists);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ARRAY_LIST_IBM
#  define GL_VERTEX_ARRAY_LIST_IBM 103070
#endif
#ifndef GL_NORMAL_ARRAY_LIST_IBM
#  define GL_NORMAL_ARRAY_LIST_IBM 103071
#endif
#ifndef GL_COLOR_ARRAY_LIST_IBM
#  define GL_COLOR_ARRAY_LIST_IBM 103072
#endif
#ifndef GL_INDEX_ARRAY_LIST_IBM
#  define GL_INDEX_ARRAY_LIST_IBM 103073
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_IBM 103074
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_IBM 103075
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_IBM 103076
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
#endif
#ifndef GL_VERTEX_ARRAY_LIST_STRIDE_IBM
#  define GL_VERTEX_ARRAY_LIST_STRIDE_IBM 103080
#endif
#ifndef GL_NORMAL_ARRAY_LIST_STRIDE_IBM
#  define GL_NORMAL_ARRAY_LIST_STRIDE_IBM 103081
#endif
#ifndef GL_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_COLOR_ARRAY_LIST_STRIDE_IBM 103082
#endif
#ifndef GL_INDEX_ARRAY_LIST_STRIDE_IBM
#  define GL_INDEX_ARRAY_LIST_STRIDE_IBM 103083
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glColorPointerListIBM
typedef void (APIENTRYP PFNGLUXCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
typedef void (APIENTRYP PFNGLUXEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
typedef void (APIENTRYP PFNGLUXINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
typedef void (APIENTRYP PFNGLUXNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
typedef void (APIENTRYP PFNGLUXVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glColorPointerListIBM
extern PFNGLUXCOLORPOINTERLISTIBMPROC glColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
extern PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC glSecondaryColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
extern PFNGLUXEDGEFLAGPOINTERLISTIBMPROC glEdgeFlagPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
extern PFNGLUXFOGCOORDPOINTERLISTIBMPROC glFogCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
extern PFNGLUXINDEXPOINTERLISTIBMPROC glIndexPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
extern PFNGLUXNORMALPOINTERLISTIBMPROC glNormalPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
extern PFNGLUXTEXCOORDPOINTERLISTIBMPROC glTexCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
extern PFNGLUXVERTEXPOINTERLISTIBMPROC glVertexPointerListIBM;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:05 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_IBM_vertex_array_lists__
#define __GLUX_GL_IBM_vertex_array_lists__

GLUX_NEW_PLUGIN(GL_IBM_vertex_array_lists);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ARRAY_LIST_IBM
#  define GL_VERTEX_ARRAY_LIST_IBM 103070
#endif
#ifndef GL_NORMAL_ARRAY_LIST_IBM
#  define GL_NORMAL_ARRAY_LIST_IBM 103071
#endif
#ifndef GL_COLOR_ARRAY_LIST_IBM
#  define GL_COLOR_ARRAY_LIST_IBM 103072
#endif
#ifndef GL_INDEX_ARRAY_LIST_IBM
#  define GL_INDEX_ARRAY_LIST_IBM 103073
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_IBM 103074
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_IBM 103075
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_IBM 103076
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
#endif
#ifndef GL_VERTEX_ARRAY_LIST_STRIDE_IBM
#  define GL_VERTEX_ARRAY_LIST_STRIDE_IBM 103080
#endif
#ifndef GL_NORMAL_ARRAY_LIST_STRIDE_IBM
#  define GL_NORMAL_ARRAY_LIST_STRIDE_IBM 103081
#endif
#ifndef GL_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_COLOR_ARRAY_LIST_STRIDE_IBM 103082
#endif
#ifndef GL_INDEX_ARRAY_LIST_STRIDE_IBM
#  define GL_INDEX_ARRAY_LIST_STRIDE_IBM 103083
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glColorPointerListIBM
typedef void (APIENTRYP PFNGLUXCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
typedef void (APIENTRYP PFNGLUXEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
typedef void (APIENTRYP PFNGLUXINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
typedef void (APIENTRYP PFNGLUXNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
typedef void (APIENTRYP PFNGLUXVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glColorPointerListIBM
extern PFNGLUXCOLORPOINTERLISTIBMPROC glColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
extern PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC glSecondaryColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
extern PFNGLUXEDGEFLAGPOINTERLISTIBMPROC glEdgeFlagPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
extern PFNGLUXFOGCOORDPOINTERLISTIBMPROC glFogCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
extern PFNGLUXINDEXPOINTERLISTIBMPROC glIndexPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
extern PFNGLUXNORMALPOINTERLISTIBMPROC glNormalPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
extern PFNGLUXTEXCOORDPOINTERLISTIBMPROC glTexCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
extern PFNGLUXVERTEXPOINTERLISTIBMPROC glVertexPointerListIBM;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_IBM_vertex_array_lists__
#define __GLUX_GL_IBM_vertex_array_lists__

GLUX_NEW_PLUGIN(GL_IBM_vertex_array_lists);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ARRAY_LIST_IBM
#  define GL_VERTEX_ARRAY_LIST_IBM 103070
#endif
#ifndef GL_NORMAL_ARRAY_LIST_IBM
#  define GL_NORMAL_ARRAY_LIST_IBM 103071
#endif
#ifndef GL_COLOR_ARRAY_LIST_IBM
#  define GL_COLOR_ARRAY_LIST_IBM 103072
#endif
#ifndef GL_INDEX_ARRAY_LIST_IBM
#  define GL_INDEX_ARRAY_LIST_IBM 103073
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_IBM 103074
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_IBM 103075
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_IBM 103076
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
#endif
#ifndef GL_VERTEX_ARRAY_LIST_STRIDE_IBM
#  define GL_VERTEX_ARRAY_LIST_STRIDE_IBM 103080
#endif
#ifndef GL_NORMAL_ARRAY_LIST_STRIDE_IBM
#  define GL_NORMAL_ARRAY_LIST_STRIDE_IBM 103081
#endif
#ifndef GL_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_COLOR_ARRAY_LIST_STRIDE_IBM 103082
#endif
#ifndef GL_INDEX_ARRAY_LIST_STRIDE_IBM
#  define GL_INDEX_ARRAY_LIST_STRIDE_IBM 103083
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glColorPointerListIBM
typedef void (APIENTRYP PFNGLUXCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
typedef void (APIENTRYP PFNGLUXEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
typedef void (APIENTRYP PFNGLUXINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
typedef void (APIENTRYP PFNGLUXNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
typedef void (APIENTRYP PFNGLUXVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glColorPointerListIBM
extern PFNGLUXCOLORPOINTERLISTIBMPROC glColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
extern PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC glSecondaryColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
extern PFNGLUXEDGEFLAGPOINTERLISTIBMPROC glEdgeFlagPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
extern PFNGLUXFOGCOORDPOINTERLISTIBMPROC glFogCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
extern PFNGLUXINDEXPOINTERLISTIBMPROC glIndexPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
extern PFNGLUXNORMALPOINTERLISTIBMPROC glNormalPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
extern PFNGLUXTEXCOORDPOINTERLISTIBMPROC glTexCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
extern PFNGLUXVERTEXPOINTERLISTIBMPROC glVertexPointerListIBM;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_IBM_vertex_array_lists__
#define __GLUX_GL_IBM_vertex_array_lists__

GLUX_NEW_PLUGIN(GL_IBM_vertex_array_lists);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ARRAY_LIST_IBM
#  define GL_VERTEX_ARRAY_LIST_IBM 103070
#endif
#ifndef GL_NORMAL_ARRAY_LIST_IBM
#  define GL_NORMAL_ARRAY_LIST_IBM 103071
#endif
#ifndef GL_COLOR_ARRAY_LIST_IBM
#  define GL_COLOR_ARRAY_LIST_IBM 103072
#endif
#ifndef GL_INDEX_ARRAY_LIST_IBM
#  define GL_INDEX_ARRAY_LIST_IBM 103073
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_IBM 103074
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_IBM 103075
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_IBM 103076
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
#endif
#ifndef GL_VERTEX_ARRAY_LIST_STRIDE_IBM
#  define GL_VERTEX_ARRAY_LIST_STRIDE_IBM 103080
#endif
#ifndef GL_NORMAL_ARRAY_LIST_STRIDE_IBM
#  define GL_NORMAL_ARRAY_LIST_STRIDE_IBM 103081
#endif
#ifndef GL_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_COLOR_ARRAY_LIST_STRIDE_IBM 103082
#endif
#ifndef GL_INDEX_ARRAY_LIST_STRIDE_IBM
#  define GL_INDEX_ARRAY_LIST_STRIDE_IBM 103083
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glColorPointerListIBM
typedef void (APIENTRYP PFNGLUXCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
typedef void (APIENTRYP PFNGLUXEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
typedef void (APIENTRYP PFNGLUXINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
typedef void (APIENTRYP PFNGLUXNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
typedef void (APIENTRYP PFNGLUXVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glColorPointerListIBM
extern PFNGLUXCOLORPOINTERLISTIBMPROC glColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
extern PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC glSecondaryColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
extern PFNGLUXEDGEFLAGPOINTERLISTIBMPROC glEdgeFlagPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
extern PFNGLUXFOGCOORDPOINTERLISTIBMPROC glFogCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
extern PFNGLUXINDEXPOINTERLISTIBMPROC glIndexPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
extern PFNGLUXNORMALPOINTERLISTIBMPROC glNormalPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
extern PFNGLUXTEXCOORDPOINTERLISTIBMPROC glTexCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
extern PFNGLUXVERTEXPOINTERLISTIBMPROC glVertexPointerListIBM;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:41:59 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_IBM_vertex_array_lists__
#define __GLUX_GL_IBM_vertex_array_lists__

GLUX_NEW_PLUGIN(GL_IBM_vertex_array_lists);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ARRAY_LIST_IBM
#  define GL_VERTEX_ARRAY_LIST_IBM 103070
#endif
#ifndef GL_NORMAL_ARRAY_LIST_IBM
#  define GL_NORMAL_ARRAY_LIST_IBM 103071
#endif
#ifndef GL_COLOR_ARRAY_LIST_IBM
#  define GL_COLOR_ARRAY_LIST_IBM 103072
#endif
#ifndef GL_INDEX_ARRAY_LIST_IBM
#  define GL_INDEX_ARRAY_LIST_IBM 103073
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_IBM 103074
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_IBM 103075
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_IBM 103076
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
#endif
#ifndef GL_VERTEX_ARRAY_LIST_STRIDE_IBM
#  define GL_VERTEX_ARRAY_LIST_STRIDE_IBM 103080
#endif
#ifndef GL_NORMAL_ARRAY_LIST_STRIDE_IBM
#  define GL_NORMAL_ARRAY_LIST_STRIDE_IBM 103081
#endif
#ifndef GL_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_COLOR_ARRAY_LIST_STRIDE_IBM 103082
#endif
#ifndef GL_INDEX_ARRAY_LIST_STRIDE_IBM
#  define GL_INDEX_ARRAY_LIST_STRIDE_IBM 103083
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glColorPointerListIBM
typedef void (APIENTRYP PFNGLUXCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
typedef void (APIENTRYP PFNGLUXEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
typedef void (APIENTRYP PFNGLUXINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
typedef void (APIENTRYP PFNGLUXNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
typedef void (APIENTRYP PFNGLUXVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glColorPointerListIBM
extern PFNGLUXCOLORPOINTERLISTIBMPROC glColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
extern PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC glSecondaryColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
extern PFNGLUXEDGEFLAGPOINTERLISTIBMPROC glEdgeFlagPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
extern PFNGLUXFOGCOORDPOINTERLISTIBMPROC glFogCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
extern PFNGLUXINDEXPOINTERLISTIBMPROC glIndexPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
extern PFNGLUXNORMALPOINTERLISTIBMPROC glNormalPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
extern PFNGLUXTEXCOORDPOINTERLISTIBMPROC glTexCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
extern PFNGLUXVERTEXPOINTERLISTIBMPROC glVertexPointerListIBM;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:40 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_IBM_vertex_array_lists__
#define __GLUX_GL_IBM_vertex_array_lists__

GLUX_NEW_PLUGIN(GL_IBM_vertex_array_lists);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ARRAY_LIST_IBM
#  define GL_VERTEX_ARRAY_LIST_IBM 103070
#endif
#ifndef GL_NORMAL_ARRAY_LIST_IBM
#  define GL_NORMAL_ARRAY_LIST_IBM 103071
#endif
#ifndef GL_COLOR_ARRAY_LIST_IBM
#  define GL_COLOR_ARRAY_LIST_IBM 103072
#endif
#ifndef GL_INDEX_ARRAY_LIST_IBM
#  define GL_INDEX_ARRAY_LIST_IBM 103073
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_IBM 103074
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_IBM 103075
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_IBM 103076
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
#endif
#ifndef GL_VERTEX_ARRAY_LIST_STRIDE_IBM
#  define GL_VERTEX_ARRAY_LIST_STRIDE_IBM 103080
#endif
#ifndef GL_NORMAL_ARRAY_LIST_STRIDE_IBM
#  define GL_NORMAL_ARRAY_LIST_STRIDE_IBM 103081
#endif
#ifndef GL_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_COLOR_ARRAY_LIST_STRIDE_IBM 103082
#endif
#ifndef GL_INDEX_ARRAY_LIST_STRIDE_IBM
#  define GL_INDEX_ARRAY_LIST_STRIDE_IBM 103083
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glColorPointerListIBM
typedef void (APIENTRYP PFNGLUXCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
typedef void (APIENTRYP PFNGLUXEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
typedef void (APIENTRYP PFNGLUXINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
typedef void (APIENTRYP PFNGLUXNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
typedef void (APIENTRYP PFNGLUXVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glColorPointerListIBM
extern PFNGLUXCOLORPOINTERLISTIBMPROC glColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
extern PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC glSecondaryColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
extern PFNGLUXEDGEFLAGPOINTERLISTIBMPROC glEdgeFlagPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
extern PFNGLUXFOGCOORDPOINTERLISTIBMPROC glFogCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
extern PFNGLUXINDEXPOINTERLISTIBMPROC glIndexPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
extern PFNGLUXNORMALPOINTERLISTIBMPROC glNormalPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
extern PFNGLUXTEXCOORDPOINTERLISTIBMPROC glTexCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
extern PFNGLUXVERTEXPOINTERLISTIBMPROC glVertexPointerListIBM;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:09:59 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_IBM_vertex_array_lists__
#define __GLUX_GL_IBM_vertex_array_lists__

GLUX_NEW_PLUGIN(GL_IBM_vertex_array_lists);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ARRAY_LIST_IBM
#  define GL_VERTEX_ARRAY_LIST_IBM 103070
#endif
#ifndef GL_NORMAL_ARRAY_LIST_IBM
#  define GL_NORMAL_ARRAY_LIST_IBM 103071
#endif
#ifndef GL_COLOR_ARRAY_LIST_IBM
#  define GL_COLOR_ARRAY_LIST_IBM 103072
#endif
#ifndef GL_INDEX_ARRAY_LIST_IBM
#  define GL_INDEX_ARRAY_LIST_IBM 103073
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_IBM 103074
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_IBM 103075
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_IBM 103076
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
#endif
#ifndef GL_VERTEX_ARRAY_LIST_STRIDE_IBM
#  define GL_VERTEX_ARRAY_LIST_STRIDE_IBM 103080
#endif
#ifndef GL_NORMAL_ARRAY_LIST_STRIDE_IBM
#  define GL_NORMAL_ARRAY_LIST_STRIDE_IBM 103081
#endif
#ifndef GL_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_COLOR_ARRAY_LIST_STRIDE_IBM 103082
#endif
#ifndef GL_INDEX_ARRAY_LIST_STRIDE_IBM
#  define GL_INDEX_ARRAY_LIST_STRIDE_IBM 103083
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glColorPointerListIBM
typedef void (APIENTRYP PFNGLUXCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
typedef void (APIENTRYP PFNGLUXEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
typedef void (APIENTRYP PFNGLUXINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
typedef void (APIENTRYP PFNGLUXNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
typedef void (APIENTRYP PFNGLUXVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glColorPointerListIBM
extern PFNGLUXCOLORPOINTERLISTIBMPROC glColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
extern PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC glSecondaryColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
extern PFNGLUXEDGEFLAGPOINTERLISTIBMPROC glEdgeFlagPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
extern PFNGLUXFOGCOORDPOINTERLISTIBMPROC glFogCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
extern PFNGLUXINDEXPOINTERLISTIBMPROC glIndexPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
extern PFNGLUXNORMALPOINTERLISTIBMPROC glNormalPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
extern PFNGLUXTEXCOORDPOINTERLISTIBMPROC glTexCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
extern PFNGLUXVERTEXPOINTERLISTIBMPROC glVertexPointerListIBM;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:19:59 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_IBM_vertex_array_lists__
#define __GLUX_GL_IBM_vertex_array_lists__

GLUX_NEW_PLUGIN(GL_IBM_vertex_array_lists);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ARRAY_LIST_IBM
#  define GL_VERTEX_ARRAY_LIST_IBM 103070
#endif
#ifndef GL_NORMAL_ARRAY_LIST_IBM
#  define GL_NORMAL_ARRAY_LIST_IBM 103071
#endif
#ifndef GL_COLOR_ARRAY_LIST_IBM
#  define GL_COLOR_ARRAY_LIST_IBM 103072
#endif
#ifndef GL_INDEX_ARRAY_LIST_IBM
#  define GL_INDEX_ARRAY_LIST_IBM 103073
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_IBM 103074
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_IBM 103075
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_IBM 103076
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
#endif
#ifndef GL_VERTEX_ARRAY_LIST_STRIDE_IBM
#  define GL_VERTEX_ARRAY_LIST_STRIDE_IBM 103080
#endif
#ifndef GL_NORMAL_ARRAY_LIST_STRIDE_IBM
#  define GL_NORMAL_ARRAY_LIST_STRIDE_IBM 103081
#endif
#ifndef GL_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_COLOR_ARRAY_LIST_STRIDE_IBM 103082
#endif
#ifndef GL_INDEX_ARRAY_LIST_STRIDE_IBM
#  define GL_INDEX_ARRAY_LIST_STRIDE_IBM 103083
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glColorPointerListIBM
typedef void (APIENTRYP PFNGLUXCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
typedef void (APIENTRYP PFNGLUXEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
typedef void (APIENTRYP PFNGLUXINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
typedef void (APIENTRYP PFNGLUXNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
typedef void (APIENTRYP PFNGLUXVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glColorPointerListIBM
extern PFNGLUXCOLORPOINTERLISTIBMPROC glColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
extern PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC glSecondaryColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
extern PFNGLUXEDGEFLAGPOINTERLISTIBMPROC glEdgeFlagPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
extern PFNGLUXFOGCOORDPOINTERLISTIBMPROC glFogCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
extern PFNGLUXINDEXPOINTERLISTIBMPROC glIndexPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
extern PFNGLUXNORMALPOINTERLISTIBMPROC glNormalPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
extern PFNGLUXTEXCOORDPOINTERLISTIBMPROC glTexCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
extern PFNGLUXVERTEXPOINTERLISTIBMPROC glVertexPointerListIBM;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:42:58 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_IBM_vertex_array_lists__
#define __GLUX_GL_IBM_vertex_array_lists__

GLUX_NEW_PLUGIN(GL_IBM_vertex_array_lists)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ARRAY_LIST_IBM
#  define GL_VERTEX_ARRAY_LIST_IBM 103070
#endif
#ifndef GL_NORMAL_ARRAY_LIST_IBM
#  define GL_NORMAL_ARRAY_LIST_IBM 103071
#endif
#ifndef GL_COLOR_ARRAY_LIST_IBM
#  define GL_COLOR_ARRAY_LIST_IBM 103072
#endif
#ifndef GL_INDEX_ARRAY_LIST_IBM
#  define GL_INDEX_ARRAY_LIST_IBM 103073
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_IBM 103074
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_IBM 103075
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_IBM 103076
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
#endif
#ifndef GL_VERTEX_ARRAY_LIST_STRIDE_IBM
#  define GL_VERTEX_ARRAY_LIST_STRIDE_IBM 103080
#endif
#ifndef GL_NORMAL_ARRAY_LIST_STRIDE_IBM
#  define GL_NORMAL_ARRAY_LIST_STRIDE_IBM 103081
#endif
#ifndef GL_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_COLOR_ARRAY_LIST_STRIDE_IBM 103082
#endif
#ifndef GL_INDEX_ARRAY_LIST_STRIDE_IBM
#  define GL_INDEX_ARRAY_LIST_STRIDE_IBM 103083
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
#  define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
#  define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
#endif
#ifndef GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
#  define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
#  define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glColorPointerListIBM
typedef void (APIENTRYP PFNGLUXCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
typedef void (APIENTRYP PFNGLUXEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
typedef void (APIENTRYP PFNGLUXINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
typedef void (APIENTRYP PFNGLUXNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
typedef void (APIENTRYP PFNGLUXTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
typedef void (APIENTRYP PFNGLUXVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glColorPointerListIBM
extern PFNGLUXCOLORPOINTERLISTIBMPROC glColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorPointerListIBM
extern PFNGLUXSECONDARYCOLORPOINTERLISTIBMPROC glSecondaryColorPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerListIBM
extern PFNGLUXEDGEFLAGPOINTERLISTIBMPROC glEdgeFlagPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glFogCoordPointerListIBM
extern PFNGLUXFOGCOORDPOINTERLISTIBMPROC glFogCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glIndexPointerListIBM
extern PFNGLUXINDEXPOINTERLISTIBMPROC glIndexPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glNormalPointerListIBM
extern PFNGLUXNORMALPOINTERLISTIBMPROC glNormalPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerListIBM
extern PFNGLUXTEXCOORDPOINTERLISTIBMPROC glTexCoordPointerListIBM;
#endif
#ifndef __GLUX__GLFCT_glVertexPointerListIBM
extern PFNGLUXVERTEXPOINTERLISTIBMPROC glVertexPointerListIBM;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
