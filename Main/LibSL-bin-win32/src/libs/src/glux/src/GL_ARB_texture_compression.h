
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:25 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_texture_compression__
#define __GLUX_GL_ARB_texture_compression__

GLUX_NEW_PLUGIN(GL_ARB_texture_compression);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPRESSED_ALPHA_ARB
#  define GL_COMPRESSED_ALPHA_ARB 0x84E9
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ARB
#  define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ALPHA_ARB
#  define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#endif
#ifndef GL_COMPRESSED_INTENSITY_ARB
#  define GL_COMPRESSED_INTENSITY_ARB 0x84EC
#endif
#ifndef GL_COMPRESSED_RGB_ARB
#  define GL_COMPRESSED_RGB_ARB 0x84ED
#endif
#ifndef GL_COMPRESSED_RGBA_ARB
#  define GL_COMPRESSED_RGBA_ARB 0x84EE
#endif
#ifndef GL_TEXTURE_COMPRESSION_HINT_ARB
#  define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
#endif
#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
#  define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#endif
#ifndef GL_TEXTURE_COMPRESSED_ARB
#  define GL_TEXTURE_COMPRESSED_ARB 0x86A1
#endif
#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#endif
#ifndef GL_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC glCompressedTexImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC glCompressedTexImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC glCompressedTexImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC glCompressedTexSubImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC glCompressedTexSubImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC glCompressedTexSubImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
extern PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC glGetCompressedTexImageARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:40 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_texture_compression__
#define __GLUX_GL_ARB_texture_compression__

GLUX_NEW_PLUGIN(GL_ARB_texture_compression);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPRESSED_ALPHA_ARB
#  define GL_COMPRESSED_ALPHA_ARB 0x84E9
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ARB
#  define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ALPHA_ARB
#  define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#endif
#ifndef GL_COMPRESSED_INTENSITY_ARB
#  define GL_COMPRESSED_INTENSITY_ARB 0x84EC
#endif
#ifndef GL_COMPRESSED_RGB_ARB
#  define GL_COMPRESSED_RGB_ARB 0x84ED
#endif
#ifndef GL_COMPRESSED_RGBA_ARB
#  define GL_COMPRESSED_RGBA_ARB 0x84EE
#endif
#ifndef GL_TEXTURE_COMPRESSION_HINT_ARB
#  define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
#endif
#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
#  define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#endif
#ifndef GL_TEXTURE_COMPRESSED_ARB
#  define GL_TEXTURE_COMPRESSED_ARB 0x86A1
#endif
#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#endif
#ifndef GL_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC glCompressedTexImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC glCompressedTexImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC glCompressedTexImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC glCompressedTexSubImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC glCompressedTexSubImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC glCompressedTexSubImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
extern PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC glGetCompressedTexImageARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:53 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_texture_compression__
#define __GLUX_GL_ARB_texture_compression__

GLUX_NEW_PLUGIN(GL_ARB_texture_compression);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPRESSED_ALPHA_ARB
#  define GL_COMPRESSED_ALPHA_ARB 0x84E9
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ARB
#  define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ALPHA_ARB
#  define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#endif
#ifndef GL_COMPRESSED_INTENSITY_ARB
#  define GL_COMPRESSED_INTENSITY_ARB 0x84EC
#endif
#ifndef GL_COMPRESSED_RGB_ARB
#  define GL_COMPRESSED_RGB_ARB 0x84ED
#endif
#ifndef GL_COMPRESSED_RGBA_ARB
#  define GL_COMPRESSED_RGBA_ARB 0x84EE
#endif
#ifndef GL_TEXTURE_COMPRESSION_HINT_ARB
#  define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
#endif
#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
#  define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#endif
#ifndef GL_TEXTURE_COMPRESSED_ARB
#  define GL_TEXTURE_COMPRESSED_ARB 0x86A1
#endif
#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#endif
#ifndef GL_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC glCompressedTexImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC glCompressedTexImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC glCompressedTexImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC glCompressedTexSubImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC glCompressedTexSubImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC glCompressedTexSubImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
extern PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC glGetCompressedTexImageARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:13 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_texture_compression__
#define __GLUX_GL_ARB_texture_compression__

GLUX_NEW_PLUGIN(GL_ARB_texture_compression);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPRESSED_ALPHA_ARB
#  define GL_COMPRESSED_ALPHA_ARB 0x84E9
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ARB
#  define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ALPHA_ARB
#  define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#endif
#ifndef GL_COMPRESSED_INTENSITY_ARB
#  define GL_COMPRESSED_INTENSITY_ARB 0x84EC
#endif
#ifndef GL_COMPRESSED_RGB_ARB
#  define GL_COMPRESSED_RGB_ARB 0x84ED
#endif
#ifndef GL_COMPRESSED_RGBA_ARB
#  define GL_COMPRESSED_RGBA_ARB 0x84EE
#endif
#ifndef GL_TEXTURE_COMPRESSION_HINT_ARB
#  define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
#endif
#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
#  define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#endif
#ifndef GL_TEXTURE_COMPRESSED_ARB
#  define GL_TEXTURE_COMPRESSED_ARB 0x86A1
#endif
#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#endif
#ifndef GL_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC glCompressedTexImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC glCompressedTexImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC glCompressedTexImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC glCompressedTexSubImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC glCompressedTexSubImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC glCompressedTexSubImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
extern PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC glGetCompressedTexImageARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:28 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_texture_compression__
#define __GLUX_GL_ARB_texture_compression__

GLUX_NEW_PLUGIN(GL_ARB_texture_compression);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPRESSED_ALPHA_ARB
#  define GL_COMPRESSED_ALPHA_ARB 0x84E9
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ARB
#  define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ALPHA_ARB
#  define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#endif
#ifndef GL_COMPRESSED_INTENSITY_ARB
#  define GL_COMPRESSED_INTENSITY_ARB 0x84EC
#endif
#ifndef GL_COMPRESSED_RGB_ARB
#  define GL_COMPRESSED_RGB_ARB 0x84ED
#endif
#ifndef GL_COMPRESSED_RGBA_ARB
#  define GL_COMPRESSED_RGBA_ARB 0x84EE
#endif
#ifndef GL_TEXTURE_COMPRESSION_HINT_ARB
#  define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
#endif
#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
#  define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#endif
#ifndef GL_TEXTURE_COMPRESSED_ARB
#  define GL_TEXTURE_COMPRESSED_ARB 0x86A1
#endif
#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#endif
#ifndef GL_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC glCompressedTexImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC glCompressedTexImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC glCompressedTexImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC glCompressedTexSubImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC glCompressedTexSubImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC glCompressedTexSubImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
extern PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC glGetCompressedTexImageARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:32 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_texture_compression__
#define __GLUX_GL_ARB_texture_compression__

GLUX_NEW_PLUGIN(GL_ARB_texture_compression);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPRESSED_ALPHA_ARB
#  define GL_COMPRESSED_ALPHA_ARB 0x84E9
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ARB
#  define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ALPHA_ARB
#  define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#endif
#ifndef GL_COMPRESSED_INTENSITY_ARB
#  define GL_COMPRESSED_INTENSITY_ARB 0x84EC
#endif
#ifndef GL_COMPRESSED_RGB_ARB
#  define GL_COMPRESSED_RGB_ARB 0x84ED
#endif
#ifndef GL_COMPRESSED_RGBA_ARB
#  define GL_COMPRESSED_RGBA_ARB 0x84EE
#endif
#ifndef GL_TEXTURE_COMPRESSION_HINT_ARB
#  define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
#endif
#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
#  define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#endif
#ifndef GL_TEXTURE_COMPRESSED_ARB
#  define GL_TEXTURE_COMPRESSED_ARB 0x86A1
#endif
#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#endif
#ifndef GL_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC glCompressedTexImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC glCompressedTexImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC glCompressedTexImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC glCompressedTexSubImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC glCompressedTexSubImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC glCompressedTexSubImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
extern PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC glGetCompressedTexImageARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:53 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_texture_compression__
#define __GLUX_GL_ARB_texture_compression__

GLUX_NEW_PLUGIN(GL_ARB_texture_compression);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPRESSED_ALPHA_ARB
#  define GL_COMPRESSED_ALPHA_ARB 0x84E9
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ARB
#  define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ALPHA_ARB
#  define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#endif
#ifndef GL_COMPRESSED_INTENSITY_ARB
#  define GL_COMPRESSED_INTENSITY_ARB 0x84EC
#endif
#ifndef GL_COMPRESSED_RGB_ARB
#  define GL_COMPRESSED_RGB_ARB 0x84ED
#endif
#ifndef GL_COMPRESSED_RGBA_ARB
#  define GL_COMPRESSED_RGBA_ARB 0x84EE
#endif
#ifndef GL_TEXTURE_COMPRESSION_HINT_ARB
#  define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
#endif
#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
#  define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#endif
#ifndef GL_TEXTURE_COMPRESSED_ARB
#  define GL_TEXTURE_COMPRESSED_ARB 0x86A1
#endif
#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#endif
#ifndef GL_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC glCompressedTexImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC glCompressedTexImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC glCompressedTexImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC glCompressedTexSubImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC glCompressedTexSubImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC glCompressedTexSubImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
extern PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC glGetCompressedTexImageARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:27:59 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_texture_compression__
#define __GLUX_GL_ARB_texture_compression__

GLUX_NEW_PLUGIN(GL_ARB_texture_compression);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPRESSED_ALPHA_ARB
#  define GL_COMPRESSED_ALPHA_ARB 0x84E9
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ARB
#  define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ALPHA_ARB
#  define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#endif
#ifndef GL_COMPRESSED_INTENSITY_ARB
#  define GL_COMPRESSED_INTENSITY_ARB 0x84EC
#endif
#ifndef GL_COMPRESSED_RGB_ARB
#  define GL_COMPRESSED_RGB_ARB 0x84ED
#endif
#ifndef GL_COMPRESSED_RGBA_ARB
#  define GL_COMPRESSED_RGBA_ARB 0x84EE
#endif
#ifndef GL_TEXTURE_COMPRESSION_HINT_ARB
#  define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
#endif
#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
#  define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#endif
#ifndef GL_TEXTURE_COMPRESSED_ARB
#  define GL_TEXTURE_COMPRESSED_ARB 0x86A1
#endif
#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#endif
#ifndef GL_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC glCompressedTexImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC glCompressedTexImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC glCompressedTexImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC glCompressedTexSubImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC glCompressedTexSubImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC glCompressedTexSubImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
extern PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC glGetCompressedTexImageARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:16:56 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_texture_compression__
#define __GLUX_GL_ARB_texture_compression__

GLUX_NEW_PLUGIN(GL_ARB_texture_compression);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPRESSED_ALPHA_ARB
#  define GL_COMPRESSED_ALPHA_ARB 0x84E9
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ARB
#  define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ALPHA_ARB
#  define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#endif
#ifndef GL_COMPRESSED_INTENSITY_ARB
#  define GL_COMPRESSED_INTENSITY_ARB 0x84EC
#endif
#ifndef GL_COMPRESSED_RGB_ARB
#  define GL_COMPRESSED_RGB_ARB 0x84ED
#endif
#ifndef GL_COMPRESSED_RGBA_ARB
#  define GL_COMPRESSED_RGBA_ARB 0x84EE
#endif
#ifndef GL_TEXTURE_COMPRESSION_HINT_ARB
#  define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
#endif
#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
#  define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#endif
#ifndef GL_TEXTURE_COMPRESSED_ARB
#  define GL_TEXTURE_COMPRESSED_ARB 0x86A1
#endif
#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#endif
#ifndef GL_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC glCompressedTexImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC glCompressedTexImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC glCompressedTexImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC glCompressedTexSubImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC glCompressedTexSubImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC glCompressedTexSubImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
extern PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC glGetCompressedTexImageARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_texture_compression__
#define __GLUX_GL_ARB_texture_compression__

GLUX_NEW_PLUGIN(GL_ARB_texture_compression);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPRESSED_ALPHA_ARB
#  define GL_COMPRESSED_ALPHA_ARB 0x84E9
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ARB
#  define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ALPHA_ARB
#  define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#endif
#ifndef GL_COMPRESSED_INTENSITY_ARB
#  define GL_COMPRESSED_INTENSITY_ARB 0x84EC
#endif
#ifndef GL_COMPRESSED_RGB_ARB
#  define GL_COMPRESSED_RGB_ARB 0x84ED
#endif
#ifndef GL_COMPRESSED_RGBA_ARB
#  define GL_COMPRESSED_RGBA_ARB 0x84EE
#endif
#ifndef GL_TEXTURE_COMPRESSION_HINT_ARB
#  define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
#endif
#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
#  define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#endif
#ifndef GL_TEXTURE_COMPRESSED_ARB
#  define GL_TEXTURE_COMPRESSED_ARB 0x86A1
#endif
#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#endif
#ifndef GL_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC glCompressedTexImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC glCompressedTexImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC glCompressedTexImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC glCompressedTexSubImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC glCompressedTexSubImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC glCompressedTexSubImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
extern PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC glGetCompressedTexImageARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:19 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_texture_compression__
#define __GLUX_GL_ARB_texture_compression__

GLUX_NEW_PLUGIN(GL_ARB_texture_compression);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPRESSED_ALPHA_ARB
#  define GL_COMPRESSED_ALPHA_ARB 0x84E9
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ARB
#  define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ALPHA_ARB
#  define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#endif
#ifndef GL_COMPRESSED_INTENSITY_ARB
#  define GL_COMPRESSED_INTENSITY_ARB 0x84EC
#endif
#ifndef GL_COMPRESSED_RGB_ARB
#  define GL_COMPRESSED_RGB_ARB 0x84ED
#endif
#ifndef GL_COMPRESSED_RGBA_ARB
#  define GL_COMPRESSED_RGBA_ARB 0x84EE
#endif
#ifndef GL_TEXTURE_COMPRESSION_HINT_ARB
#  define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
#endif
#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
#  define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#endif
#ifndef GL_TEXTURE_COMPRESSED_ARB
#  define GL_TEXTURE_COMPRESSED_ARB 0x86A1
#endif
#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#endif
#ifndef GL_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC glCompressedTexImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC glCompressedTexImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC glCompressedTexImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC glCompressedTexSubImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC glCompressedTexSubImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC glCompressedTexSubImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
extern PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC glGetCompressedTexImageARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:00 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_texture_compression__
#define __GLUX_GL_ARB_texture_compression__

GLUX_NEW_PLUGIN(GL_ARB_texture_compression);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPRESSED_ALPHA_ARB
#  define GL_COMPRESSED_ALPHA_ARB 0x84E9
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ARB
#  define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ALPHA_ARB
#  define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#endif
#ifndef GL_COMPRESSED_INTENSITY_ARB
#  define GL_COMPRESSED_INTENSITY_ARB 0x84EC
#endif
#ifndef GL_COMPRESSED_RGB_ARB
#  define GL_COMPRESSED_RGB_ARB 0x84ED
#endif
#ifndef GL_COMPRESSED_RGBA_ARB
#  define GL_COMPRESSED_RGBA_ARB 0x84EE
#endif
#ifndef GL_TEXTURE_COMPRESSION_HINT_ARB
#  define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
#endif
#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
#  define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#endif
#ifndef GL_TEXTURE_COMPRESSED_ARB
#  define GL_TEXTURE_COMPRESSED_ARB 0x86A1
#endif
#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#endif
#ifndef GL_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC glCompressedTexImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC glCompressedTexImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC glCompressedTexImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC glCompressedTexSubImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC glCompressedTexSubImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC glCompressedTexSubImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
extern PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC glGetCompressedTexImageARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:08 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_texture_compression__
#define __GLUX_GL_ARB_texture_compression__

GLUX_NEW_PLUGIN(GL_ARB_texture_compression);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPRESSED_ALPHA_ARB
#  define GL_COMPRESSED_ALPHA_ARB 0x84E9
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ARB
#  define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ALPHA_ARB
#  define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#endif
#ifndef GL_COMPRESSED_INTENSITY_ARB
#  define GL_COMPRESSED_INTENSITY_ARB 0x84EC
#endif
#ifndef GL_COMPRESSED_RGB_ARB
#  define GL_COMPRESSED_RGB_ARB 0x84ED
#endif
#ifndef GL_COMPRESSED_RGBA_ARB
#  define GL_COMPRESSED_RGBA_ARB 0x84EE
#endif
#ifndef GL_TEXTURE_COMPRESSION_HINT_ARB
#  define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
#endif
#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
#  define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#endif
#ifndef GL_TEXTURE_COMPRESSED_ARB
#  define GL_TEXTURE_COMPRESSED_ARB 0x86A1
#endif
#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#endif
#ifndef GL_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC glCompressedTexImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC glCompressedTexImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC glCompressedTexImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC glCompressedTexSubImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC glCompressedTexSubImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC glCompressedTexSubImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
extern PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC glGetCompressedTexImageARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:20 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_texture_compression__
#define __GLUX_GL_ARB_texture_compression__

GLUX_NEW_PLUGIN(GL_ARB_texture_compression);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPRESSED_ALPHA_ARB
#  define GL_COMPRESSED_ALPHA_ARB 0x84E9
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ARB
#  define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ALPHA_ARB
#  define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#endif
#ifndef GL_COMPRESSED_INTENSITY_ARB
#  define GL_COMPRESSED_INTENSITY_ARB 0x84EC
#endif
#ifndef GL_COMPRESSED_RGB_ARB
#  define GL_COMPRESSED_RGB_ARB 0x84ED
#endif
#ifndef GL_COMPRESSED_RGBA_ARB
#  define GL_COMPRESSED_RGBA_ARB 0x84EE
#endif
#ifndef GL_TEXTURE_COMPRESSION_HINT_ARB
#  define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
#endif
#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
#  define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#endif
#ifndef GL_TEXTURE_COMPRESSED_ARB
#  define GL_TEXTURE_COMPRESSED_ARB 0x86A1
#endif
#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#endif
#ifndef GL_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC glCompressedTexImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC glCompressedTexImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC glCompressedTexImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC glCompressedTexSubImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC glCompressedTexSubImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC glCompressedTexSubImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
extern PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC glGetCompressedTexImageARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:51:59 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_texture_compression__
#define __GLUX_GL_ARB_texture_compression__

GLUX_NEW_PLUGIN(GL_ARB_texture_compression);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPRESSED_ALPHA_ARB
#  define GL_COMPRESSED_ALPHA_ARB 0x84E9
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ARB
#  define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ALPHA_ARB
#  define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#endif
#ifndef GL_COMPRESSED_INTENSITY_ARB
#  define GL_COMPRESSED_INTENSITY_ARB 0x84EC
#endif
#ifndef GL_COMPRESSED_RGB_ARB
#  define GL_COMPRESSED_RGB_ARB 0x84ED
#endif
#ifndef GL_COMPRESSED_RGBA_ARB
#  define GL_COMPRESSED_RGBA_ARB 0x84EE
#endif
#ifndef GL_TEXTURE_COMPRESSION_HINT_ARB
#  define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
#endif
#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
#  define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#endif
#ifndef GL_TEXTURE_COMPRESSED_ARB
#  define GL_TEXTURE_COMPRESSED_ARB 0x86A1
#endif
#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#endif
#ifndef GL_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC glCompressedTexImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC glCompressedTexImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC glCompressedTexImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC glCompressedTexSubImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC glCompressedTexSubImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC glCompressedTexSubImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
extern PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC glGetCompressedTexImageARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_texture_compression__
#define __GLUX_GL_ARB_texture_compression__

GLUX_NEW_PLUGIN(GL_ARB_texture_compression);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPRESSED_ALPHA_ARB
#  define GL_COMPRESSED_ALPHA_ARB 0x84E9
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ARB
#  define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ALPHA_ARB
#  define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#endif
#ifndef GL_COMPRESSED_INTENSITY_ARB
#  define GL_COMPRESSED_INTENSITY_ARB 0x84EC
#endif
#ifndef GL_COMPRESSED_RGB_ARB
#  define GL_COMPRESSED_RGB_ARB 0x84ED
#endif
#ifndef GL_COMPRESSED_RGBA_ARB
#  define GL_COMPRESSED_RGBA_ARB 0x84EE
#endif
#ifndef GL_TEXTURE_COMPRESSION_HINT_ARB
#  define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
#endif
#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
#  define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#endif
#ifndef GL_TEXTURE_COMPRESSED_ARB
#  define GL_TEXTURE_COMPRESSED_ARB 0x86A1
#endif
#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#endif
#ifndef GL_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC glCompressedTexImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC glCompressedTexImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC glCompressedTexImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC glCompressedTexSubImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC glCompressedTexSubImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC glCompressedTexSubImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
extern PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC glGetCompressedTexImageARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:03 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_texture_compression__
#define __GLUX_GL_ARB_texture_compression__

GLUX_NEW_PLUGIN(GL_ARB_texture_compression);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPRESSED_ALPHA_ARB
#  define GL_COMPRESSED_ALPHA_ARB 0x84E9
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ARB
#  define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ALPHA_ARB
#  define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#endif
#ifndef GL_COMPRESSED_INTENSITY_ARB
#  define GL_COMPRESSED_INTENSITY_ARB 0x84EC
#endif
#ifndef GL_COMPRESSED_RGB_ARB
#  define GL_COMPRESSED_RGB_ARB 0x84ED
#endif
#ifndef GL_COMPRESSED_RGBA_ARB
#  define GL_COMPRESSED_RGBA_ARB 0x84EE
#endif
#ifndef GL_TEXTURE_COMPRESSION_HINT_ARB
#  define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
#endif
#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
#  define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#endif
#ifndef GL_TEXTURE_COMPRESSED_ARB
#  define GL_TEXTURE_COMPRESSED_ARB 0x86A1
#endif
#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#endif
#ifndef GL_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC glCompressedTexImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC glCompressedTexImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC glCompressedTexImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC glCompressedTexSubImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC glCompressedTexSubImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC glCompressedTexSubImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
extern PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC glGetCompressedTexImageARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:23 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_texture_compression__
#define __GLUX_GL_ARB_texture_compression__

GLUX_NEW_PLUGIN(GL_ARB_texture_compression);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPRESSED_ALPHA_ARB
#  define GL_COMPRESSED_ALPHA_ARB 0x84E9
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ARB
#  define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ALPHA_ARB
#  define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#endif
#ifndef GL_COMPRESSED_INTENSITY_ARB
#  define GL_COMPRESSED_INTENSITY_ARB 0x84EC
#endif
#ifndef GL_COMPRESSED_RGB_ARB
#  define GL_COMPRESSED_RGB_ARB 0x84ED
#endif
#ifndef GL_COMPRESSED_RGBA_ARB
#  define GL_COMPRESSED_RGBA_ARB 0x84EE
#endif
#ifndef GL_TEXTURE_COMPRESSION_HINT_ARB
#  define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
#endif
#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
#  define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#endif
#ifndef GL_TEXTURE_COMPRESSED_ARB
#  define GL_TEXTURE_COMPRESSED_ARB 0x86A1
#endif
#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#endif
#ifndef GL_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC glCompressedTexImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC glCompressedTexImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC glCompressedTexImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC glCompressedTexSubImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC glCompressedTexSubImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC glCompressedTexSubImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
extern PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC glGetCompressedTexImageARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_texture_compression__
#define __GLUX_GL_ARB_texture_compression__

GLUX_NEW_PLUGIN(GL_ARB_texture_compression);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPRESSED_ALPHA_ARB
#  define GL_COMPRESSED_ALPHA_ARB 0x84E9
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ARB
#  define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ALPHA_ARB
#  define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#endif
#ifndef GL_COMPRESSED_INTENSITY_ARB
#  define GL_COMPRESSED_INTENSITY_ARB 0x84EC
#endif
#ifndef GL_COMPRESSED_RGB_ARB
#  define GL_COMPRESSED_RGB_ARB 0x84ED
#endif
#ifndef GL_COMPRESSED_RGBA_ARB
#  define GL_COMPRESSED_RGBA_ARB 0x84EE
#endif
#ifndef GL_TEXTURE_COMPRESSION_HINT_ARB
#  define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
#endif
#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
#  define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#endif
#ifndef GL_TEXTURE_COMPRESSED_ARB
#  define GL_TEXTURE_COMPRESSED_ARB 0x86A1
#endif
#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#endif
#ifndef GL_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC glCompressedTexImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC glCompressedTexImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC glCompressedTexImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC glCompressedTexSubImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC glCompressedTexSubImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC glCompressedTexSubImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
extern PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC glGetCompressedTexImageARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:41:57 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_texture_compression__
#define __GLUX_GL_ARB_texture_compression__

GLUX_NEW_PLUGIN(GL_ARB_texture_compression);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPRESSED_ALPHA_ARB
#  define GL_COMPRESSED_ALPHA_ARB 0x84E9
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ARB
#  define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ALPHA_ARB
#  define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#endif
#ifndef GL_COMPRESSED_INTENSITY_ARB
#  define GL_COMPRESSED_INTENSITY_ARB 0x84EC
#endif
#ifndef GL_COMPRESSED_RGB_ARB
#  define GL_COMPRESSED_RGB_ARB 0x84ED
#endif
#ifndef GL_COMPRESSED_RGBA_ARB
#  define GL_COMPRESSED_RGBA_ARB 0x84EE
#endif
#ifndef GL_TEXTURE_COMPRESSION_HINT_ARB
#  define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
#endif
#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
#  define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#endif
#ifndef GL_TEXTURE_COMPRESSED_ARB
#  define GL_TEXTURE_COMPRESSED_ARB 0x86A1
#endif
#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#endif
#ifndef GL_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC glCompressedTexImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC glCompressedTexImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC glCompressedTexImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC glCompressedTexSubImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC glCompressedTexSubImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC glCompressedTexSubImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
extern PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC glGetCompressedTexImageARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:38 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_texture_compression__
#define __GLUX_GL_ARB_texture_compression__

GLUX_NEW_PLUGIN(GL_ARB_texture_compression);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPRESSED_ALPHA_ARB
#  define GL_COMPRESSED_ALPHA_ARB 0x84E9
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ARB
#  define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ALPHA_ARB
#  define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#endif
#ifndef GL_COMPRESSED_INTENSITY_ARB
#  define GL_COMPRESSED_INTENSITY_ARB 0x84EC
#endif
#ifndef GL_COMPRESSED_RGB_ARB
#  define GL_COMPRESSED_RGB_ARB 0x84ED
#endif
#ifndef GL_COMPRESSED_RGBA_ARB
#  define GL_COMPRESSED_RGBA_ARB 0x84EE
#endif
#ifndef GL_TEXTURE_COMPRESSION_HINT_ARB
#  define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
#endif
#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
#  define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#endif
#ifndef GL_TEXTURE_COMPRESSED_ARB
#  define GL_TEXTURE_COMPRESSED_ARB 0x86A1
#endif
#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#endif
#ifndef GL_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC glCompressedTexImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC glCompressedTexImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC glCompressedTexImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC glCompressedTexSubImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC glCompressedTexSubImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC glCompressedTexSubImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
extern PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC glGetCompressedTexImageARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:09:57 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_texture_compression__
#define __GLUX_GL_ARB_texture_compression__

GLUX_NEW_PLUGIN(GL_ARB_texture_compression);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPRESSED_ALPHA_ARB
#  define GL_COMPRESSED_ALPHA_ARB 0x84E9
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ARB
#  define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ALPHA_ARB
#  define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#endif
#ifndef GL_COMPRESSED_INTENSITY_ARB
#  define GL_COMPRESSED_INTENSITY_ARB 0x84EC
#endif
#ifndef GL_COMPRESSED_RGB_ARB
#  define GL_COMPRESSED_RGB_ARB 0x84ED
#endif
#ifndef GL_COMPRESSED_RGBA_ARB
#  define GL_COMPRESSED_RGBA_ARB 0x84EE
#endif
#ifndef GL_TEXTURE_COMPRESSION_HINT_ARB
#  define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
#endif
#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
#  define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#endif
#ifndef GL_TEXTURE_COMPRESSED_ARB
#  define GL_TEXTURE_COMPRESSED_ARB 0x86A1
#endif
#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#endif
#ifndef GL_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC glCompressedTexImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC glCompressedTexImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC glCompressedTexImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC glCompressedTexSubImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC glCompressedTexSubImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC glCompressedTexSubImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
extern PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC glGetCompressedTexImageARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:19:58 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_texture_compression__
#define __GLUX_GL_ARB_texture_compression__

GLUX_NEW_PLUGIN(GL_ARB_texture_compression);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPRESSED_ALPHA_ARB
#  define GL_COMPRESSED_ALPHA_ARB 0x84E9
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ARB
#  define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ALPHA_ARB
#  define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#endif
#ifndef GL_COMPRESSED_INTENSITY_ARB
#  define GL_COMPRESSED_INTENSITY_ARB 0x84EC
#endif
#ifndef GL_COMPRESSED_RGB_ARB
#  define GL_COMPRESSED_RGB_ARB 0x84ED
#endif
#ifndef GL_COMPRESSED_RGBA_ARB
#  define GL_COMPRESSED_RGBA_ARB 0x84EE
#endif
#ifndef GL_TEXTURE_COMPRESSION_HINT_ARB
#  define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
#endif
#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
#  define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#endif
#ifndef GL_TEXTURE_COMPRESSED_ARB
#  define GL_TEXTURE_COMPRESSED_ARB 0x86A1
#endif
#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#endif
#ifndef GL_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC glCompressedTexImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC glCompressedTexImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC glCompressedTexImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC glCompressedTexSubImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC glCompressedTexSubImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC glCompressedTexSubImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
extern PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC glGetCompressedTexImageARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:42:56 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_texture_compression__
#define __GLUX_GL_ARB_texture_compression__

GLUX_NEW_PLUGIN(GL_ARB_texture_compression)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPRESSED_ALPHA_ARB
#  define GL_COMPRESSED_ALPHA_ARB 0x84E9
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ARB
#  define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
#endif
#ifndef GL_COMPRESSED_LUMINANCE_ALPHA_ARB
#  define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#endif
#ifndef GL_COMPRESSED_INTENSITY_ARB
#  define GL_COMPRESSED_INTENSITY_ARB 0x84EC
#endif
#ifndef GL_COMPRESSED_RGB_ARB
#  define GL_COMPRESSED_RGB_ARB 0x84ED
#endif
#ifndef GL_COMPRESSED_RGBA_ARB
#  define GL_COMPRESSED_RGBA_ARB 0x84EE
#endif
#ifndef GL_TEXTURE_COMPRESSION_HINT_ARB
#  define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
#endif
#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
#  define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#endif
#ifndef GL_TEXTURE_COMPRESSED_ARB
#  define GL_TEXTURE_COMPRESSED_ARB 0x86A1
#endif
#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#endif
#ifndef GL_COMPRESSED_TEXTURE_FORMATS_ARB
#  define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
typedef void (APIENTRYP PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glCompressedTexImage3DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE3DARBPROC glCompressedTexImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage2DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE2DARBPROC glCompressedTexImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexImage1DARB
extern PFNGLUXCOMPRESSEDTEXIMAGE1DARBPROC glCompressedTexImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage3DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE3DARBPROC glCompressedTexSubImage3DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage2DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE2DARBPROC glCompressedTexSubImage2DARB;
#endif
#ifndef __GLUX__GLFCT_glCompressedTexSubImage1DARB
extern PFNGLUXCOMPRESSEDTEXSUBIMAGE1DARBPROC glCompressedTexSubImage1DARB;
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTexImageARB
extern PFNGLUXGETCOMPRESSEDTEXIMAGEARBPROC glGetCompressedTexImageARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
