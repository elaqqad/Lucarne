
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:24 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_SGIX_pbuffer__
#define __GLUX_GLX_SGIX_pbuffer__

GLUX_NEW_PLUGIN(GLX_SGIX_pbuffer);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_PBUFFER_BIT_SGIX
#  define GLX_PBUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BUFFER_CLOBBER_MASK_SGIX
#  define GLX_BUFFER_CLOBBER_MASK_SGIX 0x08000000
#endif
#ifndef GLX_FRONT_LEFT_BUFFER_BIT_SGIX
#  define GLX_FRONT_LEFT_BUFFER_BIT_SGIX 0x00000001
#endif
#ifndef GLX_FRONT_RIGHT_BUFFER_BIT_SGIX
#  define GLX_FRONT_RIGHT_BUFFER_BIT_SGIX 0x00000002
#endif
#ifndef GLX_BACK_LEFT_BUFFER_BIT_SGIX
#  define GLX_BACK_LEFT_BUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BACK_RIGHT_BUFFER_BIT_SGIX
#  define GLX_BACK_RIGHT_BUFFER_BIT_SGIX 0x00000008
#endif
#ifndef GLX_AUX_BUFFERS_BIT_SGIX
#  define GLX_AUX_BUFFERS_BIT_SGIX 0x00000010
#endif
#ifndef GLX_DEPTH_BUFFER_BIT_SGIX
#  define GLX_DEPTH_BUFFER_BIT_SGIX 0x00000020
#endif
#ifndef GLX_STENCIL_BUFFER_BIT_SGIX
#  define GLX_STENCIL_BUFFER_BIT_SGIX 0x00000040
#endif
#ifndef GLX_ACCUM_BUFFER_BIT_SGIX
#  define GLX_ACCUM_BUFFER_BIT_SGIX 0x00000080
#endif
#ifndef GLX_SAMPLE_BUFFERS_BIT_SGIX
#  define GLX_SAMPLE_BUFFERS_BIT_SGIX 0x00000100
#endif
#ifndef GLX_MAX_PBUFFER_WIDTH_SGIX
#  define GLX_MAX_PBUFFER_WIDTH_SGIX 0x8016
#endif
#ifndef GLX_MAX_PBUFFER_HEIGHT_SGIX
#  define GLX_MAX_PBUFFER_HEIGHT_SGIX 0x8017
#endif
#ifndef GLX_MAX_PBUFFER_PIXELS_SGIX
#  define GLX_MAX_PBUFFER_PIXELS_SGIX 0x8018
#endif
#ifndef GLX_OPTIMAL_PBUFFER_WIDTH_SGIX
#  define GLX_OPTIMAL_PBUFFER_WIDTH_SGIX 0x8019
#endif
#ifndef GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX
#  define GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX 0x801A
#endif
#ifndef GLX_PRESERVED_CONTENTS_SGIX
#  define GLX_PRESERVED_CONTENTS_SGIX 0x801B
#endif
#ifndef GLX_LARGEST_PBUFFER_SGIX
#  define GLX_LARGEST_PBUFFER_SGIX 0x801C
#endif
#ifndef GLX_WIDTH_SGIX
#  define GLX_WIDTH_SGIX 0x801D
#endif
#ifndef GLX_HEIGHT_SGIX
#  define GLX_HEIGHT_SGIX 0x801E
#endif
#ifndef GLX_EVENT_MASK_SGIX
#  define GLX_EVENT_MASK_SGIX 0x801F
#endif
#ifndef GLX_DAMAGED_SGIX
#  define GLX_DAMAGED_SGIX 0x8020
#endif
#ifndef GLX_SAVED_SGIX
#  define GLX_SAVED_SGIX 0x8021
#endif
#ifndef GLX_WINDOW_SGIX
#  define GLX_WINDOW_SGIX 0x8022
#endif
#ifndef GLX_PBUFFER_SGIX
#  define GLX_PBUFFER_SGIX 0x8023
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
typedef GLXPbufferSGIX (APIENTRYP PFNXGLUXCREATEGLXPBUFFERSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, unsigned int width, unsigned int height, int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
typedef void (APIENTRYP PFNXGLUXDESTROYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf);
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
typedef int (APIENTRYP PFNXGLUXQUERYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value);
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
typedef void (APIENTRYP PFNXGLUXSELECTEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long mask);
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
typedef void (APIENTRYP PFNXGLUXGETSELECTEDEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long *mask);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
extern PFNXGLUXCREATEGLXPBUFFERSGIXPROC glXCreateGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
extern PFNXGLUXDESTROYGLXPBUFFERSGIXPROC glXDestroyGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
extern PFNXGLUXQUERYGLXPBUFFERSGIXPROC glXQueryGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
extern PFNXGLUXSELECTEVENTSGIXPROC glXSelectEventSGIX;
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
extern PFNXGLUXGETSELECTEDEVENTSGIXPROC glXGetSelectedEventSGIX;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:37 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_SGIX_pbuffer__
#define __GLUX_GLX_SGIX_pbuffer__

GLUX_NEW_PLUGIN(GLX_SGIX_pbuffer);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_PBUFFER_BIT_SGIX
#  define GLX_PBUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BUFFER_CLOBBER_MASK_SGIX
#  define GLX_BUFFER_CLOBBER_MASK_SGIX 0x08000000
#endif
#ifndef GLX_FRONT_LEFT_BUFFER_BIT_SGIX
#  define GLX_FRONT_LEFT_BUFFER_BIT_SGIX 0x00000001
#endif
#ifndef GLX_FRONT_RIGHT_BUFFER_BIT_SGIX
#  define GLX_FRONT_RIGHT_BUFFER_BIT_SGIX 0x00000002
#endif
#ifndef GLX_BACK_LEFT_BUFFER_BIT_SGIX
#  define GLX_BACK_LEFT_BUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BACK_RIGHT_BUFFER_BIT_SGIX
#  define GLX_BACK_RIGHT_BUFFER_BIT_SGIX 0x00000008
#endif
#ifndef GLX_AUX_BUFFERS_BIT_SGIX
#  define GLX_AUX_BUFFERS_BIT_SGIX 0x00000010
#endif
#ifndef GLX_DEPTH_BUFFER_BIT_SGIX
#  define GLX_DEPTH_BUFFER_BIT_SGIX 0x00000020
#endif
#ifndef GLX_STENCIL_BUFFER_BIT_SGIX
#  define GLX_STENCIL_BUFFER_BIT_SGIX 0x00000040
#endif
#ifndef GLX_ACCUM_BUFFER_BIT_SGIX
#  define GLX_ACCUM_BUFFER_BIT_SGIX 0x00000080
#endif
#ifndef GLX_SAMPLE_BUFFERS_BIT_SGIX
#  define GLX_SAMPLE_BUFFERS_BIT_SGIX 0x00000100
#endif
#ifndef GLX_MAX_PBUFFER_WIDTH_SGIX
#  define GLX_MAX_PBUFFER_WIDTH_SGIX 0x8016
#endif
#ifndef GLX_MAX_PBUFFER_HEIGHT_SGIX
#  define GLX_MAX_PBUFFER_HEIGHT_SGIX 0x8017
#endif
#ifndef GLX_MAX_PBUFFER_PIXELS_SGIX
#  define GLX_MAX_PBUFFER_PIXELS_SGIX 0x8018
#endif
#ifndef GLX_OPTIMAL_PBUFFER_WIDTH_SGIX
#  define GLX_OPTIMAL_PBUFFER_WIDTH_SGIX 0x8019
#endif
#ifndef GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX
#  define GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX 0x801A
#endif
#ifndef GLX_PRESERVED_CONTENTS_SGIX
#  define GLX_PRESERVED_CONTENTS_SGIX 0x801B
#endif
#ifndef GLX_LARGEST_PBUFFER_SGIX
#  define GLX_LARGEST_PBUFFER_SGIX 0x801C
#endif
#ifndef GLX_WIDTH_SGIX
#  define GLX_WIDTH_SGIX 0x801D
#endif
#ifndef GLX_HEIGHT_SGIX
#  define GLX_HEIGHT_SGIX 0x801E
#endif
#ifndef GLX_EVENT_MASK_SGIX
#  define GLX_EVENT_MASK_SGIX 0x801F
#endif
#ifndef GLX_DAMAGED_SGIX
#  define GLX_DAMAGED_SGIX 0x8020
#endif
#ifndef GLX_SAVED_SGIX
#  define GLX_SAVED_SGIX 0x8021
#endif
#ifndef GLX_WINDOW_SGIX
#  define GLX_WINDOW_SGIX 0x8022
#endif
#ifndef GLX_PBUFFER_SGIX
#  define GLX_PBUFFER_SGIX 0x8023
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
typedef GLXPbufferSGIX (APIENTRYP PFNXGLUXCREATEGLXPBUFFERSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, unsigned int width, unsigned int height, int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
typedef void (APIENTRYP PFNXGLUXDESTROYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf);
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
typedef int (APIENTRYP PFNXGLUXQUERYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value);
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
typedef void (APIENTRYP PFNXGLUXSELECTEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long mask);
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
typedef void (APIENTRYP PFNXGLUXGETSELECTEDEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long *mask);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
extern PFNXGLUXCREATEGLXPBUFFERSGIXPROC glXCreateGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
extern PFNXGLUXDESTROYGLXPBUFFERSGIXPROC glXDestroyGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
extern PFNXGLUXQUERYGLXPBUFFERSGIXPROC glXQueryGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
extern PFNXGLUXSELECTEVENTSGIXPROC glXSelectEventSGIX;
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
extern PFNXGLUXGETSELECTEDEVENTSGIXPROC glXGetSelectedEventSGIX;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:53 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_SGIX_pbuffer__
#define __GLUX_GLX_SGIX_pbuffer__

GLUX_NEW_PLUGIN(GLX_SGIX_pbuffer);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_PBUFFER_BIT_SGIX
#  define GLX_PBUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BUFFER_CLOBBER_MASK_SGIX
#  define GLX_BUFFER_CLOBBER_MASK_SGIX 0x08000000
#endif
#ifndef GLX_FRONT_LEFT_BUFFER_BIT_SGIX
#  define GLX_FRONT_LEFT_BUFFER_BIT_SGIX 0x00000001
#endif
#ifndef GLX_FRONT_RIGHT_BUFFER_BIT_SGIX
#  define GLX_FRONT_RIGHT_BUFFER_BIT_SGIX 0x00000002
#endif
#ifndef GLX_BACK_LEFT_BUFFER_BIT_SGIX
#  define GLX_BACK_LEFT_BUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BACK_RIGHT_BUFFER_BIT_SGIX
#  define GLX_BACK_RIGHT_BUFFER_BIT_SGIX 0x00000008
#endif
#ifndef GLX_AUX_BUFFERS_BIT_SGIX
#  define GLX_AUX_BUFFERS_BIT_SGIX 0x00000010
#endif
#ifndef GLX_DEPTH_BUFFER_BIT_SGIX
#  define GLX_DEPTH_BUFFER_BIT_SGIX 0x00000020
#endif
#ifndef GLX_STENCIL_BUFFER_BIT_SGIX
#  define GLX_STENCIL_BUFFER_BIT_SGIX 0x00000040
#endif
#ifndef GLX_ACCUM_BUFFER_BIT_SGIX
#  define GLX_ACCUM_BUFFER_BIT_SGIX 0x00000080
#endif
#ifndef GLX_SAMPLE_BUFFERS_BIT_SGIX
#  define GLX_SAMPLE_BUFFERS_BIT_SGIX 0x00000100
#endif
#ifndef GLX_MAX_PBUFFER_WIDTH_SGIX
#  define GLX_MAX_PBUFFER_WIDTH_SGIX 0x8016
#endif
#ifndef GLX_MAX_PBUFFER_HEIGHT_SGIX
#  define GLX_MAX_PBUFFER_HEIGHT_SGIX 0x8017
#endif
#ifndef GLX_MAX_PBUFFER_PIXELS_SGIX
#  define GLX_MAX_PBUFFER_PIXELS_SGIX 0x8018
#endif
#ifndef GLX_OPTIMAL_PBUFFER_WIDTH_SGIX
#  define GLX_OPTIMAL_PBUFFER_WIDTH_SGIX 0x8019
#endif
#ifndef GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX
#  define GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX 0x801A
#endif
#ifndef GLX_PRESERVED_CONTENTS_SGIX
#  define GLX_PRESERVED_CONTENTS_SGIX 0x801B
#endif
#ifndef GLX_LARGEST_PBUFFER_SGIX
#  define GLX_LARGEST_PBUFFER_SGIX 0x801C
#endif
#ifndef GLX_WIDTH_SGIX
#  define GLX_WIDTH_SGIX 0x801D
#endif
#ifndef GLX_HEIGHT_SGIX
#  define GLX_HEIGHT_SGIX 0x801E
#endif
#ifndef GLX_EVENT_MASK_SGIX
#  define GLX_EVENT_MASK_SGIX 0x801F
#endif
#ifndef GLX_DAMAGED_SGIX
#  define GLX_DAMAGED_SGIX 0x8020
#endif
#ifndef GLX_SAVED_SGIX
#  define GLX_SAVED_SGIX 0x8021
#endif
#ifndef GLX_WINDOW_SGIX
#  define GLX_WINDOW_SGIX 0x8022
#endif
#ifndef GLX_PBUFFER_SGIX
#  define GLX_PBUFFER_SGIX 0x8023
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
typedef GLXPbufferSGIX (APIENTRYP PFNXGLUXCREATEGLXPBUFFERSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, unsigned int width, unsigned int height, int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
typedef void (APIENTRYP PFNXGLUXDESTROYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf);
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
typedef int (APIENTRYP PFNXGLUXQUERYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value);
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
typedef void (APIENTRYP PFNXGLUXSELECTEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long mask);
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
typedef void (APIENTRYP PFNXGLUXGETSELECTEDEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long *mask);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
extern PFNXGLUXCREATEGLXPBUFFERSGIXPROC glXCreateGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
extern PFNXGLUXDESTROYGLXPBUFFERSGIXPROC glXDestroyGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
extern PFNXGLUXQUERYGLXPBUFFERSGIXPROC glXQueryGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
extern PFNXGLUXSELECTEVENTSGIXPROC glXSelectEventSGIX;
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
extern PFNXGLUXGETSELECTEDEVENTSGIXPROC glXGetSelectedEventSGIX;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:12 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_SGIX_pbuffer__
#define __GLUX_GLX_SGIX_pbuffer__

GLUX_NEW_PLUGIN(GLX_SGIX_pbuffer);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_PBUFFER_BIT_SGIX
#  define GLX_PBUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BUFFER_CLOBBER_MASK_SGIX
#  define GLX_BUFFER_CLOBBER_MASK_SGIX 0x08000000
#endif
#ifndef GLX_FRONT_LEFT_BUFFER_BIT_SGIX
#  define GLX_FRONT_LEFT_BUFFER_BIT_SGIX 0x00000001
#endif
#ifndef GLX_FRONT_RIGHT_BUFFER_BIT_SGIX
#  define GLX_FRONT_RIGHT_BUFFER_BIT_SGIX 0x00000002
#endif
#ifndef GLX_BACK_LEFT_BUFFER_BIT_SGIX
#  define GLX_BACK_LEFT_BUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BACK_RIGHT_BUFFER_BIT_SGIX
#  define GLX_BACK_RIGHT_BUFFER_BIT_SGIX 0x00000008
#endif
#ifndef GLX_AUX_BUFFERS_BIT_SGIX
#  define GLX_AUX_BUFFERS_BIT_SGIX 0x00000010
#endif
#ifndef GLX_DEPTH_BUFFER_BIT_SGIX
#  define GLX_DEPTH_BUFFER_BIT_SGIX 0x00000020
#endif
#ifndef GLX_STENCIL_BUFFER_BIT_SGIX
#  define GLX_STENCIL_BUFFER_BIT_SGIX 0x00000040
#endif
#ifndef GLX_ACCUM_BUFFER_BIT_SGIX
#  define GLX_ACCUM_BUFFER_BIT_SGIX 0x00000080
#endif
#ifndef GLX_SAMPLE_BUFFERS_BIT_SGIX
#  define GLX_SAMPLE_BUFFERS_BIT_SGIX 0x00000100
#endif
#ifndef GLX_MAX_PBUFFER_WIDTH_SGIX
#  define GLX_MAX_PBUFFER_WIDTH_SGIX 0x8016
#endif
#ifndef GLX_MAX_PBUFFER_HEIGHT_SGIX
#  define GLX_MAX_PBUFFER_HEIGHT_SGIX 0x8017
#endif
#ifndef GLX_MAX_PBUFFER_PIXELS_SGIX
#  define GLX_MAX_PBUFFER_PIXELS_SGIX 0x8018
#endif
#ifndef GLX_OPTIMAL_PBUFFER_WIDTH_SGIX
#  define GLX_OPTIMAL_PBUFFER_WIDTH_SGIX 0x8019
#endif
#ifndef GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX
#  define GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX 0x801A
#endif
#ifndef GLX_PRESERVED_CONTENTS_SGIX
#  define GLX_PRESERVED_CONTENTS_SGIX 0x801B
#endif
#ifndef GLX_LARGEST_PBUFFER_SGIX
#  define GLX_LARGEST_PBUFFER_SGIX 0x801C
#endif
#ifndef GLX_WIDTH_SGIX
#  define GLX_WIDTH_SGIX 0x801D
#endif
#ifndef GLX_HEIGHT_SGIX
#  define GLX_HEIGHT_SGIX 0x801E
#endif
#ifndef GLX_EVENT_MASK_SGIX
#  define GLX_EVENT_MASK_SGIX 0x801F
#endif
#ifndef GLX_DAMAGED_SGIX
#  define GLX_DAMAGED_SGIX 0x8020
#endif
#ifndef GLX_SAVED_SGIX
#  define GLX_SAVED_SGIX 0x8021
#endif
#ifndef GLX_WINDOW_SGIX
#  define GLX_WINDOW_SGIX 0x8022
#endif
#ifndef GLX_PBUFFER_SGIX
#  define GLX_PBUFFER_SGIX 0x8023
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
typedef GLXPbufferSGIX (APIENTRYP PFNXGLUXCREATEGLXPBUFFERSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, unsigned int width, unsigned int height, int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
typedef void (APIENTRYP PFNXGLUXDESTROYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf);
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
typedef int (APIENTRYP PFNXGLUXQUERYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value);
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
typedef void (APIENTRYP PFNXGLUXSELECTEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long mask);
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
typedef void (APIENTRYP PFNXGLUXGETSELECTEDEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long *mask);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
extern PFNXGLUXCREATEGLXPBUFFERSGIXPROC glXCreateGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
extern PFNXGLUXDESTROYGLXPBUFFERSGIXPROC glXDestroyGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
extern PFNXGLUXQUERYGLXPBUFFERSGIXPROC glXQueryGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
extern PFNXGLUXSELECTEVENTSGIXPROC glXSelectEventSGIX;
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
extern PFNXGLUXGETSELECTEDEVENTSGIXPROC glXGetSelectedEventSGIX;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:27 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_SGIX_pbuffer__
#define __GLUX_GLX_SGIX_pbuffer__

GLUX_NEW_PLUGIN(GLX_SGIX_pbuffer);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_PBUFFER_BIT_SGIX
#  define GLX_PBUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BUFFER_CLOBBER_MASK_SGIX
#  define GLX_BUFFER_CLOBBER_MASK_SGIX 0x08000000
#endif
#ifndef GLX_FRONT_LEFT_BUFFER_BIT_SGIX
#  define GLX_FRONT_LEFT_BUFFER_BIT_SGIX 0x00000001
#endif
#ifndef GLX_FRONT_RIGHT_BUFFER_BIT_SGIX
#  define GLX_FRONT_RIGHT_BUFFER_BIT_SGIX 0x00000002
#endif
#ifndef GLX_BACK_LEFT_BUFFER_BIT_SGIX
#  define GLX_BACK_LEFT_BUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BACK_RIGHT_BUFFER_BIT_SGIX
#  define GLX_BACK_RIGHT_BUFFER_BIT_SGIX 0x00000008
#endif
#ifndef GLX_AUX_BUFFERS_BIT_SGIX
#  define GLX_AUX_BUFFERS_BIT_SGIX 0x00000010
#endif
#ifndef GLX_DEPTH_BUFFER_BIT_SGIX
#  define GLX_DEPTH_BUFFER_BIT_SGIX 0x00000020
#endif
#ifndef GLX_STENCIL_BUFFER_BIT_SGIX
#  define GLX_STENCIL_BUFFER_BIT_SGIX 0x00000040
#endif
#ifndef GLX_ACCUM_BUFFER_BIT_SGIX
#  define GLX_ACCUM_BUFFER_BIT_SGIX 0x00000080
#endif
#ifndef GLX_SAMPLE_BUFFERS_BIT_SGIX
#  define GLX_SAMPLE_BUFFERS_BIT_SGIX 0x00000100
#endif
#ifndef GLX_MAX_PBUFFER_WIDTH_SGIX
#  define GLX_MAX_PBUFFER_WIDTH_SGIX 0x8016
#endif
#ifndef GLX_MAX_PBUFFER_HEIGHT_SGIX
#  define GLX_MAX_PBUFFER_HEIGHT_SGIX 0x8017
#endif
#ifndef GLX_MAX_PBUFFER_PIXELS_SGIX
#  define GLX_MAX_PBUFFER_PIXELS_SGIX 0x8018
#endif
#ifndef GLX_OPTIMAL_PBUFFER_WIDTH_SGIX
#  define GLX_OPTIMAL_PBUFFER_WIDTH_SGIX 0x8019
#endif
#ifndef GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX
#  define GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX 0x801A
#endif
#ifndef GLX_PRESERVED_CONTENTS_SGIX
#  define GLX_PRESERVED_CONTENTS_SGIX 0x801B
#endif
#ifndef GLX_LARGEST_PBUFFER_SGIX
#  define GLX_LARGEST_PBUFFER_SGIX 0x801C
#endif
#ifndef GLX_WIDTH_SGIX
#  define GLX_WIDTH_SGIX 0x801D
#endif
#ifndef GLX_HEIGHT_SGIX
#  define GLX_HEIGHT_SGIX 0x801E
#endif
#ifndef GLX_EVENT_MASK_SGIX
#  define GLX_EVENT_MASK_SGIX 0x801F
#endif
#ifndef GLX_DAMAGED_SGIX
#  define GLX_DAMAGED_SGIX 0x8020
#endif
#ifndef GLX_SAVED_SGIX
#  define GLX_SAVED_SGIX 0x8021
#endif
#ifndef GLX_WINDOW_SGIX
#  define GLX_WINDOW_SGIX 0x8022
#endif
#ifndef GLX_PBUFFER_SGIX
#  define GLX_PBUFFER_SGIX 0x8023
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
typedef GLXPbufferSGIX (APIENTRYP PFNXGLUXCREATEGLXPBUFFERSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, unsigned int width, unsigned int height, int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
typedef void (APIENTRYP PFNXGLUXDESTROYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf);
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
typedef int (APIENTRYP PFNXGLUXQUERYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value);
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
typedef void (APIENTRYP PFNXGLUXSELECTEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long mask);
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
typedef void (APIENTRYP PFNXGLUXGETSELECTEDEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long *mask);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
extern PFNXGLUXCREATEGLXPBUFFERSGIXPROC glXCreateGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
extern PFNXGLUXDESTROYGLXPBUFFERSGIXPROC glXDestroyGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
extern PFNXGLUXQUERYGLXPBUFFERSGIXPROC glXQueryGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
extern PFNXGLUXSELECTEVENTSGIXPROC glXSelectEventSGIX;
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
extern PFNXGLUXGETSELECTEDEVENTSGIXPROC glXGetSelectedEventSGIX;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:32 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_SGIX_pbuffer__
#define __GLUX_GLX_SGIX_pbuffer__

GLUX_NEW_PLUGIN(GLX_SGIX_pbuffer);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_PBUFFER_BIT_SGIX
#  define GLX_PBUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BUFFER_CLOBBER_MASK_SGIX
#  define GLX_BUFFER_CLOBBER_MASK_SGIX 0x08000000
#endif
#ifndef GLX_FRONT_LEFT_BUFFER_BIT_SGIX
#  define GLX_FRONT_LEFT_BUFFER_BIT_SGIX 0x00000001
#endif
#ifndef GLX_FRONT_RIGHT_BUFFER_BIT_SGIX
#  define GLX_FRONT_RIGHT_BUFFER_BIT_SGIX 0x00000002
#endif
#ifndef GLX_BACK_LEFT_BUFFER_BIT_SGIX
#  define GLX_BACK_LEFT_BUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BACK_RIGHT_BUFFER_BIT_SGIX
#  define GLX_BACK_RIGHT_BUFFER_BIT_SGIX 0x00000008
#endif
#ifndef GLX_AUX_BUFFERS_BIT_SGIX
#  define GLX_AUX_BUFFERS_BIT_SGIX 0x00000010
#endif
#ifndef GLX_DEPTH_BUFFER_BIT_SGIX
#  define GLX_DEPTH_BUFFER_BIT_SGIX 0x00000020
#endif
#ifndef GLX_STENCIL_BUFFER_BIT_SGIX
#  define GLX_STENCIL_BUFFER_BIT_SGIX 0x00000040
#endif
#ifndef GLX_ACCUM_BUFFER_BIT_SGIX
#  define GLX_ACCUM_BUFFER_BIT_SGIX 0x00000080
#endif
#ifndef GLX_SAMPLE_BUFFERS_BIT_SGIX
#  define GLX_SAMPLE_BUFFERS_BIT_SGIX 0x00000100
#endif
#ifndef GLX_MAX_PBUFFER_WIDTH_SGIX
#  define GLX_MAX_PBUFFER_WIDTH_SGIX 0x8016
#endif
#ifndef GLX_MAX_PBUFFER_HEIGHT_SGIX
#  define GLX_MAX_PBUFFER_HEIGHT_SGIX 0x8017
#endif
#ifndef GLX_MAX_PBUFFER_PIXELS_SGIX
#  define GLX_MAX_PBUFFER_PIXELS_SGIX 0x8018
#endif
#ifndef GLX_OPTIMAL_PBUFFER_WIDTH_SGIX
#  define GLX_OPTIMAL_PBUFFER_WIDTH_SGIX 0x8019
#endif
#ifndef GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX
#  define GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX 0x801A
#endif
#ifndef GLX_PRESERVED_CONTENTS_SGIX
#  define GLX_PRESERVED_CONTENTS_SGIX 0x801B
#endif
#ifndef GLX_LARGEST_PBUFFER_SGIX
#  define GLX_LARGEST_PBUFFER_SGIX 0x801C
#endif
#ifndef GLX_WIDTH_SGIX
#  define GLX_WIDTH_SGIX 0x801D
#endif
#ifndef GLX_HEIGHT_SGIX
#  define GLX_HEIGHT_SGIX 0x801E
#endif
#ifndef GLX_EVENT_MASK_SGIX
#  define GLX_EVENT_MASK_SGIX 0x801F
#endif
#ifndef GLX_DAMAGED_SGIX
#  define GLX_DAMAGED_SGIX 0x8020
#endif
#ifndef GLX_SAVED_SGIX
#  define GLX_SAVED_SGIX 0x8021
#endif
#ifndef GLX_WINDOW_SGIX
#  define GLX_WINDOW_SGIX 0x8022
#endif
#ifndef GLX_PBUFFER_SGIX
#  define GLX_PBUFFER_SGIX 0x8023
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
typedef GLXPbufferSGIX (APIENTRYP PFNXGLUXCREATEGLXPBUFFERSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, unsigned int width, unsigned int height, int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
typedef void (APIENTRYP PFNXGLUXDESTROYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf);
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
typedef int (APIENTRYP PFNXGLUXQUERYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value);
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
typedef void (APIENTRYP PFNXGLUXSELECTEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long mask);
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
typedef void (APIENTRYP PFNXGLUXGETSELECTEDEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long *mask);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
extern PFNXGLUXCREATEGLXPBUFFERSGIXPROC glXCreateGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
extern PFNXGLUXDESTROYGLXPBUFFERSGIXPROC glXDestroyGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
extern PFNXGLUXQUERYGLXPBUFFERSGIXPROC glXQueryGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
extern PFNXGLUXSELECTEVENTSGIXPROC glXSelectEventSGIX;
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
extern PFNXGLUXGETSELECTEDEVENTSGIXPROC glXGetSelectedEventSGIX;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:48 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_SGIX_pbuffer__
#define __GLUX_GLX_SGIX_pbuffer__

GLUX_NEW_PLUGIN(GLX_SGIX_pbuffer);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_PBUFFER_BIT_SGIX
#  define GLX_PBUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BUFFER_CLOBBER_MASK_SGIX
#  define GLX_BUFFER_CLOBBER_MASK_SGIX 0x08000000
#endif
#ifndef GLX_FRONT_LEFT_BUFFER_BIT_SGIX
#  define GLX_FRONT_LEFT_BUFFER_BIT_SGIX 0x00000001
#endif
#ifndef GLX_FRONT_RIGHT_BUFFER_BIT_SGIX
#  define GLX_FRONT_RIGHT_BUFFER_BIT_SGIX 0x00000002
#endif
#ifndef GLX_BACK_LEFT_BUFFER_BIT_SGIX
#  define GLX_BACK_LEFT_BUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BACK_RIGHT_BUFFER_BIT_SGIX
#  define GLX_BACK_RIGHT_BUFFER_BIT_SGIX 0x00000008
#endif
#ifndef GLX_AUX_BUFFERS_BIT_SGIX
#  define GLX_AUX_BUFFERS_BIT_SGIX 0x00000010
#endif
#ifndef GLX_DEPTH_BUFFER_BIT_SGIX
#  define GLX_DEPTH_BUFFER_BIT_SGIX 0x00000020
#endif
#ifndef GLX_STENCIL_BUFFER_BIT_SGIX
#  define GLX_STENCIL_BUFFER_BIT_SGIX 0x00000040
#endif
#ifndef GLX_ACCUM_BUFFER_BIT_SGIX
#  define GLX_ACCUM_BUFFER_BIT_SGIX 0x00000080
#endif
#ifndef GLX_SAMPLE_BUFFERS_BIT_SGIX
#  define GLX_SAMPLE_BUFFERS_BIT_SGIX 0x00000100
#endif
#ifndef GLX_MAX_PBUFFER_WIDTH_SGIX
#  define GLX_MAX_PBUFFER_WIDTH_SGIX 0x8016
#endif
#ifndef GLX_MAX_PBUFFER_HEIGHT_SGIX
#  define GLX_MAX_PBUFFER_HEIGHT_SGIX 0x8017
#endif
#ifndef GLX_MAX_PBUFFER_PIXELS_SGIX
#  define GLX_MAX_PBUFFER_PIXELS_SGIX 0x8018
#endif
#ifndef GLX_OPTIMAL_PBUFFER_WIDTH_SGIX
#  define GLX_OPTIMAL_PBUFFER_WIDTH_SGIX 0x8019
#endif
#ifndef GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX
#  define GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX 0x801A
#endif
#ifndef GLX_PRESERVED_CONTENTS_SGIX
#  define GLX_PRESERVED_CONTENTS_SGIX 0x801B
#endif
#ifndef GLX_LARGEST_PBUFFER_SGIX
#  define GLX_LARGEST_PBUFFER_SGIX 0x801C
#endif
#ifndef GLX_WIDTH_SGIX
#  define GLX_WIDTH_SGIX 0x801D
#endif
#ifndef GLX_HEIGHT_SGIX
#  define GLX_HEIGHT_SGIX 0x801E
#endif
#ifndef GLX_EVENT_MASK_SGIX
#  define GLX_EVENT_MASK_SGIX 0x801F
#endif
#ifndef GLX_DAMAGED_SGIX
#  define GLX_DAMAGED_SGIX 0x8020
#endif
#ifndef GLX_SAVED_SGIX
#  define GLX_SAVED_SGIX 0x8021
#endif
#ifndef GLX_WINDOW_SGIX
#  define GLX_WINDOW_SGIX 0x8022
#endif
#ifndef GLX_PBUFFER_SGIX
#  define GLX_PBUFFER_SGIX 0x8023
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
typedef GLXPbufferSGIX (APIENTRYP PFNXGLUXCREATEGLXPBUFFERSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, unsigned int width, unsigned int height, int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
typedef void (APIENTRYP PFNXGLUXDESTROYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf);
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
typedef int (APIENTRYP PFNXGLUXQUERYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value);
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
typedef void (APIENTRYP PFNXGLUXSELECTEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long mask);
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
typedef void (APIENTRYP PFNXGLUXGETSELECTEDEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long *mask);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
extern PFNXGLUXCREATEGLXPBUFFERSGIXPROC glXCreateGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
extern PFNXGLUXDESTROYGLXPBUFFERSGIXPROC glXDestroyGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
extern PFNXGLUXQUERYGLXPBUFFERSGIXPROC glXQueryGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
extern PFNXGLUXSELECTEVENTSGIXPROC glXSelectEventSGIX;
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
extern PFNXGLUXGETSELECTEDEVENTSGIXPROC glXGetSelectedEventSGIX;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:24:56 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_SGIX_pbuffer__
#define __GLUX_GLX_SGIX_pbuffer__

GLUX_NEW_PLUGIN(GLX_SGIX_pbuffer);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_PBUFFER_BIT_SGIX
#  define GLX_PBUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BUFFER_CLOBBER_MASK_SGIX
#  define GLX_BUFFER_CLOBBER_MASK_SGIX 0x08000000
#endif
#ifndef GLX_FRONT_LEFT_BUFFER_BIT_SGIX
#  define GLX_FRONT_LEFT_BUFFER_BIT_SGIX 0x00000001
#endif
#ifndef GLX_FRONT_RIGHT_BUFFER_BIT_SGIX
#  define GLX_FRONT_RIGHT_BUFFER_BIT_SGIX 0x00000002
#endif
#ifndef GLX_BACK_LEFT_BUFFER_BIT_SGIX
#  define GLX_BACK_LEFT_BUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BACK_RIGHT_BUFFER_BIT_SGIX
#  define GLX_BACK_RIGHT_BUFFER_BIT_SGIX 0x00000008
#endif
#ifndef GLX_AUX_BUFFERS_BIT_SGIX
#  define GLX_AUX_BUFFERS_BIT_SGIX 0x00000010
#endif
#ifndef GLX_DEPTH_BUFFER_BIT_SGIX
#  define GLX_DEPTH_BUFFER_BIT_SGIX 0x00000020
#endif
#ifndef GLX_STENCIL_BUFFER_BIT_SGIX
#  define GLX_STENCIL_BUFFER_BIT_SGIX 0x00000040
#endif
#ifndef GLX_ACCUM_BUFFER_BIT_SGIX
#  define GLX_ACCUM_BUFFER_BIT_SGIX 0x00000080
#endif
#ifndef GLX_SAMPLE_BUFFERS_BIT_SGIX
#  define GLX_SAMPLE_BUFFERS_BIT_SGIX 0x00000100
#endif
#ifndef GLX_MAX_PBUFFER_WIDTH_SGIX
#  define GLX_MAX_PBUFFER_WIDTH_SGIX 0x8016
#endif
#ifndef GLX_MAX_PBUFFER_HEIGHT_SGIX
#  define GLX_MAX_PBUFFER_HEIGHT_SGIX 0x8017
#endif
#ifndef GLX_MAX_PBUFFER_PIXELS_SGIX
#  define GLX_MAX_PBUFFER_PIXELS_SGIX 0x8018
#endif
#ifndef GLX_OPTIMAL_PBUFFER_WIDTH_SGIX
#  define GLX_OPTIMAL_PBUFFER_WIDTH_SGIX 0x8019
#endif
#ifndef GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX
#  define GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX 0x801A
#endif
#ifndef GLX_PRESERVED_CONTENTS_SGIX
#  define GLX_PRESERVED_CONTENTS_SGIX 0x801B
#endif
#ifndef GLX_LARGEST_PBUFFER_SGIX
#  define GLX_LARGEST_PBUFFER_SGIX 0x801C
#endif
#ifndef GLX_WIDTH_SGIX
#  define GLX_WIDTH_SGIX 0x801D
#endif
#ifndef GLX_HEIGHT_SGIX
#  define GLX_HEIGHT_SGIX 0x801E
#endif
#ifndef GLX_EVENT_MASK_SGIX
#  define GLX_EVENT_MASK_SGIX 0x801F
#endif
#ifndef GLX_DAMAGED_SGIX
#  define GLX_DAMAGED_SGIX 0x8020
#endif
#ifndef GLX_SAVED_SGIX
#  define GLX_SAVED_SGIX 0x8021
#endif
#ifndef GLX_WINDOW_SGIX
#  define GLX_WINDOW_SGIX 0x8022
#endif
#ifndef GLX_PBUFFER_SGIX
#  define GLX_PBUFFER_SGIX 0x8023
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
typedef GLXPbufferSGIX (APIENTRYP PFNXGLUXCREATEGLXPBUFFERSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, unsigned int width, unsigned int height, int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
typedef void (APIENTRYP PFNXGLUXDESTROYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf);
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
typedef int (APIENTRYP PFNXGLUXQUERYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value);
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
typedef void (APIENTRYP PFNXGLUXSELECTEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long mask);
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
typedef void (APIENTRYP PFNXGLUXGETSELECTEDEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long *mask);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
extern PFNXGLUXCREATEGLXPBUFFERSGIXPROC glXCreateGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
extern PFNXGLUXDESTROYGLXPBUFFERSGIXPROC glXDestroyGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
extern PFNXGLUXQUERYGLXPBUFFERSGIXPROC glXQueryGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
extern PFNXGLUXSELECTEVENTSGIXPROC glXSelectEventSGIX;
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
extern PFNXGLUXGETSELECTEDEVENTSGIXPROC glXGetSelectedEventSGIX;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:27:54 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_SGIX_pbuffer__
#define __GLUX_GLX_SGIX_pbuffer__

GLUX_NEW_PLUGIN(GLX_SGIX_pbuffer);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_PBUFFER_BIT_SGIX
#  define GLX_PBUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BUFFER_CLOBBER_MASK_SGIX
#  define GLX_BUFFER_CLOBBER_MASK_SGIX 0x08000000
#endif
#ifndef GLX_FRONT_LEFT_BUFFER_BIT_SGIX
#  define GLX_FRONT_LEFT_BUFFER_BIT_SGIX 0x00000001
#endif
#ifndef GLX_FRONT_RIGHT_BUFFER_BIT_SGIX
#  define GLX_FRONT_RIGHT_BUFFER_BIT_SGIX 0x00000002
#endif
#ifndef GLX_BACK_LEFT_BUFFER_BIT_SGIX
#  define GLX_BACK_LEFT_BUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BACK_RIGHT_BUFFER_BIT_SGIX
#  define GLX_BACK_RIGHT_BUFFER_BIT_SGIX 0x00000008
#endif
#ifndef GLX_AUX_BUFFERS_BIT_SGIX
#  define GLX_AUX_BUFFERS_BIT_SGIX 0x00000010
#endif
#ifndef GLX_DEPTH_BUFFER_BIT_SGIX
#  define GLX_DEPTH_BUFFER_BIT_SGIX 0x00000020
#endif
#ifndef GLX_STENCIL_BUFFER_BIT_SGIX
#  define GLX_STENCIL_BUFFER_BIT_SGIX 0x00000040
#endif
#ifndef GLX_ACCUM_BUFFER_BIT_SGIX
#  define GLX_ACCUM_BUFFER_BIT_SGIX 0x00000080
#endif
#ifndef GLX_SAMPLE_BUFFERS_BIT_SGIX
#  define GLX_SAMPLE_BUFFERS_BIT_SGIX 0x00000100
#endif
#ifndef GLX_MAX_PBUFFER_WIDTH_SGIX
#  define GLX_MAX_PBUFFER_WIDTH_SGIX 0x8016
#endif
#ifndef GLX_MAX_PBUFFER_HEIGHT_SGIX
#  define GLX_MAX_PBUFFER_HEIGHT_SGIX 0x8017
#endif
#ifndef GLX_MAX_PBUFFER_PIXELS_SGIX
#  define GLX_MAX_PBUFFER_PIXELS_SGIX 0x8018
#endif
#ifndef GLX_OPTIMAL_PBUFFER_WIDTH_SGIX
#  define GLX_OPTIMAL_PBUFFER_WIDTH_SGIX 0x8019
#endif
#ifndef GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX
#  define GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX 0x801A
#endif
#ifndef GLX_PRESERVED_CONTENTS_SGIX
#  define GLX_PRESERVED_CONTENTS_SGIX 0x801B
#endif
#ifndef GLX_LARGEST_PBUFFER_SGIX
#  define GLX_LARGEST_PBUFFER_SGIX 0x801C
#endif
#ifndef GLX_WIDTH_SGIX
#  define GLX_WIDTH_SGIX 0x801D
#endif
#ifndef GLX_HEIGHT_SGIX
#  define GLX_HEIGHT_SGIX 0x801E
#endif
#ifndef GLX_EVENT_MASK_SGIX
#  define GLX_EVENT_MASK_SGIX 0x801F
#endif
#ifndef GLX_DAMAGED_SGIX
#  define GLX_DAMAGED_SGIX 0x8020
#endif
#ifndef GLX_SAVED_SGIX
#  define GLX_SAVED_SGIX 0x8021
#endif
#ifndef GLX_WINDOW_SGIX
#  define GLX_WINDOW_SGIX 0x8022
#endif
#ifndef GLX_PBUFFER_SGIX
#  define GLX_PBUFFER_SGIX 0x8023
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
typedef GLXPbufferSGIX (APIENTRYP PFNXGLUXCREATEGLXPBUFFERSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, unsigned int width, unsigned int height, int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
typedef void (APIENTRYP PFNXGLUXDESTROYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf);
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
typedef int (APIENTRYP PFNXGLUXQUERYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value);
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
typedef void (APIENTRYP PFNXGLUXSELECTEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long mask);
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
typedef void (APIENTRYP PFNXGLUXGETSELECTEDEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long *mask);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
extern PFNXGLUXCREATEGLXPBUFFERSGIXPROC glXCreateGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
extern PFNXGLUXDESTROYGLXPBUFFERSGIXPROC glXDestroyGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
extern PFNXGLUXQUERYGLXPBUFFERSGIXPROC glXQueryGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
extern PFNXGLUXSELECTEVENTSGIXPROC glXSelectEventSGIX;
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
extern PFNXGLUXGETSELECTEDEVENTSGIXPROC glXGetSelectedEventSGIX;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:16:54 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_SGIX_pbuffer__
#define __GLUX_GLX_SGIX_pbuffer__

GLUX_NEW_PLUGIN(GLX_SGIX_pbuffer);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_PBUFFER_BIT_SGIX
#  define GLX_PBUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BUFFER_CLOBBER_MASK_SGIX
#  define GLX_BUFFER_CLOBBER_MASK_SGIX 0x08000000
#endif
#ifndef GLX_FRONT_LEFT_BUFFER_BIT_SGIX
#  define GLX_FRONT_LEFT_BUFFER_BIT_SGIX 0x00000001
#endif
#ifndef GLX_FRONT_RIGHT_BUFFER_BIT_SGIX
#  define GLX_FRONT_RIGHT_BUFFER_BIT_SGIX 0x00000002
#endif
#ifndef GLX_BACK_LEFT_BUFFER_BIT_SGIX
#  define GLX_BACK_LEFT_BUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BACK_RIGHT_BUFFER_BIT_SGIX
#  define GLX_BACK_RIGHT_BUFFER_BIT_SGIX 0x00000008
#endif
#ifndef GLX_AUX_BUFFERS_BIT_SGIX
#  define GLX_AUX_BUFFERS_BIT_SGIX 0x00000010
#endif
#ifndef GLX_DEPTH_BUFFER_BIT_SGIX
#  define GLX_DEPTH_BUFFER_BIT_SGIX 0x00000020
#endif
#ifndef GLX_STENCIL_BUFFER_BIT_SGIX
#  define GLX_STENCIL_BUFFER_BIT_SGIX 0x00000040
#endif
#ifndef GLX_ACCUM_BUFFER_BIT_SGIX
#  define GLX_ACCUM_BUFFER_BIT_SGIX 0x00000080
#endif
#ifndef GLX_SAMPLE_BUFFERS_BIT_SGIX
#  define GLX_SAMPLE_BUFFERS_BIT_SGIX 0x00000100
#endif
#ifndef GLX_MAX_PBUFFER_WIDTH_SGIX
#  define GLX_MAX_PBUFFER_WIDTH_SGIX 0x8016
#endif
#ifndef GLX_MAX_PBUFFER_HEIGHT_SGIX
#  define GLX_MAX_PBUFFER_HEIGHT_SGIX 0x8017
#endif
#ifndef GLX_MAX_PBUFFER_PIXELS_SGIX
#  define GLX_MAX_PBUFFER_PIXELS_SGIX 0x8018
#endif
#ifndef GLX_OPTIMAL_PBUFFER_WIDTH_SGIX
#  define GLX_OPTIMAL_PBUFFER_WIDTH_SGIX 0x8019
#endif
#ifndef GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX
#  define GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX 0x801A
#endif
#ifndef GLX_PRESERVED_CONTENTS_SGIX
#  define GLX_PRESERVED_CONTENTS_SGIX 0x801B
#endif
#ifndef GLX_LARGEST_PBUFFER_SGIX
#  define GLX_LARGEST_PBUFFER_SGIX 0x801C
#endif
#ifndef GLX_WIDTH_SGIX
#  define GLX_WIDTH_SGIX 0x801D
#endif
#ifndef GLX_HEIGHT_SGIX
#  define GLX_HEIGHT_SGIX 0x801E
#endif
#ifndef GLX_EVENT_MASK_SGIX
#  define GLX_EVENT_MASK_SGIX 0x801F
#endif
#ifndef GLX_DAMAGED_SGIX
#  define GLX_DAMAGED_SGIX 0x8020
#endif
#ifndef GLX_SAVED_SGIX
#  define GLX_SAVED_SGIX 0x8021
#endif
#ifndef GLX_WINDOW_SGIX
#  define GLX_WINDOW_SGIX 0x8022
#endif
#ifndef GLX_PBUFFER_SGIX
#  define GLX_PBUFFER_SGIX 0x8023
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
typedef GLXPbufferSGIX (APIENTRYP PFNXGLUXCREATEGLXPBUFFERSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, unsigned int width, unsigned int height, int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
typedef void (APIENTRYP PFNXGLUXDESTROYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf);
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
typedef int (APIENTRYP PFNXGLUXQUERYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value);
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
typedef void (APIENTRYP PFNXGLUXSELECTEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long mask);
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
typedef void (APIENTRYP PFNXGLUXGETSELECTEDEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long *mask);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
extern PFNXGLUXCREATEGLXPBUFFERSGIXPROC glXCreateGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
extern PFNXGLUXDESTROYGLXPBUFFERSGIXPROC glXDestroyGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
extern PFNXGLUXQUERYGLXPBUFFERSGIXPROC glXQueryGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
extern PFNXGLUXSELECTEVENTSGIXPROC glXSelectEventSGIX;
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
extern PFNXGLUXGETSELECTEDEVENTSGIXPROC glXGetSelectedEventSGIX;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:00 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_SGIX_pbuffer__
#define __GLUX_GLX_SGIX_pbuffer__

GLUX_NEW_PLUGIN(GLX_SGIX_pbuffer);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_PBUFFER_BIT_SGIX
#  define GLX_PBUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BUFFER_CLOBBER_MASK_SGIX
#  define GLX_BUFFER_CLOBBER_MASK_SGIX 0x08000000
#endif
#ifndef GLX_FRONT_LEFT_BUFFER_BIT_SGIX
#  define GLX_FRONT_LEFT_BUFFER_BIT_SGIX 0x00000001
#endif
#ifndef GLX_FRONT_RIGHT_BUFFER_BIT_SGIX
#  define GLX_FRONT_RIGHT_BUFFER_BIT_SGIX 0x00000002
#endif
#ifndef GLX_BACK_LEFT_BUFFER_BIT_SGIX
#  define GLX_BACK_LEFT_BUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BACK_RIGHT_BUFFER_BIT_SGIX
#  define GLX_BACK_RIGHT_BUFFER_BIT_SGIX 0x00000008
#endif
#ifndef GLX_AUX_BUFFERS_BIT_SGIX
#  define GLX_AUX_BUFFERS_BIT_SGIX 0x00000010
#endif
#ifndef GLX_DEPTH_BUFFER_BIT_SGIX
#  define GLX_DEPTH_BUFFER_BIT_SGIX 0x00000020
#endif
#ifndef GLX_STENCIL_BUFFER_BIT_SGIX
#  define GLX_STENCIL_BUFFER_BIT_SGIX 0x00000040
#endif
#ifndef GLX_ACCUM_BUFFER_BIT_SGIX
#  define GLX_ACCUM_BUFFER_BIT_SGIX 0x00000080
#endif
#ifndef GLX_SAMPLE_BUFFERS_BIT_SGIX
#  define GLX_SAMPLE_BUFFERS_BIT_SGIX 0x00000100
#endif
#ifndef GLX_MAX_PBUFFER_WIDTH_SGIX
#  define GLX_MAX_PBUFFER_WIDTH_SGIX 0x8016
#endif
#ifndef GLX_MAX_PBUFFER_HEIGHT_SGIX
#  define GLX_MAX_PBUFFER_HEIGHT_SGIX 0x8017
#endif
#ifndef GLX_MAX_PBUFFER_PIXELS_SGIX
#  define GLX_MAX_PBUFFER_PIXELS_SGIX 0x8018
#endif
#ifndef GLX_OPTIMAL_PBUFFER_WIDTH_SGIX
#  define GLX_OPTIMAL_PBUFFER_WIDTH_SGIX 0x8019
#endif
#ifndef GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX
#  define GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX 0x801A
#endif
#ifndef GLX_PRESERVED_CONTENTS_SGIX
#  define GLX_PRESERVED_CONTENTS_SGIX 0x801B
#endif
#ifndef GLX_LARGEST_PBUFFER_SGIX
#  define GLX_LARGEST_PBUFFER_SGIX 0x801C
#endif
#ifndef GLX_WIDTH_SGIX
#  define GLX_WIDTH_SGIX 0x801D
#endif
#ifndef GLX_HEIGHT_SGIX
#  define GLX_HEIGHT_SGIX 0x801E
#endif
#ifndef GLX_EVENT_MASK_SGIX
#  define GLX_EVENT_MASK_SGIX 0x801F
#endif
#ifndef GLX_DAMAGED_SGIX
#  define GLX_DAMAGED_SGIX 0x8020
#endif
#ifndef GLX_SAVED_SGIX
#  define GLX_SAVED_SGIX 0x8021
#endif
#ifndef GLX_WINDOW_SGIX
#  define GLX_WINDOW_SGIX 0x8022
#endif
#ifndef GLX_PBUFFER_SGIX
#  define GLX_PBUFFER_SGIX 0x8023
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
typedef GLXPbufferSGIX (APIENTRYP PFNXGLUXCREATEGLXPBUFFERSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, unsigned int width, unsigned int height, int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
typedef void (APIENTRYP PFNXGLUXDESTROYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf);
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
typedef int (APIENTRYP PFNXGLUXQUERYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value);
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
typedef void (APIENTRYP PFNXGLUXSELECTEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long mask);
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
typedef void (APIENTRYP PFNXGLUXGETSELECTEDEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long *mask);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
extern PFNXGLUXCREATEGLXPBUFFERSGIXPROC glXCreateGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
extern PFNXGLUXDESTROYGLXPBUFFERSGIXPROC glXDestroyGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
extern PFNXGLUXQUERYGLXPBUFFERSGIXPROC glXQueryGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
extern PFNXGLUXSELECTEVENTSGIXPROC glXSelectEventSGIX;
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
extern PFNXGLUXGETSELECTEDEVENTSGIXPROC glXGetSelectedEventSGIX;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:18 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_SGIX_pbuffer__
#define __GLUX_GLX_SGIX_pbuffer__

GLUX_NEW_PLUGIN(GLX_SGIX_pbuffer);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_PBUFFER_BIT_SGIX
#  define GLX_PBUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BUFFER_CLOBBER_MASK_SGIX
#  define GLX_BUFFER_CLOBBER_MASK_SGIX 0x08000000
#endif
#ifndef GLX_FRONT_LEFT_BUFFER_BIT_SGIX
#  define GLX_FRONT_LEFT_BUFFER_BIT_SGIX 0x00000001
#endif
#ifndef GLX_FRONT_RIGHT_BUFFER_BIT_SGIX
#  define GLX_FRONT_RIGHT_BUFFER_BIT_SGIX 0x00000002
#endif
#ifndef GLX_BACK_LEFT_BUFFER_BIT_SGIX
#  define GLX_BACK_LEFT_BUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BACK_RIGHT_BUFFER_BIT_SGIX
#  define GLX_BACK_RIGHT_BUFFER_BIT_SGIX 0x00000008
#endif
#ifndef GLX_AUX_BUFFERS_BIT_SGIX
#  define GLX_AUX_BUFFERS_BIT_SGIX 0x00000010
#endif
#ifndef GLX_DEPTH_BUFFER_BIT_SGIX
#  define GLX_DEPTH_BUFFER_BIT_SGIX 0x00000020
#endif
#ifndef GLX_STENCIL_BUFFER_BIT_SGIX
#  define GLX_STENCIL_BUFFER_BIT_SGIX 0x00000040
#endif
#ifndef GLX_ACCUM_BUFFER_BIT_SGIX
#  define GLX_ACCUM_BUFFER_BIT_SGIX 0x00000080
#endif
#ifndef GLX_SAMPLE_BUFFERS_BIT_SGIX
#  define GLX_SAMPLE_BUFFERS_BIT_SGIX 0x00000100
#endif
#ifndef GLX_MAX_PBUFFER_WIDTH_SGIX
#  define GLX_MAX_PBUFFER_WIDTH_SGIX 0x8016
#endif
#ifndef GLX_MAX_PBUFFER_HEIGHT_SGIX
#  define GLX_MAX_PBUFFER_HEIGHT_SGIX 0x8017
#endif
#ifndef GLX_MAX_PBUFFER_PIXELS_SGIX
#  define GLX_MAX_PBUFFER_PIXELS_SGIX 0x8018
#endif
#ifndef GLX_OPTIMAL_PBUFFER_WIDTH_SGIX
#  define GLX_OPTIMAL_PBUFFER_WIDTH_SGIX 0x8019
#endif
#ifndef GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX
#  define GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX 0x801A
#endif
#ifndef GLX_PRESERVED_CONTENTS_SGIX
#  define GLX_PRESERVED_CONTENTS_SGIX 0x801B
#endif
#ifndef GLX_LARGEST_PBUFFER_SGIX
#  define GLX_LARGEST_PBUFFER_SGIX 0x801C
#endif
#ifndef GLX_WIDTH_SGIX
#  define GLX_WIDTH_SGIX 0x801D
#endif
#ifndef GLX_HEIGHT_SGIX
#  define GLX_HEIGHT_SGIX 0x801E
#endif
#ifndef GLX_EVENT_MASK_SGIX
#  define GLX_EVENT_MASK_SGIX 0x801F
#endif
#ifndef GLX_DAMAGED_SGIX
#  define GLX_DAMAGED_SGIX 0x8020
#endif
#ifndef GLX_SAVED_SGIX
#  define GLX_SAVED_SGIX 0x8021
#endif
#ifndef GLX_WINDOW_SGIX
#  define GLX_WINDOW_SGIX 0x8022
#endif
#ifndef GLX_PBUFFER_SGIX
#  define GLX_PBUFFER_SGIX 0x8023
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
typedef GLXPbufferSGIX (APIENTRYP PFNXGLUXCREATEGLXPBUFFERSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, unsigned int width, unsigned int height, int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
typedef void (APIENTRYP PFNXGLUXDESTROYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf);
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
typedef int (APIENTRYP PFNXGLUXQUERYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value);
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
typedef void (APIENTRYP PFNXGLUXSELECTEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long mask);
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
typedef void (APIENTRYP PFNXGLUXGETSELECTEDEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long *mask);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
extern PFNXGLUXCREATEGLXPBUFFERSGIXPROC glXCreateGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
extern PFNXGLUXDESTROYGLXPBUFFERSGIXPROC glXDestroyGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
extern PFNXGLUXQUERYGLXPBUFFERSGIXPROC glXQueryGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
extern PFNXGLUXSELECTEVENTSGIXPROC glXSelectEventSGIX;
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
extern PFNXGLUXGETSELECTEDEVENTSGIXPROC glXGetSelectedEventSGIX;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:36:58 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_SGIX_pbuffer__
#define __GLUX_GLX_SGIX_pbuffer__

GLUX_NEW_PLUGIN(GLX_SGIX_pbuffer);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_PBUFFER_BIT_SGIX
#  define GLX_PBUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BUFFER_CLOBBER_MASK_SGIX
#  define GLX_BUFFER_CLOBBER_MASK_SGIX 0x08000000
#endif
#ifndef GLX_FRONT_LEFT_BUFFER_BIT_SGIX
#  define GLX_FRONT_LEFT_BUFFER_BIT_SGIX 0x00000001
#endif
#ifndef GLX_FRONT_RIGHT_BUFFER_BIT_SGIX
#  define GLX_FRONT_RIGHT_BUFFER_BIT_SGIX 0x00000002
#endif
#ifndef GLX_BACK_LEFT_BUFFER_BIT_SGIX
#  define GLX_BACK_LEFT_BUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BACK_RIGHT_BUFFER_BIT_SGIX
#  define GLX_BACK_RIGHT_BUFFER_BIT_SGIX 0x00000008
#endif
#ifndef GLX_AUX_BUFFERS_BIT_SGIX
#  define GLX_AUX_BUFFERS_BIT_SGIX 0x00000010
#endif
#ifndef GLX_DEPTH_BUFFER_BIT_SGIX
#  define GLX_DEPTH_BUFFER_BIT_SGIX 0x00000020
#endif
#ifndef GLX_STENCIL_BUFFER_BIT_SGIX
#  define GLX_STENCIL_BUFFER_BIT_SGIX 0x00000040
#endif
#ifndef GLX_ACCUM_BUFFER_BIT_SGIX
#  define GLX_ACCUM_BUFFER_BIT_SGIX 0x00000080
#endif
#ifndef GLX_SAMPLE_BUFFERS_BIT_SGIX
#  define GLX_SAMPLE_BUFFERS_BIT_SGIX 0x00000100
#endif
#ifndef GLX_MAX_PBUFFER_WIDTH_SGIX
#  define GLX_MAX_PBUFFER_WIDTH_SGIX 0x8016
#endif
#ifndef GLX_MAX_PBUFFER_HEIGHT_SGIX
#  define GLX_MAX_PBUFFER_HEIGHT_SGIX 0x8017
#endif
#ifndef GLX_MAX_PBUFFER_PIXELS_SGIX
#  define GLX_MAX_PBUFFER_PIXELS_SGIX 0x8018
#endif
#ifndef GLX_OPTIMAL_PBUFFER_WIDTH_SGIX
#  define GLX_OPTIMAL_PBUFFER_WIDTH_SGIX 0x8019
#endif
#ifndef GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX
#  define GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX 0x801A
#endif
#ifndef GLX_PRESERVED_CONTENTS_SGIX
#  define GLX_PRESERVED_CONTENTS_SGIX 0x801B
#endif
#ifndef GLX_LARGEST_PBUFFER_SGIX
#  define GLX_LARGEST_PBUFFER_SGIX 0x801C
#endif
#ifndef GLX_WIDTH_SGIX
#  define GLX_WIDTH_SGIX 0x801D
#endif
#ifndef GLX_HEIGHT_SGIX
#  define GLX_HEIGHT_SGIX 0x801E
#endif
#ifndef GLX_EVENT_MASK_SGIX
#  define GLX_EVENT_MASK_SGIX 0x801F
#endif
#ifndef GLX_DAMAGED_SGIX
#  define GLX_DAMAGED_SGIX 0x8020
#endif
#ifndef GLX_SAVED_SGIX
#  define GLX_SAVED_SGIX 0x8021
#endif
#ifndef GLX_WINDOW_SGIX
#  define GLX_WINDOW_SGIX 0x8022
#endif
#ifndef GLX_PBUFFER_SGIX
#  define GLX_PBUFFER_SGIX 0x8023
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
typedef GLXPbufferSGIX (APIENTRYP PFNXGLUXCREATEGLXPBUFFERSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, unsigned int width, unsigned int height, int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
typedef void (APIENTRYP PFNXGLUXDESTROYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf);
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
typedef int (APIENTRYP PFNXGLUXQUERYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value);
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
typedef void (APIENTRYP PFNXGLUXSELECTEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long mask);
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
typedef void (APIENTRYP PFNXGLUXGETSELECTEDEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long *mask);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
extern PFNXGLUXCREATEGLXPBUFFERSGIXPROC glXCreateGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
extern PFNXGLUXDESTROYGLXPBUFFERSGIXPROC glXDestroyGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
extern PFNXGLUXQUERYGLXPBUFFERSGIXPROC glXQueryGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
extern PFNXGLUXSELECTEVENTSGIXPROC glXSelectEventSGIX;
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
extern PFNXGLUXGETSELECTEDEVENTSGIXPROC glXGetSelectedEventSGIX;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:08 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_SGIX_pbuffer__
#define __GLUX_GLX_SGIX_pbuffer__

GLUX_NEW_PLUGIN(GLX_SGIX_pbuffer);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_PBUFFER_BIT_SGIX
#  define GLX_PBUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BUFFER_CLOBBER_MASK_SGIX
#  define GLX_BUFFER_CLOBBER_MASK_SGIX 0x08000000
#endif
#ifndef GLX_FRONT_LEFT_BUFFER_BIT_SGIX
#  define GLX_FRONT_LEFT_BUFFER_BIT_SGIX 0x00000001
#endif
#ifndef GLX_FRONT_RIGHT_BUFFER_BIT_SGIX
#  define GLX_FRONT_RIGHT_BUFFER_BIT_SGIX 0x00000002
#endif
#ifndef GLX_BACK_LEFT_BUFFER_BIT_SGIX
#  define GLX_BACK_LEFT_BUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BACK_RIGHT_BUFFER_BIT_SGIX
#  define GLX_BACK_RIGHT_BUFFER_BIT_SGIX 0x00000008
#endif
#ifndef GLX_AUX_BUFFERS_BIT_SGIX
#  define GLX_AUX_BUFFERS_BIT_SGIX 0x00000010
#endif
#ifndef GLX_DEPTH_BUFFER_BIT_SGIX
#  define GLX_DEPTH_BUFFER_BIT_SGIX 0x00000020
#endif
#ifndef GLX_STENCIL_BUFFER_BIT_SGIX
#  define GLX_STENCIL_BUFFER_BIT_SGIX 0x00000040
#endif
#ifndef GLX_ACCUM_BUFFER_BIT_SGIX
#  define GLX_ACCUM_BUFFER_BIT_SGIX 0x00000080
#endif
#ifndef GLX_SAMPLE_BUFFERS_BIT_SGIX
#  define GLX_SAMPLE_BUFFERS_BIT_SGIX 0x00000100
#endif
#ifndef GLX_MAX_PBUFFER_WIDTH_SGIX
#  define GLX_MAX_PBUFFER_WIDTH_SGIX 0x8016
#endif
#ifndef GLX_MAX_PBUFFER_HEIGHT_SGIX
#  define GLX_MAX_PBUFFER_HEIGHT_SGIX 0x8017
#endif
#ifndef GLX_MAX_PBUFFER_PIXELS_SGIX
#  define GLX_MAX_PBUFFER_PIXELS_SGIX 0x8018
#endif
#ifndef GLX_OPTIMAL_PBUFFER_WIDTH_SGIX
#  define GLX_OPTIMAL_PBUFFER_WIDTH_SGIX 0x8019
#endif
#ifndef GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX
#  define GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX 0x801A
#endif
#ifndef GLX_PRESERVED_CONTENTS_SGIX
#  define GLX_PRESERVED_CONTENTS_SGIX 0x801B
#endif
#ifndef GLX_LARGEST_PBUFFER_SGIX
#  define GLX_LARGEST_PBUFFER_SGIX 0x801C
#endif
#ifndef GLX_WIDTH_SGIX
#  define GLX_WIDTH_SGIX 0x801D
#endif
#ifndef GLX_HEIGHT_SGIX
#  define GLX_HEIGHT_SGIX 0x801E
#endif
#ifndef GLX_EVENT_MASK_SGIX
#  define GLX_EVENT_MASK_SGIX 0x801F
#endif
#ifndef GLX_DAMAGED_SGIX
#  define GLX_DAMAGED_SGIX 0x8020
#endif
#ifndef GLX_SAVED_SGIX
#  define GLX_SAVED_SGIX 0x8021
#endif
#ifndef GLX_WINDOW_SGIX
#  define GLX_WINDOW_SGIX 0x8022
#endif
#ifndef GLX_PBUFFER_SGIX
#  define GLX_PBUFFER_SGIX 0x8023
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
typedef GLXPbufferSGIX (APIENTRYP PFNXGLUXCREATEGLXPBUFFERSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, unsigned int width, unsigned int height, int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
typedef void (APIENTRYP PFNXGLUXDESTROYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf);
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
typedef int (APIENTRYP PFNXGLUXQUERYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value);
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
typedef void (APIENTRYP PFNXGLUXSELECTEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long mask);
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
typedef void (APIENTRYP PFNXGLUXGETSELECTEDEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long *mask);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
extern PFNXGLUXCREATEGLXPBUFFERSGIXPROC glXCreateGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
extern PFNXGLUXDESTROYGLXPBUFFERSGIXPROC glXDestroyGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
extern PFNXGLUXQUERYGLXPBUFFERSGIXPROC glXQueryGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
extern PFNXGLUXSELECTEVENTSGIXPROC glXSelectEventSGIX;
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
extern PFNXGLUXGETSELECTEDEVENTSGIXPROC glXGetSelectedEventSGIX;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:18 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_SGIX_pbuffer__
#define __GLUX_GLX_SGIX_pbuffer__

GLUX_NEW_PLUGIN(GLX_SGIX_pbuffer);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_PBUFFER_BIT_SGIX
#  define GLX_PBUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BUFFER_CLOBBER_MASK_SGIX
#  define GLX_BUFFER_CLOBBER_MASK_SGIX 0x08000000
#endif
#ifndef GLX_FRONT_LEFT_BUFFER_BIT_SGIX
#  define GLX_FRONT_LEFT_BUFFER_BIT_SGIX 0x00000001
#endif
#ifndef GLX_FRONT_RIGHT_BUFFER_BIT_SGIX
#  define GLX_FRONT_RIGHT_BUFFER_BIT_SGIX 0x00000002
#endif
#ifndef GLX_BACK_LEFT_BUFFER_BIT_SGIX
#  define GLX_BACK_LEFT_BUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BACK_RIGHT_BUFFER_BIT_SGIX
#  define GLX_BACK_RIGHT_BUFFER_BIT_SGIX 0x00000008
#endif
#ifndef GLX_AUX_BUFFERS_BIT_SGIX
#  define GLX_AUX_BUFFERS_BIT_SGIX 0x00000010
#endif
#ifndef GLX_DEPTH_BUFFER_BIT_SGIX
#  define GLX_DEPTH_BUFFER_BIT_SGIX 0x00000020
#endif
#ifndef GLX_STENCIL_BUFFER_BIT_SGIX
#  define GLX_STENCIL_BUFFER_BIT_SGIX 0x00000040
#endif
#ifndef GLX_ACCUM_BUFFER_BIT_SGIX
#  define GLX_ACCUM_BUFFER_BIT_SGIX 0x00000080
#endif
#ifndef GLX_SAMPLE_BUFFERS_BIT_SGIX
#  define GLX_SAMPLE_BUFFERS_BIT_SGIX 0x00000100
#endif
#ifndef GLX_MAX_PBUFFER_WIDTH_SGIX
#  define GLX_MAX_PBUFFER_WIDTH_SGIX 0x8016
#endif
#ifndef GLX_MAX_PBUFFER_HEIGHT_SGIX
#  define GLX_MAX_PBUFFER_HEIGHT_SGIX 0x8017
#endif
#ifndef GLX_MAX_PBUFFER_PIXELS_SGIX
#  define GLX_MAX_PBUFFER_PIXELS_SGIX 0x8018
#endif
#ifndef GLX_OPTIMAL_PBUFFER_WIDTH_SGIX
#  define GLX_OPTIMAL_PBUFFER_WIDTH_SGIX 0x8019
#endif
#ifndef GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX
#  define GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX 0x801A
#endif
#ifndef GLX_PRESERVED_CONTENTS_SGIX
#  define GLX_PRESERVED_CONTENTS_SGIX 0x801B
#endif
#ifndef GLX_LARGEST_PBUFFER_SGIX
#  define GLX_LARGEST_PBUFFER_SGIX 0x801C
#endif
#ifndef GLX_WIDTH_SGIX
#  define GLX_WIDTH_SGIX 0x801D
#endif
#ifndef GLX_HEIGHT_SGIX
#  define GLX_HEIGHT_SGIX 0x801E
#endif
#ifndef GLX_EVENT_MASK_SGIX
#  define GLX_EVENT_MASK_SGIX 0x801F
#endif
#ifndef GLX_DAMAGED_SGIX
#  define GLX_DAMAGED_SGIX 0x8020
#endif
#ifndef GLX_SAVED_SGIX
#  define GLX_SAVED_SGIX 0x8021
#endif
#ifndef GLX_WINDOW_SGIX
#  define GLX_WINDOW_SGIX 0x8022
#endif
#ifndef GLX_PBUFFER_SGIX
#  define GLX_PBUFFER_SGIX 0x8023
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
typedef GLXPbufferSGIX (APIENTRYP PFNXGLUXCREATEGLXPBUFFERSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, unsigned int width, unsigned int height, int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
typedef void (APIENTRYP PFNXGLUXDESTROYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf);
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
typedef int (APIENTRYP PFNXGLUXQUERYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value);
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
typedef void (APIENTRYP PFNXGLUXSELECTEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long mask);
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
typedef void (APIENTRYP PFNXGLUXGETSELECTEDEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long *mask);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
extern PFNXGLUXCREATEGLXPBUFFERSGIXPROC glXCreateGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
extern PFNXGLUXDESTROYGLXPBUFFERSGIXPROC glXDestroyGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
extern PFNXGLUXQUERYGLXPBUFFERSGIXPROC glXQueryGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
extern PFNXGLUXSELECTEVENTSGIXPROC glXSelectEventSGIX;
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
extern PFNXGLUXGETSELECTEDEVENTSGIXPROC glXGetSelectedEventSGIX;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:51:56 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_SGIX_pbuffer__
#define __GLUX_GLX_SGIX_pbuffer__

GLUX_NEW_PLUGIN(GLX_SGIX_pbuffer);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_PBUFFER_BIT_SGIX
#  define GLX_PBUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BUFFER_CLOBBER_MASK_SGIX
#  define GLX_BUFFER_CLOBBER_MASK_SGIX 0x08000000
#endif
#ifndef GLX_FRONT_LEFT_BUFFER_BIT_SGIX
#  define GLX_FRONT_LEFT_BUFFER_BIT_SGIX 0x00000001
#endif
#ifndef GLX_FRONT_RIGHT_BUFFER_BIT_SGIX
#  define GLX_FRONT_RIGHT_BUFFER_BIT_SGIX 0x00000002
#endif
#ifndef GLX_BACK_LEFT_BUFFER_BIT_SGIX
#  define GLX_BACK_LEFT_BUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BACK_RIGHT_BUFFER_BIT_SGIX
#  define GLX_BACK_RIGHT_BUFFER_BIT_SGIX 0x00000008
#endif
#ifndef GLX_AUX_BUFFERS_BIT_SGIX
#  define GLX_AUX_BUFFERS_BIT_SGIX 0x00000010
#endif
#ifndef GLX_DEPTH_BUFFER_BIT_SGIX
#  define GLX_DEPTH_BUFFER_BIT_SGIX 0x00000020
#endif
#ifndef GLX_STENCIL_BUFFER_BIT_SGIX
#  define GLX_STENCIL_BUFFER_BIT_SGIX 0x00000040
#endif
#ifndef GLX_ACCUM_BUFFER_BIT_SGIX
#  define GLX_ACCUM_BUFFER_BIT_SGIX 0x00000080
#endif
#ifndef GLX_SAMPLE_BUFFERS_BIT_SGIX
#  define GLX_SAMPLE_BUFFERS_BIT_SGIX 0x00000100
#endif
#ifndef GLX_MAX_PBUFFER_WIDTH_SGIX
#  define GLX_MAX_PBUFFER_WIDTH_SGIX 0x8016
#endif
#ifndef GLX_MAX_PBUFFER_HEIGHT_SGIX
#  define GLX_MAX_PBUFFER_HEIGHT_SGIX 0x8017
#endif
#ifndef GLX_MAX_PBUFFER_PIXELS_SGIX
#  define GLX_MAX_PBUFFER_PIXELS_SGIX 0x8018
#endif
#ifndef GLX_OPTIMAL_PBUFFER_WIDTH_SGIX
#  define GLX_OPTIMAL_PBUFFER_WIDTH_SGIX 0x8019
#endif
#ifndef GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX
#  define GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX 0x801A
#endif
#ifndef GLX_PRESERVED_CONTENTS_SGIX
#  define GLX_PRESERVED_CONTENTS_SGIX 0x801B
#endif
#ifndef GLX_LARGEST_PBUFFER_SGIX
#  define GLX_LARGEST_PBUFFER_SGIX 0x801C
#endif
#ifndef GLX_WIDTH_SGIX
#  define GLX_WIDTH_SGIX 0x801D
#endif
#ifndef GLX_HEIGHT_SGIX
#  define GLX_HEIGHT_SGIX 0x801E
#endif
#ifndef GLX_EVENT_MASK_SGIX
#  define GLX_EVENT_MASK_SGIX 0x801F
#endif
#ifndef GLX_DAMAGED_SGIX
#  define GLX_DAMAGED_SGIX 0x8020
#endif
#ifndef GLX_SAVED_SGIX
#  define GLX_SAVED_SGIX 0x8021
#endif
#ifndef GLX_WINDOW_SGIX
#  define GLX_WINDOW_SGIX 0x8022
#endif
#ifndef GLX_PBUFFER_SGIX
#  define GLX_PBUFFER_SGIX 0x8023
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
typedef GLXPbufferSGIX (APIENTRYP PFNXGLUXCREATEGLXPBUFFERSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, unsigned int width, unsigned int height, int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
typedef void (APIENTRYP PFNXGLUXDESTROYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf);
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
typedef int (APIENTRYP PFNXGLUXQUERYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value);
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
typedef void (APIENTRYP PFNXGLUXSELECTEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long mask);
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
typedef void (APIENTRYP PFNXGLUXGETSELECTEDEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long *mask);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
extern PFNXGLUXCREATEGLXPBUFFERSGIXPROC glXCreateGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
extern PFNXGLUXDESTROYGLXPBUFFERSGIXPROC glXDestroyGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
extern PFNXGLUXQUERYGLXPBUFFERSGIXPROC glXQueryGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
extern PFNXGLUXSELECTEVENTSGIXPROC glXSelectEventSGIX;
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
extern PFNXGLUXGETSELECTEDEVENTSGIXPROC glXGetSelectedEventSGIX;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:50 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_SGIX_pbuffer__
#define __GLUX_GLX_SGIX_pbuffer__

GLUX_NEW_PLUGIN(GLX_SGIX_pbuffer);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_PBUFFER_BIT_SGIX
#  define GLX_PBUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BUFFER_CLOBBER_MASK_SGIX
#  define GLX_BUFFER_CLOBBER_MASK_SGIX 0x08000000
#endif
#ifndef GLX_FRONT_LEFT_BUFFER_BIT_SGIX
#  define GLX_FRONT_LEFT_BUFFER_BIT_SGIX 0x00000001
#endif
#ifndef GLX_FRONT_RIGHT_BUFFER_BIT_SGIX
#  define GLX_FRONT_RIGHT_BUFFER_BIT_SGIX 0x00000002
#endif
#ifndef GLX_BACK_LEFT_BUFFER_BIT_SGIX
#  define GLX_BACK_LEFT_BUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BACK_RIGHT_BUFFER_BIT_SGIX
#  define GLX_BACK_RIGHT_BUFFER_BIT_SGIX 0x00000008
#endif
#ifndef GLX_AUX_BUFFERS_BIT_SGIX
#  define GLX_AUX_BUFFERS_BIT_SGIX 0x00000010
#endif
#ifndef GLX_DEPTH_BUFFER_BIT_SGIX
#  define GLX_DEPTH_BUFFER_BIT_SGIX 0x00000020
#endif
#ifndef GLX_STENCIL_BUFFER_BIT_SGIX
#  define GLX_STENCIL_BUFFER_BIT_SGIX 0x00000040
#endif
#ifndef GLX_ACCUM_BUFFER_BIT_SGIX
#  define GLX_ACCUM_BUFFER_BIT_SGIX 0x00000080
#endif
#ifndef GLX_SAMPLE_BUFFERS_BIT_SGIX
#  define GLX_SAMPLE_BUFFERS_BIT_SGIX 0x00000100
#endif
#ifndef GLX_MAX_PBUFFER_WIDTH_SGIX
#  define GLX_MAX_PBUFFER_WIDTH_SGIX 0x8016
#endif
#ifndef GLX_MAX_PBUFFER_HEIGHT_SGIX
#  define GLX_MAX_PBUFFER_HEIGHT_SGIX 0x8017
#endif
#ifndef GLX_MAX_PBUFFER_PIXELS_SGIX
#  define GLX_MAX_PBUFFER_PIXELS_SGIX 0x8018
#endif
#ifndef GLX_OPTIMAL_PBUFFER_WIDTH_SGIX
#  define GLX_OPTIMAL_PBUFFER_WIDTH_SGIX 0x8019
#endif
#ifndef GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX
#  define GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX 0x801A
#endif
#ifndef GLX_PRESERVED_CONTENTS_SGIX
#  define GLX_PRESERVED_CONTENTS_SGIX 0x801B
#endif
#ifndef GLX_LARGEST_PBUFFER_SGIX
#  define GLX_LARGEST_PBUFFER_SGIX 0x801C
#endif
#ifndef GLX_WIDTH_SGIX
#  define GLX_WIDTH_SGIX 0x801D
#endif
#ifndef GLX_HEIGHT_SGIX
#  define GLX_HEIGHT_SGIX 0x801E
#endif
#ifndef GLX_EVENT_MASK_SGIX
#  define GLX_EVENT_MASK_SGIX 0x801F
#endif
#ifndef GLX_DAMAGED_SGIX
#  define GLX_DAMAGED_SGIX 0x8020
#endif
#ifndef GLX_SAVED_SGIX
#  define GLX_SAVED_SGIX 0x8021
#endif
#ifndef GLX_WINDOW_SGIX
#  define GLX_WINDOW_SGIX 0x8022
#endif
#ifndef GLX_PBUFFER_SGIX
#  define GLX_PBUFFER_SGIX 0x8023
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
typedef GLXPbufferSGIX (APIENTRYP PFNXGLUXCREATEGLXPBUFFERSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, unsigned int width, unsigned int height, int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
typedef void (APIENTRYP PFNXGLUXDESTROYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf);
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
typedef int (APIENTRYP PFNXGLUXQUERYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value);
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
typedef void (APIENTRYP PFNXGLUXSELECTEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long mask);
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
typedef void (APIENTRYP PFNXGLUXGETSELECTEDEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long *mask);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
extern PFNXGLUXCREATEGLXPBUFFERSGIXPROC glXCreateGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
extern PFNXGLUXDESTROYGLXPBUFFERSGIXPROC glXDestroyGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
extern PFNXGLUXQUERYGLXPBUFFERSGIXPROC glXQueryGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
extern PFNXGLUXSELECTEVENTSGIXPROC glXSelectEventSGIX;
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
extern PFNXGLUXGETSELECTEDEVENTSGIXPROC glXGetSelectedEventSGIX;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:01 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_SGIX_pbuffer__
#define __GLUX_GLX_SGIX_pbuffer__

GLUX_NEW_PLUGIN(GLX_SGIX_pbuffer);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_PBUFFER_BIT_SGIX
#  define GLX_PBUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BUFFER_CLOBBER_MASK_SGIX
#  define GLX_BUFFER_CLOBBER_MASK_SGIX 0x08000000
#endif
#ifndef GLX_FRONT_LEFT_BUFFER_BIT_SGIX
#  define GLX_FRONT_LEFT_BUFFER_BIT_SGIX 0x00000001
#endif
#ifndef GLX_FRONT_RIGHT_BUFFER_BIT_SGIX
#  define GLX_FRONT_RIGHT_BUFFER_BIT_SGIX 0x00000002
#endif
#ifndef GLX_BACK_LEFT_BUFFER_BIT_SGIX
#  define GLX_BACK_LEFT_BUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BACK_RIGHT_BUFFER_BIT_SGIX
#  define GLX_BACK_RIGHT_BUFFER_BIT_SGIX 0x00000008
#endif
#ifndef GLX_AUX_BUFFERS_BIT_SGIX
#  define GLX_AUX_BUFFERS_BIT_SGIX 0x00000010
#endif
#ifndef GLX_DEPTH_BUFFER_BIT_SGIX
#  define GLX_DEPTH_BUFFER_BIT_SGIX 0x00000020
#endif
#ifndef GLX_STENCIL_BUFFER_BIT_SGIX
#  define GLX_STENCIL_BUFFER_BIT_SGIX 0x00000040
#endif
#ifndef GLX_ACCUM_BUFFER_BIT_SGIX
#  define GLX_ACCUM_BUFFER_BIT_SGIX 0x00000080
#endif
#ifndef GLX_SAMPLE_BUFFERS_BIT_SGIX
#  define GLX_SAMPLE_BUFFERS_BIT_SGIX 0x00000100
#endif
#ifndef GLX_MAX_PBUFFER_WIDTH_SGIX
#  define GLX_MAX_PBUFFER_WIDTH_SGIX 0x8016
#endif
#ifndef GLX_MAX_PBUFFER_HEIGHT_SGIX
#  define GLX_MAX_PBUFFER_HEIGHT_SGIX 0x8017
#endif
#ifndef GLX_MAX_PBUFFER_PIXELS_SGIX
#  define GLX_MAX_PBUFFER_PIXELS_SGIX 0x8018
#endif
#ifndef GLX_OPTIMAL_PBUFFER_WIDTH_SGIX
#  define GLX_OPTIMAL_PBUFFER_WIDTH_SGIX 0x8019
#endif
#ifndef GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX
#  define GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX 0x801A
#endif
#ifndef GLX_PRESERVED_CONTENTS_SGIX
#  define GLX_PRESERVED_CONTENTS_SGIX 0x801B
#endif
#ifndef GLX_LARGEST_PBUFFER_SGIX
#  define GLX_LARGEST_PBUFFER_SGIX 0x801C
#endif
#ifndef GLX_WIDTH_SGIX
#  define GLX_WIDTH_SGIX 0x801D
#endif
#ifndef GLX_HEIGHT_SGIX
#  define GLX_HEIGHT_SGIX 0x801E
#endif
#ifndef GLX_EVENT_MASK_SGIX
#  define GLX_EVENT_MASK_SGIX 0x801F
#endif
#ifndef GLX_DAMAGED_SGIX
#  define GLX_DAMAGED_SGIX 0x8020
#endif
#ifndef GLX_SAVED_SGIX
#  define GLX_SAVED_SGIX 0x8021
#endif
#ifndef GLX_WINDOW_SGIX
#  define GLX_WINDOW_SGIX 0x8022
#endif
#ifndef GLX_PBUFFER_SGIX
#  define GLX_PBUFFER_SGIX 0x8023
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
typedef GLXPbufferSGIX (APIENTRYP PFNXGLUXCREATEGLXPBUFFERSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, unsigned int width, unsigned int height, int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
typedef void (APIENTRYP PFNXGLUXDESTROYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf);
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
typedef int (APIENTRYP PFNXGLUXQUERYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value);
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
typedef void (APIENTRYP PFNXGLUXSELECTEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long mask);
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
typedef void (APIENTRYP PFNXGLUXGETSELECTEDEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long *mask);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
extern PFNXGLUXCREATEGLXPBUFFERSGIXPROC glXCreateGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
extern PFNXGLUXDESTROYGLXPBUFFERSGIXPROC glXDestroyGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
extern PFNXGLUXQUERYGLXPBUFFERSGIXPROC glXQueryGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
extern PFNXGLUXSELECTEVENTSGIXPROC glXSelectEventSGIX;
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
extern PFNXGLUXGETSELECTEDEVENTSGIXPROC glXGetSelectedEventSGIX;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:21 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_SGIX_pbuffer__
#define __GLUX_GLX_SGIX_pbuffer__

GLUX_NEW_PLUGIN(GLX_SGIX_pbuffer);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_PBUFFER_BIT_SGIX
#  define GLX_PBUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BUFFER_CLOBBER_MASK_SGIX
#  define GLX_BUFFER_CLOBBER_MASK_SGIX 0x08000000
#endif
#ifndef GLX_FRONT_LEFT_BUFFER_BIT_SGIX
#  define GLX_FRONT_LEFT_BUFFER_BIT_SGIX 0x00000001
#endif
#ifndef GLX_FRONT_RIGHT_BUFFER_BIT_SGIX
#  define GLX_FRONT_RIGHT_BUFFER_BIT_SGIX 0x00000002
#endif
#ifndef GLX_BACK_LEFT_BUFFER_BIT_SGIX
#  define GLX_BACK_LEFT_BUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BACK_RIGHT_BUFFER_BIT_SGIX
#  define GLX_BACK_RIGHT_BUFFER_BIT_SGIX 0x00000008
#endif
#ifndef GLX_AUX_BUFFERS_BIT_SGIX
#  define GLX_AUX_BUFFERS_BIT_SGIX 0x00000010
#endif
#ifndef GLX_DEPTH_BUFFER_BIT_SGIX
#  define GLX_DEPTH_BUFFER_BIT_SGIX 0x00000020
#endif
#ifndef GLX_STENCIL_BUFFER_BIT_SGIX
#  define GLX_STENCIL_BUFFER_BIT_SGIX 0x00000040
#endif
#ifndef GLX_ACCUM_BUFFER_BIT_SGIX
#  define GLX_ACCUM_BUFFER_BIT_SGIX 0x00000080
#endif
#ifndef GLX_SAMPLE_BUFFERS_BIT_SGIX
#  define GLX_SAMPLE_BUFFERS_BIT_SGIX 0x00000100
#endif
#ifndef GLX_MAX_PBUFFER_WIDTH_SGIX
#  define GLX_MAX_PBUFFER_WIDTH_SGIX 0x8016
#endif
#ifndef GLX_MAX_PBUFFER_HEIGHT_SGIX
#  define GLX_MAX_PBUFFER_HEIGHT_SGIX 0x8017
#endif
#ifndef GLX_MAX_PBUFFER_PIXELS_SGIX
#  define GLX_MAX_PBUFFER_PIXELS_SGIX 0x8018
#endif
#ifndef GLX_OPTIMAL_PBUFFER_WIDTH_SGIX
#  define GLX_OPTIMAL_PBUFFER_WIDTH_SGIX 0x8019
#endif
#ifndef GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX
#  define GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX 0x801A
#endif
#ifndef GLX_PRESERVED_CONTENTS_SGIX
#  define GLX_PRESERVED_CONTENTS_SGIX 0x801B
#endif
#ifndef GLX_LARGEST_PBUFFER_SGIX
#  define GLX_LARGEST_PBUFFER_SGIX 0x801C
#endif
#ifndef GLX_WIDTH_SGIX
#  define GLX_WIDTH_SGIX 0x801D
#endif
#ifndef GLX_HEIGHT_SGIX
#  define GLX_HEIGHT_SGIX 0x801E
#endif
#ifndef GLX_EVENT_MASK_SGIX
#  define GLX_EVENT_MASK_SGIX 0x801F
#endif
#ifndef GLX_DAMAGED_SGIX
#  define GLX_DAMAGED_SGIX 0x8020
#endif
#ifndef GLX_SAVED_SGIX
#  define GLX_SAVED_SGIX 0x8021
#endif
#ifndef GLX_WINDOW_SGIX
#  define GLX_WINDOW_SGIX 0x8022
#endif
#ifndef GLX_PBUFFER_SGIX
#  define GLX_PBUFFER_SGIX 0x8023
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
typedef GLXPbufferSGIX (APIENTRYP PFNXGLUXCREATEGLXPBUFFERSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, unsigned int width, unsigned int height, int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
typedef void (APIENTRYP PFNXGLUXDESTROYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf);
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
typedef int (APIENTRYP PFNXGLUXQUERYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value);
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
typedef void (APIENTRYP PFNXGLUXSELECTEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long mask);
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
typedef void (APIENTRYP PFNXGLUXGETSELECTEDEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long *mask);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
extern PFNXGLUXCREATEGLXPBUFFERSGIXPROC glXCreateGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
extern PFNXGLUXDESTROYGLXPBUFFERSGIXPROC glXDestroyGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
extern PFNXGLUXQUERYGLXPBUFFERSGIXPROC glXQueryGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
extern PFNXGLUXSELECTEVENTSGIXPROC glXSelectEventSGIX;
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
extern PFNXGLUXGETSELECTEDEVENTSGIXPROC glXGetSelectedEventSGIX;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_SGIX_pbuffer__
#define __GLUX_GLX_SGIX_pbuffer__

GLUX_NEW_PLUGIN(GLX_SGIX_pbuffer);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_PBUFFER_BIT_SGIX
#  define GLX_PBUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BUFFER_CLOBBER_MASK_SGIX
#  define GLX_BUFFER_CLOBBER_MASK_SGIX 0x08000000
#endif
#ifndef GLX_FRONT_LEFT_BUFFER_BIT_SGIX
#  define GLX_FRONT_LEFT_BUFFER_BIT_SGIX 0x00000001
#endif
#ifndef GLX_FRONT_RIGHT_BUFFER_BIT_SGIX
#  define GLX_FRONT_RIGHT_BUFFER_BIT_SGIX 0x00000002
#endif
#ifndef GLX_BACK_LEFT_BUFFER_BIT_SGIX
#  define GLX_BACK_LEFT_BUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BACK_RIGHT_BUFFER_BIT_SGIX
#  define GLX_BACK_RIGHT_BUFFER_BIT_SGIX 0x00000008
#endif
#ifndef GLX_AUX_BUFFERS_BIT_SGIX
#  define GLX_AUX_BUFFERS_BIT_SGIX 0x00000010
#endif
#ifndef GLX_DEPTH_BUFFER_BIT_SGIX
#  define GLX_DEPTH_BUFFER_BIT_SGIX 0x00000020
#endif
#ifndef GLX_STENCIL_BUFFER_BIT_SGIX
#  define GLX_STENCIL_BUFFER_BIT_SGIX 0x00000040
#endif
#ifndef GLX_ACCUM_BUFFER_BIT_SGIX
#  define GLX_ACCUM_BUFFER_BIT_SGIX 0x00000080
#endif
#ifndef GLX_SAMPLE_BUFFERS_BIT_SGIX
#  define GLX_SAMPLE_BUFFERS_BIT_SGIX 0x00000100
#endif
#ifndef GLX_MAX_PBUFFER_WIDTH_SGIX
#  define GLX_MAX_PBUFFER_WIDTH_SGIX 0x8016
#endif
#ifndef GLX_MAX_PBUFFER_HEIGHT_SGIX
#  define GLX_MAX_PBUFFER_HEIGHT_SGIX 0x8017
#endif
#ifndef GLX_MAX_PBUFFER_PIXELS_SGIX
#  define GLX_MAX_PBUFFER_PIXELS_SGIX 0x8018
#endif
#ifndef GLX_OPTIMAL_PBUFFER_WIDTH_SGIX
#  define GLX_OPTIMAL_PBUFFER_WIDTH_SGIX 0x8019
#endif
#ifndef GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX
#  define GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX 0x801A
#endif
#ifndef GLX_PRESERVED_CONTENTS_SGIX
#  define GLX_PRESERVED_CONTENTS_SGIX 0x801B
#endif
#ifndef GLX_LARGEST_PBUFFER_SGIX
#  define GLX_LARGEST_PBUFFER_SGIX 0x801C
#endif
#ifndef GLX_WIDTH_SGIX
#  define GLX_WIDTH_SGIX 0x801D
#endif
#ifndef GLX_HEIGHT_SGIX
#  define GLX_HEIGHT_SGIX 0x801E
#endif
#ifndef GLX_EVENT_MASK_SGIX
#  define GLX_EVENT_MASK_SGIX 0x801F
#endif
#ifndef GLX_DAMAGED_SGIX
#  define GLX_DAMAGED_SGIX 0x8020
#endif
#ifndef GLX_SAVED_SGIX
#  define GLX_SAVED_SGIX 0x8021
#endif
#ifndef GLX_WINDOW_SGIX
#  define GLX_WINDOW_SGIX 0x8022
#endif
#ifndef GLX_PBUFFER_SGIX
#  define GLX_PBUFFER_SGIX 0x8023
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
typedef GLXPbufferSGIX (APIENTRYP PFNXGLUXCREATEGLXPBUFFERSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, unsigned int width, unsigned int height, int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
typedef void (APIENTRYP PFNXGLUXDESTROYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf);
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
typedef int (APIENTRYP PFNXGLUXQUERYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value);
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
typedef void (APIENTRYP PFNXGLUXSELECTEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long mask);
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
typedef void (APIENTRYP PFNXGLUXGETSELECTEDEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long *mask);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
extern PFNXGLUXCREATEGLXPBUFFERSGIXPROC glXCreateGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
extern PFNXGLUXDESTROYGLXPBUFFERSGIXPROC glXDestroyGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
extern PFNXGLUXQUERYGLXPBUFFERSGIXPROC glXQueryGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
extern PFNXGLUXSELECTEVENTSGIXPROC glXSelectEventSGIX;
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
extern PFNXGLUXGETSELECTEDEVENTSGIXPROC glXGetSelectedEventSGIX;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:41:54 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_SGIX_pbuffer__
#define __GLUX_GLX_SGIX_pbuffer__

GLUX_NEW_PLUGIN(GLX_SGIX_pbuffer);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_PBUFFER_BIT_SGIX
#  define GLX_PBUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BUFFER_CLOBBER_MASK_SGIX
#  define GLX_BUFFER_CLOBBER_MASK_SGIX 0x08000000
#endif
#ifndef GLX_FRONT_LEFT_BUFFER_BIT_SGIX
#  define GLX_FRONT_LEFT_BUFFER_BIT_SGIX 0x00000001
#endif
#ifndef GLX_FRONT_RIGHT_BUFFER_BIT_SGIX
#  define GLX_FRONT_RIGHT_BUFFER_BIT_SGIX 0x00000002
#endif
#ifndef GLX_BACK_LEFT_BUFFER_BIT_SGIX
#  define GLX_BACK_LEFT_BUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BACK_RIGHT_BUFFER_BIT_SGIX
#  define GLX_BACK_RIGHT_BUFFER_BIT_SGIX 0x00000008
#endif
#ifndef GLX_AUX_BUFFERS_BIT_SGIX
#  define GLX_AUX_BUFFERS_BIT_SGIX 0x00000010
#endif
#ifndef GLX_DEPTH_BUFFER_BIT_SGIX
#  define GLX_DEPTH_BUFFER_BIT_SGIX 0x00000020
#endif
#ifndef GLX_STENCIL_BUFFER_BIT_SGIX
#  define GLX_STENCIL_BUFFER_BIT_SGIX 0x00000040
#endif
#ifndef GLX_ACCUM_BUFFER_BIT_SGIX
#  define GLX_ACCUM_BUFFER_BIT_SGIX 0x00000080
#endif
#ifndef GLX_SAMPLE_BUFFERS_BIT_SGIX
#  define GLX_SAMPLE_BUFFERS_BIT_SGIX 0x00000100
#endif
#ifndef GLX_MAX_PBUFFER_WIDTH_SGIX
#  define GLX_MAX_PBUFFER_WIDTH_SGIX 0x8016
#endif
#ifndef GLX_MAX_PBUFFER_HEIGHT_SGIX
#  define GLX_MAX_PBUFFER_HEIGHT_SGIX 0x8017
#endif
#ifndef GLX_MAX_PBUFFER_PIXELS_SGIX
#  define GLX_MAX_PBUFFER_PIXELS_SGIX 0x8018
#endif
#ifndef GLX_OPTIMAL_PBUFFER_WIDTH_SGIX
#  define GLX_OPTIMAL_PBUFFER_WIDTH_SGIX 0x8019
#endif
#ifndef GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX
#  define GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX 0x801A
#endif
#ifndef GLX_PRESERVED_CONTENTS_SGIX
#  define GLX_PRESERVED_CONTENTS_SGIX 0x801B
#endif
#ifndef GLX_LARGEST_PBUFFER_SGIX
#  define GLX_LARGEST_PBUFFER_SGIX 0x801C
#endif
#ifndef GLX_WIDTH_SGIX
#  define GLX_WIDTH_SGIX 0x801D
#endif
#ifndef GLX_HEIGHT_SGIX
#  define GLX_HEIGHT_SGIX 0x801E
#endif
#ifndef GLX_EVENT_MASK_SGIX
#  define GLX_EVENT_MASK_SGIX 0x801F
#endif
#ifndef GLX_DAMAGED_SGIX
#  define GLX_DAMAGED_SGIX 0x8020
#endif
#ifndef GLX_SAVED_SGIX
#  define GLX_SAVED_SGIX 0x8021
#endif
#ifndef GLX_WINDOW_SGIX
#  define GLX_WINDOW_SGIX 0x8022
#endif
#ifndef GLX_PBUFFER_SGIX
#  define GLX_PBUFFER_SGIX 0x8023
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
typedef GLXPbufferSGIX (APIENTRYP PFNXGLUXCREATEGLXPBUFFERSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, unsigned int width, unsigned int height, int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
typedef void (APIENTRYP PFNXGLUXDESTROYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf);
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
typedef int (APIENTRYP PFNXGLUXQUERYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value);
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
typedef void (APIENTRYP PFNXGLUXSELECTEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long mask);
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
typedef void (APIENTRYP PFNXGLUXGETSELECTEDEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long *mask);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
extern PFNXGLUXCREATEGLXPBUFFERSGIXPROC glXCreateGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
extern PFNXGLUXDESTROYGLXPBUFFERSGIXPROC glXDestroyGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
extern PFNXGLUXQUERYGLXPBUFFERSGIXPROC glXQueryGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
extern PFNXGLUXSELECTEVENTSGIXPROC glXSelectEventSGIX;
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
extern PFNXGLUXGETSELECTEDEVENTSGIXPROC glXGetSelectedEventSGIX;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:33 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_SGIX_pbuffer__
#define __GLUX_GLX_SGIX_pbuffer__

GLUX_NEW_PLUGIN(GLX_SGIX_pbuffer);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_PBUFFER_BIT_SGIX
#  define GLX_PBUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BUFFER_CLOBBER_MASK_SGIX
#  define GLX_BUFFER_CLOBBER_MASK_SGIX 0x08000000
#endif
#ifndef GLX_FRONT_LEFT_BUFFER_BIT_SGIX
#  define GLX_FRONT_LEFT_BUFFER_BIT_SGIX 0x00000001
#endif
#ifndef GLX_FRONT_RIGHT_BUFFER_BIT_SGIX
#  define GLX_FRONT_RIGHT_BUFFER_BIT_SGIX 0x00000002
#endif
#ifndef GLX_BACK_LEFT_BUFFER_BIT_SGIX
#  define GLX_BACK_LEFT_BUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BACK_RIGHT_BUFFER_BIT_SGIX
#  define GLX_BACK_RIGHT_BUFFER_BIT_SGIX 0x00000008
#endif
#ifndef GLX_AUX_BUFFERS_BIT_SGIX
#  define GLX_AUX_BUFFERS_BIT_SGIX 0x00000010
#endif
#ifndef GLX_DEPTH_BUFFER_BIT_SGIX
#  define GLX_DEPTH_BUFFER_BIT_SGIX 0x00000020
#endif
#ifndef GLX_STENCIL_BUFFER_BIT_SGIX
#  define GLX_STENCIL_BUFFER_BIT_SGIX 0x00000040
#endif
#ifndef GLX_ACCUM_BUFFER_BIT_SGIX
#  define GLX_ACCUM_BUFFER_BIT_SGIX 0x00000080
#endif
#ifndef GLX_SAMPLE_BUFFERS_BIT_SGIX
#  define GLX_SAMPLE_BUFFERS_BIT_SGIX 0x00000100
#endif
#ifndef GLX_MAX_PBUFFER_WIDTH_SGIX
#  define GLX_MAX_PBUFFER_WIDTH_SGIX 0x8016
#endif
#ifndef GLX_MAX_PBUFFER_HEIGHT_SGIX
#  define GLX_MAX_PBUFFER_HEIGHT_SGIX 0x8017
#endif
#ifndef GLX_MAX_PBUFFER_PIXELS_SGIX
#  define GLX_MAX_PBUFFER_PIXELS_SGIX 0x8018
#endif
#ifndef GLX_OPTIMAL_PBUFFER_WIDTH_SGIX
#  define GLX_OPTIMAL_PBUFFER_WIDTH_SGIX 0x8019
#endif
#ifndef GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX
#  define GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX 0x801A
#endif
#ifndef GLX_PRESERVED_CONTENTS_SGIX
#  define GLX_PRESERVED_CONTENTS_SGIX 0x801B
#endif
#ifndef GLX_LARGEST_PBUFFER_SGIX
#  define GLX_LARGEST_PBUFFER_SGIX 0x801C
#endif
#ifndef GLX_WIDTH_SGIX
#  define GLX_WIDTH_SGIX 0x801D
#endif
#ifndef GLX_HEIGHT_SGIX
#  define GLX_HEIGHT_SGIX 0x801E
#endif
#ifndef GLX_EVENT_MASK_SGIX
#  define GLX_EVENT_MASK_SGIX 0x801F
#endif
#ifndef GLX_DAMAGED_SGIX
#  define GLX_DAMAGED_SGIX 0x8020
#endif
#ifndef GLX_SAVED_SGIX
#  define GLX_SAVED_SGIX 0x8021
#endif
#ifndef GLX_WINDOW_SGIX
#  define GLX_WINDOW_SGIX 0x8022
#endif
#ifndef GLX_PBUFFER_SGIX
#  define GLX_PBUFFER_SGIX 0x8023
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
typedef GLXPbufferSGIX (APIENTRYP PFNXGLUXCREATEGLXPBUFFERSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, unsigned int width, unsigned int height, int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
typedef void (APIENTRYP PFNXGLUXDESTROYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf);
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
typedef int (APIENTRYP PFNXGLUXQUERYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value);
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
typedef void (APIENTRYP PFNXGLUXSELECTEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long mask);
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
typedef void (APIENTRYP PFNXGLUXGETSELECTEDEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long *mask);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
extern PFNXGLUXCREATEGLXPBUFFERSGIXPROC glXCreateGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
extern PFNXGLUXDESTROYGLXPBUFFERSGIXPROC glXDestroyGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
extern PFNXGLUXQUERYGLXPBUFFERSGIXPROC glXQueryGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
extern PFNXGLUXSELECTEVENTSGIXPROC glXSelectEventSGIX;
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
extern PFNXGLUXGETSELECTEDEVENTSGIXPROC glXGetSelectedEventSGIX;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:09:55 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_SGIX_pbuffer__
#define __GLUX_GLX_SGIX_pbuffer__

GLUX_NEW_PLUGIN(GLX_SGIX_pbuffer);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_PBUFFER_BIT_SGIX
#  define GLX_PBUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BUFFER_CLOBBER_MASK_SGIX
#  define GLX_BUFFER_CLOBBER_MASK_SGIX 0x08000000
#endif
#ifndef GLX_FRONT_LEFT_BUFFER_BIT_SGIX
#  define GLX_FRONT_LEFT_BUFFER_BIT_SGIX 0x00000001
#endif
#ifndef GLX_FRONT_RIGHT_BUFFER_BIT_SGIX
#  define GLX_FRONT_RIGHT_BUFFER_BIT_SGIX 0x00000002
#endif
#ifndef GLX_BACK_LEFT_BUFFER_BIT_SGIX
#  define GLX_BACK_LEFT_BUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BACK_RIGHT_BUFFER_BIT_SGIX
#  define GLX_BACK_RIGHT_BUFFER_BIT_SGIX 0x00000008
#endif
#ifndef GLX_AUX_BUFFERS_BIT_SGIX
#  define GLX_AUX_BUFFERS_BIT_SGIX 0x00000010
#endif
#ifndef GLX_DEPTH_BUFFER_BIT_SGIX
#  define GLX_DEPTH_BUFFER_BIT_SGIX 0x00000020
#endif
#ifndef GLX_STENCIL_BUFFER_BIT_SGIX
#  define GLX_STENCIL_BUFFER_BIT_SGIX 0x00000040
#endif
#ifndef GLX_ACCUM_BUFFER_BIT_SGIX
#  define GLX_ACCUM_BUFFER_BIT_SGIX 0x00000080
#endif
#ifndef GLX_SAMPLE_BUFFERS_BIT_SGIX
#  define GLX_SAMPLE_BUFFERS_BIT_SGIX 0x00000100
#endif
#ifndef GLX_MAX_PBUFFER_WIDTH_SGIX
#  define GLX_MAX_PBUFFER_WIDTH_SGIX 0x8016
#endif
#ifndef GLX_MAX_PBUFFER_HEIGHT_SGIX
#  define GLX_MAX_PBUFFER_HEIGHT_SGIX 0x8017
#endif
#ifndef GLX_MAX_PBUFFER_PIXELS_SGIX
#  define GLX_MAX_PBUFFER_PIXELS_SGIX 0x8018
#endif
#ifndef GLX_OPTIMAL_PBUFFER_WIDTH_SGIX
#  define GLX_OPTIMAL_PBUFFER_WIDTH_SGIX 0x8019
#endif
#ifndef GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX
#  define GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX 0x801A
#endif
#ifndef GLX_PRESERVED_CONTENTS_SGIX
#  define GLX_PRESERVED_CONTENTS_SGIX 0x801B
#endif
#ifndef GLX_LARGEST_PBUFFER_SGIX
#  define GLX_LARGEST_PBUFFER_SGIX 0x801C
#endif
#ifndef GLX_WIDTH_SGIX
#  define GLX_WIDTH_SGIX 0x801D
#endif
#ifndef GLX_HEIGHT_SGIX
#  define GLX_HEIGHT_SGIX 0x801E
#endif
#ifndef GLX_EVENT_MASK_SGIX
#  define GLX_EVENT_MASK_SGIX 0x801F
#endif
#ifndef GLX_DAMAGED_SGIX
#  define GLX_DAMAGED_SGIX 0x8020
#endif
#ifndef GLX_SAVED_SGIX
#  define GLX_SAVED_SGIX 0x8021
#endif
#ifndef GLX_WINDOW_SGIX
#  define GLX_WINDOW_SGIX 0x8022
#endif
#ifndef GLX_PBUFFER_SGIX
#  define GLX_PBUFFER_SGIX 0x8023
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
typedef GLXPbufferSGIX (APIENTRYP PFNXGLUXCREATEGLXPBUFFERSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, unsigned int width, unsigned int height, int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
typedef void (APIENTRYP PFNXGLUXDESTROYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf);
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
typedef int (APIENTRYP PFNXGLUXQUERYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value);
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
typedef void (APIENTRYP PFNXGLUXSELECTEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long mask);
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
typedef void (APIENTRYP PFNXGLUXGETSELECTEDEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long *mask);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
extern PFNXGLUXCREATEGLXPBUFFERSGIXPROC glXCreateGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
extern PFNXGLUXDESTROYGLXPBUFFERSGIXPROC glXDestroyGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
extern PFNXGLUXQUERYGLXPBUFFERSGIXPROC glXQueryGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
extern PFNXGLUXSELECTEVENTSGIXPROC glXSelectEventSGIX;
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
extern PFNXGLUXGETSELECTEDEVENTSGIXPROC glXGetSelectedEventSGIX;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:19:56 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_SGIX_pbuffer__
#define __GLUX_GLX_SGIX_pbuffer__

GLUX_NEW_PLUGIN(GLX_SGIX_pbuffer);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_PBUFFER_BIT_SGIX
#  define GLX_PBUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BUFFER_CLOBBER_MASK_SGIX
#  define GLX_BUFFER_CLOBBER_MASK_SGIX 0x08000000
#endif
#ifndef GLX_FRONT_LEFT_BUFFER_BIT_SGIX
#  define GLX_FRONT_LEFT_BUFFER_BIT_SGIX 0x00000001
#endif
#ifndef GLX_FRONT_RIGHT_BUFFER_BIT_SGIX
#  define GLX_FRONT_RIGHT_BUFFER_BIT_SGIX 0x00000002
#endif
#ifndef GLX_BACK_LEFT_BUFFER_BIT_SGIX
#  define GLX_BACK_LEFT_BUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BACK_RIGHT_BUFFER_BIT_SGIX
#  define GLX_BACK_RIGHT_BUFFER_BIT_SGIX 0x00000008
#endif
#ifndef GLX_AUX_BUFFERS_BIT_SGIX
#  define GLX_AUX_BUFFERS_BIT_SGIX 0x00000010
#endif
#ifndef GLX_DEPTH_BUFFER_BIT_SGIX
#  define GLX_DEPTH_BUFFER_BIT_SGIX 0x00000020
#endif
#ifndef GLX_STENCIL_BUFFER_BIT_SGIX
#  define GLX_STENCIL_BUFFER_BIT_SGIX 0x00000040
#endif
#ifndef GLX_ACCUM_BUFFER_BIT_SGIX
#  define GLX_ACCUM_BUFFER_BIT_SGIX 0x00000080
#endif
#ifndef GLX_SAMPLE_BUFFERS_BIT_SGIX
#  define GLX_SAMPLE_BUFFERS_BIT_SGIX 0x00000100
#endif
#ifndef GLX_MAX_PBUFFER_WIDTH_SGIX
#  define GLX_MAX_PBUFFER_WIDTH_SGIX 0x8016
#endif
#ifndef GLX_MAX_PBUFFER_HEIGHT_SGIX
#  define GLX_MAX_PBUFFER_HEIGHT_SGIX 0x8017
#endif
#ifndef GLX_MAX_PBUFFER_PIXELS_SGIX
#  define GLX_MAX_PBUFFER_PIXELS_SGIX 0x8018
#endif
#ifndef GLX_OPTIMAL_PBUFFER_WIDTH_SGIX
#  define GLX_OPTIMAL_PBUFFER_WIDTH_SGIX 0x8019
#endif
#ifndef GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX
#  define GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX 0x801A
#endif
#ifndef GLX_PRESERVED_CONTENTS_SGIX
#  define GLX_PRESERVED_CONTENTS_SGIX 0x801B
#endif
#ifndef GLX_LARGEST_PBUFFER_SGIX
#  define GLX_LARGEST_PBUFFER_SGIX 0x801C
#endif
#ifndef GLX_WIDTH_SGIX
#  define GLX_WIDTH_SGIX 0x801D
#endif
#ifndef GLX_HEIGHT_SGIX
#  define GLX_HEIGHT_SGIX 0x801E
#endif
#ifndef GLX_EVENT_MASK_SGIX
#  define GLX_EVENT_MASK_SGIX 0x801F
#endif
#ifndef GLX_DAMAGED_SGIX
#  define GLX_DAMAGED_SGIX 0x8020
#endif
#ifndef GLX_SAVED_SGIX
#  define GLX_SAVED_SGIX 0x8021
#endif
#ifndef GLX_WINDOW_SGIX
#  define GLX_WINDOW_SGIX 0x8022
#endif
#ifndef GLX_PBUFFER_SGIX
#  define GLX_PBUFFER_SGIX 0x8023
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
typedef GLXPbufferSGIX (APIENTRYP PFNXGLUXCREATEGLXPBUFFERSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, unsigned int width, unsigned int height, int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
typedef void (APIENTRYP PFNXGLUXDESTROYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf);
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
typedef int (APIENTRYP PFNXGLUXQUERYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value);
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
typedef void (APIENTRYP PFNXGLUXSELECTEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long mask);
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
typedef void (APIENTRYP PFNXGLUXGETSELECTEDEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long *mask);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
extern PFNXGLUXCREATEGLXPBUFFERSGIXPROC glXCreateGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
extern PFNXGLUXDESTROYGLXPBUFFERSGIXPROC glXDestroyGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
extern PFNXGLUXQUERYGLXPBUFFERSGIXPROC glXQueryGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
extern PFNXGLUXSELECTEVENTSGIXPROC glXSelectEventSGIX;
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
extern PFNXGLUXGETSELECTEDEVENTSGIXPROC glXGetSelectedEventSGIX;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:42:53 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_SGIX_pbuffer__
#define __GLUX_GLX_SGIX_pbuffer__

GLUX_NEW_PLUGIN(GLX_SGIX_pbuffer)
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_PBUFFER_BIT_SGIX
#  define GLX_PBUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BUFFER_CLOBBER_MASK_SGIX
#  define GLX_BUFFER_CLOBBER_MASK_SGIX 0x08000000
#endif
#ifndef GLX_FRONT_LEFT_BUFFER_BIT_SGIX
#  define GLX_FRONT_LEFT_BUFFER_BIT_SGIX 0x00000001
#endif
#ifndef GLX_FRONT_RIGHT_BUFFER_BIT_SGIX
#  define GLX_FRONT_RIGHT_BUFFER_BIT_SGIX 0x00000002
#endif
#ifndef GLX_BACK_LEFT_BUFFER_BIT_SGIX
#  define GLX_BACK_LEFT_BUFFER_BIT_SGIX 0x00000004
#endif
#ifndef GLX_BACK_RIGHT_BUFFER_BIT_SGIX
#  define GLX_BACK_RIGHT_BUFFER_BIT_SGIX 0x00000008
#endif
#ifndef GLX_AUX_BUFFERS_BIT_SGIX
#  define GLX_AUX_BUFFERS_BIT_SGIX 0x00000010
#endif
#ifndef GLX_DEPTH_BUFFER_BIT_SGIX
#  define GLX_DEPTH_BUFFER_BIT_SGIX 0x00000020
#endif
#ifndef GLX_STENCIL_BUFFER_BIT_SGIX
#  define GLX_STENCIL_BUFFER_BIT_SGIX 0x00000040
#endif
#ifndef GLX_ACCUM_BUFFER_BIT_SGIX
#  define GLX_ACCUM_BUFFER_BIT_SGIX 0x00000080
#endif
#ifndef GLX_SAMPLE_BUFFERS_BIT_SGIX
#  define GLX_SAMPLE_BUFFERS_BIT_SGIX 0x00000100
#endif
#ifndef GLX_MAX_PBUFFER_WIDTH_SGIX
#  define GLX_MAX_PBUFFER_WIDTH_SGIX 0x8016
#endif
#ifndef GLX_MAX_PBUFFER_HEIGHT_SGIX
#  define GLX_MAX_PBUFFER_HEIGHT_SGIX 0x8017
#endif
#ifndef GLX_MAX_PBUFFER_PIXELS_SGIX
#  define GLX_MAX_PBUFFER_PIXELS_SGIX 0x8018
#endif
#ifndef GLX_OPTIMAL_PBUFFER_WIDTH_SGIX
#  define GLX_OPTIMAL_PBUFFER_WIDTH_SGIX 0x8019
#endif
#ifndef GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX
#  define GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX 0x801A
#endif
#ifndef GLX_PRESERVED_CONTENTS_SGIX
#  define GLX_PRESERVED_CONTENTS_SGIX 0x801B
#endif
#ifndef GLX_LARGEST_PBUFFER_SGIX
#  define GLX_LARGEST_PBUFFER_SGIX 0x801C
#endif
#ifndef GLX_WIDTH_SGIX
#  define GLX_WIDTH_SGIX 0x801D
#endif
#ifndef GLX_HEIGHT_SGIX
#  define GLX_HEIGHT_SGIX 0x801E
#endif
#ifndef GLX_EVENT_MASK_SGIX
#  define GLX_EVENT_MASK_SGIX 0x801F
#endif
#ifndef GLX_DAMAGED_SGIX
#  define GLX_DAMAGED_SGIX 0x8020
#endif
#ifndef GLX_SAVED_SGIX
#  define GLX_SAVED_SGIX 0x8021
#endif
#ifndef GLX_WINDOW_SGIX
#  define GLX_WINDOW_SGIX 0x8022
#endif
#ifndef GLX_PBUFFER_SGIX
#  define GLX_PBUFFER_SGIX 0x8023
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
typedef GLXPbufferSGIX (APIENTRYP PFNXGLUXCREATEGLXPBUFFERSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, unsigned int width, unsigned int height, int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
typedef void (APIENTRYP PFNXGLUXDESTROYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf);
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
typedef int (APIENTRYP PFNXGLUXQUERYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value);
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
typedef void (APIENTRYP PFNXGLUXSELECTEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long mask);
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
typedef void (APIENTRYP PFNXGLUXGETSELECTEDEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long *mask);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXCreateGLXPbufferSGIX
extern PFNXGLUXCREATEGLXPBUFFERSGIXPROC glXCreateGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXDestroyGLXPbufferSGIX
extern PFNXGLUXDESTROYGLXPBUFFERSGIXPROC glXDestroyGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXQueryGLXPbufferSGIX
extern PFNXGLUXQUERYGLXPBUFFERSGIXPROC glXQueryGLXPbufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glXSelectEventSGIX
extern PFNXGLUXSELECTEVENTSGIXPROC glXSelectEventSGIX;
#endif
#ifndef __GLUX__GLFCT_glXGetSelectedEventSGIX
extern PFNXGLUXGETSELECTEDEVENTSGIXPROC glXGetSelectedEventSGIX;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------
