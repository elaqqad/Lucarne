
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:28 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_vertex_buffer_unified_memory__
#define __GLUX_GL_NV_vertex_buffer_unified_memory__

GLUX_NEW_PLUGIN(GL_NV_vertex_buffer_unified_memory);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
#  define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#endif
#ifndef GL_ELEMENT_ARRAY_UNIFIED_NV
#  define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#endif
#ifndef GL_VERTEX_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
#endif
#ifndef GL_NORMAL_ARRAY_ADDRESS_NV
#  define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
#endif
#ifndef GL_COLOR_ARRAY_ADDRESS_NV
#  define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
#endif
#ifndef GL_INDEX_ARRAY_ADDRESS_NV
#  define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
#  define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#endif
#ifndef GL_EDGE_FLAG_ARRAY_ADDRESS_NV
#  define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
#  define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#endif
#ifndef GL_FOG_COORD_ARRAY_ADDRESS_NV
#  define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
#endif
#ifndef GL_ELEMENT_ARRAY_ADDRESS_NV
#  define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
#  define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
#endif
#ifndef GL_VERTEX_ARRAY_LENGTH_NV
#  define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
#endif
#ifndef GL_NORMAL_ARRAY_LENGTH_NV
#  define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
#endif
#ifndef GL_COLOR_ARRAY_LENGTH_NV
#  define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
#endif
#ifndef GL_INDEX_ARRAY_LENGTH_NV
#  define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LENGTH_NV
#  define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LENGTH_NV
#  define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
#  define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#endif
#ifndef GL_FOG_COORD_ARRAY_LENGTH_NV
#  define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
#endif
#ifndef GL_ELEMENT_ARRAY_LENGTH_NV
#  define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
#endif
#ifndef GL_DRAW_INDIRECT_UNIFIED_NV
#  define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
#endif
#ifndef GL_DRAW_INDIRECT_ADDRESS_NV
#  define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
#endif
#ifndef GL_DRAW_INDIRECT_LENGTH_NV
#  define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
typedef void (APIENTRYP PFNGLUXBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
typedef void (APIENTRYP PFNGLUXNORMALFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
typedef void (APIENTRYP PFNGLUXCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
typedef void (APIENTRYP PFNGLUXINDEXFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
typedef void (APIENTRYP PFNGLUXTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
typedef void (APIENTRYP PFNGLUXEDGEFLAGFORMATNVPROC) (GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
typedef void (APIENTRYP PFNGLUXFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
extern PFNGLUXBUFFERADDRESSRANGENVPROC glBufferAddressRangeNV;
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
extern PFNGLUXVERTEXFORMATNVPROC glVertexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
extern PFNGLUXNORMALFORMATNVPROC glNormalFormatNV;
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
extern PFNGLUXCOLORFORMATNVPROC glColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
extern PFNGLUXINDEXFORMATNVPROC glIndexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
extern PFNGLUXTEXCOORDFORMATNVPROC glTexCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
extern PFNGLUXEDGEFLAGFORMATNVPROC glEdgeFlagFormatNV;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
extern PFNGLUXSECONDARYCOLORFORMATNVPROC glSecondaryColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
extern PFNGLUXFOGCOORDFORMATNVPROC glFogCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
extern PFNGLUXVERTEXATTRIBFORMATNVPROC glVertexAttribFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
extern PFNGLUXVERTEXATTRIBIFORMATNVPROC glVertexAttribIFormatNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
extern PFNGLUXGETINTEGERUI64I_VNVPROC glGetIntegerui64i_vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:46 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_vertex_buffer_unified_memory__
#define __GLUX_GL_NV_vertex_buffer_unified_memory__

GLUX_NEW_PLUGIN(GL_NV_vertex_buffer_unified_memory);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
#  define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#endif
#ifndef GL_ELEMENT_ARRAY_UNIFIED_NV
#  define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#endif
#ifndef GL_VERTEX_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
#endif
#ifndef GL_NORMAL_ARRAY_ADDRESS_NV
#  define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
#endif
#ifndef GL_COLOR_ARRAY_ADDRESS_NV
#  define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
#endif
#ifndef GL_INDEX_ARRAY_ADDRESS_NV
#  define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
#  define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#endif
#ifndef GL_EDGE_FLAG_ARRAY_ADDRESS_NV
#  define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
#  define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#endif
#ifndef GL_FOG_COORD_ARRAY_ADDRESS_NV
#  define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
#endif
#ifndef GL_ELEMENT_ARRAY_ADDRESS_NV
#  define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
#  define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
#endif
#ifndef GL_VERTEX_ARRAY_LENGTH_NV
#  define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
#endif
#ifndef GL_NORMAL_ARRAY_LENGTH_NV
#  define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
#endif
#ifndef GL_COLOR_ARRAY_LENGTH_NV
#  define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
#endif
#ifndef GL_INDEX_ARRAY_LENGTH_NV
#  define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LENGTH_NV
#  define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LENGTH_NV
#  define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
#  define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#endif
#ifndef GL_FOG_COORD_ARRAY_LENGTH_NV
#  define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
#endif
#ifndef GL_ELEMENT_ARRAY_LENGTH_NV
#  define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
#endif
#ifndef GL_DRAW_INDIRECT_UNIFIED_NV
#  define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
#endif
#ifndef GL_DRAW_INDIRECT_ADDRESS_NV
#  define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
#endif
#ifndef GL_DRAW_INDIRECT_LENGTH_NV
#  define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
typedef void (APIENTRYP PFNGLUXBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
typedef void (APIENTRYP PFNGLUXNORMALFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
typedef void (APIENTRYP PFNGLUXCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
typedef void (APIENTRYP PFNGLUXINDEXFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
typedef void (APIENTRYP PFNGLUXTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
typedef void (APIENTRYP PFNGLUXEDGEFLAGFORMATNVPROC) (GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
typedef void (APIENTRYP PFNGLUXFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
extern PFNGLUXBUFFERADDRESSRANGENVPROC glBufferAddressRangeNV;
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
extern PFNGLUXVERTEXFORMATNVPROC glVertexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
extern PFNGLUXNORMALFORMATNVPROC glNormalFormatNV;
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
extern PFNGLUXCOLORFORMATNVPROC glColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
extern PFNGLUXINDEXFORMATNVPROC glIndexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
extern PFNGLUXTEXCOORDFORMATNVPROC glTexCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
extern PFNGLUXEDGEFLAGFORMATNVPROC glEdgeFlagFormatNV;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
extern PFNGLUXSECONDARYCOLORFORMATNVPROC glSecondaryColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
extern PFNGLUXFOGCOORDFORMATNVPROC glFogCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
extern PFNGLUXVERTEXATTRIBFORMATNVPROC glVertexAttribFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
extern PFNGLUXVERTEXATTRIBIFORMATNVPROC glVertexAttribIFormatNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
extern PFNGLUXGETINTEGERUI64I_VNVPROC glGetIntegerui64i_vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:54 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_vertex_buffer_unified_memory__
#define __GLUX_GL_NV_vertex_buffer_unified_memory__

GLUX_NEW_PLUGIN(GL_NV_vertex_buffer_unified_memory);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
#  define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#endif
#ifndef GL_ELEMENT_ARRAY_UNIFIED_NV
#  define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#endif
#ifndef GL_VERTEX_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
#endif
#ifndef GL_NORMAL_ARRAY_ADDRESS_NV
#  define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
#endif
#ifndef GL_COLOR_ARRAY_ADDRESS_NV
#  define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
#endif
#ifndef GL_INDEX_ARRAY_ADDRESS_NV
#  define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
#  define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#endif
#ifndef GL_EDGE_FLAG_ARRAY_ADDRESS_NV
#  define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
#  define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#endif
#ifndef GL_FOG_COORD_ARRAY_ADDRESS_NV
#  define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
#endif
#ifndef GL_ELEMENT_ARRAY_ADDRESS_NV
#  define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
#  define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
#endif
#ifndef GL_VERTEX_ARRAY_LENGTH_NV
#  define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
#endif
#ifndef GL_NORMAL_ARRAY_LENGTH_NV
#  define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
#endif
#ifndef GL_COLOR_ARRAY_LENGTH_NV
#  define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
#endif
#ifndef GL_INDEX_ARRAY_LENGTH_NV
#  define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LENGTH_NV
#  define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LENGTH_NV
#  define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
#  define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#endif
#ifndef GL_FOG_COORD_ARRAY_LENGTH_NV
#  define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
#endif
#ifndef GL_ELEMENT_ARRAY_LENGTH_NV
#  define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
#endif
#ifndef GL_DRAW_INDIRECT_UNIFIED_NV
#  define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
#endif
#ifndef GL_DRAW_INDIRECT_ADDRESS_NV
#  define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
#endif
#ifndef GL_DRAW_INDIRECT_LENGTH_NV
#  define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
typedef void (APIENTRYP PFNGLUXBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
typedef void (APIENTRYP PFNGLUXNORMALFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
typedef void (APIENTRYP PFNGLUXCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
typedef void (APIENTRYP PFNGLUXINDEXFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
typedef void (APIENTRYP PFNGLUXTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
typedef void (APIENTRYP PFNGLUXEDGEFLAGFORMATNVPROC) (GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
typedef void (APIENTRYP PFNGLUXFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
extern PFNGLUXBUFFERADDRESSRANGENVPROC glBufferAddressRangeNV;
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
extern PFNGLUXVERTEXFORMATNVPROC glVertexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
extern PFNGLUXNORMALFORMATNVPROC glNormalFormatNV;
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
extern PFNGLUXCOLORFORMATNVPROC glColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
extern PFNGLUXINDEXFORMATNVPROC glIndexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
extern PFNGLUXTEXCOORDFORMATNVPROC glTexCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
extern PFNGLUXEDGEFLAGFORMATNVPROC glEdgeFlagFormatNV;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
extern PFNGLUXSECONDARYCOLORFORMATNVPROC glSecondaryColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
extern PFNGLUXFOGCOORDFORMATNVPROC glFogCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
extern PFNGLUXVERTEXATTRIBFORMATNVPROC glVertexAttribFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
extern PFNGLUXVERTEXATTRIBIFORMATNVPROC glVertexAttribIFormatNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
extern PFNGLUXGETINTEGERUI64I_VNVPROC glGetIntegerui64i_vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:14 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_vertex_buffer_unified_memory__
#define __GLUX_GL_NV_vertex_buffer_unified_memory__

GLUX_NEW_PLUGIN(GL_NV_vertex_buffer_unified_memory);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
#  define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#endif
#ifndef GL_ELEMENT_ARRAY_UNIFIED_NV
#  define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#endif
#ifndef GL_VERTEX_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
#endif
#ifndef GL_NORMAL_ARRAY_ADDRESS_NV
#  define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
#endif
#ifndef GL_COLOR_ARRAY_ADDRESS_NV
#  define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
#endif
#ifndef GL_INDEX_ARRAY_ADDRESS_NV
#  define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
#  define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#endif
#ifndef GL_EDGE_FLAG_ARRAY_ADDRESS_NV
#  define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
#  define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#endif
#ifndef GL_FOG_COORD_ARRAY_ADDRESS_NV
#  define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
#endif
#ifndef GL_ELEMENT_ARRAY_ADDRESS_NV
#  define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
#  define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
#endif
#ifndef GL_VERTEX_ARRAY_LENGTH_NV
#  define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
#endif
#ifndef GL_NORMAL_ARRAY_LENGTH_NV
#  define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
#endif
#ifndef GL_COLOR_ARRAY_LENGTH_NV
#  define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
#endif
#ifndef GL_INDEX_ARRAY_LENGTH_NV
#  define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LENGTH_NV
#  define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LENGTH_NV
#  define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
#  define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#endif
#ifndef GL_FOG_COORD_ARRAY_LENGTH_NV
#  define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
#endif
#ifndef GL_ELEMENT_ARRAY_LENGTH_NV
#  define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
#endif
#ifndef GL_DRAW_INDIRECT_UNIFIED_NV
#  define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
#endif
#ifndef GL_DRAW_INDIRECT_ADDRESS_NV
#  define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
#endif
#ifndef GL_DRAW_INDIRECT_LENGTH_NV
#  define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
typedef void (APIENTRYP PFNGLUXBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
typedef void (APIENTRYP PFNGLUXNORMALFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
typedef void (APIENTRYP PFNGLUXCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
typedef void (APIENTRYP PFNGLUXINDEXFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
typedef void (APIENTRYP PFNGLUXTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
typedef void (APIENTRYP PFNGLUXEDGEFLAGFORMATNVPROC) (GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
typedef void (APIENTRYP PFNGLUXFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
extern PFNGLUXBUFFERADDRESSRANGENVPROC glBufferAddressRangeNV;
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
extern PFNGLUXVERTEXFORMATNVPROC glVertexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
extern PFNGLUXNORMALFORMATNVPROC glNormalFormatNV;
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
extern PFNGLUXCOLORFORMATNVPROC glColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
extern PFNGLUXINDEXFORMATNVPROC glIndexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
extern PFNGLUXTEXCOORDFORMATNVPROC glTexCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
extern PFNGLUXEDGEFLAGFORMATNVPROC glEdgeFlagFormatNV;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
extern PFNGLUXSECONDARYCOLORFORMATNVPROC glSecondaryColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
extern PFNGLUXFOGCOORDFORMATNVPROC glFogCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
extern PFNGLUXVERTEXATTRIBFORMATNVPROC glVertexAttribFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
extern PFNGLUXVERTEXATTRIBIFORMATNVPROC glVertexAttribIFormatNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
extern PFNGLUXGETINTEGERUI64I_VNVPROC glGetIntegerui64i_vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:30 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_vertex_buffer_unified_memory__
#define __GLUX_GL_NV_vertex_buffer_unified_memory__

GLUX_NEW_PLUGIN(GL_NV_vertex_buffer_unified_memory);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
#  define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#endif
#ifndef GL_ELEMENT_ARRAY_UNIFIED_NV
#  define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#endif
#ifndef GL_VERTEX_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
#endif
#ifndef GL_NORMAL_ARRAY_ADDRESS_NV
#  define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
#endif
#ifndef GL_COLOR_ARRAY_ADDRESS_NV
#  define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
#endif
#ifndef GL_INDEX_ARRAY_ADDRESS_NV
#  define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
#  define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#endif
#ifndef GL_EDGE_FLAG_ARRAY_ADDRESS_NV
#  define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
#  define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#endif
#ifndef GL_FOG_COORD_ARRAY_ADDRESS_NV
#  define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
#endif
#ifndef GL_ELEMENT_ARRAY_ADDRESS_NV
#  define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
#  define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
#endif
#ifndef GL_VERTEX_ARRAY_LENGTH_NV
#  define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
#endif
#ifndef GL_NORMAL_ARRAY_LENGTH_NV
#  define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
#endif
#ifndef GL_COLOR_ARRAY_LENGTH_NV
#  define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
#endif
#ifndef GL_INDEX_ARRAY_LENGTH_NV
#  define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LENGTH_NV
#  define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LENGTH_NV
#  define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
#  define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#endif
#ifndef GL_FOG_COORD_ARRAY_LENGTH_NV
#  define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
#endif
#ifndef GL_ELEMENT_ARRAY_LENGTH_NV
#  define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
#endif
#ifndef GL_DRAW_INDIRECT_UNIFIED_NV
#  define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
#endif
#ifndef GL_DRAW_INDIRECT_ADDRESS_NV
#  define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
#endif
#ifndef GL_DRAW_INDIRECT_LENGTH_NV
#  define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
typedef void (APIENTRYP PFNGLUXBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
typedef void (APIENTRYP PFNGLUXNORMALFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
typedef void (APIENTRYP PFNGLUXCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
typedef void (APIENTRYP PFNGLUXINDEXFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
typedef void (APIENTRYP PFNGLUXTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
typedef void (APIENTRYP PFNGLUXEDGEFLAGFORMATNVPROC) (GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
typedef void (APIENTRYP PFNGLUXFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
extern PFNGLUXBUFFERADDRESSRANGENVPROC glBufferAddressRangeNV;
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
extern PFNGLUXVERTEXFORMATNVPROC glVertexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
extern PFNGLUXNORMALFORMATNVPROC glNormalFormatNV;
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
extern PFNGLUXCOLORFORMATNVPROC glColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
extern PFNGLUXINDEXFORMATNVPROC glIndexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
extern PFNGLUXTEXCOORDFORMATNVPROC glTexCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
extern PFNGLUXEDGEFLAGFORMATNVPROC glEdgeFlagFormatNV;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
extern PFNGLUXSECONDARYCOLORFORMATNVPROC glSecondaryColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
extern PFNGLUXFOGCOORDFORMATNVPROC glFogCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
extern PFNGLUXVERTEXATTRIBFORMATNVPROC glVertexAttribFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
extern PFNGLUXVERTEXATTRIBIFORMATNVPROC glVertexAttribIFormatNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
extern PFNGLUXGETINTEGERUI64I_VNVPROC glGetIntegerui64i_vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:33 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_vertex_buffer_unified_memory__
#define __GLUX_GL_NV_vertex_buffer_unified_memory__

GLUX_NEW_PLUGIN(GL_NV_vertex_buffer_unified_memory);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
#  define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#endif
#ifndef GL_ELEMENT_ARRAY_UNIFIED_NV
#  define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#endif
#ifndef GL_VERTEX_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
#endif
#ifndef GL_NORMAL_ARRAY_ADDRESS_NV
#  define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
#endif
#ifndef GL_COLOR_ARRAY_ADDRESS_NV
#  define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
#endif
#ifndef GL_INDEX_ARRAY_ADDRESS_NV
#  define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
#  define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#endif
#ifndef GL_EDGE_FLAG_ARRAY_ADDRESS_NV
#  define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
#  define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#endif
#ifndef GL_FOG_COORD_ARRAY_ADDRESS_NV
#  define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
#endif
#ifndef GL_ELEMENT_ARRAY_ADDRESS_NV
#  define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
#  define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
#endif
#ifndef GL_VERTEX_ARRAY_LENGTH_NV
#  define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
#endif
#ifndef GL_NORMAL_ARRAY_LENGTH_NV
#  define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
#endif
#ifndef GL_COLOR_ARRAY_LENGTH_NV
#  define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
#endif
#ifndef GL_INDEX_ARRAY_LENGTH_NV
#  define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LENGTH_NV
#  define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LENGTH_NV
#  define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
#  define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#endif
#ifndef GL_FOG_COORD_ARRAY_LENGTH_NV
#  define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
#endif
#ifndef GL_ELEMENT_ARRAY_LENGTH_NV
#  define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
#endif
#ifndef GL_DRAW_INDIRECT_UNIFIED_NV
#  define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
#endif
#ifndef GL_DRAW_INDIRECT_ADDRESS_NV
#  define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
#endif
#ifndef GL_DRAW_INDIRECT_LENGTH_NV
#  define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
typedef void (APIENTRYP PFNGLUXBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
typedef void (APIENTRYP PFNGLUXNORMALFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
typedef void (APIENTRYP PFNGLUXCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
typedef void (APIENTRYP PFNGLUXINDEXFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
typedef void (APIENTRYP PFNGLUXTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
typedef void (APIENTRYP PFNGLUXEDGEFLAGFORMATNVPROC) (GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
typedef void (APIENTRYP PFNGLUXFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
extern PFNGLUXBUFFERADDRESSRANGENVPROC glBufferAddressRangeNV;
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
extern PFNGLUXVERTEXFORMATNVPROC glVertexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
extern PFNGLUXNORMALFORMATNVPROC glNormalFormatNV;
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
extern PFNGLUXCOLORFORMATNVPROC glColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
extern PFNGLUXINDEXFORMATNVPROC glIndexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
extern PFNGLUXTEXCOORDFORMATNVPROC glTexCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
extern PFNGLUXEDGEFLAGFORMATNVPROC glEdgeFlagFormatNV;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
extern PFNGLUXSECONDARYCOLORFORMATNVPROC glSecondaryColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
extern PFNGLUXFOGCOORDFORMATNVPROC glFogCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
extern PFNGLUXVERTEXATTRIBFORMATNVPROC glVertexAttribFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
extern PFNGLUXVERTEXATTRIBIFORMATNVPROC glVertexAttribIFormatNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
extern PFNGLUXGETINTEGERUI64I_VNVPROC glGetIntegerui64i_vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:55 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_vertex_buffer_unified_memory__
#define __GLUX_GL_NV_vertex_buffer_unified_memory__

GLUX_NEW_PLUGIN(GL_NV_vertex_buffer_unified_memory);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
#  define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#endif
#ifndef GL_ELEMENT_ARRAY_UNIFIED_NV
#  define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#endif
#ifndef GL_VERTEX_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
#endif
#ifndef GL_NORMAL_ARRAY_ADDRESS_NV
#  define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
#endif
#ifndef GL_COLOR_ARRAY_ADDRESS_NV
#  define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
#endif
#ifndef GL_INDEX_ARRAY_ADDRESS_NV
#  define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
#  define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#endif
#ifndef GL_EDGE_FLAG_ARRAY_ADDRESS_NV
#  define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
#  define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#endif
#ifndef GL_FOG_COORD_ARRAY_ADDRESS_NV
#  define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
#endif
#ifndef GL_ELEMENT_ARRAY_ADDRESS_NV
#  define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
#  define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
#endif
#ifndef GL_VERTEX_ARRAY_LENGTH_NV
#  define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
#endif
#ifndef GL_NORMAL_ARRAY_LENGTH_NV
#  define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
#endif
#ifndef GL_COLOR_ARRAY_LENGTH_NV
#  define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
#endif
#ifndef GL_INDEX_ARRAY_LENGTH_NV
#  define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LENGTH_NV
#  define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LENGTH_NV
#  define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
#  define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#endif
#ifndef GL_FOG_COORD_ARRAY_LENGTH_NV
#  define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
#endif
#ifndef GL_ELEMENT_ARRAY_LENGTH_NV
#  define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
#endif
#ifndef GL_DRAW_INDIRECT_UNIFIED_NV
#  define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
#endif
#ifndef GL_DRAW_INDIRECT_ADDRESS_NV
#  define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
#endif
#ifndef GL_DRAW_INDIRECT_LENGTH_NV
#  define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
typedef void (APIENTRYP PFNGLUXBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
typedef void (APIENTRYP PFNGLUXNORMALFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
typedef void (APIENTRYP PFNGLUXCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
typedef void (APIENTRYP PFNGLUXINDEXFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
typedef void (APIENTRYP PFNGLUXTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
typedef void (APIENTRYP PFNGLUXEDGEFLAGFORMATNVPROC) (GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
typedef void (APIENTRYP PFNGLUXFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
extern PFNGLUXBUFFERADDRESSRANGENVPROC glBufferAddressRangeNV;
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
extern PFNGLUXVERTEXFORMATNVPROC glVertexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
extern PFNGLUXNORMALFORMATNVPROC glNormalFormatNV;
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
extern PFNGLUXCOLORFORMATNVPROC glColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
extern PFNGLUXINDEXFORMATNVPROC glIndexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
extern PFNGLUXTEXCOORDFORMATNVPROC glTexCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
extern PFNGLUXEDGEFLAGFORMATNVPROC glEdgeFlagFormatNV;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
extern PFNGLUXSECONDARYCOLORFORMATNVPROC glSecondaryColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
extern PFNGLUXFOGCOORDFORMATNVPROC glFogCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
extern PFNGLUXVERTEXATTRIBFORMATNVPROC glVertexAttribFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
extern PFNGLUXVERTEXATTRIBIFORMATNVPROC glVertexAttribIFormatNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
extern PFNGLUXGETINTEGERUI64I_VNVPROC glGetIntegerui64i_vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:29:06 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_vertex_buffer_unified_memory__
#define __GLUX_GL_NV_vertex_buffer_unified_memory__

GLUX_NEW_PLUGIN(GL_NV_vertex_buffer_unified_memory);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
#  define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#endif
#ifndef GL_ELEMENT_ARRAY_UNIFIED_NV
#  define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#endif
#ifndef GL_VERTEX_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
#endif
#ifndef GL_NORMAL_ARRAY_ADDRESS_NV
#  define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
#endif
#ifndef GL_COLOR_ARRAY_ADDRESS_NV
#  define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
#endif
#ifndef GL_INDEX_ARRAY_ADDRESS_NV
#  define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
#  define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#endif
#ifndef GL_EDGE_FLAG_ARRAY_ADDRESS_NV
#  define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
#  define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#endif
#ifndef GL_FOG_COORD_ARRAY_ADDRESS_NV
#  define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
#endif
#ifndef GL_ELEMENT_ARRAY_ADDRESS_NV
#  define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
#  define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
#endif
#ifndef GL_VERTEX_ARRAY_LENGTH_NV
#  define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
#endif
#ifndef GL_NORMAL_ARRAY_LENGTH_NV
#  define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
#endif
#ifndef GL_COLOR_ARRAY_LENGTH_NV
#  define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
#endif
#ifndef GL_INDEX_ARRAY_LENGTH_NV
#  define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LENGTH_NV
#  define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LENGTH_NV
#  define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
#  define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#endif
#ifndef GL_FOG_COORD_ARRAY_LENGTH_NV
#  define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
#endif
#ifndef GL_ELEMENT_ARRAY_LENGTH_NV
#  define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
#endif
#ifndef GL_DRAW_INDIRECT_UNIFIED_NV
#  define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
#endif
#ifndef GL_DRAW_INDIRECT_ADDRESS_NV
#  define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
#endif
#ifndef GL_DRAW_INDIRECT_LENGTH_NV
#  define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
typedef void (APIENTRYP PFNGLUXBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
typedef void (APIENTRYP PFNGLUXNORMALFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
typedef void (APIENTRYP PFNGLUXCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
typedef void (APIENTRYP PFNGLUXINDEXFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
typedef void (APIENTRYP PFNGLUXTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
typedef void (APIENTRYP PFNGLUXEDGEFLAGFORMATNVPROC) (GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
typedef void (APIENTRYP PFNGLUXFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
extern PFNGLUXBUFFERADDRESSRANGENVPROC glBufferAddressRangeNV;
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
extern PFNGLUXVERTEXFORMATNVPROC glVertexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
extern PFNGLUXNORMALFORMATNVPROC glNormalFormatNV;
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
extern PFNGLUXCOLORFORMATNVPROC glColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
extern PFNGLUXINDEXFORMATNVPROC glIndexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
extern PFNGLUXTEXCOORDFORMATNVPROC glTexCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
extern PFNGLUXEDGEFLAGFORMATNVPROC glEdgeFlagFormatNV;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
extern PFNGLUXSECONDARYCOLORFORMATNVPROC glSecondaryColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
extern PFNGLUXFOGCOORDFORMATNVPROC glFogCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
extern PFNGLUXVERTEXATTRIBFORMATNVPROC glVertexAttribFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
extern PFNGLUXVERTEXATTRIBIFORMATNVPROC glVertexAttribIFormatNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
extern PFNGLUXGETINTEGERUI64I_VNVPROC glGetIntegerui64i_vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:17:07 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_vertex_buffer_unified_memory__
#define __GLUX_GL_NV_vertex_buffer_unified_memory__

GLUX_NEW_PLUGIN(GL_NV_vertex_buffer_unified_memory);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
#  define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#endif
#ifndef GL_ELEMENT_ARRAY_UNIFIED_NV
#  define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#endif
#ifndef GL_VERTEX_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
#endif
#ifndef GL_NORMAL_ARRAY_ADDRESS_NV
#  define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
#endif
#ifndef GL_COLOR_ARRAY_ADDRESS_NV
#  define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
#endif
#ifndef GL_INDEX_ARRAY_ADDRESS_NV
#  define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
#  define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#endif
#ifndef GL_EDGE_FLAG_ARRAY_ADDRESS_NV
#  define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
#  define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#endif
#ifndef GL_FOG_COORD_ARRAY_ADDRESS_NV
#  define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
#endif
#ifndef GL_ELEMENT_ARRAY_ADDRESS_NV
#  define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
#  define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
#endif
#ifndef GL_VERTEX_ARRAY_LENGTH_NV
#  define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
#endif
#ifndef GL_NORMAL_ARRAY_LENGTH_NV
#  define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
#endif
#ifndef GL_COLOR_ARRAY_LENGTH_NV
#  define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
#endif
#ifndef GL_INDEX_ARRAY_LENGTH_NV
#  define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LENGTH_NV
#  define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LENGTH_NV
#  define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
#  define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#endif
#ifndef GL_FOG_COORD_ARRAY_LENGTH_NV
#  define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
#endif
#ifndef GL_ELEMENT_ARRAY_LENGTH_NV
#  define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
#endif
#ifndef GL_DRAW_INDIRECT_UNIFIED_NV
#  define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
#endif
#ifndef GL_DRAW_INDIRECT_ADDRESS_NV
#  define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
#endif
#ifndef GL_DRAW_INDIRECT_LENGTH_NV
#  define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
typedef void (APIENTRYP PFNGLUXBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
typedef void (APIENTRYP PFNGLUXNORMALFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
typedef void (APIENTRYP PFNGLUXCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
typedef void (APIENTRYP PFNGLUXINDEXFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
typedef void (APIENTRYP PFNGLUXTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
typedef void (APIENTRYP PFNGLUXEDGEFLAGFORMATNVPROC) (GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
typedef void (APIENTRYP PFNGLUXFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
extern PFNGLUXBUFFERADDRESSRANGENVPROC glBufferAddressRangeNV;
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
extern PFNGLUXVERTEXFORMATNVPROC glVertexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
extern PFNGLUXNORMALFORMATNVPROC glNormalFormatNV;
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
extern PFNGLUXCOLORFORMATNVPROC glColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
extern PFNGLUXINDEXFORMATNVPROC glIndexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
extern PFNGLUXTEXCOORDFORMATNVPROC glTexCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
extern PFNGLUXEDGEFLAGFORMATNVPROC glEdgeFlagFormatNV;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
extern PFNGLUXSECONDARYCOLORFORMATNVPROC glSecondaryColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
extern PFNGLUXFOGCOORDFORMATNVPROC glFogCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
extern PFNGLUXVERTEXATTRIBFORMATNVPROC glVertexAttribFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
extern PFNGLUXVERTEXATTRIBIFORMATNVPROC glVertexAttribIFormatNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
extern PFNGLUXGETINTEGERUI64I_VNVPROC glGetIntegerui64i_vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_vertex_buffer_unified_memory__
#define __GLUX_GL_NV_vertex_buffer_unified_memory__

GLUX_NEW_PLUGIN(GL_NV_vertex_buffer_unified_memory);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
#  define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#endif
#ifndef GL_ELEMENT_ARRAY_UNIFIED_NV
#  define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#endif
#ifndef GL_VERTEX_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
#endif
#ifndef GL_NORMAL_ARRAY_ADDRESS_NV
#  define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
#endif
#ifndef GL_COLOR_ARRAY_ADDRESS_NV
#  define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
#endif
#ifndef GL_INDEX_ARRAY_ADDRESS_NV
#  define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
#  define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#endif
#ifndef GL_EDGE_FLAG_ARRAY_ADDRESS_NV
#  define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
#  define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#endif
#ifndef GL_FOG_COORD_ARRAY_ADDRESS_NV
#  define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
#endif
#ifndef GL_ELEMENT_ARRAY_ADDRESS_NV
#  define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
#  define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
#endif
#ifndef GL_VERTEX_ARRAY_LENGTH_NV
#  define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
#endif
#ifndef GL_NORMAL_ARRAY_LENGTH_NV
#  define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
#endif
#ifndef GL_COLOR_ARRAY_LENGTH_NV
#  define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
#endif
#ifndef GL_INDEX_ARRAY_LENGTH_NV
#  define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LENGTH_NV
#  define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LENGTH_NV
#  define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
#  define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#endif
#ifndef GL_FOG_COORD_ARRAY_LENGTH_NV
#  define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
#endif
#ifndef GL_ELEMENT_ARRAY_LENGTH_NV
#  define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
#endif
#ifndef GL_DRAW_INDIRECT_UNIFIED_NV
#  define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
#endif
#ifndef GL_DRAW_INDIRECT_ADDRESS_NV
#  define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
#endif
#ifndef GL_DRAW_INDIRECT_LENGTH_NV
#  define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
typedef void (APIENTRYP PFNGLUXBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
typedef void (APIENTRYP PFNGLUXNORMALFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
typedef void (APIENTRYP PFNGLUXCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
typedef void (APIENTRYP PFNGLUXINDEXFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
typedef void (APIENTRYP PFNGLUXTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
typedef void (APIENTRYP PFNGLUXEDGEFLAGFORMATNVPROC) (GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
typedef void (APIENTRYP PFNGLUXFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
extern PFNGLUXBUFFERADDRESSRANGENVPROC glBufferAddressRangeNV;
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
extern PFNGLUXVERTEXFORMATNVPROC glVertexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
extern PFNGLUXNORMALFORMATNVPROC glNormalFormatNV;
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
extern PFNGLUXCOLORFORMATNVPROC glColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
extern PFNGLUXINDEXFORMATNVPROC glIndexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
extern PFNGLUXTEXCOORDFORMATNVPROC glTexCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
extern PFNGLUXEDGEFLAGFORMATNVPROC glEdgeFlagFormatNV;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
extern PFNGLUXSECONDARYCOLORFORMATNVPROC glSecondaryColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
extern PFNGLUXFOGCOORDFORMATNVPROC glFogCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
extern PFNGLUXVERTEXATTRIBFORMATNVPROC glVertexAttribFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
extern PFNGLUXVERTEXATTRIBIFORMATNVPROC glVertexAttribIFormatNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
extern PFNGLUXGETINTEGERUI64I_VNVPROC glGetIntegerui64i_vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:21 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_vertex_buffer_unified_memory__
#define __GLUX_GL_NV_vertex_buffer_unified_memory__

GLUX_NEW_PLUGIN(GL_NV_vertex_buffer_unified_memory);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
#  define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#endif
#ifndef GL_ELEMENT_ARRAY_UNIFIED_NV
#  define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#endif
#ifndef GL_VERTEX_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
#endif
#ifndef GL_NORMAL_ARRAY_ADDRESS_NV
#  define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
#endif
#ifndef GL_COLOR_ARRAY_ADDRESS_NV
#  define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
#endif
#ifndef GL_INDEX_ARRAY_ADDRESS_NV
#  define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
#  define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#endif
#ifndef GL_EDGE_FLAG_ARRAY_ADDRESS_NV
#  define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
#  define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#endif
#ifndef GL_FOG_COORD_ARRAY_ADDRESS_NV
#  define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
#endif
#ifndef GL_ELEMENT_ARRAY_ADDRESS_NV
#  define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
#  define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
#endif
#ifndef GL_VERTEX_ARRAY_LENGTH_NV
#  define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
#endif
#ifndef GL_NORMAL_ARRAY_LENGTH_NV
#  define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
#endif
#ifndef GL_COLOR_ARRAY_LENGTH_NV
#  define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
#endif
#ifndef GL_INDEX_ARRAY_LENGTH_NV
#  define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LENGTH_NV
#  define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LENGTH_NV
#  define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
#  define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#endif
#ifndef GL_FOG_COORD_ARRAY_LENGTH_NV
#  define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
#endif
#ifndef GL_ELEMENT_ARRAY_LENGTH_NV
#  define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
#endif
#ifndef GL_DRAW_INDIRECT_UNIFIED_NV
#  define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
#endif
#ifndef GL_DRAW_INDIRECT_ADDRESS_NV
#  define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
#endif
#ifndef GL_DRAW_INDIRECT_LENGTH_NV
#  define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
typedef void (APIENTRYP PFNGLUXBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
typedef void (APIENTRYP PFNGLUXNORMALFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
typedef void (APIENTRYP PFNGLUXCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
typedef void (APIENTRYP PFNGLUXINDEXFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
typedef void (APIENTRYP PFNGLUXTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
typedef void (APIENTRYP PFNGLUXEDGEFLAGFORMATNVPROC) (GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
typedef void (APIENTRYP PFNGLUXFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
extern PFNGLUXBUFFERADDRESSRANGENVPROC glBufferAddressRangeNV;
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
extern PFNGLUXVERTEXFORMATNVPROC glVertexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
extern PFNGLUXNORMALFORMATNVPROC glNormalFormatNV;
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
extern PFNGLUXCOLORFORMATNVPROC glColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
extern PFNGLUXINDEXFORMATNVPROC glIndexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
extern PFNGLUXTEXCOORDFORMATNVPROC glTexCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
extern PFNGLUXEDGEFLAGFORMATNVPROC glEdgeFlagFormatNV;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
extern PFNGLUXSECONDARYCOLORFORMATNVPROC glSecondaryColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
extern PFNGLUXFOGCOORDFORMATNVPROC glFogCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
extern PFNGLUXVERTEXATTRIBFORMATNVPROC glVertexAttribFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
extern PFNGLUXVERTEXATTRIBIFORMATNVPROC glVertexAttribIFormatNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
extern PFNGLUXGETINTEGERUI64I_VNVPROC glGetIntegerui64i_vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:02 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_vertex_buffer_unified_memory__
#define __GLUX_GL_NV_vertex_buffer_unified_memory__

GLUX_NEW_PLUGIN(GL_NV_vertex_buffer_unified_memory);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
#  define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#endif
#ifndef GL_ELEMENT_ARRAY_UNIFIED_NV
#  define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#endif
#ifndef GL_VERTEX_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
#endif
#ifndef GL_NORMAL_ARRAY_ADDRESS_NV
#  define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
#endif
#ifndef GL_COLOR_ARRAY_ADDRESS_NV
#  define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
#endif
#ifndef GL_INDEX_ARRAY_ADDRESS_NV
#  define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
#  define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#endif
#ifndef GL_EDGE_FLAG_ARRAY_ADDRESS_NV
#  define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
#  define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#endif
#ifndef GL_FOG_COORD_ARRAY_ADDRESS_NV
#  define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
#endif
#ifndef GL_ELEMENT_ARRAY_ADDRESS_NV
#  define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
#  define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
#endif
#ifndef GL_VERTEX_ARRAY_LENGTH_NV
#  define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
#endif
#ifndef GL_NORMAL_ARRAY_LENGTH_NV
#  define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
#endif
#ifndef GL_COLOR_ARRAY_LENGTH_NV
#  define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
#endif
#ifndef GL_INDEX_ARRAY_LENGTH_NV
#  define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LENGTH_NV
#  define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LENGTH_NV
#  define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
#  define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#endif
#ifndef GL_FOG_COORD_ARRAY_LENGTH_NV
#  define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
#endif
#ifndef GL_ELEMENT_ARRAY_LENGTH_NV
#  define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
#endif
#ifndef GL_DRAW_INDIRECT_UNIFIED_NV
#  define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
#endif
#ifndef GL_DRAW_INDIRECT_ADDRESS_NV
#  define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
#endif
#ifndef GL_DRAW_INDIRECT_LENGTH_NV
#  define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
typedef void (APIENTRYP PFNGLUXBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
typedef void (APIENTRYP PFNGLUXNORMALFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
typedef void (APIENTRYP PFNGLUXCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
typedef void (APIENTRYP PFNGLUXINDEXFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
typedef void (APIENTRYP PFNGLUXTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
typedef void (APIENTRYP PFNGLUXEDGEFLAGFORMATNVPROC) (GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
typedef void (APIENTRYP PFNGLUXFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
extern PFNGLUXBUFFERADDRESSRANGENVPROC glBufferAddressRangeNV;
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
extern PFNGLUXVERTEXFORMATNVPROC glVertexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
extern PFNGLUXNORMALFORMATNVPROC glNormalFormatNV;
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
extern PFNGLUXCOLORFORMATNVPROC glColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
extern PFNGLUXINDEXFORMATNVPROC glIndexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
extern PFNGLUXTEXCOORDFORMATNVPROC glTexCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
extern PFNGLUXEDGEFLAGFORMATNVPROC glEdgeFlagFormatNV;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
extern PFNGLUXSECONDARYCOLORFORMATNVPROC glSecondaryColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
extern PFNGLUXFOGCOORDFORMATNVPROC glFogCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
extern PFNGLUXVERTEXATTRIBFORMATNVPROC glVertexAttribFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
extern PFNGLUXVERTEXATTRIBIFORMATNVPROC glVertexAttribIFormatNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
extern PFNGLUXGETINTEGERUI64I_VNVPROC glGetIntegerui64i_vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:09 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_vertex_buffer_unified_memory__
#define __GLUX_GL_NV_vertex_buffer_unified_memory__

GLUX_NEW_PLUGIN(GL_NV_vertex_buffer_unified_memory);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
#  define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#endif
#ifndef GL_ELEMENT_ARRAY_UNIFIED_NV
#  define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#endif
#ifndef GL_VERTEX_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
#endif
#ifndef GL_NORMAL_ARRAY_ADDRESS_NV
#  define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
#endif
#ifndef GL_COLOR_ARRAY_ADDRESS_NV
#  define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
#endif
#ifndef GL_INDEX_ARRAY_ADDRESS_NV
#  define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
#  define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#endif
#ifndef GL_EDGE_FLAG_ARRAY_ADDRESS_NV
#  define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
#  define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#endif
#ifndef GL_FOG_COORD_ARRAY_ADDRESS_NV
#  define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
#endif
#ifndef GL_ELEMENT_ARRAY_ADDRESS_NV
#  define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
#  define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
#endif
#ifndef GL_VERTEX_ARRAY_LENGTH_NV
#  define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
#endif
#ifndef GL_NORMAL_ARRAY_LENGTH_NV
#  define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
#endif
#ifndef GL_COLOR_ARRAY_LENGTH_NV
#  define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
#endif
#ifndef GL_INDEX_ARRAY_LENGTH_NV
#  define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LENGTH_NV
#  define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LENGTH_NV
#  define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
#  define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#endif
#ifndef GL_FOG_COORD_ARRAY_LENGTH_NV
#  define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
#endif
#ifndef GL_ELEMENT_ARRAY_LENGTH_NV
#  define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
#endif
#ifndef GL_DRAW_INDIRECT_UNIFIED_NV
#  define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
#endif
#ifndef GL_DRAW_INDIRECT_ADDRESS_NV
#  define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
#endif
#ifndef GL_DRAW_INDIRECT_LENGTH_NV
#  define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
typedef void (APIENTRYP PFNGLUXBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
typedef void (APIENTRYP PFNGLUXNORMALFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
typedef void (APIENTRYP PFNGLUXCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
typedef void (APIENTRYP PFNGLUXINDEXFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
typedef void (APIENTRYP PFNGLUXTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
typedef void (APIENTRYP PFNGLUXEDGEFLAGFORMATNVPROC) (GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
typedef void (APIENTRYP PFNGLUXFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
extern PFNGLUXBUFFERADDRESSRANGENVPROC glBufferAddressRangeNV;
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
extern PFNGLUXVERTEXFORMATNVPROC glVertexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
extern PFNGLUXNORMALFORMATNVPROC glNormalFormatNV;
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
extern PFNGLUXCOLORFORMATNVPROC glColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
extern PFNGLUXINDEXFORMATNVPROC glIndexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
extern PFNGLUXTEXCOORDFORMATNVPROC glTexCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
extern PFNGLUXEDGEFLAGFORMATNVPROC glEdgeFlagFormatNV;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
extern PFNGLUXSECONDARYCOLORFORMATNVPROC glSecondaryColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
extern PFNGLUXFOGCOORDFORMATNVPROC glFogCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
extern PFNGLUXVERTEXATTRIBFORMATNVPROC glVertexAttribFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
extern PFNGLUXVERTEXATTRIBIFORMATNVPROC glVertexAttribIFormatNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
extern PFNGLUXGETINTEGERUI64I_VNVPROC glGetIntegerui64i_vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:24 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_vertex_buffer_unified_memory__
#define __GLUX_GL_NV_vertex_buffer_unified_memory__

GLUX_NEW_PLUGIN(GL_NV_vertex_buffer_unified_memory);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
#  define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#endif
#ifndef GL_ELEMENT_ARRAY_UNIFIED_NV
#  define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#endif
#ifndef GL_VERTEX_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
#endif
#ifndef GL_NORMAL_ARRAY_ADDRESS_NV
#  define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
#endif
#ifndef GL_COLOR_ARRAY_ADDRESS_NV
#  define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
#endif
#ifndef GL_INDEX_ARRAY_ADDRESS_NV
#  define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
#  define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#endif
#ifndef GL_EDGE_FLAG_ARRAY_ADDRESS_NV
#  define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
#  define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#endif
#ifndef GL_FOG_COORD_ARRAY_ADDRESS_NV
#  define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
#endif
#ifndef GL_ELEMENT_ARRAY_ADDRESS_NV
#  define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
#  define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
#endif
#ifndef GL_VERTEX_ARRAY_LENGTH_NV
#  define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
#endif
#ifndef GL_NORMAL_ARRAY_LENGTH_NV
#  define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
#endif
#ifndef GL_COLOR_ARRAY_LENGTH_NV
#  define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
#endif
#ifndef GL_INDEX_ARRAY_LENGTH_NV
#  define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LENGTH_NV
#  define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LENGTH_NV
#  define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
#  define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#endif
#ifndef GL_FOG_COORD_ARRAY_LENGTH_NV
#  define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
#endif
#ifndef GL_ELEMENT_ARRAY_LENGTH_NV
#  define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
#endif
#ifndef GL_DRAW_INDIRECT_UNIFIED_NV
#  define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
#endif
#ifndef GL_DRAW_INDIRECT_ADDRESS_NV
#  define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
#endif
#ifndef GL_DRAW_INDIRECT_LENGTH_NV
#  define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
typedef void (APIENTRYP PFNGLUXBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
typedef void (APIENTRYP PFNGLUXNORMALFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
typedef void (APIENTRYP PFNGLUXCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
typedef void (APIENTRYP PFNGLUXINDEXFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
typedef void (APIENTRYP PFNGLUXTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
typedef void (APIENTRYP PFNGLUXEDGEFLAGFORMATNVPROC) (GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
typedef void (APIENTRYP PFNGLUXFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
extern PFNGLUXBUFFERADDRESSRANGENVPROC glBufferAddressRangeNV;
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
extern PFNGLUXVERTEXFORMATNVPROC glVertexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
extern PFNGLUXNORMALFORMATNVPROC glNormalFormatNV;
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
extern PFNGLUXCOLORFORMATNVPROC glColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
extern PFNGLUXINDEXFORMATNVPROC glIndexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
extern PFNGLUXTEXCOORDFORMATNVPROC glTexCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
extern PFNGLUXEDGEFLAGFORMATNVPROC glEdgeFlagFormatNV;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
extern PFNGLUXSECONDARYCOLORFORMATNVPROC glSecondaryColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
extern PFNGLUXFOGCOORDFORMATNVPROC glFogCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
extern PFNGLUXVERTEXATTRIBFORMATNVPROC glVertexAttribFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
extern PFNGLUXVERTEXATTRIBIFORMATNVPROC glVertexAttribIFormatNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
extern PFNGLUXGETINTEGERUI64I_VNVPROC glGetIntegerui64i_vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:52:05 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_vertex_buffer_unified_memory__
#define __GLUX_GL_NV_vertex_buffer_unified_memory__

GLUX_NEW_PLUGIN(GL_NV_vertex_buffer_unified_memory);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
#  define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#endif
#ifndef GL_ELEMENT_ARRAY_UNIFIED_NV
#  define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#endif
#ifndef GL_VERTEX_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
#endif
#ifndef GL_NORMAL_ARRAY_ADDRESS_NV
#  define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
#endif
#ifndef GL_COLOR_ARRAY_ADDRESS_NV
#  define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
#endif
#ifndef GL_INDEX_ARRAY_ADDRESS_NV
#  define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
#  define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#endif
#ifndef GL_EDGE_FLAG_ARRAY_ADDRESS_NV
#  define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
#  define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#endif
#ifndef GL_FOG_COORD_ARRAY_ADDRESS_NV
#  define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
#endif
#ifndef GL_ELEMENT_ARRAY_ADDRESS_NV
#  define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
#  define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
#endif
#ifndef GL_VERTEX_ARRAY_LENGTH_NV
#  define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
#endif
#ifndef GL_NORMAL_ARRAY_LENGTH_NV
#  define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
#endif
#ifndef GL_COLOR_ARRAY_LENGTH_NV
#  define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
#endif
#ifndef GL_INDEX_ARRAY_LENGTH_NV
#  define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LENGTH_NV
#  define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LENGTH_NV
#  define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
#  define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#endif
#ifndef GL_FOG_COORD_ARRAY_LENGTH_NV
#  define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
#endif
#ifndef GL_ELEMENT_ARRAY_LENGTH_NV
#  define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
#endif
#ifndef GL_DRAW_INDIRECT_UNIFIED_NV
#  define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
#endif
#ifndef GL_DRAW_INDIRECT_ADDRESS_NV
#  define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
#endif
#ifndef GL_DRAW_INDIRECT_LENGTH_NV
#  define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
typedef void (APIENTRYP PFNGLUXBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
typedef void (APIENTRYP PFNGLUXNORMALFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
typedef void (APIENTRYP PFNGLUXCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
typedef void (APIENTRYP PFNGLUXINDEXFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
typedef void (APIENTRYP PFNGLUXTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
typedef void (APIENTRYP PFNGLUXEDGEFLAGFORMATNVPROC) (GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
typedef void (APIENTRYP PFNGLUXFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
extern PFNGLUXBUFFERADDRESSRANGENVPROC glBufferAddressRangeNV;
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
extern PFNGLUXVERTEXFORMATNVPROC glVertexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
extern PFNGLUXNORMALFORMATNVPROC glNormalFormatNV;
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
extern PFNGLUXCOLORFORMATNVPROC glColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
extern PFNGLUXINDEXFORMATNVPROC glIndexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
extern PFNGLUXTEXCOORDFORMATNVPROC glTexCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
extern PFNGLUXEDGEFLAGFORMATNVPROC glEdgeFlagFormatNV;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
extern PFNGLUXSECONDARYCOLORFORMATNVPROC glSecondaryColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
extern PFNGLUXFOGCOORDFORMATNVPROC glFogCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
extern PFNGLUXVERTEXATTRIBFORMATNVPROC glVertexAttribFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
extern PFNGLUXVERTEXATTRIBIFORMATNVPROC glVertexAttribIFormatNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
extern PFNGLUXGETINTEGERUI64I_VNVPROC glGetIntegerui64i_vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_vertex_buffer_unified_memory__
#define __GLUX_GL_NV_vertex_buffer_unified_memory__

GLUX_NEW_PLUGIN(GL_NV_vertex_buffer_unified_memory);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
#  define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#endif
#ifndef GL_ELEMENT_ARRAY_UNIFIED_NV
#  define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#endif
#ifndef GL_VERTEX_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
#endif
#ifndef GL_NORMAL_ARRAY_ADDRESS_NV
#  define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
#endif
#ifndef GL_COLOR_ARRAY_ADDRESS_NV
#  define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
#endif
#ifndef GL_INDEX_ARRAY_ADDRESS_NV
#  define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
#  define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#endif
#ifndef GL_EDGE_FLAG_ARRAY_ADDRESS_NV
#  define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
#  define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#endif
#ifndef GL_FOG_COORD_ARRAY_ADDRESS_NV
#  define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
#endif
#ifndef GL_ELEMENT_ARRAY_ADDRESS_NV
#  define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
#  define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
#endif
#ifndef GL_VERTEX_ARRAY_LENGTH_NV
#  define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
#endif
#ifndef GL_NORMAL_ARRAY_LENGTH_NV
#  define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
#endif
#ifndef GL_COLOR_ARRAY_LENGTH_NV
#  define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
#endif
#ifndef GL_INDEX_ARRAY_LENGTH_NV
#  define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LENGTH_NV
#  define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LENGTH_NV
#  define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
#  define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#endif
#ifndef GL_FOG_COORD_ARRAY_LENGTH_NV
#  define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
#endif
#ifndef GL_ELEMENT_ARRAY_LENGTH_NV
#  define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
#endif
#ifndef GL_DRAW_INDIRECT_UNIFIED_NV
#  define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
#endif
#ifndef GL_DRAW_INDIRECT_ADDRESS_NV
#  define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
#endif
#ifndef GL_DRAW_INDIRECT_LENGTH_NV
#  define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
typedef void (APIENTRYP PFNGLUXBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
typedef void (APIENTRYP PFNGLUXNORMALFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
typedef void (APIENTRYP PFNGLUXCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
typedef void (APIENTRYP PFNGLUXINDEXFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
typedef void (APIENTRYP PFNGLUXTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
typedef void (APIENTRYP PFNGLUXEDGEFLAGFORMATNVPROC) (GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
typedef void (APIENTRYP PFNGLUXFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
extern PFNGLUXBUFFERADDRESSRANGENVPROC glBufferAddressRangeNV;
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
extern PFNGLUXVERTEXFORMATNVPROC glVertexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
extern PFNGLUXNORMALFORMATNVPROC glNormalFormatNV;
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
extern PFNGLUXCOLORFORMATNVPROC glColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
extern PFNGLUXINDEXFORMATNVPROC glIndexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
extern PFNGLUXTEXCOORDFORMATNVPROC glTexCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
extern PFNGLUXEDGEFLAGFORMATNVPROC glEdgeFlagFormatNV;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
extern PFNGLUXSECONDARYCOLORFORMATNVPROC glSecondaryColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
extern PFNGLUXFOGCOORDFORMATNVPROC glFogCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
extern PFNGLUXVERTEXATTRIBFORMATNVPROC glVertexAttribFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
extern PFNGLUXVERTEXATTRIBIFORMATNVPROC glVertexAttribIFormatNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
extern PFNGLUXGETINTEGERUI64I_VNVPROC glGetIntegerui64i_vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:07 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_vertex_buffer_unified_memory__
#define __GLUX_GL_NV_vertex_buffer_unified_memory__

GLUX_NEW_PLUGIN(GL_NV_vertex_buffer_unified_memory);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
#  define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#endif
#ifndef GL_ELEMENT_ARRAY_UNIFIED_NV
#  define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#endif
#ifndef GL_VERTEX_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
#endif
#ifndef GL_NORMAL_ARRAY_ADDRESS_NV
#  define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
#endif
#ifndef GL_COLOR_ARRAY_ADDRESS_NV
#  define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
#endif
#ifndef GL_INDEX_ARRAY_ADDRESS_NV
#  define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
#  define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#endif
#ifndef GL_EDGE_FLAG_ARRAY_ADDRESS_NV
#  define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
#  define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#endif
#ifndef GL_FOG_COORD_ARRAY_ADDRESS_NV
#  define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
#endif
#ifndef GL_ELEMENT_ARRAY_ADDRESS_NV
#  define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
#  define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
#endif
#ifndef GL_VERTEX_ARRAY_LENGTH_NV
#  define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
#endif
#ifndef GL_NORMAL_ARRAY_LENGTH_NV
#  define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
#endif
#ifndef GL_COLOR_ARRAY_LENGTH_NV
#  define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
#endif
#ifndef GL_INDEX_ARRAY_LENGTH_NV
#  define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LENGTH_NV
#  define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LENGTH_NV
#  define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
#  define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#endif
#ifndef GL_FOG_COORD_ARRAY_LENGTH_NV
#  define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
#endif
#ifndef GL_ELEMENT_ARRAY_LENGTH_NV
#  define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
#endif
#ifndef GL_DRAW_INDIRECT_UNIFIED_NV
#  define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
#endif
#ifndef GL_DRAW_INDIRECT_ADDRESS_NV
#  define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
#endif
#ifndef GL_DRAW_INDIRECT_LENGTH_NV
#  define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
typedef void (APIENTRYP PFNGLUXBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
typedef void (APIENTRYP PFNGLUXNORMALFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
typedef void (APIENTRYP PFNGLUXCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
typedef void (APIENTRYP PFNGLUXINDEXFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
typedef void (APIENTRYP PFNGLUXTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
typedef void (APIENTRYP PFNGLUXEDGEFLAGFORMATNVPROC) (GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
typedef void (APIENTRYP PFNGLUXFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
extern PFNGLUXBUFFERADDRESSRANGENVPROC glBufferAddressRangeNV;
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
extern PFNGLUXVERTEXFORMATNVPROC glVertexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
extern PFNGLUXNORMALFORMATNVPROC glNormalFormatNV;
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
extern PFNGLUXCOLORFORMATNVPROC glColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
extern PFNGLUXINDEXFORMATNVPROC glIndexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
extern PFNGLUXTEXCOORDFORMATNVPROC glTexCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
extern PFNGLUXEDGEFLAGFORMATNVPROC glEdgeFlagFormatNV;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
extern PFNGLUXSECONDARYCOLORFORMATNVPROC glSecondaryColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
extern PFNGLUXFOGCOORDFORMATNVPROC glFogCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
extern PFNGLUXVERTEXATTRIBFORMATNVPROC glVertexAttribFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
extern PFNGLUXVERTEXATTRIBIFORMATNVPROC glVertexAttribIFormatNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
extern PFNGLUXGETINTEGERUI64I_VNVPROC glGetIntegerui64i_vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:27 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_vertex_buffer_unified_memory__
#define __GLUX_GL_NV_vertex_buffer_unified_memory__

GLUX_NEW_PLUGIN(GL_NV_vertex_buffer_unified_memory);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
#  define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#endif
#ifndef GL_ELEMENT_ARRAY_UNIFIED_NV
#  define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#endif
#ifndef GL_VERTEX_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
#endif
#ifndef GL_NORMAL_ARRAY_ADDRESS_NV
#  define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
#endif
#ifndef GL_COLOR_ARRAY_ADDRESS_NV
#  define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
#endif
#ifndef GL_INDEX_ARRAY_ADDRESS_NV
#  define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
#  define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#endif
#ifndef GL_EDGE_FLAG_ARRAY_ADDRESS_NV
#  define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
#  define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#endif
#ifndef GL_FOG_COORD_ARRAY_ADDRESS_NV
#  define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
#endif
#ifndef GL_ELEMENT_ARRAY_ADDRESS_NV
#  define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
#  define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
#endif
#ifndef GL_VERTEX_ARRAY_LENGTH_NV
#  define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
#endif
#ifndef GL_NORMAL_ARRAY_LENGTH_NV
#  define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
#endif
#ifndef GL_COLOR_ARRAY_LENGTH_NV
#  define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
#endif
#ifndef GL_INDEX_ARRAY_LENGTH_NV
#  define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LENGTH_NV
#  define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LENGTH_NV
#  define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
#  define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#endif
#ifndef GL_FOG_COORD_ARRAY_LENGTH_NV
#  define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
#endif
#ifndef GL_ELEMENT_ARRAY_LENGTH_NV
#  define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
#endif
#ifndef GL_DRAW_INDIRECT_UNIFIED_NV
#  define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
#endif
#ifndef GL_DRAW_INDIRECT_ADDRESS_NV
#  define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
#endif
#ifndef GL_DRAW_INDIRECT_LENGTH_NV
#  define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
typedef void (APIENTRYP PFNGLUXBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
typedef void (APIENTRYP PFNGLUXNORMALFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
typedef void (APIENTRYP PFNGLUXCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
typedef void (APIENTRYP PFNGLUXINDEXFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
typedef void (APIENTRYP PFNGLUXTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
typedef void (APIENTRYP PFNGLUXEDGEFLAGFORMATNVPROC) (GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
typedef void (APIENTRYP PFNGLUXFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
extern PFNGLUXBUFFERADDRESSRANGENVPROC glBufferAddressRangeNV;
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
extern PFNGLUXVERTEXFORMATNVPROC glVertexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
extern PFNGLUXNORMALFORMATNVPROC glNormalFormatNV;
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
extern PFNGLUXCOLORFORMATNVPROC glColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
extern PFNGLUXINDEXFORMATNVPROC glIndexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
extern PFNGLUXTEXCOORDFORMATNVPROC glTexCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
extern PFNGLUXEDGEFLAGFORMATNVPROC glEdgeFlagFormatNV;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
extern PFNGLUXSECONDARYCOLORFORMATNVPROC glSecondaryColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
extern PFNGLUXFOGCOORDFORMATNVPROC glFogCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
extern PFNGLUXVERTEXATTRIBFORMATNVPROC glVertexAttribFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
extern PFNGLUXVERTEXATTRIBIFORMATNVPROC glVertexAttribIFormatNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
extern PFNGLUXGETINTEGERUI64I_VNVPROC glGetIntegerui64i_vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_vertex_buffer_unified_memory__
#define __GLUX_GL_NV_vertex_buffer_unified_memory__

GLUX_NEW_PLUGIN(GL_NV_vertex_buffer_unified_memory);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
#  define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#endif
#ifndef GL_ELEMENT_ARRAY_UNIFIED_NV
#  define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#endif
#ifndef GL_VERTEX_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
#endif
#ifndef GL_NORMAL_ARRAY_ADDRESS_NV
#  define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
#endif
#ifndef GL_COLOR_ARRAY_ADDRESS_NV
#  define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
#endif
#ifndef GL_INDEX_ARRAY_ADDRESS_NV
#  define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
#  define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#endif
#ifndef GL_EDGE_FLAG_ARRAY_ADDRESS_NV
#  define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
#  define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#endif
#ifndef GL_FOG_COORD_ARRAY_ADDRESS_NV
#  define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
#endif
#ifndef GL_ELEMENT_ARRAY_ADDRESS_NV
#  define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
#  define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
#endif
#ifndef GL_VERTEX_ARRAY_LENGTH_NV
#  define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
#endif
#ifndef GL_NORMAL_ARRAY_LENGTH_NV
#  define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
#endif
#ifndef GL_COLOR_ARRAY_LENGTH_NV
#  define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
#endif
#ifndef GL_INDEX_ARRAY_LENGTH_NV
#  define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LENGTH_NV
#  define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LENGTH_NV
#  define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
#  define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#endif
#ifndef GL_FOG_COORD_ARRAY_LENGTH_NV
#  define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
#endif
#ifndef GL_ELEMENT_ARRAY_LENGTH_NV
#  define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
#endif
#ifndef GL_DRAW_INDIRECT_UNIFIED_NV
#  define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
#endif
#ifndef GL_DRAW_INDIRECT_ADDRESS_NV
#  define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
#endif
#ifndef GL_DRAW_INDIRECT_LENGTH_NV
#  define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
typedef void (APIENTRYP PFNGLUXBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
typedef void (APIENTRYP PFNGLUXNORMALFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
typedef void (APIENTRYP PFNGLUXCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
typedef void (APIENTRYP PFNGLUXINDEXFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
typedef void (APIENTRYP PFNGLUXTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
typedef void (APIENTRYP PFNGLUXEDGEFLAGFORMATNVPROC) (GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
typedef void (APIENTRYP PFNGLUXFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
extern PFNGLUXBUFFERADDRESSRANGENVPROC glBufferAddressRangeNV;
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
extern PFNGLUXVERTEXFORMATNVPROC glVertexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
extern PFNGLUXNORMALFORMATNVPROC glNormalFormatNV;
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
extern PFNGLUXCOLORFORMATNVPROC glColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
extern PFNGLUXINDEXFORMATNVPROC glIndexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
extern PFNGLUXTEXCOORDFORMATNVPROC glTexCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
extern PFNGLUXEDGEFLAGFORMATNVPROC glEdgeFlagFormatNV;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
extern PFNGLUXSECONDARYCOLORFORMATNVPROC glSecondaryColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
extern PFNGLUXFOGCOORDFORMATNVPROC glFogCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
extern PFNGLUXVERTEXATTRIBFORMATNVPROC glVertexAttribFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
extern PFNGLUXVERTEXATTRIBIFORMATNVPROC glVertexAttribIFormatNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
extern PFNGLUXGETINTEGERUI64I_VNVPROC glGetIntegerui64i_vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:42:02 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_vertex_buffer_unified_memory__
#define __GLUX_GL_NV_vertex_buffer_unified_memory__

GLUX_NEW_PLUGIN(GL_NV_vertex_buffer_unified_memory);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
#  define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#endif
#ifndef GL_ELEMENT_ARRAY_UNIFIED_NV
#  define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#endif
#ifndef GL_VERTEX_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
#endif
#ifndef GL_NORMAL_ARRAY_ADDRESS_NV
#  define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
#endif
#ifndef GL_COLOR_ARRAY_ADDRESS_NV
#  define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
#endif
#ifndef GL_INDEX_ARRAY_ADDRESS_NV
#  define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
#  define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#endif
#ifndef GL_EDGE_FLAG_ARRAY_ADDRESS_NV
#  define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
#  define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#endif
#ifndef GL_FOG_COORD_ARRAY_ADDRESS_NV
#  define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
#endif
#ifndef GL_ELEMENT_ARRAY_ADDRESS_NV
#  define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
#  define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
#endif
#ifndef GL_VERTEX_ARRAY_LENGTH_NV
#  define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
#endif
#ifndef GL_NORMAL_ARRAY_LENGTH_NV
#  define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
#endif
#ifndef GL_COLOR_ARRAY_LENGTH_NV
#  define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
#endif
#ifndef GL_INDEX_ARRAY_LENGTH_NV
#  define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LENGTH_NV
#  define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LENGTH_NV
#  define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
#  define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#endif
#ifndef GL_FOG_COORD_ARRAY_LENGTH_NV
#  define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
#endif
#ifndef GL_ELEMENT_ARRAY_LENGTH_NV
#  define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
#endif
#ifndef GL_DRAW_INDIRECT_UNIFIED_NV
#  define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
#endif
#ifndef GL_DRAW_INDIRECT_ADDRESS_NV
#  define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
#endif
#ifndef GL_DRAW_INDIRECT_LENGTH_NV
#  define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
typedef void (APIENTRYP PFNGLUXBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
typedef void (APIENTRYP PFNGLUXNORMALFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
typedef void (APIENTRYP PFNGLUXCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
typedef void (APIENTRYP PFNGLUXINDEXFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
typedef void (APIENTRYP PFNGLUXTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
typedef void (APIENTRYP PFNGLUXEDGEFLAGFORMATNVPROC) (GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
typedef void (APIENTRYP PFNGLUXFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
extern PFNGLUXBUFFERADDRESSRANGENVPROC glBufferAddressRangeNV;
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
extern PFNGLUXVERTEXFORMATNVPROC glVertexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
extern PFNGLUXNORMALFORMATNVPROC glNormalFormatNV;
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
extern PFNGLUXCOLORFORMATNVPROC glColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
extern PFNGLUXINDEXFORMATNVPROC glIndexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
extern PFNGLUXTEXCOORDFORMATNVPROC glTexCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
extern PFNGLUXEDGEFLAGFORMATNVPROC glEdgeFlagFormatNV;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
extern PFNGLUXSECONDARYCOLORFORMATNVPROC glSecondaryColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
extern PFNGLUXFOGCOORDFORMATNVPROC glFogCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
extern PFNGLUXVERTEXATTRIBFORMATNVPROC glVertexAttribFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
extern PFNGLUXVERTEXATTRIBIFORMATNVPROC glVertexAttribIFormatNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
extern PFNGLUXGETINTEGERUI64I_VNVPROC glGetIntegerui64i_vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:42 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_vertex_buffer_unified_memory__
#define __GLUX_GL_NV_vertex_buffer_unified_memory__

GLUX_NEW_PLUGIN(GL_NV_vertex_buffer_unified_memory);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
#  define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#endif
#ifndef GL_ELEMENT_ARRAY_UNIFIED_NV
#  define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#endif
#ifndef GL_VERTEX_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
#endif
#ifndef GL_NORMAL_ARRAY_ADDRESS_NV
#  define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
#endif
#ifndef GL_COLOR_ARRAY_ADDRESS_NV
#  define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
#endif
#ifndef GL_INDEX_ARRAY_ADDRESS_NV
#  define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
#  define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#endif
#ifndef GL_EDGE_FLAG_ARRAY_ADDRESS_NV
#  define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
#  define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#endif
#ifndef GL_FOG_COORD_ARRAY_ADDRESS_NV
#  define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
#endif
#ifndef GL_ELEMENT_ARRAY_ADDRESS_NV
#  define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
#  define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
#endif
#ifndef GL_VERTEX_ARRAY_LENGTH_NV
#  define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
#endif
#ifndef GL_NORMAL_ARRAY_LENGTH_NV
#  define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
#endif
#ifndef GL_COLOR_ARRAY_LENGTH_NV
#  define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
#endif
#ifndef GL_INDEX_ARRAY_LENGTH_NV
#  define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LENGTH_NV
#  define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LENGTH_NV
#  define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
#  define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#endif
#ifndef GL_FOG_COORD_ARRAY_LENGTH_NV
#  define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
#endif
#ifndef GL_ELEMENT_ARRAY_LENGTH_NV
#  define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
#endif
#ifndef GL_DRAW_INDIRECT_UNIFIED_NV
#  define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
#endif
#ifndef GL_DRAW_INDIRECT_ADDRESS_NV
#  define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
#endif
#ifndef GL_DRAW_INDIRECT_LENGTH_NV
#  define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
typedef void (APIENTRYP PFNGLUXBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
typedef void (APIENTRYP PFNGLUXNORMALFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
typedef void (APIENTRYP PFNGLUXCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
typedef void (APIENTRYP PFNGLUXINDEXFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
typedef void (APIENTRYP PFNGLUXTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
typedef void (APIENTRYP PFNGLUXEDGEFLAGFORMATNVPROC) (GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
typedef void (APIENTRYP PFNGLUXFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
extern PFNGLUXBUFFERADDRESSRANGENVPROC glBufferAddressRangeNV;
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
extern PFNGLUXVERTEXFORMATNVPROC glVertexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
extern PFNGLUXNORMALFORMATNVPROC glNormalFormatNV;
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
extern PFNGLUXCOLORFORMATNVPROC glColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
extern PFNGLUXINDEXFORMATNVPROC glIndexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
extern PFNGLUXTEXCOORDFORMATNVPROC glTexCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
extern PFNGLUXEDGEFLAGFORMATNVPROC glEdgeFlagFormatNV;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
extern PFNGLUXSECONDARYCOLORFORMATNVPROC glSecondaryColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
extern PFNGLUXFOGCOORDFORMATNVPROC glFogCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
extern PFNGLUXVERTEXATTRIBFORMATNVPROC glVertexAttribFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
extern PFNGLUXVERTEXATTRIBIFORMATNVPROC glVertexAttribIFormatNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
extern PFNGLUXGETINTEGERUI64I_VNVPROC glGetIntegerui64i_vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:10:01 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_vertex_buffer_unified_memory__
#define __GLUX_GL_NV_vertex_buffer_unified_memory__

GLUX_NEW_PLUGIN(GL_NV_vertex_buffer_unified_memory);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
#  define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#endif
#ifndef GL_ELEMENT_ARRAY_UNIFIED_NV
#  define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#endif
#ifndef GL_VERTEX_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
#endif
#ifndef GL_NORMAL_ARRAY_ADDRESS_NV
#  define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
#endif
#ifndef GL_COLOR_ARRAY_ADDRESS_NV
#  define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
#endif
#ifndef GL_INDEX_ARRAY_ADDRESS_NV
#  define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
#  define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#endif
#ifndef GL_EDGE_FLAG_ARRAY_ADDRESS_NV
#  define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
#  define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#endif
#ifndef GL_FOG_COORD_ARRAY_ADDRESS_NV
#  define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
#endif
#ifndef GL_ELEMENT_ARRAY_ADDRESS_NV
#  define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
#  define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
#endif
#ifndef GL_VERTEX_ARRAY_LENGTH_NV
#  define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
#endif
#ifndef GL_NORMAL_ARRAY_LENGTH_NV
#  define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
#endif
#ifndef GL_COLOR_ARRAY_LENGTH_NV
#  define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
#endif
#ifndef GL_INDEX_ARRAY_LENGTH_NV
#  define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LENGTH_NV
#  define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LENGTH_NV
#  define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
#  define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#endif
#ifndef GL_FOG_COORD_ARRAY_LENGTH_NV
#  define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
#endif
#ifndef GL_ELEMENT_ARRAY_LENGTH_NV
#  define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
#endif
#ifndef GL_DRAW_INDIRECT_UNIFIED_NV
#  define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
#endif
#ifndef GL_DRAW_INDIRECT_ADDRESS_NV
#  define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
#endif
#ifndef GL_DRAW_INDIRECT_LENGTH_NV
#  define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
typedef void (APIENTRYP PFNGLUXBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
typedef void (APIENTRYP PFNGLUXNORMALFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
typedef void (APIENTRYP PFNGLUXCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
typedef void (APIENTRYP PFNGLUXINDEXFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
typedef void (APIENTRYP PFNGLUXTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
typedef void (APIENTRYP PFNGLUXEDGEFLAGFORMATNVPROC) (GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
typedef void (APIENTRYP PFNGLUXFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
extern PFNGLUXBUFFERADDRESSRANGENVPROC glBufferAddressRangeNV;
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
extern PFNGLUXVERTEXFORMATNVPROC glVertexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
extern PFNGLUXNORMALFORMATNVPROC glNormalFormatNV;
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
extern PFNGLUXCOLORFORMATNVPROC glColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
extern PFNGLUXINDEXFORMATNVPROC glIndexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
extern PFNGLUXTEXCOORDFORMATNVPROC glTexCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
extern PFNGLUXEDGEFLAGFORMATNVPROC glEdgeFlagFormatNV;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
extern PFNGLUXSECONDARYCOLORFORMATNVPROC glSecondaryColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
extern PFNGLUXFOGCOORDFORMATNVPROC glFogCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
extern PFNGLUXVERTEXATTRIBFORMATNVPROC glVertexAttribFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
extern PFNGLUXVERTEXATTRIBIFORMATNVPROC glVertexAttribIFormatNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
extern PFNGLUXGETINTEGERUI64I_VNVPROC glGetIntegerui64i_vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:20:02 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_vertex_buffer_unified_memory__
#define __GLUX_GL_NV_vertex_buffer_unified_memory__

GLUX_NEW_PLUGIN(GL_NV_vertex_buffer_unified_memory);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
#  define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#endif
#ifndef GL_ELEMENT_ARRAY_UNIFIED_NV
#  define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#endif
#ifndef GL_VERTEX_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
#endif
#ifndef GL_NORMAL_ARRAY_ADDRESS_NV
#  define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
#endif
#ifndef GL_COLOR_ARRAY_ADDRESS_NV
#  define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
#endif
#ifndef GL_INDEX_ARRAY_ADDRESS_NV
#  define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
#  define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#endif
#ifndef GL_EDGE_FLAG_ARRAY_ADDRESS_NV
#  define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
#  define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#endif
#ifndef GL_FOG_COORD_ARRAY_ADDRESS_NV
#  define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
#endif
#ifndef GL_ELEMENT_ARRAY_ADDRESS_NV
#  define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
#  define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
#endif
#ifndef GL_VERTEX_ARRAY_LENGTH_NV
#  define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
#endif
#ifndef GL_NORMAL_ARRAY_LENGTH_NV
#  define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
#endif
#ifndef GL_COLOR_ARRAY_LENGTH_NV
#  define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
#endif
#ifndef GL_INDEX_ARRAY_LENGTH_NV
#  define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LENGTH_NV
#  define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LENGTH_NV
#  define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
#  define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#endif
#ifndef GL_FOG_COORD_ARRAY_LENGTH_NV
#  define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
#endif
#ifndef GL_ELEMENT_ARRAY_LENGTH_NV
#  define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
#endif
#ifndef GL_DRAW_INDIRECT_UNIFIED_NV
#  define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
#endif
#ifndef GL_DRAW_INDIRECT_ADDRESS_NV
#  define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
#endif
#ifndef GL_DRAW_INDIRECT_LENGTH_NV
#  define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
typedef void (APIENTRYP PFNGLUXBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
typedef void (APIENTRYP PFNGLUXNORMALFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
typedef void (APIENTRYP PFNGLUXCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
typedef void (APIENTRYP PFNGLUXINDEXFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
typedef void (APIENTRYP PFNGLUXTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
typedef void (APIENTRYP PFNGLUXEDGEFLAGFORMATNVPROC) (GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
typedef void (APIENTRYP PFNGLUXFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
extern PFNGLUXBUFFERADDRESSRANGENVPROC glBufferAddressRangeNV;
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
extern PFNGLUXVERTEXFORMATNVPROC glVertexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
extern PFNGLUXNORMALFORMATNVPROC glNormalFormatNV;
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
extern PFNGLUXCOLORFORMATNVPROC glColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
extern PFNGLUXINDEXFORMATNVPROC glIndexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
extern PFNGLUXTEXCOORDFORMATNVPROC glTexCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
extern PFNGLUXEDGEFLAGFORMATNVPROC glEdgeFlagFormatNV;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
extern PFNGLUXSECONDARYCOLORFORMATNVPROC glSecondaryColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
extern PFNGLUXFOGCOORDFORMATNVPROC glFogCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
extern PFNGLUXVERTEXATTRIBFORMATNVPROC glVertexAttribFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
extern PFNGLUXVERTEXATTRIBIFORMATNVPROC glVertexAttribIFormatNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
extern PFNGLUXGETINTEGERUI64I_VNVPROC glGetIntegerui64i_vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:43:01 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_vertex_buffer_unified_memory__
#define __GLUX_GL_NV_vertex_buffer_unified_memory__

GLUX_NEW_PLUGIN(GL_NV_vertex_buffer_unified_memory)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
#  define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#endif
#ifndef GL_ELEMENT_ARRAY_UNIFIED_NV
#  define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#endif
#ifndef GL_VERTEX_ARRAY_ADDRESS_NV
#  define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
#endif
#ifndef GL_NORMAL_ARRAY_ADDRESS_NV
#  define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
#endif
#ifndef GL_COLOR_ARRAY_ADDRESS_NV
#  define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
#endif
#ifndef GL_INDEX_ARRAY_ADDRESS_NV
#  define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
#  define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#endif
#ifndef GL_EDGE_FLAG_ARRAY_ADDRESS_NV
#  define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
#  define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#endif
#ifndef GL_FOG_COORD_ARRAY_ADDRESS_NV
#  define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
#endif
#ifndef GL_ELEMENT_ARRAY_ADDRESS_NV
#  define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
#endif
#ifndef GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
#  define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
#endif
#ifndef GL_VERTEX_ARRAY_LENGTH_NV
#  define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
#endif
#ifndef GL_NORMAL_ARRAY_LENGTH_NV
#  define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
#endif
#ifndef GL_COLOR_ARRAY_LENGTH_NV
#  define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
#endif
#ifndef GL_INDEX_ARRAY_LENGTH_NV
#  define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
#endif
#ifndef GL_TEXTURE_COORD_ARRAY_LENGTH_NV
#  define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
#endif
#ifndef GL_EDGE_FLAG_ARRAY_LENGTH_NV
#  define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
#endif
#ifndef GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
#  define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#endif
#ifndef GL_FOG_COORD_ARRAY_LENGTH_NV
#  define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
#endif
#ifndef GL_ELEMENT_ARRAY_LENGTH_NV
#  define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
#endif
#ifndef GL_DRAW_INDIRECT_UNIFIED_NV
#  define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
#endif
#ifndef GL_DRAW_INDIRECT_ADDRESS_NV
#  define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
#endif
#ifndef GL_DRAW_INDIRECT_LENGTH_NV
#  define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
typedef void (APIENTRYP PFNGLUXBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
typedef void (APIENTRYP PFNGLUXNORMALFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
typedef void (APIENTRYP PFNGLUXCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
typedef void (APIENTRYP PFNGLUXINDEXFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
typedef void (APIENTRYP PFNGLUXTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
typedef void (APIENTRYP PFNGLUXEDGEFLAGFORMATNVPROC) (GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
typedef void (APIENTRYP PFNGLUXFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
extern PFNGLUXBUFFERADDRESSRANGENVPROC glBufferAddressRangeNV;
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
extern PFNGLUXVERTEXFORMATNVPROC glVertexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
extern PFNGLUXNORMALFORMATNVPROC glNormalFormatNV;
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
extern PFNGLUXCOLORFORMATNVPROC glColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
extern PFNGLUXINDEXFORMATNVPROC glIndexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
extern PFNGLUXTEXCOORDFORMATNVPROC glTexCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
extern PFNGLUXEDGEFLAGFORMATNVPROC glEdgeFlagFormatNV;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
extern PFNGLUXSECONDARYCOLORFORMATNVPROC glSecondaryColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
extern PFNGLUXFOGCOORDFORMATNVPROC glFogCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
extern PFNGLUXVERTEXATTRIBFORMATNVPROC glVertexAttribFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
extern PFNGLUXVERTEXATTRIBIFORMATNVPROC glVertexAttribIFormatNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
extern PFNGLUXGETINTEGERUI64I_VNVPROC glGetIntegerui64i_vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
