
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:25 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_bindable_uniform__
#define __GLUX_GL_EXT_bindable_uniform__

GLUX_NEW_PLUGIN(GL_EXT_bindable_uniform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
#endif
#ifndef GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
#endif
#ifndef GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
#endif
#ifndef GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
#  define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 0x8DED
#endif
#ifndef GL_UNIFORM_BUFFER_EXT
#  define GL_UNIFORM_BUFFER_EXT 0x8DEE
#endif
#ifndef GL_UNIFORM_BUFFER_BINDING_EXT
#  define GL_UNIFORM_BUFFER_BINDING_EXT 0x8DEF
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniformBufferEXT
typedef void (APIENTRYP PFNGLUXUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
typedef GLint (APIENTRYP PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
typedef GLintptr (APIENTRYP PFNGLUXGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniformBufferEXT
extern PFNGLUXUNIFORMBUFFEREXTPROC glUniformBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
extern PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC glGetUniformBufferSizeEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
extern PFNGLUXGETUNIFORMOFFSETEXTPROC glGetUniformOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:43 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_bindable_uniform__
#define __GLUX_GL_EXT_bindable_uniform__

GLUX_NEW_PLUGIN(GL_EXT_bindable_uniform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
#endif
#ifndef GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
#endif
#ifndef GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
#endif
#ifndef GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
#  define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 0x8DED
#endif
#ifndef GL_UNIFORM_BUFFER_EXT
#  define GL_UNIFORM_BUFFER_EXT 0x8DEE
#endif
#ifndef GL_UNIFORM_BUFFER_BINDING_EXT
#  define GL_UNIFORM_BUFFER_BINDING_EXT 0x8DEF
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniformBufferEXT
typedef void (APIENTRYP PFNGLUXUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
typedef GLint (APIENTRYP PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
typedef GLintptr (APIENTRYP PFNGLUXGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniformBufferEXT
extern PFNGLUXUNIFORMBUFFEREXTPROC glUniformBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
extern PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC glGetUniformBufferSizeEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
extern PFNGLUXGETUNIFORMOFFSETEXTPROC glGetUniformOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:53 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_bindable_uniform__
#define __GLUX_GL_EXT_bindable_uniform__

GLUX_NEW_PLUGIN(GL_EXT_bindable_uniform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
#endif
#ifndef GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
#endif
#ifndef GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
#endif
#ifndef GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
#  define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 0x8DED
#endif
#ifndef GL_UNIFORM_BUFFER_EXT
#  define GL_UNIFORM_BUFFER_EXT 0x8DEE
#endif
#ifndef GL_UNIFORM_BUFFER_BINDING_EXT
#  define GL_UNIFORM_BUFFER_BINDING_EXT 0x8DEF
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniformBufferEXT
typedef void (APIENTRYP PFNGLUXUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
typedef GLint (APIENTRYP PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
typedef GLintptr (APIENTRYP PFNGLUXGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniformBufferEXT
extern PFNGLUXUNIFORMBUFFEREXTPROC glUniformBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
extern PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC glGetUniformBufferSizeEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
extern PFNGLUXGETUNIFORMOFFSETEXTPROC glGetUniformOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:13 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_bindable_uniform__
#define __GLUX_GL_EXT_bindable_uniform__

GLUX_NEW_PLUGIN(GL_EXT_bindable_uniform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
#endif
#ifndef GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
#endif
#ifndef GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
#endif
#ifndef GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
#  define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 0x8DED
#endif
#ifndef GL_UNIFORM_BUFFER_EXT
#  define GL_UNIFORM_BUFFER_EXT 0x8DEE
#endif
#ifndef GL_UNIFORM_BUFFER_BINDING_EXT
#  define GL_UNIFORM_BUFFER_BINDING_EXT 0x8DEF
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniformBufferEXT
typedef void (APIENTRYP PFNGLUXUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
typedef GLint (APIENTRYP PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
typedef GLintptr (APIENTRYP PFNGLUXGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniformBufferEXT
extern PFNGLUXUNIFORMBUFFEREXTPROC glUniformBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
extern PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC glGetUniformBufferSizeEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
extern PFNGLUXGETUNIFORMOFFSETEXTPROC glGetUniformOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:29 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_bindable_uniform__
#define __GLUX_GL_EXT_bindable_uniform__

GLUX_NEW_PLUGIN(GL_EXT_bindable_uniform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
#endif
#ifndef GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
#endif
#ifndef GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
#endif
#ifndef GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
#  define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 0x8DED
#endif
#ifndef GL_UNIFORM_BUFFER_EXT
#  define GL_UNIFORM_BUFFER_EXT 0x8DEE
#endif
#ifndef GL_UNIFORM_BUFFER_BINDING_EXT
#  define GL_UNIFORM_BUFFER_BINDING_EXT 0x8DEF
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniformBufferEXT
typedef void (APIENTRYP PFNGLUXUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
typedef GLint (APIENTRYP PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
typedef GLintptr (APIENTRYP PFNGLUXGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniformBufferEXT
extern PFNGLUXUNIFORMBUFFEREXTPROC glUniformBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
extern PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC glGetUniformBufferSizeEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
extern PFNGLUXGETUNIFORMOFFSETEXTPROC glGetUniformOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:32 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_bindable_uniform__
#define __GLUX_GL_EXT_bindable_uniform__

GLUX_NEW_PLUGIN(GL_EXT_bindable_uniform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
#endif
#ifndef GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
#endif
#ifndef GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
#endif
#ifndef GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
#  define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 0x8DED
#endif
#ifndef GL_UNIFORM_BUFFER_EXT
#  define GL_UNIFORM_BUFFER_EXT 0x8DEE
#endif
#ifndef GL_UNIFORM_BUFFER_BINDING_EXT
#  define GL_UNIFORM_BUFFER_BINDING_EXT 0x8DEF
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniformBufferEXT
typedef void (APIENTRYP PFNGLUXUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
typedef GLint (APIENTRYP PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
typedef GLintptr (APIENTRYP PFNGLUXGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniformBufferEXT
extern PFNGLUXUNIFORMBUFFEREXTPROC glUniformBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
extern PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC glGetUniformBufferSizeEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
extern PFNGLUXGETUNIFORMOFFSETEXTPROC glGetUniformOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:53 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_bindable_uniform__
#define __GLUX_GL_EXT_bindable_uniform__

GLUX_NEW_PLUGIN(GL_EXT_bindable_uniform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
#endif
#ifndef GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
#endif
#ifndef GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
#endif
#ifndef GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
#  define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 0x8DED
#endif
#ifndef GL_UNIFORM_BUFFER_EXT
#  define GL_UNIFORM_BUFFER_EXT 0x8DEE
#endif
#ifndef GL_UNIFORM_BUFFER_BINDING_EXT
#  define GL_UNIFORM_BUFFER_BINDING_EXT 0x8DEF
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniformBufferEXT
typedef void (APIENTRYP PFNGLUXUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
typedef GLint (APIENTRYP PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
typedef GLintptr (APIENTRYP PFNGLUXGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniformBufferEXT
extern PFNGLUXUNIFORMBUFFEREXTPROC glUniformBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
extern PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC glGetUniformBufferSizeEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
extern PFNGLUXGETUNIFORMOFFSETEXTPROC glGetUniformOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:28:03 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_bindable_uniform__
#define __GLUX_GL_EXT_bindable_uniform__

GLUX_NEW_PLUGIN(GL_EXT_bindable_uniform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
#endif
#ifndef GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
#endif
#ifndef GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
#endif
#ifndef GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
#  define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 0x8DED
#endif
#ifndef GL_UNIFORM_BUFFER_EXT
#  define GL_UNIFORM_BUFFER_EXT 0x8DEE
#endif
#ifndef GL_UNIFORM_BUFFER_BINDING_EXT
#  define GL_UNIFORM_BUFFER_BINDING_EXT 0x8DEF
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniformBufferEXT
typedef void (APIENTRYP PFNGLUXUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
typedef GLint (APIENTRYP PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
typedef GLintptr (APIENTRYP PFNGLUXGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniformBufferEXT
extern PFNGLUXUNIFORMBUFFEREXTPROC glUniformBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
extern PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC glGetUniformBufferSizeEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
extern PFNGLUXGETUNIFORMOFFSETEXTPROC glGetUniformOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:16:57 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_bindable_uniform__
#define __GLUX_GL_EXT_bindable_uniform__

GLUX_NEW_PLUGIN(GL_EXT_bindable_uniform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
#endif
#ifndef GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
#endif
#ifndef GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
#endif
#ifndef GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
#  define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 0x8DED
#endif
#ifndef GL_UNIFORM_BUFFER_EXT
#  define GL_UNIFORM_BUFFER_EXT 0x8DEE
#endif
#ifndef GL_UNIFORM_BUFFER_BINDING_EXT
#  define GL_UNIFORM_BUFFER_BINDING_EXT 0x8DEF
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniformBufferEXT
typedef void (APIENTRYP PFNGLUXUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
typedef GLint (APIENTRYP PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
typedef GLintptr (APIENTRYP PFNGLUXGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniformBufferEXT
extern PFNGLUXUNIFORMBUFFEREXTPROC glUniformBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
extern PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC glGetUniformBufferSizeEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
extern PFNGLUXGETUNIFORMOFFSETEXTPROC glGetUniformOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_bindable_uniform__
#define __GLUX_GL_EXT_bindable_uniform__

GLUX_NEW_PLUGIN(GL_EXT_bindable_uniform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
#endif
#ifndef GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
#endif
#ifndef GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
#endif
#ifndef GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
#  define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 0x8DED
#endif
#ifndef GL_UNIFORM_BUFFER_EXT
#  define GL_UNIFORM_BUFFER_EXT 0x8DEE
#endif
#ifndef GL_UNIFORM_BUFFER_BINDING_EXT
#  define GL_UNIFORM_BUFFER_BINDING_EXT 0x8DEF
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniformBufferEXT
typedef void (APIENTRYP PFNGLUXUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
typedef GLint (APIENTRYP PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
typedef GLintptr (APIENTRYP PFNGLUXGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniformBufferEXT
extern PFNGLUXUNIFORMBUFFEREXTPROC glUniformBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
extern PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC glGetUniformBufferSizeEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
extern PFNGLUXGETUNIFORMOFFSETEXTPROC glGetUniformOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:19 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_bindable_uniform__
#define __GLUX_GL_EXT_bindable_uniform__

GLUX_NEW_PLUGIN(GL_EXT_bindable_uniform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
#endif
#ifndef GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
#endif
#ifndef GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
#endif
#ifndef GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
#  define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 0x8DED
#endif
#ifndef GL_UNIFORM_BUFFER_EXT
#  define GL_UNIFORM_BUFFER_EXT 0x8DEE
#endif
#ifndef GL_UNIFORM_BUFFER_BINDING_EXT
#  define GL_UNIFORM_BUFFER_BINDING_EXT 0x8DEF
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniformBufferEXT
typedef void (APIENTRYP PFNGLUXUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
typedef GLint (APIENTRYP PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
typedef GLintptr (APIENTRYP PFNGLUXGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniformBufferEXT
extern PFNGLUXUNIFORMBUFFEREXTPROC glUniformBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
extern PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC glGetUniformBufferSizeEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
extern PFNGLUXGETUNIFORMOFFSETEXTPROC glGetUniformOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:00 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_bindable_uniform__
#define __GLUX_GL_EXT_bindable_uniform__

GLUX_NEW_PLUGIN(GL_EXT_bindable_uniform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
#endif
#ifndef GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
#endif
#ifndef GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
#endif
#ifndef GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
#  define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 0x8DED
#endif
#ifndef GL_UNIFORM_BUFFER_EXT
#  define GL_UNIFORM_BUFFER_EXT 0x8DEE
#endif
#ifndef GL_UNIFORM_BUFFER_BINDING_EXT
#  define GL_UNIFORM_BUFFER_BINDING_EXT 0x8DEF
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniformBufferEXT
typedef void (APIENTRYP PFNGLUXUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
typedef GLint (APIENTRYP PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
typedef GLintptr (APIENTRYP PFNGLUXGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniformBufferEXT
extern PFNGLUXUNIFORMBUFFEREXTPROC glUniformBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
extern PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC glGetUniformBufferSizeEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
extern PFNGLUXGETUNIFORMOFFSETEXTPROC glGetUniformOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:09 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_bindable_uniform__
#define __GLUX_GL_EXT_bindable_uniform__

GLUX_NEW_PLUGIN(GL_EXT_bindable_uniform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
#endif
#ifndef GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
#endif
#ifndef GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
#endif
#ifndef GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
#  define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 0x8DED
#endif
#ifndef GL_UNIFORM_BUFFER_EXT
#  define GL_UNIFORM_BUFFER_EXT 0x8DEE
#endif
#ifndef GL_UNIFORM_BUFFER_BINDING_EXT
#  define GL_UNIFORM_BUFFER_BINDING_EXT 0x8DEF
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniformBufferEXT
typedef void (APIENTRYP PFNGLUXUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
typedef GLint (APIENTRYP PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
typedef GLintptr (APIENTRYP PFNGLUXGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniformBufferEXT
extern PFNGLUXUNIFORMBUFFEREXTPROC glUniformBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
extern PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC glGetUniformBufferSizeEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
extern PFNGLUXGETUNIFORMOFFSETEXTPROC glGetUniformOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:21 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_bindable_uniform__
#define __GLUX_GL_EXT_bindable_uniform__

GLUX_NEW_PLUGIN(GL_EXT_bindable_uniform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
#endif
#ifndef GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
#endif
#ifndef GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
#endif
#ifndef GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
#  define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 0x8DED
#endif
#ifndef GL_UNIFORM_BUFFER_EXT
#  define GL_UNIFORM_BUFFER_EXT 0x8DEE
#endif
#ifndef GL_UNIFORM_BUFFER_BINDING_EXT
#  define GL_UNIFORM_BUFFER_BINDING_EXT 0x8DEF
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniformBufferEXT
typedef void (APIENTRYP PFNGLUXUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
typedef GLint (APIENTRYP PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
typedef GLintptr (APIENTRYP PFNGLUXGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniformBufferEXT
extern PFNGLUXUNIFORMBUFFEREXTPROC glUniformBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
extern PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC glGetUniformBufferSizeEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
extern PFNGLUXGETUNIFORMOFFSETEXTPROC glGetUniformOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:52:00 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_bindable_uniform__
#define __GLUX_GL_EXT_bindable_uniform__

GLUX_NEW_PLUGIN(GL_EXT_bindable_uniform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
#endif
#ifndef GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
#endif
#ifndef GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
#endif
#ifndef GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
#  define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 0x8DED
#endif
#ifndef GL_UNIFORM_BUFFER_EXT
#  define GL_UNIFORM_BUFFER_EXT 0x8DEE
#endif
#ifndef GL_UNIFORM_BUFFER_BINDING_EXT
#  define GL_UNIFORM_BUFFER_BINDING_EXT 0x8DEF
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniformBufferEXT
typedef void (APIENTRYP PFNGLUXUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
typedef GLint (APIENTRYP PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
typedef GLintptr (APIENTRYP PFNGLUXGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniformBufferEXT
extern PFNGLUXUNIFORMBUFFEREXTPROC glUniformBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
extern PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC glGetUniformBufferSizeEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
extern PFNGLUXGETUNIFORMOFFSETEXTPROC glGetUniformOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_bindable_uniform__
#define __GLUX_GL_EXT_bindable_uniform__

GLUX_NEW_PLUGIN(GL_EXT_bindable_uniform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
#endif
#ifndef GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
#endif
#ifndef GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
#endif
#ifndef GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
#  define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 0x8DED
#endif
#ifndef GL_UNIFORM_BUFFER_EXT
#  define GL_UNIFORM_BUFFER_EXT 0x8DEE
#endif
#ifndef GL_UNIFORM_BUFFER_BINDING_EXT
#  define GL_UNIFORM_BUFFER_BINDING_EXT 0x8DEF
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniformBufferEXT
typedef void (APIENTRYP PFNGLUXUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
typedef GLint (APIENTRYP PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
typedef GLintptr (APIENTRYP PFNGLUXGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniformBufferEXT
extern PFNGLUXUNIFORMBUFFEREXTPROC glUniformBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
extern PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC glGetUniformBufferSizeEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
extern PFNGLUXGETUNIFORMOFFSETEXTPROC glGetUniformOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:04 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_bindable_uniform__
#define __GLUX_GL_EXT_bindable_uniform__

GLUX_NEW_PLUGIN(GL_EXT_bindable_uniform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
#endif
#ifndef GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
#endif
#ifndef GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
#endif
#ifndef GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
#  define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 0x8DED
#endif
#ifndef GL_UNIFORM_BUFFER_EXT
#  define GL_UNIFORM_BUFFER_EXT 0x8DEE
#endif
#ifndef GL_UNIFORM_BUFFER_BINDING_EXT
#  define GL_UNIFORM_BUFFER_BINDING_EXT 0x8DEF
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniformBufferEXT
typedef void (APIENTRYP PFNGLUXUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
typedef GLint (APIENTRYP PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
typedef GLintptr (APIENTRYP PFNGLUXGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniformBufferEXT
extern PFNGLUXUNIFORMBUFFEREXTPROC glUniformBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
extern PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC glGetUniformBufferSizeEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
extern PFNGLUXGETUNIFORMOFFSETEXTPROC glGetUniformOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:24 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_bindable_uniform__
#define __GLUX_GL_EXT_bindable_uniform__

GLUX_NEW_PLUGIN(GL_EXT_bindable_uniform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
#endif
#ifndef GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
#endif
#ifndef GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
#endif
#ifndef GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
#  define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 0x8DED
#endif
#ifndef GL_UNIFORM_BUFFER_EXT
#  define GL_UNIFORM_BUFFER_EXT 0x8DEE
#endif
#ifndef GL_UNIFORM_BUFFER_BINDING_EXT
#  define GL_UNIFORM_BUFFER_BINDING_EXT 0x8DEF
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniformBufferEXT
typedef void (APIENTRYP PFNGLUXUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
typedef GLint (APIENTRYP PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
typedef GLintptr (APIENTRYP PFNGLUXGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniformBufferEXT
extern PFNGLUXUNIFORMBUFFEREXTPROC glUniformBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
extern PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC glGetUniformBufferSizeEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
extern PFNGLUXGETUNIFORMOFFSETEXTPROC glGetUniformOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_bindable_uniform__
#define __GLUX_GL_EXT_bindable_uniform__

GLUX_NEW_PLUGIN(GL_EXT_bindable_uniform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
#endif
#ifndef GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
#endif
#ifndef GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
#endif
#ifndef GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
#  define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 0x8DED
#endif
#ifndef GL_UNIFORM_BUFFER_EXT
#  define GL_UNIFORM_BUFFER_EXT 0x8DEE
#endif
#ifndef GL_UNIFORM_BUFFER_BINDING_EXT
#  define GL_UNIFORM_BUFFER_BINDING_EXT 0x8DEF
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniformBufferEXT
typedef void (APIENTRYP PFNGLUXUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
typedef GLint (APIENTRYP PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
typedef GLintptr (APIENTRYP PFNGLUXGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniformBufferEXT
extern PFNGLUXUNIFORMBUFFEREXTPROC glUniformBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
extern PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC glGetUniformBufferSizeEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
extern PFNGLUXGETUNIFORMOFFSETEXTPROC glGetUniformOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:41:57 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_bindable_uniform__
#define __GLUX_GL_EXT_bindable_uniform__

GLUX_NEW_PLUGIN(GL_EXT_bindable_uniform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
#endif
#ifndef GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
#endif
#ifndef GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
#endif
#ifndef GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
#  define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 0x8DED
#endif
#ifndef GL_UNIFORM_BUFFER_EXT
#  define GL_UNIFORM_BUFFER_EXT 0x8DEE
#endif
#ifndef GL_UNIFORM_BUFFER_BINDING_EXT
#  define GL_UNIFORM_BUFFER_BINDING_EXT 0x8DEF
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniformBufferEXT
typedef void (APIENTRYP PFNGLUXUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
typedef GLint (APIENTRYP PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
typedef GLintptr (APIENTRYP PFNGLUXGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniformBufferEXT
extern PFNGLUXUNIFORMBUFFEREXTPROC glUniformBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
extern PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC glGetUniformBufferSizeEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
extern PFNGLUXGETUNIFORMOFFSETEXTPROC glGetUniformOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:39 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_bindable_uniform__
#define __GLUX_GL_EXT_bindable_uniform__

GLUX_NEW_PLUGIN(GL_EXT_bindable_uniform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
#endif
#ifndef GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
#endif
#ifndef GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
#endif
#ifndef GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
#  define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 0x8DED
#endif
#ifndef GL_UNIFORM_BUFFER_EXT
#  define GL_UNIFORM_BUFFER_EXT 0x8DEE
#endif
#ifndef GL_UNIFORM_BUFFER_BINDING_EXT
#  define GL_UNIFORM_BUFFER_BINDING_EXT 0x8DEF
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniformBufferEXT
typedef void (APIENTRYP PFNGLUXUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
typedef GLint (APIENTRYP PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
typedef GLintptr (APIENTRYP PFNGLUXGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniformBufferEXT
extern PFNGLUXUNIFORMBUFFEREXTPROC glUniformBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
extern PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC glGetUniformBufferSizeEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
extern PFNGLUXGETUNIFORMOFFSETEXTPROC glGetUniformOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:09:58 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_bindable_uniform__
#define __GLUX_GL_EXT_bindable_uniform__

GLUX_NEW_PLUGIN(GL_EXT_bindable_uniform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
#endif
#ifndef GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
#endif
#ifndef GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
#endif
#ifndef GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
#  define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 0x8DED
#endif
#ifndef GL_UNIFORM_BUFFER_EXT
#  define GL_UNIFORM_BUFFER_EXT 0x8DEE
#endif
#ifndef GL_UNIFORM_BUFFER_BINDING_EXT
#  define GL_UNIFORM_BUFFER_BINDING_EXT 0x8DEF
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniformBufferEXT
typedef void (APIENTRYP PFNGLUXUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
typedef GLint (APIENTRYP PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
typedef GLintptr (APIENTRYP PFNGLUXGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniformBufferEXT
extern PFNGLUXUNIFORMBUFFEREXTPROC glUniformBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
extern PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC glGetUniformBufferSizeEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
extern PFNGLUXGETUNIFORMOFFSETEXTPROC glGetUniformOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:19:59 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_bindable_uniform__
#define __GLUX_GL_EXT_bindable_uniform__

GLUX_NEW_PLUGIN(GL_EXT_bindable_uniform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
#endif
#ifndef GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
#endif
#ifndef GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
#endif
#ifndef GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
#  define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 0x8DED
#endif
#ifndef GL_UNIFORM_BUFFER_EXT
#  define GL_UNIFORM_BUFFER_EXT 0x8DEE
#endif
#ifndef GL_UNIFORM_BUFFER_BINDING_EXT
#  define GL_UNIFORM_BUFFER_BINDING_EXT 0x8DEF
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniformBufferEXT
typedef void (APIENTRYP PFNGLUXUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
typedef GLint (APIENTRYP PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
typedef GLintptr (APIENTRYP PFNGLUXGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniformBufferEXT
extern PFNGLUXUNIFORMBUFFEREXTPROC glUniformBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
extern PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC glGetUniformBufferSizeEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
extern PFNGLUXGETUNIFORMOFFSETEXTPROC glGetUniformOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:42:56 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_bindable_uniform__
#define __GLUX_GL_EXT_bindable_uniform__

GLUX_NEW_PLUGIN(GL_EXT_bindable_uniform)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
#endif
#ifndef GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
#endif
#ifndef GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
#  define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
#endif
#ifndef GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
#  define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 0x8DED
#endif
#ifndef GL_UNIFORM_BUFFER_EXT
#  define GL_UNIFORM_BUFFER_EXT 0x8DEE
#endif
#ifndef GL_UNIFORM_BUFFER_BINDING_EXT
#  define GL_UNIFORM_BUFFER_BINDING_EXT 0x8DEF
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glUniformBufferEXT
typedef void (APIENTRYP PFNGLUXUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
typedef GLint (APIENTRYP PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
typedef GLintptr (APIENTRYP PFNGLUXGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glUniformBufferEXT
extern PFNGLUXUNIFORMBUFFEREXTPROC glUniformBufferEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformBufferSizeEXT
extern PFNGLUXGETUNIFORMBUFFERSIZEEXTPROC glGetUniformBufferSizeEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUniformOffsetEXT
extern PFNGLUXGETUNIFORMOFFSETEXTPROC glGetUniformOffsetEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
