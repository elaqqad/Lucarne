
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:28 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_EXT_texture_from_pixmap__
#define __GLUX_GLX_EXT_texture_from_pixmap__

GLUX_NEW_PLUGIN(GLX_EXT_texture_from_pixmap);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_TEXTURE_1D_BIT_EXT
#  define GLX_TEXTURE_1D_BIT_EXT 0x00000001
#endif
#ifndef GLX_TEXTURE_2D_BIT_EXT
#  define GLX_TEXTURE_2D_BIT_EXT 0x00000002
#endif
#ifndef GLX_TEXTURE_RECTANGLE_BIT_EXT
#  define GLX_TEXTURE_RECTANGLE_BIT_EXT 0x00000004
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGB_EXT
#  define GLX_BIND_TO_TEXTURE_RGB_EXT 0x20D0
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGBA_EXT
#  define GLX_BIND_TO_TEXTURE_RGBA_EXT 0x20D1
#endif
#ifndef GLX_BIND_TO_MIPMAP_TEXTURE_EXT
#  define GLX_BIND_TO_MIPMAP_TEXTURE_EXT 0x20D2
#endif
#ifndef GLX_BIND_TO_TEXTURE_TARGETS_EXT
#  define GLX_BIND_TO_TEXTURE_TARGETS_EXT 0x20D3
#endif
#ifndef GLX_Y_INVERTED_EXT
#  define GLX_Y_INVERTED_EXT 0x20D4
#endif
#ifndef GLX_TEXTURE_FORMAT_EXT
#  define GLX_TEXTURE_FORMAT_EXT 0x20D5
#endif
#ifndef GLX_TEXTURE_TARGET_EXT
#  define GLX_TEXTURE_TARGET_EXT 0x20D6
#endif
#ifndef GLX_MIPMAP_TEXTURE_EXT
#  define GLX_MIPMAP_TEXTURE_EXT 0x20D7
#endif
#ifndef GLX_TEXTURE_FORMAT_NONE_EXT
#  define GLX_TEXTURE_FORMAT_NONE_EXT 0x20D8
#endif
#ifndef GLX_TEXTURE_FORMAT_RGB_EXT
#  define GLX_TEXTURE_FORMAT_RGB_EXT 0x20D9
#endif
#ifndef GLX_TEXTURE_FORMAT_RGBA_EXT
#  define GLX_TEXTURE_FORMAT_RGBA_EXT 0x20DA
#endif
#ifndef GLX_TEXTURE_1D_EXT
#  define GLX_TEXTURE_1D_EXT 0x20DB
#endif
#ifndef GLX_TEXTURE_2D_EXT
#  define GLX_TEXTURE_2D_EXT 0x20DC
#endif
#ifndef GLX_TEXTURE_RECTANGLE_EXT
#  define GLX_TEXTURE_RECTANGLE_EXT 0x20DD
#endif
#ifndef GLX_FRONT_LEFT_EXT
#  define GLX_FRONT_LEFT_EXT 0x20DE
#endif
#ifndef GLX_FRONT_RIGHT_EXT
#  define GLX_FRONT_RIGHT_EXT 0x20DF
#endif
#ifndef GLX_BACK_LEFT_EXT
#  define GLX_BACK_LEFT_EXT 0x20E0
#endif
#ifndef GLX_BACK_RIGHT_EXT
#  define GLX_BACK_RIGHT_EXT 0x20E1
#endif
#ifndef GLX_FRONT_EXT
#  define GLX_FRONT_EXT GLX_FRONT_LEFT_EXT
#endif
#ifndef GLX_BACK_EXT
#  define GLX_BACK_EXT GLX_BACK_LEFT_EXT
#endif
#ifndef GLX_AUX0_EXT
#  define GLX_AUX0_EXT 0x20E2
#endif
#ifndef GLX_AUX1_EXT
#  define GLX_AUX1_EXT 0x20E3
#endif
#ifndef GLX_AUX2_EXT
#  define GLX_AUX2_EXT 0x20E4
#endif
#ifndef GLX_AUX3_EXT
#  define GLX_AUX3_EXT 0x20E5
#endif
#ifndef GLX_AUX4_EXT
#  define GLX_AUX4_EXT 0x20E6
#endif
#ifndef GLX_AUX5_EXT
#  define GLX_AUX5_EXT 0x20E7
#endif
#ifndef GLX_AUX6_EXT
#  define GLX_AUX6_EXT 0x20E8
#endif
#ifndef GLX_AUX7_EXT
#  define GLX_AUX7_EXT 0x20E9
#endif
#ifndef GLX_AUX8_EXT
#  define GLX_AUX8_EXT 0x20EA
#endif
#ifndef GLX_AUX9_EXT
#  define GLX_AUX9_EXT 0x20EB
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
typedef void (APIENTRYP PFNXGLUXBINDTEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer, const int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
typedef void (APIENTRYP PFNXGLUXRELEASETEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
extern PFNXGLUXBINDTEXIMAGEEXTPROC glXBindTexImageEXT;
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
extern PFNXGLUXRELEASETEXIMAGEEXTPROC glXReleaseTexImageEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:46 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_EXT_texture_from_pixmap__
#define __GLUX_GLX_EXT_texture_from_pixmap__

GLUX_NEW_PLUGIN(GLX_EXT_texture_from_pixmap);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_TEXTURE_1D_BIT_EXT
#  define GLX_TEXTURE_1D_BIT_EXT 0x00000001
#endif
#ifndef GLX_TEXTURE_2D_BIT_EXT
#  define GLX_TEXTURE_2D_BIT_EXT 0x00000002
#endif
#ifndef GLX_TEXTURE_RECTANGLE_BIT_EXT
#  define GLX_TEXTURE_RECTANGLE_BIT_EXT 0x00000004
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGB_EXT
#  define GLX_BIND_TO_TEXTURE_RGB_EXT 0x20D0
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGBA_EXT
#  define GLX_BIND_TO_TEXTURE_RGBA_EXT 0x20D1
#endif
#ifndef GLX_BIND_TO_MIPMAP_TEXTURE_EXT
#  define GLX_BIND_TO_MIPMAP_TEXTURE_EXT 0x20D2
#endif
#ifndef GLX_BIND_TO_TEXTURE_TARGETS_EXT
#  define GLX_BIND_TO_TEXTURE_TARGETS_EXT 0x20D3
#endif
#ifndef GLX_Y_INVERTED_EXT
#  define GLX_Y_INVERTED_EXT 0x20D4
#endif
#ifndef GLX_TEXTURE_FORMAT_EXT
#  define GLX_TEXTURE_FORMAT_EXT 0x20D5
#endif
#ifndef GLX_TEXTURE_TARGET_EXT
#  define GLX_TEXTURE_TARGET_EXT 0x20D6
#endif
#ifndef GLX_MIPMAP_TEXTURE_EXT
#  define GLX_MIPMAP_TEXTURE_EXT 0x20D7
#endif
#ifndef GLX_TEXTURE_FORMAT_NONE_EXT
#  define GLX_TEXTURE_FORMAT_NONE_EXT 0x20D8
#endif
#ifndef GLX_TEXTURE_FORMAT_RGB_EXT
#  define GLX_TEXTURE_FORMAT_RGB_EXT 0x20D9
#endif
#ifndef GLX_TEXTURE_FORMAT_RGBA_EXT
#  define GLX_TEXTURE_FORMAT_RGBA_EXT 0x20DA
#endif
#ifndef GLX_TEXTURE_1D_EXT
#  define GLX_TEXTURE_1D_EXT 0x20DB
#endif
#ifndef GLX_TEXTURE_2D_EXT
#  define GLX_TEXTURE_2D_EXT 0x20DC
#endif
#ifndef GLX_TEXTURE_RECTANGLE_EXT
#  define GLX_TEXTURE_RECTANGLE_EXT 0x20DD
#endif
#ifndef GLX_FRONT_LEFT_EXT
#  define GLX_FRONT_LEFT_EXT 0x20DE
#endif
#ifndef GLX_FRONT_RIGHT_EXT
#  define GLX_FRONT_RIGHT_EXT 0x20DF
#endif
#ifndef GLX_BACK_LEFT_EXT
#  define GLX_BACK_LEFT_EXT 0x20E0
#endif
#ifndef GLX_BACK_RIGHT_EXT
#  define GLX_BACK_RIGHT_EXT 0x20E1
#endif
#ifndef GLX_FRONT_EXT
#  define GLX_FRONT_EXT GLX_FRONT_LEFT_EXT
#endif
#ifndef GLX_BACK_EXT
#  define GLX_BACK_EXT GLX_BACK_LEFT_EXT
#endif
#ifndef GLX_AUX0_EXT
#  define GLX_AUX0_EXT 0x20E2
#endif
#ifndef GLX_AUX1_EXT
#  define GLX_AUX1_EXT 0x20E3
#endif
#ifndef GLX_AUX2_EXT
#  define GLX_AUX2_EXT 0x20E4
#endif
#ifndef GLX_AUX3_EXT
#  define GLX_AUX3_EXT 0x20E5
#endif
#ifndef GLX_AUX4_EXT
#  define GLX_AUX4_EXT 0x20E6
#endif
#ifndef GLX_AUX5_EXT
#  define GLX_AUX5_EXT 0x20E7
#endif
#ifndef GLX_AUX6_EXT
#  define GLX_AUX6_EXT 0x20E8
#endif
#ifndef GLX_AUX7_EXT
#  define GLX_AUX7_EXT 0x20E9
#endif
#ifndef GLX_AUX8_EXT
#  define GLX_AUX8_EXT 0x20EA
#endif
#ifndef GLX_AUX9_EXT
#  define GLX_AUX9_EXT 0x20EB
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
typedef void (APIENTRYP PFNXGLUXBINDTEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer, const int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
typedef void (APIENTRYP PFNXGLUXRELEASETEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
extern PFNXGLUXBINDTEXIMAGEEXTPROC glXBindTexImageEXT;
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
extern PFNXGLUXRELEASETEXIMAGEEXTPROC glXReleaseTexImageEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:54 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_EXT_texture_from_pixmap__
#define __GLUX_GLX_EXT_texture_from_pixmap__

GLUX_NEW_PLUGIN(GLX_EXT_texture_from_pixmap);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_TEXTURE_1D_BIT_EXT
#  define GLX_TEXTURE_1D_BIT_EXT 0x00000001
#endif
#ifndef GLX_TEXTURE_2D_BIT_EXT
#  define GLX_TEXTURE_2D_BIT_EXT 0x00000002
#endif
#ifndef GLX_TEXTURE_RECTANGLE_BIT_EXT
#  define GLX_TEXTURE_RECTANGLE_BIT_EXT 0x00000004
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGB_EXT
#  define GLX_BIND_TO_TEXTURE_RGB_EXT 0x20D0
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGBA_EXT
#  define GLX_BIND_TO_TEXTURE_RGBA_EXT 0x20D1
#endif
#ifndef GLX_BIND_TO_MIPMAP_TEXTURE_EXT
#  define GLX_BIND_TO_MIPMAP_TEXTURE_EXT 0x20D2
#endif
#ifndef GLX_BIND_TO_TEXTURE_TARGETS_EXT
#  define GLX_BIND_TO_TEXTURE_TARGETS_EXT 0x20D3
#endif
#ifndef GLX_Y_INVERTED_EXT
#  define GLX_Y_INVERTED_EXT 0x20D4
#endif
#ifndef GLX_TEXTURE_FORMAT_EXT
#  define GLX_TEXTURE_FORMAT_EXT 0x20D5
#endif
#ifndef GLX_TEXTURE_TARGET_EXT
#  define GLX_TEXTURE_TARGET_EXT 0x20D6
#endif
#ifndef GLX_MIPMAP_TEXTURE_EXT
#  define GLX_MIPMAP_TEXTURE_EXT 0x20D7
#endif
#ifndef GLX_TEXTURE_FORMAT_NONE_EXT
#  define GLX_TEXTURE_FORMAT_NONE_EXT 0x20D8
#endif
#ifndef GLX_TEXTURE_FORMAT_RGB_EXT
#  define GLX_TEXTURE_FORMAT_RGB_EXT 0x20D9
#endif
#ifndef GLX_TEXTURE_FORMAT_RGBA_EXT
#  define GLX_TEXTURE_FORMAT_RGBA_EXT 0x20DA
#endif
#ifndef GLX_TEXTURE_1D_EXT
#  define GLX_TEXTURE_1D_EXT 0x20DB
#endif
#ifndef GLX_TEXTURE_2D_EXT
#  define GLX_TEXTURE_2D_EXT 0x20DC
#endif
#ifndef GLX_TEXTURE_RECTANGLE_EXT
#  define GLX_TEXTURE_RECTANGLE_EXT 0x20DD
#endif
#ifndef GLX_FRONT_LEFT_EXT
#  define GLX_FRONT_LEFT_EXT 0x20DE
#endif
#ifndef GLX_FRONT_RIGHT_EXT
#  define GLX_FRONT_RIGHT_EXT 0x20DF
#endif
#ifndef GLX_BACK_LEFT_EXT
#  define GLX_BACK_LEFT_EXT 0x20E0
#endif
#ifndef GLX_BACK_RIGHT_EXT
#  define GLX_BACK_RIGHT_EXT 0x20E1
#endif
#ifndef GLX_FRONT_EXT
#  define GLX_FRONT_EXT GLX_FRONT_LEFT_EXT
#endif
#ifndef GLX_BACK_EXT
#  define GLX_BACK_EXT GLX_BACK_LEFT_EXT
#endif
#ifndef GLX_AUX0_EXT
#  define GLX_AUX0_EXT 0x20E2
#endif
#ifndef GLX_AUX1_EXT
#  define GLX_AUX1_EXT 0x20E3
#endif
#ifndef GLX_AUX2_EXT
#  define GLX_AUX2_EXT 0x20E4
#endif
#ifndef GLX_AUX3_EXT
#  define GLX_AUX3_EXT 0x20E5
#endif
#ifndef GLX_AUX4_EXT
#  define GLX_AUX4_EXT 0x20E6
#endif
#ifndef GLX_AUX5_EXT
#  define GLX_AUX5_EXT 0x20E7
#endif
#ifndef GLX_AUX6_EXT
#  define GLX_AUX6_EXT 0x20E8
#endif
#ifndef GLX_AUX7_EXT
#  define GLX_AUX7_EXT 0x20E9
#endif
#ifndef GLX_AUX8_EXT
#  define GLX_AUX8_EXT 0x20EA
#endif
#ifndef GLX_AUX9_EXT
#  define GLX_AUX9_EXT 0x20EB
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
typedef void (APIENTRYP PFNXGLUXBINDTEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer, const int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
typedef void (APIENTRYP PFNXGLUXRELEASETEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
extern PFNXGLUXBINDTEXIMAGEEXTPROC glXBindTexImageEXT;
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
extern PFNXGLUXRELEASETEXIMAGEEXTPROC glXReleaseTexImageEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:14 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_EXT_texture_from_pixmap__
#define __GLUX_GLX_EXT_texture_from_pixmap__

GLUX_NEW_PLUGIN(GLX_EXT_texture_from_pixmap);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_TEXTURE_1D_BIT_EXT
#  define GLX_TEXTURE_1D_BIT_EXT 0x00000001
#endif
#ifndef GLX_TEXTURE_2D_BIT_EXT
#  define GLX_TEXTURE_2D_BIT_EXT 0x00000002
#endif
#ifndef GLX_TEXTURE_RECTANGLE_BIT_EXT
#  define GLX_TEXTURE_RECTANGLE_BIT_EXT 0x00000004
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGB_EXT
#  define GLX_BIND_TO_TEXTURE_RGB_EXT 0x20D0
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGBA_EXT
#  define GLX_BIND_TO_TEXTURE_RGBA_EXT 0x20D1
#endif
#ifndef GLX_BIND_TO_MIPMAP_TEXTURE_EXT
#  define GLX_BIND_TO_MIPMAP_TEXTURE_EXT 0x20D2
#endif
#ifndef GLX_BIND_TO_TEXTURE_TARGETS_EXT
#  define GLX_BIND_TO_TEXTURE_TARGETS_EXT 0x20D3
#endif
#ifndef GLX_Y_INVERTED_EXT
#  define GLX_Y_INVERTED_EXT 0x20D4
#endif
#ifndef GLX_TEXTURE_FORMAT_EXT
#  define GLX_TEXTURE_FORMAT_EXT 0x20D5
#endif
#ifndef GLX_TEXTURE_TARGET_EXT
#  define GLX_TEXTURE_TARGET_EXT 0x20D6
#endif
#ifndef GLX_MIPMAP_TEXTURE_EXT
#  define GLX_MIPMAP_TEXTURE_EXT 0x20D7
#endif
#ifndef GLX_TEXTURE_FORMAT_NONE_EXT
#  define GLX_TEXTURE_FORMAT_NONE_EXT 0x20D8
#endif
#ifndef GLX_TEXTURE_FORMAT_RGB_EXT
#  define GLX_TEXTURE_FORMAT_RGB_EXT 0x20D9
#endif
#ifndef GLX_TEXTURE_FORMAT_RGBA_EXT
#  define GLX_TEXTURE_FORMAT_RGBA_EXT 0x20DA
#endif
#ifndef GLX_TEXTURE_1D_EXT
#  define GLX_TEXTURE_1D_EXT 0x20DB
#endif
#ifndef GLX_TEXTURE_2D_EXT
#  define GLX_TEXTURE_2D_EXT 0x20DC
#endif
#ifndef GLX_TEXTURE_RECTANGLE_EXT
#  define GLX_TEXTURE_RECTANGLE_EXT 0x20DD
#endif
#ifndef GLX_FRONT_LEFT_EXT
#  define GLX_FRONT_LEFT_EXT 0x20DE
#endif
#ifndef GLX_FRONT_RIGHT_EXT
#  define GLX_FRONT_RIGHT_EXT 0x20DF
#endif
#ifndef GLX_BACK_LEFT_EXT
#  define GLX_BACK_LEFT_EXT 0x20E0
#endif
#ifndef GLX_BACK_RIGHT_EXT
#  define GLX_BACK_RIGHT_EXT 0x20E1
#endif
#ifndef GLX_FRONT_EXT
#  define GLX_FRONT_EXT GLX_FRONT_LEFT_EXT
#endif
#ifndef GLX_BACK_EXT
#  define GLX_BACK_EXT GLX_BACK_LEFT_EXT
#endif
#ifndef GLX_AUX0_EXT
#  define GLX_AUX0_EXT 0x20E2
#endif
#ifndef GLX_AUX1_EXT
#  define GLX_AUX1_EXT 0x20E3
#endif
#ifndef GLX_AUX2_EXT
#  define GLX_AUX2_EXT 0x20E4
#endif
#ifndef GLX_AUX3_EXT
#  define GLX_AUX3_EXT 0x20E5
#endif
#ifndef GLX_AUX4_EXT
#  define GLX_AUX4_EXT 0x20E6
#endif
#ifndef GLX_AUX5_EXT
#  define GLX_AUX5_EXT 0x20E7
#endif
#ifndef GLX_AUX6_EXT
#  define GLX_AUX6_EXT 0x20E8
#endif
#ifndef GLX_AUX7_EXT
#  define GLX_AUX7_EXT 0x20E9
#endif
#ifndef GLX_AUX8_EXT
#  define GLX_AUX8_EXT 0x20EA
#endif
#ifndef GLX_AUX9_EXT
#  define GLX_AUX9_EXT 0x20EB
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
typedef void (APIENTRYP PFNXGLUXBINDTEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer, const int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
typedef void (APIENTRYP PFNXGLUXRELEASETEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
extern PFNXGLUXBINDTEXIMAGEEXTPROC glXBindTexImageEXT;
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
extern PFNXGLUXRELEASETEXIMAGEEXTPROC glXReleaseTexImageEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:30 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_EXT_texture_from_pixmap__
#define __GLUX_GLX_EXT_texture_from_pixmap__

GLUX_NEW_PLUGIN(GLX_EXT_texture_from_pixmap);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_TEXTURE_1D_BIT_EXT
#  define GLX_TEXTURE_1D_BIT_EXT 0x00000001
#endif
#ifndef GLX_TEXTURE_2D_BIT_EXT
#  define GLX_TEXTURE_2D_BIT_EXT 0x00000002
#endif
#ifndef GLX_TEXTURE_RECTANGLE_BIT_EXT
#  define GLX_TEXTURE_RECTANGLE_BIT_EXT 0x00000004
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGB_EXT
#  define GLX_BIND_TO_TEXTURE_RGB_EXT 0x20D0
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGBA_EXT
#  define GLX_BIND_TO_TEXTURE_RGBA_EXT 0x20D1
#endif
#ifndef GLX_BIND_TO_MIPMAP_TEXTURE_EXT
#  define GLX_BIND_TO_MIPMAP_TEXTURE_EXT 0x20D2
#endif
#ifndef GLX_BIND_TO_TEXTURE_TARGETS_EXT
#  define GLX_BIND_TO_TEXTURE_TARGETS_EXT 0x20D3
#endif
#ifndef GLX_Y_INVERTED_EXT
#  define GLX_Y_INVERTED_EXT 0x20D4
#endif
#ifndef GLX_TEXTURE_FORMAT_EXT
#  define GLX_TEXTURE_FORMAT_EXT 0x20D5
#endif
#ifndef GLX_TEXTURE_TARGET_EXT
#  define GLX_TEXTURE_TARGET_EXT 0x20D6
#endif
#ifndef GLX_MIPMAP_TEXTURE_EXT
#  define GLX_MIPMAP_TEXTURE_EXT 0x20D7
#endif
#ifndef GLX_TEXTURE_FORMAT_NONE_EXT
#  define GLX_TEXTURE_FORMAT_NONE_EXT 0x20D8
#endif
#ifndef GLX_TEXTURE_FORMAT_RGB_EXT
#  define GLX_TEXTURE_FORMAT_RGB_EXT 0x20D9
#endif
#ifndef GLX_TEXTURE_FORMAT_RGBA_EXT
#  define GLX_TEXTURE_FORMAT_RGBA_EXT 0x20DA
#endif
#ifndef GLX_TEXTURE_1D_EXT
#  define GLX_TEXTURE_1D_EXT 0x20DB
#endif
#ifndef GLX_TEXTURE_2D_EXT
#  define GLX_TEXTURE_2D_EXT 0x20DC
#endif
#ifndef GLX_TEXTURE_RECTANGLE_EXT
#  define GLX_TEXTURE_RECTANGLE_EXT 0x20DD
#endif
#ifndef GLX_FRONT_LEFT_EXT
#  define GLX_FRONT_LEFT_EXT 0x20DE
#endif
#ifndef GLX_FRONT_RIGHT_EXT
#  define GLX_FRONT_RIGHT_EXT 0x20DF
#endif
#ifndef GLX_BACK_LEFT_EXT
#  define GLX_BACK_LEFT_EXT 0x20E0
#endif
#ifndef GLX_BACK_RIGHT_EXT
#  define GLX_BACK_RIGHT_EXT 0x20E1
#endif
#ifndef GLX_FRONT_EXT
#  define GLX_FRONT_EXT GLX_FRONT_LEFT_EXT
#endif
#ifndef GLX_BACK_EXT
#  define GLX_BACK_EXT GLX_BACK_LEFT_EXT
#endif
#ifndef GLX_AUX0_EXT
#  define GLX_AUX0_EXT 0x20E2
#endif
#ifndef GLX_AUX1_EXT
#  define GLX_AUX1_EXT 0x20E3
#endif
#ifndef GLX_AUX2_EXT
#  define GLX_AUX2_EXT 0x20E4
#endif
#ifndef GLX_AUX3_EXT
#  define GLX_AUX3_EXT 0x20E5
#endif
#ifndef GLX_AUX4_EXT
#  define GLX_AUX4_EXT 0x20E6
#endif
#ifndef GLX_AUX5_EXT
#  define GLX_AUX5_EXT 0x20E7
#endif
#ifndef GLX_AUX6_EXT
#  define GLX_AUX6_EXT 0x20E8
#endif
#ifndef GLX_AUX7_EXT
#  define GLX_AUX7_EXT 0x20E9
#endif
#ifndef GLX_AUX8_EXT
#  define GLX_AUX8_EXT 0x20EA
#endif
#ifndef GLX_AUX9_EXT
#  define GLX_AUX9_EXT 0x20EB
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
typedef void (APIENTRYP PFNXGLUXBINDTEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer, const int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
typedef void (APIENTRYP PFNXGLUXRELEASETEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
extern PFNXGLUXBINDTEXIMAGEEXTPROC glXBindTexImageEXT;
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
extern PFNXGLUXRELEASETEXIMAGEEXTPROC glXReleaseTexImageEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:33 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_EXT_texture_from_pixmap__
#define __GLUX_GLX_EXT_texture_from_pixmap__

GLUX_NEW_PLUGIN(GLX_EXT_texture_from_pixmap);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_TEXTURE_1D_BIT_EXT
#  define GLX_TEXTURE_1D_BIT_EXT 0x00000001
#endif
#ifndef GLX_TEXTURE_2D_BIT_EXT
#  define GLX_TEXTURE_2D_BIT_EXT 0x00000002
#endif
#ifndef GLX_TEXTURE_RECTANGLE_BIT_EXT
#  define GLX_TEXTURE_RECTANGLE_BIT_EXT 0x00000004
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGB_EXT
#  define GLX_BIND_TO_TEXTURE_RGB_EXT 0x20D0
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGBA_EXT
#  define GLX_BIND_TO_TEXTURE_RGBA_EXT 0x20D1
#endif
#ifndef GLX_BIND_TO_MIPMAP_TEXTURE_EXT
#  define GLX_BIND_TO_MIPMAP_TEXTURE_EXT 0x20D2
#endif
#ifndef GLX_BIND_TO_TEXTURE_TARGETS_EXT
#  define GLX_BIND_TO_TEXTURE_TARGETS_EXT 0x20D3
#endif
#ifndef GLX_Y_INVERTED_EXT
#  define GLX_Y_INVERTED_EXT 0x20D4
#endif
#ifndef GLX_TEXTURE_FORMAT_EXT
#  define GLX_TEXTURE_FORMAT_EXT 0x20D5
#endif
#ifndef GLX_TEXTURE_TARGET_EXT
#  define GLX_TEXTURE_TARGET_EXT 0x20D6
#endif
#ifndef GLX_MIPMAP_TEXTURE_EXT
#  define GLX_MIPMAP_TEXTURE_EXT 0x20D7
#endif
#ifndef GLX_TEXTURE_FORMAT_NONE_EXT
#  define GLX_TEXTURE_FORMAT_NONE_EXT 0x20D8
#endif
#ifndef GLX_TEXTURE_FORMAT_RGB_EXT
#  define GLX_TEXTURE_FORMAT_RGB_EXT 0x20D9
#endif
#ifndef GLX_TEXTURE_FORMAT_RGBA_EXT
#  define GLX_TEXTURE_FORMAT_RGBA_EXT 0x20DA
#endif
#ifndef GLX_TEXTURE_1D_EXT
#  define GLX_TEXTURE_1D_EXT 0x20DB
#endif
#ifndef GLX_TEXTURE_2D_EXT
#  define GLX_TEXTURE_2D_EXT 0x20DC
#endif
#ifndef GLX_TEXTURE_RECTANGLE_EXT
#  define GLX_TEXTURE_RECTANGLE_EXT 0x20DD
#endif
#ifndef GLX_FRONT_LEFT_EXT
#  define GLX_FRONT_LEFT_EXT 0x20DE
#endif
#ifndef GLX_FRONT_RIGHT_EXT
#  define GLX_FRONT_RIGHT_EXT 0x20DF
#endif
#ifndef GLX_BACK_LEFT_EXT
#  define GLX_BACK_LEFT_EXT 0x20E0
#endif
#ifndef GLX_BACK_RIGHT_EXT
#  define GLX_BACK_RIGHT_EXT 0x20E1
#endif
#ifndef GLX_FRONT_EXT
#  define GLX_FRONT_EXT GLX_FRONT_LEFT_EXT
#endif
#ifndef GLX_BACK_EXT
#  define GLX_BACK_EXT GLX_BACK_LEFT_EXT
#endif
#ifndef GLX_AUX0_EXT
#  define GLX_AUX0_EXT 0x20E2
#endif
#ifndef GLX_AUX1_EXT
#  define GLX_AUX1_EXT 0x20E3
#endif
#ifndef GLX_AUX2_EXT
#  define GLX_AUX2_EXT 0x20E4
#endif
#ifndef GLX_AUX3_EXT
#  define GLX_AUX3_EXT 0x20E5
#endif
#ifndef GLX_AUX4_EXT
#  define GLX_AUX4_EXT 0x20E6
#endif
#ifndef GLX_AUX5_EXT
#  define GLX_AUX5_EXT 0x20E7
#endif
#ifndef GLX_AUX6_EXT
#  define GLX_AUX6_EXT 0x20E8
#endif
#ifndef GLX_AUX7_EXT
#  define GLX_AUX7_EXT 0x20E9
#endif
#ifndef GLX_AUX8_EXT
#  define GLX_AUX8_EXT 0x20EA
#endif
#ifndef GLX_AUX9_EXT
#  define GLX_AUX9_EXT 0x20EB
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
typedef void (APIENTRYP PFNXGLUXBINDTEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer, const int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
typedef void (APIENTRYP PFNXGLUXRELEASETEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
extern PFNXGLUXBINDTEXIMAGEEXTPROC glXBindTexImageEXT;
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
extern PFNXGLUXRELEASETEXIMAGEEXTPROC glXReleaseTexImageEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:55 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_EXT_texture_from_pixmap__
#define __GLUX_GLX_EXT_texture_from_pixmap__

GLUX_NEW_PLUGIN(GLX_EXT_texture_from_pixmap);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_TEXTURE_1D_BIT_EXT
#  define GLX_TEXTURE_1D_BIT_EXT 0x00000001
#endif
#ifndef GLX_TEXTURE_2D_BIT_EXT
#  define GLX_TEXTURE_2D_BIT_EXT 0x00000002
#endif
#ifndef GLX_TEXTURE_RECTANGLE_BIT_EXT
#  define GLX_TEXTURE_RECTANGLE_BIT_EXT 0x00000004
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGB_EXT
#  define GLX_BIND_TO_TEXTURE_RGB_EXT 0x20D0
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGBA_EXT
#  define GLX_BIND_TO_TEXTURE_RGBA_EXT 0x20D1
#endif
#ifndef GLX_BIND_TO_MIPMAP_TEXTURE_EXT
#  define GLX_BIND_TO_MIPMAP_TEXTURE_EXT 0x20D2
#endif
#ifndef GLX_BIND_TO_TEXTURE_TARGETS_EXT
#  define GLX_BIND_TO_TEXTURE_TARGETS_EXT 0x20D3
#endif
#ifndef GLX_Y_INVERTED_EXT
#  define GLX_Y_INVERTED_EXT 0x20D4
#endif
#ifndef GLX_TEXTURE_FORMAT_EXT
#  define GLX_TEXTURE_FORMAT_EXT 0x20D5
#endif
#ifndef GLX_TEXTURE_TARGET_EXT
#  define GLX_TEXTURE_TARGET_EXT 0x20D6
#endif
#ifndef GLX_MIPMAP_TEXTURE_EXT
#  define GLX_MIPMAP_TEXTURE_EXT 0x20D7
#endif
#ifndef GLX_TEXTURE_FORMAT_NONE_EXT
#  define GLX_TEXTURE_FORMAT_NONE_EXT 0x20D8
#endif
#ifndef GLX_TEXTURE_FORMAT_RGB_EXT
#  define GLX_TEXTURE_FORMAT_RGB_EXT 0x20D9
#endif
#ifndef GLX_TEXTURE_FORMAT_RGBA_EXT
#  define GLX_TEXTURE_FORMAT_RGBA_EXT 0x20DA
#endif
#ifndef GLX_TEXTURE_1D_EXT
#  define GLX_TEXTURE_1D_EXT 0x20DB
#endif
#ifndef GLX_TEXTURE_2D_EXT
#  define GLX_TEXTURE_2D_EXT 0x20DC
#endif
#ifndef GLX_TEXTURE_RECTANGLE_EXT
#  define GLX_TEXTURE_RECTANGLE_EXT 0x20DD
#endif
#ifndef GLX_FRONT_LEFT_EXT
#  define GLX_FRONT_LEFT_EXT 0x20DE
#endif
#ifndef GLX_FRONT_RIGHT_EXT
#  define GLX_FRONT_RIGHT_EXT 0x20DF
#endif
#ifndef GLX_BACK_LEFT_EXT
#  define GLX_BACK_LEFT_EXT 0x20E0
#endif
#ifndef GLX_BACK_RIGHT_EXT
#  define GLX_BACK_RIGHT_EXT 0x20E1
#endif
#ifndef GLX_FRONT_EXT
#  define GLX_FRONT_EXT GLX_FRONT_LEFT_EXT
#endif
#ifndef GLX_BACK_EXT
#  define GLX_BACK_EXT GLX_BACK_LEFT_EXT
#endif
#ifndef GLX_AUX0_EXT
#  define GLX_AUX0_EXT 0x20E2
#endif
#ifndef GLX_AUX1_EXT
#  define GLX_AUX1_EXT 0x20E3
#endif
#ifndef GLX_AUX2_EXT
#  define GLX_AUX2_EXT 0x20E4
#endif
#ifndef GLX_AUX3_EXT
#  define GLX_AUX3_EXT 0x20E5
#endif
#ifndef GLX_AUX4_EXT
#  define GLX_AUX4_EXT 0x20E6
#endif
#ifndef GLX_AUX5_EXT
#  define GLX_AUX5_EXT 0x20E7
#endif
#ifndef GLX_AUX6_EXT
#  define GLX_AUX6_EXT 0x20E8
#endif
#ifndef GLX_AUX7_EXT
#  define GLX_AUX7_EXT 0x20E9
#endif
#ifndef GLX_AUX8_EXT
#  define GLX_AUX8_EXT 0x20EA
#endif
#ifndef GLX_AUX9_EXT
#  define GLX_AUX9_EXT 0x20EB
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
typedef void (APIENTRYP PFNXGLUXBINDTEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer, const int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
typedef void (APIENTRYP PFNXGLUXRELEASETEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
extern PFNXGLUXBINDTEXIMAGEEXTPROC glXBindTexImageEXT;
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
extern PFNXGLUXRELEASETEXIMAGEEXTPROC glXReleaseTexImageEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:29:06 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_EXT_texture_from_pixmap__
#define __GLUX_GLX_EXT_texture_from_pixmap__

GLUX_NEW_PLUGIN(GLX_EXT_texture_from_pixmap);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_TEXTURE_1D_BIT_EXT
#  define GLX_TEXTURE_1D_BIT_EXT 0x00000001
#endif
#ifndef GLX_TEXTURE_2D_BIT_EXT
#  define GLX_TEXTURE_2D_BIT_EXT 0x00000002
#endif
#ifndef GLX_TEXTURE_RECTANGLE_BIT_EXT
#  define GLX_TEXTURE_RECTANGLE_BIT_EXT 0x00000004
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGB_EXT
#  define GLX_BIND_TO_TEXTURE_RGB_EXT 0x20D0
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGBA_EXT
#  define GLX_BIND_TO_TEXTURE_RGBA_EXT 0x20D1
#endif
#ifndef GLX_BIND_TO_MIPMAP_TEXTURE_EXT
#  define GLX_BIND_TO_MIPMAP_TEXTURE_EXT 0x20D2
#endif
#ifndef GLX_BIND_TO_TEXTURE_TARGETS_EXT
#  define GLX_BIND_TO_TEXTURE_TARGETS_EXT 0x20D3
#endif
#ifndef GLX_Y_INVERTED_EXT
#  define GLX_Y_INVERTED_EXT 0x20D4
#endif
#ifndef GLX_TEXTURE_FORMAT_EXT
#  define GLX_TEXTURE_FORMAT_EXT 0x20D5
#endif
#ifndef GLX_TEXTURE_TARGET_EXT
#  define GLX_TEXTURE_TARGET_EXT 0x20D6
#endif
#ifndef GLX_MIPMAP_TEXTURE_EXT
#  define GLX_MIPMAP_TEXTURE_EXT 0x20D7
#endif
#ifndef GLX_TEXTURE_FORMAT_NONE_EXT
#  define GLX_TEXTURE_FORMAT_NONE_EXT 0x20D8
#endif
#ifndef GLX_TEXTURE_FORMAT_RGB_EXT
#  define GLX_TEXTURE_FORMAT_RGB_EXT 0x20D9
#endif
#ifndef GLX_TEXTURE_FORMAT_RGBA_EXT
#  define GLX_TEXTURE_FORMAT_RGBA_EXT 0x20DA
#endif
#ifndef GLX_TEXTURE_1D_EXT
#  define GLX_TEXTURE_1D_EXT 0x20DB
#endif
#ifndef GLX_TEXTURE_2D_EXT
#  define GLX_TEXTURE_2D_EXT 0x20DC
#endif
#ifndef GLX_TEXTURE_RECTANGLE_EXT
#  define GLX_TEXTURE_RECTANGLE_EXT 0x20DD
#endif
#ifndef GLX_FRONT_LEFT_EXT
#  define GLX_FRONT_LEFT_EXT 0x20DE
#endif
#ifndef GLX_FRONT_RIGHT_EXT
#  define GLX_FRONT_RIGHT_EXT 0x20DF
#endif
#ifndef GLX_BACK_LEFT_EXT
#  define GLX_BACK_LEFT_EXT 0x20E0
#endif
#ifndef GLX_BACK_RIGHT_EXT
#  define GLX_BACK_RIGHT_EXT 0x20E1
#endif
#ifndef GLX_FRONT_EXT
#  define GLX_FRONT_EXT GLX_FRONT_LEFT_EXT
#endif
#ifndef GLX_BACK_EXT
#  define GLX_BACK_EXT GLX_BACK_LEFT_EXT
#endif
#ifndef GLX_AUX0_EXT
#  define GLX_AUX0_EXT 0x20E2
#endif
#ifndef GLX_AUX1_EXT
#  define GLX_AUX1_EXT 0x20E3
#endif
#ifndef GLX_AUX2_EXT
#  define GLX_AUX2_EXT 0x20E4
#endif
#ifndef GLX_AUX3_EXT
#  define GLX_AUX3_EXT 0x20E5
#endif
#ifndef GLX_AUX4_EXT
#  define GLX_AUX4_EXT 0x20E6
#endif
#ifndef GLX_AUX5_EXT
#  define GLX_AUX5_EXT 0x20E7
#endif
#ifndef GLX_AUX6_EXT
#  define GLX_AUX6_EXT 0x20E8
#endif
#ifndef GLX_AUX7_EXT
#  define GLX_AUX7_EXT 0x20E9
#endif
#ifndef GLX_AUX8_EXT
#  define GLX_AUX8_EXT 0x20EA
#endif
#ifndef GLX_AUX9_EXT
#  define GLX_AUX9_EXT 0x20EB
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
typedef void (APIENTRYP PFNXGLUXBINDTEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer, const int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
typedef void (APIENTRYP PFNXGLUXRELEASETEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
extern PFNXGLUXBINDTEXIMAGEEXTPROC glXBindTexImageEXT;
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
extern PFNXGLUXRELEASETEXIMAGEEXTPROC glXReleaseTexImageEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:17:07 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_EXT_texture_from_pixmap__
#define __GLUX_GLX_EXT_texture_from_pixmap__

GLUX_NEW_PLUGIN(GLX_EXT_texture_from_pixmap);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_TEXTURE_1D_BIT_EXT
#  define GLX_TEXTURE_1D_BIT_EXT 0x00000001
#endif
#ifndef GLX_TEXTURE_2D_BIT_EXT
#  define GLX_TEXTURE_2D_BIT_EXT 0x00000002
#endif
#ifndef GLX_TEXTURE_RECTANGLE_BIT_EXT
#  define GLX_TEXTURE_RECTANGLE_BIT_EXT 0x00000004
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGB_EXT
#  define GLX_BIND_TO_TEXTURE_RGB_EXT 0x20D0
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGBA_EXT
#  define GLX_BIND_TO_TEXTURE_RGBA_EXT 0x20D1
#endif
#ifndef GLX_BIND_TO_MIPMAP_TEXTURE_EXT
#  define GLX_BIND_TO_MIPMAP_TEXTURE_EXT 0x20D2
#endif
#ifndef GLX_BIND_TO_TEXTURE_TARGETS_EXT
#  define GLX_BIND_TO_TEXTURE_TARGETS_EXT 0x20D3
#endif
#ifndef GLX_Y_INVERTED_EXT
#  define GLX_Y_INVERTED_EXT 0x20D4
#endif
#ifndef GLX_TEXTURE_FORMAT_EXT
#  define GLX_TEXTURE_FORMAT_EXT 0x20D5
#endif
#ifndef GLX_TEXTURE_TARGET_EXT
#  define GLX_TEXTURE_TARGET_EXT 0x20D6
#endif
#ifndef GLX_MIPMAP_TEXTURE_EXT
#  define GLX_MIPMAP_TEXTURE_EXT 0x20D7
#endif
#ifndef GLX_TEXTURE_FORMAT_NONE_EXT
#  define GLX_TEXTURE_FORMAT_NONE_EXT 0x20D8
#endif
#ifndef GLX_TEXTURE_FORMAT_RGB_EXT
#  define GLX_TEXTURE_FORMAT_RGB_EXT 0x20D9
#endif
#ifndef GLX_TEXTURE_FORMAT_RGBA_EXT
#  define GLX_TEXTURE_FORMAT_RGBA_EXT 0x20DA
#endif
#ifndef GLX_TEXTURE_1D_EXT
#  define GLX_TEXTURE_1D_EXT 0x20DB
#endif
#ifndef GLX_TEXTURE_2D_EXT
#  define GLX_TEXTURE_2D_EXT 0x20DC
#endif
#ifndef GLX_TEXTURE_RECTANGLE_EXT
#  define GLX_TEXTURE_RECTANGLE_EXT 0x20DD
#endif
#ifndef GLX_FRONT_LEFT_EXT
#  define GLX_FRONT_LEFT_EXT 0x20DE
#endif
#ifndef GLX_FRONT_RIGHT_EXT
#  define GLX_FRONT_RIGHT_EXT 0x20DF
#endif
#ifndef GLX_BACK_LEFT_EXT
#  define GLX_BACK_LEFT_EXT 0x20E0
#endif
#ifndef GLX_BACK_RIGHT_EXT
#  define GLX_BACK_RIGHT_EXT 0x20E1
#endif
#ifndef GLX_FRONT_EXT
#  define GLX_FRONT_EXT GLX_FRONT_LEFT_EXT
#endif
#ifndef GLX_BACK_EXT
#  define GLX_BACK_EXT GLX_BACK_LEFT_EXT
#endif
#ifndef GLX_AUX0_EXT
#  define GLX_AUX0_EXT 0x20E2
#endif
#ifndef GLX_AUX1_EXT
#  define GLX_AUX1_EXT 0x20E3
#endif
#ifndef GLX_AUX2_EXT
#  define GLX_AUX2_EXT 0x20E4
#endif
#ifndef GLX_AUX3_EXT
#  define GLX_AUX3_EXT 0x20E5
#endif
#ifndef GLX_AUX4_EXT
#  define GLX_AUX4_EXT 0x20E6
#endif
#ifndef GLX_AUX5_EXT
#  define GLX_AUX5_EXT 0x20E7
#endif
#ifndef GLX_AUX6_EXT
#  define GLX_AUX6_EXT 0x20E8
#endif
#ifndef GLX_AUX7_EXT
#  define GLX_AUX7_EXT 0x20E9
#endif
#ifndef GLX_AUX8_EXT
#  define GLX_AUX8_EXT 0x20EA
#endif
#ifndef GLX_AUX9_EXT
#  define GLX_AUX9_EXT 0x20EB
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
typedef void (APIENTRYP PFNXGLUXBINDTEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer, const int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
typedef void (APIENTRYP PFNXGLUXRELEASETEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
extern PFNXGLUXBINDTEXIMAGEEXTPROC glXBindTexImageEXT;
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
extern PFNXGLUXRELEASETEXIMAGEEXTPROC glXReleaseTexImageEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_EXT_texture_from_pixmap__
#define __GLUX_GLX_EXT_texture_from_pixmap__

GLUX_NEW_PLUGIN(GLX_EXT_texture_from_pixmap);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_TEXTURE_1D_BIT_EXT
#  define GLX_TEXTURE_1D_BIT_EXT 0x00000001
#endif
#ifndef GLX_TEXTURE_2D_BIT_EXT
#  define GLX_TEXTURE_2D_BIT_EXT 0x00000002
#endif
#ifndef GLX_TEXTURE_RECTANGLE_BIT_EXT
#  define GLX_TEXTURE_RECTANGLE_BIT_EXT 0x00000004
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGB_EXT
#  define GLX_BIND_TO_TEXTURE_RGB_EXT 0x20D0
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGBA_EXT
#  define GLX_BIND_TO_TEXTURE_RGBA_EXT 0x20D1
#endif
#ifndef GLX_BIND_TO_MIPMAP_TEXTURE_EXT
#  define GLX_BIND_TO_MIPMAP_TEXTURE_EXT 0x20D2
#endif
#ifndef GLX_BIND_TO_TEXTURE_TARGETS_EXT
#  define GLX_BIND_TO_TEXTURE_TARGETS_EXT 0x20D3
#endif
#ifndef GLX_Y_INVERTED_EXT
#  define GLX_Y_INVERTED_EXT 0x20D4
#endif
#ifndef GLX_TEXTURE_FORMAT_EXT
#  define GLX_TEXTURE_FORMAT_EXT 0x20D5
#endif
#ifndef GLX_TEXTURE_TARGET_EXT
#  define GLX_TEXTURE_TARGET_EXT 0x20D6
#endif
#ifndef GLX_MIPMAP_TEXTURE_EXT
#  define GLX_MIPMAP_TEXTURE_EXT 0x20D7
#endif
#ifndef GLX_TEXTURE_FORMAT_NONE_EXT
#  define GLX_TEXTURE_FORMAT_NONE_EXT 0x20D8
#endif
#ifndef GLX_TEXTURE_FORMAT_RGB_EXT
#  define GLX_TEXTURE_FORMAT_RGB_EXT 0x20D9
#endif
#ifndef GLX_TEXTURE_FORMAT_RGBA_EXT
#  define GLX_TEXTURE_FORMAT_RGBA_EXT 0x20DA
#endif
#ifndef GLX_TEXTURE_1D_EXT
#  define GLX_TEXTURE_1D_EXT 0x20DB
#endif
#ifndef GLX_TEXTURE_2D_EXT
#  define GLX_TEXTURE_2D_EXT 0x20DC
#endif
#ifndef GLX_TEXTURE_RECTANGLE_EXT
#  define GLX_TEXTURE_RECTANGLE_EXT 0x20DD
#endif
#ifndef GLX_FRONT_LEFT_EXT
#  define GLX_FRONT_LEFT_EXT 0x20DE
#endif
#ifndef GLX_FRONT_RIGHT_EXT
#  define GLX_FRONT_RIGHT_EXT 0x20DF
#endif
#ifndef GLX_BACK_LEFT_EXT
#  define GLX_BACK_LEFT_EXT 0x20E0
#endif
#ifndef GLX_BACK_RIGHT_EXT
#  define GLX_BACK_RIGHT_EXT 0x20E1
#endif
#ifndef GLX_FRONT_EXT
#  define GLX_FRONT_EXT GLX_FRONT_LEFT_EXT
#endif
#ifndef GLX_BACK_EXT
#  define GLX_BACK_EXT GLX_BACK_LEFT_EXT
#endif
#ifndef GLX_AUX0_EXT
#  define GLX_AUX0_EXT 0x20E2
#endif
#ifndef GLX_AUX1_EXT
#  define GLX_AUX1_EXT 0x20E3
#endif
#ifndef GLX_AUX2_EXT
#  define GLX_AUX2_EXT 0x20E4
#endif
#ifndef GLX_AUX3_EXT
#  define GLX_AUX3_EXT 0x20E5
#endif
#ifndef GLX_AUX4_EXT
#  define GLX_AUX4_EXT 0x20E6
#endif
#ifndef GLX_AUX5_EXT
#  define GLX_AUX5_EXT 0x20E7
#endif
#ifndef GLX_AUX6_EXT
#  define GLX_AUX6_EXT 0x20E8
#endif
#ifndef GLX_AUX7_EXT
#  define GLX_AUX7_EXT 0x20E9
#endif
#ifndef GLX_AUX8_EXT
#  define GLX_AUX8_EXT 0x20EA
#endif
#ifndef GLX_AUX9_EXT
#  define GLX_AUX9_EXT 0x20EB
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
typedef void (APIENTRYP PFNXGLUXBINDTEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer, const int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
typedef void (APIENTRYP PFNXGLUXRELEASETEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
extern PFNXGLUXBINDTEXIMAGEEXTPROC glXBindTexImageEXT;
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
extern PFNXGLUXRELEASETEXIMAGEEXTPROC glXReleaseTexImageEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:21 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_EXT_texture_from_pixmap__
#define __GLUX_GLX_EXT_texture_from_pixmap__

GLUX_NEW_PLUGIN(GLX_EXT_texture_from_pixmap);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_TEXTURE_1D_BIT_EXT
#  define GLX_TEXTURE_1D_BIT_EXT 0x00000001
#endif
#ifndef GLX_TEXTURE_2D_BIT_EXT
#  define GLX_TEXTURE_2D_BIT_EXT 0x00000002
#endif
#ifndef GLX_TEXTURE_RECTANGLE_BIT_EXT
#  define GLX_TEXTURE_RECTANGLE_BIT_EXT 0x00000004
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGB_EXT
#  define GLX_BIND_TO_TEXTURE_RGB_EXT 0x20D0
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGBA_EXT
#  define GLX_BIND_TO_TEXTURE_RGBA_EXT 0x20D1
#endif
#ifndef GLX_BIND_TO_MIPMAP_TEXTURE_EXT
#  define GLX_BIND_TO_MIPMAP_TEXTURE_EXT 0x20D2
#endif
#ifndef GLX_BIND_TO_TEXTURE_TARGETS_EXT
#  define GLX_BIND_TO_TEXTURE_TARGETS_EXT 0x20D3
#endif
#ifndef GLX_Y_INVERTED_EXT
#  define GLX_Y_INVERTED_EXT 0x20D4
#endif
#ifndef GLX_TEXTURE_FORMAT_EXT
#  define GLX_TEXTURE_FORMAT_EXT 0x20D5
#endif
#ifndef GLX_TEXTURE_TARGET_EXT
#  define GLX_TEXTURE_TARGET_EXT 0x20D6
#endif
#ifndef GLX_MIPMAP_TEXTURE_EXT
#  define GLX_MIPMAP_TEXTURE_EXT 0x20D7
#endif
#ifndef GLX_TEXTURE_FORMAT_NONE_EXT
#  define GLX_TEXTURE_FORMAT_NONE_EXT 0x20D8
#endif
#ifndef GLX_TEXTURE_FORMAT_RGB_EXT
#  define GLX_TEXTURE_FORMAT_RGB_EXT 0x20D9
#endif
#ifndef GLX_TEXTURE_FORMAT_RGBA_EXT
#  define GLX_TEXTURE_FORMAT_RGBA_EXT 0x20DA
#endif
#ifndef GLX_TEXTURE_1D_EXT
#  define GLX_TEXTURE_1D_EXT 0x20DB
#endif
#ifndef GLX_TEXTURE_2D_EXT
#  define GLX_TEXTURE_2D_EXT 0x20DC
#endif
#ifndef GLX_TEXTURE_RECTANGLE_EXT
#  define GLX_TEXTURE_RECTANGLE_EXT 0x20DD
#endif
#ifndef GLX_FRONT_LEFT_EXT
#  define GLX_FRONT_LEFT_EXT 0x20DE
#endif
#ifndef GLX_FRONT_RIGHT_EXT
#  define GLX_FRONT_RIGHT_EXT 0x20DF
#endif
#ifndef GLX_BACK_LEFT_EXT
#  define GLX_BACK_LEFT_EXT 0x20E0
#endif
#ifndef GLX_BACK_RIGHT_EXT
#  define GLX_BACK_RIGHT_EXT 0x20E1
#endif
#ifndef GLX_FRONT_EXT
#  define GLX_FRONT_EXT GLX_FRONT_LEFT_EXT
#endif
#ifndef GLX_BACK_EXT
#  define GLX_BACK_EXT GLX_BACK_LEFT_EXT
#endif
#ifndef GLX_AUX0_EXT
#  define GLX_AUX0_EXT 0x20E2
#endif
#ifndef GLX_AUX1_EXT
#  define GLX_AUX1_EXT 0x20E3
#endif
#ifndef GLX_AUX2_EXT
#  define GLX_AUX2_EXT 0x20E4
#endif
#ifndef GLX_AUX3_EXT
#  define GLX_AUX3_EXT 0x20E5
#endif
#ifndef GLX_AUX4_EXT
#  define GLX_AUX4_EXT 0x20E6
#endif
#ifndef GLX_AUX5_EXT
#  define GLX_AUX5_EXT 0x20E7
#endif
#ifndef GLX_AUX6_EXT
#  define GLX_AUX6_EXT 0x20E8
#endif
#ifndef GLX_AUX7_EXT
#  define GLX_AUX7_EXT 0x20E9
#endif
#ifndef GLX_AUX8_EXT
#  define GLX_AUX8_EXT 0x20EA
#endif
#ifndef GLX_AUX9_EXT
#  define GLX_AUX9_EXT 0x20EB
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
typedef void (APIENTRYP PFNXGLUXBINDTEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer, const int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
typedef void (APIENTRYP PFNXGLUXRELEASETEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
extern PFNXGLUXBINDTEXIMAGEEXTPROC glXBindTexImageEXT;
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
extern PFNXGLUXRELEASETEXIMAGEEXTPROC glXReleaseTexImageEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_EXT_texture_from_pixmap__
#define __GLUX_GLX_EXT_texture_from_pixmap__

GLUX_NEW_PLUGIN(GLX_EXT_texture_from_pixmap);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_TEXTURE_1D_BIT_EXT
#  define GLX_TEXTURE_1D_BIT_EXT 0x00000001
#endif
#ifndef GLX_TEXTURE_2D_BIT_EXT
#  define GLX_TEXTURE_2D_BIT_EXT 0x00000002
#endif
#ifndef GLX_TEXTURE_RECTANGLE_BIT_EXT
#  define GLX_TEXTURE_RECTANGLE_BIT_EXT 0x00000004
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGB_EXT
#  define GLX_BIND_TO_TEXTURE_RGB_EXT 0x20D0
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGBA_EXT
#  define GLX_BIND_TO_TEXTURE_RGBA_EXT 0x20D1
#endif
#ifndef GLX_BIND_TO_MIPMAP_TEXTURE_EXT
#  define GLX_BIND_TO_MIPMAP_TEXTURE_EXT 0x20D2
#endif
#ifndef GLX_BIND_TO_TEXTURE_TARGETS_EXT
#  define GLX_BIND_TO_TEXTURE_TARGETS_EXT 0x20D3
#endif
#ifndef GLX_Y_INVERTED_EXT
#  define GLX_Y_INVERTED_EXT 0x20D4
#endif
#ifndef GLX_TEXTURE_FORMAT_EXT
#  define GLX_TEXTURE_FORMAT_EXT 0x20D5
#endif
#ifndef GLX_TEXTURE_TARGET_EXT
#  define GLX_TEXTURE_TARGET_EXT 0x20D6
#endif
#ifndef GLX_MIPMAP_TEXTURE_EXT
#  define GLX_MIPMAP_TEXTURE_EXT 0x20D7
#endif
#ifndef GLX_TEXTURE_FORMAT_NONE_EXT
#  define GLX_TEXTURE_FORMAT_NONE_EXT 0x20D8
#endif
#ifndef GLX_TEXTURE_FORMAT_RGB_EXT
#  define GLX_TEXTURE_FORMAT_RGB_EXT 0x20D9
#endif
#ifndef GLX_TEXTURE_FORMAT_RGBA_EXT
#  define GLX_TEXTURE_FORMAT_RGBA_EXT 0x20DA
#endif
#ifndef GLX_TEXTURE_1D_EXT
#  define GLX_TEXTURE_1D_EXT 0x20DB
#endif
#ifndef GLX_TEXTURE_2D_EXT
#  define GLX_TEXTURE_2D_EXT 0x20DC
#endif
#ifndef GLX_TEXTURE_RECTANGLE_EXT
#  define GLX_TEXTURE_RECTANGLE_EXT 0x20DD
#endif
#ifndef GLX_FRONT_LEFT_EXT
#  define GLX_FRONT_LEFT_EXT 0x20DE
#endif
#ifndef GLX_FRONT_RIGHT_EXT
#  define GLX_FRONT_RIGHT_EXT 0x20DF
#endif
#ifndef GLX_BACK_LEFT_EXT
#  define GLX_BACK_LEFT_EXT 0x20E0
#endif
#ifndef GLX_BACK_RIGHT_EXT
#  define GLX_BACK_RIGHT_EXT 0x20E1
#endif
#ifndef GLX_FRONT_EXT
#  define GLX_FRONT_EXT GLX_FRONT_LEFT_EXT
#endif
#ifndef GLX_BACK_EXT
#  define GLX_BACK_EXT GLX_BACK_LEFT_EXT
#endif
#ifndef GLX_AUX0_EXT
#  define GLX_AUX0_EXT 0x20E2
#endif
#ifndef GLX_AUX1_EXT
#  define GLX_AUX1_EXT 0x20E3
#endif
#ifndef GLX_AUX2_EXT
#  define GLX_AUX2_EXT 0x20E4
#endif
#ifndef GLX_AUX3_EXT
#  define GLX_AUX3_EXT 0x20E5
#endif
#ifndef GLX_AUX4_EXT
#  define GLX_AUX4_EXT 0x20E6
#endif
#ifndef GLX_AUX5_EXT
#  define GLX_AUX5_EXT 0x20E7
#endif
#ifndef GLX_AUX6_EXT
#  define GLX_AUX6_EXT 0x20E8
#endif
#ifndef GLX_AUX7_EXT
#  define GLX_AUX7_EXT 0x20E9
#endif
#ifndef GLX_AUX8_EXT
#  define GLX_AUX8_EXT 0x20EA
#endif
#ifndef GLX_AUX9_EXT
#  define GLX_AUX9_EXT 0x20EB
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
typedef void (APIENTRYP PFNXGLUXBINDTEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer, const int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
typedef void (APIENTRYP PFNXGLUXRELEASETEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
extern PFNXGLUXBINDTEXIMAGEEXTPROC glXBindTexImageEXT;
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
extern PFNXGLUXRELEASETEXIMAGEEXTPROC glXReleaseTexImageEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:09 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_EXT_texture_from_pixmap__
#define __GLUX_GLX_EXT_texture_from_pixmap__

GLUX_NEW_PLUGIN(GLX_EXT_texture_from_pixmap);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_TEXTURE_1D_BIT_EXT
#  define GLX_TEXTURE_1D_BIT_EXT 0x00000001
#endif
#ifndef GLX_TEXTURE_2D_BIT_EXT
#  define GLX_TEXTURE_2D_BIT_EXT 0x00000002
#endif
#ifndef GLX_TEXTURE_RECTANGLE_BIT_EXT
#  define GLX_TEXTURE_RECTANGLE_BIT_EXT 0x00000004
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGB_EXT
#  define GLX_BIND_TO_TEXTURE_RGB_EXT 0x20D0
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGBA_EXT
#  define GLX_BIND_TO_TEXTURE_RGBA_EXT 0x20D1
#endif
#ifndef GLX_BIND_TO_MIPMAP_TEXTURE_EXT
#  define GLX_BIND_TO_MIPMAP_TEXTURE_EXT 0x20D2
#endif
#ifndef GLX_BIND_TO_TEXTURE_TARGETS_EXT
#  define GLX_BIND_TO_TEXTURE_TARGETS_EXT 0x20D3
#endif
#ifndef GLX_Y_INVERTED_EXT
#  define GLX_Y_INVERTED_EXT 0x20D4
#endif
#ifndef GLX_TEXTURE_FORMAT_EXT
#  define GLX_TEXTURE_FORMAT_EXT 0x20D5
#endif
#ifndef GLX_TEXTURE_TARGET_EXT
#  define GLX_TEXTURE_TARGET_EXT 0x20D6
#endif
#ifndef GLX_MIPMAP_TEXTURE_EXT
#  define GLX_MIPMAP_TEXTURE_EXT 0x20D7
#endif
#ifndef GLX_TEXTURE_FORMAT_NONE_EXT
#  define GLX_TEXTURE_FORMAT_NONE_EXT 0x20D8
#endif
#ifndef GLX_TEXTURE_FORMAT_RGB_EXT
#  define GLX_TEXTURE_FORMAT_RGB_EXT 0x20D9
#endif
#ifndef GLX_TEXTURE_FORMAT_RGBA_EXT
#  define GLX_TEXTURE_FORMAT_RGBA_EXT 0x20DA
#endif
#ifndef GLX_TEXTURE_1D_EXT
#  define GLX_TEXTURE_1D_EXT 0x20DB
#endif
#ifndef GLX_TEXTURE_2D_EXT
#  define GLX_TEXTURE_2D_EXT 0x20DC
#endif
#ifndef GLX_TEXTURE_RECTANGLE_EXT
#  define GLX_TEXTURE_RECTANGLE_EXT 0x20DD
#endif
#ifndef GLX_FRONT_LEFT_EXT
#  define GLX_FRONT_LEFT_EXT 0x20DE
#endif
#ifndef GLX_FRONT_RIGHT_EXT
#  define GLX_FRONT_RIGHT_EXT 0x20DF
#endif
#ifndef GLX_BACK_LEFT_EXT
#  define GLX_BACK_LEFT_EXT 0x20E0
#endif
#ifndef GLX_BACK_RIGHT_EXT
#  define GLX_BACK_RIGHT_EXT 0x20E1
#endif
#ifndef GLX_FRONT_EXT
#  define GLX_FRONT_EXT GLX_FRONT_LEFT_EXT
#endif
#ifndef GLX_BACK_EXT
#  define GLX_BACK_EXT GLX_BACK_LEFT_EXT
#endif
#ifndef GLX_AUX0_EXT
#  define GLX_AUX0_EXT 0x20E2
#endif
#ifndef GLX_AUX1_EXT
#  define GLX_AUX1_EXT 0x20E3
#endif
#ifndef GLX_AUX2_EXT
#  define GLX_AUX2_EXT 0x20E4
#endif
#ifndef GLX_AUX3_EXT
#  define GLX_AUX3_EXT 0x20E5
#endif
#ifndef GLX_AUX4_EXT
#  define GLX_AUX4_EXT 0x20E6
#endif
#ifndef GLX_AUX5_EXT
#  define GLX_AUX5_EXT 0x20E7
#endif
#ifndef GLX_AUX6_EXT
#  define GLX_AUX6_EXT 0x20E8
#endif
#ifndef GLX_AUX7_EXT
#  define GLX_AUX7_EXT 0x20E9
#endif
#ifndef GLX_AUX8_EXT
#  define GLX_AUX8_EXT 0x20EA
#endif
#ifndef GLX_AUX9_EXT
#  define GLX_AUX9_EXT 0x20EB
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
typedef void (APIENTRYP PFNXGLUXBINDTEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer, const int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
typedef void (APIENTRYP PFNXGLUXRELEASETEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
extern PFNXGLUXBINDTEXIMAGEEXTPROC glXBindTexImageEXT;
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
extern PFNXGLUXRELEASETEXIMAGEEXTPROC glXReleaseTexImageEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:24 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_EXT_texture_from_pixmap__
#define __GLUX_GLX_EXT_texture_from_pixmap__

GLUX_NEW_PLUGIN(GLX_EXT_texture_from_pixmap);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_TEXTURE_1D_BIT_EXT
#  define GLX_TEXTURE_1D_BIT_EXT 0x00000001
#endif
#ifndef GLX_TEXTURE_2D_BIT_EXT
#  define GLX_TEXTURE_2D_BIT_EXT 0x00000002
#endif
#ifndef GLX_TEXTURE_RECTANGLE_BIT_EXT
#  define GLX_TEXTURE_RECTANGLE_BIT_EXT 0x00000004
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGB_EXT
#  define GLX_BIND_TO_TEXTURE_RGB_EXT 0x20D0
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGBA_EXT
#  define GLX_BIND_TO_TEXTURE_RGBA_EXT 0x20D1
#endif
#ifndef GLX_BIND_TO_MIPMAP_TEXTURE_EXT
#  define GLX_BIND_TO_MIPMAP_TEXTURE_EXT 0x20D2
#endif
#ifndef GLX_BIND_TO_TEXTURE_TARGETS_EXT
#  define GLX_BIND_TO_TEXTURE_TARGETS_EXT 0x20D3
#endif
#ifndef GLX_Y_INVERTED_EXT
#  define GLX_Y_INVERTED_EXT 0x20D4
#endif
#ifndef GLX_TEXTURE_FORMAT_EXT
#  define GLX_TEXTURE_FORMAT_EXT 0x20D5
#endif
#ifndef GLX_TEXTURE_TARGET_EXT
#  define GLX_TEXTURE_TARGET_EXT 0x20D6
#endif
#ifndef GLX_MIPMAP_TEXTURE_EXT
#  define GLX_MIPMAP_TEXTURE_EXT 0x20D7
#endif
#ifndef GLX_TEXTURE_FORMAT_NONE_EXT
#  define GLX_TEXTURE_FORMAT_NONE_EXT 0x20D8
#endif
#ifndef GLX_TEXTURE_FORMAT_RGB_EXT
#  define GLX_TEXTURE_FORMAT_RGB_EXT 0x20D9
#endif
#ifndef GLX_TEXTURE_FORMAT_RGBA_EXT
#  define GLX_TEXTURE_FORMAT_RGBA_EXT 0x20DA
#endif
#ifndef GLX_TEXTURE_1D_EXT
#  define GLX_TEXTURE_1D_EXT 0x20DB
#endif
#ifndef GLX_TEXTURE_2D_EXT
#  define GLX_TEXTURE_2D_EXT 0x20DC
#endif
#ifndef GLX_TEXTURE_RECTANGLE_EXT
#  define GLX_TEXTURE_RECTANGLE_EXT 0x20DD
#endif
#ifndef GLX_FRONT_LEFT_EXT
#  define GLX_FRONT_LEFT_EXT 0x20DE
#endif
#ifndef GLX_FRONT_RIGHT_EXT
#  define GLX_FRONT_RIGHT_EXT 0x20DF
#endif
#ifndef GLX_BACK_LEFT_EXT
#  define GLX_BACK_LEFT_EXT 0x20E0
#endif
#ifndef GLX_BACK_RIGHT_EXT
#  define GLX_BACK_RIGHT_EXT 0x20E1
#endif
#ifndef GLX_FRONT_EXT
#  define GLX_FRONT_EXT GLX_FRONT_LEFT_EXT
#endif
#ifndef GLX_BACK_EXT
#  define GLX_BACK_EXT GLX_BACK_LEFT_EXT
#endif
#ifndef GLX_AUX0_EXT
#  define GLX_AUX0_EXT 0x20E2
#endif
#ifndef GLX_AUX1_EXT
#  define GLX_AUX1_EXT 0x20E3
#endif
#ifndef GLX_AUX2_EXT
#  define GLX_AUX2_EXT 0x20E4
#endif
#ifndef GLX_AUX3_EXT
#  define GLX_AUX3_EXT 0x20E5
#endif
#ifndef GLX_AUX4_EXT
#  define GLX_AUX4_EXT 0x20E6
#endif
#ifndef GLX_AUX5_EXT
#  define GLX_AUX5_EXT 0x20E7
#endif
#ifndef GLX_AUX6_EXT
#  define GLX_AUX6_EXT 0x20E8
#endif
#ifndef GLX_AUX7_EXT
#  define GLX_AUX7_EXT 0x20E9
#endif
#ifndef GLX_AUX8_EXT
#  define GLX_AUX8_EXT 0x20EA
#endif
#ifndef GLX_AUX9_EXT
#  define GLX_AUX9_EXT 0x20EB
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
typedef void (APIENTRYP PFNXGLUXBINDTEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer, const int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
typedef void (APIENTRYP PFNXGLUXRELEASETEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
extern PFNXGLUXBINDTEXIMAGEEXTPROC glXBindTexImageEXT;
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
extern PFNXGLUXRELEASETEXIMAGEEXTPROC glXReleaseTexImageEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:52:05 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_EXT_texture_from_pixmap__
#define __GLUX_GLX_EXT_texture_from_pixmap__

GLUX_NEW_PLUGIN(GLX_EXT_texture_from_pixmap);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_TEXTURE_1D_BIT_EXT
#  define GLX_TEXTURE_1D_BIT_EXT 0x00000001
#endif
#ifndef GLX_TEXTURE_2D_BIT_EXT
#  define GLX_TEXTURE_2D_BIT_EXT 0x00000002
#endif
#ifndef GLX_TEXTURE_RECTANGLE_BIT_EXT
#  define GLX_TEXTURE_RECTANGLE_BIT_EXT 0x00000004
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGB_EXT
#  define GLX_BIND_TO_TEXTURE_RGB_EXT 0x20D0
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGBA_EXT
#  define GLX_BIND_TO_TEXTURE_RGBA_EXT 0x20D1
#endif
#ifndef GLX_BIND_TO_MIPMAP_TEXTURE_EXT
#  define GLX_BIND_TO_MIPMAP_TEXTURE_EXT 0x20D2
#endif
#ifndef GLX_BIND_TO_TEXTURE_TARGETS_EXT
#  define GLX_BIND_TO_TEXTURE_TARGETS_EXT 0x20D3
#endif
#ifndef GLX_Y_INVERTED_EXT
#  define GLX_Y_INVERTED_EXT 0x20D4
#endif
#ifndef GLX_TEXTURE_FORMAT_EXT
#  define GLX_TEXTURE_FORMAT_EXT 0x20D5
#endif
#ifndef GLX_TEXTURE_TARGET_EXT
#  define GLX_TEXTURE_TARGET_EXT 0x20D6
#endif
#ifndef GLX_MIPMAP_TEXTURE_EXT
#  define GLX_MIPMAP_TEXTURE_EXT 0x20D7
#endif
#ifndef GLX_TEXTURE_FORMAT_NONE_EXT
#  define GLX_TEXTURE_FORMAT_NONE_EXT 0x20D8
#endif
#ifndef GLX_TEXTURE_FORMAT_RGB_EXT
#  define GLX_TEXTURE_FORMAT_RGB_EXT 0x20D9
#endif
#ifndef GLX_TEXTURE_FORMAT_RGBA_EXT
#  define GLX_TEXTURE_FORMAT_RGBA_EXT 0x20DA
#endif
#ifndef GLX_TEXTURE_1D_EXT
#  define GLX_TEXTURE_1D_EXT 0x20DB
#endif
#ifndef GLX_TEXTURE_2D_EXT
#  define GLX_TEXTURE_2D_EXT 0x20DC
#endif
#ifndef GLX_TEXTURE_RECTANGLE_EXT
#  define GLX_TEXTURE_RECTANGLE_EXT 0x20DD
#endif
#ifndef GLX_FRONT_LEFT_EXT
#  define GLX_FRONT_LEFT_EXT 0x20DE
#endif
#ifndef GLX_FRONT_RIGHT_EXT
#  define GLX_FRONT_RIGHT_EXT 0x20DF
#endif
#ifndef GLX_BACK_LEFT_EXT
#  define GLX_BACK_LEFT_EXT 0x20E0
#endif
#ifndef GLX_BACK_RIGHT_EXT
#  define GLX_BACK_RIGHT_EXT 0x20E1
#endif
#ifndef GLX_FRONT_EXT
#  define GLX_FRONT_EXT GLX_FRONT_LEFT_EXT
#endif
#ifndef GLX_BACK_EXT
#  define GLX_BACK_EXT GLX_BACK_LEFT_EXT
#endif
#ifndef GLX_AUX0_EXT
#  define GLX_AUX0_EXT 0x20E2
#endif
#ifndef GLX_AUX1_EXT
#  define GLX_AUX1_EXT 0x20E3
#endif
#ifndef GLX_AUX2_EXT
#  define GLX_AUX2_EXT 0x20E4
#endif
#ifndef GLX_AUX3_EXT
#  define GLX_AUX3_EXT 0x20E5
#endif
#ifndef GLX_AUX4_EXT
#  define GLX_AUX4_EXT 0x20E6
#endif
#ifndef GLX_AUX5_EXT
#  define GLX_AUX5_EXT 0x20E7
#endif
#ifndef GLX_AUX6_EXT
#  define GLX_AUX6_EXT 0x20E8
#endif
#ifndef GLX_AUX7_EXT
#  define GLX_AUX7_EXT 0x20E9
#endif
#ifndef GLX_AUX8_EXT
#  define GLX_AUX8_EXT 0x20EA
#endif
#ifndef GLX_AUX9_EXT
#  define GLX_AUX9_EXT 0x20EB
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
typedef void (APIENTRYP PFNXGLUXBINDTEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer, const int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
typedef void (APIENTRYP PFNXGLUXRELEASETEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
extern PFNXGLUXBINDTEXIMAGEEXTPROC glXBindTexImageEXT;
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
extern PFNXGLUXRELEASETEXIMAGEEXTPROC glXReleaseTexImageEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_EXT_texture_from_pixmap__
#define __GLUX_GLX_EXT_texture_from_pixmap__

GLUX_NEW_PLUGIN(GLX_EXT_texture_from_pixmap);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_TEXTURE_1D_BIT_EXT
#  define GLX_TEXTURE_1D_BIT_EXT 0x00000001
#endif
#ifndef GLX_TEXTURE_2D_BIT_EXT
#  define GLX_TEXTURE_2D_BIT_EXT 0x00000002
#endif
#ifndef GLX_TEXTURE_RECTANGLE_BIT_EXT
#  define GLX_TEXTURE_RECTANGLE_BIT_EXT 0x00000004
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGB_EXT
#  define GLX_BIND_TO_TEXTURE_RGB_EXT 0x20D0
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGBA_EXT
#  define GLX_BIND_TO_TEXTURE_RGBA_EXT 0x20D1
#endif
#ifndef GLX_BIND_TO_MIPMAP_TEXTURE_EXT
#  define GLX_BIND_TO_MIPMAP_TEXTURE_EXT 0x20D2
#endif
#ifndef GLX_BIND_TO_TEXTURE_TARGETS_EXT
#  define GLX_BIND_TO_TEXTURE_TARGETS_EXT 0x20D3
#endif
#ifndef GLX_Y_INVERTED_EXT
#  define GLX_Y_INVERTED_EXT 0x20D4
#endif
#ifndef GLX_TEXTURE_FORMAT_EXT
#  define GLX_TEXTURE_FORMAT_EXT 0x20D5
#endif
#ifndef GLX_TEXTURE_TARGET_EXT
#  define GLX_TEXTURE_TARGET_EXT 0x20D6
#endif
#ifndef GLX_MIPMAP_TEXTURE_EXT
#  define GLX_MIPMAP_TEXTURE_EXT 0x20D7
#endif
#ifndef GLX_TEXTURE_FORMAT_NONE_EXT
#  define GLX_TEXTURE_FORMAT_NONE_EXT 0x20D8
#endif
#ifndef GLX_TEXTURE_FORMAT_RGB_EXT
#  define GLX_TEXTURE_FORMAT_RGB_EXT 0x20D9
#endif
#ifndef GLX_TEXTURE_FORMAT_RGBA_EXT
#  define GLX_TEXTURE_FORMAT_RGBA_EXT 0x20DA
#endif
#ifndef GLX_TEXTURE_1D_EXT
#  define GLX_TEXTURE_1D_EXT 0x20DB
#endif
#ifndef GLX_TEXTURE_2D_EXT
#  define GLX_TEXTURE_2D_EXT 0x20DC
#endif
#ifndef GLX_TEXTURE_RECTANGLE_EXT
#  define GLX_TEXTURE_RECTANGLE_EXT 0x20DD
#endif
#ifndef GLX_FRONT_LEFT_EXT
#  define GLX_FRONT_LEFT_EXT 0x20DE
#endif
#ifndef GLX_FRONT_RIGHT_EXT
#  define GLX_FRONT_RIGHT_EXT 0x20DF
#endif
#ifndef GLX_BACK_LEFT_EXT
#  define GLX_BACK_LEFT_EXT 0x20E0
#endif
#ifndef GLX_BACK_RIGHT_EXT
#  define GLX_BACK_RIGHT_EXT 0x20E1
#endif
#ifndef GLX_FRONT_EXT
#  define GLX_FRONT_EXT GLX_FRONT_LEFT_EXT
#endif
#ifndef GLX_BACK_EXT
#  define GLX_BACK_EXT GLX_BACK_LEFT_EXT
#endif
#ifndef GLX_AUX0_EXT
#  define GLX_AUX0_EXT 0x20E2
#endif
#ifndef GLX_AUX1_EXT
#  define GLX_AUX1_EXT 0x20E3
#endif
#ifndef GLX_AUX2_EXT
#  define GLX_AUX2_EXT 0x20E4
#endif
#ifndef GLX_AUX3_EXT
#  define GLX_AUX3_EXT 0x20E5
#endif
#ifndef GLX_AUX4_EXT
#  define GLX_AUX4_EXT 0x20E6
#endif
#ifndef GLX_AUX5_EXT
#  define GLX_AUX5_EXT 0x20E7
#endif
#ifndef GLX_AUX6_EXT
#  define GLX_AUX6_EXT 0x20E8
#endif
#ifndef GLX_AUX7_EXT
#  define GLX_AUX7_EXT 0x20E9
#endif
#ifndef GLX_AUX8_EXT
#  define GLX_AUX8_EXT 0x20EA
#endif
#ifndef GLX_AUX9_EXT
#  define GLX_AUX9_EXT 0x20EB
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
typedef void (APIENTRYP PFNXGLUXBINDTEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer, const int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
typedef void (APIENTRYP PFNXGLUXRELEASETEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
extern PFNXGLUXBINDTEXIMAGEEXTPROC glXBindTexImageEXT;
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
extern PFNXGLUXRELEASETEXIMAGEEXTPROC glXReleaseTexImageEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:06 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_EXT_texture_from_pixmap__
#define __GLUX_GLX_EXT_texture_from_pixmap__

GLUX_NEW_PLUGIN(GLX_EXT_texture_from_pixmap);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_TEXTURE_1D_BIT_EXT
#  define GLX_TEXTURE_1D_BIT_EXT 0x00000001
#endif
#ifndef GLX_TEXTURE_2D_BIT_EXT
#  define GLX_TEXTURE_2D_BIT_EXT 0x00000002
#endif
#ifndef GLX_TEXTURE_RECTANGLE_BIT_EXT
#  define GLX_TEXTURE_RECTANGLE_BIT_EXT 0x00000004
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGB_EXT
#  define GLX_BIND_TO_TEXTURE_RGB_EXT 0x20D0
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGBA_EXT
#  define GLX_BIND_TO_TEXTURE_RGBA_EXT 0x20D1
#endif
#ifndef GLX_BIND_TO_MIPMAP_TEXTURE_EXT
#  define GLX_BIND_TO_MIPMAP_TEXTURE_EXT 0x20D2
#endif
#ifndef GLX_BIND_TO_TEXTURE_TARGETS_EXT
#  define GLX_BIND_TO_TEXTURE_TARGETS_EXT 0x20D3
#endif
#ifndef GLX_Y_INVERTED_EXT
#  define GLX_Y_INVERTED_EXT 0x20D4
#endif
#ifndef GLX_TEXTURE_FORMAT_EXT
#  define GLX_TEXTURE_FORMAT_EXT 0x20D5
#endif
#ifndef GLX_TEXTURE_TARGET_EXT
#  define GLX_TEXTURE_TARGET_EXT 0x20D6
#endif
#ifndef GLX_MIPMAP_TEXTURE_EXT
#  define GLX_MIPMAP_TEXTURE_EXT 0x20D7
#endif
#ifndef GLX_TEXTURE_FORMAT_NONE_EXT
#  define GLX_TEXTURE_FORMAT_NONE_EXT 0x20D8
#endif
#ifndef GLX_TEXTURE_FORMAT_RGB_EXT
#  define GLX_TEXTURE_FORMAT_RGB_EXT 0x20D9
#endif
#ifndef GLX_TEXTURE_FORMAT_RGBA_EXT
#  define GLX_TEXTURE_FORMAT_RGBA_EXT 0x20DA
#endif
#ifndef GLX_TEXTURE_1D_EXT
#  define GLX_TEXTURE_1D_EXT 0x20DB
#endif
#ifndef GLX_TEXTURE_2D_EXT
#  define GLX_TEXTURE_2D_EXT 0x20DC
#endif
#ifndef GLX_TEXTURE_RECTANGLE_EXT
#  define GLX_TEXTURE_RECTANGLE_EXT 0x20DD
#endif
#ifndef GLX_FRONT_LEFT_EXT
#  define GLX_FRONT_LEFT_EXT 0x20DE
#endif
#ifndef GLX_FRONT_RIGHT_EXT
#  define GLX_FRONT_RIGHT_EXT 0x20DF
#endif
#ifndef GLX_BACK_LEFT_EXT
#  define GLX_BACK_LEFT_EXT 0x20E0
#endif
#ifndef GLX_BACK_RIGHT_EXT
#  define GLX_BACK_RIGHT_EXT 0x20E1
#endif
#ifndef GLX_FRONT_EXT
#  define GLX_FRONT_EXT GLX_FRONT_LEFT_EXT
#endif
#ifndef GLX_BACK_EXT
#  define GLX_BACK_EXT GLX_BACK_LEFT_EXT
#endif
#ifndef GLX_AUX0_EXT
#  define GLX_AUX0_EXT 0x20E2
#endif
#ifndef GLX_AUX1_EXT
#  define GLX_AUX1_EXT 0x20E3
#endif
#ifndef GLX_AUX2_EXT
#  define GLX_AUX2_EXT 0x20E4
#endif
#ifndef GLX_AUX3_EXT
#  define GLX_AUX3_EXT 0x20E5
#endif
#ifndef GLX_AUX4_EXT
#  define GLX_AUX4_EXT 0x20E6
#endif
#ifndef GLX_AUX5_EXT
#  define GLX_AUX5_EXT 0x20E7
#endif
#ifndef GLX_AUX6_EXT
#  define GLX_AUX6_EXT 0x20E8
#endif
#ifndef GLX_AUX7_EXT
#  define GLX_AUX7_EXT 0x20E9
#endif
#ifndef GLX_AUX8_EXT
#  define GLX_AUX8_EXT 0x20EA
#endif
#ifndef GLX_AUX9_EXT
#  define GLX_AUX9_EXT 0x20EB
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
typedef void (APIENTRYP PFNXGLUXBINDTEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer, const int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
typedef void (APIENTRYP PFNXGLUXRELEASETEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
extern PFNXGLUXBINDTEXIMAGEEXTPROC glXBindTexImageEXT;
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
extern PFNXGLUXRELEASETEXIMAGEEXTPROC glXReleaseTexImageEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:27 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_EXT_texture_from_pixmap__
#define __GLUX_GLX_EXT_texture_from_pixmap__

GLUX_NEW_PLUGIN(GLX_EXT_texture_from_pixmap);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_TEXTURE_1D_BIT_EXT
#  define GLX_TEXTURE_1D_BIT_EXT 0x00000001
#endif
#ifndef GLX_TEXTURE_2D_BIT_EXT
#  define GLX_TEXTURE_2D_BIT_EXT 0x00000002
#endif
#ifndef GLX_TEXTURE_RECTANGLE_BIT_EXT
#  define GLX_TEXTURE_RECTANGLE_BIT_EXT 0x00000004
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGB_EXT
#  define GLX_BIND_TO_TEXTURE_RGB_EXT 0x20D0
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGBA_EXT
#  define GLX_BIND_TO_TEXTURE_RGBA_EXT 0x20D1
#endif
#ifndef GLX_BIND_TO_MIPMAP_TEXTURE_EXT
#  define GLX_BIND_TO_MIPMAP_TEXTURE_EXT 0x20D2
#endif
#ifndef GLX_BIND_TO_TEXTURE_TARGETS_EXT
#  define GLX_BIND_TO_TEXTURE_TARGETS_EXT 0x20D3
#endif
#ifndef GLX_Y_INVERTED_EXT
#  define GLX_Y_INVERTED_EXT 0x20D4
#endif
#ifndef GLX_TEXTURE_FORMAT_EXT
#  define GLX_TEXTURE_FORMAT_EXT 0x20D5
#endif
#ifndef GLX_TEXTURE_TARGET_EXT
#  define GLX_TEXTURE_TARGET_EXT 0x20D6
#endif
#ifndef GLX_MIPMAP_TEXTURE_EXT
#  define GLX_MIPMAP_TEXTURE_EXT 0x20D7
#endif
#ifndef GLX_TEXTURE_FORMAT_NONE_EXT
#  define GLX_TEXTURE_FORMAT_NONE_EXT 0x20D8
#endif
#ifndef GLX_TEXTURE_FORMAT_RGB_EXT
#  define GLX_TEXTURE_FORMAT_RGB_EXT 0x20D9
#endif
#ifndef GLX_TEXTURE_FORMAT_RGBA_EXT
#  define GLX_TEXTURE_FORMAT_RGBA_EXT 0x20DA
#endif
#ifndef GLX_TEXTURE_1D_EXT
#  define GLX_TEXTURE_1D_EXT 0x20DB
#endif
#ifndef GLX_TEXTURE_2D_EXT
#  define GLX_TEXTURE_2D_EXT 0x20DC
#endif
#ifndef GLX_TEXTURE_RECTANGLE_EXT
#  define GLX_TEXTURE_RECTANGLE_EXT 0x20DD
#endif
#ifndef GLX_FRONT_LEFT_EXT
#  define GLX_FRONT_LEFT_EXT 0x20DE
#endif
#ifndef GLX_FRONT_RIGHT_EXT
#  define GLX_FRONT_RIGHT_EXT 0x20DF
#endif
#ifndef GLX_BACK_LEFT_EXT
#  define GLX_BACK_LEFT_EXT 0x20E0
#endif
#ifndef GLX_BACK_RIGHT_EXT
#  define GLX_BACK_RIGHT_EXT 0x20E1
#endif
#ifndef GLX_FRONT_EXT
#  define GLX_FRONT_EXT GLX_FRONT_LEFT_EXT
#endif
#ifndef GLX_BACK_EXT
#  define GLX_BACK_EXT GLX_BACK_LEFT_EXT
#endif
#ifndef GLX_AUX0_EXT
#  define GLX_AUX0_EXT 0x20E2
#endif
#ifndef GLX_AUX1_EXT
#  define GLX_AUX1_EXT 0x20E3
#endif
#ifndef GLX_AUX2_EXT
#  define GLX_AUX2_EXT 0x20E4
#endif
#ifndef GLX_AUX3_EXT
#  define GLX_AUX3_EXT 0x20E5
#endif
#ifndef GLX_AUX4_EXT
#  define GLX_AUX4_EXT 0x20E6
#endif
#ifndef GLX_AUX5_EXT
#  define GLX_AUX5_EXT 0x20E7
#endif
#ifndef GLX_AUX6_EXT
#  define GLX_AUX6_EXT 0x20E8
#endif
#ifndef GLX_AUX7_EXT
#  define GLX_AUX7_EXT 0x20E9
#endif
#ifndef GLX_AUX8_EXT
#  define GLX_AUX8_EXT 0x20EA
#endif
#ifndef GLX_AUX9_EXT
#  define GLX_AUX9_EXT 0x20EB
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
typedef void (APIENTRYP PFNXGLUXBINDTEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer, const int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
typedef void (APIENTRYP PFNXGLUXRELEASETEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
extern PFNXGLUXBINDTEXIMAGEEXTPROC glXBindTexImageEXT;
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
extern PFNXGLUXRELEASETEXIMAGEEXTPROC glXReleaseTexImageEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_EXT_texture_from_pixmap__
#define __GLUX_GLX_EXT_texture_from_pixmap__

GLUX_NEW_PLUGIN(GLX_EXT_texture_from_pixmap);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_TEXTURE_1D_BIT_EXT
#  define GLX_TEXTURE_1D_BIT_EXT 0x00000001
#endif
#ifndef GLX_TEXTURE_2D_BIT_EXT
#  define GLX_TEXTURE_2D_BIT_EXT 0x00000002
#endif
#ifndef GLX_TEXTURE_RECTANGLE_BIT_EXT
#  define GLX_TEXTURE_RECTANGLE_BIT_EXT 0x00000004
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGB_EXT
#  define GLX_BIND_TO_TEXTURE_RGB_EXT 0x20D0
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGBA_EXT
#  define GLX_BIND_TO_TEXTURE_RGBA_EXT 0x20D1
#endif
#ifndef GLX_BIND_TO_MIPMAP_TEXTURE_EXT
#  define GLX_BIND_TO_MIPMAP_TEXTURE_EXT 0x20D2
#endif
#ifndef GLX_BIND_TO_TEXTURE_TARGETS_EXT
#  define GLX_BIND_TO_TEXTURE_TARGETS_EXT 0x20D3
#endif
#ifndef GLX_Y_INVERTED_EXT
#  define GLX_Y_INVERTED_EXT 0x20D4
#endif
#ifndef GLX_TEXTURE_FORMAT_EXT
#  define GLX_TEXTURE_FORMAT_EXT 0x20D5
#endif
#ifndef GLX_TEXTURE_TARGET_EXT
#  define GLX_TEXTURE_TARGET_EXT 0x20D6
#endif
#ifndef GLX_MIPMAP_TEXTURE_EXT
#  define GLX_MIPMAP_TEXTURE_EXT 0x20D7
#endif
#ifndef GLX_TEXTURE_FORMAT_NONE_EXT
#  define GLX_TEXTURE_FORMAT_NONE_EXT 0x20D8
#endif
#ifndef GLX_TEXTURE_FORMAT_RGB_EXT
#  define GLX_TEXTURE_FORMAT_RGB_EXT 0x20D9
#endif
#ifndef GLX_TEXTURE_FORMAT_RGBA_EXT
#  define GLX_TEXTURE_FORMAT_RGBA_EXT 0x20DA
#endif
#ifndef GLX_TEXTURE_1D_EXT
#  define GLX_TEXTURE_1D_EXT 0x20DB
#endif
#ifndef GLX_TEXTURE_2D_EXT
#  define GLX_TEXTURE_2D_EXT 0x20DC
#endif
#ifndef GLX_TEXTURE_RECTANGLE_EXT
#  define GLX_TEXTURE_RECTANGLE_EXT 0x20DD
#endif
#ifndef GLX_FRONT_LEFT_EXT
#  define GLX_FRONT_LEFT_EXT 0x20DE
#endif
#ifndef GLX_FRONT_RIGHT_EXT
#  define GLX_FRONT_RIGHT_EXT 0x20DF
#endif
#ifndef GLX_BACK_LEFT_EXT
#  define GLX_BACK_LEFT_EXT 0x20E0
#endif
#ifndef GLX_BACK_RIGHT_EXT
#  define GLX_BACK_RIGHT_EXT 0x20E1
#endif
#ifndef GLX_FRONT_EXT
#  define GLX_FRONT_EXT GLX_FRONT_LEFT_EXT
#endif
#ifndef GLX_BACK_EXT
#  define GLX_BACK_EXT GLX_BACK_LEFT_EXT
#endif
#ifndef GLX_AUX0_EXT
#  define GLX_AUX0_EXT 0x20E2
#endif
#ifndef GLX_AUX1_EXT
#  define GLX_AUX1_EXT 0x20E3
#endif
#ifndef GLX_AUX2_EXT
#  define GLX_AUX2_EXT 0x20E4
#endif
#ifndef GLX_AUX3_EXT
#  define GLX_AUX3_EXT 0x20E5
#endif
#ifndef GLX_AUX4_EXT
#  define GLX_AUX4_EXT 0x20E6
#endif
#ifndef GLX_AUX5_EXT
#  define GLX_AUX5_EXT 0x20E7
#endif
#ifndef GLX_AUX6_EXT
#  define GLX_AUX6_EXT 0x20E8
#endif
#ifndef GLX_AUX7_EXT
#  define GLX_AUX7_EXT 0x20E9
#endif
#ifndef GLX_AUX8_EXT
#  define GLX_AUX8_EXT 0x20EA
#endif
#ifndef GLX_AUX9_EXT
#  define GLX_AUX9_EXT 0x20EB
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
typedef void (APIENTRYP PFNXGLUXBINDTEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer, const int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
typedef void (APIENTRYP PFNXGLUXRELEASETEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
extern PFNXGLUXBINDTEXIMAGEEXTPROC glXBindTexImageEXT;
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
extern PFNXGLUXRELEASETEXIMAGEEXTPROC glXReleaseTexImageEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:42:02 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_EXT_texture_from_pixmap__
#define __GLUX_GLX_EXT_texture_from_pixmap__

GLUX_NEW_PLUGIN(GLX_EXT_texture_from_pixmap);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_TEXTURE_1D_BIT_EXT
#  define GLX_TEXTURE_1D_BIT_EXT 0x00000001
#endif
#ifndef GLX_TEXTURE_2D_BIT_EXT
#  define GLX_TEXTURE_2D_BIT_EXT 0x00000002
#endif
#ifndef GLX_TEXTURE_RECTANGLE_BIT_EXT
#  define GLX_TEXTURE_RECTANGLE_BIT_EXT 0x00000004
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGB_EXT
#  define GLX_BIND_TO_TEXTURE_RGB_EXT 0x20D0
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGBA_EXT
#  define GLX_BIND_TO_TEXTURE_RGBA_EXT 0x20D1
#endif
#ifndef GLX_BIND_TO_MIPMAP_TEXTURE_EXT
#  define GLX_BIND_TO_MIPMAP_TEXTURE_EXT 0x20D2
#endif
#ifndef GLX_BIND_TO_TEXTURE_TARGETS_EXT
#  define GLX_BIND_TO_TEXTURE_TARGETS_EXT 0x20D3
#endif
#ifndef GLX_Y_INVERTED_EXT
#  define GLX_Y_INVERTED_EXT 0x20D4
#endif
#ifndef GLX_TEXTURE_FORMAT_EXT
#  define GLX_TEXTURE_FORMAT_EXT 0x20D5
#endif
#ifndef GLX_TEXTURE_TARGET_EXT
#  define GLX_TEXTURE_TARGET_EXT 0x20D6
#endif
#ifndef GLX_MIPMAP_TEXTURE_EXT
#  define GLX_MIPMAP_TEXTURE_EXT 0x20D7
#endif
#ifndef GLX_TEXTURE_FORMAT_NONE_EXT
#  define GLX_TEXTURE_FORMAT_NONE_EXT 0x20D8
#endif
#ifndef GLX_TEXTURE_FORMAT_RGB_EXT
#  define GLX_TEXTURE_FORMAT_RGB_EXT 0x20D9
#endif
#ifndef GLX_TEXTURE_FORMAT_RGBA_EXT
#  define GLX_TEXTURE_FORMAT_RGBA_EXT 0x20DA
#endif
#ifndef GLX_TEXTURE_1D_EXT
#  define GLX_TEXTURE_1D_EXT 0x20DB
#endif
#ifndef GLX_TEXTURE_2D_EXT
#  define GLX_TEXTURE_2D_EXT 0x20DC
#endif
#ifndef GLX_TEXTURE_RECTANGLE_EXT
#  define GLX_TEXTURE_RECTANGLE_EXT 0x20DD
#endif
#ifndef GLX_FRONT_LEFT_EXT
#  define GLX_FRONT_LEFT_EXT 0x20DE
#endif
#ifndef GLX_FRONT_RIGHT_EXT
#  define GLX_FRONT_RIGHT_EXT 0x20DF
#endif
#ifndef GLX_BACK_LEFT_EXT
#  define GLX_BACK_LEFT_EXT 0x20E0
#endif
#ifndef GLX_BACK_RIGHT_EXT
#  define GLX_BACK_RIGHT_EXT 0x20E1
#endif
#ifndef GLX_FRONT_EXT
#  define GLX_FRONT_EXT GLX_FRONT_LEFT_EXT
#endif
#ifndef GLX_BACK_EXT
#  define GLX_BACK_EXT GLX_BACK_LEFT_EXT
#endif
#ifndef GLX_AUX0_EXT
#  define GLX_AUX0_EXT 0x20E2
#endif
#ifndef GLX_AUX1_EXT
#  define GLX_AUX1_EXT 0x20E3
#endif
#ifndef GLX_AUX2_EXT
#  define GLX_AUX2_EXT 0x20E4
#endif
#ifndef GLX_AUX3_EXT
#  define GLX_AUX3_EXT 0x20E5
#endif
#ifndef GLX_AUX4_EXT
#  define GLX_AUX4_EXT 0x20E6
#endif
#ifndef GLX_AUX5_EXT
#  define GLX_AUX5_EXT 0x20E7
#endif
#ifndef GLX_AUX6_EXT
#  define GLX_AUX6_EXT 0x20E8
#endif
#ifndef GLX_AUX7_EXT
#  define GLX_AUX7_EXT 0x20E9
#endif
#ifndef GLX_AUX8_EXT
#  define GLX_AUX8_EXT 0x20EA
#endif
#ifndef GLX_AUX9_EXT
#  define GLX_AUX9_EXT 0x20EB
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
typedef void (APIENTRYP PFNXGLUXBINDTEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer, const int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
typedef void (APIENTRYP PFNXGLUXRELEASETEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
extern PFNXGLUXBINDTEXIMAGEEXTPROC glXBindTexImageEXT;
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
extern PFNXGLUXRELEASETEXIMAGEEXTPROC glXReleaseTexImageEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:42 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_EXT_texture_from_pixmap__
#define __GLUX_GLX_EXT_texture_from_pixmap__

GLUX_NEW_PLUGIN(GLX_EXT_texture_from_pixmap);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_TEXTURE_1D_BIT_EXT
#  define GLX_TEXTURE_1D_BIT_EXT 0x00000001
#endif
#ifndef GLX_TEXTURE_2D_BIT_EXT
#  define GLX_TEXTURE_2D_BIT_EXT 0x00000002
#endif
#ifndef GLX_TEXTURE_RECTANGLE_BIT_EXT
#  define GLX_TEXTURE_RECTANGLE_BIT_EXT 0x00000004
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGB_EXT
#  define GLX_BIND_TO_TEXTURE_RGB_EXT 0x20D0
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGBA_EXT
#  define GLX_BIND_TO_TEXTURE_RGBA_EXT 0x20D1
#endif
#ifndef GLX_BIND_TO_MIPMAP_TEXTURE_EXT
#  define GLX_BIND_TO_MIPMAP_TEXTURE_EXT 0x20D2
#endif
#ifndef GLX_BIND_TO_TEXTURE_TARGETS_EXT
#  define GLX_BIND_TO_TEXTURE_TARGETS_EXT 0x20D3
#endif
#ifndef GLX_Y_INVERTED_EXT
#  define GLX_Y_INVERTED_EXT 0x20D4
#endif
#ifndef GLX_TEXTURE_FORMAT_EXT
#  define GLX_TEXTURE_FORMAT_EXT 0x20D5
#endif
#ifndef GLX_TEXTURE_TARGET_EXT
#  define GLX_TEXTURE_TARGET_EXT 0x20D6
#endif
#ifndef GLX_MIPMAP_TEXTURE_EXT
#  define GLX_MIPMAP_TEXTURE_EXT 0x20D7
#endif
#ifndef GLX_TEXTURE_FORMAT_NONE_EXT
#  define GLX_TEXTURE_FORMAT_NONE_EXT 0x20D8
#endif
#ifndef GLX_TEXTURE_FORMAT_RGB_EXT
#  define GLX_TEXTURE_FORMAT_RGB_EXT 0x20D9
#endif
#ifndef GLX_TEXTURE_FORMAT_RGBA_EXT
#  define GLX_TEXTURE_FORMAT_RGBA_EXT 0x20DA
#endif
#ifndef GLX_TEXTURE_1D_EXT
#  define GLX_TEXTURE_1D_EXT 0x20DB
#endif
#ifndef GLX_TEXTURE_2D_EXT
#  define GLX_TEXTURE_2D_EXT 0x20DC
#endif
#ifndef GLX_TEXTURE_RECTANGLE_EXT
#  define GLX_TEXTURE_RECTANGLE_EXT 0x20DD
#endif
#ifndef GLX_FRONT_LEFT_EXT
#  define GLX_FRONT_LEFT_EXT 0x20DE
#endif
#ifndef GLX_FRONT_RIGHT_EXT
#  define GLX_FRONT_RIGHT_EXT 0x20DF
#endif
#ifndef GLX_BACK_LEFT_EXT
#  define GLX_BACK_LEFT_EXT 0x20E0
#endif
#ifndef GLX_BACK_RIGHT_EXT
#  define GLX_BACK_RIGHT_EXT 0x20E1
#endif
#ifndef GLX_FRONT_EXT
#  define GLX_FRONT_EXT GLX_FRONT_LEFT_EXT
#endif
#ifndef GLX_BACK_EXT
#  define GLX_BACK_EXT GLX_BACK_LEFT_EXT
#endif
#ifndef GLX_AUX0_EXT
#  define GLX_AUX0_EXT 0x20E2
#endif
#ifndef GLX_AUX1_EXT
#  define GLX_AUX1_EXT 0x20E3
#endif
#ifndef GLX_AUX2_EXT
#  define GLX_AUX2_EXT 0x20E4
#endif
#ifndef GLX_AUX3_EXT
#  define GLX_AUX3_EXT 0x20E5
#endif
#ifndef GLX_AUX4_EXT
#  define GLX_AUX4_EXT 0x20E6
#endif
#ifndef GLX_AUX5_EXT
#  define GLX_AUX5_EXT 0x20E7
#endif
#ifndef GLX_AUX6_EXT
#  define GLX_AUX6_EXT 0x20E8
#endif
#ifndef GLX_AUX7_EXT
#  define GLX_AUX7_EXT 0x20E9
#endif
#ifndef GLX_AUX8_EXT
#  define GLX_AUX8_EXT 0x20EA
#endif
#ifndef GLX_AUX9_EXT
#  define GLX_AUX9_EXT 0x20EB
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
typedef void (APIENTRYP PFNXGLUXBINDTEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer, const int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
typedef void (APIENTRYP PFNXGLUXRELEASETEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
extern PFNXGLUXBINDTEXIMAGEEXTPROC glXBindTexImageEXT;
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
extern PFNXGLUXRELEASETEXIMAGEEXTPROC glXReleaseTexImageEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:10:01 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_EXT_texture_from_pixmap__
#define __GLUX_GLX_EXT_texture_from_pixmap__

GLUX_NEW_PLUGIN(GLX_EXT_texture_from_pixmap);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_TEXTURE_1D_BIT_EXT
#  define GLX_TEXTURE_1D_BIT_EXT 0x00000001
#endif
#ifndef GLX_TEXTURE_2D_BIT_EXT
#  define GLX_TEXTURE_2D_BIT_EXT 0x00000002
#endif
#ifndef GLX_TEXTURE_RECTANGLE_BIT_EXT
#  define GLX_TEXTURE_RECTANGLE_BIT_EXT 0x00000004
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGB_EXT
#  define GLX_BIND_TO_TEXTURE_RGB_EXT 0x20D0
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGBA_EXT
#  define GLX_BIND_TO_TEXTURE_RGBA_EXT 0x20D1
#endif
#ifndef GLX_BIND_TO_MIPMAP_TEXTURE_EXT
#  define GLX_BIND_TO_MIPMAP_TEXTURE_EXT 0x20D2
#endif
#ifndef GLX_BIND_TO_TEXTURE_TARGETS_EXT
#  define GLX_BIND_TO_TEXTURE_TARGETS_EXT 0x20D3
#endif
#ifndef GLX_Y_INVERTED_EXT
#  define GLX_Y_INVERTED_EXT 0x20D4
#endif
#ifndef GLX_TEXTURE_FORMAT_EXT
#  define GLX_TEXTURE_FORMAT_EXT 0x20D5
#endif
#ifndef GLX_TEXTURE_TARGET_EXT
#  define GLX_TEXTURE_TARGET_EXT 0x20D6
#endif
#ifndef GLX_MIPMAP_TEXTURE_EXT
#  define GLX_MIPMAP_TEXTURE_EXT 0x20D7
#endif
#ifndef GLX_TEXTURE_FORMAT_NONE_EXT
#  define GLX_TEXTURE_FORMAT_NONE_EXT 0x20D8
#endif
#ifndef GLX_TEXTURE_FORMAT_RGB_EXT
#  define GLX_TEXTURE_FORMAT_RGB_EXT 0x20D9
#endif
#ifndef GLX_TEXTURE_FORMAT_RGBA_EXT
#  define GLX_TEXTURE_FORMAT_RGBA_EXT 0x20DA
#endif
#ifndef GLX_TEXTURE_1D_EXT
#  define GLX_TEXTURE_1D_EXT 0x20DB
#endif
#ifndef GLX_TEXTURE_2D_EXT
#  define GLX_TEXTURE_2D_EXT 0x20DC
#endif
#ifndef GLX_TEXTURE_RECTANGLE_EXT
#  define GLX_TEXTURE_RECTANGLE_EXT 0x20DD
#endif
#ifndef GLX_FRONT_LEFT_EXT
#  define GLX_FRONT_LEFT_EXT 0x20DE
#endif
#ifndef GLX_FRONT_RIGHT_EXT
#  define GLX_FRONT_RIGHT_EXT 0x20DF
#endif
#ifndef GLX_BACK_LEFT_EXT
#  define GLX_BACK_LEFT_EXT 0x20E0
#endif
#ifndef GLX_BACK_RIGHT_EXT
#  define GLX_BACK_RIGHT_EXT 0x20E1
#endif
#ifndef GLX_FRONT_EXT
#  define GLX_FRONT_EXT GLX_FRONT_LEFT_EXT
#endif
#ifndef GLX_BACK_EXT
#  define GLX_BACK_EXT GLX_BACK_LEFT_EXT
#endif
#ifndef GLX_AUX0_EXT
#  define GLX_AUX0_EXT 0x20E2
#endif
#ifndef GLX_AUX1_EXT
#  define GLX_AUX1_EXT 0x20E3
#endif
#ifndef GLX_AUX2_EXT
#  define GLX_AUX2_EXT 0x20E4
#endif
#ifndef GLX_AUX3_EXT
#  define GLX_AUX3_EXT 0x20E5
#endif
#ifndef GLX_AUX4_EXT
#  define GLX_AUX4_EXT 0x20E6
#endif
#ifndef GLX_AUX5_EXT
#  define GLX_AUX5_EXT 0x20E7
#endif
#ifndef GLX_AUX6_EXT
#  define GLX_AUX6_EXT 0x20E8
#endif
#ifndef GLX_AUX7_EXT
#  define GLX_AUX7_EXT 0x20E9
#endif
#ifndef GLX_AUX8_EXT
#  define GLX_AUX8_EXT 0x20EA
#endif
#ifndef GLX_AUX9_EXT
#  define GLX_AUX9_EXT 0x20EB
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
typedef void (APIENTRYP PFNXGLUXBINDTEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer, const int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
typedef void (APIENTRYP PFNXGLUXRELEASETEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
extern PFNXGLUXBINDTEXIMAGEEXTPROC glXBindTexImageEXT;
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
extern PFNXGLUXRELEASETEXIMAGEEXTPROC glXReleaseTexImageEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:20:02 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_EXT_texture_from_pixmap__
#define __GLUX_GLX_EXT_texture_from_pixmap__

GLUX_NEW_PLUGIN(GLX_EXT_texture_from_pixmap);
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_TEXTURE_1D_BIT_EXT
#  define GLX_TEXTURE_1D_BIT_EXT 0x00000001
#endif
#ifndef GLX_TEXTURE_2D_BIT_EXT
#  define GLX_TEXTURE_2D_BIT_EXT 0x00000002
#endif
#ifndef GLX_TEXTURE_RECTANGLE_BIT_EXT
#  define GLX_TEXTURE_RECTANGLE_BIT_EXT 0x00000004
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGB_EXT
#  define GLX_BIND_TO_TEXTURE_RGB_EXT 0x20D0
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGBA_EXT
#  define GLX_BIND_TO_TEXTURE_RGBA_EXT 0x20D1
#endif
#ifndef GLX_BIND_TO_MIPMAP_TEXTURE_EXT
#  define GLX_BIND_TO_MIPMAP_TEXTURE_EXT 0x20D2
#endif
#ifndef GLX_BIND_TO_TEXTURE_TARGETS_EXT
#  define GLX_BIND_TO_TEXTURE_TARGETS_EXT 0x20D3
#endif
#ifndef GLX_Y_INVERTED_EXT
#  define GLX_Y_INVERTED_EXT 0x20D4
#endif
#ifndef GLX_TEXTURE_FORMAT_EXT
#  define GLX_TEXTURE_FORMAT_EXT 0x20D5
#endif
#ifndef GLX_TEXTURE_TARGET_EXT
#  define GLX_TEXTURE_TARGET_EXT 0x20D6
#endif
#ifndef GLX_MIPMAP_TEXTURE_EXT
#  define GLX_MIPMAP_TEXTURE_EXT 0x20D7
#endif
#ifndef GLX_TEXTURE_FORMAT_NONE_EXT
#  define GLX_TEXTURE_FORMAT_NONE_EXT 0x20D8
#endif
#ifndef GLX_TEXTURE_FORMAT_RGB_EXT
#  define GLX_TEXTURE_FORMAT_RGB_EXT 0x20D9
#endif
#ifndef GLX_TEXTURE_FORMAT_RGBA_EXT
#  define GLX_TEXTURE_FORMAT_RGBA_EXT 0x20DA
#endif
#ifndef GLX_TEXTURE_1D_EXT
#  define GLX_TEXTURE_1D_EXT 0x20DB
#endif
#ifndef GLX_TEXTURE_2D_EXT
#  define GLX_TEXTURE_2D_EXT 0x20DC
#endif
#ifndef GLX_TEXTURE_RECTANGLE_EXT
#  define GLX_TEXTURE_RECTANGLE_EXT 0x20DD
#endif
#ifndef GLX_FRONT_LEFT_EXT
#  define GLX_FRONT_LEFT_EXT 0x20DE
#endif
#ifndef GLX_FRONT_RIGHT_EXT
#  define GLX_FRONT_RIGHT_EXT 0x20DF
#endif
#ifndef GLX_BACK_LEFT_EXT
#  define GLX_BACK_LEFT_EXT 0x20E0
#endif
#ifndef GLX_BACK_RIGHT_EXT
#  define GLX_BACK_RIGHT_EXT 0x20E1
#endif
#ifndef GLX_FRONT_EXT
#  define GLX_FRONT_EXT GLX_FRONT_LEFT_EXT
#endif
#ifndef GLX_BACK_EXT
#  define GLX_BACK_EXT GLX_BACK_LEFT_EXT
#endif
#ifndef GLX_AUX0_EXT
#  define GLX_AUX0_EXT 0x20E2
#endif
#ifndef GLX_AUX1_EXT
#  define GLX_AUX1_EXT 0x20E3
#endif
#ifndef GLX_AUX2_EXT
#  define GLX_AUX2_EXT 0x20E4
#endif
#ifndef GLX_AUX3_EXT
#  define GLX_AUX3_EXT 0x20E5
#endif
#ifndef GLX_AUX4_EXT
#  define GLX_AUX4_EXT 0x20E6
#endif
#ifndef GLX_AUX5_EXT
#  define GLX_AUX5_EXT 0x20E7
#endif
#ifndef GLX_AUX6_EXT
#  define GLX_AUX6_EXT 0x20E8
#endif
#ifndef GLX_AUX7_EXT
#  define GLX_AUX7_EXT 0x20E9
#endif
#ifndef GLX_AUX8_EXT
#  define GLX_AUX8_EXT 0x20EA
#endif
#ifndef GLX_AUX9_EXT
#  define GLX_AUX9_EXT 0x20EB
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
typedef void (APIENTRYP PFNXGLUXBINDTEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer, const int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
typedef void (APIENTRYP PFNXGLUXRELEASETEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
extern PFNXGLUXBINDTEXIMAGEEXTPROC glXBindTexImageEXT;
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
extern PFNXGLUXRELEASETEXIMAGEEXTPROC glXReleaseTexImageEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:43:01 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_EXT_texture_from_pixmap__
#define __GLUX_GLX_EXT_texture_from_pixmap__

GLUX_NEW_PLUGIN(GLX_EXT_texture_from_pixmap)
// --------------------------------------------------------
#if !(defined WIN32 || defined __APPLE__)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLX_TEXTURE_1D_BIT_EXT
#  define GLX_TEXTURE_1D_BIT_EXT 0x00000001
#endif
#ifndef GLX_TEXTURE_2D_BIT_EXT
#  define GLX_TEXTURE_2D_BIT_EXT 0x00000002
#endif
#ifndef GLX_TEXTURE_RECTANGLE_BIT_EXT
#  define GLX_TEXTURE_RECTANGLE_BIT_EXT 0x00000004
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGB_EXT
#  define GLX_BIND_TO_TEXTURE_RGB_EXT 0x20D0
#endif
#ifndef GLX_BIND_TO_TEXTURE_RGBA_EXT
#  define GLX_BIND_TO_TEXTURE_RGBA_EXT 0x20D1
#endif
#ifndef GLX_BIND_TO_MIPMAP_TEXTURE_EXT
#  define GLX_BIND_TO_MIPMAP_TEXTURE_EXT 0x20D2
#endif
#ifndef GLX_BIND_TO_TEXTURE_TARGETS_EXT
#  define GLX_BIND_TO_TEXTURE_TARGETS_EXT 0x20D3
#endif
#ifndef GLX_Y_INVERTED_EXT
#  define GLX_Y_INVERTED_EXT 0x20D4
#endif
#ifndef GLX_TEXTURE_FORMAT_EXT
#  define GLX_TEXTURE_FORMAT_EXT 0x20D5
#endif
#ifndef GLX_TEXTURE_TARGET_EXT
#  define GLX_TEXTURE_TARGET_EXT 0x20D6
#endif
#ifndef GLX_MIPMAP_TEXTURE_EXT
#  define GLX_MIPMAP_TEXTURE_EXT 0x20D7
#endif
#ifndef GLX_TEXTURE_FORMAT_NONE_EXT
#  define GLX_TEXTURE_FORMAT_NONE_EXT 0x20D8
#endif
#ifndef GLX_TEXTURE_FORMAT_RGB_EXT
#  define GLX_TEXTURE_FORMAT_RGB_EXT 0x20D9
#endif
#ifndef GLX_TEXTURE_FORMAT_RGBA_EXT
#  define GLX_TEXTURE_FORMAT_RGBA_EXT 0x20DA
#endif
#ifndef GLX_TEXTURE_1D_EXT
#  define GLX_TEXTURE_1D_EXT 0x20DB
#endif
#ifndef GLX_TEXTURE_2D_EXT
#  define GLX_TEXTURE_2D_EXT 0x20DC
#endif
#ifndef GLX_TEXTURE_RECTANGLE_EXT
#  define GLX_TEXTURE_RECTANGLE_EXT 0x20DD
#endif
#ifndef GLX_FRONT_LEFT_EXT
#  define GLX_FRONT_LEFT_EXT 0x20DE
#endif
#ifndef GLX_FRONT_RIGHT_EXT
#  define GLX_FRONT_RIGHT_EXT 0x20DF
#endif
#ifndef GLX_BACK_LEFT_EXT
#  define GLX_BACK_LEFT_EXT 0x20E0
#endif
#ifndef GLX_BACK_RIGHT_EXT
#  define GLX_BACK_RIGHT_EXT 0x20E1
#endif
#ifndef GLX_FRONT_EXT
#  define GLX_FRONT_EXT GLX_FRONT_LEFT_EXT
#endif
#ifndef GLX_BACK_EXT
#  define GLX_BACK_EXT GLX_BACK_LEFT_EXT
#endif
#ifndef GLX_AUX0_EXT
#  define GLX_AUX0_EXT 0x20E2
#endif
#ifndef GLX_AUX1_EXT
#  define GLX_AUX1_EXT 0x20E3
#endif
#ifndef GLX_AUX2_EXT
#  define GLX_AUX2_EXT 0x20E4
#endif
#ifndef GLX_AUX3_EXT
#  define GLX_AUX3_EXT 0x20E5
#endif
#ifndef GLX_AUX4_EXT
#  define GLX_AUX4_EXT 0x20E6
#endif
#ifndef GLX_AUX5_EXT
#  define GLX_AUX5_EXT 0x20E7
#endif
#ifndef GLX_AUX6_EXT
#  define GLX_AUX6_EXT 0x20E8
#endif
#ifndef GLX_AUX7_EXT
#  define GLX_AUX7_EXT 0x20E9
#endif
#ifndef GLX_AUX8_EXT
#  define GLX_AUX8_EXT 0x20EA
#endif
#ifndef GLX_AUX9_EXT
#  define GLX_AUX9_EXT 0x20EB
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
typedef void (APIENTRYP PFNXGLUXBINDTEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer, const int *attrib_list);
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
typedef void (APIENTRYP PFNXGLUXRELEASETEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXBindTexImageEXT
extern PFNXGLUXBINDTEXIMAGEEXTPROC glXBindTexImageEXT;
#endif
#ifndef __GLUX__GLFCT_glXReleaseTexImageEXT
extern PFNXGLUXRELEASETEXIMAGEEXTPROC glXReleaseTexImageEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------
