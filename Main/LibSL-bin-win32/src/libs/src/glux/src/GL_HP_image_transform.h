
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:28 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_HP_image_transform__
#define __GLUX_GL_HP_image_transform__

GLUX_NEW_PLUGIN(GL_HP_image_transform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_IMAGE_SCALE_X_HP
#  define GL_IMAGE_SCALE_X_HP 0x8155
#endif
#ifndef GL_IMAGE_SCALE_Y_HP
#  define GL_IMAGE_SCALE_Y_HP 0x8156
#endif
#ifndef GL_IMAGE_TRANSLATE_X_HP
#  define GL_IMAGE_TRANSLATE_X_HP 0x8157
#endif
#ifndef GL_IMAGE_TRANSLATE_Y_HP
#  define GL_IMAGE_TRANSLATE_Y_HP 0x8158
#endif
#ifndef GL_IMAGE_ROTATE_ANGLE_HP
#  define GL_IMAGE_ROTATE_ANGLE_HP 0x8159
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_X_HP
#  define GL_IMAGE_ROTATE_ORIGIN_X_HP 0x815A
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_Y_HP
#  define GL_IMAGE_ROTATE_ORIGIN_Y_HP 0x815B
#endif
#ifndef GL_IMAGE_MAG_FILTER_HP
#  define GL_IMAGE_MAG_FILTER_HP 0x815C
#endif
#ifndef GL_IMAGE_MIN_FILTER_HP
#  define GL_IMAGE_MIN_FILTER_HP 0x815D
#endif
#ifndef GL_IMAGE_CUBIC_WEIGHT_HP
#  define GL_IMAGE_CUBIC_WEIGHT_HP 0x815E
#endif
#ifndef GL_CUBIC_HP
#  define GL_CUBIC_HP 0x815F
#endif
#ifndef GL_AVERAGE_HP
#  define GL_AVERAGE_HP 0x8160
#endif
#ifndef GL_IMAGE_TRANSFORM_2D_HP
#  define GL_IMAGE_TRANSFORM_2D_HP 0x8161
#endif
#ifndef GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
#endif
#ifndef GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC glImageTransformParameteriHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC glImageTransformParameterfHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC glImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC glImageTransformParameterfvHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC glGetImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC glGetImageTransformParameterfvHP;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:47 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_HP_image_transform__
#define __GLUX_GL_HP_image_transform__

GLUX_NEW_PLUGIN(GL_HP_image_transform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_IMAGE_SCALE_X_HP
#  define GL_IMAGE_SCALE_X_HP 0x8155
#endif
#ifndef GL_IMAGE_SCALE_Y_HP
#  define GL_IMAGE_SCALE_Y_HP 0x8156
#endif
#ifndef GL_IMAGE_TRANSLATE_X_HP
#  define GL_IMAGE_TRANSLATE_X_HP 0x8157
#endif
#ifndef GL_IMAGE_TRANSLATE_Y_HP
#  define GL_IMAGE_TRANSLATE_Y_HP 0x8158
#endif
#ifndef GL_IMAGE_ROTATE_ANGLE_HP
#  define GL_IMAGE_ROTATE_ANGLE_HP 0x8159
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_X_HP
#  define GL_IMAGE_ROTATE_ORIGIN_X_HP 0x815A
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_Y_HP
#  define GL_IMAGE_ROTATE_ORIGIN_Y_HP 0x815B
#endif
#ifndef GL_IMAGE_MAG_FILTER_HP
#  define GL_IMAGE_MAG_FILTER_HP 0x815C
#endif
#ifndef GL_IMAGE_MIN_FILTER_HP
#  define GL_IMAGE_MIN_FILTER_HP 0x815D
#endif
#ifndef GL_IMAGE_CUBIC_WEIGHT_HP
#  define GL_IMAGE_CUBIC_WEIGHT_HP 0x815E
#endif
#ifndef GL_CUBIC_HP
#  define GL_CUBIC_HP 0x815F
#endif
#ifndef GL_AVERAGE_HP
#  define GL_AVERAGE_HP 0x8160
#endif
#ifndef GL_IMAGE_TRANSFORM_2D_HP
#  define GL_IMAGE_TRANSFORM_2D_HP 0x8161
#endif
#ifndef GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
#endif
#ifndef GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC glImageTransformParameteriHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC glImageTransformParameterfHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC glImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC glImageTransformParameterfvHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC glGetImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC glGetImageTransformParameterfvHP;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:54 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_HP_image_transform__
#define __GLUX_GL_HP_image_transform__

GLUX_NEW_PLUGIN(GL_HP_image_transform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_IMAGE_SCALE_X_HP
#  define GL_IMAGE_SCALE_X_HP 0x8155
#endif
#ifndef GL_IMAGE_SCALE_Y_HP
#  define GL_IMAGE_SCALE_Y_HP 0x8156
#endif
#ifndef GL_IMAGE_TRANSLATE_X_HP
#  define GL_IMAGE_TRANSLATE_X_HP 0x8157
#endif
#ifndef GL_IMAGE_TRANSLATE_Y_HP
#  define GL_IMAGE_TRANSLATE_Y_HP 0x8158
#endif
#ifndef GL_IMAGE_ROTATE_ANGLE_HP
#  define GL_IMAGE_ROTATE_ANGLE_HP 0x8159
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_X_HP
#  define GL_IMAGE_ROTATE_ORIGIN_X_HP 0x815A
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_Y_HP
#  define GL_IMAGE_ROTATE_ORIGIN_Y_HP 0x815B
#endif
#ifndef GL_IMAGE_MAG_FILTER_HP
#  define GL_IMAGE_MAG_FILTER_HP 0x815C
#endif
#ifndef GL_IMAGE_MIN_FILTER_HP
#  define GL_IMAGE_MIN_FILTER_HP 0x815D
#endif
#ifndef GL_IMAGE_CUBIC_WEIGHT_HP
#  define GL_IMAGE_CUBIC_WEIGHT_HP 0x815E
#endif
#ifndef GL_CUBIC_HP
#  define GL_CUBIC_HP 0x815F
#endif
#ifndef GL_AVERAGE_HP
#  define GL_AVERAGE_HP 0x8160
#endif
#ifndef GL_IMAGE_TRANSFORM_2D_HP
#  define GL_IMAGE_TRANSFORM_2D_HP 0x8161
#endif
#ifndef GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
#endif
#ifndef GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC glImageTransformParameteriHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC glImageTransformParameterfHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC glImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC glImageTransformParameterfvHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC glGetImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC glGetImageTransformParameterfvHP;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:14 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_HP_image_transform__
#define __GLUX_GL_HP_image_transform__

GLUX_NEW_PLUGIN(GL_HP_image_transform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_IMAGE_SCALE_X_HP
#  define GL_IMAGE_SCALE_X_HP 0x8155
#endif
#ifndef GL_IMAGE_SCALE_Y_HP
#  define GL_IMAGE_SCALE_Y_HP 0x8156
#endif
#ifndef GL_IMAGE_TRANSLATE_X_HP
#  define GL_IMAGE_TRANSLATE_X_HP 0x8157
#endif
#ifndef GL_IMAGE_TRANSLATE_Y_HP
#  define GL_IMAGE_TRANSLATE_Y_HP 0x8158
#endif
#ifndef GL_IMAGE_ROTATE_ANGLE_HP
#  define GL_IMAGE_ROTATE_ANGLE_HP 0x8159
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_X_HP
#  define GL_IMAGE_ROTATE_ORIGIN_X_HP 0x815A
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_Y_HP
#  define GL_IMAGE_ROTATE_ORIGIN_Y_HP 0x815B
#endif
#ifndef GL_IMAGE_MAG_FILTER_HP
#  define GL_IMAGE_MAG_FILTER_HP 0x815C
#endif
#ifndef GL_IMAGE_MIN_FILTER_HP
#  define GL_IMAGE_MIN_FILTER_HP 0x815D
#endif
#ifndef GL_IMAGE_CUBIC_WEIGHT_HP
#  define GL_IMAGE_CUBIC_WEIGHT_HP 0x815E
#endif
#ifndef GL_CUBIC_HP
#  define GL_CUBIC_HP 0x815F
#endif
#ifndef GL_AVERAGE_HP
#  define GL_AVERAGE_HP 0x8160
#endif
#ifndef GL_IMAGE_TRANSFORM_2D_HP
#  define GL_IMAGE_TRANSFORM_2D_HP 0x8161
#endif
#ifndef GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
#endif
#ifndef GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC glImageTransformParameteriHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC glImageTransformParameterfHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC glImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC glImageTransformParameterfvHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC glGetImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC glGetImageTransformParameterfvHP;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:30 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_HP_image_transform__
#define __GLUX_GL_HP_image_transform__

GLUX_NEW_PLUGIN(GL_HP_image_transform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_IMAGE_SCALE_X_HP
#  define GL_IMAGE_SCALE_X_HP 0x8155
#endif
#ifndef GL_IMAGE_SCALE_Y_HP
#  define GL_IMAGE_SCALE_Y_HP 0x8156
#endif
#ifndef GL_IMAGE_TRANSLATE_X_HP
#  define GL_IMAGE_TRANSLATE_X_HP 0x8157
#endif
#ifndef GL_IMAGE_TRANSLATE_Y_HP
#  define GL_IMAGE_TRANSLATE_Y_HP 0x8158
#endif
#ifndef GL_IMAGE_ROTATE_ANGLE_HP
#  define GL_IMAGE_ROTATE_ANGLE_HP 0x8159
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_X_HP
#  define GL_IMAGE_ROTATE_ORIGIN_X_HP 0x815A
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_Y_HP
#  define GL_IMAGE_ROTATE_ORIGIN_Y_HP 0x815B
#endif
#ifndef GL_IMAGE_MAG_FILTER_HP
#  define GL_IMAGE_MAG_FILTER_HP 0x815C
#endif
#ifndef GL_IMAGE_MIN_FILTER_HP
#  define GL_IMAGE_MIN_FILTER_HP 0x815D
#endif
#ifndef GL_IMAGE_CUBIC_WEIGHT_HP
#  define GL_IMAGE_CUBIC_WEIGHT_HP 0x815E
#endif
#ifndef GL_CUBIC_HP
#  define GL_CUBIC_HP 0x815F
#endif
#ifndef GL_AVERAGE_HP
#  define GL_AVERAGE_HP 0x8160
#endif
#ifndef GL_IMAGE_TRANSFORM_2D_HP
#  define GL_IMAGE_TRANSFORM_2D_HP 0x8161
#endif
#ifndef GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
#endif
#ifndef GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC glImageTransformParameteriHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC glImageTransformParameterfHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC glImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC glImageTransformParameterfvHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC glGetImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC glGetImageTransformParameterfvHP;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:33 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_HP_image_transform__
#define __GLUX_GL_HP_image_transform__

GLUX_NEW_PLUGIN(GL_HP_image_transform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_IMAGE_SCALE_X_HP
#  define GL_IMAGE_SCALE_X_HP 0x8155
#endif
#ifndef GL_IMAGE_SCALE_Y_HP
#  define GL_IMAGE_SCALE_Y_HP 0x8156
#endif
#ifndef GL_IMAGE_TRANSLATE_X_HP
#  define GL_IMAGE_TRANSLATE_X_HP 0x8157
#endif
#ifndef GL_IMAGE_TRANSLATE_Y_HP
#  define GL_IMAGE_TRANSLATE_Y_HP 0x8158
#endif
#ifndef GL_IMAGE_ROTATE_ANGLE_HP
#  define GL_IMAGE_ROTATE_ANGLE_HP 0x8159
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_X_HP
#  define GL_IMAGE_ROTATE_ORIGIN_X_HP 0x815A
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_Y_HP
#  define GL_IMAGE_ROTATE_ORIGIN_Y_HP 0x815B
#endif
#ifndef GL_IMAGE_MAG_FILTER_HP
#  define GL_IMAGE_MAG_FILTER_HP 0x815C
#endif
#ifndef GL_IMAGE_MIN_FILTER_HP
#  define GL_IMAGE_MIN_FILTER_HP 0x815D
#endif
#ifndef GL_IMAGE_CUBIC_WEIGHT_HP
#  define GL_IMAGE_CUBIC_WEIGHT_HP 0x815E
#endif
#ifndef GL_CUBIC_HP
#  define GL_CUBIC_HP 0x815F
#endif
#ifndef GL_AVERAGE_HP
#  define GL_AVERAGE_HP 0x8160
#endif
#ifndef GL_IMAGE_TRANSFORM_2D_HP
#  define GL_IMAGE_TRANSFORM_2D_HP 0x8161
#endif
#ifndef GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
#endif
#ifndef GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC glImageTransformParameteriHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC glImageTransformParameterfHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC glImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC glImageTransformParameterfvHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC glGetImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC glGetImageTransformParameterfvHP;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:55 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_HP_image_transform__
#define __GLUX_GL_HP_image_transform__

GLUX_NEW_PLUGIN(GL_HP_image_transform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_IMAGE_SCALE_X_HP
#  define GL_IMAGE_SCALE_X_HP 0x8155
#endif
#ifndef GL_IMAGE_SCALE_Y_HP
#  define GL_IMAGE_SCALE_Y_HP 0x8156
#endif
#ifndef GL_IMAGE_TRANSLATE_X_HP
#  define GL_IMAGE_TRANSLATE_X_HP 0x8157
#endif
#ifndef GL_IMAGE_TRANSLATE_Y_HP
#  define GL_IMAGE_TRANSLATE_Y_HP 0x8158
#endif
#ifndef GL_IMAGE_ROTATE_ANGLE_HP
#  define GL_IMAGE_ROTATE_ANGLE_HP 0x8159
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_X_HP
#  define GL_IMAGE_ROTATE_ORIGIN_X_HP 0x815A
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_Y_HP
#  define GL_IMAGE_ROTATE_ORIGIN_Y_HP 0x815B
#endif
#ifndef GL_IMAGE_MAG_FILTER_HP
#  define GL_IMAGE_MAG_FILTER_HP 0x815C
#endif
#ifndef GL_IMAGE_MIN_FILTER_HP
#  define GL_IMAGE_MIN_FILTER_HP 0x815D
#endif
#ifndef GL_IMAGE_CUBIC_WEIGHT_HP
#  define GL_IMAGE_CUBIC_WEIGHT_HP 0x815E
#endif
#ifndef GL_CUBIC_HP
#  define GL_CUBIC_HP 0x815F
#endif
#ifndef GL_AVERAGE_HP
#  define GL_AVERAGE_HP 0x8160
#endif
#ifndef GL_IMAGE_TRANSFORM_2D_HP
#  define GL_IMAGE_TRANSFORM_2D_HP 0x8161
#endif
#ifndef GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
#endif
#ifndef GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC glImageTransformParameteriHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC glImageTransformParameterfHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC glImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC glImageTransformParameterfvHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC glGetImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC glGetImageTransformParameterfvHP;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:29:07 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_HP_image_transform__
#define __GLUX_GL_HP_image_transform__

GLUX_NEW_PLUGIN(GL_HP_image_transform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_IMAGE_SCALE_X_HP
#  define GL_IMAGE_SCALE_X_HP 0x8155
#endif
#ifndef GL_IMAGE_SCALE_Y_HP
#  define GL_IMAGE_SCALE_Y_HP 0x8156
#endif
#ifndef GL_IMAGE_TRANSLATE_X_HP
#  define GL_IMAGE_TRANSLATE_X_HP 0x8157
#endif
#ifndef GL_IMAGE_TRANSLATE_Y_HP
#  define GL_IMAGE_TRANSLATE_Y_HP 0x8158
#endif
#ifndef GL_IMAGE_ROTATE_ANGLE_HP
#  define GL_IMAGE_ROTATE_ANGLE_HP 0x8159
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_X_HP
#  define GL_IMAGE_ROTATE_ORIGIN_X_HP 0x815A
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_Y_HP
#  define GL_IMAGE_ROTATE_ORIGIN_Y_HP 0x815B
#endif
#ifndef GL_IMAGE_MAG_FILTER_HP
#  define GL_IMAGE_MAG_FILTER_HP 0x815C
#endif
#ifndef GL_IMAGE_MIN_FILTER_HP
#  define GL_IMAGE_MIN_FILTER_HP 0x815D
#endif
#ifndef GL_IMAGE_CUBIC_WEIGHT_HP
#  define GL_IMAGE_CUBIC_WEIGHT_HP 0x815E
#endif
#ifndef GL_CUBIC_HP
#  define GL_CUBIC_HP 0x815F
#endif
#ifndef GL_AVERAGE_HP
#  define GL_AVERAGE_HP 0x8160
#endif
#ifndef GL_IMAGE_TRANSFORM_2D_HP
#  define GL_IMAGE_TRANSFORM_2D_HP 0x8161
#endif
#ifndef GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
#endif
#ifndef GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC glImageTransformParameteriHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC glImageTransformParameterfHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC glImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC glImageTransformParameterfvHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC glGetImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC glGetImageTransformParameterfvHP;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:17:07 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_HP_image_transform__
#define __GLUX_GL_HP_image_transform__

GLUX_NEW_PLUGIN(GL_HP_image_transform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_IMAGE_SCALE_X_HP
#  define GL_IMAGE_SCALE_X_HP 0x8155
#endif
#ifndef GL_IMAGE_SCALE_Y_HP
#  define GL_IMAGE_SCALE_Y_HP 0x8156
#endif
#ifndef GL_IMAGE_TRANSLATE_X_HP
#  define GL_IMAGE_TRANSLATE_X_HP 0x8157
#endif
#ifndef GL_IMAGE_TRANSLATE_Y_HP
#  define GL_IMAGE_TRANSLATE_Y_HP 0x8158
#endif
#ifndef GL_IMAGE_ROTATE_ANGLE_HP
#  define GL_IMAGE_ROTATE_ANGLE_HP 0x8159
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_X_HP
#  define GL_IMAGE_ROTATE_ORIGIN_X_HP 0x815A
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_Y_HP
#  define GL_IMAGE_ROTATE_ORIGIN_Y_HP 0x815B
#endif
#ifndef GL_IMAGE_MAG_FILTER_HP
#  define GL_IMAGE_MAG_FILTER_HP 0x815C
#endif
#ifndef GL_IMAGE_MIN_FILTER_HP
#  define GL_IMAGE_MIN_FILTER_HP 0x815D
#endif
#ifndef GL_IMAGE_CUBIC_WEIGHT_HP
#  define GL_IMAGE_CUBIC_WEIGHT_HP 0x815E
#endif
#ifndef GL_CUBIC_HP
#  define GL_CUBIC_HP 0x815F
#endif
#ifndef GL_AVERAGE_HP
#  define GL_AVERAGE_HP 0x8160
#endif
#ifndef GL_IMAGE_TRANSFORM_2D_HP
#  define GL_IMAGE_TRANSFORM_2D_HP 0x8161
#endif
#ifndef GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
#endif
#ifndef GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC glImageTransformParameteriHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC glImageTransformParameterfHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC glImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC glImageTransformParameterfvHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC glGetImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC glGetImageTransformParameterfvHP;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_HP_image_transform__
#define __GLUX_GL_HP_image_transform__

GLUX_NEW_PLUGIN(GL_HP_image_transform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_IMAGE_SCALE_X_HP
#  define GL_IMAGE_SCALE_X_HP 0x8155
#endif
#ifndef GL_IMAGE_SCALE_Y_HP
#  define GL_IMAGE_SCALE_Y_HP 0x8156
#endif
#ifndef GL_IMAGE_TRANSLATE_X_HP
#  define GL_IMAGE_TRANSLATE_X_HP 0x8157
#endif
#ifndef GL_IMAGE_TRANSLATE_Y_HP
#  define GL_IMAGE_TRANSLATE_Y_HP 0x8158
#endif
#ifndef GL_IMAGE_ROTATE_ANGLE_HP
#  define GL_IMAGE_ROTATE_ANGLE_HP 0x8159
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_X_HP
#  define GL_IMAGE_ROTATE_ORIGIN_X_HP 0x815A
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_Y_HP
#  define GL_IMAGE_ROTATE_ORIGIN_Y_HP 0x815B
#endif
#ifndef GL_IMAGE_MAG_FILTER_HP
#  define GL_IMAGE_MAG_FILTER_HP 0x815C
#endif
#ifndef GL_IMAGE_MIN_FILTER_HP
#  define GL_IMAGE_MIN_FILTER_HP 0x815D
#endif
#ifndef GL_IMAGE_CUBIC_WEIGHT_HP
#  define GL_IMAGE_CUBIC_WEIGHT_HP 0x815E
#endif
#ifndef GL_CUBIC_HP
#  define GL_CUBIC_HP 0x815F
#endif
#ifndef GL_AVERAGE_HP
#  define GL_AVERAGE_HP 0x8160
#endif
#ifndef GL_IMAGE_TRANSFORM_2D_HP
#  define GL_IMAGE_TRANSFORM_2D_HP 0x8161
#endif
#ifndef GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
#endif
#ifndef GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC glImageTransformParameteriHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC glImageTransformParameterfHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC glImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC glImageTransformParameterfvHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC glGetImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC glGetImageTransformParameterfvHP;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:22 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_HP_image_transform__
#define __GLUX_GL_HP_image_transform__

GLUX_NEW_PLUGIN(GL_HP_image_transform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_IMAGE_SCALE_X_HP
#  define GL_IMAGE_SCALE_X_HP 0x8155
#endif
#ifndef GL_IMAGE_SCALE_Y_HP
#  define GL_IMAGE_SCALE_Y_HP 0x8156
#endif
#ifndef GL_IMAGE_TRANSLATE_X_HP
#  define GL_IMAGE_TRANSLATE_X_HP 0x8157
#endif
#ifndef GL_IMAGE_TRANSLATE_Y_HP
#  define GL_IMAGE_TRANSLATE_Y_HP 0x8158
#endif
#ifndef GL_IMAGE_ROTATE_ANGLE_HP
#  define GL_IMAGE_ROTATE_ANGLE_HP 0x8159
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_X_HP
#  define GL_IMAGE_ROTATE_ORIGIN_X_HP 0x815A
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_Y_HP
#  define GL_IMAGE_ROTATE_ORIGIN_Y_HP 0x815B
#endif
#ifndef GL_IMAGE_MAG_FILTER_HP
#  define GL_IMAGE_MAG_FILTER_HP 0x815C
#endif
#ifndef GL_IMAGE_MIN_FILTER_HP
#  define GL_IMAGE_MIN_FILTER_HP 0x815D
#endif
#ifndef GL_IMAGE_CUBIC_WEIGHT_HP
#  define GL_IMAGE_CUBIC_WEIGHT_HP 0x815E
#endif
#ifndef GL_CUBIC_HP
#  define GL_CUBIC_HP 0x815F
#endif
#ifndef GL_AVERAGE_HP
#  define GL_AVERAGE_HP 0x8160
#endif
#ifndef GL_IMAGE_TRANSFORM_2D_HP
#  define GL_IMAGE_TRANSFORM_2D_HP 0x8161
#endif
#ifndef GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
#endif
#ifndef GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC glImageTransformParameteriHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC glImageTransformParameterfHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC glImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC glImageTransformParameterfvHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC glGetImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC glGetImageTransformParameterfvHP;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:02 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_HP_image_transform__
#define __GLUX_GL_HP_image_transform__

GLUX_NEW_PLUGIN(GL_HP_image_transform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_IMAGE_SCALE_X_HP
#  define GL_IMAGE_SCALE_X_HP 0x8155
#endif
#ifndef GL_IMAGE_SCALE_Y_HP
#  define GL_IMAGE_SCALE_Y_HP 0x8156
#endif
#ifndef GL_IMAGE_TRANSLATE_X_HP
#  define GL_IMAGE_TRANSLATE_X_HP 0x8157
#endif
#ifndef GL_IMAGE_TRANSLATE_Y_HP
#  define GL_IMAGE_TRANSLATE_Y_HP 0x8158
#endif
#ifndef GL_IMAGE_ROTATE_ANGLE_HP
#  define GL_IMAGE_ROTATE_ANGLE_HP 0x8159
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_X_HP
#  define GL_IMAGE_ROTATE_ORIGIN_X_HP 0x815A
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_Y_HP
#  define GL_IMAGE_ROTATE_ORIGIN_Y_HP 0x815B
#endif
#ifndef GL_IMAGE_MAG_FILTER_HP
#  define GL_IMAGE_MAG_FILTER_HP 0x815C
#endif
#ifndef GL_IMAGE_MIN_FILTER_HP
#  define GL_IMAGE_MIN_FILTER_HP 0x815D
#endif
#ifndef GL_IMAGE_CUBIC_WEIGHT_HP
#  define GL_IMAGE_CUBIC_WEIGHT_HP 0x815E
#endif
#ifndef GL_CUBIC_HP
#  define GL_CUBIC_HP 0x815F
#endif
#ifndef GL_AVERAGE_HP
#  define GL_AVERAGE_HP 0x8160
#endif
#ifndef GL_IMAGE_TRANSFORM_2D_HP
#  define GL_IMAGE_TRANSFORM_2D_HP 0x8161
#endif
#ifndef GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
#endif
#ifndef GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC glImageTransformParameteriHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC glImageTransformParameterfHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC glImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC glImageTransformParameterfvHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC glGetImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC glGetImageTransformParameterfvHP;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:09 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_HP_image_transform__
#define __GLUX_GL_HP_image_transform__

GLUX_NEW_PLUGIN(GL_HP_image_transform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_IMAGE_SCALE_X_HP
#  define GL_IMAGE_SCALE_X_HP 0x8155
#endif
#ifndef GL_IMAGE_SCALE_Y_HP
#  define GL_IMAGE_SCALE_Y_HP 0x8156
#endif
#ifndef GL_IMAGE_TRANSLATE_X_HP
#  define GL_IMAGE_TRANSLATE_X_HP 0x8157
#endif
#ifndef GL_IMAGE_TRANSLATE_Y_HP
#  define GL_IMAGE_TRANSLATE_Y_HP 0x8158
#endif
#ifndef GL_IMAGE_ROTATE_ANGLE_HP
#  define GL_IMAGE_ROTATE_ANGLE_HP 0x8159
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_X_HP
#  define GL_IMAGE_ROTATE_ORIGIN_X_HP 0x815A
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_Y_HP
#  define GL_IMAGE_ROTATE_ORIGIN_Y_HP 0x815B
#endif
#ifndef GL_IMAGE_MAG_FILTER_HP
#  define GL_IMAGE_MAG_FILTER_HP 0x815C
#endif
#ifndef GL_IMAGE_MIN_FILTER_HP
#  define GL_IMAGE_MIN_FILTER_HP 0x815D
#endif
#ifndef GL_IMAGE_CUBIC_WEIGHT_HP
#  define GL_IMAGE_CUBIC_WEIGHT_HP 0x815E
#endif
#ifndef GL_CUBIC_HP
#  define GL_CUBIC_HP 0x815F
#endif
#ifndef GL_AVERAGE_HP
#  define GL_AVERAGE_HP 0x8160
#endif
#ifndef GL_IMAGE_TRANSFORM_2D_HP
#  define GL_IMAGE_TRANSFORM_2D_HP 0x8161
#endif
#ifndef GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
#endif
#ifndef GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC glImageTransformParameteriHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC glImageTransformParameterfHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC glImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC glImageTransformParameterfvHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC glGetImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC glGetImageTransformParameterfvHP;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:24 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_HP_image_transform__
#define __GLUX_GL_HP_image_transform__

GLUX_NEW_PLUGIN(GL_HP_image_transform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_IMAGE_SCALE_X_HP
#  define GL_IMAGE_SCALE_X_HP 0x8155
#endif
#ifndef GL_IMAGE_SCALE_Y_HP
#  define GL_IMAGE_SCALE_Y_HP 0x8156
#endif
#ifndef GL_IMAGE_TRANSLATE_X_HP
#  define GL_IMAGE_TRANSLATE_X_HP 0x8157
#endif
#ifndef GL_IMAGE_TRANSLATE_Y_HP
#  define GL_IMAGE_TRANSLATE_Y_HP 0x8158
#endif
#ifndef GL_IMAGE_ROTATE_ANGLE_HP
#  define GL_IMAGE_ROTATE_ANGLE_HP 0x8159
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_X_HP
#  define GL_IMAGE_ROTATE_ORIGIN_X_HP 0x815A
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_Y_HP
#  define GL_IMAGE_ROTATE_ORIGIN_Y_HP 0x815B
#endif
#ifndef GL_IMAGE_MAG_FILTER_HP
#  define GL_IMAGE_MAG_FILTER_HP 0x815C
#endif
#ifndef GL_IMAGE_MIN_FILTER_HP
#  define GL_IMAGE_MIN_FILTER_HP 0x815D
#endif
#ifndef GL_IMAGE_CUBIC_WEIGHT_HP
#  define GL_IMAGE_CUBIC_WEIGHT_HP 0x815E
#endif
#ifndef GL_CUBIC_HP
#  define GL_CUBIC_HP 0x815F
#endif
#ifndef GL_AVERAGE_HP
#  define GL_AVERAGE_HP 0x8160
#endif
#ifndef GL_IMAGE_TRANSFORM_2D_HP
#  define GL_IMAGE_TRANSFORM_2D_HP 0x8161
#endif
#ifndef GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
#endif
#ifndef GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC glImageTransformParameteriHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC glImageTransformParameterfHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC glImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC glImageTransformParameterfvHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC glGetImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC glGetImageTransformParameterfvHP;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:52:06 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_HP_image_transform__
#define __GLUX_GL_HP_image_transform__

GLUX_NEW_PLUGIN(GL_HP_image_transform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_IMAGE_SCALE_X_HP
#  define GL_IMAGE_SCALE_X_HP 0x8155
#endif
#ifndef GL_IMAGE_SCALE_Y_HP
#  define GL_IMAGE_SCALE_Y_HP 0x8156
#endif
#ifndef GL_IMAGE_TRANSLATE_X_HP
#  define GL_IMAGE_TRANSLATE_X_HP 0x8157
#endif
#ifndef GL_IMAGE_TRANSLATE_Y_HP
#  define GL_IMAGE_TRANSLATE_Y_HP 0x8158
#endif
#ifndef GL_IMAGE_ROTATE_ANGLE_HP
#  define GL_IMAGE_ROTATE_ANGLE_HP 0x8159
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_X_HP
#  define GL_IMAGE_ROTATE_ORIGIN_X_HP 0x815A
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_Y_HP
#  define GL_IMAGE_ROTATE_ORIGIN_Y_HP 0x815B
#endif
#ifndef GL_IMAGE_MAG_FILTER_HP
#  define GL_IMAGE_MAG_FILTER_HP 0x815C
#endif
#ifndef GL_IMAGE_MIN_FILTER_HP
#  define GL_IMAGE_MIN_FILTER_HP 0x815D
#endif
#ifndef GL_IMAGE_CUBIC_WEIGHT_HP
#  define GL_IMAGE_CUBIC_WEIGHT_HP 0x815E
#endif
#ifndef GL_CUBIC_HP
#  define GL_CUBIC_HP 0x815F
#endif
#ifndef GL_AVERAGE_HP
#  define GL_AVERAGE_HP 0x8160
#endif
#ifndef GL_IMAGE_TRANSFORM_2D_HP
#  define GL_IMAGE_TRANSFORM_2D_HP 0x8161
#endif
#ifndef GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
#endif
#ifndef GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC glImageTransformParameteriHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC glImageTransformParameterfHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC glImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC glImageTransformParameterfvHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC glGetImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC glGetImageTransformParameterfvHP;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_HP_image_transform__
#define __GLUX_GL_HP_image_transform__

GLUX_NEW_PLUGIN(GL_HP_image_transform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_IMAGE_SCALE_X_HP
#  define GL_IMAGE_SCALE_X_HP 0x8155
#endif
#ifndef GL_IMAGE_SCALE_Y_HP
#  define GL_IMAGE_SCALE_Y_HP 0x8156
#endif
#ifndef GL_IMAGE_TRANSLATE_X_HP
#  define GL_IMAGE_TRANSLATE_X_HP 0x8157
#endif
#ifndef GL_IMAGE_TRANSLATE_Y_HP
#  define GL_IMAGE_TRANSLATE_Y_HP 0x8158
#endif
#ifndef GL_IMAGE_ROTATE_ANGLE_HP
#  define GL_IMAGE_ROTATE_ANGLE_HP 0x8159
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_X_HP
#  define GL_IMAGE_ROTATE_ORIGIN_X_HP 0x815A
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_Y_HP
#  define GL_IMAGE_ROTATE_ORIGIN_Y_HP 0x815B
#endif
#ifndef GL_IMAGE_MAG_FILTER_HP
#  define GL_IMAGE_MAG_FILTER_HP 0x815C
#endif
#ifndef GL_IMAGE_MIN_FILTER_HP
#  define GL_IMAGE_MIN_FILTER_HP 0x815D
#endif
#ifndef GL_IMAGE_CUBIC_WEIGHT_HP
#  define GL_IMAGE_CUBIC_WEIGHT_HP 0x815E
#endif
#ifndef GL_CUBIC_HP
#  define GL_CUBIC_HP 0x815F
#endif
#ifndef GL_AVERAGE_HP
#  define GL_AVERAGE_HP 0x8160
#endif
#ifndef GL_IMAGE_TRANSFORM_2D_HP
#  define GL_IMAGE_TRANSFORM_2D_HP 0x8161
#endif
#ifndef GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
#endif
#ifndef GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC glImageTransformParameteriHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC glImageTransformParameterfHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC glImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC glImageTransformParameterfvHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC glGetImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC glGetImageTransformParameterfvHP;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:07 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_HP_image_transform__
#define __GLUX_GL_HP_image_transform__

GLUX_NEW_PLUGIN(GL_HP_image_transform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_IMAGE_SCALE_X_HP
#  define GL_IMAGE_SCALE_X_HP 0x8155
#endif
#ifndef GL_IMAGE_SCALE_Y_HP
#  define GL_IMAGE_SCALE_Y_HP 0x8156
#endif
#ifndef GL_IMAGE_TRANSLATE_X_HP
#  define GL_IMAGE_TRANSLATE_X_HP 0x8157
#endif
#ifndef GL_IMAGE_TRANSLATE_Y_HP
#  define GL_IMAGE_TRANSLATE_Y_HP 0x8158
#endif
#ifndef GL_IMAGE_ROTATE_ANGLE_HP
#  define GL_IMAGE_ROTATE_ANGLE_HP 0x8159
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_X_HP
#  define GL_IMAGE_ROTATE_ORIGIN_X_HP 0x815A
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_Y_HP
#  define GL_IMAGE_ROTATE_ORIGIN_Y_HP 0x815B
#endif
#ifndef GL_IMAGE_MAG_FILTER_HP
#  define GL_IMAGE_MAG_FILTER_HP 0x815C
#endif
#ifndef GL_IMAGE_MIN_FILTER_HP
#  define GL_IMAGE_MIN_FILTER_HP 0x815D
#endif
#ifndef GL_IMAGE_CUBIC_WEIGHT_HP
#  define GL_IMAGE_CUBIC_WEIGHT_HP 0x815E
#endif
#ifndef GL_CUBIC_HP
#  define GL_CUBIC_HP 0x815F
#endif
#ifndef GL_AVERAGE_HP
#  define GL_AVERAGE_HP 0x8160
#endif
#ifndef GL_IMAGE_TRANSFORM_2D_HP
#  define GL_IMAGE_TRANSFORM_2D_HP 0x8161
#endif
#ifndef GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
#endif
#ifndef GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC glImageTransformParameteriHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC glImageTransformParameterfHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC glImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC glImageTransformParameterfvHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC glGetImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC glGetImageTransformParameterfvHP;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:28 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_HP_image_transform__
#define __GLUX_GL_HP_image_transform__

GLUX_NEW_PLUGIN(GL_HP_image_transform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_IMAGE_SCALE_X_HP
#  define GL_IMAGE_SCALE_X_HP 0x8155
#endif
#ifndef GL_IMAGE_SCALE_Y_HP
#  define GL_IMAGE_SCALE_Y_HP 0x8156
#endif
#ifndef GL_IMAGE_TRANSLATE_X_HP
#  define GL_IMAGE_TRANSLATE_X_HP 0x8157
#endif
#ifndef GL_IMAGE_TRANSLATE_Y_HP
#  define GL_IMAGE_TRANSLATE_Y_HP 0x8158
#endif
#ifndef GL_IMAGE_ROTATE_ANGLE_HP
#  define GL_IMAGE_ROTATE_ANGLE_HP 0x8159
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_X_HP
#  define GL_IMAGE_ROTATE_ORIGIN_X_HP 0x815A
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_Y_HP
#  define GL_IMAGE_ROTATE_ORIGIN_Y_HP 0x815B
#endif
#ifndef GL_IMAGE_MAG_FILTER_HP
#  define GL_IMAGE_MAG_FILTER_HP 0x815C
#endif
#ifndef GL_IMAGE_MIN_FILTER_HP
#  define GL_IMAGE_MIN_FILTER_HP 0x815D
#endif
#ifndef GL_IMAGE_CUBIC_WEIGHT_HP
#  define GL_IMAGE_CUBIC_WEIGHT_HP 0x815E
#endif
#ifndef GL_CUBIC_HP
#  define GL_CUBIC_HP 0x815F
#endif
#ifndef GL_AVERAGE_HP
#  define GL_AVERAGE_HP 0x8160
#endif
#ifndef GL_IMAGE_TRANSFORM_2D_HP
#  define GL_IMAGE_TRANSFORM_2D_HP 0x8161
#endif
#ifndef GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
#endif
#ifndef GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC glImageTransformParameteriHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC glImageTransformParameterfHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC glImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC glImageTransformParameterfvHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC glGetImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC glGetImageTransformParameterfvHP;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_HP_image_transform__
#define __GLUX_GL_HP_image_transform__

GLUX_NEW_PLUGIN(GL_HP_image_transform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_IMAGE_SCALE_X_HP
#  define GL_IMAGE_SCALE_X_HP 0x8155
#endif
#ifndef GL_IMAGE_SCALE_Y_HP
#  define GL_IMAGE_SCALE_Y_HP 0x8156
#endif
#ifndef GL_IMAGE_TRANSLATE_X_HP
#  define GL_IMAGE_TRANSLATE_X_HP 0x8157
#endif
#ifndef GL_IMAGE_TRANSLATE_Y_HP
#  define GL_IMAGE_TRANSLATE_Y_HP 0x8158
#endif
#ifndef GL_IMAGE_ROTATE_ANGLE_HP
#  define GL_IMAGE_ROTATE_ANGLE_HP 0x8159
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_X_HP
#  define GL_IMAGE_ROTATE_ORIGIN_X_HP 0x815A
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_Y_HP
#  define GL_IMAGE_ROTATE_ORIGIN_Y_HP 0x815B
#endif
#ifndef GL_IMAGE_MAG_FILTER_HP
#  define GL_IMAGE_MAG_FILTER_HP 0x815C
#endif
#ifndef GL_IMAGE_MIN_FILTER_HP
#  define GL_IMAGE_MIN_FILTER_HP 0x815D
#endif
#ifndef GL_IMAGE_CUBIC_WEIGHT_HP
#  define GL_IMAGE_CUBIC_WEIGHT_HP 0x815E
#endif
#ifndef GL_CUBIC_HP
#  define GL_CUBIC_HP 0x815F
#endif
#ifndef GL_AVERAGE_HP
#  define GL_AVERAGE_HP 0x8160
#endif
#ifndef GL_IMAGE_TRANSFORM_2D_HP
#  define GL_IMAGE_TRANSFORM_2D_HP 0x8161
#endif
#ifndef GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
#endif
#ifndef GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC glImageTransformParameteriHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC glImageTransformParameterfHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC glImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC glImageTransformParameterfvHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC glGetImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC glGetImageTransformParameterfvHP;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:42:02 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_HP_image_transform__
#define __GLUX_GL_HP_image_transform__

GLUX_NEW_PLUGIN(GL_HP_image_transform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_IMAGE_SCALE_X_HP
#  define GL_IMAGE_SCALE_X_HP 0x8155
#endif
#ifndef GL_IMAGE_SCALE_Y_HP
#  define GL_IMAGE_SCALE_Y_HP 0x8156
#endif
#ifndef GL_IMAGE_TRANSLATE_X_HP
#  define GL_IMAGE_TRANSLATE_X_HP 0x8157
#endif
#ifndef GL_IMAGE_TRANSLATE_Y_HP
#  define GL_IMAGE_TRANSLATE_Y_HP 0x8158
#endif
#ifndef GL_IMAGE_ROTATE_ANGLE_HP
#  define GL_IMAGE_ROTATE_ANGLE_HP 0x8159
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_X_HP
#  define GL_IMAGE_ROTATE_ORIGIN_X_HP 0x815A
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_Y_HP
#  define GL_IMAGE_ROTATE_ORIGIN_Y_HP 0x815B
#endif
#ifndef GL_IMAGE_MAG_FILTER_HP
#  define GL_IMAGE_MAG_FILTER_HP 0x815C
#endif
#ifndef GL_IMAGE_MIN_FILTER_HP
#  define GL_IMAGE_MIN_FILTER_HP 0x815D
#endif
#ifndef GL_IMAGE_CUBIC_WEIGHT_HP
#  define GL_IMAGE_CUBIC_WEIGHT_HP 0x815E
#endif
#ifndef GL_CUBIC_HP
#  define GL_CUBIC_HP 0x815F
#endif
#ifndef GL_AVERAGE_HP
#  define GL_AVERAGE_HP 0x8160
#endif
#ifndef GL_IMAGE_TRANSFORM_2D_HP
#  define GL_IMAGE_TRANSFORM_2D_HP 0x8161
#endif
#ifndef GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
#endif
#ifndef GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC glImageTransformParameteriHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC glImageTransformParameterfHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC glImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC glImageTransformParameterfvHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC glGetImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC glGetImageTransformParameterfvHP;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:42 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_HP_image_transform__
#define __GLUX_GL_HP_image_transform__

GLUX_NEW_PLUGIN(GL_HP_image_transform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_IMAGE_SCALE_X_HP
#  define GL_IMAGE_SCALE_X_HP 0x8155
#endif
#ifndef GL_IMAGE_SCALE_Y_HP
#  define GL_IMAGE_SCALE_Y_HP 0x8156
#endif
#ifndef GL_IMAGE_TRANSLATE_X_HP
#  define GL_IMAGE_TRANSLATE_X_HP 0x8157
#endif
#ifndef GL_IMAGE_TRANSLATE_Y_HP
#  define GL_IMAGE_TRANSLATE_Y_HP 0x8158
#endif
#ifndef GL_IMAGE_ROTATE_ANGLE_HP
#  define GL_IMAGE_ROTATE_ANGLE_HP 0x8159
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_X_HP
#  define GL_IMAGE_ROTATE_ORIGIN_X_HP 0x815A
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_Y_HP
#  define GL_IMAGE_ROTATE_ORIGIN_Y_HP 0x815B
#endif
#ifndef GL_IMAGE_MAG_FILTER_HP
#  define GL_IMAGE_MAG_FILTER_HP 0x815C
#endif
#ifndef GL_IMAGE_MIN_FILTER_HP
#  define GL_IMAGE_MIN_FILTER_HP 0x815D
#endif
#ifndef GL_IMAGE_CUBIC_WEIGHT_HP
#  define GL_IMAGE_CUBIC_WEIGHT_HP 0x815E
#endif
#ifndef GL_CUBIC_HP
#  define GL_CUBIC_HP 0x815F
#endif
#ifndef GL_AVERAGE_HP
#  define GL_AVERAGE_HP 0x8160
#endif
#ifndef GL_IMAGE_TRANSFORM_2D_HP
#  define GL_IMAGE_TRANSFORM_2D_HP 0x8161
#endif
#ifndef GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
#endif
#ifndef GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC glImageTransformParameteriHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC glImageTransformParameterfHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC glImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC glImageTransformParameterfvHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC glGetImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC glGetImageTransformParameterfvHP;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:10:01 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_HP_image_transform__
#define __GLUX_GL_HP_image_transform__

GLUX_NEW_PLUGIN(GL_HP_image_transform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_IMAGE_SCALE_X_HP
#  define GL_IMAGE_SCALE_X_HP 0x8155
#endif
#ifndef GL_IMAGE_SCALE_Y_HP
#  define GL_IMAGE_SCALE_Y_HP 0x8156
#endif
#ifndef GL_IMAGE_TRANSLATE_X_HP
#  define GL_IMAGE_TRANSLATE_X_HP 0x8157
#endif
#ifndef GL_IMAGE_TRANSLATE_Y_HP
#  define GL_IMAGE_TRANSLATE_Y_HP 0x8158
#endif
#ifndef GL_IMAGE_ROTATE_ANGLE_HP
#  define GL_IMAGE_ROTATE_ANGLE_HP 0x8159
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_X_HP
#  define GL_IMAGE_ROTATE_ORIGIN_X_HP 0x815A
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_Y_HP
#  define GL_IMAGE_ROTATE_ORIGIN_Y_HP 0x815B
#endif
#ifndef GL_IMAGE_MAG_FILTER_HP
#  define GL_IMAGE_MAG_FILTER_HP 0x815C
#endif
#ifndef GL_IMAGE_MIN_FILTER_HP
#  define GL_IMAGE_MIN_FILTER_HP 0x815D
#endif
#ifndef GL_IMAGE_CUBIC_WEIGHT_HP
#  define GL_IMAGE_CUBIC_WEIGHT_HP 0x815E
#endif
#ifndef GL_CUBIC_HP
#  define GL_CUBIC_HP 0x815F
#endif
#ifndef GL_AVERAGE_HP
#  define GL_AVERAGE_HP 0x8160
#endif
#ifndef GL_IMAGE_TRANSFORM_2D_HP
#  define GL_IMAGE_TRANSFORM_2D_HP 0x8161
#endif
#ifndef GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
#endif
#ifndef GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC glImageTransformParameteriHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC glImageTransformParameterfHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC glImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC glImageTransformParameterfvHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC glGetImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC glGetImageTransformParameterfvHP;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:20:02 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_HP_image_transform__
#define __GLUX_GL_HP_image_transform__

GLUX_NEW_PLUGIN(GL_HP_image_transform);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_IMAGE_SCALE_X_HP
#  define GL_IMAGE_SCALE_X_HP 0x8155
#endif
#ifndef GL_IMAGE_SCALE_Y_HP
#  define GL_IMAGE_SCALE_Y_HP 0x8156
#endif
#ifndef GL_IMAGE_TRANSLATE_X_HP
#  define GL_IMAGE_TRANSLATE_X_HP 0x8157
#endif
#ifndef GL_IMAGE_TRANSLATE_Y_HP
#  define GL_IMAGE_TRANSLATE_Y_HP 0x8158
#endif
#ifndef GL_IMAGE_ROTATE_ANGLE_HP
#  define GL_IMAGE_ROTATE_ANGLE_HP 0x8159
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_X_HP
#  define GL_IMAGE_ROTATE_ORIGIN_X_HP 0x815A
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_Y_HP
#  define GL_IMAGE_ROTATE_ORIGIN_Y_HP 0x815B
#endif
#ifndef GL_IMAGE_MAG_FILTER_HP
#  define GL_IMAGE_MAG_FILTER_HP 0x815C
#endif
#ifndef GL_IMAGE_MIN_FILTER_HP
#  define GL_IMAGE_MIN_FILTER_HP 0x815D
#endif
#ifndef GL_IMAGE_CUBIC_WEIGHT_HP
#  define GL_IMAGE_CUBIC_WEIGHT_HP 0x815E
#endif
#ifndef GL_CUBIC_HP
#  define GL_CUBIC_HP 0x815F
#endif
#ifndef GL_AVERAGE_HP
#  define GL_AVERAGE_HP 0x8160
#endif
#ifndef GL_IMAGE_TRANSFORM_2D_HP
#  define GL_IMAGE_TRANSFORM_2D_HP 0x8161
#endif
#ifndef GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
#endif
#ifndef GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC glImageTransformParameteriHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC glImageTransformParameterfHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC glImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC glImageTransformParameterfvHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC glGetImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC glGetImageTransformParameterfvHP;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:43:03 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_HP_image_transform__
#define __GLUX_GL_HP_image_transform__

GLUX_NEW_PLUGIN(GL_HP_image_transform)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_IMAGE_SCALE_X_HP
#  define GL_IMAGE_SCALE_X_HP 0x8155
#endif
#ifndef GL_IMAGE_SCALE_Y_HP
#  define GL_IMAGE_SCALE_Y_HP 0x8156
#endif
#ifndef GL_IMAGE_TRANSLATE_X_HP
#  define GL_IMAGE_TRANSLATE_X_HP 0x8157
#endif
#ifndef GL_IMAGE_TRANSLATE_Y_HP
#  define GL_IMAGE_TRANSLATE_Y_HP 0x8158
#endif
#ifndef GL_IMAGE_ROTATE_ANGLE_HP
#  define GL_IMAGE_ROTATE_ANGLE_HP 0x8159
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_X_HP
#  define GL_IMAGE_ROTATE_ORIGIN_X_HP 0x815A
#endif
#ifndef GL_IMAGE_ROTATE_ORIGIN_Y_HP
#  define GL_IMAGE_ROTATE_ORIGIN_Y_HP 0x815B
#endif
#ifndef GL_IMAGE_MAG_FILTER_HP
#  define GL_IMAGE_MAG_FILTER_HP 0x815C
#endif
#ifndef GL_IMAGE_MIN_FILTER_HP
#  define GL_IMAGE_MIN_FILTER_HP 0x815D
#endif
#ifndef GL_IMAGE_CUBIC_WEIGHT_HP
#  define GL_IMAGE_CUBIC_WEIGHT_HP 0x815E
#endif
#ifndef GL_CUBIC_HP
#  define GL_CUBIC_HP 0x815F
#endif
#ifndef GL_AVERAGE_HP
#  define GL_AVERAGE_HP 0x8160
#endif
#ifndef GL_IMAGE_TRANSFORM_2D_HP
#  define GL_IMAGE_TRANSFORM_2D_HP 0x8161
#endif
#ifndef GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
#endif
#ifndef GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#  define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
typedef void (APIENTRYP PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glImageTransformParameteriHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIHPPROC glImageTransformParameteriHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFHPPROC glImageTransformParameterfHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterivHP
extern PFNGLUXIMAGETRANSFORMPARAMETERIVHPPROC glImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glImageTransformParameterfvHP
extern PFNGLUXIMAGETRANSFORMPARAMETERFVHPPROC glImageTransformParameterfvHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterivHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERIVHPPROC glGetImageTransformParameterivHP;
#endif
#ifndef __GLUX__GLFCT_glGetImageTransformParameterfvHP
extern PFNGLUXGETIMAGETRANSFORMPARAMETERFVHPPROC glGetImageTransformParameterfvHP;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
