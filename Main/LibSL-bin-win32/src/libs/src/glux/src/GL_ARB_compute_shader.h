
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:25 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_compute_shader__
#define __GLUX_GL_ARB_compute_shader__

GLUX_NEW_PLUGIN(GL_ARB_compute_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPUTE_SHADER
#  define GL_COMPUTE_SHADER 0x91B9
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_BLOCKS
#  define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#endif
#ifndef GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
#  define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#endif
#ifndef GL_MAX_COMPUTE_IMAGE_UNIFORMS
#  define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#endif
#ifndef GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
#  define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#endif
#ifndef GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#endif
#ifndef GL_MAX_COMPUTE_LOCAL_INVOCATIONS
#  define GL_MAX_COMPUTE_LOCAL_INVOCATIONS 0x90EB
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_COUNT
#  define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_SIZE
#  define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#endif
#ifndef GL_COMPUTE_LOCAL_WORK_SIZE
#  define GL_COMPUTE_LOCAL_WORK_SIZE 0x8267
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER
#  define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER
#  define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER_BINDING
#  define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#endif
#ifndef GL_COMPUTE_SHADER_BIT
#  define GL_COMPUTE_SHADER_BIT 0x00000020
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDispatchCompute
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDispatchCompute
extern PFNGLUXDISPATCHCOMPUTEPROC glDispatchCompute;
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
extern PFNGLUXDISPATCHCOMPUTEINDIRECTPROC glDispatchComputeIndirect;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:43 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_compute_shader__
#define __GLUX_GL_ARB_compute_shader__

GLUX_NEW_PLUGIN(GL_ARB_compute_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPUTE_SHADER
#  define GL_COMPUTE_SHADER 0x91B9
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_BLOCKS
#  define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#endif
#ifndef GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
#  define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#endif
#ifndef GL_MAX_COMPUTE_IMAGE_UNIFORMS
#  define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#endif
#ifndef GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
#  define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#endif
#ifndef GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#endif
#ifndef GL_MAX_COMPUTE_LOCAL_INVOCATIONS
#  define GL_MAX_COMPUTE_LOCAL_INVOCATIONS 0x90EB
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_COUNT
#  define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_SIZE
#  define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#endif
#ifndef GL_COMPUTE_LOCAL_WORK_SIZE
#  define GL_COMPUTE_LOCAL_WORK_SIZE 0x8267
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER
#  define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER
#  define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER_BINDING
#  define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#endif
#ifndef GL_COMPUTE_SHADER_BIT
#  define GL_COMPUTE_SHADER_BIT 0x00000020
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDispatchCompute
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDispatchCompute
extern PFNGLUXDISPATCHCOMPUTEPROC glDispatchCompute;
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
extern PFNGLUXDISPATCHCOMPUTEINDIRECTPROC glDispatchComputeIndirect;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:53 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_compute_shader__
#define __GLUX_GL_ARB_compute_shader__

GLUX_NEW_PLUGIN(GL_ARB_compute_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPUTE_SHADER
#  define GL_COMPUTE_SHADER 0x91B9
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_BLOCKS
#  define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#endif
#ifndef GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
#  define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#endif
#ifndef GL_MAX_COMPUTE_IMAGE_UNIFORMS
#  define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#endif
#ifndef GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
#  define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#endif
#ifndef GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#endif
#ifndef GL_MAX_COMPUTE_LOCAL_INVOCATIONS
#  define GL_MAX_COMPUTE_LOCAL_INVOCATIONS 0x90EB
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_COUNT
#  define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_SIZE
#  define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#endif
#ifndef GL_COMPUTE_LOCAL_WORK_SIZE
#  define GL_COMPUTE_LOCAL_WORK_SIZE 0x8267
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER
#  define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER
#  define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER_BINDING
#  define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#endif
#ifndef GL_COMPUTE_SHADER_BIT
#  define GL_COMPUTE_SHADER_BIT 0x00000020
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDispatchCompute
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDispatchCompute
extern PFNGLUXDISPATCHCOMPUTEPROC glDispatchCompute;
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
extern PFNGLUXDISPATCHCOMPUTEINDIRECTPROC glDispatchComputeIndirect;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:13 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_compute_shader__
#define __GLUX_GL_ARB_compute_shader__

GLUX_NEW_PLUGIN(GL_ARB_compute_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPUTE_SHADER
#  define GL_COMPUTE_SHADER 0x91B9
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_BLOCKS
#  define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#endif
#ifndef GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
#  define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#endif
#ifndef GL_MAX_COMPUTE_IMAGE_UNIFORMS
#  define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#endif
#ifndef GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
#  define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#endif
#ifndef GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#endif
#ifndef GL_MAX_COMPUTE_LOCAL_INVOCATIONS
#  define GL_MAX_COMPUTE_LOCAL_INVOCATIONS 0x90EB
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_COUNT
#  define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_SIZE
#  define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#endif
#ifndef GL_COMPUTE_LOCAL_WORK_SIZE
#  define GL_COMPUTE_LOCAL_WORK_SIZE 0x8267
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER
#  define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER
#  define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER_BINDING
#  define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#endif
#ifndef GL_COMPUTE_SHADER_BIT
#  define GL_COMPUTE_SHADER_BIT 0x00000020
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDispatchCompute
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDispatchCompute
extern PFNGLUXDISPATCHCOMPUTEPROC glDispatchCompute;
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
extern PFNGLUXDISPATCHCOMPUTEINDIRECTPROC glDispatchComputeIndirect;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:29 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_compute_shader__
#define __GLUX_GL_ARB_compute_shader__

GLUX_NEW_PLUGIN(GL_ARB_compute_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPUTE_SHADER
#  define GL_COMPUTE_SHADER 0x91B9
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_BLOCKS
#  define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#endif
#ifndef GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
#  define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#endif
#ifndef GL_MAX_COMPUTE_IMAGE_UNIFORMS
#  define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#endif
#ifndef GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
#  define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#endif
#ifndef GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#endif
#ifndef GL_MAX_COMPUTE_LOCAL_INVOCATIONS
#  define GL_MAX_COMPUTE_LOCAL_INVOCATIONS 0x90EB
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_COUNT
#  define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_SIZE
#  define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#endif
#ifndef GL_COMPUTE_LOCAL_WORK_SIZE
#  define GL_COMPUTE_LOCAL_WORK_SIZE 0x8267
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER
#  define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER
#  define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER_BINDING
#  define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#endif
#ifndef GL_COMPUTE_SHADER_BIT
#  define GL_COMPUTE_SHADER_BIT 0x00000020
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDispatchCompute
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDispatchCompute
extern PFNGLUXDISPATCHCOMPUTEPROC glDispatchCompute;
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
extern PFNGLUXDISPATCHCOMPUTEINDIRECTPROC glDispatchComputeIndirect;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:32 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_compute_shader__
#define __GLUX_GL_ARB_compute_shader__

GLUX_NEW_PLUGIN(GL_ARB_compute_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPUTE_SHADER
#  define GL_COMPUTE_SHADER 0x91B9
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_BLOCKS
#  define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#endif
#ifndef GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
#  define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#endif
#ifndef GL_MAX_COMPUTE_IMAGE_UNIFORMS
#  define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#endif
#ifndef GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
#  define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#endif
#ifndef GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#endif
#ifndef GL_MAX_COMPUTE_LOCAL_INVOCATIONS
#  define GL_MAX_COMPUTE_LOCAL_INVOCATIONS 0x90EB
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_COUNT
#  define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_SIZE
#  define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#endif
#ifndef GL_COMPUTE_LOCAL_WORK_SIZE
#  define GL_COMPUTE_LOCAL_WORK_SIZE 0x8267
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER
#  define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER
#  define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER_BINDING
#  define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#endif
#ifndef GL_COMPUTE_SHADER_BIT
#  define GL_COMPUTE_SHADER_BIT 0x00000020
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDispatchCompute
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDispatchCompute
extern PFNGLUXDISPATCHCOMPUTEPROC glDispatchCompute;
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
extern PFNGLUXDISPATCHCOMPUTEINDIRECTPROC glDispatchComputeIndirect;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:54 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_compute_shader__
#define __GLUX_GL_ARB_compute_shader__

GLUX_NEW_PLUGIN(GL_ARB_compute_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPUTE_SHADER
#  define GL_COMPUTE_SHADER 0x91B9
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_BLOCKS
#  define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#endif
#ifndef GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
#  define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#endif
#ifndef GL_MAX_COMPUTE_IMAGE_UNIFORMS
#  define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#endif
#ifndef GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
#  define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#endif
#ifndef GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#endif
#ifndef GL_MAX_COMPUTE_LOCAL_INVOCATIONS
#  define GL_MAX_COMPUTE_LOCAL_INVOCATIONS 0x90EB
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_COUNT
#  define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_SIZE
#  define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#endif
#ifndef GL_COMPUTE_LOCAL_WORK_SIZE
#  define GL_COMPUTE_LOCAL_WORK_SIZE 0x8267
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER
#  define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER
#  define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER_BINDING
#  define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#endif
#ifndef GL_COMPUTE_SHADER_BIT
#  define GL_COMPUTE_SHADER_BIT 0x00000020
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDispatchCompute
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDispatchCompute
extern PFNGLUXDISPATCHCOMPUTEPROC glDispatchCompute;
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
extern PFNGLUXDISPATCHCOMPUTEINDIRECTPROC glDispatchComputeIndirect;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:28:03 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_compute_shader__
#define __GLUX_GL_ARB_compute_shader__

GLUX_NEW_PLUGIN(GL_ARB_compute_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPUTE_SHADER
#  define GL_COMPUTE_SHADER 0x91B9
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_BLOCKS
#  define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#endif
#ifndef GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
#  define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#endif
#ifndef GL_MAX_COMPUTE_IMAGE_UNIFORMS
#  define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#endif
#ifndef GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
#  define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#endif
#ifndef GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#endif
#ifndef GL_MAX_COMPUTE_LOCAL_INVOCATIONS
#  define GL_MAX_COMPUTE_LOCAL_INVOCATIONS 0x90EB
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_COUNT
#  define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_SIZE
#  define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#endif
#ifndef GL_COMPUTE_LOCAL_WORK_SIZE
#  define GL_COMPUTE_LOCAL_WORK_SIZE 0x8267
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER
#  define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER
#  define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER_BINDING
#  define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#endif
#ifndef GL_COMPUTE_SHADER_BIT
#  define GL_COMPUTE_SHADER_BIT 0x00000020
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDispatchCompute
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDispatchCompute
extern PFNGLUXDISPATCHCOMPUTEPROC glDispatchCompute;
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
extern PFNGLUXDISPATCHCOMPUTEINDIRECTPROC glDispatchComputeIndirect;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:16:57 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_compute_shader__
#define __GLUX_GL_ARB_compute_shader__

GLUX_NEW_PLUGIN(GL_ARB_compute_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPUTE_SHADER
#  define GL_COMPUTE_SHADER 0x91B9
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_BLOCKS
#  define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#endif
#ifndef GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
#  define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#endif
#ifndef GL_MAX_COMPUTE_IMAGE_UNIFORMS
#  define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#endif
#ifndef GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
#  define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#endif
#ifndef GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#endif
#ifndef GL_MAX_COMPUTE_LOCAL_INVOCATIONS
#  define GL_MAX_COMPUTE_LOCAL_INVOCATIONS 0x90EB
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_COUNT
#  define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_SIZE
#  define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#endif
#ifndef GL_COMPUTE_LOCAL_WORK_SIZE
#  define GL_COMPUTE_LOCAL_WORK_SIZE 0x8267
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER
#  define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER
#  define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER_BINDING
#  define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#endif
#ifndef GL_COMPUTE_SHADER_BIT
#  define GL_COMPUTE_SHADER_BIT 0x00000020
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDispatchCompute
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDispatchCompute
extern PFNGLUXDISPATCHCOMPUTEPROC glDispatchCompute;
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
extern PFNGLUXDISPATCHCOMPUTEINDIRECTPROC glDispatchComputeIndirect;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_compute_shader__
#define __GLUX_GL_ARB_compute_shader__

GLUX_NEW_PLUGIN(GL_ARB_compute_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPUTE_SHADER
#  define GL_COMPUTE_SHADER 0x91B9
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_BLOCKS
#  define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#endif
#ifndef GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
#  define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#endif
#ifndef GL_MAX_COMPUTE_IMAGE_UNIFORMS
#  define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#endif
#ifndef GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
#  define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#endif
#ifndef GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#endif
#ifndef GL_MAX_COMPUTE_LOCAL_INVOCATIONS
#  define GL_MAX_COMPUTE_LOCAL_INVOCATIONS 0x90EB
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_COUNT
#  define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_SIZE
#  define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#endif
#ifndef GL_COMPUTE_LOCAL_WORK_SIZE
#  define GL_COMPUTE_LOCAL_WORK_SIZE 0x8267
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER
#  define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER
#  define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER_BINDING
#  define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#endif
#ifndef GL_COMPUTE_SHADER_BIT
#  define GL_COMPUTE_SHADER_BIT 0x00000020
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDispatchCompute
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDispatchCompute
extern PFNGLUXDISPATCHCOMPUTEPROC glDispatchCompute;
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
extern PFNGLUXDISPATCHCOMPUTEINDIRECTPROC glDispatchComputeIndirect;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:20 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_compute_shader__
#define __GLUX_GL_ARB_compute_shader__

GLUX_NEW_PLUGIN(GL_ARB_compute_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPUTE_SHADER
#  define GL_COMPUTE_SHADER 0x91B9
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_BLOCKS
#  define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#endif
#ifndef GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
#  define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#endif
#ifndef GL_MAX_COMPUTE_IMAGE_UNIFORMS
#  define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#endif
#ifndef GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
#  define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#endif
#ifndef GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#endif
#ifndef GL_MAX_COMPUTE_LOCAL_INVOCATIONS
#  define GL_MAX_COMPUTE_LOCAL_INVOCATIONS 0x90EB
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_COUNT
#  define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_SIZE
#  define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#endif
#ifndef GL_COMPUTE_LOCAL_WORK_SIZE
#  define GL_COMPUTE_LOCAL_WORK_SIZE 0x8267
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER
#  define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER
#  define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER_BINDING
#  define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#endif
#ifndef GL_COMPUTE_SHADER_BIT
#  define GL_COMPUTE_SHADER_BIT 0x00000020
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDispatchCompute
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDispatchCompute
extern PFNGLUXDISPATCHCOMPUTEPROC glDispatchCompute;
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
extern PFNGLUXDISPATCHCOMPUTEINDIRECTPROC glDispatchComputeIndirect;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:00 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_compute_shader__
#define __GLUX_GL_ARB_compute_shader__

GLUX_NEW_PLUGIN(GL_ARB_compute_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPUTE_SHADER
#  define GL_COMPUTE_SHADER 0x91B9
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_BLOCKS
#  define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#endif
#ifndef GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
#  define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#endif
#ifndef GL_MAX_COMPUTE_IMAGE_UNIFORMS
#  define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#endif
#ifndef GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
#  define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#endif
#ifndef GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#endif
#ifndef GL_MAX_COMPUTE_LOCAL_INVOCATIONS
#  define GL_MAX_COMPUTE_LOCAL_INVOCATIONS 0x90EB
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_COUNT
#  define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_SIZE
#  define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#endif
#ifndef GL_COMPUTE_LOCAL_WORK_SIZE
#  define GL_COMPUTE_LOCAL_WORK_SIZE 0x8267
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER
#  define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER
#  define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER_BINDING
#  define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#endif
#ifndef GL_COMPUTE_SHADER_BIT
#  define GL_COMPUTE_SHADER_BIT 0x00000020
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDispatchCompute
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDispatchCompute
extern PFNGLUXDISPATCHCOMPUTEPROC glDispatchCompute;
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
extern PFNGLUXDISPATCHCOMPUTEINDIRECTPROC glDispatchComputeIndirect;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:09 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_compute_shader__
#define __GLUX_GL_ARB_compute_shader__

GLUX_NEW_PLUGIN(GL_ARB_compute_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPUTE_SHADER
#  define GL_COMPUTE_SHADER 0x91B9
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_BLOCKS
#  define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#endif
#ifndef GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
#  define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#endif
#ifndef GL_MAX_COMPUTE_IMAGE_UNIFORMS
#  define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#endif
#ifndef GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
#  define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#endif
#ifndef GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#endif
#ifndef GL_MAX_COMPUTE_LOCAL_INVOCATIONS
#  define GL_MAX_COMPUTE_LOCAL_INVOCATIONS 0x90EB
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_COUNT
#  define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_SIZE
#  define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#endif
#ifndef GL_COMPUTE_LOCAL_WORK_SIZE
#  define GL_COMPUTE_LOCAL_WORK_SIZE 0x8267
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER
#  define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER
#  define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER_BINDING
#  define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#endif
#ifndef GL_COMPUTE_SHADER_BIT
#  define GL_COMPUTE_SHADER_BIT 0x00000020
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDispatchCompute
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDispatchCompute
extern PFNGLUXDISPATCHCOMPUTEPROC glDispatchCompute;
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
extern PFNGLUXDISPATCHCOMPUTEINDIRECTPROC glDispatchComputeIndirect;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:21 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_compute_shader__
#define __GLUX_GL_ARB_compute_shader__

GLUX_NEW_PLUGIN(GL_ARB_compute_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPUTE_SHADER
#  define GL_COMPUTE_SHADER 0x91B9
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_BLOCKS
#  define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#endif
#ifndef GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
#  define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#endif
#ifndef GL_MAX_COMPUTE_IMAGE_UNIFORMS
#  define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#endif
#ifndef GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
#  define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#endif
#ifndef GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#endif
#ifndef GL_MAX_COMPUTE_LOCAL_INVOCATIONS
#  define GL_MAX_COMPUTE_LOCAL_INVOCATIONS 0x90EB
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_COUNT
#  define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_SIZE
#  define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#endif
#ifndef GL_COMPUTE_LOCAL_WORK_SIZE
#  define GL_COMPUTE_LOCAL_WORK_SIZE 0x8267
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER
#  define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER
#  define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER_BINDING
#  define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#endif
#ifndef GL_COMPUTE_SHADER_BIT
#  define GL_COMPUTE_SHADER_BIT 0x00000020
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDispatchCompute
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDispatchCompute
extern PFNGLUXDISPATCHCOMPUTEPROC glDispatchCompute;
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
extern PFNGLUXDISPATCHCOMPUTEINDIRECTPROC glDispatchComputeIndirect;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:52:01 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_compute_shader__
#define __GLUX_GL_ARB_compute_shader__

GLUX_NEW_PLUGIN(GL_ARB_compute_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPUTE_SHADER
#  define GL_COMPUTE_SHADER 0x91B9
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_BLOCKS
#  define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#endif
#ifndef GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
#  define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#endif
#ifndef GL_MAX_COMPUTE_IMAGE_UNIFORMS
#  define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#endif
#ifndef GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
#  define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#endif
#ifndef GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#endif
#ifndef GL_MAX_COMPUTE_LOCAL_INVOCATIONS
#  define GL_MAX_COMPUTE_LOCAL_INVOCATIONS 0x90EB
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_COUNT
#  define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_SIZE
#  define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#endif
#ifndef GL_COMPUTE_LOCAL_WORK_SIZE
#  define GL_COMPUTE_LOCAL_WORK_SIZE 0x8267
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER
#  define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER
#  define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER_BINDING
#  define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#endif
#ifndef GL_COMPUTE_SHADER_BIT
#  define GL_COMPUTE_SHADER_BIT 0x00000020
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDispatchCompute
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDispatchCompute
extern PFNGLUXDISPATCHCOMPUTEPROC glDispatchCompute;
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
extern PFNGLUXDISPATCHCOMPUTEINDIRECTPROC glDispatchComputeIndirect;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_compute_shader__
#define __GLUX_GL_ARB_compute_shader__

GLUX_NEW_PLUGIN(GL_ARB_compute_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPUTE_SHADER
#  define GL_COMPUTE_SHADER 0x91B9
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_BLOCKS
#  define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#endif
#ifndef GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
#  define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#endif
#ifndef GL_MAX_COMPUTE_IMAGE_UNIFORMS
#  define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#endif
#ifndef GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
#  define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#endif
#ifndef GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#endif
#ifndef GL_MAX_COMPUTE_LOCAL_INVOCATIONS
#  define GL_MAX_COMPUTE_LOCAL_INVOCATIONS 0x90EB
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_COUNT
#  define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_SIZE
#  define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#endif
#ifndef GL_COMPUTE_LOCAL_WORK_SIZE
#  define GL_COMPUTE_LOCAL_WORK_SIZE 0x8267
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER
#  define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER
#  define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER_BINDING
#  define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#endif
#ifndef GL_COMPUTE_SHADER_BIT
#  define GL_COMPUTE_SHADER_BIT 0x00000020
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDispatchCompute
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDispatchCompute
extern PFNGLUXDISPATCHCOMPUTEPROC glDispatchCompute;
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
extern PFNGLUXDISPATCHCOMPUTEINDIRECTPROC glDispatchComputeIndirect;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:04 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_compute_shader__
#define __GLUX_GL_ARB_compute_shader__

GLUX_NEW_PLUGIN(GL_ARB_compute_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPUTE_SHADER
#  define GL_COMPUTE_SHADER 0x91B9
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_BLOCKS
#  define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#endif
#ifndef GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
#  define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#endif
#ifndef GL_MAX_COMPUTE_IMAGE_UNIFORMS
#  define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#endif
#ifndef GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
#  define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#endif
#ifndef GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#endif
#ifndef GL_MAX_COMPUTE_LOCAL_INVOCATIONS
#  define GL_MAX_COMPUTE_LOCAL_INVOCATIONS 0x90EB
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_COUNT
#  define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_SIZE
#  define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#endif
#ifndef GL_COMPUTE_LOCAL_WORK_SIZE
#  define GL_COMPUTE_LOCAL_WORK_SIZE 0x8267
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER
#  define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER
#  define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER_BINDING
#  define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#endif
#ifndef GL_COMPUTE_SHADER_BIT
#  define GL_COMPUTE_SHADER_BIT 0x00000020
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDispatchCompute
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDispatchCompute
extern PFNGLUXDISPATCHCOMPUTEPROC glDispatchCompute;
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
extern PFNGLUXDISPATCHCOMPUTEINDIRECTPROC glDispatchComputeIndirect;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:24 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_compute_shader__
#define __GLUX_GL_ARB_compute_shader__

GLUX_NEW_PLUGIN(GL_ARB_compute_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPUTE_SHADER
#  define GL_COMPUTE_SHADER 0x91B9
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_BLOCKS
#  define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#endif
#ifndef GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
#  define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#endif
#ifndef GL_MAX_COMPUTE_IMAGE_UNIFORMS
#  define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#endif
#ifndef GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
#  define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#endif
#ifndef GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#endif
#ifndef GL_MAX_COMPUTE_LOCAL_INVOCATIONS
#  define GL_MAX_COMPUTE_LOCAL_INVOCATIONS 0x90EB
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_COUNT
#  define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_SIZE
#  define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#endif
#ifndef GL_COMPUTE_LOCAL_WORK_SIZE
#  define GL_COMPUTE_LOCAL_WORK_SIZE 0x8267
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER
#  define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER
#  define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER_BINDING
#  define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#endif
#ifndef GL_COMPUTE_SHADER_BIT
#  define GL_COMPUTE_SHADER_BIT 0x00000020
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDispatchCompute
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDispatchCompute
extern PFNGLUXDISPATCHCOMPUTEPROC glDispatchCompute;
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
extern PFNGLUXDISPATCHCOMPUTEINDIRECTPROC glDispatchComputeIndirect;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_compute_shader__
#define __GLUX_GL_ARB_compute_shader__

GLUX_NEW_PLUGIN(GL_ARB_compute_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPUTE_SHADER
#  define GL_COMPUTE_SHADER 0x91B9
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_BLOCKS
#  define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#endif
#ifndef GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
#  define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#endif
#ifndef GL_MAX_COMPUTE_IMAGE_UNIFORMS
#  define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#endif
#ifndef GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
#  define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#endif
#ifndef GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#endif
#ifndef GL_MAX_COMPUTE_LOCAL_INVOCATIONS
#  define GL_MAX_COMPUTE_LOCAL_INVOCATIONS 0x90EB
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_COUNT
#  define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_SIZE
#  define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#endif
#ifndef GL_COMPUTE_LOCAL_WORK_SIZE
#  define GL_COMPUTE_LOCAL_WORK_SIZE 0x8267
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER
#  define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER
#  define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER_BINDING
#  define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#endif
#ifndef GL_COMPUTE_SHADER_BIT
#  define GL_COMPUTE_SHADER_BIT 0x00000020
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDispatchCompute
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDispatchCompute
extern PFNGLUXDISPATCHCOMPUTEPROC glDispatchCompute;
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
extern PFNGLUXDISPATCHCOMPUTEINDIRECTPROC glDispatchComputeIndirect;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:41:58 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_compute_shader__
#define __GLUX_GL_ARB_compute_shader__

GLUX_NEW_PLUGIN(GL_ARB_compute_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPUTE_SHADER
#  define GL_COMPUTE_SHADER 0x91B9
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_BLOCKS
#  define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#endif
#ifndef GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
#  define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#endif
#ifndef GL_MAX_COMPUTE_IMAGE_UNIFORMS
#  define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#endif
#ifndef GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
#  define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#endif
#ifndef GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#endif
#ifndef GL_MAX_COMPUTE_LOCAL_INVOCATIONS
#  define GL_MAX_COMPUTE_LOCAL_INVOCATIONS 0x90EB
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_COUNT
#  define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_SIZE
#  define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#endif
#ifndef GL_COMPUTE_LOCAL_WORK_SIZE
#  define GL_COMPUTE_LOCAL_WORK_SIZE 0x8267
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER
#  define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER
#  define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER_BINDING
#  define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#endif
#ifndef GL_COMPUTE_SHADER_BIT
#  define GL_COMPUTE_SHADER_BIT 0x00000020
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDispatchCompute
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDispatchCompute
extern PFNGLUXDISPATCHCOMPUTEPROC glDispatchCompute;
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
extern PFNGLUXDISPATCHCOMPUTEINDIRECTPROC glDispatchComputeIndirect;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:39 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_compute_shader__
#define __GLUX_GL_ARB_compute_shader__

GLUX_NEW_PLUGIN(GL_ARB_compute_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPUTE_SHADER
#  define GL_COMPUTE_SHADER 0x91B9
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_BLOCKS
#  define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#endif
#ifndef GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
#  define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#endif
#ifndef GL_MAX_COMPUTE_IMAGE_UNIFORMS
#  define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#endif
#ifndef GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
#  define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#endif
#ifndef GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#endif
#ifndef GL_MAX_COMPUTE_LOCAL_INVOCATIONS
#  define GL_MAX_COMPUTE_LOCAL_INVOCATIONS 0x90EB
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_COUNT
#  define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_SIZE
#  define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#endif
#ifndef GL_COMPUTE_LOCAL_WORK_SIZE
#  define GL_COMPUTE_LOCAL_WORK_SIZE 0x8267
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER
#  define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER
#  define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER_BINDING
#  define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#endif
#ifndef GL_COMPUTE_SHADER_BIT
#  define GL_COMPUTE_SHADER_BIT 0x00000020
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDispatchCompute
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDispatchCompute
extern PFNGLUXDISPATCHCOMPUTEPROC glDispatchCompute;
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
extern PFNGLUXDISPATCHCOMPUTEINDIRECTPROC glDispatchComputeIndirect;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:09:58 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_compute_shader__
#define __GLUX_GL_ARB_compute_shader__

GLUX_NEW_PLUGIN(GL_ARB_compute_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPUTE_SHADER
#  define GL_COMPUTE_SHADER 0x91B9
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_BLOCKS
#  define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#endif
#ifndef GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
#  define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#endif
#ifndef GL_MAX_COMPUTE_IMAGE_UNIFORMS
#  define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#endif
#ifndef GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
#  define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#endif
#ifndef GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#endif
#ifndef GL_MAX_COMPUTE_LOCAL_INVOCATIONS
#  define GL_MAX_COMPUTE_LOCAL_INVOCATIONS 0x90EB
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_COUNT
#  define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_SIZE
#  define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#endif
#ifndef GL_COMPUTE_LOCAL_WORK_SIZE
#  define GL_COMPUTE_LOCAL_WORK_SIZE 0x8267
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER
#  define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER
#  define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER_BINDING
#  define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#endif
#ifndef GL_COMPUTE_SHADER_BIT
#  define GL_COMPUTE_SHADER_BIT 0x00000020
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDispatchCompute
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDispatchCompute
extern PFNGLUXDISPATCHCOMPUTEPROC glDispatchCompute;
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
extern PFNGLUXDISPATCHCOMPUTEINDIRECTPROC glDispatchComputeIndirect;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:19:59 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_compute_shader__
#define __GLUX_GL_ARB_compute_shader__

GLUX_NEW_PLUGIN(GL_ARB_compute_shader);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPUTE_SHADER
#  define GL_COMPUTE_SHADER 0x91B9
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_BLOCKS
#  define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#endif
#ifndef GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
#  define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#endif
#ifndef GL_MAX_COMPUTE_IMAGE_UNIFORMS
#  define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#endif
#ifndef GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
#  define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#endif
#ifndef GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#endif
#ifndef GL_MAX_COMPUTE_LOCAL_INVOCATIONS
#  define GL_MAX_COMPUTE_LOCAL_INVOCATIONS 0x90EB
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_COUNT
#  define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_SIZE
#  define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#endif
#ifndef GL_COMPUTE_LOCAL_WORK_SIZE
#  define GL_COMPUTE_LOCAL_WORK_SIZE 0x8267
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER
#  define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER
#  define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER_BINDING
#  define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#endif
#ifndef GL_COMPUTE_SHADER_BIT
#  define GL_COMPUTE_SHADER_BIT 0x00000020
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDispatchCompute
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDispatchCompute
extern PFNGLUXDISPATCHCOMPUTEPROC glDispatchCompute;
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
extern PFNGLUXDISPATCHCOMPUTEINDIRECTPROC glDispatchComputeIndirect;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:42:57 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_compute_shader__
#define __GLUX_GL_ARB_compute_shader__

GLUX_NEW_PLUGIN(GL_ARB_compute_shader)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_COMPUTE_SHADER
#  define GL_COMPUTE_SHADER 0x91B9
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_BLOCKS
#  define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#endif
#ifndef GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
#  define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#endif
#ifndef GL_MAX_COMPUTE_IMAGE_UNIFORMS
#  define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#endif
#ifndef GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
#  define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#endif
#ifndef GL_MAX_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#endif
#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTERS
#  define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#endif
#ifndef GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
#  define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#endif
#ifndef GL_MAX_COMPUTE_LOCAL_INVOCATIONS
#  define GL_MAX_COMPUTE_LOCAL_INVOCATIONS 0x90EB
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_COUNT
#  define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#endif
#ifndef GL_MAX_COMPUTE_WORK_GROUP_SIZE
#  define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#endif
#ifndef GL_COMPUTE_LOCAL_WORK_SIZE
#  define GL_COMPUTE_LOCAL_WORK_SIZE 0x8267
#endif
#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER
#  define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#endif
#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER
#  define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER
#  define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#endif
#ifndef GL_DISPATCH_INDIRECT_BUFFER_BINDING
#  define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#endif
#ifndef GL_COMPUTE_SHADER_BIT
#  define GL_COMPUTE_SHADER_BIT 0x00000020
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDispatchCompute
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
typedef void (APIENTRYP PFNGLUXDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDispatchCompute
extern PFNGLUXDISPATCHCOMPUTEPROC glDispatchCompute;
#endif
#ifndef __GLUX__GLFCT_glDispatchComputeIndirect
extern PFNGLUXDISPATCHCOMPUTEINDIRECTPROC glDispatchComputeIndirect;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
