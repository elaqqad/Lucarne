
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:24 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_APPLE_element_array__
#define __GLUX_GL_APPLE_element_array__

GLUX_NEW_PLUGIN(GL_APPLE_element_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ELEMENT_ARRAY_APPLE
#  define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#endif
#ifndef GL_ELEMENT_ARRAY_TYPE_APPLE
#  define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#endif
#ifndef GL_ELEMENT_ARRAY_POINTER_APPLE
#  define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
typedef void (APIENTRYP PFNGLUXELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
extern PFNGLUXELEMENTPOINTERAPPLEPROC glElementPointerAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
extern PFNGLUXDRAWELEMENTARRAYAPPLEPROC glDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
extern PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC glDrawRangeElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
extern PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC glMultiDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
extern PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC glMultiDrawRangeElementArrayAPPLE;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:37 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_APPLE_element_array__
#define __GLUX_GL_APPLE_element_array__

GLUX_NEW_PLUGIN(GL_APPLE_element_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ELEMENT_ARRAY_APPLE
#  define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#endif
#ifndef GL_ELEMENT_ARRAY_TYPE_APPLE
#  define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#endif
#ifndef GL_ELEMENT_ARRAY_POINTER_APPLE
#  define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
typedef void (APIENTRYP PFNGLUXELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
extern PFNGLUXELEMENTPOINTERAPPLEPROC glElementPointerAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
extern PFNGLUXDRAWELEMENTARRAYAPPLEPROC glDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
extern PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC glDrawRangeElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
extern PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC glMultiDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
extern PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC glMultiDrawRangeElementArrayAPPLE;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:53 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_APPLE_element_array__
#define __GLUX_GL_APPLE_element_array__

GLUX_NEW_PLUGIN(GL_APPLE_element_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ELEMENT_ARRAY_APPLE
#  define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#endif
#ifndef GL_ELEMENT_ARRAY_TYPE_APPLE
#  define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#endif
#ifndef GL_ELEMENT_ARRAY_POINTER_APPLE
#  define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
typedef void (APIENTRYP PFNGLUXELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
extern PFNGLUXELEMENTPOINTERAPPLEPROC glElementPointerAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
extern PFNGLUXDRAWELEMENTARRAYAPPLEPROC glDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
extern PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC glDrawRangeElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
extern PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC glMultiDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
extern PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC glMultiDrawRangeElementArrayAPPLE;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:12 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_APPLE_element_array__
#define __GLUX_GL_APPLE_element_array__

GLUX_NEW_PLUGIN(GL_APPLE_element_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ELEMENT_ARRAY_APPLE
#  define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#endif
#ifndef GL_ELEMENT_ARRAY_TYPE_APPLE
#  define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#endif
#ifndef GL_ELEMENT_ARRAY_POINTER_APPLE
#  define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
typedef void (APIENTRYP PFNGLUXELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
extern PFNGLUXELEMENTPOINTERAPPLEPROC glElementPointerAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
extern PFNGLUXDRAWELEMENTARRAYAPPLEPROC glDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
extern PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC glDrawRangeElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
extern PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC glMultiDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
extern PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC glMultiDrawRangeElementArrayAPPLE;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:27 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_APPLE_element_array__
#define __GLUX_GL_APPLE_element_array__

GLUX_NEW_PLUGIN(GL_APPLE_element_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ELEMENT_ARRAY_APPLE
#  define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#endif
#ifndef GL_ELEMENT_ARRAY_TYPE_APPLE
#  define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#endif
#ifndef GL_ELEMENT_ARRAY_POINTER_APPLE
#  define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
typedef void (APIENTRYP PFNGLUXELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
extern PFNGLUXELEMENTPOINTERAPPLEPROC glElementPointerAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
extern PFNGLUXDRAWELEMENTARRAYAPPLEPROC glDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
extern PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC glDrawRangeElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
extern PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC glMultiDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
extern PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC glMultiDrawRangeElementArrayAPPLE;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:32 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_APPLE_element_array__
#define __GLUX_GL_APPLE_element_array__

GLUX_NEW_PLUGIN(GL_APPLE_element_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ELEMENT_ARRAY_APPLE
#  define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#endif
#ifndef GL_ELEMENT_ARRAY_TYPE_APPLE
#  define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#endif
#ifndef GL_ELEMENT_ARRAY_POINTER_APPLE
#  define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
typedef void (APIENTRYP PFNGLUXELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
extern PFNGLUXELEMENTPOINTERAPPLEPROC glElementPointerAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
extern PFNGLUXDRAWELEMENTARRAYAPPLEPROC glDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
extern PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC glDrawRangeElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
extern PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC glMultiDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
extern PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC glMultiDrawRangeElementArrayAPPLE;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:48 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_APPLE_element_array__
#define __GLUX_GL_APPLE_element_array__

GLUX_NEW_PLUGIN(GL_APPLE_element_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ELEMENT_ARRAY_APPLE
#  define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#endif
#ifndef GL_ELEMENT_ARRAY_TYPE_APPLE
#  define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#endif
#ifndef GL_ELEMENT_ARRAY_POINTER_APPLE
#  define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
typedef void (APIENTRYP PFNGLUXELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
extern PFNGLUXELEMENTPOINTERAPPLEPROC glElementPointerAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
extern PFNGLUXDRAWELEMENTARRAYAPPLEPROC glDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
extern PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC glDrawRangeElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
extern PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC glMultiDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
extern PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC glMultiDrawRangeElementArrayAPPLE;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:24:55 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_APPLE_element_array__
#define __GLUX_GL_APPLE_element_array__

GLUX_NEW_PLUGIN(GL_APPLE_element_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ELEMENT_ARRAY_APPLE
#  define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#endif
#ifndef GL_ELEMENT_ARRAY_TYPE_APPLE
#  define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#endif
#ifndef GL_ELEMENT_ARRAY_POINTER_APPLE
#  define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
typedef void (APIENTRYP PFNGLUXELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
extern PFNGLUXELEMENTPOINTERAPPLEPROC glElementPointerAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
extern PFNGLUXDRAWELEMENTARRAYAPPLEPROC glDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
extern PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC glDrawRangeElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
extern PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC glMultiDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
extern PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC glMultiDrawRangeElementArrayAPPLE;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:27:54 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_APPLE_element_array__
#define __GLUX_GL_APPLE_element_array__

GLUX_NEW_PLUGIN(GL_APPLE_element_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ELEMENT_ARRAY_APPLE
#  define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#endif
#ifndef GL_ELEMENT_ARRAY_TYPE_APPLE
#  define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#endif
#ifndef GL_ELEMENT_ARRAY_POINTER_APPLE
#  define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
typedef void (APIENTRYP PFNGLUXELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
extern PFNGLUXELEMENTPOINTERAPPLEPROC glElementPointerAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
extern PFNGLUXDRAWELEMENTARRAYAPPLEPROC glDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
extern PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC glDrawRangeElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
extern PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC glMultiDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
extern PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC glMultiDrawRangeElementArrayAPPLE;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:16:54 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_APPLE_element_array__
#define __GLUX_GL_APPLE_element_array__

GLUX_NEW_PLUGIN(GL_APPLE_element_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ELEMENT_ARRAY_APPLE
#  define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#endif
#ifndef GL_ELEMENT_ARRAY_TYPE_APPLE
#  define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#endif
#ifndef GL_ELEMENT_ARRAY_POINTER_APPLE
#  define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
typedef void (APIENTRYP PFNGLUXELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
extern PFNGLUXELEMENTPOINTERAPPLEPROC glElementPointerAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
extern PFNGLUXDRAWELEMENTARRAYAPPLEPROC glDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
extern PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC glDrawRangeElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
extern PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC glMultiDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
extern PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC glMultiDrawRangeElementArrayAPPLE;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:00 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_APPLE_element_array__
#define __GLUX_GL_APPLE_element_array__

GLUX_NEW_PLUGIN(GL_APPLE_element_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ELEMENT_ARRAY_APPLE
#  define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#endif
#ifndef GL_ELEMENT_ARRAY_TYPE_APPLE
#  define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#endif
#ifndef GL_ELEMENT_ARRAY_POINTER_APPLE
#  define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
typedef void (APIENTRYP PFNGLUXELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
extern PFNGLUXELEMENTPOINTERAPPLEPROC glElementPointerAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
extern PFNGLUXDRAWELEMENTARRAYAPPLEPROC glDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
extern PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC glDrawRangeElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
extern PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC glMultiDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
extern PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC glMultiDrawRangeElementArrayAPPLE;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:18 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_APPLE_element_array__
#define __GLUX_GL_APPLE_element_array__

GLUX_NEW_PLUGIN(GL_APPLE_element_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ELEMENT_ARRAY_APPLE
#  define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#endif
#ifndef GL_ELEMENT_ARRAY_TYPE_APPLE
#  define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#endif
#ifndef GL_ELEMENT_ARRAY_POINTER_APPLE
#  define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
typedef void (APIENTRYP PFNGLUXELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
extern PFNGLUXELEMENTPOINTERAPPLEPROC glElementPointerAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
extern PFNGLUXDRAWELEMENTARRAYAPPLEPROC glDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
extern PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC glDrawRangeElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
extern PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC glMultiDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
extern PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC glMultiDrawRangeElementArrayAPPLE;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:36:58 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_APPLE_element_array__
#define __GLUX_GL_APPLE_element_array__

GLUX_NEW_PLUGIN(GL_APPLE_element_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ELEMENT_ARRAY_APPLE
#  define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#endif
#ifndef GL_ELEMENT_ARRAY_TYPE_APPLE
#  define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#endif
#ifndef GL_ELEMENT_ARRAY_POINTER_APPLE
#  define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
typedef void (APIENTRYP PFNGLUXELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
extern PFNGLUXELEMENTPOINTERAPPLEPROC glElementPointerAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
extern PFNGLUXDRAWELEMENTARRAYAPPLEPROC glDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
extern PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC glDrawRangeElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
extern PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC glMultiDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
extern PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC glMultiDrawRangeElementArrayAPPLE;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:08 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_APPLE_element_array__
#define __GLUX_GL_APPLE_element_array__

GLUX_NEW_PLUGIN(GL_APPLE_element_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ELEMENT_ARRAY_APPLE
#  define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#endif
#ifndef GL_ELEMENT_ARRAY_TYPE_APPLE
#  define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#endif
#ifndef GL_ELEMENT_ARRAY_POINTER_APPLE
#  define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
typedef void (APIENTRYP PFNGLUXELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
extern PFNGLUXELEMENTPOINTERAPPLEPROC glElementPointerAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
extern PFNGLUXDRAWELEMENTARRAYAPPLEPROC glDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
extern PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC glDrawRangeElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
extern PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC glMultiDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
extern PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC glMultiDrawRangeElementArrayAPPLE;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:18 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_APPLE_element_array__
#define __GLUX_GL_APPLE_element_array__

GLUX_NEW_PLUGIN(GL_APPLE_element_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ELEMENT_ARRAY_APPLE
#  define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#endif
#ifndef GL_ELEMENT_ARRAY_TYPE_APPLE
#  define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#endif
#ifndef GL_ELEMENT_ARRAY_POINTER_APPLE
#  define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
typedef void (APIENTRYP PFNGLUXELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
extern PFNGLUXELEMENTPOINTERAPPLEPROC glElementPointerAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
extern PFNGLUXDRAWELEMENTARRAYAPPLEPROC glDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
extern PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC glDrawRangeElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
extern PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC glMultiDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
extern PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC glMultiDrawRangeElementArrayAPPLE;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:51:56 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_APPLE_element_array__
#define __GLUX_GL_APPLE_element_array__

GLUX_NEW_PLUGIN(GL_APPLE_element_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ELEMENT_ARRAY_APPLE
#  define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#endif
#ifndef GL_ELEMENT_ARRAY_TYPE_APPLE
#  define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#endif
#ifndef GL_ELEMENT_ARRAY_POINTER_APPLE
#  define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
typedef void (APIENTRYP PFNGLUXELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
extern PFNGLUXELEMENTPOINTERAPPLEPROC glElementPointerAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
extern PFNGLUXDRAWELEMENTARRAYAPPLEPROC glDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
extern PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC glDrawRangeElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
extern PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC glMultiDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
extern PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC glMultiDrawRangeElementArrayAPPLE;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:50 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_APPLE_element_array__
#define __GLUX_GL_APPLE_element_array__

GLUX_NEW_PLUGIN(GL_APPLE_element_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ELEMENT_ARRAY_APPLE
#  define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#endif
#ifndef GL_ELEMENT_ARRAY_TYPE_APPLE
#  define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#endif
#ifndef GL_ELEMENT_ARRAY_POINTER_APPLE
#  define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
typedef void (APIENTRYP PFNGLUXELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
extern PFNGLUXELEMENTPOINTERAPPLEPROC glElementPointerAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
extern PFNGLUXDRAWELEMENTARRAYAPPLEPROC glDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
extern PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC glDrawRangeElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
extern PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC glMultiDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
extern PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC glMultiDrawRangeElementArrayAPPLE;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:01 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_APPLE_element_array__
#define __GLUX_GL_APPLE_element_array__

GLUX_NEW_PLUGIN(GL_APPLE_element_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ELEMENT_ARRAY_APPLE
#  define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#endif
#ifndef GL_ELEMENT_ARRAY_TYPE_APPLE
#  define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#endif
#ifndef GL_ELEMENT_ARRAY_POINTER_APPLE
#  define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
typedef void (APIENTRYP PFNGLUXELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
extern PFNGLUXELEMENTPOINTERAPPLEPROC glElementPointerAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
extern PFNGLUXDRAWELEMENTARRAYAPPLEPROC glDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
extern PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC glDrawRangeElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
extern PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC glMultiDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
extern PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC glMultiDrawRangeElementArrayAPPLE;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:21 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_APPLE_element_array__
#define __GLUX_GL_APPLE_element_array__

GLUX_NEW_PLUGIN(GL_APPLE_element_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ELEMENT_ARRAY_APPLE
#  define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#endif
#ifndef GL_ELEMENT_ARRAY_TYPE_APPLE
#  define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#endif
#ifndef GL_ELEMENT_ARRAY_POINTER_APPLE
#  define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
typedef void (APIENTRYP PFNGLUXELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
extern PFNGLUXELEMENTPOINTERAPPLEPROC glElementPointerAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
extern PFNGLUXDRAWELEMENTARRAYAPPLEPROC glDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
extern PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC glDrawRangeElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
extern PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC glMultiDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
extern PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC glMultiDrawRangeElementArrayAPPLE;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_APPLE_element_array__
#define __GLUX_GL_APPLE_element_array__

GLUX_NEW_PLUGIN(GL_APPLE_element_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ELEMENT_ARRAY_APPLE
#  define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#endif
#ifndef GL_ELEMENT_ARRAY_TYPE_APPLE
#  define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#endif
#ifndef GL_ELEMENT_ARRAY_POINTER_APPLE
#  define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
typedef void (APIENTRYP PFNGLUXELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
extern PFNGLUXELEMENTPOINTERAPPLEPROC glElementPointerAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
extern PFNGLUXDRAWELEMENTARRAYAPPLEPROC glDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
extern PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC glDrawRangeElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
extern PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC glMultiDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
extern PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC glMultiDrawRangeElementArrayAPPLE;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:41:54 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_APPLE_element_array__
#define __GLUX_GL_APPLE_element_array__

GLUX_NEW_PLUGIN(GL_APPLE_element_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ELEMENT_ARRAY_APPLE
#  define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#endif
#ifndef GL_ELEMENT_ARRAY_TYPE_APPLE
#  define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#endif
#ifndef GL_ELEMENT_ARRAY_POINTER_APPLE
#  define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
typedef void (APIENTRYP PFNGLUXELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
extern PFNGLUXELEMENTPOINTERAPPLEPROC glElementPointerAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
extern PFNGLUXDRAWELEMENTARRAYAPPLEPROC glDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
extern PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC glDrawRangeElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
extern PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC glMultiDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
extern PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC glMultiDrawRangeElementArrayAPPLE;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:33 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_APPLE_element_array__
#define __GLUX_GL_APPLE_element_array__

GLUX_NEW_PLUGIN(GL_APPLE_element_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ELEMENT_ARRAY_APPLE
#  define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#endif
#ifndef GL_ELEMENT_ARRAY_TYPE_APPLE
#  define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#endif
#ifndef GL_ELEMENT_ARRAY_POINTER_APPLE
#  define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
typedef void (APIENTRYP PFNGLUXELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
extern PFNGLUXELEMENTPOINTERAPPLEPROC glElementPointerAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
extern PFNGLUXDRAWELEMENTARRAYAPPLEPROC glDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
extern PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC glDrawRangeElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
extern PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC glMultiDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
extern PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC glMultiDrawRangeElementArrayAPPLE;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:09:55 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_APPLE_element_array__
#define __GLUX_GL_APPLE_element_array__

GLUX_NEW_PLUGIN(GL_APPLE_element_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ELEMENT_ARRAY_APPLE
#  define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#endif
#ifndef GL_ELEMENT_ARRAY_TYPE_APPLE
#  define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#endif
#ifndef GL_ELEMENT_ARRAY_POINTER_APPLE
#  define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
typedef void (APIENTRYP PFNGLUXELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
extern PFNGLUXELEMENTPOINTERAPPLEPROC glElementPointerAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
extern PFNGLUXDRAWELEMENTARRAYAPPLEPROC glDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
extern PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC glDrawRangeElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
extern PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC glMultiDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
extern PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC glMultiDrawRangeElementArrayAPPLE;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:19:56 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_APPLE_element_array__
#define __GLUX_GL_APPLE_element_array__

GLUX_NEW_PLUGIN(GL_APPLE_element_array);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ELEMENT_ARRAY_APPLE
#  define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#endif
#ifndef GL_ELEMENT_ARRAY_TYPE_APPLE
#  define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#endif
#ifndef GL_ELEMENT_ARRAY_POINTER_APPLE
#  define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
typedef void (APIENTRYP PFNGLUXELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
extern PFNGLUXELEMENTPOINTERAPPLEPROC glElementPointerAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
extern PFNGLUXDRAWELEMENTARRAYAPPLEPROC glDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
extern PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC glDrawRangeElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
extern PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC glMultiDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
extern PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC glMultiDrawRangeElementArrayAPPLE;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:42:53 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_APPLE_element_array__
#define __GLUX_GL_APPLE_element_array__

GLUX_NEW_PLUGIN(GL_APPLE_element_array)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ELEMENT_ARRAY_APPLE
#  define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#endif
#ifndef GL_ELEMENT_ARRAY_TYPE_APPLE
#  define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#endif
#ifndef GL_ELEMENT_ARRAY_POINTER_APPLE
#  define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
typedef void (APIENTRYP PFNGLUXELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
extern PFNGLUXELEMENTPOINTERAPPLEPROC glElementPointerAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
extern PFNGLUXDRAWELEMENTARRAYAPPLEPROC glDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
extern PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC glDrawRangeElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
extern PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC glMultiDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
extern PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC glMultiDrawRangeElementArrayAPPLE;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
