
// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:34 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_VERSION_4_0__
#define __GLUX_GL_VERSION_4_0__

GLUX_NEW_PLUGIN(GL_VERSION_4_0);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_SAMPLE_SHADING
#  define GL_SAMPLE_SHADING 0x8C36
#endif
#ifndef GL_MIN_SAMPLE_SHADING_VALUE
#  define GL_MIN_SAMPLE_SHADING_VALUE 0x8C37
#endif
#ifndef GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET
#  define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5E
#endif
#ifndef GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET
#  define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5F
#endif
#ifndef GL_TEXTURE_CUBE_MAP_ARRAY
#  define GL_TEXTURE_CUBE_MAP_ARRAY 0x9009
#endif
#ifndef GL_TEXTURE_BINDING_CUBE_MAP_ARRAY
#  define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY 0x900A
#endif
#ifndef GL_PROXY_TEXTURE_CUBE_MAP_ARRAY
#  define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY 0x900B
#endif
#ifndef GL_SAMPLER_CUBE_MAP_ARRAY
#  define GL_SAMPLER_CUBE_MAP_ARRAY 0x900C
#endif
#ifndef GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW
#  define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW 0x900D
#endif
#ifndef GL_INT_SAMPLER_CUBE_MAP_ARRAY
#  define GL_INT_SAMPLER_CUBE_MAP_ARRAY 0x900E
#endif
#ifndef GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY
#  define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY 0x900F
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glMinSampleShading
typedef void (APIENTRYP PFNGLUXMINSAMPLESHADINGPROC) (GLfloat value);
#endif
#ifndef __GLUX__GLFCT_glBlendEquationi
typedef void (APIENTRYP PFNGLUXBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);
#endif
#ifndef __GLUX__GLFCT_glBlendEquationSeparatei
typedef void (APIENTRYP PFNGLUXBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
#endif
#ifndef __GLUX__GLFCT_glBlendFunci
typedef void (APIENTRYP PFNGLUXBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);
#endif
#ifndef __GLUX__GLFCT_glBlendFuncSeparatei
typedef void (APIENTRYP PFNGLUXBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glMinSampleShading
extern PFNGLUXMINSAMPLESHADINGPROC glMinSampleShading;
#endif
#ifndef __GLUX__GLFCT_glBlendEquationi
extern PFNGLUXBLENDEQUATIONIPROC glBlendEquationi;
#endif
#ifndef __GLUX__GLFCT_glBlendEquationSeparatei
extern PFNGLUXBLENDEQUATIONSEPARATEIPROC glBlendEquationSeparatei;
#endif
#ifndef __GLUX__GLFCT_glBlendFunci
extern PFNGLUXBLENDFUNCIPROC glBlendFunci;
#endif
#ifndef __GLUX__GLFCT_glBlendFuncSeparatei
extern PFNGLUXBLENDFUNCSEPARATEIPROC glBlendFuncSeparatei;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:09:56 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_VERSION_4_0__
#define __GLUX_GL_VERSION_4_0__

GLUX_NEW_PLUGIN(GL_VERSION_4_0);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_SAMPLE_SHADING
#  define GL_SAMPLE_SHADING 0x8C36
#endif
#ifndef GL_MIN_SAMPLE_SHADING_VALUE
#  define GL_MIN_SAMPLE_SHADING_VALUE 0x8C37
#endif
#ifndef GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET
#  define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5E
#endif
#ifndef GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET
#  define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5F
#endif
#ifndef GL_TEXTURE_CUBE_MAP_ARRAY
#  define GL_TEXTURE_CUBE_MAP_ARRAY 0x9009
#endif
#ifndef GL_TEXTURE_BINDING_CUBE_MAP_ARRAY
#  define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY 0x900A
#endif
#ifndef GL_PROXY_TEXTURE_CUBE_MAP_ARRAY
#  define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY 0x900B
#endif
#ifndef GL_SAMPLER_CUBE_MAP_ARRAY
#  define GL_SAMPLER_CUBE_MAP_ARRAY 0x900C
#endif
#ifndef GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW
#  define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW 0x900D
#endif
#ifndef GL_INT_SAMPLER_CUBE_MAP_ARRAY
#  define GL_INT_SAMPLER_CUBE_MAP_ARRAY 0x900E
#endif
#ifndef GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY
#  define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY 0x900F
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glMinSampleShading
typedef void (APIENTRYP PFNGLUXMINSAMPLESHADINGPROC) (GLfloat value);
#endif
#ifndef __GLUX__GLFCT_glBlendEquationi
typedef void (APIENTRYP PFNGLUXBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);
#endif
#ifndef __GLUX__GLFCT_glBlendEquationSeparatei
typedef void (APIENTRYP PFNGLUXBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
#endif
#ifndef __GLUX__GLFCT_glBlendFunci
typedef void (APIENTRYP PFNGLUXBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);
#endif
#ifndef __GLUX__GLFCT_glBlendFuncSeparatei
typedef void (APIENTRYP PFNGLUXBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glMinSampleShading
extern PFNGLUXMINSAMPLESHADINGPROC glMinSampleShading;
#endif
#ifndef __GLUX__GLFCT_glBlendEquationi
extern PFNGLUXBLENDEQUATIONIPROC glBlendEquationi;
#endif
#ifndef __GLUX__GLFCT_glBlendEquationSeparatei
extern PFNGLUXBLENDEQUATIONSEPARATEIPROC glBlendEquationSeparatei;
#endif
#ifndef __GLUX__GLFCT_glBlendFunci
extern PFNGLUXBLENDFUNCIPROC glBlendFunci;
#endif
#ifndef __GLUX__GLFCT_glBlendFuncSeparatei
extern PFNGLUXBLENDFUNCSEPARATEIPROC glBlendFuncSeparatei;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:19:57 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_VERSION_4_0__
#define __GLUX_GL_VERSION_4_0__

GLUX_NEW_PLUGIN(GL_VERSION_4_0);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_SAMPLE_SHADING
#  define GL_SAMPLE_SHADING 0x8C36
#endif
#ifndef GL_MIN_SAMPLE_SHADING_VALUE
#  define GL_MIN_SAMPLE_SHADING_VALUE 0x8C37
#endif
#ifndef GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET
#  define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5E
#endif
#ifndef GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET
#  define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5F
#endif
#ifndef GL_TEXTURE_CUBE_MAP_ARRAY
#  define GL_TEXTURE_CUBE_MAP_ARRAY 0x9009
#endif
#ifndef GL_TEXTURE_BINDING_CUBE_MAP_ARRAY
#  define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY 0x900A
#endif
#ifndef GL_PROXY_TEXTURE_CUBE_MAP_ARRAY
#  define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY 0x900B
#endif
#ifndef GL_SAMPLER_CUBE_MAP_ARRAY
#  define GL_SAMPLER_CUBE_MAP_ARRAY 0x900C
#endif
#ifndef GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW
#  define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW 0x900D
#endif
#ifndef GL_INT_SAMPLER_CUBE_MAP_ARRAY
#  define GL_INT_SAMPLER_CUBE_MAP_ARRAY 0x900E
#endif
#ifndef GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY
#  define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY 0x900F
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glMinSampleShading
typedef void (APIENTRYP PFNGLUXMINSAMPLESHADINGPROC) (GLfloat value);
#endif
#ifndef __GLUX__GLFCT_glBlendEquationi
typedef void (APIENTRYP PFNGLUXBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);
#endif
#ifndef __GLUX__GLFCT_glBlendEquationSeparatei
typedef void (APIENTRYP PFNGLUXBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
#endif
#ifndef __GLUX__GLFCT_glBlendFunci
typedef void (APIENTRYP PFNGLUXBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);
#endif
#ifndef __GLUX__GLFCT_glBlendFuncSeparatei
typedef void (APIENTRYP PFNGLUXBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glMinSampleShading
extern PFNGLUXMINSAMPLESHADINGPROC glMinSampleShading;
#endif
#ifndef __GLUX__GLFCT_glBlendEquationi
extern PFNGLUXBLENDEQUATIONIPROC glBlendEquationi;
#endif
#ifndef __GLUX__GLFCT_glBlendEquationSeparatei
extern PFNGLUXBLENDEQUATIONSEPARATEIPROC glBlendEquationSeparatei;
#endif
#ifndef __GLUX__GLFCT_glBlendFunci
extern PFNGLUXBLENDFUNCIPROC glBlendFunci;
#endif
#ifndef __GLUX__GLFCT_glBlendFuncSeparatei
extern PFNGLUXBLENDFUNCSEPARATEIPROC glBlendFuncSeparatei;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:42:54 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_VERSION_4_0__
#define __GLUX_GL_VERSION_4_0__

GLUX_NEW_PLUGIN(GL_VERSION_4_0)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_SAMPLE_SHADING
#  define GL_SAMPLE_SHADING 0x8C36
#endif
#ifndef GL_MIN_SAMPLE_SHADING_VALUE
#  define GL_MIN_SAMPLE_SHADING_VALUE 0x8C37
#endif
#ifndef GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET
#  define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5E
#endif
#ifndef GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET
#  define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5F
#endif
#ifndef GL_TEXTURE_CUBE_MAP_ARRAY
#  define GL_TEXTURE_CUBE_MAP_ARRAY 0x9009
#endif
#ifndef GL_TEXTURE_BINDING_CUBE_MAP_ARRAY
#  define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY 0x900A
#endif
#ifndef GL_PROXY_TEXTURE_CUBE_MAP_ARRAY
#  define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY 0x900B
#endif
#ifndef GL_SAMPLER_CUBE_MAP_ARRAY
#  define GL_SAMPLER_CUBE_MAP_ARRAY 0x900C
#endif
#ifndef GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW
#  define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW 0x900D
#endif
#ifndef GL_INT_SAMPLER_CUBE_MAP_ARRAY
#  define GL_INT_SAMPLER_CUBE_MAP_ARRAY 0x900E
#endif
#ifndef GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY
#  define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY 0x900F
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glMinSampleShading
typedef void (APIENTRYP PFNGLUXMINSAMPLESHADINGPROC) (GLfloat value);
#endif
#ifndef __GLUX__GLFCT_glBlendEquationi
typedef void (APIENTRYP PFNGLUXBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);
#endif
#ifndef __GLUX__GLFCT_glBlendEquationSeparatei
typedef void (APIENTRYP PFNGLUXBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
#endif
#ifndef __GLUX__GLFCT_glBlendFunci
typedef void (APIENTRYP PFNGLUXBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);
#endif
#ifndef __GLUX__GLFCT_glBlendFuncSeparatei
typedef void (APIENTRYP PFNGLUXBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glMinSampleShading
extern PFNGLUXMINSAMPLESHADINGPROC glMinSampleShading;
#endif
#ifndef __GLUX__GLFCT_glBlendEquationi
extern PFNGLUXBLENDEQUATIONIPROC glBlendEquationi;
#endif
#ifndef __GLUX__GLFCT_glBlendEquationSeparatei
extern PFNGLUXBLENDEQUATIONSEPARATEIPROC glBlendEquationSeparatei;
#endif
#ifndef __GLUX__GLFCT_glBlendFunci
extern PFNGLUXBLENDFUNCIPROC glBlendFunci;
#endif
#ifndef __GLUX__GLFCT_glBlendFuncSeparatei
extern PFNGLUXBLENDFUNCSEPARATEIPROC glBlendFuncSeparatei;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
