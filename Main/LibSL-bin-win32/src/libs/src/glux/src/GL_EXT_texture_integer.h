
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:25 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_texture_integer__
#define __GLUX_GL_EXT_texture_integer__

GLUX_NEW_PLUGIN(GL_EXT_texture_integer);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_RGBA32UI_EXT
#  define GL_RGBA32UI_EXT 0x8D70
#endif
#ifndef GL_RGB32UI_EXT
#  define GL_RGB32UI_EXT 0x8D71
#endif
#ifndef GL_ALPHA32UI_EXT
#  define GL_ALPHA32UI_EXT 0x8D72
#endif
#ifndef GL_INTENSITY32UI_EXT
#  define GL_INTENSITY32UI_EXT 0x8D73
#endif
#ifndef GL_LUMINANCE32UI_EXT
#  define GL_LUMINANCE32UI_EXT 0x8D74
#endif
#ifndef GL_LUMINANCE_ALPHA32UI_EXT
#  define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
#endif
#ifndef GL_RGBA16UI_EXT
#  define GL_RGBA16UI_EXT 0x8D76
#endif
#ifndef GL_RGB16UI_EXT
#  define GL_RGB16UI_EXT 0x8D77
#endif
#ifndef GL_ALPHA16UI_EXT
#  define GL_ALPHA16UI_EXT 0x8D78
#endif
#ifndef GL_INTENSITY16UI_EXT
#  define GL_INTENSITY16UI_EXT 0x8D79
#endif
#ifndef GL_LUMINANCE16UI_EXT
#  define GL_LUMINANCE16UI_EXT 0x8D7A
#endif
#ifndef GL_LUMINANCE_ALPHA16UI_EXT
#  define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
#endif
#ifndef GL_RGBA8UI_EXT
#  define GL_RGBA8UI_EXT 0x8D7C
#endif
#ifndef GL_RGB8UI_EXT
#  define GL_RGB8UI_EXT 0x8D7D
#endif
#ifndef GL_ALPHA8UI_EXT
#  define GL_ALPHA8UI_EXT 0x8D7E
#endif
#ifndef GL_INTENSITY8UI_EXT
#  define GL_INTENSITY8UI_EXT 0x8D7F
#endif
#ifndef GL_LUMINANCE8UI_EXT
#  define GL_LUMINANCE8UI_EXT 0x8D80
#endif
#ifndef GL_LUMINANCE_ALPHA8UI_EXT
#  define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
#endif
#ifndef GL_RGBA32I_EXT
#  define GL_RGBA32I_EXT 0x8D82
#endif
#ifndef GL_RGB32I_EXT
#  define GL_RGB32I_EXT 0x8D83
#endif
#ifndef GL_ALPHA32I_EXT
#  define GL_ALPHA32I_EXT 0x8D84
#endif
#ifndef GL_INTENSITY32I_EXT
#  define GL_INTENSITY32I_EXT 0x8D85
#endif
#ifndef GL_LUMINANCE32I_EXT
#  define GL_LUMINANCE32I_EXT 0x8D86
#endif
#ifndef GL_LUMINANCE_ALPHA32I_EXT
#  define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
#endif
#ifndef GL_RGBA16I_EXT
#  define GL_RGBA16I_EXT 0x8D88
#endif
#ifndef GL_RGB16I_EXT
#  define GL_RGB16I_EXT 0x8D89
#endif
#ifndef GL_ALPHA16I_EXT
#  define GL_ALPHA16I_EXT 0x8D8A
#endif
#ifndef GL_INTENSITY16I_EXT
#  define GL_INTENSITY16I_EXT 0x8D8B
#endif
#ifndef GL_LUMINANCE16I_EXT
#  define GL_LUMINANCE16I_EXT 0x8D8C
#endif
#ifndef GL_LUMINANCE_ALPHA16I_EXT
#  define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
#endif
#ifndef GL_RGBA8I_EXT
#  define GL_RGBA8I_EXT 0x8D8E
#endif
#ifndef GL_RGB8I_EXT
#  define GL_RGB8I_EXT 0x8D8F
#endif
#ifndef GL_ALPHA8I_EXT
#  define GL_ALPHA8I_EXT 0x8D90
#endif
#ifndef GL_INTENSITY8I_EXT
#  define GL_INTENSITY8I_EXT 0x8D91
#endif
#ifndef GL_LUMINANCE8I_EXT
#  define GL_LUMINANCE8I_EXT 0x8D92
#endif
#ifndef GL_LUMINANCE_ALPHA8I_EXT
#  define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
#endif
#ifndef GL_RED_INTEGER_EXT
#  define GL_RED_INTEGER_EXT 0x8D94
#endif
#ifndef GL_GREEN_INTEGER_EXT
#  define GL_GREEN_INTEGER_EXT 0x8D95
#endif
#ifndef GL_BLUE_INTEGER_EXT
#  define GL_BLUE_INTEGER_EXT 0x8D96
#endif
#ifndef GL_ALPHA_INTEGER_EXT
#  define GL_ALPHA_INTEGER_EXT 0x8D97
#endif
#ifndef GL_RGB_INTEGER_EXT
#  define GL_RGB_INTEGER_EXT 0x8D98
#endif
#ifndef GL_RGBA_INTEGER_EXT
#  define GL_RGBA_INTEGER_EXT 0x8D99
#endif
#ifndef GL_BGR_INTEGER_EXT
#  define GL_BGR_INTEGER_EXT 0x8D9A
#endif
#ifndef GL_BGRA_INTEGER_EXT
#  define GL_BGRA_INTEGER_EXT 0x8D9B
#endif
#ifndef GL_LUMINANCE_INTEGER_EXT
#  define GL_LUMINANCE_INTEGER_EXT 0x8D9C
#endif
#ifndef GL_LUMINANCE_ALPHA_INTEGER_EXT
#  define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
#endif
#ifndef GL_RGBA_INTEGER_MODE_EXT
#  define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
extern PFNGLUXTEXPARAMETERIIVEXTPROC glTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
extern PFNGLUXTEXPARAMETERIUIVEXTPROC glTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
extern PFNGLUXGETTEXPARAMETERIIVEXTPROC glGetTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
extern PFNGLUXGETTEXPARAMETERIUIVEXTPROC glGetTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
extern PFNGLUXCLEARCOLORIIEXTPROC glClearColorIiEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
extern PFNGLUXCLEARCOLORIUIEXTPROC glClearColorIuiEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:41 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_texture_integer__
#define __GLUX_GL_EXT_texture_integer__

GLUX_NEW_PLUGIN(GL_EXT_texture_integer);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_RGBA32UI_EXT
#  define GL_RGBA32UI_EXT 0x8D70
#endif
#ifndef GL_RGB32UI_EXT
#  define GL_RGB32UI_EXT 0x8D71
#endif
#ifndef GL_ALPHA32UI_EXT
#  define GL_ALPHA32UI_EXT 0x8D72
#endif
#ifndef GL_INTENSITY32UI_EXT
#  define GL_INTENSITY32UI_EXT 0x8D73
#endif
#ifndef GL_LUMINANCE32UI_EXT
#  define GL_LUMINANCE32UI_EXT 0x8D74
#endif
#ifndef GL_LUMINANCE_ALPHA32UI_EXT
#  define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
#endif
#ifndef GL_RGBA16UI_EXT
#  define GL_RGBA16UI_EXT 0x8D76
#endif
#ifndef GL_RGB16UI_EXT
#  define GL_RGB16UI_EXT 0x8D77
#endif
#ifndef GL_ALPHA16UI_EXT
#  define GL_ALPHA16UI_EXT 0x8D78
#endif
#ifndef GL_INTENSITY16UI_EXT
#  define GL_INTENSITY16UI_EXT 0x8D79
#endif
#ifndef GL_LUMINANCE16UI_EXT
#  define GL_LUMINANCE16UI_EXT 0x8D7A
#endif
#ifndef GL_LUMINANCE_ALPHA16UI_EXT
#  define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
#endif
#ifndef GL_RGBA8UI_EXT
#  define GL_RGBA8UI_EXT 0x8D7C
#endif
#ifndef GL_RGB8UI_EXT
#  define GL_RGB8UI_EXT 0x8D7D
#endif
#ifndef GL_ALPHA8UI_EXT
#  define GL_ALPHA8UI_EXT 0x8D7E
#endif
#ifndef GL_INTENSITY8UI_EXT
#  define GL_INTENSITY8UI_EXT 0x8D7F
#endif
#ifndef GL_LUMINANCE8UI_EXT
#  define GL_LUMINANCE8UI_EXT 0x8D80
#endif
#ifndef GL_LUMINANCE_ALPHA8UI_EXT
#  define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
#endif
#ifndef GL_RGBA32I_EXT
#  define GL_RGBA32I_EXT 0x8D82
#endif
#ifndef GL_RGB32I_EXT
#  define GL_RGB32I_EXT 0x8D83
#endif
#ifndef GL_ALPHA32I_EXT
#  define GL_ALPHA32I_EXT 0x8D84
#endif
#ifndef GL_INTENSITY32I_EXT
#  define GL_INTENSITY32I_EXT 0x8D85
#endif
#ifndef GL_LUMINANCE32I_EXT
#  define GL_LUMINANCE32I_EXT 0x8D86
#endif
#ifndef GL_LUMINANCE_ALPHA32I_EXT
#  define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
#endif
#ifndef GL_RGBA16I_EXT
#  define GL_RGBA16I_EXT 0x8D88
#endif
#ifndef GL_RGB16I_EXT
#  define GL_RGB16I_EXT 0x8D89
#endif
#ifndef GL_ALPHA16I_EXT
#  define GL_ALPHA16I_EXT 0x8D8A
#endif
#ifndef GL_INTENSITY16I_EXT
#  define GL_INTENSITY16I_EXT 0x8D8B
#endif
#ifndef GL_LUMINANCE16I_EXT
#  define GL_LUMINANCE16I_EXT 0x8D8C
#endif
#ifndef GL_LUMINANCE_ALPHA16I_EXT
#  define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
#endif
#ifndef GL_RGBA8I_EXT
#  define GL_RGBA8I_EXT 0x8D8E
#endif
#ifndef GL_RGB8I_EXT
#  define GL_RGB8I_EXT 0x8D8F
#endif
#ifndef GL_ALPHA8I_EXT
#  define GL_ALPHA8I_EXT 0x8D90
#endif
#ifndef GL_INTENSITY8I_EXT
#  define GL_INTENSITY8I_EXT 0x8D91
#endif
#ifndef GL_LUMINANCE8I_EXT
#  define GL_LUMINANCE8I_EXT 0x8D92
#endif
#ifndef GL_LUMINANCE_ALPHA8I_EXT
#  define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
#endif
#ifndef GL_RED_INTEGER_EXT
#  define GL_RED_INTEGER_EXT 0x8D94
#endif
#ifndef GL_GREEN_INTEGER_EXT
#  define GL_GREEN_INTEGER_EXT 0x8D95
#endif
#ifndef GL_BLUE_INTEGER_EXT
#  define GL_BLUE_INTEGER_EXT 0x8D96
#endif
#ifndef GL_ALPHA_INTEGER_EXT
#  define GL_ALPHA_INTEGER_EXT 0x8D97
#endif
#ifndef GL_RGB_INTEGER_EXT
#  define GL_RGB_INTEGER_EXT 0x8D98
#endif
#ifndef GL_RGBA_INTEGER_EXT
#  define GL_RGBA_INTEGER_EXT 0x8D99
#endif
#ifndef GL_BGR_INTEGER_EXT
#  define GL_BGR_INTEGER_EXT 0x8D9A
#endif
#ifndef GL_BGRA_INTEGER_EXT
#  define GL_BGRA_INTEGER_EXT 0x8D9B
#endif
#ifndef GL_LUMINANCE_INTEGER_EXT
#  define GL_LUMINANCE_INTEGER_EXT 0x8D9C
#endif
#ifndef GL_LUMINANCE_ALPHA_INTEGER_EXT
#  define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
#endif
#ifndef GL_RGBA_INTEGER_MODE_EXT
#  define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
extern PFNGLUXTEXPARAMETERIIVEXTPROC glTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
extern PFNGLUXTEXPARAMETERIUIVEXTPROC glTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
extern PFNGLUXGETTEXPARAMETERIIVEXTPROC glGetTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
extern PFNGLUXGETTEXPARAMETERIUIVEXTPROC glGetTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
extern PFNGLUXCLEARCOLORIIEXTPROC glClearColorIiEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
extern PFNGLUXCLEARCOLORIUIEXTPROC glClearColorIuiEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:53 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_texture_integer__
#define __GLUX_GL_EXT_texture_integer__

GLUX_NEW_PLUGIN(GL_EXT_texture_integer);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_RGBA32UI_EXT
#  define GL_RGBA32UI_EXT 0x8D70
#endif
#ifndef GL_RGB32UI_EXT
#  define GL_RGB32UI_EXT 0x8D71
#endif
#ifndef GL_ALPHA32UI_EXT
#  define GL_ALPHA32UI_EXT 0x8D72
#endif
#ifndef GL_INTENSITY32UI_EXT
#  define GL_INTENSITY32UI_EXT 0x8D73
#endif
#ifndef GL_LUMINANCE32UI_EXT
#  define GL_LUMINANCE32UI_EXT 0x8D74
#endif
#ifndef GL_LUMINANCE_ALPHA32UI_EXT
#  define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
#endif
#ifndef GL_RGBA16UI_EXT
#  define GL_RGBA16UI_EXT 0x8D76
#endif
#ifndef GL_RGB16UI_EXT
#  define GL_RGB16UI_EXT 0x8D77
#endif
#ifndef GL_ALPHA16UI_EXT
#  define GL_ALPHA16UI_EXT 0x8D78
#endif
#ifndef GL_INTENSITY16UI_EXT
#  define GL_INTENSITY16UI_EXT 0x8D79
#endif
#ifndef GL_LUMINANCE16UI_EXT
#  define GL_LUMINANCE16UI_EXT 0x8D7A
#endif
#ifndef GL_LUMINANCE_ALPHA16UI_EXT
#  define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
#endif
#ifndef GL_RGBA8UI_EXT
#  define GL_RGBA8UI_EXT 0x8D7C
#endif
#ifndef GL_RGB8UI_EXT
#  define GL_RGB8UI_EXT 0x8D7D
#endif
#ifndef GL_ALPHA8UI_EXT
#  define GL_ALPHA8UI_EXT 0x8D7E
#endif
#ifndef GL_INTENSITY8UI_EXT
#  define GL_INTENSITY8UI_EXT 0x8D7F
#endif
#ifndef GL_LUMINANCE8UI_EXT
#  define GL_LUMINANCE8UI_EXT 0x8D80
#endif
#ifndef GL_LUMINANCE_ALPHA8UI_EXT
#  define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
#endif
#ifndef GL_RGBA32I_EXT
#  define GL_RGBA32I_EXT 0x8D82
#endif
#ifndef GL_RGB32I_EXT
#  define GL_RGB32I_EXT 0x8D83
#endif
#ifndef GL_ALPHA32I_EXT
#  define GL_ALPHA32I_EXT 0x8D84
#endif
#ifndef GL_INTENSITY32I_EXT
#  define GL_INTENSITY32I_EXT 0x8D85
#endif
#ifndef GL_LUMINANCE32I_EXT
#  define GL_LUMINANCE32I_EXT 0x8D86
#endif
#ifndef GL_LUMINANCE_ALPHA32I_EXT
#  define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
#endif
#ifndef GL_RGBA16I_EXT
#  define GL_RGBA16I_EXT 0x8D88
#endif
#ifndef GL_RGB16I_EXT
#  define GL_RGB16I_EXT 0x8D89
#endif
#ifndef GL_ALPHA16I_EXT
#  define GL_ALPHA16I_EXT 0x8D8A
#endif
#ifndef GL_INTENSITY16I_EXT
#  define GL_INTENSITY16I_EXT 0x8D8B
#endif
#ifndef GL_LUMINANCE16I_EXT
#  define GL_LUMINANCE16I_EXT 0x8D8C
#endif
#ifndef GL_LUMINANCE_ALPHA16I_EXT
#  define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
#endif
#ifndef GL_RGBA8I_EXT
#  define GL_RGBA8I_EXT 0x8D8E
#endif
#ifndef GL_RGB8I_EXT
#  define GL_RGB8I_EXT 0x8D8F
#endif
#ifndef GL_ALPHA8I_EXT
#  define GL_ALPHA8I_EXT 0x8D90
#endif
#ifndef GL_INTENSITY8I_EXT
#  define GL_INTENSITY8I_EXT 0x8D91
#endif
#ifndef GL_LUMINANCE8I_EXT
#  define GL_LUMINANCE8I_EXT 0x8D92
#endif
#ifndef GL_LUMINANCE_ALPHA8I_EXT
#  define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
#endif
#ifndef GL_RED_INTEGER_EXT
#  define GL_RED_INTEGER_EXT 0x8D94
#endif
#ifndef GL_GREEN_INTEGER_EXT
#  define GL_GREEN_INTEGER_EXT 0x8D95
#endif
#ifndef GL_BLUE_INTEGER_EXT
#  define GL_BLUE_INTEGER_EXT 0x8D96
#endif
#ifndef GL_ALPHA_INTEGER_EXT
#  define GL_ALPHA_INTEGER_EXT 0x8D97
#endif
#ifndef GL_RGB_INTEGER_EXT
#  define GL_RGB_INTEGER_EXT 0x8D98
#endif
#ifndef GL_RGBA_INTEGER_EXT
#  define GL_RGBA_INTEGER_EXT 0x8D99
#endif
#ifndef GL_BGR_INTEGER_EXT
#  define GL_BGR_INTEGER_EXT 0x8D9A
#endif
#ifndef GL_BGRA_INTEGER_EXT
#  define GL_BGRA_INTEGER_EXT 0x8D9B
#endif
#ifndef GL_LUMINANCE_INTEGER_EXT
#  define GL_LUMINANCE_INTEGER_EXT 0x8D9C
#endif
#ifndef GL_LUMINANCE_ALPHA_INTEGER_EXT
#  define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
#endif
#ifndef GL_RGBA_INTEGER_MODE_EXT
#  define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
extern PFNGLUXTEXPARAMETERIIVEXTPROC glTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
extern PFNGLUXTEXPARAMETERIUIVEXTPROC glTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
extern PFNGLUXGETTEXPARAMETERIIVEXTPROC glGetTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
extern PFNGLUXGETTEXPARAMETERIUIVEXTPROC glGetTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
extern PFNGLUXCLEARCOLORIIEXTPROC glClearColorIiEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
extern PFNGLUXCLEARCOLORIUIEXTPROC glClearColorIuiEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:13 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_texture_integer__
#define __GLUX_GL_EXT_texture_integer__

GLUX_NEW_PLUGIN(GL_EXT_texture_integer);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_RGBA32UI_EXT
#  define GL_RGBA32UI_EXT 0x8D70
#endif
#ifndef GL_RGB32UI_EXT
#  define GL_RGB32UI_EXT 0x8D71
#endif
#ifndef GL_ALPHA32UI_EXT
#  define GL_ALPHA32UI_EXT 0x8D72
#endif
#ifndef GL_INTENSITY32UI_EXT
#  define GL_INTENSITY32UI_EXT 0x8D73
#endif
#ifndef GL_LUMINANCE32UI_EXT
#  define GL_LUMINANCE32UI_EXT 0x8D74
#endif
#ifndef GL_LUMINANCE_ALPHA32UI_EXT
#  define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
#endif
#ifndef GL_RGBA16UI_EXT
#  define GL_RGBA16UI_EXT 0x8D76
#endif
#ifndef GL_RGB16UI_EXT
#  define GL_RGB16UI_EXT 0x8D77
#endif
#ifndef GL_ALPHA16UI_EXT
#  define GL_ALPHA16UI_EXT 0x8D78
#endif
#ifndef GL_INTENSITY16UI_EXT
#  define GL_INTENSITY16UI_EXT 0x8D79
#endif
#ifndef GL_LUMINANCE16UI_EXT
#  define GL_LUMINANCE16UI_EXT 0x8D7A
#endif
#ifndef GL_LUMINANCE_ALPHA16UI_EXT
#  define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
#endif
#ifndef GL_RGBA8UI_EXT
#  define GL_RGBA8UI_EXT 0x8D7C
#endif
#ifndef GL_RGB8UI_EXT
#  define GL_RGB8UI_EXT 0x8D7D
#endif
#ifndef GL_ALPHA8UI_EXT
#  define GL_ALPHA8UI_EXT 0x8D7E
#endif
#ifndef GL_INTENSITY8UI_EXT
#  define GL_INTENSITY8UI_EXT 0x8D7F
#endif
#ifndef GL_LUMINANCE8UI_EXT
#  define GL_LUMINANCE8UI_EXT 0x8D80
#endif
#ifndef GL_LUMINANCE_ALPHA8UI_EXT
#  define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
#endif
#ifndef GL_RGBA32I_EXT
#  define GL_RGBA32I_EXT 0x8D82
#endif
#ifndef GL_RGB32I_EXT
#  define GL_RGB32I_EXT 0x8D83
#endif
#ifndef GL_ALPHA32I_EXT
#  define GL_ALPHA32I_EXT 0x8D84
#endif
#ifndef GL_INTENSITY32I_EXT
#  define GL_INTENSITY32I_EXT 0x8D85
#endif
#ifndef GL_LUMINANCE32I_EXT
#  define GL_LUMINANCE32I_EXT 0x8D86
#endif
#ifndef GL_LUMINANCE_ALPHA32I_EXT
#  define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
#endif
#ifndef GL_RGBA16I_EXT
#  define GL_RGBA16I_EXT 0x8D88
#endif
#ifndef GL_RGB16I_EXT
#  define GL_RGB16I_EXT 0x8D89
#endif
#ifndef GL_ALPHA16I_EXT
#  define GL_ALPHA16I_EXT 0x8D8A
#endif
#ifndef GL_INTENSITY16I_EXT
#  define GL_INTENSITY16I_EXT 0x8D8B
#endif
#ifndef GL_LUMINANCE16I_EXT
#  define GL_LUMINANCE16I_EXT 0x8D8C
#endif
#ifndef GL_LUMINANCE_ALPHA16I_EXT
#  define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
#endif
#ifndef GL_RGBA8I_EXT
#  define GL_RGBA8I_EXT 0x8D8E
#endif
#ifndef GL_RGB8I_EXT
#  define GL_RGB8I_EXT 0x8D8F
#endif
#ifndef GL_ALPHA8I_EXT
#  define GL_ALPHA8I_EXT 0x8D90
#endif
#ifndef GL_INTENSITY8I_EXT
#  define GL_INTENSITY8I_EXT 0x8D91
#endif
#ifndef GL_LUMINANCE8I_EXT
#  define GL_LUMINANCE8I_EXT 0x8D92
#endif
#ifndef GL_LUMINANCE_ALPHA8I_EXT
#  define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
#endif
#ifndef GL_RED_INTEGER_EXT
#  define GL_RED_INTEGER_EXT 0x8D94
#endif
#ifndef GL_GREEN_INTEGER_EXT
#  define GL_GREEN_INTEGER_EXT 0x8D95
#endif
#ifndef GL_BLUE_INTEGER_EXT
#  define GL_BLUE_INTEGER_EXT 0x8D96
#endif
#ifndef GL_ALPHA_INTEGER_EXT
#  define GL_ALPHA_INTEGER_EXT 0x8D97
#endif
#ifndef GL_RGB_INTEGER_EXT
#  define GL_RGB_INTEGER_EXT 0x8D98
#endif
#ifndef GL_RGBA_INTEGER_EXT
#  define GL_RGBA_INTEGER_EXT 0x8D99
#endif
#ifndef GL_BGR_INTEGER_EXT
#  define GL_BGR_INTEGER_EXT 0x8D9A
#endif
#ifndef GL_BGRA_INTEGER_EXT
#  define GL_BGRA_INTEGER_EXT 0x8D9B
#endif
#ifndef GL_LUMINANCE_INTEGER_EXT
#  define GL_LUMINANCE_INTEGER_EXT 0x8D9C
#endif
#ifndef GL_LUMINANCE_ALPHA_INTEGER_EXT
#  define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
#endif
#ifndef GL_RGBA_INTEGER_MODE_EXT
#  define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
extern PFNGLUXTEXPARAMETERIIVEXTPROC glTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
extern PFNGLUXTEXPARAMETERIUIVEXTPROC glTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
extern PFNGLUXGETTEXPARAMETERIIVEXTPROC glGetTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
extern PFNGLUXGETTEXPARAMETERIUIVEXTPROC glGetTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
extern PFNGLUXCLEARCOLORIIEXTPROC glClearColorIiEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
extern PFNGLUXCLEARCOLORIUIEXTPROC glClearColorIuiEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:28 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_texture_integer__
#define __GLUX_GL_EXT_texture_integer__

GLUX_NEW_PLUGIN(GL_EXT_texture_integer);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_RGBA32UI_EXT
#  define GL_RGBA32UI_EXT 0x8D70
#endif
#ifndef GL_RGB32UI_EXT
#  define GL_RGB32UI_EXT 0x8D71
#endif
#ifndef GL_ALPHA32UI_EXT
#  define GL_ALPHA32UI_EXT 0x8D72
#endif
#ifndef GL_INTENSITY32UI_EXT
#  define GL_INTENSITY32UI_EXT 0x8D73
#endif
#ifndef GL_LUMINANCE32UI_EXT
#  define GL_LUMINANCE32UI_EXT 0x8D74
#endif
#ifndef GL_LUMINANCE_ALPHA32UI_EXT
#  define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
#endif
#ifndef GL_RGBA16UI_EXT
#  define GL_RGBA16UI_EXT 0x8D76
#endif
#ifndef GL_RGB16UI_EXT
#  define GL_RGB16UI_EXT 0x8D77
#endif
#ifndef GL_ALPHA16UI_EXT
#  define GL_ALPHA16UI_EXT 0x8D78
#endif
#ifndef GL_INTENSITY16UI_EXT
#  define GL_INTENSITY16UI_EXT 0x8D79
#endif
#ifndef GL_LUMINANCE16UI_EXT
#  define GL_LUMINANCE16UI_EXT 0x8D7A
#endif
#ifndef GL_LUMINANCE_ALPHA16UI_EXT
#  define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
#endif
#ifndef GL_RGBA8UI_EXT
#  define GL_RGBA8UI_EXT 0x8D7C
#endif
#ifndef GL_RGB8UI_EXT
#  define GL_RGB8UI_EXT 0x8D7D
#endif
#ifndef GL_ALPHA8UI_EXT
#  define GL_ALPHA8UI_EXT 0x8D7E
#endif
#ifndef GL_INTENSITY8UI_EXT
#  define GL_INTENSITY8UI_EXT 0x8D7F
#endif
#ifndef GL_LUMINANCE8UI_EXT
#  define GL_LUMINANCE8UI_EXT 0x8D80
#endif
#ifndef GL_LUMINANCE_ALPHA8UI_EXT
#  define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
#endif
#ifndef GL_RGBA32I_EXT
#  define GL_RGBA32I_EXT 0x8D82
#endif
#ifndef GL_RGB32I_EXT
#  define GL_RGB32I_EXT 0x8D83
#endif
#ifndef GL_ALPHA32I_EXT
#  define GL_ALPHA32I_EXT 0x8D84
#endif
#ifndef GL_INTENSITY32I_EXT
#  define GL_INTENSITY32I_EXT 0x8D85
#endif
#ifndef GL_LUMINANCE32I_EXT
#  define GL_LUMINANCE32I_EXT 0x8D86
#endif
#ifndef GL_LUMINANCE_ALPHA32I_EXT
#  define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
#endif
#ifndef GL_RGBA16I_EXT
#  define GL_RGBA16I_EXT 0x8D88
#endif
#ifndef GL_RGB16I_EXT
#  define GL_RGB16I_EXT 0x8D89
#endif
#ifndef GL_ALPHA16I_EXT
#  define GL_ALPHA16I_EXT 0x8D8A
#endif
#ifndef GL_INTENSITY16I_EXT
#  define GL_INTENSITY16I_EXT 0x8D8B
#endif
#ifndef GL_LUMINANCE16I_EXT
#  define GL_LUMINANCE16I_EXT 0x8D8C
#endif
#ifndef GL_LUMINANCE_ALPHA16I_EXT
#  define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
#endif
#ifndef GL_RGBA8I_EXT
#  define GL_RGBA8I_EXT 0x8D8E
#endif
#ifndef GL_RGB8I_EXT
#  define GL_RGB8I_EXT 0x8D8F
#endif
#ifndef GL_ALPHA8I_EXT
#  define GL_ALPHA8I_EXT 0x8D90
#endif
#ifndef GL_INTENSITY8I_EXT
#  define GL_INTENSITY8I_EXT 0x8D91
#endif
#ifndef GL_LUMINANCE8I_EXT
#  define GL_LUMINANCE8I_EXT 0x8D92
#endif
#ifndef GL_LUMINANCE_ALPHA8I_EXT
#  define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
#endif
#ifndef GL_RED_INTEGER_EXT
#  define GL_RED_INTEGER_EXT 0x8D94
#endif
#ifndef GL_GREEN_INTEGER_EXT
#  define GL_GREEN_INTEGER_EXT 0x8D95
#endif
#ifndef GL_BLUE_INTEGER_EXT
#  define GL_BLUE_INTEGER_EXT 0x8D96
#endif
#ifndef GL_ALPHA_INTEGER_EXT
#  define GL_ALPHA_INTEGER_EXT 0x8D97
#endif
#ifndef GL_RGB_INTEGER_EXT
#  define GL_RGB_INTEGER_EXT 0x8D98
#endif
#ifndef GL_RGBA_INTEGER_EXT
#  define GL_RGBA_INTEGER_EXT 0x8D99
#endif
#ifndef GL_BGR_INTEGER_EXT
#  define GL_BGR_INTEGER_EXT 0x8D9A
#endif
#ifndef GL_BGRA_INTEGER_EXT
#  define GL_BGRA_INTEGER_EXT 0x8D9B
#endif
#ifndef GL_LUMINANCE_INTEGER_EXT
#  define GL_LUMINANCE_INTEGER_EXT 0x8D9C
#endif
#ifndef GL_LUMINANCE_ALPHA_INTEGER_EXT
#  define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
#endif
#ifndef GL_RGBA_INTEGER_MODE_EXT
#  define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
extern PFNGLUXTEXPARAMETERIIVEXTPROC glTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
extern PFNGLUXTEXPARAMETERIUIVEXTPROC glTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
extern PFNGLUXGETTEXPARAMETERIIVEXTPROC glGetTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
extern PFNGLUXGETTEXPARAMETERIUIVEXTPROC glGetTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
extern PFNGLUXCLEARCOLORIIEXTPROC glClearColorIiEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
extern PFNGLUXCLEARCOLORIUIEXTPROC glClearColorIuiEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:32 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_texture_integer__
#define __GLUX_GL_EXT_texture_integer__

GLUX_NEW_PLUGIN(GL_EXT_texture_integer);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_RGBA32UI_EXT
#  define GL_RGBA32UI_EXT 0x8D70
#endif
#ifndef GL_RGB32UI_EXT
#  define GL_RGB32UI_EXT 0x8D71
#endif
#ifndef GL_ALPHA32UI_EXT
#  define GL_ALPHA32UI_EXT 0x8D72
#endif
#ifndef GL_INTENSITY32UI_EXT
#  define GL_INTENSITY32UI_EXT 0x8D73
#endif
#ifndef GL_LUMINANCE32UI_EXT
#  define GL_LUMINANCE32UI_EXT 0x8D74
#endif
#ifndef GL_LUMINANCE_ALPHA32UI_EXT
#  define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
#endif
#ifndef GL_RGBA16UI_EXT
#  define GL_RGBA16UI_EXT 0x8D76
#endif
#ifndef GL_RGB16UI_EXT
#  define GL_RGB16UI_EXT 0x8D77
#endif
#ifndef GL_ALPHA16UI_EXT
#  define GL_ALPHA16UI_EXT 0x8D78
#endif
#ifndef GL_INTENSITY16UI_EXT
#  define GL_INTENSITY16UI_EXT 0x8D79
#endif
#ifndef GL_LUMINANCE16UI_EXT
#  define GL_LUMINANCE16UI_EXT 0x8D7A
#endif
#ifndef GL_LUMINANCE_ALPHA16UI_EXT
#  define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
#endif
#ifndef GL_RGBA8UI_EXT
#  define GL_RGBA8UI_EXT 0x8D7C
#endif
#ifndef GL_RGB8UI_EXT
#  define GL_RGB8UI_EXT 0x8D7D
#endif
#ifndef GL_ALPHA8UI_EXT
#  define GL_ALPHA8UI_EXT 0x8D7E
#endif
#ifndef GL_INTENSITY8UI_EXT
#  define GL_INTENSITY8UI_EXT 0x8D7F
#endif
#ifndef GL_LUMINANCE8UI_EXT
#  define GL_LUMINANCE8UI_EXT 0x8D80
#endif
#ifndef GL_LUMINANCE_ALPHA8UI_EXT
#  define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
#endif
#ifndef GL_RGBA32I_EXT
#  define GL_RGBA32I_EXT 0x8D82
#endif
#ifndef GL_RGB32I_EXT
#  define GL_RGB32I_EXT 0x8D83
#endif
#ifndef GL_ALPHA32I_EXT
#  define GL_ALPHA32I_EXT 0x8D84
#endif
#ifndef GL_INTENSITY32I_EXT
#  define GL_INTENSITY32I_EXT 0x8D85
#endif
#ifndef GL_LUMINANCE32I_EXT
#  define GL_LUMINANCE32I_EXT 0x8D86
#endif
#ifndef GL_LUMINANCE_ALPHA32I_EXT
#  define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
#endif
#ifndef GL_RGBA16I_EXT
#  define GL_RGBA16I_EXT 0x8D88
#endif
#ifndef GL_RGB16I_EXT
#  define GL_RGB16I_EXT 0x8D89
#endif
#ifndef GL_ALPHA16I_EXT
#  define GL_ALPHA16I_EXT 0x8D8A
#endif
#ifndef GL_INTENSITY16I_EXT
#  define GL_INTENSITY16I_EXT 0x8D8B
#endif
#ifndef GL_LUMINANCE16I_EXT
#  define GL_LUMINANCE16I_EXT 0x8D8C
#endif
#ifndef GL_LUMINANCE_ALPHA16I_EXT
#  define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
#endif
#ifndef GL_RGBA8I_EXT
#  define GL_RGBA8I_EXT 0x8D8E
#endif
#ifndef GL_RGB8I_EXT
#  define GL_RGB8I_EXT 0x8D8F
#endif
#ifndef GL_ALPHA8I_EXT
#  define GL_ALPHA8I_EXT 0x8D90
#endif
#ifndef GL_INTENSITY8I_EXT
#  define GL_INTENSITY8I_EXT 0x8D91
#endif
#ifndef GL_LUMINANCE8I_EXT
#  define GL_LUMINANCE8I_EXT 0x8D92
#endif
#ifndef GL_LUMINANCE_ALPHA8I_EXT
#  define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
#endif
#ifndef GL_RED_INTEGER_EXT
#  define GL_RED_INTEGER_EXT 0x8D94
#endif
#ifndef GL_GREEN_INTEGER_EXT
#  define GL_GREEN_INTEGER_EXT 0x8D95
#endif
#ifndef GL_BLUE_INTEGER_EXT
#  define GL_BLUE_INTEGER_EXT 0x8D96
#endif
#ifndef GL_ALPHA_INTEGER_EXT
#  define GL_ALPHA_INTEGER_EXT 0x8D97
#endif
#ifndef GL_RGB_INTEGER_EXT
#  define GL_RGB_INTEGER_EXT 0x8D98
#endif
#ifndef GL_RGBA_INTEGER_EXT
#  define GL_RGBA_INTEGER_EXT 0x8D99
#endif
#ifndef GL_BGR_INTEGER_EXT
#  define GL_BGR_INTEGER_EXT 0x8D9A
#endif
#ifndef GL_BGRA_INTEGER_EXT
#  define GL_BGRA_INTEGER_EXT 0x8D9B
#endif
#ifndef GL_LUMINANCE_INTEGER_EXT
#  define GL_LUMINANCE_INTEGER_EXT 0x8D9C
#endif
#ifndef GL_LUMINANCE_ALPHA_INTEGER_EXT
#  define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
#endif
#ifndef GL_RGBA_INTEGER_MODE_EXT
#  define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
extern PFNGLUXTEXPARAMETERIIVEXTPROC glTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
extern PFNGLUXTEXPARAMETERIUIVEXTPROC glTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
extern PFNGLUXGETTEXPARAMETERIIVEXTPROC glGetTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
extern PFNGLUXGETTEXPARAMETERIUIVEXTPROC glGetTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
extern PFNGLUXCLEARCOLORIIEXTPROC glClearColorIiEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
extern PFNGLUXCLEARCOLORIUIEXTPROC glClearColorIuiEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:53 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_texture_integer__
#define __GLUX_GL_EXT_texture_integer__

GLUX_NEW_PLUGIN(GL_EXT_texture_integer);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_RGBA32UI_EXT
#  define GL_RGBA32UI_EXT 0x8D70
#endif
#ifndef GL_RGB32UI_EXT
#  define GL_RGB32UI_EXT 0x8D71
#endif
#ifndef GL_ALPHA32UI_EXT
#  define GL_ALPHA32UI_EXT 0x8D72
#endif
#ifndef GL_INTENSITY32UI_EXT
#  define GL_INTENSITY32UI_EXT 0x8D73
#endif
#ifndef GL_LUMINANCE32UI_EXT
#  define GL_LUMINANCE32UI_EXT 0x8D74
#endif
#ifndef GL_LUMINANCE_ALPHA32UI_EXT
#  define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
#endif
#ifndef GL_RGBA16UI_EXT
#  define GL_RGBA16UI_EXT 0x8D76
#endif
#ifndef GL_RGB16UI_EXT
#  define GL_RGB16UI_EXT 0x8D77
#endif
#ifndef GL_ALPHA16UI_EXT
#  define GL_ALPHA16UI_EXT 0x8D78
#endif
#ifndef GL_INTENSITY16UI_EXT
#  define GL_INTENSITY16UI_EXT 0x8D79
#endif
#ifndef GL_LUMINANCE16UI_EXT
#  define GL_LUMINANCE16UI_EXT 0x8D7A
#endif
#ifndef GL_LUMINANCE_ALPHA16UI_EXT
#  define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
#endif
#ifndef GL_RGBA8UI_EXT
#  define GL_RGBA8UI_EXT 0x8D7C
#endif
#ifndef GL_RGB8UI_EXT
#  define GL_RGB8UI_EXT 0x8D7D
#endif
#ifndef GL_ALPHA8UI_EXT
#  define GL_ALPHA8UI_EXT 0x8D7E
#endif
#ifndef GL_INTENSITY8UI_EXT
#  define GL_INTENSITY8UI_EXT 0x8D7F
#endif
#ifndef GL_LUMINANCE8UI_EXT
#  define GL_LUMINANCE8UI_EXT 0x8D80
#endif
#ifndef GL_LUMINANCE_ALPHA8UI_EXT
#  define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
#endif
#ifndef GL_RGBA32I_EXT
#  define GL_RGBA32I_EXT 0x8D82
#endif
#ifndef GL_RGB32I_EXT
#  define GL_RGB32I_EXT 0x8D83
#endif
#ifndef GL_ALPHA32I_EXT
#  define GL_ALPHA32I_EXT 0x8D84
#endif
#ifndef GL_INTENSITY32I_EXT
#  define GL_INTENSITY32I_EXT 0x8D85
#endif
#ifndef GL_LUMINANCE32I_EXT
#  define GL_LUMINANCE32I_EXT 0x8D86
#endif
#ifndef GL_LUMINANCE_ALPHA32I_EXT
#  define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
#endif
#ifndef GL_RGBA16I_EXT
#  define GL_RGBA16I_EXT 0x8D88
#endif
#ifndef GL_RGB16I_EXT
#  define GL_RGB16I_EXT 0x8D89
#endif
#ifndef GL_ALPHA16I_EXT
#  define GL_ALPHA16I_EXT 0x8D8A
#endif
#ifndef GL_INTENSITY16I_EXT
#  define GL_INTENSITY16I_EXT 0x8D8B
#endif
#ifndef GL_LUMINANCE16I_EXT
#  define GL_LUMINANCE16I_EXT 0x8D8C
#endif
#ifndef GL_LUMINANCE_ALPHA16I_EXT
#  define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
#endif
#ifndef GL_RGBA8I_EXT
#  define GL_RGBA8I_EXT 0x8D8E
#endif
#ifndef GL_RGB8I_EXT
#  define GL_RGB8I_EXT 0x8D8F
#endif
#ifndef GL_ALPHA8I_EXT
#  define GL_ALPHA8I_EXT 0x8D90
#endif
#ifndef GL_INTENSITY8I_EXT
#  define GL_INTENSITY8I_EXT 0x8D91
#endif
#ifndef GL_LUMINANCE8I_EXT
#  define GL_LUMINANCE8I_EXT 0x8D92
#endif
#ifndef GL_LUMINANCE_ALPHA8I_EXT
#  define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
#endif
#ifndef GL_RED_INTEGER_EXT
#  define GL_RED_INTEGER_EXT 0x8D94
#endif
#ifndef GL_GREEN_INTEGER_EXT
#  define GL_GREEN_INTEGER_EXT 0x8D95
#endif
#ifndef GL_BLUE_INTEGER_EXT
#  define GL_BLUE_INTEGER_EXT 0x8D96
#endif
#ifndef GL_ALPHA_INTEGER_EXT
#  define GL_ALPHA_INTEGER_EXT 0x8D97
#endif
#ifndef GL_RGB_INTEGER_EXT
#  define GL_RGB_INTEGER_EXT 0x8D98
#endif
#ifndef GL_RGBA_INTEGER_EXT
#  define GL_RGBA_INTEGER_EXT 0x8D99
#endif
#ifndef GL_BGR_INTEGER_EXT
#  define GL_BGR_INTEGER_EXT 0x8D9A
#endif
#ifndef GL_BGRA_INTEGER_EXT
#  define GL_BGRA_INTEGER_EXT 0x8D9B
#endif
#ifndef GL_LUMINANCE_INTEGER_EXT
#  define GL_LUMINANCE_INTEGER_EXT 0x8D9C
#endif
#ifndef GL_LUMINANCE_ALPHA_INTEGER_EXT
#  define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
#endif
#ifndef GL_RGBA_INTEGER_MODE_EXT
#  define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
extern PFNGLUXTEXPARAMETERIIVEXTPROC glTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
extern PFNGLUXTEXPARAMETERIUIVEXTPROC glTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
extern PFNGLUXGETTEXPARAMETERIIVEXTPROC glGetTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
extern PFNGLUXGETTEXPARAMETERIUIVEXTPROC glGetTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
extern PFNGLUXCLEARCOLORIIEXTPROC glClearColorIiEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
extern PFNGLUXCLEARCOLORIUIEXTPROC glClearColorIuiEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:28:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_texture_integer__
#define __GLUX_GL_EXT_texture_integer__

GLUX_NEW_PLUGIN(GL_EXT_texture_integer);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_RGBA32UI_EXT
#  define GL_RGBA32UI_EXT 0x8D70
#endif
#ifndef GL_RGB32UI_EXT
#  define GL_RGB32UI_EXT 0x8D71
#endif
#ifndef GL_ALPHA32UI_EXT
#  define GL_ALPHA32UI_EXT 0x8D72
#endif
#ifndef GL_INTENSITY32UI_EXT
#  define GL_INTENSITY32UI_EXT 0x8D73
#endif
#ifndef GL_LUMINANCE32UI_EXT
#  define GL_LUMINANCE32UI_EXT 0x8D74
#endif
#ifndef GL_LUMINANCE_ALPHA32UI_EXT
#  define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
#endif
#ifndef GL_RGBA16UI_EXT
#  define GL_RGBA16UI_EXT 0x8D76
#endif
#ifndef GL_RGB16UI_EXT
#  define GL_RGB16UI_EXT 0x8D77
#endif
#ifndef GL_ALPHA16UI_EXT
#  define GL_ALPHA16UI_EXT 0x8D78
#endif
#ifndef GL_INTENSITY16UI_EXT
#  define GL_INTENSITY16UI_EXT 0x8D79
#endif
#ifndef GL_LUMINANCE16UI_EXT
#  define GL_LUMINANCE16UI_EXT 0x8D7A
#endif
#ifndef GL_LUMINANCE_ALPHA16UI_EXT
#  define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
#endif
#ifndef GL_RGBA8UI_EXT
#  define GL_RGBA8UI_EXT 0x8D7C
#endif
#ifndef GL_RGB8UI_EXT
#  define GL_RGB8UI_EXT 0x8D7D
#endif
#ifndef GL_ALPHA8UI_EXT
#  define GL_ALPHA8UI_EXT 0x8D7E
#endif
#ifndef GL_INTENSITY8UI_EXT
#  define GL_INTENSITY8UI_EXT 0x8D7F
#endif
#ifndef GL_LUMINANCE8UI_EXT
#  define GL_LUMINANCE8UI_EXT 0x8D80
#endif
#ifndef GL_LUMINANCE_ALPHA8UI_EXT
#  define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
#endif
#ifndef GL_RGBA32I_EXT
#  define GL_RGBA32I_EXT 0x8D82
#endif
#ifndef GL_RGB32I_EXT
#  define GL_RGB32I_EXT 0x8D83
#endif
#ifndef GL_ALPHA32I_EXT
#  define GL_ALPHA32I_EXT 0x8D84
#endif
#ifndef GL_INTENSITY32I_EXT
#  define GL_INTENSITY32I_EXT 0x8D85
#endif
#ifndef GL_LUMINANCE32I_EXT
#  define GL_LUMINANCE32I_EXT 0x8D86
#endif
#ifndef GL_LUMINANCE_ALPHA32I_EXT
#  define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
#endif
#ifndef GL_RGBA16I_EXT
#  define GL_RGBA16I_EXT 0x8D88
#endif
#ifndef GL_RGB16I_EXT
#  define GL_RGB16I_EXT 0x8D89
#endif
#ifndef GL_ALPHA16I_EXT
#  define GL_ALPHA16I_EXT 0x8D8A
#endif
#ifndef GL_INTENSITY16I_EXT
#  define GL_INTENSITY16I_EXT 0x8D8B
#endif
#ifndef GL_LUMINANCE16I_EXT
#  define GL_LUMINANCE16I_EXT 0x8D8C
#endif
#ifndef GL_LUMINANCE_ALPHA16I_EXT
#  define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
#endif
#ifndef GL_RGBA8I_EXT
#  define GL_RGBA8I_EXT 0x8D8E
#endif
#ifndef GL_RGB8I_EXT
#  define GL_RGB8I_EXT 0x8D8F
#endif
#ifndef GL_ALPHA8I_EXT
#  define GL_ALPHA8I_EXT 0x8D90
#endif
#ifndef GL_INTENSITY8I_EXT
#  define GL_INTENSITY8I_EXT 0x8D91
#endif
#ifndef GL_LUMINANCE8I_EXT
#  define GL_LUMINANCE8I_EXT 0x8D92
#endif
#ifndef GL_LUMINANCE_ALPHA8I_EXT
#  define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
#endif
#ifndef GL_RED_INTEGER_EXT
#  define GL_RED_INTEGER_EXT 0x8D94
#endif
#ifndef GL_GREEN_INTEGER_EXT
#  define GL_GREEN_INTEGER_EXT 0x8D95
#endif
#ifndef GL_BLUE_INTEGER_EXT
#  define GL_BLUE_INTEGER_EXT 0x8D96
#endif
#ifndef GL_ALPHA_INTEGER_EXT
#  define GL_ALPHA_INTEGER_EXT 0x8D97
#endif
#ifndef GL_RGB_INTEGER_EXT
#  define GL_RGB_INTEGER_EXT 0x8D98
#endif
#ifndef GL_RGBA_INTEGER_EXT
#  define GL_RGBA_INTEGER_EXT 0x8D99
#endif
#ifndef GL_BGR_INTEGER_EXT
#  define GL_BGR_INTEGER_EXT 0x8D9A
#endif
#ifndef GL_BGRA_INTEGER_EXT
#  define GL_BGRA_INTEGER_EXT 0x8D9B
#endif
#ifndef GL_LUMINANCE_INTEGER_EXT
#  define GL_LUMINANCE_INTEGER_EXT 0x8D9C
#endif
#ifndef GL_LUMINANCE_ALPHA_INTEGER_EXT
#  define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
#endif
#ifndef GL_RGBA_INTEGER_MODE_EXT
#  define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
extern PFNGLUXTEXPARAMETERIIVEXTPROC glTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
extern PFNGLUXTEXPARAMETERIUIVEXTPROC glTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
extern PFNGLUXGETTEXPARAMETERIIVEXTPROC glGetTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
extern PFNGLUXGETTEXPARAMETERIUIVEXTPROC glGetTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
extern PFNGLUXCLEARCOLORIIEXTPROC glClearColorIiEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
extern PFNGLUXCLEARCOLORIUIEXTPROC glClearColorIuiEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:16:56 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_texture_integer__
#define __GLUX_GL_EXT_texture_integer__

GLUX_NEW_PLUGIN(GL_EXT_texture_integer);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_RGBA32UI_EXT
#  define GL_RGBA32UI_EXT 0x8D70
#endif
#ifndef GL_RGB32UI_EXT
#  define GL_RGB32UI_EXT 0x8D71
#endif
#ifndef GL_ALPHA32UI_EXT
#  define GL_ALPHA32UI_EXT 0x8D72
#endif
#ifndef GL_INTENSITY32UI_EXT
#  define GL_INTENSITY32UI_EXT 0x8D73
#endif
#ifndef GL_LUMINANCE32UI_EXT
#  define GL_LUMINANCE32UI_EXT 0x8D74
#endif
#ifndef GL_LUMINANCE_ALPHA32UI_EXT
#  define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
#endif
#ifndef GL_RGBA16UI_EXT
#  define GL_RGBA16UI_EXT 0x8D76
#endif
#ifndef GL_RGB16UI_EXT
#  define GL_RGB16UI_EXT 0x8D77
#endif
#ifndef GL_ALPHA16UI_EXT
#  define GL_ALPHA16UI_EXT 0x8D78
#endif
#ifndef GL_INTENSITY16UI_EXT
#  define GL_INTENSITY16UI_EXT 0x8D79
#endif
#ifndef GL_LUMINANCE16UI_EXT
#  define GL_LUMINANCE16UI_EXT 0x8D7A
#endif
#ifndef GL_LUMINANCE_ALPHA16UI_EXT
#  define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
#endif
#ifndef GL_RGBA8UI_EXT
#  define GL_RGBA8UI_EXT 0x8D7C
#endif
#ifndef GL_RGB8UI_EXT
#  define GL_RGB8UI_EXT 0x8D7D
#endif
#ifndef GL_ALPHA8UI_EXT
#  define GL_ALPHA8UI_EXT 0x8D7E
#endif
#ifndef GL_INTENSITY8UI_EXT
#  define GL_INTENSITY8UI_EXT 0x8D7F
#endif
#ifndef GL_LUMINANCE8UI_EXT
#  define GL_LUMINANCE8UI_EXT 0x8D80
#endif
#ifndef GL_LUMINANCE_ALPHA8UI_EXT
#  define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
#endif
#ifndef GL_RGBA32I_EXT
#  define GL_RGBA32I_EXT 0x8D82
#endif
#ifndef GL_RGB32I_EXT
#  define GL_RGB32I_EXT 0x8D83
#endif
#ifndef GL_ALPHA32I_EXT
#  define GL_ALPHA32I_EXT 0x8D84
#endif
#ifndef GL_INTENSITY32I_EXT
#  define GL_INTENSITY32I_EXT 0x8D85
#endif
#ifndef GL_LUMINANCE32I_EXT
#  define GL_LUMINANCE32I_EXT 0x8D86
#endif
#ifndef GL_LUMINANCE_ALPHA32I_EXT
#  define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
#endif
#ifndef GL_RGBA16I_EXT
#  define GL_RGBA16I_EXT 0x8D88
#endif
#ifndef GL_RGB16I_EXT
#  define GL_RGB16I_EXT 0x8D89
#endif
#ifndef GL_ALPHA16I_EXT
#  define GL_ALPHA16I_EXT 0x8D8A
#endif
#ifndef GL_INTENSITY16I_EXT
#  define GL_INTENSITY16I_EXT 0x8D8B
#endif
#ifndef GL_LUMINANCE16I_EXT
#  define GL_LUMINANCE16I_EXT 0x8D8C
#endif
#ifndef GL_LUMINANCE_ALPHA16I_EXT
#  define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
#endif
#ifndef GL_RGBA8I_EXT
#  define GL_RGBA8I_EXT 0x8D8E
#endif
#ifndef GL_RGB8I_EXT
#  define GL_RGB8I_EXT 0x8D8F
#endif
#ifndef GL_ALPHA8I_EXT
#  define GL_ALPHA8I_EXT 0x8D90
#endif
#ifndef GL_INTENSITY8I_EXT
#  define GL_INTENSITY8I_EXT 0x8D91
#endif
#ifndef GL_LUMINANCE8I_EXT
#  define GL_LUMINANCE8I_EXT 0x8D92
#endif
#ifndef GL_LUMINANCE_ALPHA8I_EXT
#  define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
#endif
#ifndef GL_RED_INTEGER_EXT
#  define GL_RED_INTEGER_EXT 0x8D94
#endif
#ifndef GL_GREEN_INTEGER_EXT
#  define GL_GREEN_INTEGER_EXT 0x8D95
#endif
#ifndef GL_BLUE_INTEGER_EXT
#  define GL_BLUE_INTEGER_EXT 0x8D96
#endif
#ifndef GL_ALPHA_INTEGER_EXT
#  define GL_ALPHA_INTEGER_EXT 0x8D97
#endif
#ifndef GL_RGB_INTEGER_EXT
#  define GL_RGB_INTEGER_EXT 0x8D98
#endif
#ifndef GL_RGBA_INTEGER_EXT
#  define GL_RGBA_INTEGER_EXT 0x8D99
#endif
#ifndef GL_BGR_INTEGER_EXT
#  define GL_BGR_INTEGER_EXT 0x8D9A
#endif
#ifndef GL_BGRA_INTEGER_EXT
#  define GL_BGRA_INTEGER_EXT 0x8D9B
#endif
#ifndef GL_LUMINANCE_INTEGER_EXT
#  define GL_LUMINANCE_INTEGER_EXT 0x8D9C
#endif
#ifndef GL_LUMINANCE_ALPHA_INTEGER_EXT
#  define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
#endif
#ifndef GL_RGBA_INTEGER_MODE_EXT
#  define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
extern PFNGLUXTEXPARAMETERIIVEXTPROC glTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
extern PFNGLUXTEXPARAMETERIUIVEXTPROC glTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
extern PFNGLUXGETTEXPARAMETERIIVEXTPROC glGetTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
extern PFNGLUXGETTEXPARAMETERIUIVEXTPROC glGetTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
extern PFNGLUXCLEARCOLORIIEXTPROC glClearColorIiEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
extern PFNGLUXCLEARCOLORIUIEXTPROC glClearColorIuiEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_texture_integer__
#define __GLUX_GL_EXT_texture_integer__

GLUX_NEW_PLUGIN(GL_EXT_texture_integer);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_RGBA32UI_EXT
#  define GL_RGBA32UI_EXT 0x8D70
#endif
#ifndef GL_RGB32UI_EXT
#  define GL_RGB32UI_EXT 0x8D71
#endif
#ifndef GL_ALPHA32UI_EXT
#  define GL_ALPHA32UI_EXT 0x8D72
#endif
#ifndef GL_INTENSITY32UI_EXT
#  define GL_INTENSITY32UI_EXT 0x8D73
#endif
#ifndef GL_LUMINANCE32UI_EXT
#  define GL_LUMINANCE32UI_EXT 0x8D74
#endif
#ifndef GL_LUMINANCE_ALPHA32UI_EXT
#  define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
#endif
#ifndef GL_RGBA16UI_EXT
#  define GL_RGBA16UI_EXT 0x8D76
#endif
#ifndef GL_RGB16UI_EXT
#  define GL_RGB16UI_EXT 0x8D77
#endif
#ifndef GL_ALPHA16UI_EXT
#  define GL_ALPHA16UI_EXT 0x8D78
#endif
#ifndef GL_INTENSITY16UI_EXT
#  define GL_INTENSITY16UI_EXT 0x8D79
#endif
#ifndef GL_LUMINANCE16UI_EXT
#  define GL_LUMINANCE16UI_EXT 0x8D7A
#endif
#ifndef GL_LUMINANCE_ALPHA16UI_EXT
#  define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
#endif
#ifndef GL_RGBA8UI_EXT
#  define GL_RGBA8UI_EXT 0x8D7C
#endif
#ifndef GL_RGB8UI_EXT
#  define GL_RGB8UI_EXT 0x8D7D
#endif
#ifndef GL_ALPHA8UI_EXT
#  define GL_ALPHA8UI_EXT 0x8D7E
#endif
#ifndef GL_INTENSITY8UI_EXT
#  define GL_INTENSITY8UI_EXT 0x8D7F
#endif
#ifndef GL_LUMINANCE8UI_EXT
#  define GL_LUMINANCE8UI_EXT 0x8D80
#endif
#ifndef GL_LUMINANCE_ALPHA8UI_EXT
#  define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
#endif
#ifndef GL_RGBA32I_EXT
#  define GL_RGBA32I_EXT 0x8D82
#endif
#ifndef GL_RGB32I_EXT
#  define GL_RGB32I_EXT 0x8D83
#endif
#ifndef GL_ALPHA32I_EXT
#  define GL_ALPHA32I_EXT 0x8D84
#endif
#ifndef GL_INTENSITY32I_EXT
#  define GL_INTENSITY32I_EXT 0x8D85
#endif
#ifndef GL_LUMINANCE32I_EXT
#  define GL_LUMINANCE32I_EXT 0x8D86
#endif
#ifndef GL_LUMINANCE_ALPHA32I_EXT
#  define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
#endif
#ifndef GL_RGBA16I_EXT
#  define GL_RGBA16I_EXT 0x8D88
#endif
#ifndef GL_RGB16I_EXT
#  define GL_RGB16I_EXT 0x8D89
#endif
#ifndef GL_ALPHA16I_EXT
#  define GL_ALPHA16I_EXT 0x8D8A
#endif
#ifndef GL_INTENSITY16I_EXT
#  define GL_INTENSITY16I_EXT 0x8D8B
#endif
#ifndef GL_LUMINANCE16I_EXT
#  define GL_LUMINANCE16I_EXT 0x8D8C
#endif
#ifndef GL_LUMINANCE_ALPHA16I_EXT
#  define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
#endif
#ifndef GL_RGBA8I_EXT
#  define GL_RGBA8I_EXT 0x8D8E
#endif
#ifndef GL_RGB8I_EXT
#  define GL_RGB8I_EXT 0x8D8F
#endif
#ifndef GL_ALPHA8I_EXT
#  define GL_ALPHA8I_EXT 0x8D90
#endif
#ifndef GL_INTENSITY8I_EXT
#  define GL_INTENSITY8I_EXT 0x8D91
#endif
#ifndef GL_LUMINANCE8I_EXT
#  define GL_LUMINANCE8I_EXT 0x8D92
#endif
#ifndef GL_LUMINANCE_ALPHA8I_EXT
#  define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
#endif
#ifndef GL_RED_INTEGER_EXT
#  define GL_RED_INTEGER_EXT 0x8D94
#endif
#ifndef GL_GREEN_INTEGER_EXT
#  define GL_GREEN_INTEGER_EXT 0x8D95
#endif
#ifndef GL_BLUE_INTEGER_EXT
#  define GL_BLUE_INTEGER_EXT 0x8D96
#endif
#ifndef GL_ALPHA_INTEGER_EXT
#  define GL_ALPHA_INTEGER_EXT 0x8D97
#endif
#ifndef GL_RGB_INTEGER_EXT
#  define GL_RGB_INTEGER_EXT 0x8D98
#endif
#ifndef GL_RGBA_INTEGER_EXT
#  define GL_RGBA_INTEGER_EXT 0x8D99
#endif
#ifndef GL_BGR_INTEGER_EXT
#  define GL_BGR_INTEGER_EXT 0x8D9A
#endif
#ifndef GL_BGRA_INTEGER_EXT
#  define GL_BGRA_INTEGER_EXT 0x8D9B
#endif
#ifndef GL_LUMINANCE_INTEGER_EXT
#  define GL_LUMINANCE_INTEGER_EXT 0x8D9C
#endif
#ifndef GL_LUMINANCE_ALPHA_INTEGER_EXT
#  define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
#endif
#ifndef GL_RGBA_INTEGER_MODE_EXT
#  define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
extern PFNGLUXTEXPARAMETERIIVEXTPROC glTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
extern PFNGLUXTEXPARAMETERIUIVEXTPROC glTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
extern PFNGLUXGETTEXPARAMETERIIVEXTPROC glGetTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
extern PFNGLUXGETTEXPARAMETERIUIVEXTPROC glGetTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
extern PFNGLUXCLEARCOLORIIEXTPROC glClearColorIiEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
extern PFNGLUXCLEARCOLORIUIEXTPROC glClearColorIuiEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:19 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_texture_integer__
#define __GLUX_GL_EXT_texture_integer__

GLUX_NEW_PLUGIN(GL_EXT_texture_integer);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_RGBA32UI_EXT
#  define GL_RGBA32UI_EXT 0x8D70
#endif
#ifndef GL_RGB32UI_EXT
#  define GL_RGB32UI_EXT 0x8D71
#endif
#ifndef GL_ALPHA32UI_EXT
#  define GL_ALPHA32UI_EXT 0x8D72
#endif
#ifndef GL_INTENSITY32UI_EXT
#  define GL_INTENSITY32UI_EXT 0x8D73
#endif
#ifndef GL_LUMINANCE32UI_EXT
#  define GL_LUMINANCE32UI_EXT 0x8D74
#endif
#ifndef GL_LUMINANCE_ALPHA32UI_EXT
#  define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
#endif
#ifndef GL_RGBA16UI_EXT
#  define GL_RGBA16UI_EXT 0x8D76
#endif
#ifndef GL_RGB16UI_EXT
#  define GL_RGB16UI_EXT 0x8D77
#endif
#ifndef GL_ALPHA16UI_EXT
#  define GL_ALPHA16UI_EXT 0x8D78
#endif
#ifndef GL_INTENSITY16UI_EXT
#  define GL_INTENSITY16UI_EXT 0x8D79
#endif
#ifndef GL_LUMINANCE16UI_EXT
#  define GL_LUMINANCE16UI_EXT 0x8D7A
#endif
#ifndef GL_LUMINANCE_ALPHA16UI_EXT
#  define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
#endif
#ifndef GL_RGBA8UI_EXT
#  define GL_RGBA8UI_EXT 0x8D7C
#endif
#ifndef GL_RGB8UI_EXT
#  define GL_RGB8UI_EXT 0x8D7D
#endif
#ifndef GL_ALPHA8UI_EXT
#  define GL_ALPHA8UI_EXT 0x8D7E
#endif
#ifndef GL_INTENSITY8UI_EXT
#  define GL_INTENSITY8UI_EXT 0x8D7F
#endif
#ifndef GL_LUMINANCE8UI_EXT
#  define GL_LUMINANCE8UI_EXT 0x8D80
#endif
#ifndef GL_LUMINANCE_ALPHA8UI_EXT
#  define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
#endif
#ifndef GL_RGBA32I_EXT
#  define GL_RGBA32I_EXT 0x8D82
#endif
#ifndef GL_RGB32I_EXT
#  define GL_RGB32I_EXT 0x8D83
#endif
#ifndef GL_ALPHA32I_EXT
#  define GL_ALPHA32I_EXT 0x8D84
#endif
#ifndef GL_INTENSITY32I_EXT
#  define GL_INTENSITY32I_EXT 0x8D85
#endif
#ifndef GL_LUMINANCE32I_EXT
#  define GL_LUMINANCE32I_EXT 0x8D86
#endif
#ifndef GL_LUMINANCE_ALPHA32I_EXT
#  define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
#endif
#ifndef GL_RGBA16I_EXT
#  define GL_RGBA16I_EXT 0x8D88
#endif
#ifndef GL_RGB16I_EXT
#  define GL_RGB16I_EXT 0x8D89
#endif
#ifndef GL_ALPHA16I_EXT
#  define GL_ALPHA16I_EXT 0x8D8A
#endif
#ifndef GL_INTENSITY16I_EXT
#  define GL_INTENSITY16I_EXT 0x8D8B
#endif
#ifndef GL_LUMINANCE16I_EXT
#  define GL_LUMINANCE16I_EXT 0x8D8C
#endif
#ifndef GL_LUMINANCE_ALPHA16I_EXT
#  define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
#endif
#ifndef GL_RGBA8I_EXT
#  define GL_RGBA8I_EXT 0x8D8E
#endif
#ifndef GL_RGB8I_EXT
#  define GL_RGB8I_EXT 0x8D8F
#endif
#ifndef GL_ALPHA8I_EXT
#  define GL_ALPHA8I_EXT 0x8D90
#endif
#ifndef GL_INTENSITY8I_EXT
#  define GL_INTENSITY8I_EXT 0x8D91
#endif
#ifndef GL_LUMINANCE8I_EXT
#  define GL_LUMINANCE8I_EXT 0x8D92
#endif
#ifndef GL_LUMINANCE_ALPHA8I_EXT
#  define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
#endif
#ifndef GL_RED_INTEGER_EXT
#  define GL_RED_INTEGER_EXT 0x8D94
#endif
#ifndef GL_GREEN_INTEGER_EXT
#  define GL_GREEN_INTEGER_EXT 0x8D95
#endif
#ifndef GL_BLUE_INTEGER_EXT
#  define GL_BLUE_INTEGER_EXT 0x8D96
#endif
#ifndef GL_ALPHA_INTEGER_EXT
#  define GL_ALPHA_INTEGER_EXT 0x8D97
#endif
#ifndef GL_RGB_INTEGER_EXT
#  define GL_RGB_INTEGER_EXT 0x8D98
#endif
#ifndef GL_RGBA_INTEGER_EXT
#  define GL_RGBA_INTEGER_EXT 0x8D99
#endif
#ifndef GL_BGR_INTEGER_EXT
#  define GL_BGR_INTEGER_EXT 0x8D9A
#endif
#ifndef GL_BGRA_INTEGER_EXT
#  define GL_BGRA_INTEGER_EXT 0x8D9B
#endif
#ifndef GL_LUMINANCE_INTEGER_EXT
#  define GL_LUMINANCE_INTEGER_EXT 0x8D9C
#endif
#ifndef GL_LUMINANCE_ALPHA_INTEGER_EXT
#  define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
#endif
#ifndef GL_RGBA_INTEGER_MODE_EXT
#  define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
extern PFNGLUXTEXPARAMETERIIVEXTPROC glTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
extern PFNGLUXTEXPARAMETERIUIVEXTPROC glTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
extern PFNGLUXGETTEXPARAMETERIIVEXTPROC glGetTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
extern PFNGLUXGETTEXPARAMETERIUIVEXTPROC glGetTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
extern PFNGLUXCLEARCOLORIIEXTPROC glClearColorIiEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
extern PFNGLUXCLEARCOLORIUIEXTPROC glClearColorIuiEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:00 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_texture_integer__
#define __GLUX_GL_EXT_texture_integer__

GLUX_NEW_PLUGIN(GL_EXT_texture_integer);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_RGBA32UI_EXT
#  define GL_RGBA32UI_EXT 0x8D70
#endif
#ifndef GL_RGB32UI_EXT
#  define GL_RGB32UI_EXT 0x8D71
#endif
#ifndef GL_ALPHA32UI_EXT
#  define GL_ALPHA32UI_EXT 0x8D72
#endif
#ifndef GL_INTENSITY32UI_EXT
#  define GL_INTENSITY32UI_EXT 0x8D73
#endif
#ifndef GL_LUMINANCE32UI_EXT
#  define GL_LUMINANCE32UI_EXT 0x8D74
#endif
#ifndef GL_LUMINANCE_ALPHA32UI_EXT
#  define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
#endif
#ifndef GL_RGBA16UI_EXT
#  define GL_RGBA16UI_EXT 0x8D76
#endif
#ifndef GL_RGB16UI_EXT
#  define GL_RGB16UI_EXT 0x8D77
#endif
#ifndef GL_ALPHA16UI_EXT
#  define GL_ALPHA16UI_EXT 0x8D78
#endif
#ifndef GL_INTENSITY16UI_EXT
#  define GL_INTENSITY16UI_EXT 0x8D79
#endif
#ifndef GL_LUMINANCE16UI_EXT
#  define GL_LUMINANCE16UI_EXT 0x8D7A
#endif
#ifndef GL_LUMINANCE_ALPHA16UI_EXT
#  define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
#endif
#ifndef GL_RGBA8UI_EXT
#  define GL_RGBA8UI_EXT 0x8D7C
#endif
#ifndef GL_RGB8UI_EXT
#  define GL_RGB8UI_EXT 0x8D7D
#endif
#ifndef GL_ALPHA8UI_EXT
#  define GL_ALPHA8UI_EXT 0x8D7E
#endif
#ifndef GL_INTENSITY8UI_EXT
#  define GL_INTENSITY8UI_EXT 0x8D7F
#endif
#ifndef GL_LUMINANCE8UI_EXT
#  define GL_LUMINANCE8UI_EXT 0x8D80
#endif
#ifndef GL_LUMINANCE_ALPHA8UI_EXT
#  define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
#endif
#ifndef GL_RGBA32I_EXT
#  define GL_RGBA32I_EXT 0x8D82
#endif
#ifndef GL_RGB32I_EXT
#  define GL_RGB32I_EXT 0x8D83
#endif
#ifndef GL_ALPHA32I_EXT
#  define GL_ALPHA32I_EXT 0x8D84
#endif
#ifndef GL_INTENSITY32I_EXT
#  define GL_INTENSITY32I_EXT 0x8D85
#endif
#ifndef GL_LUMINANCE32I_EXT
#  define GL_LUMINANCE32I_EXT 0x8D86
#endif
#ifndef GL_LUMINANCE_ALPHA32I_EXT
#  define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
#endif
#ifndef GL_RGBA16I_EXT
#  define GL_RGBA16I_EXT 0x8D88
#endif
#ifndef GL_RGB16I_EXT
#  define GL_RGB16I_EXT 0x8D89
#endif
#ifndef GL_ALPHA16I_EXT
#  define GL_ALPHA16I_EXT 0x8D8A
#endif
#ifndef GL_INTENSITY16I_EXT
#  define GL_INTENSITY16I_EXT 0x8D8B
#endif
#ifndef GL_LUMINANCE16I_EXT
#  define GL_LUMINANCE16I_EXT 0x8D8C
#endif
#ifndef GL_LUMINANCE_ALPHA16I_EXT
#  define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
#endif
#ifndef GL_RGBA8I_EXT
#  define GL_RGBA8I_EXT 0x8D8E
#endif
#ifndef GL_RGB8I_EXT
#  define GL_RGB8I_EXT 0x8D8F
#endif
#ifndef GL_ALPHA8I_EXT
#  define GL_ALPHA8I_EXT 0x8D90
#endif
#ifndef GL_INTENSITY8I_EXT
#  define GL_INTENSITY8I_EXT 0x8D91
#endif
#ifndef GL_LUMINANCE8I_EXT
#  define GL_LUMINANCE8I_EXT 0x8D92
#endif
#ifndef GL_LUMINANCE_ALPHA8I_EXT
#  define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
#endif
#ifndef GL_RED_INTEGER_EXT
#  define GL_RED_INTEGER_EXT 0x8D94
#endif
#ifndef GL_GREEN_INTEGER_EXT
#  define GL_GREEN_INTEGER_EXT 0x8D95
#endif
#ifndef GL_BLUE_INTEGER_EXT
#  define GL_BLUE_INTEGER_EXT 0x8D96
#endif
#ifndef GL_ALPHA_INTEGER_EXT
#  define GL_ALPHA_INTEGER_EXT 0x8D97
#endif
#ifndef GL_RGB_INTEGER_EXT
#  define GL_RGB_INTEGER_EXT 0x8D98
#endif
#ifndef GL_RGBA_INTEGER_EXT
#  define GL_RGBA_INTEGER_EXT 0x8D99
#endif
#ifndef GL_BGR_INTEGER_EXT
#  define GL_BGR_INTEGER_EXT 0x8D9A
#endif
#ifndef GL_BGRA_INTEGER_EXT
#  define GL_BGRA_INTEGER_EXT 0x8D9B
#endif
#ifndef GL_LUMINANCE_INTEGER_EXT
#  define GL_LUMINANCE_INTEGER_EXT 0x8D9C
#endif
#ifndef GL_LUMINANCE_ALPHA_INTEGER_EXT
#  define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
#endif
#ifndef GL_RGBA_INTEGER_MODE_EXT
#  define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
extern PFNGLUXTEXPARAMETERIIVEXTPROC glTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
extern PFNGLUXTEXPARAMETERIUIVEXTPROC glTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
extern PFNGLUXGETTEXPARAMETERIIVEXTPROC glGetTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
extern PFNGLUXGETTEXPARAMETERIUIVEXTPROC glGetTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
extern PFNGLUXCLEARCOLORIIEXTPROC glClearColorIiEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
extern PFNGLUXCLEARCOLORIUIEXTPROC glClearColorIuiEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:08 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_texture_integer__
#define __GLUX_GL_EXT_texture_integer__

GLUX_NEW_PLUGIN(GL_EXT_texture_integer);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_RGBA32UI_EXT
#  define GL_RGBA32UI_EXT 0x8D70
#endif
#ifndef GL_RGB32UI_EXT
#  define GL_RGB32UI_EXT 0x8D71
#endif
#ifndef GL_ALPHA32UI_EXT
#  define GL_ALPHA32UI_EXT 0x8D72
#endif
#ifndef GL_INTENSITY32UI_EXT
#  define GL_INTENSITY32UI_EXT 0x8D73
#endif
#ifndef GL_LUMINANCE32UI_EXT
#  define GL_LUMINANCE32UI_EXT 0x8D74
#endif
#ifndef GL_LUMINANCE_ALPHA32UI_EXT
#  define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
#endif
#ifndef GL_RGBA16UI_EXT
#  define GL_RGBA16UI_EXT 0x8D76
#endif
#ifndef GL_RGB16UI_EXT
#  define GL_RGB16UI_EXT 0x8D77
#endif
#ifndef GL_ALPHA16UI_EXT
#  define GL_ALPHA16UI_EXT 0x8D78
#endif
#ifndef GL_INTENSITY16UI_EXT
#  define GL_INTENSITY16UI_EXT 0x8D79
#endif
#ifndef GL_LUMINANCE16UI_EXT
#  define GL_LUMINANCE16UI_EXT 0x8D7A
#endif
#ifndef GL_LUMINANCE_ALPHA16UI_EXT
#  define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
#endif
#ifndef GL_RGBA8UI_EXT
#  define GL_RGBA8UI_EXT 0x8D7C
#endif
#ifndef GL_RGB8UI_EXT
#  define GL_RGB8UI_EXT 0x8D7D
#endif
#ifndef GL_ALPHA8UI_EXT
#  define GL_ALPHA8UI_EXT 0x8D7E
#endif
#ifndef GL_INTENSITY8UI_EXT
#  define GL_INTENSITY8UI_EXT 0x8D7F
#endif
#ifndef GL_LUMINANCE8UI_EXT
#  define GL_LUMINANCE8UI_EXT 0x8D80
#endif
#ifndef GL_LUMINANCE_ALPHA8UI_EXT
#  define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
#endif
#ifndef GL_RGBA32I_EXT
#  define GL_RGBA32I_EXT 0x8D82
#endif
#ifndef GL_RGB32I_EXT
#  define GL_RGB32I_EXT 0x8D83
#endif
#ifndef GL_ALPHA32I_EXT
#  define GL_ALPHA32I_EXT 0x8D84
#endif
#ifndef GL_INTENSITY32I_EXT
#  define GL_INTENSITY32I_EXT 0x8D85
#endif
#ifndef GL_LUMINANCE32I_EXT
#  define GL_LUMINANCE32I_EXT 0x8D86
#endif
#ifndef GL_LUMINANCE_ALPHA32I_EXT
#  define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
#endif
#ifndef GL_RGBA16I_EXT
#  define GL_RGBA16I_EXT 0x8D88
#endif
#ifndef GL_RGB16I_EXT
#  define GL_RGB16I_EXT 0x8D89
#endif
#ifndef GL_ALPHA16I_EXT
#  define GL_ALPHA16I_EXT 0x8D8A
#endif
#ifndef GL_INTENSITY16I_EXT
#  define GL_INTENSITY16I_EXT 0x8D8B
#endif
#ifndef GL_LUMINANCE16I_EXT
#  define GL_LUMINANCE16I_EXT 0x8D8C
#endif
#ifndef GL_LUMINANCE_ALPHA16I_EXT
#  define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
#endif
#ifndef GL_RGBA8I_EXT
#  define GL_RGBA8I_EXT 0x8D8E
#endif
#ifndef GL_RGB8I_EXT
#  define GL_RGB8I_EXT 0x8D8F
#endif
#ifndef GL_ALPHA8I_EXT
#  define GL_ALPHA8I_EXT 0x8D90
#endif
#ifndef GL_INTENSITY8I_EXT
#  define GL_INTENSITY8I_EXT 0x8D91
#endif
#ifndef GL_LUMINANCE8I_EXT
#  define GL_LUMINANCE8I_EXT 0x8D92
#endif
#ifndef GL_LUMINANCE_ALPHA8I_EXT
#  define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
#endif
#ifndef GL_RED_INTEGER_EXT
#  define GL_RED_INTEGER_EXT 0x8D94
#endif
#ifndef GL_GREEN_INTEGER_EXT
#  define GL_GREEN_INTEGER_EXT 0x8D95
#endif
#ifndef GL_BLUE_INTEGER_EXT
#  define GL_BLUE_INTEGER_EXT 0x8D96
#endif
#ifndef GL_ALPHA_INTEGER_EXT
#  define GL_ALPHA_INTEGER_EXT 0x8D97
#endif
#ifndef GL_RGB_INTEGER_EXT
#  define GL_RGB_INTEGER_EXT 0x8D98
#endif
#ifndef GL_RGBA_INTEGER_EXT
#  define GL_RGBA_INTEGER_EXT 0x8D99
#endif
#ifndef GL_BGR_INTEGER_EXT
#  define GL_BGR_INTEGER_EXT 0x8D9A
#endif
#ifndef GL_BGRA_INTEGER_EXT
#  define GL_BGRA_INTEGER_EXT 0x8D9B
#endif
#ifndef GL_LUMINANCE_INTEGER_EXT
#  define GL_LUMINANCE_INTEGER_EXT 0x8D9C
#endif
#ifndef GL_LUMINANCE_ALPHA_INTEGER_EXT
#  define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
#endif
#ifndef GL_RGBA_INTEGER_MODE_EXT
#  define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
extern PFNGLUXTEXPARAMETERIIVEXTPROC glTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
extern PFNGLUXTEXPARAMETERIUIVEXTPROC glTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
extern PFNGLUXGETTEXPARAMETERIIVEXTPROC glGetTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
extern PFNGLUXGETTEXPARAMETERIUIVEXTPROC glGetTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
extern PFNGLUXCLEARCOLORIIEXTPROC glClearColorIiEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
extern PFNGLUXCLEARCOLORIUIEXTPROC glClearColorIuiEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:21 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_texture_integer__
#define __GLUX_GL_EXT_texture_integer__

GLUX_NEW_PLUGIN(GL_EXT_texture_integer);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_RGBA32UI_EXT
#  define GL_RGBA32UI_EXT 0x8D70
#endif
#ifndef GL_RGB32UI_EXT
#  define GL_RGB32UI_EXT 0x8D71
#endif
#ifndef GL_ALPHA32UI_EXT
#  define GL_ALPHA32UI_EXT 0x8D72
#endif
#ifndef GL_INTENSITY32UI_EXT
#  define GL_INTENSITY32UI_EXT 0x8D73
#endif
#ifndef GL_LUMINANCE32UI_EXT
#  define GL_LUMINANCE32UI_EXT 0x8D74
#endif
#ifndef GL_LUMINANCE_ALPHA32UI_EXT
#  define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
#endif
#ifndef GL_RGBA16UI_EXT
#  define GL_RGBA16UI_EXT 0x8D76
#endif
#ifndef GL_RGB16UI_EXT
#  define GL_RGB16UI_EXT 0x8D77
#endif
#ifndef GL_ALPHA16UI_EXT
#  define GL_ALPHA16UI_EXT 0x8D78
#endif
#ifndef GL_INTENSITY16UI_EXT
#  define GL_INTENSITY16UI_EXT 0x8D79
#endif
#ifndef GL_LUMINANCE16UI_EXT
#  define GL_LUMINANCE16UI_EXT 0x8D7A
#endif
#ifndef GL_LUMINANCE_ALPHA16UI_EXT
#  define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
#endif
#ifndef GL_RGBA8UI_EXT
#  define GL_RGBA8UI_EXT 0x8D7C
#endif
#ifndef GL_RGB8UI_EXT
#  define GL_RGB8UI_EXT 0x8D7D
#endif
#ifndef GL_ALPHA8UI_EXT
#  define GL_ALPHA8UI_EXT 0x8D7E
#endif
#ifndef GL_INTENSITY8UI_EXT
#  define GL_INTENSITY8UI_EXT 0x8D7F
#endif
#ifndef GL_LUMINANCE8UI_EXT
#  define GL_LUMINANCE8UI_EXT 0x8D80
#endif
#ifndef GL_LUMINANCE_ALPHA8UI_EXT
#  define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
#endif
#ifndef GL_RGBA32I_EXT
#  define GL_RGBA32I_EXT 0x8D82
#endif
#ifndef GL_RGB32I_EXT
#  define GL_RGB32I_EXT 0x8D83
#endif
#ifndef GL_ALPHA32I_EXT
#  define GL_ALPHA32I_EXT 0x8D84
#endif
#ifndef GL_INTENSITY32I_EXT
#  define GL_INTENSITY32I_EXT 0x8D85
#endif
#ifndef GL_LUMINANCE32I_EXT
#  define GL_LUMINANCE32I_EXT 0x8D86
#endif
#ifndef GL_LUMINANCE_ALPHA32I_EXT
#  define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
#endif
#ifndef GL_RGBA16I_EXT
#  define GL_RGBA16I_EXT 0x8D88
#endif
#ifndef GL_RGB16I_EXT
#  define GL_RGB16I_EXT 0x8D89
#endif
#ifndef GL_ALPHA16I_EXT
#  define GL_ALPHA16I_EXT 0x8D8A
#endif
#ifndef GL_INTENSITY16I_EXT
#  define GL_INTENSITY16I_EXT 0x8D8B
#endif
#ifndef GL_LUMINANCE16I_EXT
#  define GL_LUMINANCE16I_EXT 0x8D8C
#endif
#ifndef GL_LUMINANCE_ALPHA16I_EXT
#  define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
#endif
#ifndef GL_RGBA8I_EXT
#  define GL_RGBA8I_EXT 0x8D8E
#endif
#ifndef GL_RGB8I_EXT
#  define GL_RGB8I_EXT 0x8D8F
#endif
#ifndef GL_ALPHA8I_EXT
#  define GL_ALPHA8I_EXT 0x8D90
#endif
#ifndef GL_INTENSITY8I_EXT
#  define GL_INTENSITY8I_EXT 0x8D91
#endif
#ifndef GL_LUMINANCE8I_EXT
#  define GL_LUMINANCE8I_EXT 0x8D92
#endif
#ifndef GL_LUMINANCE_ALPHA8I_EXT
#  define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
#endif
#ifndef GL_RED_INTEGER_EXT
#  define GL_RED_INTEGER_EXT 0x8D94
#endif
#ifndef GL_GREEN_INTEGER_EXT
#  define GL_GREEN_INTEGER_EXT 0x8D95
#endif
#ifndef GL_BLUE_INTEGER_EXT
#  define GL_BLUE_INTEGER_EXT 0x8D96
#endif
#ifndef GL_ALPHA_INTEGER_EXT
#  define GL_ALPHA_INTEGER_EXT 0x8D97
#endif
#ifndef GL_RGB_INTEGER_EXT
#  define GL_RGB_INTEGER_EXT 0x8D98
#endif
#ifndef GL_RGBA_INTEGER_EXT
#  define GL_RGBA_INTEGER_EXT 0x8D99
#endif
#ifndef GL_BGR_INTEGER_EXT
#  define GL_BGR_INTEGER_EXT 0x8D9A
#endif
#ifndef GL_BGRA_INTEGER_EXT
#  define GL_BGRA_INTEGER_EXT 0x8D9B
#endif
#ifndef GL_LUMINANCE_INTEGER_EXT
#  define GL_LUMINANCE_INTEGER_EXT 0x8D9C
#endif
#ifndef GL_LUMINANCE_ALPHA_INTEGER_EXT
#  define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
#endif
#ifndef GL_RGBA_INTEGER_MODE_EXT
#  define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
extern PFNGLUXTEXPARAMETERIIVEXTPROC glTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
extern PFNGLUXTEXPARAMETERIUIVEXTPROC glTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
extern PFNGLUXGETTEXPARAMETERIIVEXTPROC glGetTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
extern PFNGLUXGETTEXPARAMETERIUIVEXTPROC glGetTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
extern PFNGLUXCLEARCOLORIIEXTPROC glClearColorIiEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
extern PFNGLUXCLEARCOLORIUIEXTPROC glClearColorIuiEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:52:00 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_texture_integer__
#define __GLUX_GL_EXT_texture_integer__

GLUX_NEW_PLUGIN(GL_EXT_texture_integer);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_RGBA32UI_EXT
#  define GL_RGBA32UI_EXT 0x8D70
#endif
#ifndef GL_RGB32UI_EXT
#  define GL_RGB32UI_EXT 0x8D71
#endif
#ifndef GL_ALPHA32UI_EXT
#  define GL_ALPHA32UI_EXT 0x8D72
#endif
#ifndef GL_INTENSITY32UI_EXT
#  define GL_INTENSITY32UI_EXT 0x8D73
#endif
#ifndef GL_LUMINANCE32UI_EXT
#  define GL_LUMINANCE32UI_EXT 0x8D74
#endif
#ifndef GL_LUMINANCE_ALPHA32UI_EXT
#  define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
#endif
#ifndef GL_RGBA16UI_EXT
#  define GL_RGBA16UI_EXT 0x8D76
#endif
#ifndef GL_RGB16UI_EXT
#  define GL_RGB16UI_EXT 0x8D77
#endif
#ifndef GL_ALPHA16UI_EXT
#  define GL_ALPHA16UI_EXT 0x8D78
#endif
#ifndef GL_INTENSITY16UI_EXT
#  define GL_INTENSITY16UI_EXT 0x8D79
#endif
#ifndef GL_LUMINANCE16UI_EXT
#  define GL_LUMINANCE16UI_EXT 0x8D7A
#endif
#ifndef GL_LUMINANCE_ALPHA16UI_EXT
#  define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
#endif
#ifndef GL_RGBA8UI_EXT
#  define GL_RGBA8UI_EXT 0x8D7C
#endif
#ifndef GL_RGB8UI_EXT
#  define GL_RGB8UI_EXT 0x8D7D
#endif
#ifndef GL_ALPHA8UI_EXT
#  define GL_ALPHA8UI_EXT 0x8D7E
#endif
#ifndef GL_INTENSITY8UI_EXT
#  define GL_INTENSITY8UI_EXT 0x8D7F
#endif
#ifndef GL_LUMINANCE8UI_EXT
#  define GL_LUMINANCE8UI_EXT 0x8D80
#endif
#ifndef GL_LUMINANCE_ALPHA8UI_EXT
#  define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
#endif
#ifndef GL_RGBA32I_EXT
#  define GL_RGBA32I_EXT 0x8D82
#endif
#ifndef GL_RGB32I_EXT
#  define GL_RGB32I_EXT 0x8D83
#endif
#ifndef GL_ALPHA32I_EXT
#  define GL_ALPHA32I_EXT 0x8D84
#endif
#ifndef GL_INTENSITY32I_EXT
#  define GL_INTENSITY32I_EXT 0x8D85
#endif
#ifndef GL_LUMINANCE32I_EXT
#  define GL_LUMINANCE32I_EXT 0x8D86
#endif
#ifndef GL_LUMINANCE_ALPHA32I_EXT
#  define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
#endif
#ifndef GL_RGBA16I_EXT
#  define GL_RGBA16I_EXT 0x8D88
#endif
#ifndef GL_RGB16I_EXT
#  define GL_RGB16I_EXT 0x8D89
#endif
#ifndef GL_ALPHA16I_EXT
#  define GL_ALPHA16I_EXT 0x8D8A
#endif
#ifndef GL_INTENSITY16I_EXT
#  define GL_INTENSITY16I_EXT 0x8D8B
#endif
#ifndef GL_LUMINANCE16I_EXT
#  define GL_LUMINANCE16I_EXT 0x8D8C
#endif
#ifndef GL_LUMINANCE_ALPHA16I_EXT
#  define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
#endif
#ifndef GL_RGBA8I_EXT
#  define GL_RGBA8I_EXT 0x8D8E
#endif
#ifndef GL_RGB8I_EXT
#  define GL_RGB8I_EXT 0x8D8F
#endif
#ifndef GL_ALPHA8I_EXT
#  define GL_ALPHA8I_EXT 0x8D90
#endif
#ifndef GL_INTENSITY8I_EXT
#  define GL_INTENSITY8I_EXT 0x8D91
#endif
#ifndef GL_LUMINANCE8I_EXT
#  define GL_LUMINANCE8I_EXT 0x8D92
#endif
#ifndef GL_LUMINANCE_ALPHA8I_EXT
#  define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
#endif
#ifndef GL_RED_INTEGER_EXT
#  define GL_RED_INTEGER_EXT 0x8D94
#endif
#ifndef GL_GREEN_INTEGER_EXT
#  define GL_GREEN_INTEGER_EXT 0x8D95
#endif
#ifndef GL_BLUE_INTEGER_EXT
#  define GL_BLUE_INTEGER_EXT 0x8D96
#endif
#ifndef GL_ALPHA_INTEGER_EXT
#  define GL_ALPHA_INTEGER_EXT 0x8D97
#endif
#ifndef GL_RGB_INTEGER_EXT
#  define GL_RGB_INTEGER_EXT 0x8D98
#endif
#ifndef GL_RGBA_INTEGER_EXT
#  define GL_RGBA_INTEGER_EXT 0x8D99
#endif
#ifndef GL_BGR_INTEGER_EXT
#  define GL_BGR_INTEGER_EXT 0x8D9A
#endif
#ifndef GL_BGRA_INTEGER_EXT
#  define GL_BGRA_INTEGER_EXT 0x8D9B
#endif
#ifndef GL_LUMINANCE_INTEGER_EXT
#  define GL_LUMINANCE_INTEGER_EXT 0x8D9C
#endif
#ifndef GL_LUMINANCE_ALPHA_INTEGER_EXT
#  define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
#endif
#ifndef GL_RGBA_INTEGER_MODE_EXT
#  define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
extern PFNGLUXTEXPARAMETERIIVEXTPROC glTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
extern PFNGLUXTEXPARAMETERIUIVEXTPROC glTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
extern PFNGLUXGETTEXPARAMETERIIVEXTPROC glGetTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
extern PFNGLUXGETTEXPARAMETERIUIVEXTPROC glGetTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
extern PFNGLUXCLEARCOLORIIEXTPROC glClearColorIiEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
extern PFNGLUXCLEARCOLORIUIEXTPROC glClearColorIuiEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_texture_integer__
#define __GLUX_GL_EXT_texture_integer__

GLUX_NEW_PLUGIN(GL_EXT_texture_integer);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_RGBA32UI_EXT
#  define GL_RGBA32UI_EXT 0x8D70
#endif
#ifndef GL_RGB32UI_EXT
#  define GL_RGB32UI_EXT 0x8D71
#endif
#ifndef GL_ALPHA32UI_EXT
#  define GL_ALPHA32UI_EXT 0x8D72
#endif
#ifndef GL_INTENSITY32UI_EXT
#  define GL_INTENSITY32UI_EXT 0x8D73
#endif
#ifndef GL_LUMINANCE32UI_EXT
#  define GL_LUMINANCE32UI_EXT 0x8D74
#endif
#ifndef GL_LUMINANCE_ALPHA32UI_EXT
#  define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
#endif
#ifndef GL_RGBA16UI_EXT
#  define GL_RGBA16UI_EXT 0x8D76
#endif
#ifndef GL_RGB16UI_EXT
#  define GL_RGB16UI_EXT 0x8D77
#endif
#ifndef GL_ALPHA16UI_EXT
#  define GL_ALPHA16UI_EXT 0x8D78
#endif
#ifndef GL_INTENSITY16UI_EXT
#  define GL_INTENSITY16UI_EXT 0x8D79
#endif
#ifndef GL_LUMINANCE16UI_EXT
#  define GL_LUMINANCE16UI_EXT 0x8D7A
#endif
#ifndef GL_LUMINANCE_ALPHA16UI_EXT
#  define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
#endif
#ifndef GL_RGBA8UI_EXT
#  define GL_RGBA8UI_EXT 0x8D7C
#endif
#ifndef GL_RGB8UI_EXT
#  define GL_RGB8UI_EXT 0x8D7D
#endif
#ifndef GL_ALPHA8UI_EXT
#  define GL_ALPHA8UI_EXT 0x8D7E
#endif
#ifndef GL_INTENSITY8UI_EXT
#  define GL_INTENSITY8UI_EXT 0x8D7F
#endif
#ifndef GL_LUMINANCE8UI_EXT
#  define GL_LUMINANCE8UI_EXT 0x8D80
#endif
#ifndef GL_LUMINANCE_ALPHA8UI_EXT
#  define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
#endif
#ifndef GL_RGBA32I_EXT
#  define GL_RGBA32I_EXT 0x8D82
#endif
#ifndef GL_RGB32I_EXT
#  define GL_RGB32I_EXT 0x8D83
#endif
#ifndef GL_ALPHA32I_EXT
#  define GL_ALPHA32I_EXT 0x8D84
#endif
#ifndef GL_INTENSITY32I_EXT
#  define GL_INTENSITY32I_EXT 0x8D85
#endif
#ifndef GL_LUMINANCE32I_EXT
#  define GL_LUMINANCE32I_EXT 0x8D86
#endif
#ifndef GL_LUMINANCE_ALPHA32I_EXT
#  define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
#endif
#ifndef GL_RGBA16I_EXT
#  define GL_RGBA16I_EXT 0x8D88
#endif
#ifndef GL_RGB16I_EXT
#  define GL_RGB16I_EXT 0x8D89
#endif
#ifndef GL_ALPHA16I_EXT
#  define GL_ALPHA16I_EXT 0x8D8A
#endif
#ifndef GL_INTENSITY16I_EXT
#  define GL_INTENSITY16I_EXT 0x8D8B
#endif
#ifndef GL_LUMINANCE16I_EXT
#  define GL_LUMINANCE16I_EXT 0x8D8C
#endif
#ifndef GL_LUMINANCE_ALPHA16I_EXT
#  define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
#endif
#ifndef GL_RGBA8I_EXT
#  define GL_RGBA8I_EXT 0x8D8E
#endif
#ifndef GL_RGB8I_EXT
#  define GL_RGB8I_EXT 0x8D8F
#endif
#ifndef GL_ALPHA8I_EXT
#  define GL_ALPHA8I_EXT 0x8D90
#endif
#ifndef GL_INTENSITY8I_EXT
#  define GL_INTENSITY8I_EXT 0x8D91
#endif
#ifndef GL_LUMINANCE8I_EXT
#  define GL_LUMINANCE8I_EXT 0x8D92
#endif
#ifndef GL_LUMINANCE_ALPHA8I_EXT
#  define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
#endif
#ifndef GL_RED_INTEGER_EXT
#  define GL_RED_INTEGER_EXT 0x8D94
#endif
#ifndef GL_GREEN_INTEGER_EXT
#  define GL_GREEN_INTEGER_EXT 0x8D95
#endif
#ifndef GL_BLUE_INTEGER_EXT
#  define GL_BLUE_INTEGER_EXT 0x8D96
#endif
#ifndef GL_ALPHA_INTEGER_EXT
#  define GL_ALPHA_INTEGER_EXT 0x8D97
#endif
#ifndef GL_RGB_INTEGER_EXT
#  define GL_RGB_INTEGER_EXT 0x8D98
#endif
#ifndef GL_RGBA_INTEGER_EXT
#  define GL_RGBA_INTEGER_EXT 0x8D99
#endif
#ifndef GL_BGR_INTEGER_EXT
#  define GL_BGR_INTEGER_EXT 0x8D9A
#endif
#ifndef GL_BGRA_INTEGER_EXT
#  define GL_BGRA_INTEGER_EXT 0x8D9B
#endif
#ifndef GL_LUMINANCE_INTEGER_EXT
#  define GL_LUMINANCE_INTEGER_EXT 0x8D9C
#endif
#ifndef GL_LUMINANCE_ALPHA_INTEGER_EXT
#  define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
#endif
#ifndef GL_RGBA_INTEGER_MODE_EXT
#  define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
extern PFNGLUXTEXPARAMETERIIVEXTPROC glTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
extern PFNGLUXTEXPARAMETERIUIVEXTPROC glTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
extern PFNGLUXGETTEXPARAMETERIIVEXTPROC glGetTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
extern PFNGLUXGETTEXPARAMETERIUIVEXTPROC glGetTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
extern PFNGLUXCLEARCOLORIIEXTPROC glClearColorIiEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
extern PFNGLUXCLEARCOLORIUIEXTPROC glClearColorIuiEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:03 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_texture_integer__
#define __GLUX_GL_EXT_texture_integer__

GLUX_NEW_PLUGIN(GL_EXT_texture_integer);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_RGBA32UI_EXT
#  define GL_RGBA32UI_EXT 0x8D70
#endif
#ifndef GL_RGB32UI_EXT
#  define GL_RGB32UI_EXT 0x8D71
#endif
#ifndef GL_ALPHA32UI_EXT
#  define GL_ALPHA32UI_EXT 0x8D72
#endif
#ifndef GL_INTENSITY32UI_EXT
#  define GL_INTENSITY32UI_EXT 0x8D73
#endif
#ifndef GL_LUMINANCE32UI_EXT
#  define GL_LUMINANCE32UI_EXT 0x8D74
#endif
#ifndef GL_LUMINANCE_ALPHA32UI_EXT
#  define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
#endif
#ifndef GL_RGBA16UI_EXT
#  define GL_RGBA16UI_EXT 0x8D76
#endif
#ifndef GL_RGB16UI_EXT
#  define GL_RGB16UI_EXT 0x8D77
#endif
#ifndef GL_ALPHA16UI_EXT
#  define GL_ALPHA16UI_EXT 0x8D78
#endif
#ifndef GL_INTENSITY16UI_EXT
#  define GL_INTENSITY16UI_EXT 0x8D79
#endif
#ifndef GL_LUMINANCE16UI_EXT
#  define GL_LUMINANCE16UI_EXT 0x8D7A
#endif
#ifndef GL_LUMINANCE_ALPHA16UI_EXT
#  define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
#endif
#ifndef GL_RGBA8UI_EXT
#  define GL_RGBA8UI_EXT 0x8D7C
#endif
#ifndef GL_RGB8UI_EXT
#  define GL_RGB8UI_EXT 0x8D7D
#endif
#ifndef GL_ALPHA8UI_EXT
#  define GL_ALPHA8UI_EXT 0x8D7E
#endif
#ifndef GL_INTENSITY8UI_EXT
#  define GL_INTENSITY8UI_EXT 0x8D7F
#endif
#ifndef GL_LUMINANCE8UI_EXT
#  define GL_LUMINANCE8UI_EXT 0x8D80
#endif
#ifndef GL_LUMINANCE_ALPHA8UI_EXT
#  define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
#endif
#ifndef GL_RGBA32I_EXT
#  define GL_RGBA32I_EXT 0x8D82
#endif
#ifndef GL_RGB32I_EXT
#  define GL_RGB32I_EXT 0x8D83
#endif
#ifndef GL_ALPHA32I_EXT
#  define GL_ALPHA32I_EXT 0x8D84
#endif
#ifndef GL_INTENSITY32I_EXT
#  define GL_INTENSITY32I_EXT 0x8D85
#endif
#ifndef GL_LUMINANCE32I_EXT
#  define GL_LUMINANCE32I_EXT 0x8D86
#endif
#ifndef GL_LUMINANCE_ALPHA32I_EXT
#  define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
#endif
#ifndef GL_RGBA16I_EXT
#  define GL_RGBA16I_EXT 0x8D88
#endif
#ifndef GL_RGB16I_EXT
#  define GL_RGB16I_EXT 0x8D89
#endif
#ifndef GL_ALPHA16I_EXT
#  define GL_ALPHA16I_EXT 0x8D8A
#endif
#ifndef GL_INTENSITY16I_EXT
#  define GL_INTENSITY16I_EXT 0x8D8B
#endif
#ifndef GL_LUMINANCE16I_EXT
#  define GL_LUMINANCE16I_EXT 0x8D8C
#endif
#ifndef GL_LUMINANCE_ALPHA16I_EXT
#  define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
#endif
#ifndef GL_RGBA8I_EXT
#  define GL_RGBA8I_EXT 0x8D8E
#endif
#ifndef GL_RGB8I_EXT
#  define GL_RGB8I_EXT 0x8D8F
#endif
#ifndef GL_ALPHA8I_EXT
#  define GL_ALPHA8I_EXT 0x8D90
#endif
#ifndef GL_INTENSITY8I_EXT
#  define GL_INTENSITY8I_EXT 0x8D91
#endif
#ifndef GL_LUMINANCE8I_EXT
#  define GL_LUMINANCE8I_EXT 0x8D92
#endif
#ifndef GL_LUMINANCE_ALPHA8I_EXT
#  define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
#endif
#ifndef GL_RED_INTEGER_EXT
#  define GL_RED_INTEGER_EXT 0x8D94
#endif
#ifndef GL_GREEN_INTEGER_EXT
#  define GL_GREEN_INTEGER_EXT 0x8D95
#endif
#ifndef GL_BLUE_INTEGER_EXT
#  define GL_BLUE_INTEGER_EXT 0x8D96
#endif
#ifndef GL_ALPHA_INTEGER_EXT
#  define GL_ALPHA_INTEGER_EXT 0x8D97
#endif
#ifndef GL_RGB_INTEGER_EXT
#  define GL_RGB_INTEGER_EXT 0x8D98
#endif
#ifndef GL_RGBA_INTEGER_EXT
#  define GL_RGBA_INTEGER_EXT 0x8D99
#endif
#ifndef GL_BGR_INTEGER_EXT
#  define GL_BGR_INTEGER_EXT 0x8D9A
#endif
#ifndef GL_BGRA_INTEGER_EXT
#  define GL_BGRA_INTEGER_EXT 0x8D9B
#endif
#ifndef GL_LUMINANCE_INTEGER_EXT
#  define GL_LUMINANCE_INTEGER_EXT 0x8D9C
#endif
#ifndef GL_LUMINANCE_ALPHA_INTEGER_EXT
#  define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
#endif
#ifndef GL_RGBA_INTEGER_MODE_EXT
#  define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
extern PFNGLUXTEXPARAMETERIIVEXTPROC glTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
extern PFNGLUXTEXPARAMETERIUIVEXTPROC glTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
extern PFNGLUXGETTEXPARAMETERIIVEXTPROC glGetTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
extern PFNGLUXGETTEXPARAMETERIUIVEXTPROC glGetTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
extern PFNGLUXCLEARCOLORIIEXTPROC glClearColorIiEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
extern PFNGLUXCLEARCOLORIUIEXTPROC glClearColorIuiEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:23 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_texture_integer__
#define __GLUX_GL_EXT_texture_integer__

GLUX_NEW_PLUGIN(GL_EXT_texture_integer);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_RGBA32UI_EXT
#  define GL_RGBA32UI_EXT 0x8D70
#endif
#ifndef GL_RGB32UI_EXT
#  define GL_RGB32UI_EXT 0x8D71
#endif
#ifndef GL_ALPHA32UI_EXT
#  define GL_ALPHA32UI_EXT 0x8D72
#endif
#ifndef GL_INTENSITY32UI_EXT
#  define GL_INTENSITY32UI_EXT 0x8D73
#endif
#ifndef GL_LUMINANCE32UI_EXT
#  define GL_LUMINANCE32UI_EXT 0x8D74
#endif
#ifndef GL_LUMINANCE_ALPHA32UI_EXT
#  define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
#endif
#ifndef GL_RGBA16UI_EXT
#  define GL_RGBA16UI_EXT 0x8D76
#endif
#ifndef GL_RGB16UI_EXT
#  define GL_RGB16UI_EXT 0x8D77
#endif
#ifndef GL_ALPHA16UI_EXT
#  define GL_ALPHA16UI_EXT 0x8D78
#endif
#ifndef GL_INTENSITY16UI_EXT
#  define GL_INTENSITY16UI_EXT 0x8D79
#endif
#ifndef GL_LUMINANCE16UI_EXT
#  define GL_LUMINANCE16UI_EXT 0x8D7A
#endif
#ifndef GL_LUMINANCE_ALPHA16UI_EXT
#  define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
#endif
#ifndef GL_RGBA8UI_EXT
#  define GL_RGBA8UI_EXT 0x8D7C
#endif
#ifndef GL_RGB8UI_EXT
#  define GL_RGB8UI_EXT 0x8D7D
#endif
#ifndef GL_ALPHA8UI_EXT
#  define GL_ALPHA8UI_EXT 0x8D7E
#endif
#ifndef GL_INTENSITY8UI_EXT
#  define GL_INTENSITY8UI_EXT 0x8D7F
#endif
#ifndef GL_LUMINANCE8UI_EXT
#  define GL_LUMINANCE8UI_EXT 0x8D80
#endif
#ifndef GL_LUMINANCE_ALPHA8UI_EXT
#  define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
#endif
#ifndef GL_RGBA32I_EXT
#  define GL_RGBA32I_EXT 0x8D82
#endif
#ifndef GL_RGB32I_EXT
#  define GL_RGB32I_EXT 0x8D83
#endif
#ifndef GL_ALPHA32I_EXT
#  define GL_ALPHA32I_EXT 0x8D84
#endif
#ifndef GL_INTENSITY32I_EXT
#  define GL_INTENSITY32I_EXT 0x8D85
#endif
#ifndef GL_LUMINANCE32I_EXT
#  define GL_LUMINANCE32I_EXT 0x8D86
#endif
#ifndef GL_LUMINANCE_ALPHA32I_EXT
#  define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
#endif
#ifndef GL_RGBA16I_EXT
#  define GL_RGBA16I_EXT 0x8D88
#endif
#ifndef GL_RGB16I_EXT
#  define GL_RGB16I_EXT 0x8D89
#endif
#ifndef GL_ALPHA16I_EXT
#  define GL_ALPHA16I_EXT 0x8D8A
#endif
#ifndef GL_INTENSITY16I_EXT
#  define GL_INTENSITY16I_EXT 0x8D8B
#endif
#ifndef GL_LUMINANCE16I_EXT
#  define GL_LUMINANCE16I_EXT 0x8D8C
#endif
#ifndef GL_LUMINANCE_ALPHA16I_EXT
#  define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
#endif
#ifndef GL_RGBA8I_EXT
#  define GL_RGBA8I_EXT 0x8D8E
#endif
#ifndef GL_RGB8I_EXT
#  define GL_RGB8I_EXT 0x8D8F
#endif
#ifndef GL_ALPHA8I_EXT
#  define GL_ALPHA8I_EXT 0x8D90
#endif
#ifndef GL_INTENSITY8I_EXT
#  define GL_INTENSITY8I_EXT 0x8D91
#endif
#ifndef GL_LUMINANCE8I_EXT
#  define GL_LUMINANCE8I_EXT 0x8D92
#endif
#ifndef GL_LUMINANCE_ALPHA8I_EXT
#  define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
#endif
#ifndef GL_RED_INTEGER_EXT
#  define GL_RED_INTEGER_EXT 0x8D94
#endif
#ifndef GL_GREEN_INTEGER_EXT
#  define GL_GREEN_INTEGER_EXT 0x8D95
#endif
#ifndef GL_BLUE_INTEGER_EXT
#  define GL_BLUE_INTEGER_EXT 0x8D96
#endif
#ifndef GL_ALPHA_INTEGER_EXT
#  define GL_ALPHA_INTEGER_EXT 0x8D97
#endif
#ifndef GL_RGB_INTEGER_EXT
#  define GL_RGB_INTEGER_EXT 0x8D98
#endif
#ifndef GL_RGBA_INTEGER_EXT
#  define GL_RGBA_INTEGER_EXT 0x8D99
#endif
#ifndef GL_BGR_INTEGER_EXT
#  define GL_BGR_INTEGER_EXT 0x8D9A
#endif
#ifndef GL_BGRA_INTEGER_EXT
#  define GL_BGRA_INTEGER_EXT 0x8D9B
#endif
#ifndef GL_LUMINANCE_INTEGER_EXT
#  define GL_LUMINANCE_INTEGER_EXT 0x8D9C
#endif
#ifndef GL_LUMINANCE_ALPHA_INTEGER_EXT
#  define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
#endif
#ifndef GL_RGBA_INTEGER_MODE_EXT
#  define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
extern PFNGLUXTEXPARAMETERIIVEXTPROC glTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
extern PFNGLUXTEXPARAMETERIUIVEXTPROC glTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
extern PFNGLUXGETTEXPARAMETERIIVEXTPROC glGetTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
extern PFNGLUXGETTEXPARAMETERIUIVEXTPROC glGetTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
extern PFNGLUXCLEARCOLORIIEXTPROC glClearColorIiEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
extern PFNGLUXCLEARCOLORIUIEXTPROC glClearColorIuiEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_texture_integer__
#define __GLUX_GL_EXT_texture_integer__

GLUX_NEW_PLUGIN(GL_EXT_texture_integer);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_RGBA32UI_EXT
#  define GL_RGBA32UI_EXT 0x8D70
#endif
#ifndef GL_RGB32UI_EXT
#  define GL_RGB32UI_EXT 0x8D71
#endif
#ifndef GL_ALPHA32UI_EXT
#  define GL_ALPHA32UI_EXT 0x8D72
#endif
#ifndef GL_INTENSITY32UI_EXT
#  define GL_INTENSITY32UI_EXT 0x8D73
#endif
#ifndef GL_LUMINANCE32UI_EXT
#  define GL_LUMINANCE32UI_EXT 0x8D74
#endif
#ifndef GL_LUMINANCE_ALPHA32UI_EXT
#  define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
#endif
#ifndef GL_RGBA16UI_EXT
#  define GL_RGBA16UI_EXT 0x8D76
#endif
#ifndef GL_RGB16UI_EXT
#  define GL_RGB16UI_EXT 0x8D77
#endif
#ifndef GL_ALPHA16UI_EXT
#  define GL_ALPHA16UI_EXT 0x8D78
#endif
#ifndef GL_INTENSITY16UI_EXT
#  define GL_INTENSITY16UI_EXT 0x8D79
#endif
#ifndef GL_LUMINANCE16UI_EXT
#  define GL_LUMINANCE16UI_EXT 0x8D7A
#endif
#ifndef GL_LUMINANCE_ALPHA16UI_EXT
#  define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
#endif
#ifndef GL_RGBA8UI_EXT
#  define GL_RGBA8UI_EXT 0x8D7C
#endif
#ifndef GL_RGB8UI_EXT
#  define GL_RGB8UI_EXT 0x8D7D
#endif
#ifndef GL_ALPHA8UI_EXT
#  define GL_ALPHA8UI_EXT 0x8D7E
#endif
#ifndef GL_INTENSITY8UI_EXT
#  define GL_INTENSITY8UI_EXT 0x8D7F
#endif
#ifndef GL_LUMINANCE8UI_EXT
#  define GL_LUMINANCE8UI_EXT 0x8D80
#endif
#ifndef GL_LUMINANCE_ALPHA8UI_EXT
#  define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
#endif
#ifndef GL_RGBA32I_EXT
#  define GL_RGBA32I_EXT 0x8D82
#endif
#ifndef GL_RGB32I_EXT
#  define GL_RGB32I_EXT 0x8D83
#endif
#ifndef GL_ALPHA32I_EXT
#  define GL_ALPHA32I_EXT 0x8D84
#endif
#ifndef GL_INTENSITY32I_EXT
#  define GL_INTENSITY32I_EXT 0x8D85
#endif
#ifndef GL_LUMINANCE32I_EXT
#  define GL_LUMINANCE32I_EXT 0x8D86
#endif
#ifndef GL_LUMINANCE_ALPHA32I_EXT
#  define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
#endif
#ifndef GL_RGBA16I_EXT
#  define GL_RGBA16I_EXT 0x8D88
#endif
#ifndef GL_RGB16I_EXT
#  define GL_RGB16I_EXT 0x8D89
#endif
#ifndef GL_ALPHA16I_EXT
#  define GL_ALPHA16I_EXT 0x8D8A
#endif
#ifndef GL_INTENSITY16I_EXT
#  define GL_INTENSITY16I_EXT 0x8D8B
#endif
#ifndef GL_LUMINANCE16I_EXT
#  define GL_LUMINANCE16I_EXT 0x8D8C
#endif
#ifndef GL_LUMINANCE_ALPHA16I_EXT
#  define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
#endif
#ifndef GL_RGBA8I_EXT
#  define GL_RGBA8I_EXT 0x8D8E
#endif
#ifndef GL_RGB8I_EXT
#  define GL_RGB8I_EXT 0x8D8F
#endif
#ifndef GL_ALPHA8I_EXT
#  define GL_ALPHA8I_EXT 0x8D90
#endif
#ifndef GL_INTENSITY8I_EXT
#  define GL_INTENSITY8I_EXT 0x8D91
#endif
#ifndef GL_LUMINANCE8I_EXT
#  define GL_LUMINANCE8I_EXT 0x8D92
#endif
#ifndef GL_LUMINANCE_ALPHA8I_EXT
#  define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
#endif
#ifndef GL_RED_INTEGER_EXT
#  define GL_RED_INTEGER_EXT 0x8D94
#endif
#ifndef GL_GREEN_INTEGER_EXT
#  define GL_GREEN_INTEGER_EXT 0x8D95
#endif
#ifndef GL_BLUE_INTEGER_EXT
#  define GL_BLUE_INTEGER_EXT 0x8D96
#endif
#ifndef GL_ALPHA_INTEGER_EXT
#  define GL_ALPHA_INTEGER_EXT 0x8D97
#endif
#ifndef GL_RGB_INTEGER_EXT
#  define GL_RGB_INTEGER_EXT 0x8D98
#endif
#ifndef GL_RGBA_INTEGER_EXT
#  define GL_RGBA_INTEGER_EXT 0x8D99
#endif
#ifndef GL_BGR_INTEGER_EXT
#  define GL_BGR_INTEGER_EXT 0x8D9A
#endif
#ifndef GL_BGRA_INTEGER_EXT
#  define GL_BGRA_INTEGER_EXT 0x8D9B
#endif
#ifndef GL_LUMINANCE_INTEGER_EXT
#  define GL_LUMINANCE_INTEGER_EXT 0x8D9C
#endif
#ifndef GL_LUMINANCE_ALPHA_INTEGER_EXT
#  define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
#endif
#ifndef GL_RGBA_INTEGER_MODE_EXT
#  define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
extern PFNGLUXTEXPARAMETERIIVEXTPROC glTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
extern PFNGLUXTEXPARAMETERIUIVEXTPROC glTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
extern PFNGLUXGETTEXPARAMETERIIVEXTPROC glGetTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
extern PFNGLUXGETTEXPARAMETERIUIVEXTPROC glGetTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
extern PFNGLUXCLEARCOLORIIEXTPROC glClearColorIiEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
extern PFNGLUXCLEARCOLORIUIEXTPROC glClearColorIuiEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:41:57 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_texture_integer__
#define __GLUX_GL_EXT_texture_integer__

GLUX_NEW_PLUGIN(GL_EXT_texture_integer);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_RGBA32UI_EXT
#  define GL_RGBA32UI_EXT 0x8D70
#endif
#ifndef GL_RGB32UI_EXT
#  define GL_RGB32UI_EXT 0x8D71
#endif
#ifndef GL_ALPHA32UI_EXT
#  define GL_ALPHA32UI_EXT 0x8D72
#endif
#ifndef GL_INTENSITY32UI_EXT
#  define GL_INTENSITY32UI_EXT 0x8D73
#endif
#ifndef GL_LUMINANCE32UI_EXT
#  define GL_LUMINANCE32UI_EXT 0x8D74
#endif
#ifndef GL_LUMINANCE_ALPHA32UI_EXT
#  define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
#endif
#ifndef GL_RGBA16UI_EXT
#  define GL_RGBA16UI_EXT 0x8D76
#endif
#ifndef GL_RGB16UI_EXT
#  define GL_RGB16UI_EXT 0x8D77
#endif
#ifndef GL_ALPHA16UI_EXT
#  define GL_ALPHA16UI_EXT 0x8D78
#endif
#ifndef GL_INTENSITY16UI_EXT
#  define GL_INTENSITY16UI_EXT 0x8D79
#endif
#ifndef GL_LUMINANCE16UI_EXT
#  define GL_LUMINANCE16UI_EXT 0x8D7A
#endif
#ifndef GL_LUMINANCE_ALPHA16UI_EXT
#  define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
#endif
#ifndef GL_RGBA8UI_EXT
#  define GL_RGBA8UI_EXT 0x8D7C
#endif
#ifndef GL_RGB8UI_EXT
#  define GL_RGB8UI_EXT 0x8D7D
#endif
#ifndef GL_ALPHA8UI_EXT
#  define GL_ALPHA8UI_EXT 0x8D7E
#endif
#ifndef GL_INTENSITY8UI_EXT
#  define GL_INTENSITY8UI_EXT 0x8D7F
#endif
#ifndef GL_LUMINANCE8UI_EXT
#  define GL_LUMINANCE8UI_EXT 0x8D80
#endif
#ifndef GL_LUMINANCE_ALPHA8UI_EXT
#  define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
#endif
#ifndef GL_RGBA32I_EXT
#  define GL_RGBA32I_EXT 0x8D82
#endif
#ifndef GL_RGB32I_EXT
#  define GL_RGB32I_EXT 0x8D83
#endif
#ifndef GL_ALPHA32I_EXT
#  define GL_ALPHA32I_EXT 0x8D84
#endif
#ifndef GL_INTENSITY32I_EXT
#  define GL_INTENSITY32I_EXT 0x8D85
#endif
#ifndef GL_LUMINANCE32I_EXT
#  define GL_LUMINANCE32I_EXT 0x8D86
#endif
#ifndef GL_LUMINANCE_ALPHA32I_EXT
#  define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
#endif
#ifndef GL_RGBA16I_EXT
#  define GL_RGBA16I_EXT 0x8D88
#endif
#ifndef GL_RGB16I_EXT
#  define GL_RGB16I_EXT 0x8D89
#endif
#ifndef GL_ALPHA16I_EXT
#  define GL_ALPHA16I_EXT 0x8D8A
#endif
#ifndef GL_INTENSITY16I_EXT
#  define GL_INTENSITY16I_EXT 0x8D8B
#endif
#ifndef GL_LUMINANCE16I_EXT
#  define GL_LUMINANCE16I_EXT 0x8D8C
#endif
#ifndef GL_LUMINANCE_ALPHA16I_EXT
#  define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
#endif
#ifndef GL_RGBA8I_EXT
#  define GL_RGBA8I_EXT 0x8D8E
#endif
#ifndef GL_RGB8I_EXT
#  define GL_RGB8I_EXT 0x8D8F
#endif
#ifndef GL_ALPHA8I_EXT
#  define GL_ALPHA8I_EXT 0x8D90
#endif
#ifndef GL_INTENSITY8I_EXT
#  define GL_INTENSITY8I_EXT 0x8D91
#endif
#ifndef GL_LUMINANCE8I_EXT
#  define GL_LUMINANCE8I_EXT 0x8D92
#endif
#ifndef GL_LUMINANCE_ALPHA8I_EXT
#  define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
#endif
#ifndef GL_RED_INTEGER_EXT
#  define GL_RED_INTEGER_EXT 0x8D94
#endif
#ifndef GL_GREEN_INTEGER_EXT
#  define GL_GREEN_INTEGER_EXT 0x8D95
#endif
#ifndef GL_BLUE_INTEGER_EXT
#  define GL_BLUE_INTEGER_EXT 0x8D96
#endif
#ifndef GL_ALPHA_INTEGER_EXT
#  define GL_ALPHA_INTEGER_EXT 0x8D97
#endif
#ifndef GL_RGB_INTEGER_EXT
#  define GL_RGB_INTEGER_EXT 0x8D98
#endif
#ifndef GL_RGBA_INTEGER_EXT
#  define GL_RGBA_INTEGER_EXT 0x8D99
#endif
#ifndef GL_BGR_INTEGER_EXT
#  define GL_BGR_INTEGER_EXT 0x8D9A
#endif
#ifndef GL_BGRA_INTEGER_EXT
#  define GL_BGRA_INTEGER_EXT 0x8D9B
#endif
#ifndef GL_LUMINANCE_INTEGER_EXT
#  define GL_LUMINANCE_INTEGER_EXT 0x8D9C
#endif
#ifndef GL_LUMINANCE_ALPHA_INTEGER_EXT
#  define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
#endif
#ifndef GL_RGBA_INTEGER_MODE_EXT
#  define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
extern PFNGLUXTEXPARAMETERIIVEXTPROC glTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
extern PFNGLUXTEXPARAMETERIUIVEXTPROC glTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
extern PFNGLUXGETTEXPARAMETERIIVEXTPROC glGetTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
extern PFNGLUXGETTEXPARAMETERIUIVEXTPROC glGetTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
extern PFNGLUXCLEARCOLORIIEXTPROC glClearColorIiEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
extern PFNGLUXCLEARCOLORIUIEXTPROC glClearColorIuiEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:38 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_texture_integer__
#define __GLUX_GL_EXT_texture_integer__

GLUX_NEW_PLUGIN(GL_EXT_texture_integer);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_RGBA32UI_EXT
#  define GL_RGBA32UI_EXT 0x8D70
#endif
#ifndef GL_RGB32UI_EXT
#  define GL_RGB32UI_EXT 0x8D71
#endif
#ifndef GL_ALPHA32UI_EXT
#  define GL_ALPHA32UI_EXT 0x8D72
#endif
#ifndef GL_INTENSITY32UI_EXT
#  define GL_INTENSITY32UI_EXT 0x8D73
#endif
#ifndef GL_LUMINANCE32UI_EXT
#  define GL_LUMINANCE32UI_EXT 0x8D74
#endif
#ifndef GL_LUMINANCE_ALPHA32UI_EXT
#  define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
#endif
#ifndef GL_RGBA16UI_EXT
#  define GL_RGBA16UI_EXT 0x8D76
#endif
#ifndef GL_RGB16UI_EXT
#  define GL_RGB16UI_EXT 0x8D77
#endif
#ifndef GL_ALPHA16UI_EXT
#  define GL_ALPHA16UI_EXT 0x8D78
#endif
#ifndef GL_INTENSITY16UI_EXT
#  define GL_INTENSITY16UI_EXT 0x8D79
#endif
#ifndef GL_LUMINANCE16UI_EXT
#  define GL_LUMINANCE16UI_EXT 0x8D7A
#endif
#ifndef GL_LUMINANCE_ALPHA16UI_EXT
#  define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
#endif
#ifndef GL_RGBA8UI_EXT
#  define GL_RGBA8UI_EXT 0x8D7C
#endif
#ifndef GL_RGB8UI_EXT
#  define GL_RGB8UI_EXT 0x8D7D
#endif
#ifndef GL_ALPHA8UI_EXT
#  define GL_ALPHA8UI_EXT 0x8D7E
#endif
#ifndef GL_INTENSITY8UI_EXT
#  define GL_INTENSITY8UI_EXT 0x8D7F
#endif
#ifndef GL_LUMINANCE8UI_EXT
#  define GL_LUMINANCE8UI_EXT 0x8D80
#endif
#ifndef GL_LUMINANCE_ALPHA8UI_EXT
#  define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
#endif
#ifndef GL_RGBA32I_EXT
#  define GL_RGBA32I_EXT 0x8D82
#endif
#ifndef GL_RGB32I_EXT
#  define GL_RGB32I_EXT 0x8D83
#endif
#ifndef GL_ALPHA32I_EXT
#  define GL_ALPHA32I_EXT 0x8D84
#endif
#ifndef GL_INTENSITY32I_EXT
#  define GL_INTENSITY32I_EXT 0x8D85
#endif
#ifndef GL_LUMINANCE32I_EXT
#  define GL_LUMINANCE32I_EXT 0x8D86
#endif
#ifndef GL_LUMINANCE_ALPHA32I_EXT
#  define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
#endif
#ifndef GL_RGBA16I_EXT
#  define GL_RGBA16I_EXT 0x8D88
#endif
#ifndef GL_RGB16I_EXT
#  define GL_RGB16I_EXT 0x8D89
#endif
#ifndef GL_ALPHA16I_EXT
#  define GL_ALPHA16I_EXT 0x8D8A
#endif
#ifndef GL_INTENSITY16I_EXT
#  define GL_INTENSITY16I_EXT 0x8D8B
#endif
#ifndef GL_LUMINANCE16I_EXT
#  define GL_LUMINANCE16I_EXT 0x8D8C
#endif
#ifndef GL_LUMINANCE_ALPHA16I_EXT
#  define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
#endif
#ifndef GL_RGBA8I_EXT
#  define GL_RGBA8I_EXT 0x8D8E
#endif
#ifndef GL_RGB8I_EXT
#  define GL_RGB8I_EXT 0x8D8F
#endif
#ifndef GL_ALPHA8I_EXT
#  define GL_ALPHA8I_EXT 0x8D90
#endif
#ifndef GL_INTENSITY8I_EXT
#  define GL_INTENSITY8I_EXT 0x8D91
#endif
#ifndef GL_LUMINANCE8I_EXT
#  define GL_LUMINANCE8I_EXT 0x8D92
#endif
#ifndef GL_LUMINANCE_ALPHA8I_EXT
#  define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
#endif
#ifndef GL_RED_INTEGER_EXT
#  define GL_RED_INTEGER_EXT 0x8D94
#endif
#ifndef GL_GREEN_INTEGER_EXT
#  define GL_GREEN_INTEGER_EXT 0x8D95
#endif
#ifndef GL_BLUE_INTEGER_EXT
#  define GL_BLUE_INTEGER_EXT 0x8D96
#endif
#ifndef GL_ALPHA_INTEGER_EXT
#  define GL_ALPHA_INTEGER_EXT 0x8D97
#endif
#ifndef GL_RGB_INTEGER_EXT
#  define GL_RGB_INTEGER_EXT 0x8D98
#endif
#ifndef GL_RGBA_INTEGER_EXT
#  define GL_RGBA_INTEGER_EXT 0x8D99
#endif
#ifndef GL_BGR_INTEGER_EXT
#  define GL_BGR_INTEGER_EXT 0x8D9A
#endif
#ifndef GL_BGRA_INTEGER_EXT
#  define GL_BGRA_INTEGER_EXT 0x8D9B
#endif
#ifndef GL_LUMINANCE_INTEGER_EXT
#  define GL_LUMINANCE_INTEGER_EXT 0x8D9C
#endif
#ifndef GL_LUMINANCE_ALPHA_INTEGER_EXT
#  define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
#endif
#ifndef GL_RGBA_INTEGER_MODE_EXT
#  define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
extern PFNGLUXTEXPARAMETERIIVEXTPROC glTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
extern PFNGLUXTEXPARAMETERIUIVEXTPROC glTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
extern PFNGLUXGETTEXPARAMETERIIVEXTPROC glGetTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
extern PFNGLUXGETTEXPARAMETERIUIVEXTPROC glGetTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
extern PFNGLUXCLEARCOLORIIEXTPROC glClearColorIiEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
extern PFNGLUXCLEARCOLORIUIEXTPROC glClearColorIuiEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:09:58 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_texture_integer__
#define __GLUX_GL_EXT_texture_integer__

GLUX_NEW_PLUGIN(GL_EXT_texture_integer);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_RGBA32UI_EXT
#  define GL_RGBA32UI_EXT 0x8D70
#endif
#ifndef GL_RGB32UI_EXT
#  define GL_RGB32UI_EXT 0x8D71
#endif
#ifndef GL_ALPHA32UI_EXT
#  define GL_ALPHA32UI_EXT 0x8D72
#endif
#ifndef GL_INTENSITY32UI_EXT
#  define GL_INTENSITY32UI_EXT 0x8D73
#endif
#ifndef GL_LUMINANCE32UI_EXT
#  define GL_LUMINANCE32UI_EXT 0x8D74
#endif
#ifndef GL_LUMINANCE_ALPHA32UI_EXT
#  define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
#endif
#ifndef GL_RGBA16UI_EXT
#  define GL_RGBA16UI_EXT 0x8D76
#endif
#ifndef GL_RGB16UI_EXT
#  define GL_RGB16UI_EXT 0x8D77
#endif
#ifndef GL_ALPHA16UI_EXT
#  define GL_ALPHA16UI_EXT 0x8D78
#endif
#ifndef GL_INTENSITY16UI_EXT
#  define GL_INTENSITY16UI_EXT 0x8D79
#endif
#ifndef GL_LUMINANCE16UI_EXT
#  define GL_LUMINANCE16UI_EXT 0x8D7A
#endif
#ifndef GL_LUMINANCE_ALPHA16UI_EXT
#  define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
#endif
#ifndef GL_RGBA8UI_EXT
#  define GL_RGBA8UI_EXT 0x8D7C
#endif
#ifndef GL_RGB8UI_EXT
#  define GL_RGB8UI_EXT 0x8D7D
#endif
#ifndef GL_ALPHA8UI_EXT
#  define GL_ALPHA8UI_EXT 0x8D7E
#endif
#ifndef GL_INTENSITY8UI_EXT
#  define GL_INTENSITY8UI_EXT 0x8D7F
#endif
#ifndef GL_LUMINANCE8UI_EXT
#  define GL_LUMINANCE8UI_EXT 0x8D80
#endif
#ifndef GL_LUMINANCE_ALPHA8UI_EXT
#  define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
#endif
#ifndef GL_RGBA32I_EXT
#  define GL_RGBA32I_EXT 0x8D82
#endif
#ifndef GL_RGB32I_EXT
#  define GL_RGB32I_EXT 0x8D83
#endif
#ifndef GL_ALPHA32I_EXT
#  define GL_ALPHA32I_EXT 0x8D84
#endif
#ifndef GL_INTENSITY32I_EXT
#  define GL_INTENSITY32I_EXT 0x8D85
#endif
#ifndef GL_LUMINANCE32I_EXT
#  define GL_LUMINANCE32I_EXT 0x8D86
#endif
#ifndef GL_LUMINANCE_ALPHA32I_EXT
#  define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
#endif
#ifndef GL_RGBA16I_EXT
#  define GL_RGBA16I_EXT 0x8D88
#endif
#ifndef GL_RGB16I_EXT
#  define GL_RGB16I_EXT 0x8D89
#endif
#ifndef GL_ALPHA16I_EXT
#  define GL_ALPHA16I_EXT 0x8D8A
#endif
#ifndef GL_INTENSITY16I_EXT
#  define GL_INTENSITY16I_EXT 0x8D8B
#endif
#ifndef GL_LUMINANCE16I_EXT
#  define GL_LUMINANCE16I_EXT 0x8D8C
#endif
#ifndef GL_LUMINANCE_ALPHA16I_EXT
#  define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
#endif
#ifndef GL_RGBA8I_EXT
#  define GL_RGBA8I_EXT 0x8D8E
#endif
#ifndef GL_RGB8I_EXT
#  define GL_RGB8I_EXT 0x8D8F
#endif
#ifndef GL_ALPHA8I_EXT
#  define GL_ALPHA8I_EXT 0x8D90
#endif
#ifndef GL_INTENSITY8I_EXT
#  define GL_INTENSITY8I_EXT 0x8D91
#endif
#ifndef GL_LUMINANCE8I_EXT
#  define GL_LUMINANCE8I_EXT 0x8D92
#endif
#ifndef GL_LUMINANCE_ALPHA8I_EXT
#  define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
#endif
#ifndef GL_RED_INTEGER_EXT
#  define GL_RED_INTEGER_EXT 0x8D94
#endif
#ifndef GL_GREEN_INTEGER_EXT
#  define GL_GREEN_INTEGER_EXT 0x8D95
#endif
#ifndef GL_BLUE_INTEGER_EXT
#  define GL_BLUE_INTEGER_EXT 0x8D96
#endif
#ifndef GL_ALPHA_INTEGER_EXT
#  define GL_ALPHA_INTEGER_EXT 0x8D97
#endif
#ifndef GL_RGB_INTEGER_EXT
#  define GL_RGB_INTEGER_EXT 0x8D98
#endif
#ifndef GL_RGBA_INTEGER_EXT
#  define GL_RGBA_INTEGER_EXT 0x8D99
#endif
#ifndef GL_BGR_INTEGER_EXT
#  define GL_BGR_INTEGER_EXT 0x8D9A
#endif
#ifndef GL_BGRA_INTEGER_EXT
#  define GL_BGRA_INTEGER_EXT 0x8D9B
#endif
#ifndef GL_LUMINANCE_INTEGER_EXT
#  define GL_LUMINANCE_INTEGER_EXT 0x8D9C
#endif
#ifndef GL_LUMINANCE_ALPHA_INTEGER_EXT
#  define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
#endif
#ifndef GL_RGBA_INTEGER_MODE_EXT
#  define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
extern PFNGLUXTEXPARAMETERIIVEXTPROC glTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
extern PFNGLUXTEXPARAMETERIUIVEXTPROC glTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
extern PFNGLUXGETTEXPARAMETERIIVEXTPROC glGetTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
extern PFNGLUXGETTEXPARAMETERIUIVEXTPROC glGetTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
extern PFNGLUXCLEARCOLORIIEXTPROC glClearColorIiEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
extern PFNGLUXCLEARCOLORIUIEXTPROC glClearColorIuiEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:19:58 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_texture_integer__
#define __GLUX_GL_EXT_texture_integer__

GLUX_NEW_PLUGIN(GL_EXT_texture_integer);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_RGBA32UI_EXT
#  define GL_RGBA32UI_EXT 0x8D70
#endif
#ifndef GL_RGB32UI_EXT
#  define GL_RGB32UI_EXT 0x8D71
#endif
#ifndef GL_ALPHA32UI_EXT
#  define GL_ALPHA32UI_EXT 0x8D72
#endif
#ifndef GL_INTENSITY32UI_EXT
#  define GL_INTENSITY32UI_EXT 0x8D73
#endif
#ifndef GL_LUMINANCE32UI_EXT
#  define GL_LUMINANCE32UI_EXT 0x8D74
#endif
#ifndef GL_LUMINANCE_ALPHA32UI_EXT
#  define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
#endif
#ifndef GL_RGBA16UI_EXT
#  define GL_RGBA16UI_EXT 0x8D76
#endif
#ifndef GL_RGB16UI_EXT
#  define GL_RGB16UI_EXT 0x8D77
#endif
#ifndef GL_ALPHA16UI_EXT
#  define GL_ALPHA16UI_EXT 0x8D78
#endif
#ifndef GL_INTENSITY16UI_EXT
#  define GL_INTENSITY16UI_EXT 0x8D79
#endif
#ifndef GL_LUMINANCE16UI_EXT
#  define GL_LUMINANCE16UI_EXT 0x8D7A
#endif
#ifndef GL_LUMINANCE_ALPHA16UI_EXT
#  define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
#endif
#ifndef GL_RGBA8UI_EXT
#  define GL_RGBA8UI_EXT 0x8D7C
#endif
#ifndef GL_RGB8UI_EXT
#  define GL_RGB8UI_EXT 0x8D7D
#endif
#ifndef GL_ALPHA8UI_EXT
#  define GL_ALPHA8UI_EXT 0x8D7E
#endif
#ifndef GL_INTENSITY8UI_EXT
#  define GL_INTENSITY8UI_EXT 0x8D7F
#endif
#ifndef GL_LUMINANCE8UI_EXT
#  define GL_LUMINANCE8UI_EXT 0x8D80
#endif
#ifndef GL_LUMINANCE_ALPHA8UI_EXT
#  define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
#endif
#ifndef GL_RGBA32I_EXT
#  define GL_RGBA32I_EXT 0x8D82
#endif
#ifndef GL_RGB32I_EXT
#  define GL_RGB32I_EXT 0x8D83
#endif
#ifndef GL_ALPHA32I_EXT
#  define GL_ALPHA32I_EXT 0x8D84
#endif
#ifndef GL_INTENSITY32I_EXT
#  define GL_INTENSITY32I_EXT 0x8D85
#endif
#ifndef GL_LUMINANCE32I_EXT
#  define GL_LUMINANCE32I_EXT 0x8D86
#endif
#ifndef GL_LUMINANCE_ALPHA32I_EXT
#  define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
#endif
#ifndef GL_RGBA16I_EXT
#  define GL_RGBA16I_EXT 0x8D88
#endif
#ifndef GL_RGB16I_EXT
#  define GL_RGB16I_EXT 0x8D89
#endif
#ifndef GL_ALPHA16I_EXT
#  define GL_ALPHA16I_EXT 0x8D8A
#endif
#ifndef GL_INTENSITY16I_EXT
#  define GL_INTENSITY16I_EXT 0x8D8B
#endif
#ifndef GL_LUMINANCE16I_EXT
#  define GL_LUMINANCE16I_EXT 0x8D8C
#endif
#ifndef GL_LUMINANCE_ALPHA16I_EXT
#  define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
#endif
#ifndef GL_RGBA8I_EXT
#  define GL_RGBA8I_EXT 0x8D8E
#endif
#ifndef GL_RGB8I_EXT
#  define GL_RGB8I_EXT 0x8D8F
#endif
#ifndef GL_ALPHA8I_EXT
#  define GL_ALPHA8I_EXT 0x8D90
#endif
#ifndef GL_INTENSITY8I_EXT
#  define GL_INTENSITY8I_EXT 0x8D91
#endif
#ifndef GL_LUMINANCE8I_EXT
#  define GL_LUMINANCE8I_EXT 0x8D92
#endif
#ifndef GL_LUMINANCE_ALPHA8I_EXT
#  define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
#endif
#ifndef GL_RED_INTEGER_EXT
#  define GL_RED_INTEGER_EXT 0x8D94
#endif
#ifndef GL_GREEN_INTEGER_EXT
#  define GL_GREEN_INTEGER_EXT 0x8D95
#endif
#ifndef GL_BLUE_INTEGER_EXT
#  define GL_BLUE_INTEGER_EXT 0x8D96
#endif
#ifndef GL_ALPHA_INTEGER_EXT
#  define GL_ALPHA_INTEGER_EXT 0x8D97
#endif
#ifndef GL_RGB_INTEGER_EXT
#  define GL_RGB_INTEGER_EXT 0x8D98
#endif
#ifndef GL_RGBA_INTEGER_EXT
#  define GL_RGBA_INTEGER_EXT 0x8D99
#endif
#ifndef GL_BGR_INTEGER_EXT
#  define GL_BGR_INTEGER_EXT 0x8D9A
#endif
#ifndef GL_BGRA_INTEGER_EXT
#  define GL_BGRA_INTEGER_EXT 0x8D9B
#endif
#ifndef GL_LUMINANCE_INTEGER_EXT
#  define GL_LUMINANCE_INTEGER_EXT 0x8D9C
#endif
#ifndef GL_LUMINANCE_ALPHA_INTEGER_EXT
#  define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
#endif
#ifndef GL_RGBA_INTEGER_MODE_EXT
#  define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
extern PFNGLUXTEXPARAMETERIIVEXTPROC glTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
extern PFNGLUXTEXPARAMETERIUIVEXTPROC glTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
extern PFNGLUXGETTEXPARAMETERIIVEXTPROC glGetTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
extern PFNGLUXGETTEXPARAMETERIUIVEXTPROC glGetTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
extern PFNGLUXCLEARCOLORIIEXTPROC glClearColorIiEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
extern PFNGLUXCLEARCOLORIUIEXTPROC glClearColorIuiEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:42:56 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_texture_integer__
#define __GLUX_GL_EXT_texture_integer__

GLUX_NEW_PLUGIN(GL_EXT_texture_integer)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_RGBA32UI_EXT
#  define GL_RGBA32UI_EXT 0x8D70
#endif
#ifndef GL_RGB32UI_EXT
#  define GL_RGB32UI_EXT 0x8D71
#endif
#ifndef GL_ALPHA32UI_EXT
#  define GL_ALPHA32UI_EXT 0x8D72
#endif
#ifndef GL_INTENSITY32UI_EXT
#  define GL_INTENSITY32UI_EXT 0x8D73
#endif
#ifndef GL_LUMINANCE32UI_EXT
#  define GL_LUMINANCE32UI_EXT 0x8D74
#endif
#ifndef GL_LUMINANCE_ALPHA32UI_EXT
#  define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
#endif
#ifndef GL_RGBA16UI_EXT
#  define GL_RGBA16UI_EXT 0x8D76
#endif
#ifndef GL_RGB16UI_EXT
#  define GL_RGB16UI_EXT 0x8D77
#endif
#ifndef GL_ALPHA16UI_EXT
#  define GL_ALPHA16UI_EXT 0x8D78
#endif
#ifndef GL_INTENSITY16UI_EXT
#  define GL_INTENSITY16UI_EXT 0x8D79
#endif
#ifndef GL_LUMINANCE16UI_EXT
#  define GL_LUMINANCE16UI_EXT 0x8D7A
#endif
#ifndef GL_LUMINANCE_ALPHA16UI_EXT
#  define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
#endif
#ifndef GL_RGBA8UI_EXT
#  define GL_RGBA8UI_EXT 0x8D7C
#endif
#ifndef GL_RGB8UI_EXT
#  define GL_RGB8UI_EXT 0x8D7D
#endif
#ifndef GL_ALPHA8UI_EXT
#  define GL_ALPHA8UI_EXT 0x8D7E
#endif
#ifndef GL_INTENSITY8UI_EXT
#  define GL_INTENSITY8UI_EXT 0x8D7F
#endif
#ifndef GL_LUMINANCE8UI_EXT
#  define GL_LUMINANCE8UI_EXT 0x8D80
#endif
#ifndef GL_LUMINANCE_ALPHA8UI_EXT
#  define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
#endif
#ifndef GL_RGBA32I_EXT
#  define GL_RGBA32I_EXT 0x8D82
#endif
#ifndef GL_RGB32I_EXT
#  define GL_RGB32I_EXT 0x8D83
#endif
#ifndef GL_ALPHA32I_EXT
#  define GL_ALPHA32I_EXT 0x8D84
#endif
#ifndef GL_INTENSITY32I_EXT
#  define GL_INTENSITY32I_EXT 0x8D85
#endif
#ifndef GL_LUMINANCE32I_EXT
#  define GL_LUMINANCE32I_EXT 0x8D86
#endif
#ifndef GL_LUMINANCE_ALPHA32I_EXT
#  define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
#endif
#ifndef GL_RGBA16I_EXT
#  define GL_RGBA16I_EXT 0x8D88
#endif
#ifndef GL_RGB16I_EXT
#  define GL_RGB16I_EXT 0x8D89
#endif
#ifndef GL_ALPHA16I_EXT
#  define GL_ALPHA16I_EXT 0x8D8A
#endif
#ifndef GL_INTENSITY16I_EXT
#  define GL_INTENSITY16I_EXT 0x8D8B
#endif
#ifndef GL_LUMINANCE16I_EXT
#  define GL_LUMINANCE16I_EXT 0x8D8C
#endif
#ifndef GL_LUMINANCE_ALPHA16I_EXT
#  define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
#endif
#ifndef GL_RGBA8I_EXT
#  define GL_RGBA8I_EXT 0x8D8E
#endif
#ifndef GL_RGB8I_EXT
#  define GL_RGB8I_EXT 0x8D8F
#endif
#ifndef GL_ALPHA8I_EXT
#  define GL_ALPHA8I_EXT 0x8D90
#endif
#ifndef GL_INTENSITY8I_EXT
#  define GL_INTENSITY8I_EXT 0x8D91
#endif
#ifndef GL_LUMINANCE8I_EXT
#  define GL_LUMINANCE8I_EXT 0x8D92
#endif
#ifndef GL_LUMINANCE_ALPHA8I_EXT
#  define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
#endif
#ifndef GL_RED_INTEGER_EXT
#  define GL_RED_INTEGER_EXT 0x8D94
#endif
#ifndef GL_GREEN_INTEGER_EXT
#  define GL_GREEN_INTEGER_EXT 0x8D95
#endif
#ifndef GL_BLUE_INTEGER_EXT
#  define GL_BLUE_INTEGER_EXT 0x8D96
#endif
#ifndef GL_ALPHA_INTEGER_EXT
#  define GL_ALPHA_INTEGER_EXT 0x8D97
#endif
#ifndef GL_RGB_INTEGER_EXT
#  define GL_RGB_INTEGER_EXT 0x8D98
#endif
#ifndef GL_RGBA_INTEGER_EXT
#  define GL_RGBA_INTEGER_EXT 0x8D99
#endif
#ifndef GL_BGR_INTEGER_EXT
#  define GL_BGR_INTEGER_EXT 0x8D9A
#endif
#ifndef GL_BGRA_INTEGER_EXT
#  define GL_BGRA_INTEGER_EXT 0x8D9B
#endif
#ifndef GL_LUMINANCE_INTEGER_EXT
#  define GL_LUMINANCE_INTEGER_EXT 0x8D9C
#endif
#ifndef GL_LUMINANCE_ALPHA_INTEGER_EXT
#  define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
#endif
#ifndef GL_RGBA_INTEGER_MODE_EXT
#  define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
extern PFNGLUXTEXPARAMETERIIVEXTPROC glTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
extern PFNGLUXTEXPARAMETERIUIVEXTPROC glTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
extern PFNGLUXGETTEXPARAMETERIIVEXTPROC glGetTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
extern PFNGLUXGETTEXPARAMETERIUIVEXTPROC glGetTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
extern PFNGLUXCLEARCOLORIIEXTPROC glClearColorIiEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
extern PFNGLUXCLEARCOLORIUIEXTPROC glClearColorIuiEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
