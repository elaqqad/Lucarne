
// --------------------------------------------------------
// Generated by glux perl script (Fri Dec  7 13:47:25 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_shader_subroutine__
#define __GLUX_GL_ARB_shader_subroutine__

GLUX_NEW_PLUGIN(GL_ARB_shader_subroutine);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ACTIVE_SUBROUTINES
#  define GL_ACTIVE_SUBROUTINES 0x8DE5
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORMS
#  define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#endif
#ifndef GL_ACTIVE_SUBROUTINE_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#endif
#ifndef GL_MAX_SUBROUTINES
#  define GL_MAX_SUBROUTINES 0x8DE7
#endif
#ifndef GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#endif
#ifndef GL_NUM_COMPATIBLE_SUBROUTINES
#  define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#endif
#ifndef GL_COMPATIBLE_SUBROUTINES
#  define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
typedef GLint (APIENTRYP PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
typedef GLuint (APIENTRYP PFNGLUXGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
typedef void (APIENTRYP PFNGLUXUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
typedef void (APIENTRYP PFNGLUXGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
extern PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC glGetSubroutineUniformLocation;
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
extern PFNGLUXGETSUBROUTINEINDEXPROC glGetSubroutineIndex;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC glGetActiveSubroutineUniformiv;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC glGetActiveSubroutineUniformName;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
extern PFNGLUXGETACTIVESUBROUTINENAMEPROC glGetActiveSubroutineName;
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
extern PFNGLUXUNIFORMSUBROUTINESUIVPROC glUniformSubroutinesuiv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
extern PFNGLUXGETUNIFORMSUBROUTINEUIVPROC glGetUniformSubroutineuiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
extern PFNGLUXGETPROGRAMSTAGEIVPROC glGetProgramStageiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:38 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_shader_subroutine__
#define __GLUX_GL_ARB_shader_subroutine__

GLUX_NEW_PLUGIN(GL_ARB_shader_subroutine);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ACTIVE_SUBROUTINES
#  define GL_ACTIVE_SUBROUTINES 0x8DE5
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORMS
#  define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#endif
#ifndef GL_ACTIVE_SUBROUTINE_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#endif
#ifndef GL_MAX_SUBROUTINES
#  define GL_MAX_SUBROUTINES 0x8DE7
#endif
#ifndef GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#endif
#ifndef GL_NUM_COMPATIBLE_SUBROUTINES
#  define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#endif
#ifndef GL_COMPATIBLE_SUBROUTINES
#  define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
typedef GLint (APIENTRYP PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
typedef GLuint (APIENTRYP PFNGLUXGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
typedef void (APIENTRYP PFNGLUXUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
typedef void (APIENTRYP PFNGLUXGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
extern PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC glGetSubroutineUniformLocation;
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
extern PFNGLUXGETSUBROUTINEINDEXPROC glGetSubroutineIndex;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC glGetActiveSubroutineUniformiv;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC glGetActiveSubroutineUniformName;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
extern PFNGLUXGETACTIVESUBROUTINENAMEPROC glGetActiveSubroutineName;
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
extern PFNGLUXUNIFORMSUBROUTINESUIVPROC glUniformSubroutinesuiv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
extern PFNGLUXGETUNIFORMSUBROUTINEUIVPROC glGetUniformSubroutineuiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
extern PFNGLUXGETPROGRAMSTAGEIVPROC glGetProgramStageiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:08:53 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_shader_subroutine__
#define __GLUX_GL_ARB_shader_subroutine__

GLUX_NEW_PLUGIN(GL_ARB_shader_subroutine);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ACTIVE_SUBROUTINES
#  define GL_ACTIVE_SUBROUTINES 0x8DE5
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORMS
#  define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#endif
#ifndef GL_ACTIVE_SUBROUTINE_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#endif
#ifndef GL_MAX_SUBROUTINES
#  define GL_MAX_SUBROUTINES 0x8DE7
#endif
#ifndef GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#endif
#ifndef GL_NUM_COMPATIBLE_SUBROUTINES
#  define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#endif
#ifndef GL_COMPATIBLE_SUBROUTINES
#  define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
typedef GLint (APIENTRYP PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
typedef GLuint (APIENTRYP PFNGLUXGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
typedef void (APIENTRYP PFNGLUXUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
typedef void (APIENTRYP PFNGLUXGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
extern PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC glGetSubroutineUniformLocation;
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
extern PFNGLUXGETSUBROUTINEINDEXPROC glGetSubroutineIndex;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC glGetActiveSubroutineUniformiv;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC glGetActiveSubroutineUniformName;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
extern PFNGLUXGETACTIVESUBROUTINENAMEPROC glGetActiveSubroutineName;
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
extern PFNGLUXUNIFORMSUBROUTINESUIVPROC glUniformSubroutinesuiv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
extern PFNGLUXGETUNIFORMSUBROUTINEUIVPROC glGetUniformSubroutineuiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
extern PFNGLUXGETPROGRAMSTAGEIVPROC glGetProgramStageiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Dec  8 07:10:13 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_shader_subroutine__
#define __GLUX_GL_ARB_shader_subroutine__

GLUX_NEW_PLUGIN(GL_ARB_shader_subroutine);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ACTIVE_SUBROUTINES
#  define GL_ACTIVE_SUBROUTINES 0x8DE5
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORMS
#  define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#endif
#ifndef GL_ACTIVE_SUBROUTINE_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#endif
#ifndef GL_MAX_SUBROUTINES
#  define GL_MAX_SUBROUTINES 0x8DE7
#endif
#ifndef GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#endif
#ifndef GL_NUM_COMPATIBLE_SUBROUTINES
#  define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#endif
#ifndef GL_COMPATIBLE_SUBROUTINES
#  define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
typedef GLint (APIENTRYP PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
typedef GLuint (APIENTRYP PFNGLUXGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
typedef void (APIENTRYP PFNGLUXUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
typedef void (APIENTRYP PFNGLUXGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
extern PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC glGetSubroutineUniformLocation;
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
extern PFNGLUXGETSUBROUTINEINDEXPROC glGetSubroutineIndex;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC glGetActiveSubroutineUniformiv;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC glGetActiveSubroutineUniformName;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
extern PFNGLUXGETACTIVESUBROUTINENAMEPROC glGetActiveSubroutineName;
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
extern PFNGLUXUNIFORMSUBROUTINESUIVPROC glUniformSubroutinesuiv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
extern PFNGLUXGETUNIFORMSUBROUTINEUIVPROC glGetUniformSubroutineuiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
extern PFNGLUXGETPROGRAMSTAGEIVPROC glGetProgramStageiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:03:28 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_shader_subroutine__
#define __GLUX_GL_ARB_shader_subroutine__

GLUX_NEW_PLUGIN(GL_ARB_shader_subroutine);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ACTIVE_SUBROUTINES
#  define GL_ACTIVE_SUBROUTINES 0x8DE5
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORMS
#  define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#endif
#ifndef GL_ACTIVE_SUBROUTINE_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#endif
#ifndef GL_MAX_SUBROUTINES
#  define GL_MAX_SUBROUTINES 0x8DE7
#endif
#ifndef GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#endif
#ifndef GL_NUM_COMPATIBLE_SUBROUTINES
#  define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#endif
#ifndef GL_COMPATIBLE_SUBROUTINES
#  define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
typedef GLint (APIENTRYP PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
typedef GLuint (APIENTRYP PFNGLUXGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
typedef void (APIENTRYP PFNGLUXUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
typedef void (APIENTRYP PFNGLUXGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
extern PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC glGetSubroutineUniformLocation;
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
extern PFNGLUXGETSUBROUTINEINDEXPROC glGetSubroutineIndex;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC glGetActiveSubroutineUniformiv;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC glGetActiveSubroutineUniformName;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
extern PFNGLUXGETACTIVESUBROUTINENAMEPROC glGetActiveSubroutineName;
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
extern PFNGLUXUNIFORMSUBROUTINESUIVPROC glUniformSubroutinesuiv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
extern PFNGLUXGETUNIFORMSUBROUTINEUIVPROC glGetUniformSubroutineuiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
extern PFNGLUXGETPROGRAMSTAGEIVPROC glGetProgramStageiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:07:32 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_shader_subroutine__
#define __GLUX_GL_ARB_shader_subroutine__

GLUX_NEW_PLUGIN(GL_ARB_shader_subroutine);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ACTIVE_SUBROUTINES
#  define GL_ACTIVE_SUBROUTINES 0x8DE5
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORMS
#  define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#endif
#ifndef GL_ACTIVE_SUBROUTINE_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#endif
#ifndef GL_MAX_SUBROUTINES
#  define GL_MAX_SUBROUTINES 0x8DE7
#endif
#ifndef GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#endif
#ifndef GL_NUM_COMPATIBLE_SUBROUTINES
#  define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#endif
#ifndef GL_COMPATIBLE_SUBROUTINES
#  define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
typedef GLint (APIENTRYP PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
typedef GLuint (APIENTRYP PFNGLUXGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
typedef void (APIENTRYP PFNGLUXUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
typedef void (APIENTRYP PFNGLUXGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
extern PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC glGetSubroutineUniformLocation;
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
extern PFNGLUXGETSUBROUTINEINDEXPROC glGetSubroutineIndex;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC glGetActiveSubroutineUniformiv;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC glGetActiveSubroutineUniformName;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
extern PFNGLUXGETACTIVESUBROUTINENAMEPROC glGetActiveSubroutineName;
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
extern PFNGLUXUNIFORMSUBROUTINESUIVPROC glUniformSubroutinesuiv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
extern PFNGLUXGETUNIFORMSUBROUTINEUIVPROC glGetUniformSubroutineuiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
extern PFNGLUXGETPROGRAMSTAGEIVPROC glGetProgramStageiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Dec 21 11:25:51 2012)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_shader_subroutine__
#define __GLUX_GL_ARB_shader_subroutine__

GLUX_NEW_PLUGIN(GL_ARB_shader_subroutine);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ACTIVE_SUBROUTINES
#  define GL_ACTIVE_SUBROUTINES 0x8DE5
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORMS
#  define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#endif
#ifndef GL_ACTIVE_SUBROUTINE_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#endif
#ifndef GL_MAX_SUBROUTINES
#  define GL_MAX_SUBROUTINES 0x8DE7
#endif
#ifndef GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#endif
#ifndef GL_NUM_COMPATIBLE_SUBROUTINES
#  define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#endif
#ifndef GL_COMPATIBLE_SUBROUTINES
#  define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
typedef GLint (APIENTRYP PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
typedef GLuint (APIENTRYP PFNGLUXGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
typedef void (APIENTRYP PFNGLUXUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
typedef void (APIENTRYP PFNGLUXGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
extern PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC glGetSubroutineUniformLocation;
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
extern PFNGLUXGETSUBROUTINEINDEXPROC glGetSubroutineIndex;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC glGetActiveSubroutineUniformiv;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC glGetActiveSubroutineUniformName;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
extern PFNGLUXGETACTIVESUBROUTINENAMEPROC glGetActiveSubroutineName;
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
extern PFNGLUXUNIFORMSUBROUTINESUIVPROC glUniformSubroutinesuiv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
extern PFNGLUXGETUNIFORMSUBROUTINEUIVPROC glGetUniformSubroutineuiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
extern PFNGLUXGETPROGRAMSTAGEIVPROC glGetProgramStageiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:25:11 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_shader_subroutine__
#define __GLUX_GL_ARB_shader_subroutine__

GLUX_NEW_PLUGIN(GL_ARB_shader_subroutine);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ACTIVE_SUBROUTINES
#  define GL_ACTIVE_SUBROUTINES 0x8DE5
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORMS
#  define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#endif
#ifndef GL_ACTIVE_SUBROUTINE_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#endif
#ifndef GL_MAX_SUBROUTINES
#  define GL_MAX_SUBROUTINES 0x8DE7
#endif
#ifndef GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#endif
#ifndef GL_NUM_COMPATIBLE_SUBROUTINES
#  define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#endif
#ifndef GL_COMPATIBLE_SUBROUTINES
#  define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
typedef GLint (APIENTRYP PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
typedef GLuint (APIENTRYP PFNGLUXGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
typedef void (APIENTRYP PFNGLUXUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
typedef void (APIENTRYP PFNGLUXGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
extern PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC glGetSubroutineUniformLocation;
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
extern PFNGLUXGETSUBROUTINEINDEXPROC glGetSubroutineIndex;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC glGetActiveSubroutineUniformiv;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC glGetActiveSubroutineUniformName;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
extern PFNGLUXGETACTIVESUBROUTINENAMEPROC glGetActiveSubroutineName;
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
extern PFNGLUXUNIFORMSUBROUTINESUIVPROC glUniformSubroutinesuiv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
extern PFNGLUXGETUNIFORMSUBROUTINEUIVPROC glGetUniformSubroutineuiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
extern PFNGLUXGETPROGRAMSTAGEIVPROC glGetProgramStageiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Jan  4 09:27:54 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_shader_subroutine__
#define __GLUX_GL_ARB_shader_subroutine__

GLUX_NEW_PLUGIN(GL_ARB_shader_subroutine);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ACTIVE_SUBROUTINES
#  define GL_ACTIVE_SUBROUTINES 0x8DE5
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORMS
#  define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#endif
#ifndef GL_ACTIVE_SUBROUTINE_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#endif
#ifndef GL_MAX_SUBROUTINES
#  define GL_MAX_SUBROUTINES 0x8DE7
#endif
#ifndef GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#endif
#ifndef GL_NUM_COMPATIBLE_SUBROUTINES
#  define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#endif
#ifndef GL_COMPATIBLE_SUBROUTINES
#  define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
typedef GLint (APIENTRYP PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
typedef GLuint (APIENTRYP PFNGLUXGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
typedef void (APIENTRYP PFNGLUXUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
typedef void (APIENTRYP PFNGLUXGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
extern PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC glGetSubroutineUniformLocation;
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
extern PFNGLUXGETSUBROUTINEINDEXPROC glGetSubroutineIndex;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC glGetActiveSubroutineUniformiv;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC glGetActiveSubroutineUniformName;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
extern PFNGLUXGETACTIVESUBROUTINENAMEPROC glGetActiveSubroutineName;
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
extern PFNGLUXUNIFORMSUBROUTINESUIVPROC glUniformSubroutinesuiv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
extern PFNGLUXGETUNIFORMSUBROUTINEUIVPROC glGetUniformSubroutineuiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
extern PFNGLUXGETPROGRAMSTAGEIVPROC glGetProgramStageiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Feb 14 17:16:55 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_shader_subroutine__
#define __GLUX_GL_ARB_shader_subroutine__

GLUX_NEW_PLUGIN(GL_ARB_shader_subroutine);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ACTIVE_SUBROUTINES
#  define GL_ACTIVE_SUBROUTINES 0x8DE5
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORMS
#  define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#endif
#ifndef GL_ACTIVE_SUBROUTINE_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#endif
#ifndef GL_MAX_SUBROUTINES
#  define GL_MAX_SUBROUTINES 0x8DE7
#endif
#ifndef GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#endif
#ifndef GL_NUM_COMPATIBLE_SUBROUTINES
#  define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#endif
#ifndef GL_COMPATIBLE_SUBROUTINES
#  define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
typedef GLint (APIENTRYP PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
typedef GLuint (APIENTRYP PFNGLUXGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
typedef void (APIENTRYP PFNGLUXUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
typedef void (APIENTRYP PFNGLUXGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
extern PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC glGetSubroutineUniformLocation;
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
extern PFNGLUXGETSUBROUTINEINDEXPROC glGetSubroutineIndex;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC glGetActiveSubroutineUniformiv;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC glGetActiveSubroutineUniformName;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
extern PFNGLUXGETACTIVESUBROUTINENAMEPROC glGetActiveSubroutineName;
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
extern PFNGLUXUNIFORMSUBROUTINESUIVPROC glUniformSubroutinesuiv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
extern PFNGLUXGETUNIFORMSUBROUTINEUIVPROC glGetUniformSubroutineuiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
extern PFNGLUXGETPROGRAMSTAGEIVPROC glGetProgramStageiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Sep  7 15:19:01 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_shader_subroutine__
#define __GLUX_GL_ARB_shader_subroutine__

GLUX_NEW_PLUGIN(GL_ARB_shader_subroutine);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ACTIVE_SUBROUTINES
#  define GL_ACTIVE_SUBROUTINES 0x8DE5
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORMS
#  define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#endif
#ifndef GL_ACTIVE_SUBROUTINE_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#endif
#ifndef GL_MAX_SUBROUTINES
#  define GL_MAX_SUBROUTINES 0x8DE7
#endif
#ifndef GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#endif
#ifndef GL_NUM_COMPATIBLE_SUBROUTINES
#  define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#endif
#ifndef GL_COMPATIBLE_SUBROUTINES
#  define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
typedef GLint (APIENTRYP PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
typedef GLuint (APIENTRYP PFNGLUXGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
typedef void (APIENTRYP PFNGLUXUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
typedef void (APIENTRYP PFNGLUXGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
extern PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC glGetSubroutineUniformLocation;
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
extern PFNGLUXGETSUBROUTINEINDEXPROC glGetSubroutineIndex;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC glGetActiveSubroutineUniformiv;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC glGetActiveSubroutineUniformName;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
extern PFNGLUXGETACTIVESUBROUTINENAMEPROC glGetActiveSubroutineName;
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
extern PFNGLUXUNIFORMSUBROUTINESUIVPROC glUniformSubroutinesuiv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
extern PFNGLUXGETUNIFORMSUBROUTINEUIVPROC glGetUniformSubroutineuiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
extern PFNGLUXGETPROGRAMSTAGEIVPROC glGetProgramStageiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Fri Oct  4 19:23:19 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_shader_subroutine__
#define __GLUX_GL_ARB_shader_subroutine__

GLUX_NEW_PLUGIN(GL_ARB_shader_subroutine);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ACTIVE_SUBROUTINES
#  define GL_ACTIVE_SUBROUTINES 0x8DE5
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORMS
#  define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#endif
#ifndef GL_ACTIVE_SUBROUTINE_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#endif
#ifndef GL_MAX_SUBROUTINES
#  define GL_MAX_SUBROUTINES 0x8DE7
#endif
#ifndef GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#endif
#ifndef GL_NUM_COMPATIBLE_SUBROUTINES
#  define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#endif
#ifndef GL_COMPATIBLE_SUBROUTINES
#  define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
typedef GLint (APIENTRYP PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
typedef GLuint (APIENTRYP PFNGLUXGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
typedef void (APIENTRYP PFNGLUXUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
typedef void (APIENTRYP PFNGLUXGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
extern PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC glGetSubroutineUniformLocation;
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
extern PFNGLUXGETSUBROUTINEINDEXPROC glGetSubroutineIndex;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC glGetActiveSubroutineUniformiv;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC glGetActiveSubroutineUniformName;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
extern PFNGLUXGETACTIVESUBROUTINENAMEPROC glGetActiveSubroutineName;
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
extern PFNGLUXUNIFORMSUBROUTINESUIVPROC glUniformSubroutinesuiv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
extern PFNGLUXGETUNIFORMSUBROUTINEUIVPROC glGetUniformSubroutineuiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
extern PFNGLUXGETPROGRAMSTAGEIVPROC glGetProgramStageiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:36:59 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_shader_subroutine__
#define __GLUX_GL_ARB_shader_subroutine__

GLUX_NEW_PLUGIN(GL_ARB_shader_subroutine);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ACTIVE_SUBROUTINES
#  define GL_ACTIVE_SUBROUTINES 0x8DE5
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORMS
#  define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#endif
#ifndef GL_ACTIVE_SUBROUTINE_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#endif
#ifndef GL_MAX_SUBROUTINES
#  define GL_MAX_SUBROUTINES 0x8DE7
#endif
#ifndef GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#endif
#ifndef GL_NUM_COMPATIBLE_SUBROUTINES
#  define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#endif
#ifndef GL_COMPATIBLE_SUBROUTINES
#  define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
typedef GLint (APIENTRYP PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
typedef GLuint (APIENTRYP PFNGLUXGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
typedef void (APIENTRYP PFNGLUXUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
typedef void (APIENTRYP PFNGLUXGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
extern PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC glGetSubroutineUniformLocation;
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
extern PFNGLUXGETSUBROUTINEINDEXPROC glGetSubroutineIndex;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC glGetActiveSubroutineUniformiv;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC glGetActiveSubroutineUniformName;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
extern PFNGLUXGETACTIVESUBROUTINENAMEPROC glGetActiveSubroutineName;
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
extern PFNGLUXUNIFORMSUBROUTINESUIVPROC glUniformSubroutinesuiv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
extern PFNGLUXGETUNIFORMSUBROUTINEUIVPROC glGetUniformSubroutineuiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
extern PFNGLUXGETPROGRAMSTAGEIVPROC glGetProgramStageiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Dec 18 08:37:08 2013)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_shader_subroutine__
#define __GLUX_GL_ARB_shader_subroutine__

GLUX_NEW_PLUGIN(GL_ARB_shader_subroutine);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ACTIVE_SUBROUTINES
#  define GL_ACTIVE_SUBROUTINES 0x8DE5
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORMS
#  define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#endif
#ifndef GL_ACTIVE_SUBROUTINE_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#endif
#ifndef GL_MAX_SUBROUTINES
#  define GL_MAX_SUBROUTINES 0x8DE7
#endif
#ifndef GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#endif
#ifndef GL_NUM_COMPATIBLE_SUBROUTINES
#  define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#endif
#ifndef GL_COMPATIBLE_SUBROUTINES
#  define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
typedef GLint (APIENTRYP PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
typedef GLuint (APIENTRYP PFNGLUXGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
typedef void (APIENTRYP PFNGLUXUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
typedef void (APIENTRYP PFNGLUXGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
extern PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC glGetSubroutineUniformLocation;
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
extern PFNGLUXGETSUBROUTINEINDEXPROC glGetSubroutineIndex;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC glGetActiveSubroutineUniformiv;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC glGetActiveSubroutineUniformName;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
extern PFNGLUXGETACTIVESUBROUTINENAMEPROC glGetActiveSubroutineName;
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
extern PFNGLUXUNIFORMSUBROUTINESUIVPROC glUniformSubroutinesuiv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
extern PFNGLUXGETUNIFORMSUBROUTINEUIVPROC glGetUniformSubroutineuiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
extern PFNGLUXGETPROGRAMSTAGEIVPROC glGetProgramStageiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sat Jan  4 13:28:20 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_shader_subroutine__
#define __GLUX_GL_ARB_shader_subroutine__

GLUX_NEW_PLUGIN(GL_ARB_shader_subroutine);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ACTIVE_SUBROUTINES
#  define GL_ACTIVE_SUBROUTINES 0x8DE5
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORMS
#  define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#endif
#ifndef GL_ACTIVE_SUBROUTINE_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#endif
#ifndef GL_MAX_SUBROUTINES
#  define GL_MAX_SUBROUTINES 0x8DE7
#endif
#ifndef GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#endif
#ifndef GL_NUM_COMPATIBLE_SUBROUTINES
#  define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#endif
#ifndef GL_COMPATIBLE_SUBROUTINES
#  define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
typedef GLint (APIENTRYP PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
typedef GLuint (APIENTRYP PFNGLUXGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
typedef void (APIENTRYP PFNGLUXUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
typedef void (APIENTRYP PFNGLUXGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
extern PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC glGetSubroutineUniformLocation;
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
extern PFNGLUXGETSUBROUTINEINDEXPROC glGetSubroutineIndex;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC glGetActiveSubroutineUniformiv;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC glGetActiveSubroutineUniformName;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
extern PFNGLUXGETACTIVESUBROUTINENAMEPROC glGetActiveSubroutineName;
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
extern PFNGLUXUNIFORMSUBROUTINESUIVPROC glUniformSubroutinesuiv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
extern PFNGLUXGETUNIFORMSUBROUTINEUIVPROC glGetUniformSubroutineuiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
extern PFNGLUXGETPROGRAMSTAGEIVPROC glGetProgramStageiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 18:51:58 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_shader_subroutine__
#define __GLUX_GL_ARB_shader_subroutine__

GLUX_NEW_PLUGIN(GL_ARB_shader_subroutine);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ACTIVE_SUBROUTINES
#  define GL_ACTIVE_SUBROUTINES 0x8DE5
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORMS
#  define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#endif
#ifndef GL_ACTIVE_SUBROUTINE_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#endif
#ifndef GL_MAX_SUBROUTINES
#  define GL_MAX_SUBROUTINES 0x8DE7
#endif
#ifndef GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#endif
#ifndef GL_NUM_COMPATIBLE_SUBROUTINES
#  define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#endif
#ifndef GL_COMPATIBLE_SUBROUTINES
#  define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
typedef GLint (APIENTRYP PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
typedef GLuint (APIENTRYP PFNGLUXGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
typedef void (APIENTRYP PFNGLUXUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
typedef void (APIENTRYP PFNGLUXGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
extern PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC glGetSubroutineUniformLocation;
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
extern PFNGLUXGETSUBROUTINEINDEXPROC glGetSubroutineIndex;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC glGetActiveSubroutineUniformiv;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC glGetActiveSubroutineUniformName;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
extern PFNGLUXGETACTIVESUBROUTINENAMEPROC glGetActiveSubroutineName;
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
extern PFNGLUXUNIFORMSUBROUTINESUIVPROC glUniformSubroutinesuiv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
extern PFNGLUXGETUNIFORMSUBROUTINEUIVPROC glGetUniformSubroutineuiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
extern PFNGLUXGETPROGRAMSTAGEIVPROC glGetProgramStageiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan  7 19:31:51 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_shader_subroutine__
#define __GLUX_GL_ARB_shader_subroutine__

GLUX_NEW_PLUGIN(GL_ARB_shader_subroutine);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ACTIVE_SUBROUTINES
#  define GL_ACTIVE_SUBROUTINES 0x8DE5
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORMS
#  define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#endif
#ifndef GL_ACTIVE_SUBROUTINE_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#endif
#ifndef GL_MAX_SUBROUTINES
#  define GL_MAX_SUBROUTINES 0x8DE7
#endif
#ifndef GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#endif
#ifndef GL_NUM_COMPATIBLE_SUBROUTINES
#  define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#endif
#ifndef GL_COMPATIBLE_SUBROUTINES
#  define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
typedef GLint (APIENTRYP PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
typedef GLuint (APIENTRYP PFNGLUXGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
typedef void (APIENTRYP PFNGLUXUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
typedef void (APIENTRYP PFNGLUXGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
extern PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC glGetSubroutineUniformLocation;
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
extern PFNGLUXGETSUBROUTINEINDEXPROC glGetSubroutineIndex;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC glGetActiveSubroutineUniformiv;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC glGetActiveSubroutineUniformName;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
extern PFNGLUXGETACTIVESUBROUTINENAMEPROC glGetActiveSubroutineName;
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
extern PFNGLUXUNIFORMSUBROUTINESUIVPROC glUniformSubroutinesuiv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
extern PFNGLUXGETUNIFORMSUBROUTINEUIVPROC glGetUniformSubroutineuiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
extern PFNGLUXGETPROGRAMSTAGEIVPROC glGetProgramStageiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Jan 14 20:41:02 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_shader_subroutine__
#define __GLUX_GL_ARB_shader_subroutine__

GLUX_NEW_PLUGIN(GL_ARB_shader_subroutine);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ACTIVE_SUBROUTINES
#  define GL_ACTIVE_SUBROUTINES 0x8DE5
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORMS
#  define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#endif
#ifndef GL_ACTIVE_SUBROUTINE_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#endif
#ifndef GL_MAX_SUBROUTINES
#  define GL_MAX_SUBROUTINES 0x8DE7
#endif
#ifndef GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#endif
#ifndef GL_NUM_COMPATIBLE_SUBROUTINES
#  define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#endif
#ifndef GL_COMPATIBLE_SUBROUTINES
#  define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
typedef GLint (APIENTRYP PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
typedef GLuint (APIENTRYP PFNGLUXGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
typedef void (APIENTRYP PFNGLUXUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
typedef void (APIENTRYP PFNGLUXGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
extern PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC glGetSubroutineUniformLocation;
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
extern PFNGLUXGETSUBROUTINEINDEXPROC glGetSubroutineIndex;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC glGetActiveSubroutineUniformiv;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC glGetActiveSubroutineUniformName;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
extern PFNGLUXGETACTIVESUBROUTINENAMEPROC glGetActiveSubroutineName;
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
extern PFNGLUXUNIFORMSUBROUTINESUIVPROC glUniformSubroutinesuiv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
extern PFNGLUXGETUNIFORMSUBROUTINEUIVPROC glGetUniformSubroutineuiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
extern PFNGLUXGETPROGRAMSTAGEIVPROC glGetProgramStageiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 09:20:22 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_shader_subroutine__
#define __GLUX_GL_ARB_shader_subroutine__

GLUX_NEW_PLUGIN(GL_ARB_shader_subroutine);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ACTIVE_SUBROUTINES
#  define GL_ACTIVE_SUBROUTINES 0x8DE5
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORMS
#  define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#endif
#ifndef GL_ACTIVE_SUBROUTINE_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#endif
#ifndef GL_MAX_SUBROUTINES
#  define GL_MAX_SUBROUTINES 0x8DE7
#endif
#ifndef GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#endif
#ifndef GL_NUM_COMPATIBLE_SUBROUTINES
#  define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#endif
#ifndef GL_COMPATIBLE_SUBROUTINES
#  define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
typedef GLint (APIENTRYP PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
typedef GLuint (APIENTRYP PFNGLUXGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
typedef void (APIENTRYP PFNGLUXUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
typedef void (APIENTRYP PFNGLUXGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
extern PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC glGetSubroutineUniformLocation;
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
extern PFNGLUXGETSUBROUTINEINDEXPROC glGetSubroutineIndex;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC glGetActiveSubroutineUniformiv;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC glGetActiveSubroutineUniformName;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
extern PFNGLUXGETACTIVESUBROUTINENAMEPROC glGetActiveSubroutineName;
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
extern PFNGLUXUNIFORMSUBROUTINESUIVPROC glUniformSubroutinesuiv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
extern PFNGLUXGETUNIFORMSUBROUTINEUIVPROC glGetUniformSubroutineuiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
extern PFNGLUXGETPROGRAMSTAGEIVPROC glGetProgramStageiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue Feb 11 10:46:25 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_shader_subroutine__
#define __GLUX_GL_ARB_shader_subroutine__

GLUX_NEW_PLUGIN(GL_ARB_shader_subroutine);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ACTIVE_SUBROUTINES
#  define GL_ACTIVE_SUBROUTINES 0x8DE5
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORMS
#  define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#endif
#ifndef GL_ACTIVE_SUBROUTINE_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#endif
#ifndef GL_MAX_SUBROUTINES
#  define GL_MAX_SUBROUTINES 0x8DE7
#endif
#ifndef GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#endif
#ifndef GL_NUM_COMPATIBLE_SUBROUTINES
#  define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#endif
#ifndef GL_COMPATIBLE_SUBROUTINES
#  define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
typedef GLint (APIENTRYP PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
typedef GLuint (APIENTRYP PFNGLUXGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
typedef void (APIENTRYP PFNGLUXUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
typedef void (APIENTRYP PFNGLUXGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
extern PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC glGetSubroutineUniformLocation;
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
extern PFNGLUXGETSUBROUTINEINDEXPROC glGetSubroutineIndex;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC glGetActiveSubroutineUniformiv;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC glGetActiveSubroutineUniformName;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
extern PFNGLUXGETACTIVESUBROUTINENAMEPROC glGetActiveSubroutineName;
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
extern PFNGLUXUNIFORMSUBROUTINESUIVPROC glUniformSubroutinesuiv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
extern PFNGLUXGETUNIFORMSUBROUTINEUIVPROC glGetUniformSubroutineuiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
extern PFNGLUXGETPROGRAMSTAGEIVPROC glGetProgramStageiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Sun May 11 20:41:56 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_shader_subroutine__
#define __GLUX_GL_ARB_shader_subroutine__

GLUX_NEW_PLUGIN(GL_ARB_shader_subroutine);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ACTIVE_SUBROUTINES
#  define GL_ACTIVE_SUBROUTINES 0x8DE5
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORMS
#  define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#endif
#ifndef GL_ACTIVE_SUBROUTINE_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#endif
#ifndef GL_MAX_SUBROUTINES
#  define GL_MAX_SUBROUTINES 0x8DE7
#endif
#ifndef GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#endif
#ifndef GL_NUM_COMPATIBLE_SUBROUTINES
#  define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#endif
#ifndef GL_COMPATIBLE_SUBROUTINES
#  define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
typedef GLint (APIENTRYP PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
typedef GLuint (APIENTRYP PFNGLUXGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
typedef void (APIENTRYP PFNGLUXUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
typedef void (APIENTRYP PFNGLUXGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
extern PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC glGetSubroutineUniformLocation;
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
extern PFNGLUXGETSUBROUTINEINDEXPROC glGetSubroutineIndex;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC glGetActiveSubroutineUniformiv;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC glGetActiveSubroutineUniformName;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
extern PFNGLUXGETACTIVESUBROUTINENAMEPROC glGetActiveSubroutineName;
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
extern PFNGLUXUNIFORMSUBROUTINESUIVPROC glUniformSubroutinesuiv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
extern PFNGLUXGETUNIFORMSUBROUTINEUIVPROC glGetUniformSubroutineuiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
extern PFNGLUXGETPROGRAMSTAGEIVPROC glGetProgramStageiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Tue May 20 01:36:37 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_shader_subroutine__
#define __GLUX_GL_ARB_shader_subroutine__

GLUX_NEW_PLUGIN(GL_ARB_shader_subroutine);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ACTIVE_SUBROUTINES
#  define GL_ACTIVE_SUBROUTINES 0x8DE5
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORMS
#  define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#endif
#ifndef GL_ACTIVE_SUBROUTINE_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#endif
#ifndef GL_MAX_SUBROUTINES
#  define GL_MAX_SUBROUTINES 0x8DE7
#endif
#ifndef GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#endif
#ifndef GL_NUM_COMPATIBLE_SUBROUTINES
#  define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#endif
#ifndef GL_COMPATIBLE_SUBROUTINES
#  define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
typedef GLint (APIENTRYP PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
typedef GLuint (APIENTRYP PFNGLUXGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
typedef void (APIENTRYP PFNGLUXUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
typedef void (APIENTRYP PFNGLUXGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
extern PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC glGetSubroutineUniformLocation;
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
extern PFNGLUXGETSUBROUTINEINDEXPROC glGetSubroutineIndex;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC glGetActiveSubroutineUniformiv;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC glGetActiveSubroutineUniformName;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
extern PFNGLUXGETACTIVESUBROUTINENAMEPROC glGetActiveSubroutineName;
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
extern PFNGLUXUNIFORMSUBROUTINESUIVPROC glUniformSubroutinesuiv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
extern PFNGLUXGETUNIFORMSUBROUTINEUIVPROC glGetUniformSubroutineuiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
extern PFNGLUXGETPROGRAMSTAGEIVPROC glGetProgramStageiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Thu Jun 19 23:09:56 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_shader_subroutine__
#define __GLUX_GL_ARB_shader_subroutine__

GLUX_NEW_PLUGIN(GL_ARB_shader_subroutine);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ACTIVE_SUBROUTINES
#  define GL_ACTIVE_SUBROUTINES 0x8DE5
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORMS
#  define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#endif
#ifndef GL_ACTIVE_SUBROUTINE_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#endif
#ifndef GL_MAX_SUBROUTINES
#  define GL_MAX_SUBROUTINES 0x8DE7
#endif
#ifndef GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#endif
#ifndef GL_NUM_COMPATIBLE_SUBROUTINES
#  define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#endif
#ifndef GL_COMPATIBLE_SUBROUTINES
#  define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
typedef GLint (APIENTRYP PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
typedef GLuint (APIENTRYP PFNGLUXGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
typedef void (APIENTRYP PFNGLUXUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
typedef void (APIENTRYP PFNGLUXGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
extern PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC glGetSubroutineUniformLocation;
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
extern PFNGLUXGETSUBROUTINEINDEXPROC glGetSubroutineIndex;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC glGetActiveSubroutineUniformiv;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC glGetActiveSubroutineUniformName;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
extern PFNGLUXGETACTIVESUBROUTINENAMEPROC glGetActiveSubroutineName;
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
extern PFNGLUXUNIFORMSUBROUTINESUIVPROC glUniformSubroutinesuiv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
extern PFNGLUXGETUNIFORMSUBROUTINEUIVPROC glGetUniformSubroutineuiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
extern PFNGLUXGETPROGRAMSTAGEIVPROC glGetProgramStageiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Wed Jul 30 07:19:57 2014)
// 
// Sylvain Lefebvre - 2002 - Sylvain.Lefebvre@imag.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_shader_subroutine__
#define __GLUX_GL_ARB_shader_subroutine__

GLUX_NEW_PLUGIN(GL_ARB_shader_subroutine);
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ACTIVE_SUBROUTINES
#  define GL_ACTIVE_SUBROUTINES 0x8DE5
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORMS
#  define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#endif
#ifndef GL_ACTIVE_SUBROUTINE_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#endif
#ifndef GL_MAX_SUBROUTINES
#  define GL_MAX_SUBROUTINES 0x8DE7
#endif
#ifndef GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#endif
#ifndef GL_NUM_COMPATIBLE_SUBROUTINES
#  define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#endif
#ifndef GL_COMPATIBLE_SUBROUTINES
#  define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
typedef GLint (APIENTRYP PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
typedef GLuint (APIENTRYP PFNGLUXGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
typedef void (APIENTRYP PFNGLUXUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
typedef void (APIENTRYP PFNGLUXGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
extern PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC glGetSubroutineUniformLocation;
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
extern PFNGLUXGETSUBROUTINEINDEXPROC glGetSubroutineIndex;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC glGetActiveSubroutineUniformiv;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC glGetActiveSubroutineUniformName;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
extern PFNGLUXGETACTIVESUBROUTINENAMEPROC glGetActiveSubroutineName;
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
extern PFNGLUXUNIFORMSUBROUTINESUIVPROC glUniformSubroutinesuiv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
extern PFNGLUXGETUNIFORMSUBROUTINEUIVPROC glGetUniformSubroutineuiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
extern PFNGLUXGETPROGRAMSTAGEIVPROC glGetProgramStageiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------

// --------------------------------------------------------
// Generated by glux perl script (Mon Feb 23 17:42:55 2015)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#ifdef WIN32
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#ifdef WIN32
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
#  include "glux_apple_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_shader_subroutine__
#define __GLUX_GL_ARB_shader_subroutine__

GLUX_NEW_PLUGIN(GL_ARB_shader_subroutine)
// --------------------------------------------------------
//           Extension conditions
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GL_ACTIVE_SUBROUTINES
#  define GL_ACTIVE_SUBROUTINES 0x8DE5
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORMS
#  define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#endif
#ifndef GL_ACTIVE_SUBROUTINE_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#endif
#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
#  define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#endif
#ifndef GL_MAX_SUBROUTINES
#  define GL_MAX_SUBROUTINES 0x8DE7
#endif
#ifndef GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
#  define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#endif
#ifndef GL_NUM_COMPATIBLE_SUBROUTINES
#  define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#endif
#ifndef GL_COMPATIBLE_SUBROUTINES
#  define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
typedef GLint (APIENTRYP PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
typedef GLuint (APIENTRYP PFNGLUXGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
typedef void (APIENTRYP PFNGLUXGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
typedef void (APIENTRYP PFNGLUXUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
typedef void (APIENTRYP PFNGLUXGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetSubroutineUniformLocation
extern PFNGLUXGETSUBROUTINEUNIFORMLOCATIONPROC glGetSubroutineUniformLocation;
#endif
#ifndef __GLUX__GLFCT_glGetSubroutineIndex
extern PFNGLUXGETSUBROUTINEINDEXPROC glGetSubroutineIndex;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformiv
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMIVPROC glGetActiveSubroutineUniformiv;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineUniformName
extern PFNGLUXGETACTIVESUBROUTINEUNIFORMNAMEPROC glGetActiveSubroutineUniformName;
#endif
#ifndef __GLUX__GLFCT_glGetActiveSubroutineName
extern PFNGLUXGETACTIVESUBROUTINENAMEPROC glGetActiveSubroutineName;
#endif
#ifndef __GLUX__GLFCT_glUniformSubroutinesuiv
extern PFNGLUXUNIFORMSUBROUTINESUIVPROC glUniformSubroutinesuiv;
#endif
#ifndef __GLUX__GLFCT_glGetUniformSubroutineuiv
extern PFNGLUXGETUNIFORMSUBROUTINEUIVPROC glGetUniformSubroutineuiv;
#endif
#ifndef __GLUX__GLFCT_glGetProgramStageiv
extern PFNGLUXGETPROGRAMSTAGEIVPROC glGetProgramStageiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
